import {
  __commonJS,
  __require
} from "./chunk-7FP5O474.js";

// browser-external:fs
var require_fs = __commonJS({
  "browser-external:fs"(exports, module) {
    module.exports = Object.create(new Proxy({}, {
      get(_, key) {
        if (key !== "__esModule" && key !== "__proto__" && key !== "constructor" && key !== "splice") {
          console.warn(`Module "fs" has been externalized for browser compatibility. Cannot access "fs.${key}" in client code. See http://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`);
        }
      }
    }));
  }
});

// browser-external:path
var require_path = __commonJS({
  "browser-external:path"(exports, module) {
    module.exports = Object.create(new Proxy({}, {
      get(_, key) {
        if (key !== "__esModule" && key !== "__proto__" && key !== "constructor" && key !== "splice") {
          console.warn(`Module "path" has been externalized for browser compatibility. Cannot access "path.${key}" in client code. See http://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`);
        }
      }
    }));
  }
});

// node_modules/ammo.js/ammo.js
var require_ammo = __commonJS({
  "node_modules/ammo.js/ammo.js"(exports, module) {
    (function(root, factory) {
      if (typeof define === "function" && define.amd)
        define(factory);
      else if (typeof exports !== "undefined")
        module.exports = factory();
      else
        root.Ammo = factory();
    })(exports, function() {
      var Ammo = function(Module) {
        Module = Module || {};
        var Module;
        if (!Module)
          Module = (typeof Ammo !== "undefined" ? Ammo : null) || {};
        var moduleOverrides = {};
        for (var key in Module) {
          if (Module.hasOwnProperty(key)) {
            moduleOverrides[key] = Module[key];
          }
        }
        var ENVIRONMENT_IS_WEB = false;
        var ENVIRONMENT_IS_WORKER = false;
        var ENVIRONMENT_IS_NODE = false;
        var ENVIRONMENT_IS_SHELL = false;
        if (Module["ENVIRONMENT"]) {
          if (Module["ENVIRONMENT"] === "WEB") {
            ENVIRONMENT_IS_WEB = true;
          } else if (Module["ENVIRONMENT"] === "WORKER") {
            ENVIRONMENT_IS_WORKER = true;
          } else if (Module["ENVIRONMENT"] === "NODE") {
            ENVIRONMENT_IS_NODE = true;
          } else if (Module["ENVIRONMENT"] === "SHELL") {
            ENVIRONMENT_IS_SHELL = true;
          } else {
            throw new Error("The provided Module['ENVIRONMENT'] value is not valid. It must be one of: WEB|WORKER|NODE|SHELL.");
          }
        } else {
          ENVIRONMENT_IS_WEB = typeof window === "object";
          ENVIRONMENT_IS_WORKER = typeof importScripts === "function";
          ENVIRONMENT_IS_NODE = typeof process === "object" && typeof __require === "function" && !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_WORKER;
          ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;
        }
        if (ENVIRONMENT_IS_NODE) {
          if (!Module["print"])
            Module["print"] = console.log;
          if (!Module["printErr"])
            Module["printErr"] = console.warn;
          var nodeFS;
          var nodePath;
          Module["read"] = function read2(filename, binary) {
            if (!nodeFS)
              nodeFS = require_fs();
            if (!nodePath)
              nodePath = require_path();
            filename = nodePath["normalize"](filename);
            var ret = nodeFS["readFileSync"](filename);
            if (!ret && filename != nodePath["resolve"](filename)) {
              filename = path.join(__dirname, "..", "src", filename);
              ret = nodeFS["readFileSync"](filename);
            }
            if (ret && !binary)
              ret = ret.toString();
            return ret;
          };
          Module["readBinary"] = function readBinary(filename) {
            var ret = Module["read"](filename, true);
            if (!ret.buffer) {
              ret = new Uint8Array(ret);
            }
            assert(ret.buffer);
            return ret;
          };
          Module["load"] = function load(f) {
            globalEval(read(f));
          };
          if (!Module["thisProgram"]) {
            if (process["argv"].length > 1) {
              Module["thisProgram"] = process["argv"][1].replace(/\\/g, "/");
            } else {
              Module["thisProgram"] = "unknown-program";
            }
          }
          Module["arguments"] = process["argv"].slice(2);
          if (typeof module !== "undefined") {
            module["exports"] = Module;
          }
          process["on"]("uncaughtException", function(ex) {
            if (!(ex instanceof ExitStatus)) {
              throw ex;
            }
          });
          Module["inspect"] = function() {
            return "[Emscripten Module object]";
          };
        } else if (ENVIRONMENT_IS_SHELL) {
          if (!Module["print"])
            Module["print"] = print;
          if (typeof printErr != "undefined")
            Module["printErr"] = printErr;
          if (typeof read != "undefined") {
            Module["read"] = read;
          } else {
            Module["read"] = function read2() {
              throw "no read() available (jsc?)";
            };
          }
          Module["readBinary"] = function readBinary(f) {
            if (typeof readbuffer === "function") {
              return new Uint8Array(readbuffer(f));
            }
            var data = read(f, "binary");
            assert(typeof data === "object");
            return data;
          };
          if (typeof scriptArgs != "undefined") {
            Module["arguments"] = scriptArgs;
          } else if (typeof arguments != "undefined") {
            Module["arguments"] = arguments;
          }
        } else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {
          Module["read"] = function read2(url) {
            var xhr = new XMLHttpRequest();
            xhr.open("GET", url, false);
            xhr.send(null);
            return xhr.responseText;
          };
          Module["readAsync"] = function readAsync(url, onload, onerror) {
            var xhr = new XMLHttpRequest();
            xhr.open("GET", url, true);
            xhr.responseType = "arraybuffer";
            xhr.onload = function xhr_onload() {
              if (xhr.status == 200 || xhr.status == 0 && xhr.response) {
                onload(xhr.response);
              } else {
                onerror();
              }
            };
            xhr.onerror = onerror;
            xhr.send(null);
          };
          if (typeof arguments != "undefined") {
            Module["arguments"] = arguments;
          }
          if (typeof console !== "undefined") {
            if (!Module["print"])
              Module["print"] = function print2(x) {
                console.log(x);
              };
            if (!Module["printErr"])
              Module["printErr"] = function printErr2(x) {
                console.warn(x);
              };
          } else {
            var TRY_USE_DUMP = false;
            if (!Module["print"])
              Module["print"] = TRY_USE_DUMP && typeof dump !== "undefined" ? function(x) {
                dump(x);
              } : function(x) {
              };
          }
          if (ENVIRONMENT_IS_WORKER) {
            Module["load"] = importScripts;
          }
          if (typeof Module["setWindowTitle"] === "undefined") {
            Module["setWindowTitle"] = function(title) {
              document.title = title;
            };
          }
        } else {
          throw "Unknown runtime environment. Where are we?";
        }
        function globalEval(x) {
          abort("NO_DYNAMIC_EXECUTION=1 was set, cannot eval");
        }
        if (!Module["load"] && Module["read"]) {
          Module["load"] = function load(f) {
            globalEval(Module["read"](f));
          };
        }
        if (!Module["print"]) {
          Module["print"] = function() {
          };
        }
        if (!Module["printErr"]) {
          Module["printErr"] = Module["print"];
        }
        if (!Module["arguments"]) {
          Module["arguments"] = [];
        }
        if (!Module["thisProgram"]) {
          Module["thisProgram"] = "./this.program";
        }
        Module.print = Module["print"];
        Module.printErr = Module["printErr"];
        Module["preRun"] = [];
        Module["postRun"] = [];
        for (var key in moduleOverrides) {
          if (moduleOverrides.hasOwnProperty(key)) {
            Module[key] = moduleOverrides[key];
          }
        }
        moduleOverrides = void 0;
        var Runtime = { setTempRet0: function(value) {
          tempRet0 = value;
        }, getTempRet0: function() {
          return tempRet0;
        }, stackSave: function() {
          return STACKTOP;
        }, stackRestore: function(stackTop) {
          STACKTOP = stackTop;
        }, getNativeTypeSize: function(type) {
          switch (type) {
            case "i1":
            case "i8":
              return 1;
            case "i16":
              return 2;
            case "i32":
              return 4;
            case "i64":
              return 8;
            case "float":
              return 4;
            case "double":
              return 8;
            default: {
              if (type[type.length - 1] === "*") {
                return Runtime.QUANTUM_SIZE;
              } else if (type[0] === "i") {
                var bits = parseInt(type.substr(1));
                assert(bits % 8 === 0);
                return bits / 8;
              } else {
                return 0;
              }
            }
          }
        }, getNativeFieldSize: function(type) {
          return Math.max(Runtime.getNativeTypeSize(type), Runtime.QUANTUM_SIZE);
        }, STACK_ALIGN: 16, prepVararg: function(ptr, type) {
          if (type === "double" || type === "i64") {
            if (ptr & 7) {
              assert((ptr & 7) === 4);
              ptr += 4;
            }
          } else {
            assert((ptr & 3) === 0);
          }
          return ptr;
        }, getAlignSize: function(type, size, vararg) {
          if (!vararg && (type == "i64" || type == "double"))
            return 8;
          if (!type)
            return Math.min(size, 8);
          return Math.min(size || (type ? Runtime.getNativeFieldSize(type) : 0), Runtime.QUANTUM_SIZE);
        }, dynCall: function(sig, ptr, args) {
          if (args && args.length) {
            if (!args.splice)
              args = Array.prototype.slice.call(args);
            args.splice(0, 0, ptr);
            return Module["dynCall_" + sig].apply(null, args);
          } else {
            return Module["dynCall_" + sig].call(null, ptr);
          }
        }, functionPointers: [], addFunction: function(func) {
          for (var i = 0; i < Runtime.functionPointers.length; i++) {
            if (!Runtime.functionPointers[i]) {
              Runtime.functionPointers[i] = func;
              return 2 * (1 + i);
            }
          }
          throw "Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS.";
        }, removeFunction: function(index) {
          Runtime.functionPointers[(index - 2) / 2] = null;
        }, warnOnce: function(text) {
          if (!Runtime.warnOnce.shown)
            Runtime.warnOnce.shown = {};
          if (!Runtime.warnOnce.shown[text]) {
            Runtime.warnOnce.shown[text] = 1;
            Module.printErr(text);
          }
        }, funcWrappers: {}, getFuncWrapper: function(func, sig) {
          assert(sig);
          if (!Runtime.funcWrappers[sig]) {
            Runtime.funcWrappers[sig] = {};
          }
          var sigCache = Runtime.funcWrappers[sig];
          if (!sigCache[func]) {
            sigCache[func] = function dynCall_wrapper() {
              return Runtime.dynCall(sig, func, arguments);
            };
          }
          return sigCache[func];
        }, getCompilerSetting: function(name) {
          throw "You must build with -s RETAIN_COMPILER_SETTINGS=1 for Runtime.getCompilerSetting or emscripten_get_compiler_setting to work";
        }, stackAlloc: function(size) {
          var ret = STACKTOP;
          STACKTOP = STACKTOP + size | 0;
          STACKTOP = STACKTOP + 15 & -16;
          return ret;
        }, staticAlloc: function(size) {
          var ret = STATICTOP;
          STATICTOP = STATICTOP + size | 0;
          STATICTOP = STATICTOP + 15 & -16;
          return ret;
        }, dynamicAlloc: function(size) {
          var ret = DYNAMICTOP;
          DYNAMICTOP = DYNAMICTOP + size | 0;
          DYNAMICTOP = DYNAMICTOP + 15 & -16;
          if (DYNAMICTOP >= TOTAL_MEMORY) {
            var success = enlargeMemory();
            if (!success) {
              DYNAMICTOP = ret;
              return 0;
            }
          }
          return ret;
        }, alignMemory: function(size, quantum) {
          var ret = size = Math.ceil(size / (quantum ? quantum : 16)) * (quantum ? quantum : 16);
          return ret;
        }, makeBigInt: function(low, high, unsigned) {
          var ret = unsigned ? +(low >>> 0) + +(high >>> 0) * 4294967296 : +(low >>> 0) + +(high | 0) * 4294967296;
          return ret;
        }, GLOBAL_BASE: 8, QUANTUM_SIZE: 4, __dummy__: 0 };
        Module["Runtime"] = Runtime;
        var ABORT = false;
        var EXITSTATUS = 0;
        function assert(condition, text) {
          if (!condition) {
            abort("Assertion failed: " + text);
          }
        }
        function getCFunc(ident) {
          var func = Module["_" + ident];
          if (!func) {
            abort("NO_DYNAMIC_EXECUTION=1 was set, cannot eval");
          }
          assert(func, "Cannot call unknown function " + ident + " (perhaps LLVM optimizations or closure removed it?)");
          return func;
        }
        var cwrap, ccall;
        (function() {
          var JSfuncs = { "stackSave": function() {
            Runtime.stackSave();
          }, "stackRestore": function() {
            Runtime.stackRestore();
          }, "arrayToC": function(arr) {
            var ret = Runtime.stackAlloc(arr.length);
            writeArrayToMemory(arr, ret);
            return ret;
          }, "stringToC": function(str) {
            var ret = 0;
            if (str !== null && str !== void 0 && str !== 0) {
              ret = Runtime.stackAlloc((str.length << 2) + 1);
              writeStringToMemory(str, ret);
            }
            return ret;
          } };
          var toC = { "string": JSfuncs["stringToC"], "array": JSfuncs["arrayToC"] };
          ccall = function ccallFunc(ident, returnType, argTypes, args, opts) {
            var func = getCFunc(ident);
            var cArgs = [];
            var stack = 0;
            if (args) {
              for (var i = 0; i < args.length; i++) {
                var converter = toC[argTypes[i]];
                if (converter) {
                  if (stack === 0)
                    stack = Runtime.stackSave();
                  cArgs[i] = converter(args[i]);
                } else {
                  cArgs[i] = args[i];
                }
              }
            }
            var ret = func.apply(null, cArgs);
            if (returnType === "string")
              ret = Pointer_stringify(ret);
            if (stack !== 0) {
              if (opts && opts.async) {
                EmterpreterAsync.asyncFinalizers.push(function() {
                  Runtime.stackRestore(stack);
                });
                return;
              }
              Runtime.stackRestore(stack);
            }
            return ret;
          };
          cwrap = function cwrap2(ident, returnType, argTypes) {
            return function() {
              return ccall(ident, returnType, argTypes, arguments);
            };
          };
        })();
        Module["ccall"] = ccall;
        Module["cwrap"] = cwrap;
        function setValue(ptr, value, type, noSafe) {
          type = type || "i8";
          if (type.charAt(type.length - 1) === "*")
            type = "i32";
          switch (type) {
            case "i1":
              HEAP8[ptr >> 0] = value;
              break;
            case "i8":
              HEAP8[ptr >> 0] = value;
              break;
            case "i16":
              HEAP16[ptr >> 1] = value;
              break;
            case "i32":
              HEAP32[ptr >> 2] = value;
              break;
            case "i64":
              tempI64 = [value >>> 0, (tempDouble = value, +Math_abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math_min(+Math_floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math_ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0)], HEAP32[ptr >> 2] = tempI64[0], HEAP32[ptr + 4 >> 2] = tempI64[1];
              break;
            case "float":
              HEAPF32[ptr >> 2] = value;
              break;
            case "double":
              HEAPF64[ptr >> 3] = value;
              break;
            default:
              abort("invalid type for setValue: " + type);
          }
        }
        Module["setValue"] = setValue;
        function getValue(ptr, type, noSafe) {
          type = type || "i8";
          if (type.charAt(type.length - 1) === "*")
            type = "i32";
          switch (type) {
            case "i1":
              return HEAP8[ptr >> 0];
            case "i8":
              return HEAP8[ptr >> 0];
            case "i16":
              return HEAP16[ptr >> 1];
            case "i32":
              return HEAP32[ptr >> 2];
            case "i64":
              return HEAP32[ptr >> 2];
            case "float":
              return HEAPF32[ptr >> 2];
            case "double":
              return HEAPF64[ptr >> 3];
            default:
              abort("invalid type for setValue: " + type);
          }
          return null;
        }
        Module["getValue"] = getValue;
        var ALLOC_NORMAL = 0;
        var ALLOC_STACK = 1;
        var ALLOC_STATIC = 2;
        var ALLOC_DYNAMIC = 3;
        var ALLOC_NONE = 4;
        Module["ALLOC_NORMAL"] = ALLOC_NORMAL;
        Module["ALLOC_STACK"] = ALLOC_STACK;
        Module["ALLOC_STATIC"] = ALLOC_STATIC;
        Module["ALLOC_DYNAMIC"] = ALLOC_DYNAMIC;
        Module["ALLOC_NONE"] = ALLOC_NONE;
        function allocate(slab, types, allocator, ptr) {
          var zeroinit, size;
          if (typeof slab === "number") {
            zeroinit = true;
            size = slab;
          } else {
            zeroinit = false;
            size = slab.length;
          }
          var singleType = typeof types === "string" ? types : null;
          var ret;
          if (allocator == ALLOC_NONE) {
            ret = ptr;
          } else {
            ret = [typeof _malloc === "function" ? _malloc : Runtime.staticAlloc, Runtime.stackAlloc, Runtime.staticAlloc, Runtime.dynamicAlloc][allocator === void 0 ? ALLOC_STATIC : allocator](Math.max(size, singleType ? 1 : types.length));
          }
          if (zeroinit) {
            var ptr = ret, stop;
            assert((ret & 3) == 0);
            stop = ret + (size & ~3);
            for (; ptr < stop; ptr += 4) {
              HEAP32[ptr >> 2] = 0;
            }
            stop = ret + size;
            while (ptr < stop) {
              HEAP8[ptr++ >> 0] = 0;
            }
            return ret;
          }
          if (singleType === "i8") {
            if (slab.subarray || slab.slice) {
              HEAPU8.set(slab, ret);
            } else {
              HEAPU8.set(new Uint8Array(slab), ret);
            }
            return ret;
          }
          var i = 0, type, typeSize, previousType;
          while (i < size) {
            var curr = slab[i];
            if (typeof curr === "function") {
              curr = Runtime.getFunctionIndex(curr);
            }
            type = singleType || types[i];
            if (type === 0) {
              i++;
              continue;
            }
            if (type == "i64")
              type = "i32";
            setValue(ret + i, curr, type);
            if (previousType !== type) {
              typeSize = Runtime.getNativeTypeSize(type);
              previousType = type;
            }
            i += typeSize;
          }
          return ret;
        }
        Module["allocate"] = allocate;
        function getMemory(size) {
          if (!staticSealed)
            return Runtime.staticAlloc(size);
          if (typeof _sbrk !== "undefined" && !_sbrk.called || !runtimeInitialized)
            return Runtime.dynamicAlloc(size);
          return _malloc(size);
        }
        Module["getMemory"] = getMemory;
        function Pointer_stringify(ptr, length) {
          if (length === 0 || !ptr)
            return "";
          var hasUtf = 0;
          var t;
          var i = 0;
          while (1) {
            t = HEAPU8[ptr + i >> 0];
            hasUtf |= t;
            if (t == 0 && !length)
              break;
            i++;
            if (length && i == length)
              break;
          }
          if (!length)
            length = i;
          var ret = "";
          if (hasUtf < 128) {
            var MAX_CHUNK = 1024;
            var curr;
            while (length > 0) {
              curr = String.fromCharCode.apply(String, HEAPU8.subarray(ptr, ptr + Math.min(length, MAX_CHUNK)));
              ret = ret ? ret + curr : curr;
              ptr += MAX_CHUNK;
              length -= MAX_CHUNK;
            }
            return ret;
          }
          return Module["UTF8ToString"](ptr);
        }
        Module["Pointer_stringify"] = Pointer_stringify;
        function AsciiToString(ptr) {
          var str = "";
          while (1) {
            var ch = HEAP8[ptr++ >> 0];
            if (!ch)
              return str;
            str += String.fromCharCode(ch);
          }
        }
        Module["AsciiToString"] = AsciiToString;
        function stringToAscii(str, outPtr) {
          return writeAsciiToMemory(str, outPtr, false);
        }
        Module["stringToAscii"] = stringToAscii;
        function UTF8ArrayToString(u8Array, idx) {
          var u0, u1, u2, u3, u4, u5;
          var str = "";
          while (1) {
            u0 = u8Array[idx++];
            if (!u0)
              return str;
            if (!(u0 & 128)) {
              str += String.fromCharCode(u0);
              continue;
            }
            u1 = u8Array[idx++] & 63;
            if ((u0 & 224) == 192) {
              str += String.fromCharCode((u0 & 31) << 6 | u1);
              continue;
            }
            u2 = u8Array[idx++] & 63;
            if ((u0 & 240) == 224) {
              u0 = (u0 & 15) << 12 | u1 << 6 | u2;
            } else {
              u3 = u8Array[idx++] & 63;
              if ((u0 & 248) == 240) {
                u0 = (u0 & 7) << 18 | u1 << 12 | u2 << 6 | u3;
              } else {
                u4 = u8Array[idx++] & 63;
                if ((u0 & 252) == 248) {
                  u0 = (u0 & 3) << 24 | u1 << 18 | u2 << 12 | u3 << 6 | u4;
                } else {
                  u5 = u8Array[idx++] & 63;
                  u0 = (u0 & 1) << 30 | u1 << 24 | u2 << 18 | u3 << 12 | u4 << 6 | u5;
                }
              }
            }
            if (u0 < 65536) {
              str += String.fromCharCode(u0);
            } else {
              var ch = u0 - 65536;
              str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023);
            }
          }
        }
        Module["UTF8ArrayToString"] = UTF8ArrayToString;
        function UTF8ToString(ptr) {
          return UTF8ArrayToString(HEAPU8, ptr);
        }
        Module["UTF8ToString"] = UTF8ToString;
        function stringToUTF8Array(str, outU8Array, outIdx, maxBytesToWrite) {
          if (!(maxBytesToWrite > 0))
            return 0;
          var startIdx = outIdx;
          var endIdx = outIdx + maxBytesToWrite - 1;
          for (var i = 0; i < str.length; ++i) {
            var u = str.charCodeAt(i);
            if (u >= 55296 && u <= 57343)
              u = 65536 + ((u & 1023) << 10) | str.charCodeAt(++i) & 1023;
            if (u <= 127) {
              if (outIdx >= endIdx)
                break;
              outU8Array[outIdx++] = u;
            } else if (u <= 2047) {
              if (outIdx + 1 >= endIdx)
                break;
              outU8Array[outIdx++] = 192 | u >> 6;
              outU8Array[outIdx++] = 128 | u & 63;
            } else if (u <= 65535) {
              if (outIdx + 2 >= endIdx)
                break;
              outU8Array[outIdx++] = 224 | u >> 12;
              outU8Array[outIdx++] = 128 | u >> 6 & 63;
              outU8Array[outIdx++] = 128 | u & 63;
            } else if (u <= 2097151) {
              if (outIdx + 3 >= endIdx)
                break;
              outU8Array[outIdx++] = 240 | u >> 18;
              outU8Array[outIdx++] = 128 | u >> 12 & 63;
              outU8Array[outIdx++] = 128 | u >> 6 & 63;
              outU8Array[outIdx++] = 128 | u & 63;
            } else if (u <= 67108863) {
              if (outIdx + 4 >= endIdx)
                break;
              outU8Array[outIdx++] = 248 | u >> 24;
              outU8Array[outIdx++] = 128 | u >> 18 & 63;
              outU8Array[outIdx++] = 128 | u >> 12 & 63;
              outU8Array[outIdx++] = 128 | u >> 6 & 63;
              outU8Array[outIdx++] = 128 | u & 63;
            } else {
              if (outIdx + 5 >= endIdx)
                break;
              outU8Array[outIdx++] = 252 | u >> 30;
              outU8Array[outIdx++] = 128 | u >> 24 & 63;
              outU8Array[outIdx++] = 128 | u >> 18 & 63;
              outU8Array[outIdx++] = 128 | u >> 12 & 63;
              outU8Array[outIdx++] = 128 | u >> 6 & 63;
              outU8Array[outIdx++] = 128 | u & 63;
            }
          }
          outU8Array[outIdx] = 0;
          return outIdx - startIdx;
        }
        Module["stringToUTF8Array"] = stringToUTF8Array;
        function stringToUTF8(str, outPtr, maxBytesToWrite) {
          return stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite);
        }
        Module["stringToUTF8"] = stringToUTF8;
        function lengthBytesUTF8(str) {
          var len = 0;
          for (var i = 0; i < str.length; ++i) {
            var u = str.charCodeAt(i);
            if (u >= 55296 && u <= 57343)
              u = 65536 + ((u & 1023) << 10) | str.charCodeAt(++i) & 1023;
            if (u <= 127) {
              ++len;
            } else if (u <= 2047) {
              len += 2;
            } else if (u <= 65535) {
              len += 3;
            } else if (u <= 2097151) {
              len += 4;
            } else if (u <= 67108863) {
              len += 5;
            } else {
              len += 6;
            }
          }
          return len;
        }
        Module["lengthBytesUTF8"] = lengthBytesUTF8;
        function demangle(func) {
          var hasLibcxxabi = !!Module["___cxa_demangle"];
          if (hasLibcxxabi) {
            try {
              var buf = _malloc(func.length);
              writeStringToMemory(func.substr(1), buf);
              var status = _malloc(4);
              var ret = Module["___cxa_demangle"](buf, 0, 0, status);
              if (getValue(status, "i32") === 0 && ret) {
                return Pointer_stringify(ret);
              }
            } catch (e) {
              return func;
            } finally {
              if (buf)
                _free(buf);
              if (status)
                _free(status);
              if (ret)
                _free(ret);
            }
          }
          Runtime.warnOnce("warning: build with  -s DEMANGLE_SUPPORT=1  to link in libcxxabi demangling");
          return func;
        }
        function demangleAll(text) {
          return text.replace(/__Z[\w\d_]+/g, function(x) {
            var y = demangle(x);
            return x === y ? x : x + " [" + y + "]";
          });
        }
        function jsStackTrace() {
          var err = new Error();
          if (!err.stack) {
            try {
              throw new Error(0);
            } catch (e) {
              err = e;
            }
            if (!err.stack) {
              return "(no stack trace available)";
            }
          }
          return err.stack.toString();
        }
        function stackTrace() {
          return demangleAll(jsStackTrace());
        }
        Module["stackTrace"] = stackTrace;
        function alignMemoryPage(x) {
          if (x % 4096 > 0) {
            x += 4096 - x % 4096;
          }
          return x;
        }
        var HEAP;
        var buffer;
        var HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;
        function updateGlobalBufferViews() {
          Module["HEAP8"] = HEAP8 = new Int8Array(buffer);
          Module["HEAP16"] = HEAP16 = new Int16Array(buffer);
          Module["HEAP32"] = HEAP32 = new Int32Array(buffer);
          Module["HEAPU8"] = HEAPU8 = new Uint8Array(buffer);
          Module["HEAPU16"] = HEAPU16 = new Uint16Array(buffer);
          Module["HEAPU32"] = HEAPU32 = new Uint32Array(buffer);
          Module["HEAPF32"] = HEAPF32 = new Float32Array(buffer);
          Module["HEAPF64"] = HEAPF64 = new Float64Array(buffer);
        }
        var STATIC_BASE = 0, STATICTOP = 0, staticSealed = false;
        var STACK_BASE = 0, STACKTOP = 0, STACK_MAX = 0;
        var DYNAMIC_BASE = 0, DYNAMICTOP = 0;
        function abortOnCannotGrowMemory() {
          abort("Cannot enlarge memory arrays. Either (1) compile with  -s TOTAL_MEMORY=X  with X higher than the current value " + TOTAL_MEMORY + ", (2) compile with  -s ALLOW_MEMORY_GROWTH=1  which adjusts the size at runtime but prevents some optimizations, (3) set Module.TOTAL_MEMORY to a higher value before the program runs, or if you want malloc to return NULL (0) instead of this abort, compile with  -s ABORTING_MALLOC=0 ");
        }
        function enlargeMemory() {
          abortOnCannotGrowMemory();
        }
        var TOTAL_STACK = Module["TOTAL_STACK"] || 5242880;
        var TOTAL_MEMORY = Module["TOTAL_MEMORY"] || 67108864;
        var totalMemory = 64 * 1024;
        while (totalMemory < TOTAL_MEMORY || totalMemory < 2 * TOTAL_STACK) {
          if (totalMemory < 16 * 1024 * 1024) {
            totalMemory *= 2;
          } else {
            totalMemory += 16 * 1024 * 1024;
          }
        }
        if (totalMemory !== TOTAL_MEMORY) {
          TOTAL_MEMORY = totalMemory;
        }
        if (Module["buffer"]) {
          buffer = Module["buffer"];
        } else {
          buffer = new ArrayBuffer(TOTAL_MEMORY);
        }
        updateGlobalBufferViews();
        HEAP32[0] = 255;
        if (HEAPU8[0] !== 255 || HEAPU8[3] !== 0)
          throw "Typed arrays 2 must be run on a little-endian system";
        Module["HEAP"] = HEAP;
        Module["buffer"] = buffer;
        Module["HEAP8"] = HEAP8;
        Module["HEAP16"] = HEAP16;
        Module["HEAP32"] = HEAP32;
        Module["HEAPU8"] = HEAPU8;
        Module["HEAPU16"] = HEAPU16;
        Module["HEAPU32"] = HEAPU32;
        Module["HEAPF32"] = HEAPF32;
        Module["HEAPF64"] = HEAPF64;
        function callRuntimeCallbacks(callbacks) {
          while (callbacks.length > 0) {
            var callback = callbacks.shift();
            if (typeof callback == "function") {
              callback();
              continue;
            }
            var func = callback.func;
            if (typeof func === "number") {
              if (callback.arg === void 0) {
                Runtime.dynCall("v", func);
              } else {
                Runtime.dynCall("vi", func, [callback.arg]);
              }
            } else {
              func(callback.arg === void 0 ? null : callback.arg);
            }
          }
        }
        var __ATPRERUN__ = [];
        var __ATINIT__ = [];
        var __ATMAIN__ = [];
        var __ATEXIT__ = [];
        var __ATPOSTRUN__ = [];
        var runtimeInitialized = false;
        var runtimeExited = false;
        function preRun() {
          if (Module["preRun"]) {
            if (typeof Module["preRun"] == "function")
              Module["preRun"] = [Module["preRun"]];
            while (Module["preRun"].length) {
              addOnPreRun(Module["preRun"].shift());
            }
          }
          callRuntimeCallbacks(__ATPRERUN__);
        }
        function ensureInitRuntime() {
          if (runtimeInitialized)
            return;
          runtimeInitialized = true;
          callRuntimeCallbacks(__ATINIT__);
        }
        function preMain() {
          callRuntimeCallbacks(__ATMAIN__);
        }
        function exitRuntime() {
          callRuntimeCallbacks(__ATEXIT__);
          runtimeExited = true;
        }
        function postRun() {
          if (Module["postRun"]) {
            if (typeof Module["postRun"] == "function")
              Module["postRun"] = [Module["postRun"]];
            while (Module["postRun"].length) {
              addOnPostRun(Module["postRun"].shift());
            }
          }
          callRuntimeCallbacks(__ATPOSTRUN__);
        }
        function addOnPreRun(cb) {
          __ATPRERUN__.unshift(cb);
        }
        Module["addOnPreRun"] = addOnPreRun;
        function addOnInit(cb) {
          __ATINIT__.unshift(cb);
        }
        Module["addOnInit"] = addOnInit;
        function addOnPreMain(cb) {
          __ATMAIN__.unshift(cb);
        }
        Module["addOnPreMain"] = addOnPreMain;
        function addOnExit(cb) {
          __ATEXIT__.unshift(cb);
        }
        Module["addOnExit"] = addOnExit;
        function addOnPostRun(cb) {
          __ATPOSTRUN__.unshift(cb);
        }
        Module["addOnPostRun"] = addOnPostRun;
        function intArrayFromString(stringy, dontAddNull, length) {
          var len = length > 0 ? length : lengthBytesUTF8(stringy) + 1;
          var u8array = new Array(len);
          var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);
          if (dontAddNull)
            u8array.length = numBytesWritten;
          return u8array;
        }
        Module["intArrayFromString"] = intArrayFromString;
        function intArrayToString(array) {
          var ret = [];
          for (var i = 0; i < array.length; i++) {
            var chr = array[i];
            if (chr > 255) {
              chr &= 255;
            }
            ret.push(String.fromCharCode(chr));
          }
          return ret.join("");
        }
        Module["intArrayToString"] = intArrayToString;
        function writeStringToMemory(string, buffer2, dontAddNull) {
          var array = intArrayFromString(string, dontAddNull);
          var i = 0;
          while (i < array.length) {
            var chr = array[i];
            HEAP8[buffer2 + i >> 0] = chr;
            i = i + 1;
          }
        }
        Module["writeStringToMemory"] = writeStringToMemory;
        function writeArrayToMemory(array, buffer2) {
          for (var i = 0; i < array.length; i++) {
            HEAP8[buffer2++ >> 0] = array[i];
          }
        }
        Module["writeArrayToMemory"] = writeArrayToMemory;
        function writeAsciiToMemory(str, buffer2, dontAddNull) {
          for (var i = 0; i < str.length; ++i) {
            HEAP8[buffer2++ >> 0] = str.charCodeAt(i);
          }
          if (!dontAddNull)
            HEAP8[buffer2 >> 0] = 0;
        }
        Module["writeAsciiToMemory"] = writeAsciiToMemory;
        if (!Math["imul"] || Math["imul"](4294967295, 5) !== -5)
          Math["imul"] = function imul(a, b) {
            var ah = a >>> 16;
            var al = a & 65535;
            var bh = b >>> 16;
            var bl = b & 65535;
            return al * bl + (ah * bl + al * bh << 16) | 0;
          };
        Math.imul = Math["imul"];
        if (!Math["clz32"])
          Math["clz32"] = function(x) {
            x = x >>> 0;
            for (var i = 0; i < 32; i++) {
              if (x & 1 << 31 - i)
                return i;
            }
            return 32;
          };
        Math.clz32 = Math["clz32"];
        if (!Math["trunc"])
          Math["trunc"] = function(x) {
            return x < 0 ? Math.ceil(x) : Math.floor(x);
          };
        Math.trunc = Math["trunc"];
        var Math_abs = Math.abs;
        var Math_cos = Math.cos;
        var Math_sin = Math.sin;
        var Math_tan = Math.tan;
        var Math_acos = Math.acos;
        var Math_asin = Math.asin;
        var Math_atan = Math.atan;
        var Math_atan2 = Math.atan2;
        var Math_exp = Math.exp;
        var Math_log = Math.log;
        var Math_sqrt = Math.sqrt;
        var Math_ceil = Math.ceil;
        var Math_floor = Math.floor;
        var Math_pow = Math.pow;
        var Math_imul = Math.imul;
        var Math_fround = Math.fround;
        var Math_min = Math.min;
        var Math_clz32 = Math.clz32;
        var Math_trunc = Math.trunc;
        var runDependencies = 0;
        var runDependencyWatcher = null;
        var dependenciesFulfilled = null;
        function addRunDependency(id) {
          runDependencies++;
          if (Module["monitorRunDependencies"]) {
            Module["monitorRunDependencies"](runDependencies);
          }
        }
        Module["addRunDependency"] = addRunDependency;
        function removeRunDependency(id) {
          runDependencies--;
          if (Module["monitorRunDependencies"]) {
            Module["monitorRunDependencies"](runDependencies);
          }
          if (runDependencies == 0) {
            if (runDependencyWatcher !== null) {
              clearInterval(runDependencyWatcher);
              runDependencyWatcher = null;
            }
            if (dependenciesFulfilled) {
              var callback = dependenciesFulfilled;
              dependenciesFulfilled = null;
              callback();
            }
          }
        }
        Module["removeRunDependency"] = removeRunDependency;
        Module["preloadedImages"] = {};
        Module["preloadedAudios"] = {};
        var ASM_CONSTS = [function($0, $1, $2, $3, $4, $5, $6, $7) {
          {
            var self = Module["getCache"](Module["ConcreteContactResultCallback"])[$0];
            if (!self.hasOwnProperty("addSingleResult"))
              throw "a JSImplementation must implement all functions, you forgot ConcreteContactResultCallback::addSingleResult.";
            return self["addSingleResult"]($1, $2, $3, $4, $5, $6, $7);
          }
        }];
        function _emscripten_asm_const_diiiiiiii(code, a0, a1, a2, a3, a4, a5, a6, a7) {
          return ASM_CONSTS[code](a0, a1, a2, a3, a4, a5, a6, a7);
        }
        STATIC_BASE = 8;
        STATICTOP = STATIC_BASE + 23344;
        __ATINIT__.push({ func: function() {
          __GLOBAL__sub_I_btConeTwistConstraint_cpp();
        } }, { func: function() {
          __GLOBAL__sub_I_btQuickprof_cpp();
        } });
        allocate([36, 32, 0, 0, 209, 32, 0, 0, 76, 32, 0, 0, 183, 32, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 76, 32, 0, 0, 168, 32, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 36, 32, 0, 0, 20, 33, 0, 0, 76, 32, 0, 0, 251, 32, 0, 0, 48, 0, 0, 0, 0, 0, 0, 0, 76, 32, 0, 0, 233, 32, 0, 0, 56, 0, 0, 0, 0, 0, 0, 0, 36, 32, 0, 0, 48, 33, 0, 0, 36, 32, 0, 0, 71, 33, 0, 0, 76, 32, 0, 0, 90, 33, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 76, 32, 0, 0, 109, 33, 0, 0, 96, 0, 0, 0, 0, 0, 0, 0, 76, 32, 0, 0, 130, 33, 0, 0, 96, 0, 0, 0, 0, 0, 0, 0, 76, 32, 0, 0, 152, 33, 0, 0, 96, 0, 0, 0, 0, 0, 0, 0, 36, 32, 0, 0, 175, 33, 0, 0, 36, 32, 0, 0, 190, 33, 0, 0, 76, 32, 0, 0, 214, 33, 0, 0, 56, 0, 0, 0, 0, 0, 0, 0, 76, 32, 0, 0, 245, 33, 0, 0, 216, 0, 0, 0, 0, 0, 0, 0, 36, 32, 0, 0, 118, 34, 0, 0, 76, 32, 0, 0, 138, 34, 0, 0, 216, 0, 0, 0, 0, 0, 0, 0, 36, 32, 0, 0, 248, 34, 0, 0, 76, 32, 0, 0, 100, 35, 0, 0, 88, 0, 0, 0, 0, 0, 0, 0, 76, 32, 0, 0, 133, 35, 0, 0, 248, 0, 0, 0, 0, 0, 0, 0, 76, 32, 0, 0, 162, 35, 0, 0, 40, 1, 0, 0, 0, 0, 0, 0, 36, 32, 0, 0, 181, 35, 0, 0, 76, 32, 0, 0, 220, 35, 0, 0, 168, 0, 0, 0, 0, 0, 0, 0, 76, 32, 0, 0, 244, 35, 0, 0, 216, 0, 0, 0, 0, 0, 0, 0, 36, 32, 0, 0, 14, 36, 0, 0, 36, 32, 0, 0, 61, 36, 0, 0, 136, 32, 0, 0, 54, 37, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 96, 6, 0, 0, 2, 0, 0, 0, 104, 6, 0, 0, 2, 4, 0, 0, 76, 32, 0, 0, 74, 37, 0, 0, 144, 1, 0, 0, 0, 0, 0, 0, 76, 32, 0, 0, 96, 37, 0, 0, 160, 1, 0, 0, 0, 0, 0, 0, 36, 32, 0, 0, 122, 37, 0, 0, 36, 32, 0, 0, 149, 37, 0, 0, 76, 32, 0, 0, 178, 37, 0, 0, 64, 7, 0, 0, 0, 0, 0, 0, 76, 32, 0, 0, 69, 38, 0, 0, 64, 7, 0, 0, 0, 0, 0, 0, 76, 32, 0, 0, 218, 38, 0, 0, 96, 0, 0, 0, 0, 0, 0, 0, 76, 32, 0, 0, 88, 39, 0, 0, 240, 1, 0, 0, 0, 0, 0, 0, 36, 32, 0, 0, 221, 39, 0, 0, 76, 32, 0, 0, 65, 40, 0, 0, 80, 7, 0, 0, 0, 0, 0, 0, 76, 32, 0, 0, 240, 40, 0, 0, 80, 7, 0, 0, 0, 0, 0, 0, 76, 32, 0, 0, 181, 41, 0, 0, 40, 2, 0, 0, 0, 0, 0, 0, 36, 32, 0, 0, 82, 42, 0, 0, 76, 32, 0, 0, 141, 42, 0, 0, 144, 1, 0, 0, 0, 0, 0, 0, 76, 32, 0, 0, 165, 42, 0, 0, 160, 1, 0, 0, 0, 0, 0, 0, 76, 32, 0, 0, 191, 42, 0, 0, 64, 4, 0, 0, 0, 0, 0, 0, 76, 32, 0, 0, 217, 42, 0, 0, 248, 0, 0, 0, 0, 0, 0, 0, 76, 32, 0, 0, 248, 42, 0, 0, 96, 0, 0, 0, 0, 0, 0, 0, 76, 32, 0, 0, 17, 43, 0, 0, 96, 2, 0, 0, 0, 0, 0, 0, 76, 32, 0, 0, 56, 43, 0, 0, 96, 0, 0, 0, 0, 0, 0, 0, 36, 32, 0, 0, 89, 43, 0, 0, 76, 32, 0, 0, 122, 43, 0, 0, 248, 0, 0, 0, 0, 0, 0, 0, 76, 32, 0, 0, 158, 43, 0, 0, 96, 6, 0, 0, 0, 0, 0, 0, 76, 32, 0, 0, 185, 43, 0, 0, 24, 6, 0, 0, 0, 0, 0, 0, 76, 32, 0, 0, 238, 43, 0, 0, 96, 6, 0, 0, 0, 0, 0, 0, 76, 32, 0, 0, 140, 44, 0, 0, 160, 2, 0, 0, 0, 0, 0, 0, 76, 32, 0, 0, 180, 44, 0, 0, 248, 0, 0, 0, 0, 0, 0, 0, 76, 32, 0, 0, 206, 44, 0, 0, 24, 3, 0, 0, 0, 0, 0, 0, 36, 32, 0, 0, 83, 45, 0, 0, 76, 32, 0, 0, 131, 45, 0, 0, 24, 3, 0, 0, 0, 0, 0, 0, 76, 32, 0, 0, 16, 46, 0, 0, 64, 4, 0, 0, 0, 0, 0, 0, 76, 32, 0, 0, 43, 46, 0, 0, 88, 0, 0, 0, 0, 0, 0, 0, 76, 32, 0, 0, 77, 46, 0, 0, 96, 3, 0, 0, 0, 0, 0, 0, 36, 32, 0, 0, 111, 46, 0, 0, 76, 32, 0, 0, 138, 46, 0, 0, 160, 2, 0, 0, 0, 0, 0, 0, 76, 32, 0, 0, 188, 46, 0, 0, 160, 2, 0, 0, 0, 0, 0, 0, 76, 32, 0, 0, 245, 46, 0, 0, 160, 2, 0, 0, 0, 0, 0, 0, 76, 32, 0, 0, 34, 47, 0, 0, 160, 2, 0, 0, 0, 0, 0, 0, 76, 32, 0, 0, 87, 47, 0, 0, 160, 2, 0, 0, 0, 0, 0, 0, 76, 32, 0, 0, 139, 47, 0, 0, 160, 2, 0, 0, 0, 0, 0, 0, 76, 32, 0, 0, 172, 47, 0, 0, 160, 2, 0, 0, 0, 0, 0, 0, 76, 32, 0, 0, 221, 47, 0, 0, 160, 2, 0, 0, 0, 0, 0, 0, 76, 32, 0, 0, 16, 48, 0, 0, 160, 2, 0, 0, 0, 0, 0, 0, 76, 32, 0, 0, 59, 48, 0, 0, 160, 2, 0, 0, 0, 0, 0, 0, 76, 32, 0, 0, 107, 48, 0, 0, 88, 0, 0, 0, 0, 0, 0, 0, 76, 32, 0, 0, 126, 48, 0, 0, 80, 1, 0, 0, 0, 0, 0, 0, 76, 32, 0, 0, 142, 48, 0, 0, 24, 4, 0, 0, 0, 0, 0, 0, 36, 32, 0, 0, 169, 48, 0, 0, 76, 32, 0, 0, 195, 48, 0, 0, 24, 3, 0, 0, 0, 0, 0, 0, 36, 32, 0, 0, 214, 48, 0, 0, 76, 32, 0, 0, 29, 49, 0, 0, 248, 0, 0, 0, 0, 0, 0, 0, 76, 32, 0, 0, 64, 49, 0, 0, 248, 0, 0, 0, 0, 0, 0, 0, 76, 32, 0, 0, 101, 49, 0, 0, 40, 1, 0, 0, 0, 0, 0, 0, 76, 32, 0, 0, 126, 49, 0, 0, 24, 6, 0, 0, 0, 0, 0, 0, 76, 32, 0, 0, 143, 49, 0, 0, 144, 6, 0, 0, 0, 0, 0, 0, 76, 32, 0, 0, 208, 49, 0, 0, 176, 0, 0, 0, 0, 0, 0, 0, 76, 32, 0, 0, 62, 50, 0, 0, 176, 0, 0, 0, 0, 0, 0, 0, 76, 32, 0, 0, 166, 50, 0, 0, 176, 0, 0, 0, 0, 0, 0, 0, 76, 32, 0, 0, 23, 51, 0, 0, 112, 5, 0, 0, 0, 0, 0, 0, 76, 32, 0, 0, 72, 51, 0, 0, 216, 4, 0, 0, 0, 0, 0, 0, 76, 32, 0, 0, 99, 51, 0, 0, 216, 4, 0, 0, 0, 0, 0, 0, 36, 32, 0, 0, 126, 51, 0, 0, 76, 32, 0, 0, 166, 51, 0, 0, 8, 5, 0, 0, 0, 0, 0, 0, 76, 32, 0, 0, 238, 51, 0, 0, 8, 5, 0, 0, 0, 0, 0, 0, 76, 32, 0, 0, 255, 51, 0, 0, 112, 5, 0, 0, 0, 0, 0, 0, 76, 32, 0, 0, 34, 52, 0, 0, 48, 5, 0, 0, 0, 0, 0, 0, 76, 32, 0, 0, 55, 52, 0, 0, 48, 5, 0, 0, 0, 0, 0, 0, 76, 32, 0, 0, 76, 52, 0, 0, 40, 6, 0, 0, 0, 0, 0, 0, 76, 32, 0, 0, 125, 52, 0, 0, 136, 5, 0, 0, 0, 0, 0, 0, 36, 32, 0, 0, 149, 52, 0, 0, 76, 32, 0, 0, 170, 52, 0, 0, 8, 5, 0, 0, 0, 0, 0, 0, 76, 32, 0, 0, 186, 52, 0, 0, 40, 6, 0, 0, 0, 0, 0, 0, 76, 32, 0, 0, 228, 52, 0, 0, 104, 6, 0, 0, 0, 0, 0, 0, 76, 32, 0, 0, 1, 53, 0, 0, 112, 5, 0, 0, 0, 0, 0, 0, 76, 32, 0, 0, 49, 53, 0, 0, 184, 5, 0, 0, 0, 0, 0, 0, 76, 32, 0, 0, 78, 53, 0, 0, 184, 5, 0, 0, 0, 0, 0, 0, 76, 32, 0, 0, 107, 53, 0, 0, 240, 0, 0, 0, 0, 0, 0, 0, 76, 32, 0, 0, 124, 53, 0, 0, 104, 6, 0, 0, 0, 0, 0, 0, 76, 32, 0, 0, 224, 53, 0, 0, 104, 6, 0, 0, 0, 0, 0, 0, 76, 32, 0, 0, 59, 54, 0, 0, 112, 5, 0, 0, 0, 0, 0, 0, 76, 32, 0, 0, 85, 54, 0, 0, 24, 6, 0, 0, 0, 0, 0, 0, 76, 32, 0, 0, 122, 54, 0, 0, 112, 5, 0, 0, 0, 0, 0, 0, 76, 32, 0, 0, 145, 54, 0, 0, 32, 5, 0, 0, 0, 0, 0, 0, 36, 32, 0, 0, 201, 54, 0, 0, 36, 32, 0, 0, 99, 55, 0, 0, 36, 32, 0, 0, 120, 55, 0, 0, 76, 32, 0, 0, 154, 55, 0, 0, 88, 6, 0, 0, 0, 0, 0, 0, 76, 32, 0, 0, 183, 55, 0, 0, 112, 6, 0, 0, 0, 0, 0, 0, 76, 32, 0, 0, 200, 55, 0, 0, 32, 5, 0, 0, 0, 0, 0, 0, 76, 32, 0, 0, 235, 55, 0, 0, 104, 6, 0, 0, 0, 0, 0, 0, 76, 32, 0, 0, 81, 56, 0, 0, 96, 6, 0, 0, 0, 0, 0, 0, 76, 32, 0, 0, 105, 56, 0, 0, 224, 6, 0, 0, 0, 0, 0, 0, 76, 32, 0, 0, 135, 56, 0, 0, 24, 3, 0, 0, 0, 0, 0, 0, 36, 32, 0, 0, 154, 56, 0, 0, 76, 32, 0, 0, 169, 56, 0, 0, 224, 6, 0, 0, 0, 0, 0, 0, 76, 32, 0, 0, 187, 56, 0, 0, 8, 7, 0, 0, 0, 0, 0, 0, 36, 32, 0, 0, 220, 56, 0, 0, 76, 32, 0, 0, 253, 56, 0, 0, 40, 1, 0, 0, 0, 0, 0, 0, 76, 32, 0, 0, 17, 57, 0, 0, 8, 7, 0, 0, 0, 0, 0, 0, 76, 32, 0, 0, 53, 57, 0, 0, 24, 3, 0, 0, 0, 0, 0, 0, 76, 32, 0, 0, 224, 57, 0, 0, 96, 6, 0, 0, 0, 0, 0, 0, 76, 32, 0, 0, 252, 57, 0, 0, 96, 6, 0, 0, 0, 0, 0, 0, 76, 32, 0, 0, 27, 58, 0, 0, 224, 6, 0, 0, 0, 0, 0, 0, 76, 32, 0, 0, 52, 58, 0, 0, 128, 7, 0, 0, 0, 0, 0, 0, 76, 32, 0, 0, 85, 58, 0, 0, 144, 7, 0, 0, 0, 0, 0, 0, 36, 32, 0, 0, 118, 58, 0, 0, 76, 32, 0, 0, 138, 58, 0, 0, 168, 7, 0, 0, 0, 0, 0, 0, 76, 32, 0, 0, 184, 58, 0, 0, 40, 2, 0, 0, 0, 0, 0, 0, 76, 32, 0, 0, 234, 58, 0, 0, 200, 7, 0, 0, 0, 0, 0, 0, 136, 32, 0, 0, 2, 59, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 224, 7, 0, 0, 2, 4, 0, 0, 36, 32, 0, 0, 22, 59, 0, 0, 76, 32, 0, 0, 99, 59, 0, 0, 200, 7, 0, 0, 0, 0, 0, 0, 76, 32, 0, 0, 153, 59, 0, 0, 200, 7, 0, 0, 0, 0, 0, 0, 76, 32, 0, 0, 186, 59, 0, 0, 232, 7, 0, 0, 0, 0, 0, 0, 76, 32, 0, 0, 252, 59, 0, 0, 200, 7, 0, 0, 0, 0, 0, 0, 76, 32, 0, 0, 43, 60, 0, 0, 200, 7, 0, 0, 0, 0, 0, 0, 76, 32, 0, 0, 102, 60, 0, 0, 72, 8, 0, 0, 0, 0, 0, 0, 36, 32, 0, 0, 140, 60, 0, 0, 76, 32, 0, 0, 235, 60, 0, 0, 200, 7, 0, 0, 0, 0, 0, 0, 76, 32, 0, 0, 50, 61, 0, 0, 112, 8, 0, 0, 0, 0, 0, 0, 76, 32, 0, 0, 76, 61, 0, 0, 88, 1, 0, 0, 0, 0, 0, 0, 76, 32, 0, 0, 239, 61, 0, 0, 168, 7, 0, 0, 0, 0, 0, 0, 76, 32, 0, 0, 212, 62, 0, 0, 160, 8, 0, 0, 0, 0, 0, 0, 36, 32, 0, 0, 242, 62, 0, 0, 76, 32, 0, 0, 32, 63, 0, 0, 80, 1, 0, 0, 0, 0, 0, 0, 76, 32, 0, 0, 111, 63, 0, 0, 144, 7, 0, 0, 0, 0, 0, 0, 76, 32, 0, 0, 130, 63, 0, 0, 216, 8, 0, 0, 0, 0, 0, 0, 36, 32, 0, 0, 158, 63, 0, 0, 76, 32, 0, 0, 179, 63, 0, 0, 240, 1, 0, 0, 0, 0, 0, 0, 76, 32, 0, 0, 250, 63, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 36, 32, 0, 0, 26, 64, 0, 0, 76, 32, 0, 0, 110, 65, 0, 0, 24, 9, 0, 0, 0, 0, 0, 0, 36, 32, 0, 0, 133, 65, 0, 0, 76, 32, 0, 0, 149, 65, 0, 0, 48, 0, 0, 0, 0, 0, 0, 0, 36, 32, 0, 0, 50, 76, 0, 0, 76, 32, 0, 0, 16, 76, 0, 0, 88, 9, 0, 0, 0, 0, 0, 0, 76, 32, 0, 0, 189, 75, 0, 0, 56, 9, 0, 0, 0, 0, 0, 0, 76, 32, 0, 0, 226, 75, 0, 0, 104, 9, 0, 0, 0, 0, 0, 0, 36, 32, 0, 0, 3, 76, 0, 0, 76, 32, 0, 0, 248, 76, 0, 0, 48, 9, 0, 0, 0, 0, 0, 0, 76, 32, 0, 0, 56, 77, 0, 0, 88, 9, 0, 0, 0, 0, 0, 0, 76, 32, 0, 0, 20, 77, 0, 0, 128, 9, 0, 0, 0, 0, 0, 0, 76, 32, 0, 0, 90, 77, 0, 0, 56, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 32, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 16, 0, 0, 0, 1, 0, 0, 0, 4, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 72, 0, 0, 0, 5, 0, 0, 0, 6, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 3, 0, 0, 0, 3, 0, 0, 0, 4, 0, 0, 0, 5, 0, 0, 0, 4, 0, 0, 0, 6, 0, 0, 0, 5, 0, 0, 0, 3, 0, 0, 0, 6, 0, 0, 0, 2, 0, 0, 0, 7, 0, 0, 0, 4, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 104, 0, 0, 0, 7, 0, 0, 0, 8, 0, 0, 0, 2, 0, 0, 0, 7, 0, 0, 0, 2, 0, 0, 0, 3, 0, 0, 0, 2, 0, 0, 0, 4, 0, 0, 0, 6, 0, 0, 0, 8, 0, 0, 0, 9, 0, 0, 0, 8, 0, 0, 0, 7, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 120, 0, 0, 0, 10, 0, 0, 0, 11, 0, 0, 0, 9, 0, 0, 0, 8, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 136, 0, 0, 0, 10, 0, 0, 0, 12, 0, 0, 0, 10, 0, 0, 0, 9, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 152, 0, 0, 0, 10, 0, 0, 0, 13, 0, 0, 0, 10, 0, 0, 0, 10, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 184, 0, 0, 0, 14, 0, 0, 0, 15, 0, 0, 0, 3, 0, 0, 0, 2, 0, 0, 0, 11, 0, 0, 0, 10, 0, 0, 0, 11, 0, 0, 0, 12, 0, 0, 0, 12, 0, 0, 0, 13, 0, 0, 0, 13, 0, 0, 0, 11, 0, 0, 0, 14, 0, 0, 0, 4, 0, 0, 0, 14, 0, 0, 0, 12, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 200, 0, 0, 0, 16, 0, 0, 0, 17, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 224, 0, 0, 0, 16, 0, 0, 0, 18, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 240, 0, 0, 0, 19, 0, 0, 0, 20, 0, 0, 0, 3, 0, 0, 0, 15, 0, 0, 0, 5, 0, 0, 0, 14, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 8, 1, 0, 0, 21, 0, 0, 0, 22, 0, 0, 0, 3, 0, 0, 0, 1, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 24, 1, 0, 0, 23, 0, 0, 0, 24, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 48, 1, 0, 0, 25, 0, 0, 0, 26, 0, 0, 0, 4, 0, 0, 0, 6, 0, 0, 0, 17, 0, 0, 0, 18, 0, 0, 0, 7, 0, 0, 0, 8, 0, 0, 0, 5, 0, 0, 0, 16, 0, 0, 0, 5, 0, 0, 0, 17, 0, 0, 0, 18, 0, 0, 0, 19, 0, 0, 0, 6, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 64, 1, 0, 0, 16, 0, 0, 0, 27, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 80, 1, 0, 0, 28, 0, 0, 0, 29, 0, 0, 0, 20, 0, 0, 0, 8, 0, 0, 0, 20, 0, 0, 0, 9, 0, 0, 0, 21, 0, 0, 0, 0, 0, 0, 0, 88, 1, 0, 0, 30, 0, 0, 0, 31, 0, 0, 0, 32, 0, 0, 0, 33, 0, 0, 0, 22, 0, 0, 0, 21, 0, 0, 0, 34, 0, 0, 0, 6, 0, 0, 0, 7, 0, 0, 0, 8, 0, 0, 0, 23, 0, 0, 0, 35, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 96, 1, 0, 0, 36, 0, 0, 0, 37, 0, 0, 0, 9, 0, 0, 0, 10, 0, 0, 0, 252, 255, 255, 255, 96, 1, 0, 0, 38, 0, 0, 0, 39, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 128, 1, 0, 0, 40, 0, 0, 0, 41, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 168, 1, 0, 0, 1, 0, 0, 0, 25, 0, 0, 0, 15, 0, 0, 0, 42, 0, 0, 0, 43, 0, 0, 0, 0, 0, 0, 0, 176, 1, 0, 0, 44, 0, 0, 0, 45, 0, 0, 0, 12, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 192, 1, 0, 0, 44, 0, 0, 0, 46, 0, 0, 0, 12, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 208, 1, 0, 0, 10, 0, 0, 0, 47, 0, 0, 0, 10, 0, 0, 0, 26, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 224, 1, 0, 0, 48, 0, 0, 0, 49, 0, 0, 0, 10, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 248, 1, 0, 0, 44, 0, 0, 0, 50, 0, 0, 0, 13, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 8, 2, 0, 0, 44, 0, 0, 0, 51, 0, 0, 0, 13, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 24, 2, 0, 0, 52, 0, 0, 0, 53, 0, 0, 0, 11, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 48, 2, 0, 0, 40, 0, 0, 0, 54, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 64, 2, 0, 0, 40, 0, 0, 0, 55, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 80, 2, 0, 0, 56, 0, 0, 0, 57, 0, 0, 0, 16, 0, 0, 0, 17, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 96, 2, 0, 0, 58, 0, 0, 0, 59, 0, 0, 0, 5, 0, 0, 0, 2, 0, 0, 0, 27, 0, 0, 0, 0, 0, 0, 0, 112, 2, 0, 0, 10, 0, 0, 0, 60, 0, 0, 0, 10, 0, 0, 0, 28, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 128, 2, 0, 0, 61, 0, 0, 0, 62, 0, 0, 0, 6, 0, 0, 0, 3, 0, 0, 0, 29, 0, 0, 0, 0, 0, 0, 0, 144, 2, 0, 0, 10, 0, 0, 0, 63, 0, 0, 0, 18, 0, 0, 0, 30, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 168, 2, 0, 0, 64, 0, 0, 0, 65, 0, 0, 0, 7, 0, 0, 0, 4, 0, 0, 0, 31, 0, 0, 0, 0, 0, 0, 0, 184, 2, 0, 0, 66, 0, 0, 0, 67, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 200, 2, 0, 0, 68, 0, 0, 0, 69, 0, 0, 0, 15, 0, 0, 0, 19, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 32, 0, 0, 0, 22, 0, 0, 0, 1, 0, 0, 0, 23, 0, 0, 0, 33, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 24, 0, 0, 0, 10, 0, 0, 0, 34, 0, 0, 0, 20, 0, 0, 0, 21, 0, 0, 0, 1, 0, 0, 0, 16, 0, 0, 0, 17, 0, 0, 0, 25, 0, 0, 0, 22, 0, 0, 0, 14, 0, 0, 0, 26, 0, 0, 0, 27, 0, 0, 0, 18, 0, 0, 0, 23, 0, 0, 0, 28, 0, 0, 0, 19, 0, 0, 0, 1, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 216, 2, 0, 0, 44, 0, 0, 0, 70, 0, 0, 0, 21, 0, 0, 0, 0, 0, 0, 0, 232, 2, 0, 0, 71, 0, 0, 0, 72, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 248, 2, 0, 0, 73, 0, 0, 0, 74, 0, 0, 0, 8, 0, 0, 0, 5, 0, 0, 0, 35, 0, 0, 0, 0, 0, 0, 0, 8, 3, 0, 0, 56, 0, 0, 0, 75, 0, 0, 0, 24, 0, 0, 0, 25, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 32, 3, 0, 0, 56, 0, 0, 0, 76, 0, 0, 0, 26, 0, 0, 0, 27, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 48, 3, 0, 0, 56, 0, 0, 0, 77, 0, 0, 0, 16, 0, 0, 0, 17, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 64, 3, 0, 0, 78, 0, 0, 0, 79, 0, 0, 0, 9, 0, 0, 0, 6, 0, 0, 0, 36, 0, 0, 0, 0, 0, 0, 0, 80, 3, 0, 0, 80, 0, 0, 0, 81, 0, 0, 0, 29, 0, 0, 0, 30, 0, 0, 0, 11, 0, 0, 0, 31, 0, 0, 0, 0, 0, 0, 0, 104, 3, 0, 0, 82, 0, 0, 0, 83, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 120, 3, 0, 0, 82, 0, 0, 0, 84, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 136, 3, 0, 0, 82, 0, 0, 0, 85, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 152, 3, 0, 0, 82, 0, 0, 0, 86, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 168, 3, 0, 0, 82, 0, 0, 0, 87, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 184, 3, 0, 0, 82, 0, 0, 0, 88, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 200, 3, 0, 0, 82, 0, 0, 0, 89, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 216, 3, 0, 0, 82, 0, 0, 0, 90, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 232, 3, 0, 0, 82, 0, 0, 0, 91, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 248, 3, 0, 0, 82, 0, 0, 0, 92, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 8, 4, 0, 0, 93, 0, 0, 0, 94, 0, 0, 0, 10, 0, 0, 0, 7, 0, 0, 0, 37, 0, 0, 0, 0, 0, 0, 0, 24, 4, 0, 0, 95, 0, 0, 0, 96, 0, 0, 0, 20, 0, 0, 0, 8, 0, 0, 0, 20, 0, 0, 0, 9, 0, 0, 0, 21, 0, 0, 0, 28, 0, 0, 0, 22, 0, 0, 0, 0, 0, 0, 0, 40, 4, 0, 0, 97, 0, 0, 0, 98, 0, 0, 0, 20, 0, 0, 0, 8, 0, 0, 0, 20, 0, 0, 0, 9, 0, 0, 0, 21, 0, 0, 0, 29, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 56, 4, 0, 0, 99, 0, 0, 0, 100, 0, 0, 0, 12, 0, 0, 0, 13, 0, 0, 0, 32, 0, 0, 0, 0, 0, 0, 0, 64, 4, 0, 0, 56, 0, 0, 0, 101, 0, 0, 0, 16, 0, 0, 0, 17, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 80, 4, 0, 0, 102, 0, 0, 0, 103, 0, 0, 0, 30, 0, 0, 0, 38, 0, 0, 0, 0, 0, 0, 0, 88, 4, 0, 0, 104, 0, 0, 0, 105, 0, 0, 0, 11, 0, 0, 0, 8, 0, 0, 0, 39, 0, 0, 0, 0, 0, 0, 0, 104, 4, 0, 0, 106, 0, 0, 0, 107, 0, 0, 0, 12, 0, 0, 0, 9, 0, 0, 0, 40, 0, 0, 0, 0, 0, 0, 0, 120, 4, 0, 0, 23, 0, 0, 0, 108, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 136, 4, 0, 0, 68, 0, 0, 0, 109, 0, 0, 0, 24, 0, 0, 0, 19, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 41, 0, 0, 0, 22, 0, 0, 0, 2, 0, 0, 0, 33, 0, 0, 0, 33, 0, 0, 0, 3, 0, 0, 0, 2, 0, 0, 0, 24, 0, 0, 0, 10, 0, 0, 0, 34, 0, 0, 0, 31, 0, 0, 0, 32, 0, 0, 0, 1, 0, 0, 0, 25, 0, 0, 0, 17, 0, 0, 0, 34, 0, 0, 0, 33, 0, 0, 0, 14, 0, 0, 0, 35, 0, 0, 0, 36, 0, 0, 0, 26, 0, 0, 0, 34, 0, 0, 0, 37, 0, 0, 0, 27, 0, 0, 0, 2, 0, 0, 0, 35, 0, 0, 0, 0, 0, 0, 0, 152, 4, 0, 0, 110, 0, 0, 0, 111, 0, 0, 0, 28, 0, 0, 0, 19, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 42, 0, 0, 0, 38, 0, 0, 0, 3, 0, 0, 0, 39, 0, 0, 0, 33, 0, 0, 0, 4, 0, 0, 0, 3, 0, 0, 0, 40, 0, 0, 0, 14, 0, 0, 0, 34, 0, 0, 0, 29, 0, 0, 0, 36, 0, 0, 0, 37, 0, 0, 0, 43, 0, 0, 0, 44, 0, 0, 0, 0, 0, 0, 0, 168, 4, 0, 0, 112, 0, 0, 0, 113, 0, 0, 0, 38, 0, 0, 0, 0, 0, 0, 0, 184, 4, 0, 0, 112, 0, 0, 0, 114, 0, 0, 0, 39, 0, 0, 0, 0, 0, 0, 0, 200, 4, 0, 0, 112, 0, 0, 0, 115, 0, 0, 0, 40, 0, 0, 0, 0, 0, 0, 0, 216, 4, 0, 0, 116, 0, 0, 0, 117, 0, 0, 0, 30, 0, 0, 0, 19, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 45, 0, 0, 0, 22, 0, 0, 0, 4, 0, 0, 0, 41, 0, 0, 0, 46, 0, 0, 0, 5, 0, 0, 0, 2, 0, 0, 0, 42, 0, 0, 0, 15, 0, 0, 0, 34, 0, 0, 0, 20, 0, 0, 0, 41, 0, 0, 0, 1, 0, 0, 0, 31, 0, 0, 0, 17, 0, 0, 0, 43, 0, 0, 0, 42, 0, 0, 0, 0, 0, 0, 0, 232, 4, 0, 0, 116, 0, 0, 0, 118, 0, 0, 0, 30, 0, 0, 0, 19, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 45, 0, 0, 0, 22, 0, 0, 0, 4, 0, 0, 0, 44, 0, 0, 0, 46, 0, 0, 0, 5, 0, 0, 0, 2, 0, 0, 0, 42, 0, 0, 0, 15, 0, 0, 0, 34, 0, 0, 0, 20, 0, 0, 0, 41, 0, 0, 0, 1, 0, 0, 0, 31, 0, 0, 0, 17, 0, 0, 0, 43, 0, 0, 0, 42, 0, 0, 0, 0, 0, 0, 0, 248, 4, 0, 0, 116, 0, 0, 0, 119, 0, 0, 0, 30, 0, 0, 0, 19, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 45, 0, 0, 0, 22, 0, 0, 0, 4, 0, 0, 0, 45, 0, 0, 0, 46, 0, 0, 0, 5, 0, 0, 0, 2, 0, 0, 0, 42, 0, 0, 0, 15, 0, 0, 0, 34, 0, 0, 0, 20, 0, 0, 0, 41, 0, 0, 0, 1, 0, 0, 0, 31, 0, 0, 0, 17, 0, 0, 0, 43, 0, 0, 0, 42, 0, 0, 0, 0, 0, 0, 0, 16, 5, 0, 0, 120, 0, 0, 0, 121, 0, 0, 0, 32, 0, 0, 0, 19, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 47, 0, 0, 0, 46, 0, 0, 0, 5, 0, 0, 0, 47, 0, 0, 0, 33, 0, 0, 0, 6, 0, 0, 0, 4, 0, 0, 0, 48, 0, 0, 0, 16, 0, 0, 0, 34, 0, 0, 0, 48, 0, 0, 0, 122, 0, 0, 0, 0, 0, 0, 0, 48, 5, 0, 0, 116, 0, 0, 0, 123, 0, 0, 0, 33, 0, 0, 0, 19, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 49, 0, 0, 0, 22, 0, 0, 0, 6, 0, 0, 0, 49, 0, 0, 0, 50, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 50, 0, 0, 0, 17, 0, 0, 0, 34, 0, 0, 0, 43, 0, 0, 0, 44, 0, 0, 0, 1, 0, 0, 0, 34, 0, 0, 0, 17, 0, 0, 0, 43, 0, 0, 0, 42, 0, 0, 0, 0, 0, 0, 0, 64, 5, 0, 0, 116, 0, 0, 0, 124, 0, 0, 0, 33, 0, 0, 0, 19, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 49, 0, 0, 0, 22, 0, 0, 0, 6, 0, 0, 0, 51, 0, 0, 0, 51, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 50, 0, 0, 0, 17, 0, 0, 0, 34, 0, 0, 0, 43, 0, 0, 0, 44, 0, 0, 0, 1, 0, 0, 0, 34, 0, 0, 0, 17, 0, 0, 0, 43, 0, 0, 0, 42, 0, 0, 0, 0, 0, 0, 0, 80, 5, 0, 0, 116, 0, 0, 0, 125, 0, 0, 0, 33, 0, 0, 0, 19, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 49, 0, 0, 0, 22, 0, 0, 0, 6, 0, 0, 0, 52, 0, 0, 0, 52, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 50, 0, 0, 0, 17, 0, 0, 0, 34, 0, 0, 0, 43, 0, 0, 0, 44, 0, 0, 0, 1, 0, 0, 0, 34, 0, 0, 0, 17, 0, 0, 0, 43, 0, 0, 0, 42, 0, 0, 0, 0, 0, 0, 0, 96, 5, 0, 0, 126, 0, 0, 0, 127, 0, 0, 0, 35, 0, 0, 0, 19, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 53, 0, 0, 0, 22, 0, 0, 0, 7, 0, 0, 0, 53, 0, 0, 0, 33, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 54, 0, 0, 0, 18, 0, 0, 0, 34, 0, 0, 0, 45, 0, 0, 0, 46, 0, 0, 0, 2, 0, 0, 0, 36, 0, 0, 0, 17, 0, 0, 0, 43, 0, 0, 0, 42, 0, 0, 0, 14, 0, 0, 0, 55, 0, 0, 0, 56, 0, 0, 0, 37, 0, 0, 0, 47, 0, 0, 0, 57, 0, 0, 0, 38, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 128, 5, 0, 0, 128, 0, 0, 0, 129, 0, 0, 0, 0, 0, 0, 0, 152, 5, 0, 0, 68, 0, 0, 0, 130, 0, 0, 0, 35, 0, 0, 0, 19, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 54, 0, 0, 0, 58, 0, 0, 0, 7, 0, 0, 0, 59, 0, 0, 0, 33, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 24, 0, 0, 0, 10, 0, 0, 0, 34, 0, 0, 0, 48, 0, 0, 0, 49, 0, 0, 0, 1, 0, 0, 0, 39, 0, 0, 0, 17, 0, 0, 0, 43, 0, 0, 0, 42, 0, 0, 0, 14, 0, 0, 0, 60, 0, 0, 0, 61, 0, 0, 0, 40, 0, 0, 0, 50, 0, 0, 0, 62, 0, 0, 0, 41, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 168, 5, 0, 0, 131, 0, 0, 0, 132, 0, 0, 0, 42, 0, 0, 0, 0, 0, 0, 0, 184, 5, 0, 0, 116, 0, 0, 0, 133, 0, 0, 0, 43, 0, 0, 0, 19, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 55, 0, 0, 0, 22, 0, 0, 0, 8, 0, 0, 0, 63, 0, 0, 0, 56, 0, 0, 0, 7, 0, 0, 0, 2, 0, 0, 0, 64, 0, 0, 0, 19, 0, 0, 0, 34, 0, 0, 0, 51, 0, 0, 0, 52, 0, 0, 0, 1, 0, 0, 0, 44, 0, 0, 0, 17, 0, 0, 0, 43, 0, 0, 0, 42, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 200, 5, 0, 0, 116, 0, 0, 0, 134, 0, 0, 0, 43, 0, 0, 0, 19, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 55, 0, 0, 0, 22, 0, 0, 0, 8, 0, 0, 0, 65, 0, 0, 0, 56, 0, 0, 0, 7, 0, 0, 0, 2, 0, 0, 0, 64, 0, 0, 0, 19, 0, 0, 0, 34, 0, 0, 0, 51, 0, 0, 0, 53, 0, 0, 0, 1, 0, 0, 0, 45, 0, 0, 0, 17, 0, 0, 0, 43, 0, 0, 0, 42, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 216, 5, 0, 0, 116, 0, 0, 0, 135, 0, 0, 0, 43, 0, 0, 0, 19, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 55, 0, 0, 0, 22, 0, 0, 0, 8, 0, 0, 0, 66, 0, 0, 0, 56, 0, 0, 0, 7, 0, 0, 0, 2, 0, 0, 0, 64, 0, 0, 0, 19, 0, 0, 0, 34, 0, 0, 0, 51, 0, 0, 0, 54, 0, 0, 0, 1, 0, 0, 0, 46, 0, 0, 0, 17, 0, 0, 0, 43, 0, 0, 0, 42, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 232, 5, 0, 0, 136, 0, 0, 0, 137, 0, 0, 0, 3, 0, 0, 0, 15, 0, 0, 0, 5, 0, 0, 0, 14, 0, 0, 0, 15, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 248, 5, 0, 0, 131, 0, 0, 0, 138, 0, 0, 0, 47, 0, 0, 0, 0, 0, 0, 0, 8, 6, 0, 0, 131, 0, 0, 0, 139, 0, 0, 0, 48, 0, 0, 0, 0, 0, 0, 0, 24, 6, 0, 0, 68, 0, 0, 0, 140, 0, 0, 0, 33, 0, 0, 0, 19, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 32, 0, 0, 0, 22, 0, 0, 0, 7, 0, 0, 0, 1, 0, 0, 0, 33, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 24, 0, 0, 0, 10, 0, 0, 0, 34, 0, 0, 0, 20, 0, 0, 0, 55, 0, 0, 0, 1, 0, 0, 0, 49, 0, 0, 0, 17, 0, 0, 0, 43, 0, 0, 0, 42, 0, 0, 0, 14, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 56, 6, 0, 0, 116, 0, 0, 0, 141, 0, 0, 0, 50, 0, 0, 0, 19, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 32, 0, 0, 0, 22, 0, 0, 0, 9, 0, 0, 0, 67, 0, 0, 0, 33, 0, 0, 0, 8, 0, 0, 0, 8, 0, 0, 0, 24, 0, 0, 0, 10, 0, 0, 0, 34, 0, 0, 0, 56, 0, 0, 0, 57, 0, 0, 0, 1, 0, 0, 0, 51, 0, 0, 0, 17, 0, 0, 0, 43, 0, 0, 0, 42, 0, 0, 0, 0, 0, 0, 0, 72, 6, 0, 0, 142, 0, 0, 0, 143, 0, 0, 0, 52, 0, 0, 0, 19, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 57, 0, 0, 0, 68, 0, 0, 0, 10, 0, 0, 0, 69, 0, 0, 0, 33, 0, 0, 0, 4, 0, 0, 0, 3, 0, 0, 0, 70, 0, 0, 0, 20, 0, 0, 0, 34, 0, 0, 0, 53, 0, 0, 0, 0, 0, 0, 0, 112, 6, 0, 0, 144, 0, 0, 0, 145, 0, 0, 0, 54, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 58, 0, 0, 0, 59, 0, 0, 0, 71, 0, 0, 0, 60, 0, 0, 0, 61, 0, 0, 0, 72, 0, 0, 0, 58, 0, 0, 0, 59, 0, 0, 0, 73, 0, 0, 0, 21, 0, 0, 0, 0, 0, 0, 0, 128, 6, 0, 0, 146, 0, 0, 0, 147, 0, 0, 0, 54, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 58, 0, 0, 0, 59, 0, 0, 0, 71, 0, 0, 0, 62, 0, 0, 0, 63, 0, 0, 0, 72, 0, 0, 0, 58, 0, 0, 0, 59, 0, 0, 0, 73, 0, 0, 0, 21, 0, 0, 0, 0, 0, 0, 0, 144, 6, 0, 0, 148, 0, 0, 0, 149, 0, 0, 0, 28, 0, 0, 0, 19, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 64, 0, 0, 0, 38, 0, 0, 0, 3, 0, 0, 0, 74, 0, 0, 0, 33, 0, 0, 0, 4, 0, 0, 0, 3, 0, 0, 0, 75, 0, 0, 0, 22, 0, 0, 0, 34, 0, 0, 0, 55, 0, 0, 0, 36, 0, 0, 0, 37, 0, 0, 0, 0, 0, 0, 0, 160, 6, 0, 0, 131, 0, 0, 0, 150, 0, 0, 0, 56, 0, 0, 0, 0, 0, 0, 0, 176, 6, 0, 0, 44, 0, 0, 0, 151, 0, 0, 0, 57, 0, 0, 0, 0, 0, 0, 0, 192, 6, 0, 0, 152, 0, 0, 0, 153, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 208, 6, 0, 0, 56, 0, 0, 0, 154, 0, 0, 0, 60, 0, 0, 0, 61, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 232, 6, 0, 0, 152, 0, 0, 0, 155, 0, 0, 0, 2, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 248, 6, 0, 0, 156, 0, 0, 0, 157, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 16, 7, 0, 0, 23, 0, 0, 0, 158, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 32, 7, 0, 0, 156, 0, 0, 0, 159, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 48, 7, 0, 0, 56, 0, 0, 0, 160, 0, 0, 0, 62, 0, 0, 0, 63, 0, 0, 0, 7, 0, 0, 0, 10, 215, 163, 60, 0, 0, 0, 0, 80, 7, 0, 0, 44, 0, 0, 0, 161, 0, 0, 0, 13, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 96, 7, 0, 0, 152, 0, 0, 0, 162, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 112, 7, 0, 0, 163, 0, 0, 0, 164, 0, 0, 0, 2, 0, 0, 0, 65, 0, 0, 0, 66, 0, 0, 0, 3, 0, 0, 0, 67, 0, 0, 0, 68, 0, 0, 0, 69, 0, 0, 0, 4, 0, 0, 0, 76, 0, 0, 0, 165, 0, 0, 0, 77, 0, 0, 0, 70, 0, 0, 0, 0, 0, 0, 0, 152, 7, 0, 0, 52, 0, 0, 0, 166, 0, 0, 0, 15, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 184, 7, 0, 0, 167, 0, 0, 0, 168, 0, 0, 0, 169, 0, 0, 0, 1, 0, 0, 0, 71, 0, 0, 0, 72, 0, 0, 0, 8, 0, 0, 0, 1, 0, 0, 0, 4, 0, 0, 0, 78, 0, 0, 0, 23, 0, 0, 0, 64, 0, 0, 0, 0, 0, 0, 0, 200, 7, 0, 0, 167, 0, 0, 0, 170, 0, 0, 0, 171, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 9, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 79, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 232, 7, 0, 0, 167, 0, 0, 0, 172, 0, 0, 0, 173, 0, 0, 0, 1, 0, 0, 0, 73, 0, 0, 0, 74, 0, 0, 0, 9, 0, 0, 0, 2, 0, 0, 0, 5, 0, 0, 0, 80, 0, 0, 0, 25, 0, 0, 0, 174, 0, 0, 0, 81, 0, 0, 0, 0, 0, 0, 0, 248, 7, 0, 0, 167, 0, 0, 0, 175, 0, 0, 0, 176, 0, 0, 0, 1, 0, 0, 0, 75, 0, 0, 0, 76, 0, 0, 0, 9, 0, 0, 0, 3, 0, 0, 0, 6, 0, 0, 0, 82, 0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 8, 8, 0, 0, 167, 0, 0, 0, 177, 0, 0, 0, 173, 0, 0, 0, 1, 0, 0, 0, 73, 0, 0, 0, 77, 0, 0, 0, 9, 0, 0, 0, 2, 0, 0, 0, 5, 0, 0, 0, 83, 0, 0, 0, 27, 0, 0, 0, 174, 0, 0, 0, 81, 0, 0, 0, 65, 0, 0, 0, 0, 0, 0, 0, 24, 8, 0, 0, 167, 0, 0, 0, 178, 0, 0, 0, 179, 0, 0, 0, 1, 0, 0, 0, 78, 0, 0, 0, 79, 0, 0, 0, 9, 0, 0, 0, 4, 0, 0, 0, 7, 0, 0, 0, 84, 0, 0, 0, 28, 0, 0, 0, 85, 0, 0, 0, 0, 0, 0, 0, 40, 8, 0, 0, 167, 0, 0, 0, 180, 0, 0, 0, 181, 0, 0, 0, 1, 0, 0, 0, 80, 0, 0, 0, 81, 0, 0, 0, 9, 0, 0, 0, 5, 0, 0, 0, 8, 0, 0, 0, 86, 0, 0, 0, 29, 0, 0, 0, 87, 0, 0, 0, 0, 0, 0, 0, 56, 8, 0, 0, 182, 0, 0, 0, 183, 0, 0, 0, 66, 0, 0, 0, 1, 0, 0, 0, 67, 0, 0, 0, 184, 0, 0, 0, 88, 0, 0, 0, 58, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 80, 8, 0, 0, 167, 0, 0, 0, 185, 0, 0, 0, 171, 0, 0, 0, 1, 0, 0, 0, 82, 0, 0, 0, 83, 0, 0, 0, 9, 0, 0, 0, 6, 0, 0, 0, 9, 0, 0, 0, 89, 0, 0, 0, 30, 0, 0, 0, 90, 0, 0, 0, 0, 0, 0, 0, 96, 8, 0, 0, 186, 0, 0, 0, 187, 0, 0, 0, 32, 0, 0, 0, 33, 0, 0, 0, 22, 0, 0, 0, 21, 0, 0, 0, 188, 0, 0, 0, 6, 0, 0, 0, 7, 0, 0, 0, 59, 0, 0, 0, 84, 0, 0, 0, 35, 0, 0, 0, 85, 0, 0, 0, 1, 0, 0, 0, 68, 0, 0, 0, 86, 0, 0, 0, 87, 0, 0, 0, 88, 0, 0, 0, 89, 0, 0, 0, 90, 0, 0, 0, 189, 0, 0, 0, 91, 0, 0, 0, 60, 0, 0, 0, 92, 0, 0, 0, 93, 0, 0, 0, 91, 0, 0, 0, 92, 0, 0, 0, 16, 0, 0, 0, 17, 0, 0, 0, 93, 0, 0, 0, 190, 0, 0, 0, 94, 0, 0, 0, 95, 0, 0, 0, 96, 0, 0, 0, 97, 0, 0, 0, 9, 0, 0, 0, 10, 0, 0, 0, 191, 0, 0, 0, 98, 0, 0, 0, 11, 0, 0, 0, 12, 0, 0, 0, 13, 0, 0, 0, 99, 0, 0, 0, 192, 0, 0, 0, 100, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 168, 7, 0, 0, 52, 0, 0, 0, 193, 0, 0, 0, 15, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 128, 8, 0, 0, 52, 0, 0, 0, 194, 0, 0, 0, 18, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 144, 8, 0, 0, 195, 0, 0, 0, 196, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 168, 8, 0, 0, 197, 0, 0, 0, 198, 0, 0, 0, 20, 0, 0, 0, 8, 0, 0, 0, 94, 0, 0, 0, 31, 0, 0, 0, 101, 0, 0, 0, 0, 0, 0, 0, 184, 8, 0, 0, 199, 0, 0, 0, 200, 0, 0, 0, 5, 0, 0, 0, 102, 0, 0, 0, 15, 0, 0, 0, 16, 0, 0, 0, 61, 0, 0, 0, 0, 0, 0, 0, 200, 8, 0, 0, 201, 0, 0, 0, 202, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 224, 8, 0, 0, 48, 0, 0, 0, 203, 0, 0, 0, 19, 0, 0, 0, 12, 0, 0, 0, 28, 88, 0, 0, 0, 0, 0, 0, 240, 8, 0, 0, 204, 0, 0, 0, 205, 0, 0, 0, 20, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 8, 9, 0, 0, 206, 0, 0, 0, 207, 0, 0, 0, 103, 0, 0, 0, 104, 0, 0, 0, 0, 0, 0, 0, 32, 9, 0, 0, 208, 0, 0, 0, 209, 0, 0, 0, 32, 0, 0, 0, 18, 0, 0, 0, 69, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 95, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 33, 0, 0, 0, 34, 0, 0, 0, 41, 91, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 56, 9, 0, 0, 210, 0, 0, 0, 211, 0, 0, 0, 212, 0, 0, 0, 213, 0, 0, 0, 35, 0, 0, 0, 4, 0, 0, 0, 15, 0, 0, 0, 62, 0, 0, 0, 0, 0, 0, 0, 72, 9, 0, 0, 210, 0, 0, 0, 214, 0, 0, 0, 212, 0, 0, 0, 213, 0, 0, 0, 35, 0, 0, 0, 5, 0, 0, 0, 16, 0, 0, 0, 63, 0, 0, 0, 0, 0, 0, 0, 112, 9, 0, 0, 215, 0, 0, 0, 216, 0, 0, 0, 96, 0, 0, 0, 0, 0, 0, 0, 160, 9, 0, 0, 210, 0, 0, 0, 217, 0, 0, 0, 212, 0, 0, 0, 213, 0, 0, 0, 35, 0, 0, 0, 6, 0, 0, 0, 17, 0, 0, 0, 64, 0, 0, 0, 49, 50, 98, 116, 65, 120, 105, 115, 83, 119, 101, 101, 112, 51, 0, 50, 48, 98, 116, 65, 120, 105, 115, 83, 119, 101, 101, 112, 51, 73, 110, 116, 101, 114, 110, 97, 108, 73, 116, 69, 0, 50, 49, 98, 116, 66, 114, 111, 97, 100, 112, 104, 97, 115, 101, 73, 110, 116, 101, 114, 102, 97, 99, 101, 0, 49, 53, 98, 116, 78, 117, 108, 108, 80, 97, 105, 114, 67, 97, 99, 104, 101, 0, 50, 50, 98, 116, 79, 118, 101, 114, 108, 97, 112, 112, 105, 110, 103, 80, 97, 105, 114, 67, 97, 99, 104, 101, 0, 50, 53, 98, 116, 79, 118, 101, 114, 108, 97, 112, 112, 105, 110, 103, 80, 97, 105, 114, 67, 97, 108, 108, 98, 97, 99, 107, 0, 50, 48, 98, 116, 67, 111, 108, 108, 105, 115, 105, 111, 110, 65, 108, 103, 111, 114, 105, 116, 104, 109, 0, 78, 54, 98, 116, 68, 98, 118, 116, 56, 73, 67, 111, 108, 108, 105, 100, 101, 69, 0, 49, 54, 98, 116, 68, 98, 118, 116, 66, 114, 111, 97, 100, 112, 104, 97, 115, 101, 0, 49, 56, 98, 116, 68, 98, 118, 116, 84, 114, 101, 101, 67, 111, 108, 108, 105, 100, 101, 114, 0, 49, 57, 66, 114, 111, 97, 100, 112, 104, 97, 115, 101, 82, 97, 121, 84, 101, 115, 116, 101, 114, 0, 50, 48, 66, 114, 111, 97, 100, 112, 104, 97, 115, 101, 65, 97, 98, 98, 84, 101, 115, 116, 101, 114, 0, 49, 50, 98, 116, 68, 105, 115, 112, 97, 116, 99, 104, 101, 114, 0, 50, 49, 98, 116, 78, 111, 100, 101, 79, 118, 101, 114, 108, 97, 112, 67, 97, 108, 108, 98, 97, 99, 107, 0, 50, 56, 98, 116, 72, 97, 115, 104, 101, 100, 79, 118, 101, 114, 108, 97, 112, 112, 105, 110, 103, 80, 97, 105, 114, 67, 97, 99, 104, 101, 0, 90, 78, 50, 56, 98, 116, 72, 97, 115, 104, 101, 100, 79, 118, 101, 114, 108, 97, 112, 112, 105, 110, 103, 80, 97, 105, 114, 67, 97, 99, 104, 101, 51, 55, 114, 101, 109, 111, 118, 101, 79, 118, 101, 114, 108, 97, 112, 112, 105, 110, 103, 80, 97, 105, 114, 115, 67, 111, 110, 116, 97, 105, 110, 105, 110, 103, 80, 114, 111, 120, 121, 69, 80, 49, 55, 98, 116, 66, 114, 111, 97, 100, 112, 104, 97, 115, 101, 80, 114, 111, 120, 121, 80, 49, 50, 98, 116, 68, 105, 115, 112, 97, 116, 99, 104, 101, 114, 69, 49, 56, 82, 101, 109, 111, 118, 101, 80, 97, 105, 114, 67, 97, 108, 108, 98, 97, 99, 107, 0, 49, 55, 98, 116, 79, 118, 101, 114, 108, 97, 112, 67, 97, 108, 108, 98, 97, 99, 107, 0, 90, 78, 50, 56, 98, 116, 72, 97, 115, 104, 101, 100, 79, 118, 101, 114, 108, 97, 112, 112, 105, 110, 103, 80, 97, 105, 114, 67, 97, 99, 104, 101, 49, 57, 99, 108, 101, 97, 110, 80, 114, 111, 120, 121, 70, 114, 111, 109, 80, 97, 105, 114, 115, 69, 80, 49, 55, 98, 116, 66, 114, 111, 97, 100, 112, 104, 97, 115, 101, 80, 114, 111, 120, 121, 80, 49, 50, 98, 116, 68, 105, 115, 112, 97, 116, 99, 104, 101, 114, 69, 49, 55, 67, 108, 101, 97, 110, 80, 97, 105, 114, 67, 97, 108, 108, 98, 97, 99, 107, 0, 49, 52, 98, 116, 81, 117, 97, 110, 116, 105, 122, 101, 100, 66, 118, 104, 0, 98, 116, 79, 112, 116, 105, 109, 105, 122, 101, 100, 66, 118, 104, 78, 111, 100, 101, 68, 97, 116, 97, 0, 98, 116, 81, 117, 97, 110, 116, 105, 122, 101, 100, 66, 118, 104, 78, 111, 100, 101, 68, 97, 116, 97, 0, 98, 116, 66, 118, 104, 83, 117, 98, 116, 114, 101, 101, 73, 110, 102, 111, 68, 97, 116, 97, 0, 98, 116, 81, 117, 97, 110, 116, 105, 122, 101, 100, 66, 118, 104, 70, 108, 111, 97, 116, 68, 97, 116, 97, 0, 51, 48, 98, 116, 65, 99, 116, 105, 118, 97, 116, 105, 110, 103, 67, 111, 108, 108, 105, 115, 105, 111, 110, 65, 108, 103, 111, 114, 105, 116, 104, 109, 0, 50, 54, 98, 116, 66, 111, 120, 66, 111, 120, 67, 111, 108, 108, 105, 115, 105, 111, 110, 65, 108, 103, 111, 114, 105, 116, 104, 109, 0, 49, 54, 98, 116, 66, 111, 120, 66, 111, 120, 68, 101, 116, 101, 99, 116, 111, 114, 0, 51, 54, 98, 116, 68, 105, 115, 99, 114, 101, 116, 101, 67, 111, 108, 108, 105, 115, 105, 111, 110, 68, 101, 116, 101, 99, 116, 111, 114, 73, 110, 116, 101, 114, 102, 97, 99, 101, 0, 50, 49, 98, 116, 67, 111, 108, 108, 105, 115, 105, 111, 110, 68, 105, 115, 112, 97, 116, 99, 104, 101, 114, 0, 50, 51, 98, 116, 67, 111, 108, 108, 105, 115, 105, 111, 110, 80, 97, 105, 114, 67, 97, 108, 108, 98, 97, 99, 107, 0, 49, 55, 98, 116, 67, 111, 108, 108, 105, 115, 105, 111, 110, 79, 98, 106, 101, 99, 116, 0, 98, 116, 67, 111, 108, 108, 105, 115, 105, 111, 110, 79, 98, 106, 101, 99, 116, 70, 108, 111, 97, 116, 68, 97, 116, 97, 0, 49, 54, 98, 116, 67, 111, 108, 108, 105, 115, 105, 111, 110, 87, 111, 114, 108, 100, 0, 117, 112, 100, 97, 116, 101, 65, 97, 98, 98, 115, 0, 1, 79, 118, 101, 114, 102, 108, 111, 119, 32, 105, 110, 32, 65, 65, 66, 66, 44, 32, 111, 98, 106, 101, 99, 116, 32, 114, 101, 109, 111, 118, 101, 100, 32, 102, 114, 111, 109, 32, 115, 105, 109, 117, 108, 97, 116, 105, 111, 110, 0, 73, 102, 32, 121, 111, 117, 32, 99, 97, 110, 32, 114, 101, 112, 114, 111, 100, 117, 99, 101, 32, 116, 104, 105, 115, 44, 32, 112, 108, 101, 97, 115, 101, 32, 101, 109, 97, 105, 108, 32, 98, 117, 103, 115, 64, 99, 111, 110, 116, 105, 110, 117, 111, 117, 115, 112, 104, 121, 115, 105, 99, 115, 46, 99, 111, 109, 10, 0, 80, 108, 101, 97, 115, 101, 32, 105, 110, 99, 108, 117, 100, 101, 32, 97, 98, 111, 118, 101, 32, 105, 110, 102, 111, 114, 109, 97, 116, 105, 111, 110, 44, 32, 121, 111, 117, 114, 32, 80, 108, 97, 116, 102, 111, 114, 109, 44, 32, 118, 101, 114, 115, 105, 111, 110, 32, 111, 102, 32, 79, 83, 46, 10, 0, 84, 104, 97, 110, 107, 115, 46, 10, 0, 99, 97, 108, 99, 117, 108, 97, 116, 101, 79, 118, 101, 114, 108, 97, 112, 112, 105, 110, 103, 80, 97, 105, 114, 115, 0, 49, 55, 68, 101, 98, 117, 103, 68, 114, 97, 119, 99, 97, 108, 108, 98, 97, 99, 107, 0, 49, 57, 98, 116, 83, 105, 110, 103, 108, 101, 82, 97, 121, 67, 97, 108, 108, 98, 97, 99, 107, 0, 50, 51, 98, 116, 66, 114, 111, 97, 100, 112, 104, 97, 115, 101, 82, 97, 121, 67, 97, 108, 108, 98, 97, 99, 107, 0, 50, 52, 98, 116, 66, 114, 111, 97, 100, 112, 104, 97, 115, 101, 65, 97, 98, 98, 67, 97, 108, 108, 98, 97, 99, 107, 0, 78, 49, 50, 98, 116, 67, 111, 110, 118, 101, 120, 67, 97, 115, 116, 49, 48, 67, 97, 115, 116, 82, 101, 115, 117, 108, 116, 69, 0, 90, 78, 49, 54, 98, 116, 67, 111, 108, 108, 105, 115, 105, 111, 110, 87, 111, 114, 108, 100, 50, 49, 114, 97, 121, 84, 101, 115, 116, 83, 105, 110, 103, 108, 101, 73, 110, 116, 101, 114, 110, 97, 108, 69, 82, 75, 49, 49, 98, 116, 84, 114, 97, 110, 115, 102, 111, 114, 109, 83, 50, 95, 80, 75, 50, 52, 98, 116, 67, 111, 108, 108, 105, 115, 105, 111, 110, 79, 98, 106, 101, 99, 116, 87, 114, 97, 112, 112, 101, 114, 82, 78, 83, 95, 49, 55, 82, 97, 121, 82, 101, 115, 117, 108, 116, 67, 97, 108, 108, 98, 97, 99, 107, 69, 69, 50, 57, 66, 114, 105, 100, 103, 101, 84, 114, 105, 97, 110, 103, 108, 101, 82, 97, 121, 99, 97, 115, 116, 67, 97, 108, 108, 98, 97, 99, 107, 0, 90, 78, 49, 54, 98, 116, 67, 111, 108, 108, 105, 115, 105, 111, 110, 87, 111, 114, 108, 100, 50, 49, 114, 97, 121, 84, 101, 115, 116, 83, 105, 110, 103, 108, 101, 73, 110, 116, 101, 114, 110, 97, 108, 69, 82, 75, 49, 49, 98, 116, 84, 114, 97, 110, 115, 102, 111, 114, 109, 83, 50, 95, 80, 75, 50, 52, 98, 116, 67, 111, 108, 108, 105, 115, 105, 111, 110, 79, 98, 106, 101, 99, 116, 87, 114, 97, 112, 112, 101, 114, 82, 78, 83, 95, 49, 55, 82, 97, 121, 82, 101, 115, 117, 108, 116, 67, 97, 108, 108, 98, 97, 99, 107, 69, 69, 50, 57, 66, 114, 105, 100, 103, 101, 84, 114, 105, 97, 110, 103, 108, 101, 82, 97, 121, 99, 97, 115, 116, 67, 97, 108, 108, 98, 97, 99, 107, 95, 48, 0, 90, 78, 49, 54, 98, 116, 67, 111, 108, 108, 105, 115, 105, 111, 110, 87, 111, 114, 108, 100, 50, 49, 114, 97, 121, 84, 101, 115, 116, 83, 105, 110, 103, 108, 101, 73, 110, 116, 101, 114, 110, 97, 108, 69, 82, 75, 49, 49, 98, 116, 84, 114, 97, 110, 115, 102, 111, 114, 109, 83, 50, 95, 80, 75, 50, 52, 98, 116, 67, 111, 108, 108, 105, 115, 105, 111, 110, 79, 98, 106, 101, 99, 116, 87, 114, 97, 112, 112, 101, 114, 82, 78, 83, 95, 49, 55, 82, 97, 121, 82, 101, 115, 117, 108, 116, 67, 97, 108, 108, 98, 97, 99, 107, 69, 69, 57, 82, 97, 121, 84, 101, 115, 116, 101, 114, 0, 90, 78, 49, 54, 98, 116, 67, 111, 108, 108, 105, 115, 105, 111, 110, 87, 111, 114, 108, 100, 50, 49, 114, 97, 121, 84, 101, 115, 116, 83, 105, 110, 103, 108, 101, 73, 110, 116, 101, 114, 110, 97, 108, 69, 82, 75, 49, 49, 98, 116, 84, 114, 97, 110, 115, 102, 111, 114, 109, 83, 50, 95, 80, 75, 50, 52, 98, 116, 67, 111, 108, 108, 105, 115, 105, 111, 110, 79, 98, 106, 101, 99, 116, 87, 114, 97, 112, 112, 101, 114, 82, 78, 83, 95, 49, 55, 82, 97, 121, 82, 101, 115, 117, 108, 116, 67, 97, 108, 108, 98, 97, 99, 107, 69, 69, 49, 53, 76, 111, 99, 97, 108, 73, 110, 102, 111, 65, 100, 100, 101, 114, 50, 0, 78, 49, 54, 98, 116, 67, 111, 108, 108, 105, 115, 105, 111, 110, 87, 111, 114, 108, 100, 49, 55, 82, 97, 121, 82, 101, 115, 117, 108, 116, 67, 97, 108, 108, 98, 97, 99, 107, 69, 0, 112, 101, 114], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE);
        allocate([102, 111, 114, 109, 68, 105, 115, 99, 114, 101, 116, 101, 67, 111, 108, 108, 105, 115, 105, 111, 110, 68, 101, 116, 101, 99, 116, 105, 111, 110, 0, 100, 105, 115, 112, 97, 116, 99, 104, 65, 108, 108, 67, 111, 108, 108, 105, 115, 105, 111, 110, 80, 97, 105, 114, 115, 0, 90, 78, 49, 54, 98, 116, 67, 111, 108, 108, 105, 115, 105, 111, 110, 87, 111, 114, 108, 100, 50, 53, 111, 98, 106, 101, 99, 116, 81, 117, 101, 114, 121, 83, 105, 110, 103, 108, 101, 73, 110, 116, 101, 114, 110, 97, 108, 69, 80, 75, 49, 51, 98, 116, 67, 111, 110, 118, 101, 120, 83, 104, 97, 112, 101, 82, 75, 49, 49, 98, 116, 84, 114, 97, 110, 115, 102, 111, 114, 109, 83, 53, 95, 80, 75, 50, 52, 98, 116, 67, 111, 108, 108, 105, 115, 105, 111, 110, 79, 98, 106, 101, 99, 116, 87, 114, 97, 112, 112, 101, 114, 82, 78, 83, 95, 50, 48, 67, 111, 110, 118, 101, 120, 82, 101, 115, 117, 108, 116, 67, 97, 108, 108, 98, 97, 99, 107, 69, 102, 69, 51, 50, 66, 114, 105, 100, 103, 101, 84, 114, 105, 97, 110, 103, 108, 101, 67, 111, 110, 118, 101, 120, 99, 97, 115, 116, 67, 97, 108, 108, 98, 97, 99, 107, 0, 90, 78, 49, 54, 98, 116, 67, 111, 108, 108, 105, 115, 105, 111, 110, 87, 111, 114, 108, 100, 50, 53, 111, 98, 106, 101, 99, 116, 81, 117, 101, 114, 121, 83, 105, 110, 103, 108, 101, 73, 110, 116, 101, 114, 110, 97, 108, 69, 80, 75, 49, 51, 98, 116, 67, 111, 110, 118, 101, 120, 83, 104, 97, 112, 101, 82, 75, 49, 49, 98, 116, 84, 114, 97, 110, 115, 102, 111, 114, 109, 83, 53, 95, 80, 75, 50, 52, 98, 116, 67, 111, 108, 108, 105, 115, 105, 111, 110, 79, 98, 106, 101, 99, 116, 87, 114, 97, 112, 112, 101, 114, 82, 78, 83, 95, 50, 48, 67, 111, 110, 118, 101, 120, 82, 101, 115, 117, 108, 116, 67, 97, 108, 108, 98, 97, 99, 107, 69, 102, 69, 51, 50, 66, 114, 105, 100, 103, 101, 84, 114, 105, 97, 110, 103, 108, 101, 67, 111, 110, 118, 101, 120, 99, 97, 115, 116, 67, 97, 108, 108, 98, 97, 99, 107, 95, 48, 0, 99, 111, 110, 118, 101, 120, 83, 119, 101, 101, 112, 67, 111, 109, 112, 111, 117, 110, 100, 0, 90, 78, 49, 54, 98, 116, 67, 111, 108, 108, 105, 115, 105, 111, 110, 87, 111, 114, 108, 100, 50, 53, 111, 98, 106, 101, 99, 116, 81, 117, 101, 114, 121, 83, 105, 110, 103, 108, 101, 73, 110, 116, 101, 114, 110, 97, 108, 69, 80, 75, 49, 51, 98, 116, 67, 111, 110, 118, 101, 120, 83, 104, 97, 112, 101, 82, 75, 49, 49, 98, 116, 84, 114, 97, 110, 115, 102, 111, 114, 109, 83, 53, 95, 80, 75, 50, 52, 98, 116, 67, 111, 108, 108, 105, 115, 105, 111, 110, 79, 98, 106, 101, 99, 116, 87, 114, 97, 112, 112, 101, 114, 82, 78, 83, 95, 50, 48, 67, 111, 110, 118, 101, 120, 82, 101, 115, 117, 108, 116, 67, 97, 108, 108, 98, 97, 99, 107, 69, 102, 69, 49, 52, 76, 111, 99, 97, 108, 73, 110, 102, 111, 65, 100, 100, 101, 114, 0, 78, 49, 54, 98, 116, 67, 111, 108, 108, 105, 115, 105, 111, 110, 87, 111, 114, 108, 100, 50, 48, 67, 111, 110, 118, 101, 120, 82, 101, 115, 117, 108, 116, 67, 97, 108, 108, 98, 97, 99, 107, 69, 0, 99, 111, 110, 118, 101, 120, 83, 119, 101, 101, 112, 84, 101, 115, 116, 0, 50, 49, 98, 116, 83, 105, 110, 103, 108, 101, 83, 119, 101, 101, 112, 67, 97, 108, 108, 98, 97, 99, 107, 0, 50, 51, 98, 116, 83, 105, 110, 103, 108, 101, 67, 111, 110, 116, 97, 99, 116, 67, 97, 108, 108, 98, 97, 99, 107, 0, 50, 51, 98, 116, 66, 114, 105, 100, 103, 101, 100, 77, 97, 110, 105, 102, 111, 108, 100, 82, 101, 115, 117, 108, 116, 0, 50, 56, 98, 116, 67, 111, 109, 112, 111, 117, 110, 100, 67, 111, 108, 108, 105, 115, 105, 111, 110, 65, 108, 103, 111, 114, 105, 116, 104, 109, 0, 50, 50, 98, 116, 67, 111, 109, 112, 111, 117, 110, 100, 76, 101, 97, 102, 67, 97, 108, 108, 98, 97, 99, 107, 0, 51, 54, 98, 116, 67, 111, 109, 112, 111, 117, 110, 100, 67, 111, 109, 112, 111, 117, 110, 100, 67, 111, 108, 108, 105, 115, 105, 111, 110, 65, 108, 103, 111, 114, 105, 116, 104, 109, 0, 51, 48, 98, 116, 67, 111, 109, 112, 111, 117, 110, 100, 67, 111, 109, 112, 111, 117, 110, 100, 76, 101, 97, 102, 67, 97, 108, 108, 98, 97, 99, 107, 0, 51, 48, 98, 116, 67, 111, 108, 108, 105, 115, 105, 111, 110, 65, 108, 103, 111, 114, 105, 116, 104, 109, 67, 114, 101, 97, 116, 101, 70, 117, 110, 99, 0, 51, 51, 98, 116, 67, 111, 110, 118, 101, 120, 67, 111, 110, 99, 97, 118, 101, 67, 111, 108, 108, 105, 115, 105, 111, 110, 65, 108, 103, 111, 114, 105, 116, 104, 109, 0, 50, 52, 98, 116, 67, 111, 110, 118, 101, 120, 84, 114, 105, 97, 110, 103, 108, 101, 67, 97, 108, 108, 98, 97, 99, 107, 0, 49, 53, 98, 116, 84, 114, 105, 97, 110, 103, 108, 101, 83, 104, 97, 112, 101, 0, 84, 114, 105, 97, 110, 103, 108, 101, 0, 98, 116, 67, 111, 110, 118, 101, 120, 73, 110, 116, 101, 114, 110, 97, 108, 83, 104, 97, 112, 101, 68, 97, 116, 97, 0, 90, 78, 51, 51, 98, 116, 67, 111, 110, 118, 101, 120, 67, 111, 110, 99, 97, 118, 101, 67, 111, 108, 108, 105, 115, 105, 111, 110, 65, 108, 103, 111, 114, 105, 116, 104, 109, 50, 49, 99, 97, 108, 99, 117, 108, 97, 116, 101, 84, 105, 109, 101, 79, 102, 73, 109, 112, 97, 99, 116, 69, 80, 49, 55, 98, 116, 67, 111, 108, 108, 105, 115, 105, 111, 110, 79, 98, 106, 101, 99, 116, 83, 49, 95, 82, 75, 49, 54, 98, 116, 68, 105, 115, 112, 97, 116, 99, 104, 101, 114, 73, 110, 102, 111, 80, 49, 54, 98, 116, 77, 97, 110, 105, 102, 111, 108, 100, 82, 101, 115, 117, 108, 116, 69, 51, 49, 76, 111, 99, 97, 108, 84, 114, 105, 97, 110, 103, 108, 101, 83, 112, 104, 101, 114, 101, 67, 97, 115, 116, 67, 97, 108, 108, 98, 97, 99, 107, 0, 78, 50, 51, 98, 116, 67, 111, 110, 118, 101, 120, 67, 111, 110, 118, 101, 120, 65, 108, 103, 111, 114, 105, 116, 104, 109, 49, 48, 67, 114, 101, 97, 116, 101, 70, 117, 110, 99, 69, 0, 50, 51, 98, 116, 67, 111, 110, 118, 101, 120, 67, 111, 110, 118, 101, 120, 65, 108, 103, 111, 114, 105, 116, 104, 109, 0, 90, 78, 50, 51, 98, 116, 67, 111, 110, 118, 101, 120, 67, 111, 110, 118, 101, 120, 65, 108, 103, 111, 114, 105, 116, 104, 109, 49, 54, 112, 114, 111, 99, 101, 115, 115, 67, 111, 108, 108, 105, 115, 105, 111, 110, 69, 80, 75, 50, 52, 98, 116, 67, 111, 108, 108, 105, 115, 105, 111, 110, 79, 98, 106, 101, 99, 116, 87, 114, 97, 112, 112, 101, 114, 83, 50, 95, 82, 75, 49, 54, 98, 116, 68, 105, 115, 112, 97, 116, 99, 104, 101, 114, 73, 110, 102, 111, 80, 49, 54, 98, 116, 77, 97, 110, 105, 102, 111, 108, 100, 82, 101, 115, 117, 108, 116, 69, 49, 51, 98, 116, 68, 117, 109, 109, 121, 82, 101, 115, 117, 108, 116, 0, 78, 51, 54, 98, 116, 68, 105, 115, 99, 114, 101, 116, 101, 67, 111, 108, 108, 105, 115, 105, 111, 110, 68, 101, 116, 101, 99, 116, 111, 114, 73, 110, 116, 101, 114, 102, 97, 99, 101, 54, 82, 101, 115, 117, 108, 116, 69, 0, 90, 78, 50, 51, 98, 116, 67, 111, 110, 118, 101, 120, 67, 111, 110, 118, 101, 120, 65, 108, 103, 111, 114, 105, 116, 104, 109, 49, 54, 112, 114, 111, 99, 101, 115, 115, 67, 111, 108, 108, 105, 115, 105, 111, 110, 69, 80, 75, 50, 52, 98, 116, 67, 111, 108, 108, 105, 115, 105, 111, 110, 79, 98, 106, 101, 99, 116, 87, 114, 97, 112, 112, 101, 114, 83, 50, 95, 82, 75, 49, 54, 98, 116, 68, 105, 115, 112, 97, 116, 99, 104, 101, 114, 73, 110, 102, 111, 80, 49, 54, 98, 116, 77, 97, 110, 105, 102, 111, 108, 100, 82, 101, 115, 117, 108, 116, 69, 50, 49, 98, 116, 87, 105, 116, 104, 111, 117, 116, 77, 97, 114, 103, 105, 110, 82, 101, 115, 117, 108, 116, 0, 50, 52, 98, 116, 80, 101, 114, 116, 117, 114, 98, 101, 100, 67, 111, 110, 116, 97, 99, 116, 82, 101, 115, 117, 108, 116, 0, 51, 49, 98, 116, 67, 111, 110, 118, 101, 120, 80, 108, 97, 110, 101, 67, 111, 108, 108, 105, 115, 105, 111, 110, 65, 108, 103, 111, 114, 105, 116, 104, 109, 0, 51, 49, 98, 116, 68, 101, 102, 97, 117, 108, 116, 67, 111, 108, 108, 105, 115, 105, 111, 110, 67, 111, 110, 102, 105, 103, 117, 114, 97, 116, 105, 111, 110, 0, 50, 52, 98, 116, 67, 111, 108, 108, 105, 115, 105, 111, 110, 67, 111, 110, 102, 105, 103, 117, 114, 97, 116, 105, 111, 110, 0, 78, 51, 51, 98, 116, 67, 111, 110, 118, 101, 120, 67, 111, 110, 99, 97, 118, 101, 67, 111, 108, 108, 105, 115, 105, 111, 110, 65, 108, 103, 111, 114, 105, 116, 104, 109, 49, 48, 67, 114, 101, 97, 116, 101, 70, 117, 110, 99, 69, 0, 78, 51, 51, 98, 116, 67, 111, 110, 118, 101, 120, 67, 111, 110, 99, 97, 118, 101, 67, 111, 108, 108, 105, 115, 105, 111, 110, 65, 108, 103, 111, 114, 105, 116, 104, 109, 49, 55, 83, 119, 97, 112, 112, 101, 100, 67, 114, 101, 97, 116, 101, 70, 117, 110, 99, 69, 0, 78, 50, 56, 98, 116, 67, 111, 109, 112, 111, 117, 110, 100, 67, 111, 108, 108, 105, 115, 105, 111, 110, 65, 108, 103, 111, 114, 105, 116, 104, 109, 49, 48, 67, 114, 101, 97, 116, 101, 70, 117, 110, 99, 69, 0, 78, 51, 54, 98, 116, 67, 111, 109, 112, 111, 117, 110, 100, 67, 111, 109, 112, 111, 117, 110, 100, 67, 111, 108, 108, 105, 115, 105, 111, 110, 65, 108, 103, 111, 114, 105, 116, 104, 109, 49, 48, 67, 114, 101, 97, 116, 101, 70, 117, 110, 99, 69, 0, 78, 50, 56, 98, 116, 67, 111, 109, 112, 111, 117, 110, 100, 67, 111, 108, 108, 105, 115, 105, 111, 110, 65, 108, 103, 111, 114, 105, 116, 104, 109, 49, 55, 83, 119, 97, 112, 112, 101, 100, 67, 114, 101, 97, 116, 101, 70, 117, 110, 99, 69, 0, 78, 49, 54, 98, 116, 69, 109, 112, 116, 121, 65, 108, 103, 111, 114, 105, 116, 104, 109, 49, 48, 67, 114, 101, 97, 116, 101, 70, 117, 110, 99, 69, 0, 78, 51, 50, 98, 116, 83, 112, 104, 101, 114, 101, 83, 112, 104, 101, 114, 101, 67, 111, 108, 108, 105, 115, 105, 111, 110, 65, 108, 103, 111, 114, 105, 116, 104, 109, 49, 48, 67, 114, 101, 97, 116, 101, 70, 117, 110, 99, 69, 0, 78, 51, 52, 98, 116, 83, 112, 104, 101, 114, 101, 84, 114, 105, 97, 110, 103, 108, 101, 67, 111, 108, 108, 105, 115, 105, 111, 110, 65, 108, 103, 111, 114, 105, 116, 104, 109, 49, 48, 67, 114, 101, 97, 116, 101, 70, 117, 110, 99, 69, 0, 78, 50, 54, 98, 116, 66, 111, 120, 66, 111, 120, 67, 111, 108, 108, 105, 115, 105, 111, 110, 65, 108, 103, 111, 114, 105, 116, 104, 109, 49, 48, 67, 114, 101, 97, 116, 101, 70, 117, 110, 99, 69, 0, 78, 51, 49, 98, 116, 67, 111, 110, 118, 101, 120, 80, 108, 97, 110, 101, 67, 111, 108, 108, 105, 115, 105, 111, 110, 65, 108, 103, 111, 114, 105, 116, 104, 109, 49, 48, 67, 114, 101, 97, 116, 101, 70, 117, 110, 99, 69, 0, 49, 54, 98, 116, 69, 109, 112, 116, 121, 65, 108, 103, 111, 114, 105, 116, 104, 109, 0, 49, 51, 98, 116, 71, 104, 111, 115, 116, 79, 98, 106, 101, 99, 116, 0, 50, 52, 98, 116, 80, 97, 105, 114, 67, 97, 99, 104, 105, 110, 103, 71, 104, 111, 115, 116, 79, 98, 106, 101, 99, 116, 0, 50, 51, 98, 116, 72, 97, 115, 104, 101, 100, 83, 105, 109, 112, 108, 101, 80, 97, 105, 114, 67, 97, 99, 104, 101, 0, 49, 54, 98, 116, 77, 97, 110, 105, 102, 111, 108, 100, 82, 101, 115, 117, 108, 116, 0, 50, 53, 98, 116, 83, 105, 109, 117, 108, 97, 116, 105, 111, 110, 73, 115, 108, 97, 110, 100, 77, 97, 110, 97, 103, 101, 114, 0, 105, 115, 108, 97, 110, 100, 85, 110, 105, 111, 110, 70, 105, 110, 100, 65, 110, 100, 81, 117, 105, 99, 107, 83, 111, 114, 116, 0, 112, 114, 111, 99, 101, 115, 115, 73, 115, 108, 97, 110, 100, 115, 0, 51, 50, 98, 116, 83, 112, 104, 101, 114, 101, 83, 112, 104, 101, 114, 101, 67, 111, 108, 108, 105, 115, 105, 111, 110, 65, 108, 103, 111, 114, 105, 116, 104, 109, 0, 51, 52, 98, 116, 83, 112, 104, 101, 114, 101, 84, 114, 105, 97, 110, 103, 108, 101, 67, 111, 108, 108, 105, 115, 105, 111, 110, 65, 108, 103, 111, 114, 105, 116, 104, 109, 0, 50, 50, 83, 112, 104, 101, 114, 101, 84, 114, 105, 97, 110, 103, 108, 101, 68, 101, 116, 101, 99, 116, 111, 114, 0, 49, 48, 98, 116, 66, 111, 120, 83, 104, 97, 112, 101, 0, 66, 111, 120, 0, 50, 50, 98, 116, 66, 118, 104, 84, 114, 105, 97, 110, 103, 108, 101, 77, 101, 115, 104, 83, 104, 97, 112, 101, 0, 66, 86, 72, 84, 82, 73, 65, 78, 71, 76, 69, 77, 69, 83, 72, 0, 98, 116, 84, 114, 105, 97, 110, 103, 108, 101, 77, 101, 115, 104, 83, 104, 97, 112, 101, 68, 97, 116, 97, 0, 90, 78, 75, 50, 50, 98, 116, 66, 118, 104, 84, 114, 105, 97, 110, 103, 108, 101, 77, 101, 115, 104, 83, 104, 97, 112, 101, 49, 57, 112, 114, 111, 99, 101, 115, 115, 65, 108, 108, 84, 114, 105, 97, 110, 103, 108, 101, 115, 69, 80, 49, 56, 98, 116, 84, 114, 105, 97, 110, 103, 108, 101, 67, 97, 108, 108, 98, 97, 99, 107, 82, 75, 57, 98, 116, 86, 101, 99, 116, 111, 114, 51, 83, 52, 95, 69, 50, 49, 77, 121, 78, 111, 100, 101, 79, 118, 101, 114, 108, 97, 112, 67, 97, 108, 108, 98, 97, 99, 107, 0, 90, 78, 50, 50, 98, 116, 66, 118, 104, 84, 114, 105, 97, 110, 103, 108, 101, 77, 101, 115, 104, 83, 104, 97, 112, 101, 49, 52, 112, 101, 114, 102, 111, 114, 109, 82, 97, 121, 99, 97, 115, 116, 69, 80, 49, 56, 98, 116, 84, 114, 105, 97, 110, 103, 108, 101, 67, 97, 108, 108, 98, 97, 99, 107, 82, 75, 57, 98, 116, 86, 101, 99, 116, 111, 114, 51, 83, 52, 95, 69, 50, 49, 77, 121, 78, 111, 100, 101, 79, 118, 101, 114, 108, 97, 112, 67, 97, 108, 108, 98, 97, 99, 107, 0, 90, 78, 50, 50, 98, 116, 66, 118, 104, 84, 114, 105, 97, 110, 103, 108, 101, 77, 101, 115, 104, 83, 104, 97, 112, 101, 49, 55, 112, 101, 114, 102, 111, 114, 109, 67, 111, 110, 118, 101, 120, 99, 97, 115, 116, 69, 80, 49, 56, 98, 116, 84, 114, 105, 97, 110, 103, 108, 101, 67, 97, 108, 108, 98, 97, 99, 107, 82, 75, 57, 98, 116, 86, 101, 99, 116, 111, 114, 51, 83, 52, 95, 83, 52, 95, 83, 52, 95, 69, 50, 49, 77, 121, 78, 111, 100, 101, 79, 118, 101, 114, 108, 97, 112, 67, 97, 108, 108, 98, 97, 99, 107, 0, 49, 52, 98, 116, 67, 97, 112, 115, 117, 108, 101, 83, 104, 97, 112, 101, 0, 67, 97, 112, 115, 117, 108, 101, 83, 104, 97, 112, 101, 0, 98, 116, 67, 97, 112, 115, 117, 108, 101, 83, 104, 97, 112, 101, 68, 97, 116, 97, 0, 49, 53, 98, 116, 67, 97, 112, 115, 117, 108, 101, 83, 104, 97, 112, 101, 88, 0, 67, 97, 112, 115, 117, 108, 101, 88, 0, 49, 53, 98, 116, 67, 97, 112, 115, 117, 108, 101, 83, 104, 97, 112, 101, 90, 0, 67, 97, 112, 115, 117, 108, 101, 90, 0, 49, 54, 98, 116, 67, 111, 108, 108, 105, 115, 105, 111, 110, 83, 104, 97, 112, 101, 0, 98, 116, 67, 111, 108, 108, 105, 115, 105, 111, 110, 83, 104, 97, 112, 101, 68, 97, 116, 97, 0, 49, 53, 98, 116, 67, 111, 109, 112, 111, 117, 110, 100, 83, 104, 97, 112, 101, 0, 67, 111, 109, 112, 111, 117, 110, 100, 0, 98, 116, 67, 111, 109, 112, 111, 117, 110, 100, 83, 104, 97, 112, 101, 67, 104, 105, 108, 100, 68, 97, 116, 97, 0, 98, 116, 67, 111, 109, 112, 111, 117, 110, 100, 83, 104, 97, 112, 101, 68, 97, 116, 97, 0, 49, 52, 98, 116, 67, 111, 110, 99, 97, 118, 101, 83, 104, 97, 112, 101, 0, 49, 49, 98, 116, 67, 111, 110, 101, 83, 104, 97, 112, 101, 0, 67, 111, 110, 101, 0, 98, 116, 67, 111, 110, 101, 83, 104, 97, 112, 101, 68, 97, 116, 97, 0, 49, 50, 98, 116, 67, 111, 110, 101, 83, 104, 97, 112, 101, 90, 0, 67, 111, 110, 101, 90, 0, 49, 50, 98, 116, 67, 111, 110, 101, 83, 104, 97, 112, 101, 88, 0, 67, 111, 110, 101, 88, 0, 49, 55, 98, 116, 67, 111, 110, 118, 101, 120, 72, 117, 108, 108, 83, 104, 97, 112, 101, 0, 67, 111, 110, 118, 101, 120, 0, 98, 116, 67, 111, 110, 118, 101, 120, 72, 117, 108, 108, 83, 104, 97, 112, 101, 68, 97, 116, 97, 0, 50, 49, 98, 116, 67, 111, 110, 118, 101, 120, 73, 110, 116, 101, 114, 110, 97, 108, 83, 104, 97, 112, 101, 0, 49, 56, 98, 116, 67, 111, 110, 118, 101, 120, 80, 111, 108, 121, 104, 101, 100, 114, 111, 110, 0, 49, 51, 98, 116, 67, 111, 110, 118, 101, 120, 83, 104, 97, 112, 101, 0, 50, 53, 98, 116, 67, 111, 110, 118, 101, 120, 84, 114, 105, 97, 110, 103, 108, 101, 77, 101, 115, 104, 83, 104, 97, 112, 101, 0, 67, 111, 110, 118, 101, 120, 84, 114, 105, 109, 101, 115, 104, 0, 50, 54, 76, 111, 99, 97, 108, 83, 117, 112, 112, 111, 114, 116, 86, 101, 114, 116, 101, 120, 67, 97, 108, 108, 98, 97, 99, 107, 0, 49, 53, 98, 116, 67, 121, 108, 105, 110, 100, 101, 114, 83, 104, 97, 112, 101, 0, 67, 121, 108, 105, 110, 100, 101, 114, 89, 0, 98, 116, 67, 121, 108, 105, 110, 100, 101, 114, 83, 104, 97, 112, 101, 68, 97, 116, 97, 0, 49, 54, 98, 116, 67, 121, 108, 105, 110, 100, 101, 114, 83, 104, 97, 112, 101, 88, 0, 67, 121, 108, 105, 110, 100, 101, 114, 88, 0, 49, 54, 98, 116, 67, 121, 108, 105, 110, 100, 101, 114, 83, 104, 97, 112, 101, 90, 0, 67, 121, 108, 105, 110, 100, 101, 114, 90, 0, 49, 52, 98, 116, 79, 112, 116, 105, 109, 105, 122, 101, 100, 66, 118, 104, 0, 90, 78, 49, 52, 98, 116, 79, 112, 116, 105, 109, 105, 122, 101, 100, 66, 118, 104, 53, 98, 117, 105, 108, 100, 69, 80, 50, 51, 98, 116, 83, 116, 114, 105, 100, 105, 110, 103, 77, 101, 115, 104, 73, 110, 116, 101, 114, 102, 97, 99, 101, 98, 82, 75, 57, 98, 116, 86, 101, 99, 116, 111, 114, 51, 83, 52, 95, 69, 50, 57, 81, 117, 97, 110, 116, 105, 122, 101, 100, 78, 111, 100, 101, 84, 114, 105, 97, 110, 103, 108, 101, 67, 97, 108, 108, 98, 97, 99, 107, 0, 90, 78, 49, 52, 98, 116, 79, 112, 116, 105, 109, 105, 122, 101, 100, 66, 118, 104, 53, 98, 117, 105, 108, 100, 69, 80, 50, 51, 98, 116, 83, 116, 114, 105, 100, 105, 110, 103, 77, 101, 115, 104, 73, 110, 116, 101, 114, 102, 97, 99, 101, 98, 82, 75, 57, 98, 116, 86, 101, 99, 116, 111, 114, 51, 83, 52, 95, 69, 50, 48, 78, 111, 100, 101, 84, 114, 105, 97, 110, 103, 108, 101, 67, 97, 108, 108, 98, 97, 99, 107, 0, 50, 51, 98, 116, 80, 111, 108, 121, 104, 101, 100, 114, 97, 108, 67, 111, 110, 118, 101, 120, 83, 104, 97, 112, 101, 0, 51, 52, 98, 116, 80, 111, 108, 121, 104, 101, 100, 114, 97, 108, 67, 111, 110, 118, 101, 120, 65, 97, 98, 98, 67, 97, 99, 104, 105, 110, 103, 83, 104, 97, 112, 101, 0, 49, 51, 98, 116, 83, 112, 104, 101, 114, 101, 83, 104, 97, 112, 101, 0, 83, 80, 72, 69, 82, 69, 0, 49, 56, 98, 116, 83, 116, 97, 116, 105, 99, 80, 108, 97, 110, 101, 83, 104, 97, 112, 101, 0, 83, 84, 65, 84, 73, 67, 80, 76, 65, 78, 69, 0, 98, 116, 83, 116, 97, 116, 105, 99, 80, 108, 97, 110, 101, 83, 104, 97, 112, 101, 68, 97, 116, 97, 0, 50, 51, 98, 116, 83, 116, 114, 105, 100, 105, 110, 103, 77, 101, 115, 104, 73, 110, 116, 101, 114, 102, 97, 99, 101, 0, 98, 116, 73, 110, 116, 73, 110, 100, 101, 120, 68, 97, 116, 97, 0, 98, 116, 83, 104, 111, 114, 116, 73, 110, 116, 73, 110, 100, 101, 120, 84, 114, 105, 112, 108, 101, 116, 68, 97, 116, 97, 0, 98, 116, 67, 104, 97, 114, 73, 110, 100, 101, 120, 84, 114, 105, 112, 108, 101, 116, 68, 97, 116, 97, 0, 98, 116, 86, 101, 99, 116, 111, 114, 51, 68, 111, 117, 98, 108, 101, 68, 97, 116, 97, 0, 98, 116, 77, 101, 115, 104, 80, 97, 114, 116, 68, 97, 116, 97, 0, 98, 116, 83, 116, 114, 105, 100, 105, 110, 103, 77, 101, 115, 104, 73, 110, 116, 101, 114, 102, 97, 99, 101, 68, 97, 116, 97, 0, 49, 56, 98, 116, 84, 114, 105, 97, 110, 103, 108, 101, 67, 97, 108, 108, 98, 97, 99, 107, 0, 51, 49, 98, 116, 73, 110, 116, 101, 114, 110, 97, 108, 84, 114, 105, 97, 110, 103, 108, 101, 73, 110, 100, 101, 120, 67, 97, 108, 108, 98, 97, 99, 107, 0, 50, 54, 98, 116, 84, 114, 105, 97, 110, 103, 108, 101, 73, 110, 100, 101, 120, 86, 101, 114, 116, 101, 120, 65, 114, 114, 97, 121, 0, 49, 52, 98, 116, 84, 114, 105, 97, 110, 103, 108, 101, 77, 101, 115, 104, 0, 49, 57, 98, 116, 84, 114, 105, 97, 110, 103, 108, 101, 77, 101, 115, 104, 83, 104, 97, 112, 101, 0, 84, 82, 73, 65, 78, 71, 76, 69, 77, 69, 83, 72, 0, 90, 78, 75, 49, 57, 98, 116, 84, 114, 105, 97, 110, 103, 108, 101, 77, 101, 115, 104, 83, 104, 97, 112, 101, 49, 57, 112, 114, 111, 99, 101, 115, 115, 65, 108, 108, 84, 114, 105, 97, 110, 103, 108, 101, 115, 69, 80, 49, 56, 98, 116, 84, 114, 105, 97, 110, 103, 108, 101, 67, 97, 108, 108, 98, 97, 99, 107, 82, 75, 57, 98, 116, 86, 101, 99, 116, 111, 114, 51, 83, 52, 95, 69, 49, 54, 70, 105, 108, 116, 101, 114, 101, 100, 67, 97, 108, 108, 98, 97, 99, 107, 0, 50, 49, 83, 117, 112, 112, 111, 114, 116, 86, 101, 114, 116, 101, 120, 67, 97, 108, 108, 98, 97, 99, 107, 0, 50, 55, 98, 116, 67, 111, 110, 116, 105, 110, 117, 111, 117, 115, 67, 111, 110, 118, 101, 120, 67, 111, 108, 108, 105, 115, 105, 111, 110, 0, 49, 54, 98, 116, 80, 111, 105, 110, 116, 67, 111, 108, 108, 101, 99, 116, 111, 114, 0, 49, 50, 98, 116, 67, 111, 110, 118, 101, 120, 67, 97, 115, 116, 0, 49, 53, 98, 116, 71, 106, 107, 67, 111, 110, 118, 101, 120, 67, 97, 115, 116, 0, 51, 48, 98, 116, 71, 106, 107, 69, 112, 97, 80, 101, 110, 101, 116, 114, 97, 116, 105, 111, 110, 68, 101, 112, 116, 104, 83, 111, 108, 118, 101, 114, 0, 51, 48, 98, 116, 67, 111, 110, 118, 101, 120, 80, 101, 110, 101, 116, 114, 97, 116, 105, 111, 110, 68, 101, 112, 116, 104, 83, 111, 108, 118, 101, 114, 0, 49, 55, 98, 116, 71, 106, 107, 80, 97, 105, 114, 68, 101, 116, 101, 99, 116, 111, 114, 0, 51, 51, 98, 116, 77, 105, 110, 107, 111, 119, 115, 107, 105, 80, 101, 110, 101, 116, 114, 97, 116, 105, 111, 110, 68, 101, 112, 116, 104, 83, 111, 108, 118, 101, 114, 0, 90, 78, 51, 51, 98, 116, 77, 105, 110, 107, 111, 119, 115, 107, 105, 80, 101, 110, 101, 116, 114, 97, 116, 105, 111, 110, 68, 101, 112, 116, 104, 83, 111, 108, 118, 101, 114, 49, 50, 99, 97, 108, 99, 80, 101, 110, 68, 101, 112, 116, 104, 69, 82, 50, 50, 98, 116, 86, 111, 114, 111, 110, 111, 105, 83, 105, 109, 112, 108, 101, 120, 83, 111, 108, 118, 101, 114, 80, 75, 49, 51, 98, 116, 67, 111, 110, 118, 101, 120, 83, 104, 97, 112, 101, 83, 52, 95, 82, 75, 49, 49, 98, 116, 84, 114, 97, 110, 115, 102, 111, 114, 109, 83, 55, 95, 82, 57, 98, 116, 86, 101, 99, 116, 111, 114, 51, 83, 57, 95, 83, 57, 95, 80, 49, 50, 98, 116, 73, 68, 101, 98, 117, 103, 68, 114, 97, 119, 69, 50, 48, 98, 116, 73, 110, 116, 101, 114, 109, 101, 100, 105, 97, 116, 101, 82, 101, 115, 117, 108, 116, 0, 50, 53, 98, 116, 84, 114, 105, 97, 110, 103, 108, 101, 82, 97, 121, 99, 97, 115, 116, 67, 97, 108, 108, 98, 97, 99, 107, 0, 50, 56, 98, 116, 84, 114, 105, 97, 110, 103, 108, 101, 67, 111, 110, 118, 101, 120, 99, 97, 115, 116, 67, 97, 108, 108, 98, 97, 99, 107, 0, 50, 50, 98, 116, 83, 117, 98, 115, 105, 109, 112, 108, 101, 120, 67, 111, 110, 118, 101, 120, 67, 97, 115, 116, 0, 51, 48, 98, 116, 75, 105, 110, 101, 109, 97, 116, 105, 99, 67, 104, 97, 114, 97, 99, 116, 101, 114, 67, 111, 110, 116, 114, 111, 108, 108, 101, 114, 0, 51, 48, 98, 116, 67, 104, 97, 114, 97, 99, 116, 101, 114, 67, 111, 110, 116, 114, 111, 108, 108, 101, 114, 73, 110, 116, 101, 114, 102, 97, 99, 101, 0, 49, 55, 98, 116, 65, 99, 116, 105, 111, 110, 73, 110, 116, 101, 114, 102, 97, 99, 101, 0, 52, 51, 98, 116, 75, 105, 110, 101, 109, 97, 116, 105, 99, 67, 108, 111, 115, 101, 115, 116, 78, 111, 116, 77, 101, 67, 111, 110, 118, 101, 120, 82, 101, 115, 117, 108, 116, 67, 97, 108, 108, 98, 97, 99, 107, 0, 78, 49, 54, 98, 116, 67, 111, 108, 108, 105, 115, 105, 111, 110, 87, 111, 114, 108, 100, 50, 55, 67, 108, 111, 115, 101, 115, 116, 67, 111, 110, 118, 101, 120, 82, 101, 115, 117, 108, 116, 67, 97, 108, 108, 98, 97, 99, 107, 69, 0, 50, 49, 98, 116, 67, 111, 110, 101, 84, 119, 105, 115, 116, 67, 111, 110, 115, 116, 114, 97, 105, 110, 116, 0, 49, 55, 98, 116, 84, 121, 112, 101, 100, 67, 111, 110, 115, 116, 114, 97, 105, 110, 116, 0, 49, 51, 98, 116, 84, 121, 112, 101, 100, 79, 98, 106, 101, 99, 116, 0, 98, 116, 67, 111, 110, 101, 84, 119, 105, 115, 116, 67, 111, 110, 115, 116, 114, 97, 105, 110, 116, 68, 97, 116, 97, 0, 98, 116, 71, 101, 110, 101, 114, 105, 99, 54, 68, 111, 102, 83, 112, 114, 105, 110, 103, 50, 67, 111, 110, 115, 116, 114, 97, 105, 110, 116, 68, 97, 116, 97, 0, 50, 51, 98, 116, 71, 101, 110, 101, 114, 105, 99, 54, 68, 111, 102, 67, 111, 110, 115, 116, 114, 97, 105, 110, 116, 0, 98, 116, 71, 101, 110, 101, 114, 105, 99, 54, 68, 111, 102, 67, 111, 110, 115, 116, 114, 97, 105, 110, 116, 68, 97, 116, 97, 0, 51, 48, 98, 116, 71, 101, 110, 101, 114, 105, 99, 54, 68, 111, 102, 83, 112, 114, 105, 110, 103, 50, 67, 111, 110, 115, 116, 114, 97, 105, 110, 116, 0, 50, 57, 98, 116, 71, 101, 110, 101, 114, 105, 99, 54, 68, 111, 102, 83, 112, 114, 105, 110, 103, 67, 111, 110, 115, 116, 114, 97, 105, 110, 116, 0, 98, 116, 71, 101, 110, 101, 114, 105, 99, 54, 68, 111, 102, 83, 112, 114, 105, 110, 103, 67, 111, 110, 115, 116, 114, 97, 105, 110, 116, 68, 97, 116, 97, 0, 49, 55, 98, 116, 72, 105, 110, 103, 101, 67, 111, 110, 115, 116, 114, 97, 105, 110, 116, 0, 98, 116, 72, 105, 110, 103, 101, 67, 111, 110, 115, 116, 114, 97, 105, 110, 116, 70, 108, 111, 97, 116, 68, 97, 116, 97, 0, 50, 51, 98, 116, 80, 111, 105, 110, 116, 50, 80, 111, 105, 110, 116, 67, 111, 110, 115, 116, 114, 97, 105, 110, 116, 0, 98, 116, 80, 111, 105, 110, 116, 50, 80, 111, 105, 110, 116, 67, 111, 110, 115, 116, 114, 97, 105, 110, 116, 70, 108, 111, 97, 116, 68, 97, 116, 97, 0, 51, 53, 98, 116, 83, 101, 113, 117, 101, 110, 116, 105, 97, 108, 73, 109, 112, 117, 108, 115, 101, 67, 111, 110, 115, 116, 114, 97, 105, 110, 116, 83, 111, 108, 118, 101, 114, 0, 49, 56, 98, 116, 67, 111, 110, 115, 116, 114, 97, 105, 110, 116, 83, 111, 108, 118, 101, 114, 0, 115, 111, 108, 118, 101, 71, 114, 111, 117, 112, 0, 115, 111, 108, 118, 101, 71, 114, 111, 117, 112, 67, 97, 99, 104, 101, 70, 114, 105, 101, 110, 100, 108, 121, 83, 101, 116, 117, 112, 0, 115, 111, 108, 118, 101, 71, 114, 111, 117, 112, 67, 97, 99, 104, 101, 70, 114, 105, 101, 110, 100, 108, 121, 73, 116, 101, 114, 97, 116, 105, 111, 110, 115, 0, 49, 56, 98, 116, 83, 108, 105, 100, 101, 114, 67, 111, 110, 115, 116, 114, 97, 105, 110, 116, 0, 98, 116, 83, 108, 105, 100, 101, 114, 67, 111, 110, 115, 116, 114, 97, 105, 110, 116, 68, 97, 116, 97, 0, 98, 116, 84, 121, 112, 101, 100, 67, 111, 110, 115, 116, 114, 97, 105, 110, 116, 70, 108, 111, 97, 116, 68, 97, 116, 97, 0, 50, 51, 98, 116, 68, 105, 115, 99, 114, 101, 116, 101, 68, 121, 110, 97, 109, 105, 99, 115, 87, 111, 114, 108, 100, 0, 49, 53, 98, 116, 68, 121, 110, 97, 109, 105, 99, 115, 87, 111, 114, 108, 100, 0, 100, 101, 98, 117, 103, 68, 114, 97, 119, 87, 111, 114, 108, 100, 0, 98, 116, 68, 121, 110, 97, 109, 105, 99, 115, 87, 111, 114, 108, 100, 70, 108, 111, 97, 116, 68, 97, 116, 97, 0, 115, 116, 101, 112, 83, 105, 109, 117, 108, 97, 116, 105, 111, 110, 0, 115, 121, 110, 99, 104, 114, 111, 110, 105, 122, 101, 77, 111, 116, 105, 111, 110, 83, 116, 97, 116, 101, 115, 0, 112, 114, 101, 100, 105, 99, 116, 85, 110, 99, 111, 110, 115, 116, 114, 97, 105, 110, 116, 77, 111, 116, 105, 111, 110, 0, 105, 110, 116, 101, 103, 114, 97, 116, 101, 84, 114, 97, 110, 115, 102, 111, 114, 109, 115, 0, 67, 67, 68, 32, 109, 111, 116, 105, 111, 110, 32, 99, 108, 97, 109, 112, 105, 110, 103, 0, 51, 52, 98, 116, 67, 108, 111, 115, 101, 115, 116, 78, 111, 116, 77, 101, 67, 111, 110, 118, 101, 120, 82, 101, 115, 117, 108, 116, 67, 97, 108, 108, 98, 97, 99, 107, 0, 97, 112, 112, 108, 121, 32, 115, 112, 101, 99, 117, 108, 97, 116, 105, 118, 101, 32, 99, 111, 110, 116, 97, 99, 116, 32, 114, 101, 115, 116, 105, 116, 117, 116, 105, 111, 110, 0, 117, 112, 100, 97, 116, 101, 65, 99, 116, 105, 118, 97, 116, 105, 111, 110, 83, 116, 97, 116, 101, 0, 105, 110, 116, 101, 114, 110, 97, 108, 83, 105, 110, 103, 108, 101, 83, 116, 101, 112, 83, 105, 109, 117, 108, 97, 116, 105, 111, 110, 0, 99, 114, 101, 97, 116, 101, 80, 114, 101, 100, 105, 99, 116, 105, 118, 101, 67, 111, 110, 116, 97, 99, 116, 115, 0, 114, 101, 108, 101, 97, 115, 101, 32, 112, 114, 101, 100, 105, 99, 116, 105, 118, 101, 32, 99, 111, 110, 116, 97, 99, 116, 32, 109, 97, 110, 105, 102, 111, 108, 100, 115, 0, 112, 114, 101, 100, 105, 99, 116, 105, 118, 101, 32, 99, 111, 110, 118, 101, 120, 83, 119, 101, 101, 112, 84, 101, 115, 116, 0, 117, 112, 100, 97, 116, 101, 65, 99, 116, 105, 111, 110, 115, 0, 50, 55, 73, 110, 112, 108, 97, 99, 101, 83, 111, 108, 118, 101, 114, 73, 115, 108, 97, 110, 100, 67, 97, 108, 108, 98, 97, 99, 107, 0, 78, 50, 53, 98, 116, 83, 105, 109, 117, 108, 97, 116, 105, 111, 110, 73, 115, 108, 97, 110, 100, 77, 97, 110, 97, 103, 101, 114, 49, 52, 73, 115, 108, 97, 110, 100, 67, 97, 108, 108, 98, 97, 99, 107, 69, 0, 49, 49, 98, 116, 82, 105, 103, 105, 100, 66, 111, 100, 121, 0, 98, 116, 82, 105, 103, 105, 100, 66, 111, 100, 121, 70, 108, 111, 97, 116, 68, 97, 116, 97, 0, 99, 97, 108, 99, 117, 108, 97, 116, 101, 83, 105, 109, 117, 108, 97, 116, 105, 111, 110, 73, 115, 108, 97, 110, 100, 115, 0, 115, 111, 108, 118, 101, 67, 111, 110, 115, 116, 114, 97, 105, 110, 116, 115, 0, 49, 54, 98, 116, 82, 97, 121, 99, 97, 115, 116, 86, 101, 104, 105, 99, 108, 101, 0, 50, 53, 98, 116, 68, 101, 102, 97, 117, 108, 116, 86, 101, 104, 105, 99, 108, 101, 82, 97, 121, 99, 97, 115, 116, 101, 114, 0, 49, 56, 98, 116, 86, 101, 104, 105, 99, 108, 101, 82, 97, 121, 99, 97, 115, 116, 101, 114, 0, 78, 49, 54, 98, 116, 67, 111, 108, 108, 105, 115, 105, 111, 110, 87, 111, 114, 108, 100, 50, 52, 67, 108, 111, 115, 101, 115, 116, 82, 97, 121, 82, 101, 115, 117, 108, 116, 67, 97, 108, 108, 98, 97, 99, 107, 69, 0, 98, 116, 86, 101, 99, 116, 111, 114, 51, 70, 108, 111, 97, 116, 68, 97, 116, 97, 0, 82, 111, 111, 116, 0, 50, 57, 67, 111, 110, 99, 114, 101, 116, 101, 67, 111, 110, 116, 97, 99, 116, 82, 101, 115, 117, 108, 116, 67, 97, 108, 108, 98, 97, 99, 107, 0, 78, 49, 54, 98, 116, 67, 111, 108, 108, 105, 115, 105, 111, 110, 87, 111, 114, 108, 100, 50, 49, 67, 111, 110, 116, 97, 99, 116, 82, 101, 115, 117, 108, 116, 67, 97, 108, 108, 98, 97, 99, 107, 69, 0, 123, 32, 118, 97, 114, 32, 115, 101, 108, 102, 32, 61, 32, 77, 111, 100, 117, 108, 101, 91, 39, 103, 101, 116, 67, 97, 99, 104, 101, 39, 93, 40, 77, 111, 100, 117, 108, 101, 91, 39, 67, 111, 110, 99, 114, 101, 116, 101, 67, 111, 110, 116, 97, 99, 116, 82, 101, 115, 117, 108, 116, 67, 97, 108, 108, 98, 97, 99, 107, 39, 93, 41, 91, 36, 48, 93, 59, 32, 105, 102, 32, 40, 33, 115, 101, 108, 102, 46, 104, 97, 115, 79, 119, 110, 80, 114, 111, 112, 101, 114, 116, 121, 40, 39, 97, 100, 100, 83, 105, 110, 103, 108, 101, 82, 101, 115, 117, 108, 116, 39, 41, 41, 32, 116, 104, 114, 111, 119, 32, 39, 97, 32, 74, 83, 73, 109, 112, 108, 101, 109, 101, 110, 116, 97, 116, 105, 111, 110, 32, 109, 117, 115, 116, 32, 105, 109, 112, 108, 101, 109, 101, 110, 116, 32, 97, 108, 108, 32, 102, 117, 110, 99, 116, 105, 111, 110, 115, 44, 32, 121, 111, 117, 32, 102, 111, 114, 103, 111, 116, 32, 67, 111, 110, 99, 114, 101, 116, 101, 67, 111, 110, 116, 97, 99, 116, 82, 101, 115, 117, 108, 116, 67, 97, 108, 108, 98, 97, 99, 107, 58, 58, 97, 100, 100, 83, 105, 110, 103, 108, 101, 82, 101, 115, 117, 108, 116, 46, 39, 59, 32, 114, 101, 116, 117, 114, 110, 32, 115, 101, 108, 102, 91, 39, 97, 100, 100, 83, 105, 110, 103, 108, 101, 82, 101, 115, 117, 108, 116, 39, 93, 40, 36, 49, 44, 36, 50, 44, 36, 51, 44, 36, 52, 44, 36, 53, 44, 36, 54, 44, 36, 55, 41, 59, 32, 125, 0, 50, 48, 98, 116, 68, 101, 102, 97, 117, 108, 116, 77, 111, 116, 105, 111, 110, 83, 116, 97, 116, 101, 0, 49, 51, 98, 116, 77, 111, 116, 105, 111, 110, 83, 116, 97, 116, 101, 0, 49, 57, 98, 116, 71, 104, 111, 115, 116, 80, 97, 105, 114, 67, 97, 108, 108, 98, 97, 99, 107, 0, 17, 0, 10, 0, 17, 17, 17, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 0, 17, 0, 15, 10, 17, 17, 17, 3, 10, 7, 0, 1, 19, 9, 11, 11, 0, 0, 9, 6, 11, 0, 0, 11, 0, 6, 17, 0, 0, 0, 17, 17, 17, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 0, 17, 0, 10, 10, 17, 17, 17, 0, 10, 0, 0, 2, 0, 9, 11, 0, 0, 0, 9, 0, 11, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 12, 0, 0, 0, 0, 9, 12, 0, 0, 0, 0, 0, 12, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 13, 0, 0, 0, 4, 13, 0, 0, 0, 0, 9, 14, 0, 0, 0, 0, 0, 14, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 15, 0, 0, 0, 0, 9, 16, 0, 0, 0, 0, 0, 16, 0, 0, 16, 0, 0, 18, 0, 0, 0, 18, 18, 18, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 18, 0, 0, 0, 18, 18, 18, 0, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 10, 0, 0, 0, 0, 9, 11, 0, 0, 0, 0, 0, 11, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 12, 0, 0, 0, 0, 9, 12, 0, 0, 0, 0, 0, 12, 0, 0, 12, 0, 0, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 65, 66, 67, 68, 69, 70, 45, 43, 32, 32, 32, 48, 88, 48, 120, 0, 84, 33, 34, 25, 13, 1, 2, 3, 17, 75, 28, 12, 16, 4, 11, 29, 18, 30, 39, 104, 110, 111, 112, 113, 98, 32, 5, 6, 15, 19, 20, 21, 26, 8, 22, 7, 40, 36, 23, 24, 9, 10, 14, 27, 31, 37, 35, 131, 130, 125, 38, 42, 43, 60, 61, 62, 63, 67, 71, 74, 77, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 105, 106, 107, 108, 114, 115, 116, 121, 122, 123, 124, 0, 73, 108, 108, 101, 103, 97, 108, 32, 98, 121, 116, 101, 32, 115, 101, 113, 117, 101, 110, 99, 101, 0, 68, 111, 109, 97, 105, 110, 32, 101, 114, 114, 111, 114, 0, 82, 101, 115, 117, 108, 116, 32, 110, 111, 116, 32, 114, 101, 112, 114, 101, 115, 101, 110, 116, 97, 98, 108, 101, 0, 78, 111, 116, 32, 97, 32, 116, 116, 121, 0, 80, 101, 114, 109, 105, 115, 115, 105, 111, 110, 32, 100, 101, 110, 105, 101, 100, 0, 79, 112, 101, 114, 97, 116, 105, 111, 110, 32, 110, 111, 116, 32, 112, 101, 114, 109, 105, 116, 116, 101, 100, 0, 78, 111, 32, 115, 117, 99, 104, 32, 102, 105, 108, 101, 32, 111, 114, 32, 100, 105, 114, 101, 99, 116, 111, 114, 121, 0, 78, 111, 32, 115, 117, 99, 104, 32, 112, 114, 111, 99, 101, 115, 115, 0, 70, 105, 108, 101, 32, 101, 120, 105, 115, 116, 115, 0, 86, 97, 108, 117, 101, 32, 116, 111, 111, 32, 108, 97, 114, 103, 101, 32, 102, 111, 114, 32, 100, 97, 116, 97, 32, 116, 121, 112, 101, 0, 78, 111, 32, 115, 112, 97, 99, 101, 32, 108, 101, 102, 116, 32, 111, 110, 32, 100, 101, 118, 105, 99, 101, 0, 79, 117, 116, 32, 111, 102, 32, 109, 101, 109, 111, 114, 121, 0, 82, 101, 115, 111, 117, 114, 99, 101, 32, 98, 117, 115, 121, 0, 73, 110, 116, 101, 114, 114, 117, 112, 116, 101, 100, 32, 115, 121, 115, 116, 101, 109, 32, 99, 97, 108, 108, 0, 82, 101, 115, 111, 117, 114, 99, 101, 32, 116, 101, 109, 112, 111, 114, 97, 114, 105, 108, 121, 32, 117, 110, 97, 118, 97, 105, 108, 97, 98, 108, 101, 0, 73, 110, 118, 97, 108, 105, 100, 32, 115, 101, 101, 107, 0, 67, 114, 111, 115, 115, 45, 100, 101, 118, 105, 99, 101, 32, 108, 105, 110, 107, 0, 82, 101, 97, 100, 45, 111, 110, 108, 121, 32, 102, 105, 108, 101, 32, 115, 121, 115, 116, 101, 109, 0, 68, 105, 114, 101, 99, 116, 111, 114, 121, 32, 110, 111, 116, 32, 101, 109, 112, 116, 121, 0, 67, 111, 110, 110, 101, 99, 116, 105, 111, 110, 32, 114, 101, 115, 101, 116, 32, 98, 121, 32, 112, 101, 101, 114, 0, 79, 112, 101, 114, 97, 116, 105, 111, 110, 32, 116, 105, 109, 101, 100, 32, 111, 117, 116, 0, 67, 111, 110, 110, 101, 99, 116, 105, 111, 110, 32, 114, 101, 102, 117, 115, 101, 100, 0, 72, 111, 115, 116, 32, 105, 115, 32, 100, 111, 119, 110, 0, 72, 111, 115, 116, 32, 105, 115, 32, 117, 110, 114, 101, 97, 99, 104, 97, 98, 108, 101, 0, 65, 100, 100, 114, 101, 115, 115, 32, 105, 110, 32, 117, 115, 101, 0, 66, 114, 111, 107, 101, 110, 32, 112, 105, 112, 101, 0, 73, 47, 79, 32, 101, 114, 114, 111, 114, 0, 78, 111, 32, 115, 117, 99, 104, 32, 100, 101, 118, 105, 99, 101, 32, 111, 114, 32, 97, 100, 100, 114, 101, 115, 115, 0, 66, 108, 111, 99, 107, 32, 100, 101, 118, 105, 99, 101, 32, 114, 101, 113, 117, 105, 114, 101, 100, 0, 78, 111, 32, 115, 117, 99, 104, 32, 100, 101, 118, 105, 99, 101, 0, 78, 111, 116, 32, 97, 32, 100, 105, 114, 101, 99, 116, 111, 114, 121, 0, 73, 115, 32, 97, 32, 100, 105, 114, 101, 99, 116, 111, 114, 121, 0, 84, 101, 120, 116, 32, 102, 105, 108, 101, 32, 98, 117, 115, 121, 0, 69, 120, 101, 99, 32, 102, 111, 114, 109, 97, 116, 32, 101, 114, 114, 111, 114, 0, 73, 110, 118, 97, 108, 105, 100, 32, 97, 114, 103, 117, 109, 101, 110, 116, 0, 65, 114, 103, 117, 109, 101, 110, 116, 32, 108, 105, 115, 116, 32, 116, 111, 111, 32, 108, 111, 110, 103, 0, 83, 121, 109, 98, 111, 108, 105, 99, 32, 108, 105, 110, 107, 32, 108, 111, 111, 112, 0, 70, 105, 108, 101, 110, 97, 109, 101, 32, 116, 111, 111, 32, 108, 111, 110, 103, 0, 84, 111, 111, 32, 109, 97, 110, 121, 32, 111, 112, 101, 110, 32, 102, 105, 108, 101, 115, 32, 105, 110, 32, 115, 121, 115, 116, 101, 109, 0, 78, 111, 32, 102, 105, 108, 101, 32, 100, 101, 115, 99, 114, 105, 112, 116, 111, 114, 115, 32, 97, 118, 97, 105, 108, 97, 98, 108, 101, 0, 66, 97, 100, 32, 102, 105, 108, 101, 32, 100, 101, 115, 99, 114, 105, 112, 116, 111, 114, 0, 78, 111, 32, 99, 104, 105, 108, 100, 32, 112, 114, 111, 99, 101, 115, 115, 0, 66, 97, 100, 32, 97, 100, 100, 114, 101, 115, 115, 0, 70, 105, 108, 101, 32, 116, 111, 111, 32, 108, 97, 114, 103, 101, 0, 84, 111, 111, 32, 109, 97, 110, 121, 32, 108, 105, 110, 107, 115, 0, 78, 111, 32, 108, 111, 99, 107, 115, 32, 97, 118, 97, 105, 108, 97, 98, 108, 101, 0, 82, 101, 115, 111, 117, 114, 99, 101, 32, 100, 101, 97, 100, 108, 111, 99, 107, 32, 119, 111, 117, 108, 100, 32, 111, 99, 99, 117, 114, 0, 83, 116, 97, 116, 101, 32, 110, 111, 116, 32, 114, 101, 99, 111, 118, 101, 114, 97, 98, 108, 101, 0, 80, 114, 101, 118, 105, 111, 117, 115, 32, 111, 119, 110, 101, 114, 32, 100, 105, 101, 100, 0, 79, 112, 101, 114, 97, 116, 105, 111, 110, 32, 99, 97, 110, 99, 101, 108, 101, 100, 0, 70, 117, 110, 99, 116, 105, 111, 110, 32, 110, 111, 116, 32, 105, 109, 112, 108, 101, 109, 101, 110, 116, 101, 100, 0, 78, 111, 32, 109, 101, 115, 115, 97, 103, 101, 32, 111, 102, 32, 100, 101, 115, 105, 114, 101, 100, 32, 116, 121, 112, 101, 0, 73, 100, 101, 110, 116, 105, 102, 105, 101, 114, 32, 114, 101, 109, 111, 118, 101, 100, 0, 68, 101, 118, 105, 99, 101, 32, 110, 111, 116, 32, 97, 32, 115, 116, 114, 101, 97, 109, 0, 78, 111, 32, 100, 97, 116, 97, 32, 97, 118, 97, 105, 108, 97, 98, 108, 101, 0, 68, 101, 118, 105, 99, 101, 32, 116, 105, 109, 101, 111, 117, 116, 0, 79, 117, 116, 32, 111, 102, 32, 115, 116, 114, 101, 97, 109, 115, 32, 114, 101, 115, 111, 117, 114, 99, 101, 115, 0, 76, 105, 110, 107, 32, 104, 97, 115, 32, 98, 101, 101, 110, 32, 115, 101, 118, 101, 114, 101, 100, 0, 80, 114, 111, 116, 111, 99, 111, 108, 32, 101, 114, 114, 111, 114, 0, 66, 97, 100, 32, 109, 101, 115, 115, 97, 103, 101, 0, 70, 105, 108, 101, 32, 100, 101, 115, 99, 114, 105, 112, 116, 111, 114, 32, 105, 110, 32, 98, 97, 100, 32, 115, 116, 97, 116, 101, 0, 78, 111, 116, 32, 97, 32, 115, 111, 99, 107, 101, 116, 0, 68, 101, 115, 116, 105, 110, 97, 116, 105, 111, 110, 32, 97, 100, 100, 114, 101, 115, 115, 32, 114, 101, 113, 117, 105, 114, 101, 100, 0, 77, 101, 115, 115, 97, 103, 101, 32, 116, 111, 111, 32, 108, 97, 114, 103, 101, 0, 80, 114, 111, 116, 111, 99, 111, 108, 32, 119, 114, 111, 110, 103, 32, 116, 121, 112, 101, 32, 102, 111, 114, 32, 115, 111, 99, 107, 101, 116, 0, 80, 114, 111, 116, 111, 99, 111, 108, 32, 110, 111, 116, 32, 97, 118, 97, 105, 108, 97, 98, 108, 101, 0, 80, 114, 111, 116, 111, 99, 111, 108, 32, 110, 111, 116, 32, 115, 117, 112, 112, 111, 114, 116, 101, 100, 0, 83, 111, 99, 107, 101, 116, 32, 116, 121, 112, 101, 32, 110, 111, 116, 32, 115, 117, 112, 112, 111, 114, 116, 101, 100, 0, 78, 111, 116, 32, 115, 117, 112, 112, 111, 114, 116, 101, 100, 0, 80, 114, 111, 116, 111, 99, 111, 108, 32, 102, 97, 109, 105, 108, 121, 32, 110, 111, 116, 32, 115, 117, 112, 112, 111, 114, 116, 101, 100, 0, 65, 100, 100, 114, 101, 115, 115, 32, 102, 97, 109, 105, 108, 121, 32, 110, 111, 116, 32, 115, 117, 112, 112, 111, 114, 116, 101, 100, 32, 98, 121, 32, 112, 114, 111, 116, 111, 99, 111, 108, 0, 65, 100, 100, 114, 101, 115, 115, 32, 110, 111, 116, 32, 97, 118, 97, 105, 108, 97, 98, 108, 101, 0, 78, 101, 116, 119, 111, 114, 107, 32, 105, 115, 32, 100, 111, 119, 110, 0, 78, 101, 116, 119, 111, 114, 107, 32, 117, 110, 114, 101, 97, 99, 104, 97, 98, 108, 101, 0, 67, 111, 110, 110, 101, 99, 116, 105, 111, 110, 32, 114, 101, 115, 101, 116, 32, 98, 121, 32, 110, 101, 116, 119, 111, 114, 107, 0, 67, 111, 110, 110, 101, 99, 116, 105, 111, 110, 32, 97, 98, 111, 114, 116, 101, 100, 0, 78, 111, 32, 98, 117, 102, 102, 101, 114, 32, 115, 112, 97, 99, 101, 32, 97, 118, 97, 105, 108, 97, 98, 108, 101, 0, 83, 111, 99, 107, 101, 116, 32, 105, 115, 32, 99, 111, 110, 110, 101, 99, 116, 101, 100, 0, 83, 111, 99, 107, 101, 116, 32, 110, 111, 116, 32, 99, 111, 110, 110, 101, 99, 116, 101, 100, 0, 67, 97, 110, 110, 111, 116, 32, 115, 101, 110, 100, 32, 97, 102, 116, 101, 114, 32, 115, 111, 99, 107, 101, 116, 32, 115, 104, 117, 116, 100, 111, 119, 110, 0, 79, 112, 101, 114, 97, 116, 105, 111, 110, 32, 97, 108, 114, 101, 97, 100, 121, 32, 105, 110, 32, 112, 114, 111, 103, 114, 101, 115, 115, 0, 79, 112, 101, 114, 97, 116, 105, 111, 110, 32, 105, 110, 32, 112, 114, 111, 103, 114, 101, 115, 115, 0, 83, 116, 97, 108, 101, 32, 102, 105, 108, 101, 32, 104, 97, 110, 100, 108, 101, 0, 82, 101, 109, 111, 116, 101, 32, 73, 47, 79, 32, 101, 114, 114, 111, 114, 0, 81, 117, 111, 116, 97, 32, 101, 120, 99, 101, 101, 100, 101, 100, 0, 78, 111, 32, 109, 101, 100, 105, 117, 109, 32, 102, 111, 117, 110, 100, 0, 87, 114, 111, 110, 103, 32, 109, 101, 100, 105, 117, 109, 32, 116, 121, 112, 101, 0, 78, 111, 32, 101, 114, 114, 111, 114, 32, 105, 110, 102, 111, 114, 109, 97, 116, 105, 111, 110, 0, 0, 40, 110, 117, 108, 108, 41, 0, 45, 48, 88, 43, 48, 88, 32, 48, 88, 45, 48, 120, 43, 48, 120, 32, 48, 120, 0, 105, 110, 102, 0, 73, 78, 70, 0, 110, 97, 110, 0, 78, 65, 78, 0, 46, 0, 99, 97, 110, 110, 111, 116, 32, 122, 101, 114, 111, 32, 111, 117, 116, 32, 116, 104, 114, 101, 97, 100, 32, 118, 97, 108, 117, 101, 32, 102, 111, 114, 32, 95, 95, 99, 120, 97, 95, 103, 101, 116, 95, 103, 108, 111, 98, 97, 108, 115, 40, 41, 0, 99, 97, 110, 110, 111, 116, 32, 99, 114, 101, 97, 116, 101, 32, 112, 116, 104, 114, 101, 97, 100, 32, 107, 101, 121, 32, 102, 111, 114, 32, 95, 95, 99, 120, 97, 95, 103, 101, 116, 95, 103, 108, 111, 98, 97, 108, 115, 40, 41, 0, 112, 116, 104, 114, 101, 97, 100, 95, 111, 110, 99, 101, 32, 102, 97, 105, 108, 117, 114, 101, 32, 105, 110, 32, 95, 95, 99, 120, 97, 95, 103, 101, 116, 95, 103, 108, 111, 98, 97, 108, 115, 95, 102, 97, 115, 116, 40, 41, 0, 78, 49, 48, 95, 95, 99, 120, 120, 97, 98, 105, 118, 49, 50, 48, 95, 95, 115, 105, 95, 99, 108, 97, 115, 115, 95, 116, 121, 112, 101, 95, 105, 110, 102, 111, 69, 0, 78, 49, 48, 95, 95, 99, 120, 120, 97, 98, 105, 118, 49, 49, 54, 95, 95, 115, 104, 105, 109, 95, 116, 121, 112, 101, 95, 105, 110, 102, 111, 69, 0, 83, 116, 57, 116, 121, 112, 101, 95, 105, 110, 102, 111, 0, 78, 49, 48, 95, 95, 99, 120, 120, 97, 98, 105, 118, 49, 49, 55, 95, 95, 99, 108, 97, 115, 115, 95, 116, 121, 112, 101, 95, 105, 110, 102, 111, 69, 0, 83, 116, 57, 101, 120, 99, 101, 112, 116, 105, 111, 110, 0, 117, 110, 99, 97, 117, 103, 104, 116, 0, 116, 101, 114, 109, 105, 110, 97, 116, 105, 110, 103, 32, 119, 105, 116, 104, 32, 37, 115, 32, 101, 120, 99, 101, 112, 116, 105, 111, 110, 32, 111, 102, 32, 116, 121, 112, 101, 32, 37, 115, 58, 32, 37, 115, 0, 116, 101, 114, 109, 105, 110, 97, 116, 105, 110, 103, 32, 119, 105, 116, 104, 32, 37, 115, 32, 101, 120, 99, 101, 112, 116, 105, 111, 110, 32, 111, 102, 32, 116, 121, 112, 101, 32, 37, 115, 0, 116, 101, 114, 109, 105, 110, 97, 116, 105, 110, 103, 32, 119, 105, 116, 104, 32, 37, 115, 32, 102, 111, 114, 101, 105, 103, 110, 32, 101, 120, 99, 101, 112, 116, 105, 111, 110, 0, 116, 101, 114, 109, 105, 110, 97, 116, 105, 110, 103, 0, 116, 101, 114, 109, 105, 110, 97, 116, 101, 95, 104, 97, 110, 100, 108, 101, 114, 32, 117, 110, 101, 120, 112, 101, 99, 116, 101, 100, 108, 121, 32, 114, 101, 116, 117, 114, 110, 101, 100, 0, 83, 116, 57, 98, 97, 100, 95, 97, 108, 108, 111, 99, 0, 115, 116, 100, 58, 58, 98, 97, 100, 95, 97, 108, 108, 111, 99, 0, 78, 49, 48, 95, 95, 99, 120, 120, 97, 98, 105, 118, 49, 49, 57, 95, 95, 112, 111, 105, 110, 116, 101, 114, 95, 116, 121, 112, 101, 95, 105, 110, 102, 111, 69, 0, 78, 49, 48, 95, 95, 99, 120, 120, 97, 98, 105, 118, 49, 49, 55, 95, 95, 112, 98, 97, 115, 101, 95, 116, 121, 112, 101, 95, 105, 110, 102, 111, 69, 0, 78, 49, 48, 95, 95, 99, 120, 120, 97, 98, 105, 118, 49, 50, 49, 95, 95, 118, 109, 105, 95, 99, 108, 97, 115, 115, 95, 116, 121, 112, 101, 95, 105, 110, 102, 111, 69, 0], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE + 10240);
        var tempDoublePtr = STATICTOP;
        STATICTOP += 16;
        Module["_i64Subtract"] = _i64Subtract;
        Module["_i64Add"] = _i64Add;
        function __ZSt18uncaught_exceptionv() {
          return !!__ZSt18uncaught_exceptionv.uncaught_exception;
        }
        var EXCEPTIONS = { last: 0, caught: [], infos: {}, deAdjust: function(adjusted) {
          if (!adjusted || EXCEPTIONS.infos[adjusted])
            return adjusted;
          for (var ptr in EXCEPTIONS.infos) {
            var info = EXCEPTIONS.infos[ptr];
            if (info.adjusted === adjusted) {
              return ptr;
            }
          }
          return adjusted;
        }, addRef: function(ptr) {
          if (!ptr)
            return;
          var info = EXCEPTIONS.infos[ptr];
          info.refcount++;
        }, decRef: function(ptr) {
          if (!ptr)
            return;
          var info = EXCEPTIONS.infos[ptr];
          assert(info.refcount > 0);
          info.refcount--;
          if (info.refcount === 0) {
            if (info.destructor) {
              Runtime.dynCall("vi", info.destructor, [ptr]);
            }
            delete EXCEPTIONS.infos[ptr];
            ___cxa_free_exception(ptr);
          }
        }, clearRef: function(ptr) {
          if (!ptr)
            return;
          var info = EXCEPTIONS.infos[ptr];
          info.refcount = 0;
        } };
        function ___resumeException(ptr) {
          if (!EXCEPTIONS.last) {
            EXCEPTIONS.last = ptr;
          }
          EXCEPTIONS.clearRef(EXCEPTIONS.deAdjust(ptr));
          throw ptr + " - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch.";
        }
        function ___cxa_find_matching_catch() {
          var thrown = EXCEPTIONS.last;
          if (!thrown) {
            return (asm["setTempRet0"](0), 0) | 0;
          }
          var info = EXCEPTIONS.infos[thrown];
          var throwntype = info.type;
          if (!throwntype) {
            return (asm["setTempRet0"](0), thrown) | 0;
          }
          var typeArray = Array.prototype.slice.call(arguments);
          var pointer = Module["___cxa_is_pointer_type"](throwntype);
          if (!___cxa_find_matching_catch.buffer)
            ___cxa_find_matching_catch.buffer = _malloc(4);
          HEAP32[___cxa_find_matching_catch.buffer >> 2] = thrown;
          thrown = ___cxa_find_matching_catch.buffer;
          for (var i = 0; i < typeArray.length; i++) {
            if (typeArray[i] && Module["___cxa_can_catch"](typeArray[i], throwntype, thrown)) {
              thrown = HEAP32[thrown >> 2];
              info.adjusted = thrown;
              return (asm["setTempRet0"](typeArray[i]), thrown) | 0;
            }
          }
          thrown = HEAP32[thrown >> 2];
          return (asm["setTempRet0"](throwntype), thrown) | 0;
        }
        function ___cxa_throw(ptr, type, destructor) {
          EXCEPTIONS.infos[ptr] = { ptr, adjusted: ptr, type, destructor, refcount: 0 };
          EXCEPTIONS.last = ptr;
          if (!("uncaught_exception" in __ZSt18uncaught_exceptionv)) {
            __ZSt18uncaught_exceptionv.uncaught_exception = 1;
          } else {
            __ZSt18uncaught_exceptionv.uncaught_exception++;
          }
          throw ptr + " - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch.";
        }
        Module["_memset"] = _memset;
        function ___gxx_personality_v0() {
        }
        Module["_bitshift64Shl"] = _bitshift64Shl;
        function _abort() {
          Module["abort"]();
        }
        function _pthread_once(ptr, func) {
          if (!_pthread_once.seen)
            _pthread_once.seen = {};
          if (ptr in _pthread_once.seen)
            return;
          Runtime.dynCall("v", func);
          _pthread_once.seen[ptr] = 1;
        }
        var PTHREAD_SPECIFIC = {};
        function _pthread_getspecific(key2) {
          return PTHREAD_SPECIFIC[key2] || 0;
        }
        var PTHREAD_SPECIFIC_NEXT_KEY = 1;
        var ERRNO_CODES = { EPERM: 1, ENOENT: 2, ESRCH: 3, EINTR: 4, EIO: 5, ENXIO: 6, E2BIG: 7, ENOEXEC: 8, EBADF: 9, ECHILD: 10, EAGAIN: 11, EWOULDBLOCK: 11, ENOMEM: 12, EACCES: 13, EFAULT: 14, ENOTBLK: 15, EBUSY: 16, EEXIST: 17, EXDEV: 18, ENODEV: 19, ENOTDIR: 20, EISDIR: 21, EINVAL: 22, ENFILE: 23, EMFILE: 24, ENOTTY: 25, ETXTBSY: 26, EFBIG: 27, ENOSPC: 28, ESPIPE: 29, EROFS: 30, EMLINK: 31, EPIPE: 32, EDOM: 33, ERANGE: 34, ENOMSG: 42, EIDRM: 43, ECHRNG: 44, EL2NSYNC: 45, EL3HLT: 46, EL3RST: 47, ELNRNG: 48, EUNATCH: 49, ENOCSI: 50, EL2HLT: 51, EDEADLK: 35, ENOLCK: 37, EBADE: 52, EBADR: 53, EXFULL: 54, ENOANO: 55, EBADRQC: 56, EBADSLT: 57, EDEADLOCK: 35, EBFONT: 59, ENOSTR: 60, ENODATA: 61, ETIME: 62, ENOSR: 63, ENONET: 64, ENOPKG: 65, EREMOTE: 66, ENOLINK: 67, EADV: 68, ESRMNT: 69, ECOMM: 70, EPROTO: 71, EMULTIHOP: 72, EDOTDOT: 73, EBADMSG: 74, ENOTUNIQ: 76, EBADFD: 77, EREMCHG: 78, ELIBACC: 79, ELIBBAD: 80, ELIBSCN: 81, ELIBMAX: 82, ELIBEXEC: 83, ENOSYS: 38, ENOTEMPTY: 39, ENAMETOOLONG: 36, ELOOP: 40, EOPNOTSUPP: 95, EPFNOSUPPORT: 96, ECONNRESET: 104, ENOBUFS: 105, EAFNOSUPPORT: 97, EPROTOTYPE: 91, ENOTSOCK: 88, ENOPROTOOPT: 92, ESHUTDOWN: 108, ECONNREFUSED: 111, EADDRINUSE: 98, ECONNABORTED: 103, ENETUNREACH: 101, ENETDOWN: 100, ETIMEDOUT: 110, EHOSTDOWN: 112, EHOSTUNREACH: 113, EINPROGRESS: 115, EALREADY: 114, EDESTADDRREQ: 89, EMSGSIZE: 90, EPROTONOSUPPORT: 93, ESOCKTNOSUPPORT: 94, EADDRNOTAVAIL: 99, ENETRESET: 102, EISCONN: 106, ENOTCONN: 107, ETOOMANYREFS: 109, EUSERS: 87, EDQUOT: 122, ESTALE: 116, ENOTSUP: 95, ENOMEDIUM: 123, EILSEQ: 84, EOVERFLOW: 75, ECANCELED: 125, ENOTRECOVERABLE: 131, EOWNERDEAD: 130, ESTRPIPE: 86 };
        function _pthread_key_create(key2, destructor) {
          if (key2 == 0) {
            return ERRNO_CODES.EINVAL;
          }
          HEAP32[key2 >> 2] = PTHREAD_SPECIFIC_NEXT_KEY;
          PTHREAD_SPECIFIC[PTHREAD_SPECIFIC_NEXT_KEY] = 0;
          PTHREAD_SPECIFIC_NEXT_KEY++;
          return 0;
        }
        var _llvm_pow_f32 = Math_pow;
        function _pthread_setspecific(key2, value) {
          if (!(key2 in PTHREAD_SPECIFIC)) {
            return ERRNO_CODES.EINVAL;
          }
          PTHREAD_SPECIFIC[key2] = value;
          return 0;
        }
        function _malloc(bytes) {
          var ptr = Runtime.dynamicAlloc(bytes + 8);
          return ptr + 8 & 4294967288;
        }
        Module["_malloc"] = _malloc;
        function ___cxa_allocate_exception(size) {
          return _malloc(size);
        }
        Module["_bitshift64Ashr"] = _bitshift64Ashr;
        Module["_bitshift64Lshr"] = _bitshift64Lshr;
        function ___cxa_pure_virtual() {
          ABORT = true;
          throw "Pure virtual function called!";
        }
        function _pthread_cleanup_push(routine, arg) {
          __ATEXIT__.push(function() {
            Runtime.dynCall("vi", routine, [arg]);
          });
          _pthread_cleanup_push.level = __ATEXIT__.length;
        }
        function _pthread_cleanup_pop() {
          assert(_pthread_cleanup_push.level == __ATEXIT__.length, "cannot pop if something else added meanwhile!");
          __ATEXIT__.pop();
          _pthread_cleanup_push.level = __ATEXIT__.length;
        }
        function ___cxa_begin_catch(ptr) {
          __ZSt18uncaught_exceptionv.uncaught_exception--;
          EXCEPTIONS.caught.push(ptr);
          EXCEPTIONS.addRef(EXCEPTIONS.deAdjust(ptr));
          return ptr;
        }
        function _emscripten_memcpy_big(dest, src, num) {
          HEAPU8.set(HEAPU8.subarray(src, src + num), dest);
          return dest;
        }
        Module["_memcpy"] = _memcpy;
        var SYSCALLS = { varargs: 0, get: function(varargs) {
          SYSCALLS.varargs += 4;
          var ret = HEAP32[SYSCALLS.varargs - 4 >> 2];
          return ret;
        }, getStr: function() {
          var ret = Pointer_stringify(SYSCALLS.get());
          return ret;
        }, get64: function() {
          var low = SYSCALLS.get(), high = SYSCALLS.get();
          if (low >= 0)
            assert(high === 0);
          else
            assert(high === -1);
          return low;
        }, getZero: function() {
          assert(SYSCALLS.get() === 0);
        } };
        function ___syscall6(which, varargs) {
          SYSCALLS.varargs = varargs;
          try {
            var stream = SYSCALLS.getStreamFromFD();
            FS.close(stream);
            return 0;
          } catch (e) {
            if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError))
              abort(e);
            return -e.errno;
          }
        }
        function _sbrk(bytes) {
          var self = _sbrk;
          if (!self.called) {
            DYNAMICTOP = alignMemoryPage(DYNAMICTOP);
            self.called = true;
            assert(Runtime.dynamicAlloc);
            self.alloc = Runtime.dynamicAlloc;
            Runtime.dynamicAlloc = function() {
              abort("cannot dynamically allocate, sbrk now has control");
            };
          }
          var ret = DYNAMICTOP;
          if (bytes != 0) {
            var success = self.alloc(bytes);
            if (!success)
              return -1 >>> 0;
          }
          return ret;
        }
        Module["_memmove"] = _memmove;
        function _gettimeofday(ptr) {
          var now = Date.now();
          HEAP32[ptr >> 2] = now / 1e3 | 0;
          HEAP32[ptr + 4 >> 2] = now % 1e3 * 1e3 | 0;
          return 0;
        }
        Module["_llvm_bswap_i32"] = _llvm_bswap_i32;
        function _llvm_trap() {
          abort("trap!");
        }
        Module["_pthread_self"] = _pthread_self;
        function ___syscall140(which, varargs) {
          SYSCALLS.varargs = varargs;
          try {
            var stream = SYSCALLS.getStreamFromFD(), offset_high = SYSCALLS.get(), offset_low = SYSCALLS.get(), result = SYSCALLS.get(), whence = SYSCALLS.get();
            var offset = offset_low;
            assert(offset_high === 0);
            FS.llseek(stream, offset, whence);
            HEAP32[result >> 2] = stream.position;
            if (stream.getdents && offset === 0 && whence === 0)
              stream.getdents = null;
            return 0;
          } catch (e) {
            if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError))
              abort(e);
            return -e.errno;
          }
        }
        function ___syscall146(which, varargs) {
          SYSCALLS.varargs = varargs;
          try {
            var stream = SYSCALLS.get(), iov = SYSCALLS.get(), iovcnt = SYSCALLS.get();
            var ret = 0;
            if (!___syscall146.buffer) {
              ___syscall146.buffers = [null, [], []];
              ___syscall146.printChar = function(stream2, curr) {
                var buffer2 = ___syscall146.buffers[stream2];
                assert(buffer2);
                if (curr === 0 || curr === 10) {
                  (stream2 === 1 ? Module["print"] : Module["printErr"])(UTF8ArrayToString(buffer2, 0));
                  buffer2.length = 0;
                } else {
                  buffer2.push(curr);
                }
              };
            }
            for (var i = 0; i < iovcnt; i++) {
              var ptr = HEAP32[iov + i * 8 >> 2];
              var len = HEAP32[iov + (i * 8 + 4) >> 2];
              for (var j = 0; j < len; j++) {
                ___syscall146.printChar(stream, HEAPU8[ptr + j]);
              }
              ret += len;
            }
            return ret;
          } catch (e) {
            if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError))
              abort(e);
            return -e.errno;
          }
        }
        __ATEXIT__.push(function() {
          var fflush = Module["_fflush"];
          if (fflush)
            fflush(0);
          var printChar = ___syscall146.printChar;
          if (!printChar)
            return;
          var buffers = ___syscall146.buffers;
          if (buffers[1].length)
            printChar(1, 10);
          if (buffers[2].length)
            printChar(2, 10);
        });
        STACK_BASE = STACKTOP = Runtime.alignMemory(STATICTOP);
        staticSealed = true;
        STACK_MAX = STACK_BASE + TOTAL_STACK;
        DYNAMIC_BASE = DYNAMICTOP = Runtime.alignMemory(STACK_MAX);
        var cttz_i8 = allocate([8, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 5, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 6, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 5, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 7, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 5, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 6, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 5, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0], "i8", ALLOC_DYNAMIC);
        function invoke_viiiii(index, a1, a2, a3, a4, a5) {
          try {
            Module["dynCall_viiiii"](index, a1, a2, a3, a4, a5);
          } catch (e) {
            if (typeof e !== "number" && e !== "longjmp")
              throw e;
            asm["setThrew"](1, 0);
          }
        }
        function invoke_vid(index, a1, a2) {
          try {
            Module["dynCall_vid"](index, a1, a2);
          } catch (e) {
            if (typeof e !== "number" && e !== "longjmp")
              throw e;
            asm["setThrew"](1, 0);
          }
        }
        function invoke_vi(index, a1) {
          try {
            Module["dynCall_vi"](index, a1);
          } catch (e) {
            if (typeof e !== "number" && e !== "longjmp")
              throw e;
            asm["setThrew"](1, 0);
          }
        }
        function invoke_viiidii(index, a1, a2, a3, a4, a5, a6) {
          try {
            Module["dynCall_viiidii"](index, a1, a2, a3, a4, a5, a6);
          } catch (e) {
            if (typeof e !== "number" && e !== "longjmp")
              throw e;
            asm["setThrew"](1, 0);
          }
        }
        function invoke_vii(index, a1, a2) {
          try {
            Module["dynCall_vii"](index, a1, a2);
          } catch (e) {
            if (typeof e !== "number" && e !== "longjmp")
              throw e;
            asm["setThrew"](1, 0);
          }
        }
        function invoke_iiiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10) {
          try {
            return Module["dynCall_iiiiiiiiiii"](index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
          } catch (e) {
            if (typeof e !== "number" && e !== "longjmp")
              throw e;
            asm["setThrew"](1, 0);
          }
        }
        function invoke_ii(index, a1) {
          try {
            return Module["dynCall_ii"](index, a1);
          } catch (e) {
            if (typeof e !== "number" && e !== "longjmp")
              throw e;
            asm["setThrew"](1, 0);
          }
        }
        function invoke_viidi(index, a1, a2, a3, a4) {
          try {
            Module["dynCall_viidi"](index, a1, a2, a3, a4);
          } catch (e) {
            if (typeof e !== "number" && e !== "longjmp")
              throw e;
            asm["setThrew"](1, 0);
          }
        }
        function invoke_viddiii(index, a1, a2, a3, a4, a5, a6) {
          try {
            Module["dynCall_viddiii"](index, a1, a2, a3, a4, a5, a6);
          } catch (e) {
            if (typeof e !== "number" && e !== "longjmp")
              throw e;
            asm["setThrew"](1, 0);
          }
        }
        function invoke_vidii(index, a1, a2, a3, a4) {
          try {
            Module["dynCall_vidii"](index, a1, a2, a3, a4);
          } catch (e) {
            if (typeof e !== "number" && e !== "longjmp")
              throw e;
            asm["setThrew"](1, 0);
          }
        }
        function invoke_iiiii(index, a1, a2, a3, a4) {
          try {
            return Module["dynCall_iiiii"](index, a1, a2, a3, a4);
          } catch (e) {
            if (typeof e !== "number" && e !== "longjmp")
              throw e;
            asm["setThrew"](1, 0);
          }
        }
        function invoke_vidi(index, a1, a2, a3) {
          try {
            Module["dynCall_vidi"](index, a1, a2, a3);
          } catch (e) {
            if (typeof e !== "number" && e !== "longjmp")
              throw e;
            asm["setThrew"](1, 0);
          }
        }
        function invoke_diiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8) {
          try {
            return Module["dynCall_diiiiiiii"](index, a1, a2, a3, a4, a5, a6, a7, a8);
          } catch (e) {
            if (typeof e !== "number" && e !== "longjmp")
              throw e;
            asm["setThrew"](1, 0);
          }
        }
        function invoke_viiiiddddiid(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11) {
          try {
            Module["dynCall_viiiiddddiid"](index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
          } catch (e) {
            if (typeof e !== "number" && e !== "longjmp")
              throw e;
            asm["setThrew"](1, 0);
          }
        }
        function invoke_diiiii(index, a1, a2, a3, a4, a5) {
          try {
            return Module["dynCall_diiiii"](index, a1, a2, a3, a4, a5);
          } catch (e) {
            if (typeof e !== "number" && e !== "longjmp")
              throw e;
            asm["setThrew"](1, 0);
          }
        }
        function invoke_iiii(index, a1, a2, a3) {
          try {
            return Module["dynCall_iiii"](index, a1, a2, a3);
          } catch (e) {
            if (typeof e !== "number" && e !== "longjmp")
              throw e;
            asm["setThrew"](1, 0);
          }
        }
        function invoke_viiiiii(index, a1, a2, a3, a4, a5, a6) {
          try {
            Module["dynCall_viiiiii"](index, a1, a2, a3, a4, a5, a6);
          } catch (e) {
            if (typeof e !== "number" && e !== "longjmp")
              throw e;
            asm["setThrew"](1, 0);
          }
        }
        function invoke_iiid(index, a1, a2, a3) {
          try {
            return Module["dynCall_iiid"](index, a1, a2, a3);
          } catch (e) {
            if (typeof e !== "number" && e !== "longjmp")
              throw e;
            asm["setThrew"](1, 0);
          }
        }
        function invoke_di(index, a1) {
          try {
            return Module["dynCall_di"](index, a1);
          } catch (e) {
            if (typeof e !== "number" && e !== "longjmp")
              throw e;
            asm["setThrew"](1, 0);
          }
        }
        function invoke_iiiiiii(index, a1, a2, a3, a4, a5, a6) {
          try {
            return Module["dynCall_iiiiiii"](index, a1, a2, a3, a4, a5, a6);
          } catch (e) {
            if (typeof e !== "number" && e !== "longjmp")
              throw e;
            asm["setThrew"](1, 0);
          }
        }
        function invoke_diiidii(index, a1, a2, a3, a4, a5, a6) {
          try {
            return Module["dynCall_diiidii"](index, a1, a2, a3, a4, a5, a6);
          } catch (e) {
            if (typeof e !== "number" && e !== "longjmp")
              throw e;
            asm["setThrew"](1, 0);
          }
        }
        function invoke_viidii(index, a1, a2, a3, a4, a5) {
          try {
            Module["dynCall_viidii"](index, a1, a2, a3, a4, a5);
          } catch (e) {
            if (typeof e !== "number" && e !== "longjmp")
              throw e;
            asm["setThrew"](1, 0);
          }
        }
        function invoke_viiiiiii(index, a1, a2, a3, a4, a5, a6, a7) {
          try {
            Module["dynCall_viiiiiii"](index, a1, a2, a3, a4, a5, a6, a7);
          } catch (e) {
            if (typeof e !== "number" && e !== "longjmp")
              throw e;
            asm["setThrew"](1, 0);
          }
        }
        function invoke_viiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9) {
          try {
            Module["dynCall_viiiiiiiii"](index, a1, a2, a3, a4, a5, a6, a7, a8, a9);
          } catch (e) {
            if (typeof e !== "number" && e !== "longjmp")
              throw e;
            asm["setThrew"](1, 0);
          }
        }
        function invoke_viiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10) {
          try {
            Module["dynCall_viiiiiiiiii"](index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
          } catch (e) {
            if (typeof e !== "number" && e !== "longjmp")
              throw e;
            asm["setThrew"](1, 0);
          }
        }
        function invoke_iii(index, a1, a2) {
          try {
            return Module["dynCall_iii"](index, a1, a2);
          } catch (e) {
            if (typeof e !== "number" && e !== "longjmp")
              throw e;
            asm["setThrew"](1, 0);
          }
        }
        function invoke_diii(index, a1, a2, a3) {
          try {
            return Module["dynCall_diii"](index, a1, a2, a3);
          } catch (e) {
            if (typeof e !== "number" && e !== "longjmp")
              throw e;
            asm["setThrew"](1, 0);
          }
        }
        function invoke_diiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10) {
          try {
            return Module["dynCall_diiiiiiiiii"](index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
          } catch (e) {
            if (typeof e !== "number" && e !== "longjmp")
              throw e;
            asm["setThrew"](1, 0);
          }
        }
        function invoke_viiiid(index, a1, a2, a3, a4, a5) {
          try {
            Module["dynCall_viiiid"](index, a1, a2, a3, a4, a5);
          } catch (e) {
            if (typeof e !== "number" && e !== "longjmp")
              throw e;
            asm["setThrew"](1, 0);
          }
        }
        function invoke_diiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9) {
          try {
            return Module["dynCall_diiiiiiiii"](index, a1, a2, a3, a4, a5, a6, a7, a8, a9);
          } catch (e) {
            if (typeof e !== "number" && e !== "longjmp")
              throw e;
            asm["setThrew"](1, 0);
          }
        }
        function invoke_did(index, a1, a2) {
          try {
            return Module["dynCall_did"](index, a1, a2);
          } catch (e) {
            if (typeof e !== "number" && e !== "longjmp")
              throw e;
            asm["setThrew"](1, 0);
          }
        }
        function invoke_viiiidddddidi(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12) {
          try {
            Module["dynCall_viiiidddddidi"](index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
          } catch (e) {
            if (typeof e !== "number" && e !== "longjmp")
              throw e;
            asm["setThrew"](1, 0);
          }
        }
        function invoke_diidii(index, a1, a2, a3, a4, a5) {
          try {
            return Module["dynCall_diidii"](index, a1, a2, a3, a4, a5);
          } catch (e) {
            if (typeof e !== "number" && e !== "longjmp")
              throw e;
            asm["setThrew"](1, 0);
          }
        }
        function invoke_diiii(index, a1, a2, a3, a4) {
          try {
            return Module["dynCall_diiii"](index, a1, a2, a3, a4);
          } catch (e) {
            if (typeof e !== "number" && e !== "longjmp")
              throw e;
            asm["setThrew"](1, 0);
          }
        }
        function invoke_iiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9) {
          try {
            return Module["dynCall_iiiiiiiiii"](index, a1, a2, a3, a4, a5, a6, a7, a8, a9);
          } catch (e) {
            if (typeof e !== "number" && e !== "longjmp")
              throw e;
            asm["setThrew"](1, 0);
          }
        }
        function invoke_viiid(index, a1, a2, a3, a4) {
          try {
            Module["dynCall_viiid"](index, a1, a2, a3, a4);
          } catch (e) {
            if (typeof e !== "number" && e !== "longjmp")
              throw e;
            asm["setThrew"](1, 0);
          }
        }
        function invoke_viii(index, a1, a2, a3) {
          try {
            Module["dynCall_viii"](index, a1, a2, a3);
          } catch (e) {
            if (typeof e !== "number" && e !== "longjmp")
              throw e;
            asm["setThrew"](1, 0);
          }
        }
        function invoke_v(index) {
          try {
            Module["dynCall_v"](index);
          } catch (e) {
            if (typeof e !== "number" && e !== "longjmp")
              throw e;
            asm["setThrew"](1, 0);
          }
        }
        function invoke_viid(index, a1, a2, a3) {
          try {
            Module["dynCall_viid"](index, a1, a2, a3);
          } catch (e) {
            if (typeof e !== "number" && e !== "longjmp")
              throw e;
            asm["setThrew"](1, 0);
          }
        }
        function invoke_iidid(index, a1, a2, a3, a4) {
          try {
            return Module["dynCall_iidid"](index, a1, a2, a3, a4);
          } catch (e) {
            if (typeof e !== "number" && e !== "longjmp")
              throw e;
            asm["setThrew"](1, 0);
          }
        }
        function invoke_viiii(index, a1, a2, a3, a4) {
          try {
            Module["dynCall_viiii"](index, a1, a2, a3, a4);
          } catch (e) {
            if (typeof e !== "number" && e !== "longjmp")
              throw e;
            asm["setThrew"](1, 0);
          }
        }
        Module.asmGlobalArg = { "Math": Math, "Int8Array": Int8Array, "Int16Array": Int16Array, "Int32Array": Int32Array, "Uint8Array": Uint8Array, "Uint16Array": Uint16Array, "Uint32Array": Uint32Array, "Float32Array": Float32Array, "Float64Array": Float64Array, "NaN": NaN, "Infinity": Infinity };
        Module.asmLibraryArg = { "abort": abort, "assert": assert, "invoke_viiiii": invoke_viiiii, "invoke_vid": invoke_vid, "invoke_vi": invoke_vi, "invoke_viiidii": invoke_viiidii, "invoke_vii": invoke_vii, "invoke_iiiiiiiiiii": invoke_iiiiiiiiiii, "invoke_ii": invoke_ii, "invoke_viidi": invoke_viidi, "invoke_viddiii": invoke_viddiii, "invoke_vidii": invoke_vidii, "invoke_iiiii": invoke_iiiii, "invoke_vidi": invoke_vidi, "invoke_diiiiiiii": invoke_diiiiiiii, "invoke_viiiiddddiid": invoke_viiiiddddiid, "invoke_diiiii": invoke_diiiii, "invoke_iiii": invoke_iiii, "invoke_viiiiii": invoke_viiiiii, "invoke_iiid": invoke_iiid, "invoke_di": invoke_di, "invoke_iiiiiii": invoke_iiiiiii, "invoke_diiidii": invoke_diiidii, "invoke_viidii": invoke_viidii, "invoke_viiiiiii": invoke_viiiiiii, "invoke_viiiiiiiii": invoke_viiiiiiiii, "invoke_viiiiiiiiii": invoke_viiiiiiiiii, "invoke_iii": invoke_iii, "invoke_diii": invoke_diii, "invoke_diiiiiiiiii": invoke_diiiiiiiiii, "invoke_viiiid": invoke_viiiid, "invoke_diiiiiiiii": invoke_diiiiiiiii, "invoke_did": invoke_did, "invoke_viiiidddddidi": invoke_viiiidddddidi, "invoke_diidii": invoke_diidii, "invoke_diiii": invoke_diiii, "invoke_iiiiiiiiii": invoke_iiiiiiiiii, "invoke_viiid": invoke_viiid, "invoke_viii": invoke_viii, "invoke_v": invoke_v, "invoke_viid": invoke_viid, "invoke_iidid": invoke_iidid, "invoke_viiii": invoke_viiii, "_pthread_cleanup_pop": _pthread_cleanup_pop, "_abort": _abort, "___gxx_personality_v0": ___gxx_personality_v0, "___cxa_allocate_exception": ___cxa_allocate_exception, "__ZSt18uncaught_exceptionv": __ZSt18uncaught_exceptionv, "_sbrk": _sbrk, "_llvm_pow_f32": _llvm_pow_f32, "___cxa_begin_catch": ___cxa_begin_catch, "_emscripten_memcpy_big": _emscripten_memcpy_big, "___resumeException": ___resumeException, "___cxa_find_matching_catch": ___cxa_find_matching_catch, "_pthread_getspecific": _pthread_getspecific, "_pthread_once": _pthread_once, "_llvm_trap": _llvm_trap, "_pthread_key_create": _pthread_key_create, "_emscripten_asm_const_diiiiiiii": _emscripten_asm_const_diiiiiiii, "_pthread_setspecific": _pthread_setspecific, "___cxa_throw": ___cxa_throw, "___syscall6": ___syscall6, "_pthread_cleanup_push": _pthread_cleanup_push, "_gettimeofday": _gettimeofday, "___syscall140": ___syscall140, "___cxa_pure_virtual": ___cxa_pure_virtual, "___syscall146": ___syscall146, "STACKTOP": STACKTOP, "STACK_MAX": STACK_MAX, "tempDoublePtr": tempDoublePtr, "ABORT": ABORT, "cttz_i8": cttz_i8 };
        var asm = function(global, env, buffer2) {
          ;
          var a = new global.Int8Array(buffer2);
          var b = new global.Int16Array(buffer2);
          var c = new global.Int32Array(buffer2);
          var d = new global.Uint8Array(buffer2);
          var e = new global.Uint16Array(buffer2);
          var f = new global.Uint32Array(buffer2);
          var g = new global.Float32Array(buffer2);
          var h = new global.Float64Array(buffer2);
          var i = env.STACKTOP | 0;
          var j = env.STACK_MAX | 0;
          var k = env.tempDoublePtr | 0;
          var l = env.ABORT | 0;
          var m = env.cttz_i8 | 0;
          var n = 0;
          var o = 0;
          var p = 0;
          var q = 0;
          var r = global.NaN, s = global.Infinity;
          var t = 0, u = 0, v = 0, w = 0, x = 0, y = 0, z = 0, A = 0, B = 0;
          var C = 0;
          var D = 0;
          var E = 0;
          var F = 0;
          var G = 0;
          var H = 0;
          var I = 0;
          var J = 0;
          var K = 0;
          var L = 0;
          var M = global.Math.floor;
          var N = global.Math.abs;
          var O = global.Math.sqrt;
          var P = global.Math.pow;
          var Q = global.Math.cos;
          var R = global.Math.sin;
          var S = global.Math.tan;
          var T = global.Math.acos;
          var U = global.Math.asin;
          var V = global.Math.atan;
          var W = global.Math.atan2;
          var X = global.Math.exp;
          var Y = global.Math.log;
          var Z = global.Math.ceil;
          var _ = global.Math.imul;
          var $ = global.Math.min;
          var aa = global.Math.clz32;
          var ba = env.abort;
          var ca = env.assert;
          var da = env.invoke_viiiii;
          var ea = env.invoke_vid;
          var fa = env.invoke_vi;
          var ga = env.invoke_viiidii;
          var ha = env.invoke_vii;
          var ia = env.invoke_iiiiiiiiiii;
          var ja = env.invoke_ii;
          var ka = env.invoke_viidi;
          var la = env.invoke_viddiii;
          var ma = env.invoke_vidii;
          var na = env.invoke_iiiii;
          var oa = env.invoke_vidi;
          var pa = env.invoke_diiiiiiii;
          var qa = env.invoke_viiiiddddiid;
          var ra = env.invoke_diiiii;
          var sa = env.invoke_iiii;
          var ta = env.invoke_viiiiii;
          var ua = env.invoke_iiid;
          var va = env.invoke_di;
          var wa = env.invoke_iiiiiii;
          var xa = env.invoke_diiidii;
          var ya = env.invoke_viidii;
          var za = env.invoke_viiiiiii;
          var Aa = env.invoke_viiiiiiiii;
          var Ba = env.invoke_viiiiiiiiii;
          var Ca = env.invoke_iii;
          var Da = env.invoke_diii;
          var Ea = env.invoke_diiiiiiiiii;
          var Fa = env.invoke_viiiid;
          var Ga = env.invoke_diiiiiiiii;
          var Ha = env.invoke_did;
          var Ia = env.invoke_viiiidddddidi;
          var Ja = env.invoke_diidii;
          var Ka = env.invoke_diiii;
          var La = env.invoke_iiiiiiiiii;
          var Ma = env.invoke_viiid;
          var Na = env.invoke_viii;
          var Oa = env.invoke_v;
          var Pa = env.invoke_viid;
          var Qa = env.invoke_iidid;
          var Ra = env.invoke_viiii;
          var Sa = env._pthread_cleanup_pop;
          var Ta = env._abort;
          var Ua = env.___gxx_personality_v0;
          var Va = env.___cxa_allocate_exception;
          var Wa = env.__ZSt18uncaught_exceptionv;
          var Xa = env._sbrk;
          var Ya = env._llvm_pow_f32;
          var Za = env.___cxa_begin_catch;
          var _a = env._emscripten_memcpy_big;
          var $a = env.___resumeException;
          var ab = env.___cxa_find_matching_catch;
          var bb = env._pthread_getspecific;
          var cb = env._pthread_once;
          var db = env._llvm_trap;
          var eb = env._pthread_key_create;
          var fb = env._emscripten_asm_const_diiiiiiii;
          var gb = env._pthread_setspecific;
          var hb = env.___cxa_throw;
          var ib = env.___syscall6;
          var jb = env._pthread_cleanup_push;
          var kb = env._gettimeofday;
          var lb = env.___syscall140;
          var mb = env.___cxa_pure_virtual;
          var nb = env.___syscall146;
          var ob = 0;
          function Oy(b2, d2, e2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0, N2 = 0, O2 = 0, P2 = 0;
            s2 = i;
            i = i + 16 | 0;
            c[5637] = (c[5637] | 0) + 1;
            f2 = qG(1479) | 0;
            if (!f2)
              r2 = 0;
            else {
              c[(f2 + 4 + 15 & -16) + -4 >> 2] = f2;
              r2 = f2 + 4 + 15 & -16;
            }
            if (!(a[19880] | 0)) {
              a[19880] = 1;
              c[s2 >> 2] = 0;
              c[s2 + 4 >> 2] = 0;
              c[s2 + 8 >> 2] = 0;
              c[s2 + 12 >> 2] = 0;
              Cr(21260, 0, 0, 0, s2);
            }
            c[5366] = c[5366] | 1;
            g[5407] = 0;
            t2 = +g[5417] * 0;
            u2 = +g[5418] * 0;
            g[5412] = +g[5416] * 0;
            g[5413] = t2;
            g[5414] = u2;
            g[5415] = 0;
            c[5420] = 0;
            c[5421] = 0;
            c[5422] = 0;
            c[5423] = 0;
            u2 = +g[5409] * 0;
            t2 = +g[5410] * 0;
            g[5461] = +g[5408] * 0;
            g[5462] = u2;
            g[5463] = t2;
            g[5464] = 0;
            c[r2 + 4 >> 2] = 12;
            c[r2 + 8 >> 2] = -1;
            c[r2 + 12 >> 2] = -1;
            g[r2 + 16 >> 2] = 34028234663852886e22;
            a[r2 + 20 >> 0] = 1;
            a[r2 + 21 >> 0] = 0;
            c[r2 + 24 >> 2] = -1;
            l2 = r2 + 28 | 0;
            c[l2 >> 2] = 21260;
            m2 = r2 + 32 | 0;
            c[m2 >> 2] = b2;
            g[r2 + 36 >> 2] = 0;
            g[r2 + 40 >> 2] = 0.30000001192092896;
            c[r2 + 44 >> 2] = 0;
            c[r2 >> 2] = 7300;
            n2 = r2 + 112 | 0;
            c[n2 >> 2] = c[d2 >> 2];
            c[n2 + 4 >> 2] = c[d2 + 4 >> 2];
            c[n2 + 8 >> 2] = c[d2 + 8 >> 2];
            c[n2 + 12 >> 2] = c[d2 + 12 >> 2];
            o2 = r2 + 128 | 0;
            c[o2 >> 2] = c[d2 + 16 >> 2];
            c[o2 + 4 >> 2] = c[d2 + 16 + 4 >> 2];
            c[o2 + 8 >> 2] = c[d2 + 16 + 8 >> 2];
            c[o2 + 12 >> 2] = c[d2 + 16 + 12 >> 2];
            p2 = r2 + 144 | 0;
            c[p2 >> 2] = c[d2 + 32 >> 2];
            c[p2 + 4 >> 2] = c[d2 + 32 + 4 >> 2];
            c[p2 + 8 >> 2] = c[d2 + 32 + 8 >> 2];
            c[p2 + 12 >> 2] = c[d2 + 32 + 12 >> 2];
            q2 = r2 + 160 | 0;
            c[q2 >> 2] = c[d2 + 48 >> 2];
            c[q2 + 4 >> 2] = c[d2 + 48 + 4 >> 2];
            c[q2 + 8 >> 2] = c[d2 + 48 + 8 >> 2];
            c[q2 + 12 >> 2] = c[d2 + 48 + 12 >> 2];
            f2 = r2 + 728 | 0;
            d2 = r2 + 760 | 0;
            h2 = r2 + 908 | 0;
            j2 = r2 + 680 | 0;
            k2 = j2 + 48 | 0;
            do {
              c[j2 >> 2] = 0;
              j2 = j2 + 4 | 0;
            } while ((j2 | 0) < (k2 | 0));
            c[f2 >> 2] = 1045220557;
            c[r2 + 732 >> 2] = 1045220557;
            c[r2 + 736 >> 2] = 1045220557;
            j2 = r2 + 740 | 0;
            c[j2 >> 2] = 0;
            c[j2 + 4 >> 2] = 0;
            c[j2 + 8 >> 2] = 0;
            c[j2 + 12 >> 2] = 0;
            c[j2 + 16 >> 2] = 0;
            c[d2 >> 2] = 1063675494;
            c[r2 + 764 >> 2] = 1063675494;
            c[r2 + 768 >> 2] = 1063675494;
            j2 = r2 + 772 | 0;
            g[r2 + 804 >> 2] = 0;
            g[r2 + 820 >> 2] = 0;
            a[r2 + 836 >> 0] = 0;
            g[r2 + 840 >> 2] = 0;
            a[r2 + 856 >> 0] = 0;
            g[r2 + 860 >> 2] = 0;
            g[r2 + 876 >> 2] = 0;
            g[r2 + 892 >> 2] = 0;
            g[r2 + 808 >> 2] = 0;
            g[r2 + 824 >> 2] = 0;
            a[r2 + 837 >> 0] = 0;
            g[r2 + 844 >> 2] = 0;
            a[r2 + 857 >> 0] = 0;
            g[r2 + 864 >> 2] = 0;
            g[r2 + 880 >> 2] = 0;
            g[r2 + 896 >> 2] = 0;
            g[r2 + 812 >> 2] = 0;
            g[r2 + 828 >> 2] = 0;
            a[r2 + 838 >> 0] = 0;
            g[r2 + 848 >> 2] = 0;
            a[r2 + 858 >> 0] = 0;
            g[r2 + 868 >> 2] = 0;
            g[r2 + 884 >> 2] = 0;
            g[r2 + 900 >> 2] = 0;
            c[j2 >> 2] = 0;
            c[j2 + 4 >> 2] = 0;
            c[j2 + 8 >> 2] = 0;
            c[j2 + 12 >> 2] = 0;
            c[j2 + 16 >> 2] = 0;
            c[j2 + 20 >> 2] = 0;
            c[j2 + 24 >> 2] = 0;
            a[j2 + 28 >> 0] = 0;
            j2 = h2;
            k2 = j2 + 60 | 0;
            do {
              c[j2 >> 2] = 0;
              j2 = j2 + 4 | 0;
            } while ((j2 | 0) < (k2 | 0));
            g[r2 + 968 >> 2] = 1;
            g[r2 + 972 >> 2] = -1;
            g[r2 + 976 >> 2] = 0;
            g[r2 + 980 >> 2] = 0.20000000298023224;
            g[r2 + 984 >> 2] = 0;
            g[r2 + 988 >> 2] = 0.8999999761581421;
            g[r2 + 992 >> 2] = 0;
            a[r2 + 996 >> 0] = 0;
            g[r2 + 1e3 >> 2] = 0;
            g[r2 + 1004 >> 2] = 0.10000000149011612;
            a[r2 + 1008 >> 0] = 0;
            g[r2 + 1012 >> 2] = 0;
            a[r2 + 1016 >> 0] = 0;
            g[r2 + 1020 >> 2] = 0;
            a[r2 + 1024 >> 0] = 0;
            g[r2 + 1028 >> 2] = 0;
            a[r2 + 1032 >> 0] = 0;
            k2 = r2 + 1036 | 0;
            c[k2 >> 2] = 0;
            c[k2 + 4 >> 2] = 0;
            c[k2 + 8 >> 2] = 0;
            c[k2 + 12 >> 2] = 0;
            c[k2 + 16 >> 2] = 0;
            g[r2 + 1056 >> 2] = 1;
            g[r2 + 1060 >> 2] = -1;
            g[r2 + 1064 >> 2] = 0;
            g[r2 + 1068 >> 2] = 0.20000000298023224;
            g[r2 + 1072 >> 2] = 0;
            g[r2 + 1076 >> 2] = 0.8999999761581421;
            g[r2 + 1080 >> 2] = 0;
            a[r2 + 1084 >> 0] = 0;
            g[r2 + 1088 >> 2] = 0;
            g[r2 + 1092 >> 2] = 0.10000000149011612;
            a[r2 + 1096 >> 0] = 0;
            g[r2 + 1100 >> 2] = 0;
            a[r2 + 1104 >> 0] = 0;
            g[r2 + 1108 >> 2] = 0;
            a[r2 + 1112 >> 0] = 0;
            g[r2 + 1116 >> 2] = 0;
            a[r2 + 1120 >> 0] = 0;
            k2 = r2 + 1124 | 0;
            c[k2 >> 2] = 0;
            c[k2 + 4 >> 2] = 0;
            c[k2 + 8 >> 2] = 0;
            c[k2 + 12 >> 2] = 0;
            c[k2 + 16 >> 2] = 0;
            g[r2 + 1144 >> 2] = 1;
            g[r2 + 1148 >> 2] = -1;
            g[r2 + 1152 >> 2] = 0;
            g[r2 + 1156 >> 2] = 0.20000000298023224;
            g[r2 + 1160 >> 2] = 0;
            g[r2 + 1164 >> 2] = 0.8999999761581421;
            g[r2 + 1168 >> 2] = 0;
            a[r2 + 1172 >> 0] = 0;
            g[r2 + 1176 >> 2] = 0;
            g[r2 + 1180 >> 2] = 0.10000000149011612;
            a[r2 + 1184 >> 0] = 0;
            g[r2 + 1188 >> 2] = 0;
            a[r2 + 1192 >> 0] = 0;
            g[r2 + 1196 >> 2] = 0;
            a[r2 + 1200 >> 0] = 0;
            g[r2 + 1204 >> 2] = 0;
            a[r2 + 1208 >> 0] = 0;
            k2 = r2 + 1212 | 0;
            c[k2 >> 2] = 0;
            c[k2 + 4 >> 2] = 0;
            c[k2 + 8 >> 2] = 0;
            c[k2 + 12 >> 2] = 0;
            c[k2 + 16 >> 2] = 0;
            c[r2 + 1232 >> 2] = e2;
            c[r2 + 1456 >> 2] = 0;
            H2 = +g[n2 >> 2];
            N2 = +g[b2 + 4 >> 2];
            G2 = +g[o2 >> 2];
            M2 = +g[b2 + 8 >> 2];
            F2 = +g[p2 >> 2];
            L2 = +g[b2 + 12 >> 2];
            E2 = +g[r2 + 116 >> 2];
            D2 = +g[r2 + 132 >> 2];
            C2 = +g[r2 + 148 >> 2];
            B2 = +g[r2 + 120 >> 2];
            z2 = +g[r2 + 136 >> 2];
            x2 = +g[r2 + 152 >> 2];
            K2 = +g[b2 + 20 >> 2];
            J2 = +g[b2 + 24 >> 2];
            I2 = +g[b2 + 28 >> 2];
            A2 = +g[b2 + 36 >> 2];
            y2 = +g[b2 + 40 >> 2];
            w2 = +g[b2 + 44 >> 2];
            P2 = +g[q2 >> 2];
            O2 = +g[r2 + 164 >> 2];
            u2 = +g[r2 + 168 >> 2];
            v2 = +g[b2 + 52 >> 2] + (N2 * P2 + M2 * O2 + L2 * u2);
            t2 = K2 * P2 + J2 * O2 + I2 * u2 + +g[b2 + 56 >> 2];
            u2 = A2 * P2 + y2 * O2 + w2 * u2 + +g[b2 + 60 >> 2];
            g[r2 + 48 >> 2] = H2 * N2 + G2 * M2 + F2 * L2;
            g[r2 + 52 >> 2] = N2 * E2 + M2 * D2 + L2 * C2;
            g[r2 + 56 >> 2] = N2 * B2 + M2 * z2 + L2 * x2;
            g[r2 + 60 >> 2] = 0;
            g[r2 + 64 >> 2] = H2 * K2 + G2 * J2 + F2 * I2;
            g[r2 + 68 >> 2] = E2 * K2 + D2 * J2 + C2 * I2;
            g[r2 + 72 >> 2] = B2 * K2 + z2 * J2 + x2 * I2;
            g[r2 + 76 >> 2] = 0;
            g[r2 + 80 >> 2] = H2 * A2 + G2 * y2 + F2 * w2;
            g[r2 + 84 >> 2] = E2 * A2 + D2 * y2 + C2 * w2;
            g[r2 + 88 >> 2] = B2 * A2 + z2 * y2 + x2 * w2;
            g[r2 + 92 >> 2] = 0;
            g[r2 + 96 >> 2] = v2;
            g[r2 + 100 >> 2] = t2;
            g[r2 + 104 >> 2] = u2;
            g[r2 + 108 >> 2] = 0;
            pp(r2, (c[l2 >> 2] | 0) + 4 | 0, (c[m2 >> 2] | 0) + 4 | 0);
            i = s2;
            return r2 | 0;
          }
          function Py(b2, d2, e2, f2, h2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            h2 = h2 | 0;
            var i2 = 0, j2 = 0, k2 = 0, l2 = 0;
            c[5637] = (c[5637] | 0) + 1;
            i2 = qG(1479) | 0;
            if (!i2)
              l2 = 0;
            else {
              c[(i2 + 4 + 15 & -16) + -4 >> 2] = i2;
              l2 = i2 + 4 + 15 & -16;
            }
            c[l2 + 4 >> 2] = 12;
            c[l2 + 8 >> 2] = -1;
            c[l2 + 12 >> 2] = -1;
            g[l2 + 16 >> 2] = 34028234663852886e22;
            a[l2 + 20 >> 0] = 1;
            a[l2 + 21 >> 0] = 0;
            c[l2 + 24 >> 2] = -1;
            k2 = l2 + 28 | 0;
            c[k2 >> 2] = b2;
            j2 = l2 + 32 | 0;
            c[j2 >> 2] = d2;
            g[l2 + 36 >> 2] = 0;
            g[l2 + 40 >> 2] = 0.30000001192092896;
            c[l2 + 44 >> 2] = 0;
            c[l2 >> 2] = 7300;
            i2 = l2 + 48 | 0;
            c[i2 >> 2] = c[e2 >> 2];
            c[i2 + 4 >> 2] = c[e2 + 4 >> 2];
            c[i2 + 8 >> 2] = c[e2 + 8 >> 2];
            c[i2 + 12 >> 2] = c[e2 + 12 >> 2];
            i2 = l2 + 64 | 0;
            c[i2 >> 2] = c[e2 + 16 >> 2];
            c[i2 + 4 >> 2] = c[e2 + 16 + 4 >> 2];
            c[i2 + 8 >> 2] = c[e2 + 16 + 8 >> 2];
            c[i2 + 12 >> 2] = c[e2 + 16 + 12 >> 2];
            i2 = l2 + 80 | 0;
            c[i2 >> 2] = c[e2 + 32 >> 2];
            c[i2 + 4 >> 2] = c[e2 + 32 + 4 >> 2];
            c[i2 + 8 >> 2] = c[e2 + 32 + 8 >> 2];
            c[i2 + 12 >> 2] = c[e2 + 32 + 12 >> 2];
            i2 = l2 + 96 | 0;
            c[i2 >> 2] = c[e2 + 48 >> 2];
            c[i2 + 4 >> 2] = c[e2 + 48 + 4 >> 2];
            c[i2 + 8 >> 2] = c[e2 + 48 + 8 >> 2];
            c[i2 + 12 >> 2] = c[e2 + 48 + 12 >> 2];
            i2 = l2 + 112 | 0;
            c[i2 >> 2] = c[f2 >> 2];
            c[i2 + 4 >> 2] = c[f2 + 4 >> 2];
            c[i2 + 8 >> 2] = c[f2 + 8 >> 2];
            c[i2 + 12 >> 2] = c[f2 + 12 >> 2];
            i2 = l2 + 128 | 0;
            c[i2 >> 2] = c[f2 + 16 >> 2];
            c[i2 + 4 >> 2] = c[f2 + 16 + 4 >> 2];
            c[i2 + 8 >> 2] = c[f2 + 16 + 8 >> 2];
            c[i2 + 12 >> 2] = c[f2 + 16 + 12 >> 2];
            i2 = l2 + 144 | 0;
            c[i2 >> 2] = c[f2 + 32 >> 2];
            c[i2 + 4 >> 2] = c[f2 + 32 + 4 >> 2];
            c[i2 + 8 >> 2] = c[f2 + 32 + 8 >> 2];
            c[i2 + 12 >> 2] = c[f2 + 32 + 12 >> 2];
            i2 = l2 + 160 | 0;
            c[i2 >> 2] = c[f2 + 48 >> 2];
            c[i2 + 4 >> 2] = c[f2 + 48 + 4 >> 2];
            c[i2 + 8 >> 2] = c[f2 + 48 + 8 >> 2];
            c[i2 + 12 >> 2] = c[f2 + 48 + 12 >> 2];
            i2 = l2 + 728 | 0;
            b2 = l2 + 760 | 0;
            d2 = l2 + 908 | 0;
            e2 = l2 + 680 | 0;
            f2 = e2 + 48 | 0;
            do {
              c[e2 >> 2] = 0;
              e2 = e2 + 4 | 0;
            } while ((e2 | 0) < (f2 | 0));
            c[i2 >> 2] = 1045220557;
            c[l2 + 732 >> 2] = 1045220557;
            c[l2 + 736 >> 2] = 1045220557;
            e2 = l2 + 740 | 0;
            c[e2 >> 2] = 0;
            c[e2 + 4 >> 2] = 0;
            c[e2 + 8 >> 2] = 0;
            c[e2 + 12 >> 2] = 0;
            c[e2 + 16 >> 2] = 0;
            c[b2 >> 2] = 1063675494;
            c[l2 + 764 >> 2] = 1063675494;
            c[l2 + 768 >> 2] = 1063675494;
            e2 = l2 + 772 | 0;
            g[l2 + 804 >> 2] = 0;
            g[l2 + 820 >> 2] = 0;
            a[l2 + 836 >> 0] = 0;
            g[l2 + 840 >> 2] = 0;
            a[l2 + 856 >> 0] = 0;
            g[l2 + 860 >> 2] = 0;
            g[l2 + 876 >> 2] = 0;
            g[l2 + 892 >> 2] = 0;
            g[l2 + 808 >> 2] = 0;
            g[l2 + 824 >> 2] = 0;
            a[l2 + 837 >> 0] = 0;
            g[l2 + 844 >> 2] = 0;
            a[l2 + 857 >> 0] = 0;
            g[l2 + 864 >> 2] = 0;
            g[l2 + 880 >> 2] = 0;
            g[l2 + 896 >> 2] = 0;
            g[l2 + 812 >> 2] = 0;
            g[l2 + 828 >> 2] = 0;
            a[l2 + 838 >> 0] = 0;
            g[l2 + 848 >> 2] = 0;
            a[l2 + 858 >> 0] = 0;
            g[l2 + 868 >> 2] = 0;
            g[l2 + 884 >> 2] = 0;
            g[l2 + 900 >> 2] = 0;
            c[e2 >> 2] = 0;
            c[e2 + 4 >> 2] = 0;
            c[e2 + 8 >> 2] = 0;
            c[e2 + 12 >> 2] = 0;
            c[e2 + 16 >> 2] = 0;
            c[e2 + 20 >> 2] = 0;
            c[e2 + 24 >> 2] = 0;
            a[e2 + 28 >> 0] = 0;
            e2 = d2;
            f2 = e2 + 60 | 0;
            do {
              c[e2 >> 2] = 0;
              e2 = e2 + 4 | 0;
            } while ((e2 | 0) < (f2 | 0));
            g[l2 + 968 >> 2] = 1;
            g[l2 + 972 >> 2] = -1;
            g[l2 + 976 >> 2] = 0;
            g[l2 + 980 >> 2] = 0.20000000298023224;
            g[l2 + 984 >> 2] = 0;
            g[l2 + 988 >> 2] = 0.8999999761581421;
            g[l2 + 992 >> 2] = 0;
            a[l2 + 996 >> 0] = 0;
            g[l2 + 1e3 >> 2] = 0;
            g[l2 + 1004 >> 2] = 0.10000000149011612;
            a[l2 + 1008 >> 0] = 0;
            g[l2 + 1012 >> 2] = 0;
            a[l2 + 1016 >> 0] = 0;
            g[l2 + 1020 >> 2] = 0;
            a[l2 + 1024 >> 0] = 0;
            g[l2 + 1028 >> 2] = 0;
            a[l2 + 1032 >> 0] = 0;
            f2 = l2 + 1036 | 0;
            c[f2 >> 2] = 0;
            c[f2 + 4 >> 2] = 0;
            c[f2 + 8 >> 2] = 0;
            c[f2 + 12 >> 2] = 0;
            c[f2 + 16 >> 2] = 0;
            g[l2 + 1056 >> 2] = 1;
            g[l2 + 1060 >> 2] = -1;
            g[l2 + 1064 >> 2] = 0;
            g[l2 + 1068 >> 2] = 0.20000000298023224;
            g[l2 + 1072 >> 2] = 0;
            g[l2 + 1076 >> 2] = 0.8999999761581421;
            g[l2 + 1080 >> 2] = 0;
            a[l2 + 1084 >> 0] = 0;
            g[l2 + 1088 >> 2] = 0;
            g[l2 + 1092 >> 2] = 0.10000000149011612;
            a[l2 + 1096 >> 0] = 0;
            g[l2 + 1100 >> 2] = 0;
            a[l2 + 1104 >> 0] = 0;
            g[l2 + 1108 >> 2] = 0;
            a[l2 + 1112 >> 0] = 0;
            g[l2 + 1116 >> 2] = 0;
            a[l2 + 1120 >> 0] = 0;
            f2 = l2 + 1124 | 0;
            c[f2 >> 2] = 0;
            c[f2 + 4 >> 2] = 0;
            c[f2 + 8 >> 2] = 0;
            c[f2 + 12 >> 2] = 0;
            c[f2 + 16 >> 2] = 0;
            g[l2 + 1144 >> 2] = 1;
            g[l2 + 1148 >> 2] = -1;
            g[l2 + 1152 >> 2] = 0;
            g[l2 + 1156 >> 2] = 0.20000000298023224;
            g[l2 + 1160 >> 2] = 0;
            g[l2 + 1164 >> 2] = 0.8999999761581421;
            g[l2 + 1168 >> 2] = 0;
            a[l2 + 1172 >> 0] = 0;
            g[l2 + 1176 >> 2] = 0;
            g[l2 + 1180 >> 2] = 0.10000000149011612;
            a[l2 + 1184 >> 0] = 0;
            g[l2 + 1188 >> 2] = 0;
            a[l2 + 1192 >> 0] = 0;
            g[l2 + 1196 >> 2] = 0;
            a[l2 + 1200 >> 0] = 0;
            g[l2 + 1204 >> 2] = 0;
            a[l2 + 1208 >> 0] = 0;
            f2 = l2 + 1212 | 0;
            c[f2 >> 2] = 0;
            c[f2 + 4 >> 2] = 0;
            c[f2 + 8 >> 2] = 0;
            c[f2 + 12 >> 2] = 0;
            c[f2 + 16 >> 2] = 0;
            c[l2 + 1232 >> 2] = h2;
            c[l2 + 1456 >> 2] = 0;
            pp(l2, (c[k2 >> 2] | 0) + 4 | 0, (c[j2 >> 2] | 0) + 4 | 0);
            return l2 | 0;
          }
          function Qy(b2, c2) {
            b2 = b2 | 0;
            c2 = c2 | 0;
            a[b2 + 21 >> 0] = c2 & 1;
            return;
          }
          function Ry(b2, c2, d2) {
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = d2 | 0;
            if ((c2 | 0) < 3) {
              a[b2 + 798 + c2 >> 0] = d2 & 1;
              return;
            } else {
              a[b2 + 968 + ((c2 + -3 | 0) * 88 | 0) + 48 >> 0] = d2 & 1;
              return;
            }
          }
          function Sy(a2) {
            a2 = a2 | 0;
            return + +g[a2 + 16 >> 2];
          }
          function Ty(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            return a2 + 968 + (b2 * 88 | 0) | 0;
          }
          function Uy(a2) {
            a2 = a2 | 0;
            return a2 + 680 | 0;
          }
          function Vy(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var c2 = 0;
            c2 = +oG(+g[b2 >> 2]);
            if (!(c2 < -3.1415927410125732)) {
              if (c2 > 3.1415927410125732)
                c2 = c2 + -6.2831854820251465;
            } else
              c2 = c2 + 6.2831854820251465;
            g[a2 + 968 >> 2] = c2;
            c2 = +oG(+g[b2 + 4 >> 2]);
            if (!(c2 < -3.1415927410125732)) {
              if (c2 > 3.1415927410125732)
                c2 = c2 + -6.2831854820251465;
            } else
              c2 = c2 + 6.2831854820251465;
            g[a2 + 1056 >> 2] = c2;
            c2 = +oG(+g[b2 + 8 >> 2]);
            if (c2 < -3.1415927410125732) {
              c2 = c2 + 6.2831854820251465;
              a2 = a2 + 1144 | 0;
              g[a2 >> 2] = c2;
              return;
            }
            if (!(c2 > 3.1415927410125732)) {
              a2 = a2 + 1144 | 0;
              g[a2 >> 2] = c2;
              return;
            }
            c2 = c2 + -6.2831854820251465;
            a2 = a2 + 1144 | 0;
            g[a2 >> 2] = c2;
            return;
          }
          function Wy(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var c2 = 0;
            c2 = +oG(+g[b2 >> 2]);
            if (!(c2 < -3.1415927410125732)) {
              if (c2 > 3.1415927410125732)
                c2 = c2 + -6.2831854820251465;
            } else
              c2 = c2 + 6.2831854820251465;
            g[a2 + 972 >> 2] = c2;
            c2 = +oG(+g[b2 + 4 >> 2]);
            if (!(c2 < -3.1415927410125732)) {
              if (c2 > 3.1415927410125732)
                c2 = c2 + -6.2831854820251465;
            } else
              c2 = c2 + 6.2831854820251465;
            g[a2 + 1060 >> 2] = c2;
            c2 = +oG(+g[b2 + 8 >> 2]);
            if (c2 < -3.1415927410125732) {
              c2 = c2 + 6.2831854820251465;
              a2 = a2 + 1148 | 0;
              g[a2 >> 2] = c2;
              return;
            }
            if (!(c2 > 3.1415927410125732)) {
              a2 = a2 + 1148 | 0;
              g[a2 >> 2] = c2;
              return;
            }
            c2 = c2 + -6.2831854820251465;
            a2 = a2 + 1148 | 0;
            g[a2 >> 2] = c2;
            return;
          }
          function Xy(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            g[a2 + 16 >> 2] = b2;
            return;
          }
          function Yy(b2, c2, d2) {
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = +d2;
            if ((c2 | 0) < 3) {
              g[b2 + 840 + (c2 << 2) >> 2] = d2;
              a[b2 + 856 + c2 >> 0] = 1;
              return;
            } else {
              g[b2 + 968 + ((c2 + -3 | 0) * 88 | 0) + 60 >> 2] = d2;
              a[b2 + 968 + ((c2 + -3 | 0) * 88 | 0) + 64 >> 0] = 1;
              return;
            }
          }
          function Zy(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c[a2 + 680 >> 2] = c[b2 >> 2];
            c[a2 + 680 + 4 >> 2] = c[b2 + 4 >> 2];
            c[a2 + 680 + 8 >> 2] = c[b2 + 8 >> 2];
            c[a2 + 680 + 12 >> 2] = c[b2 + 12 >> 2];
            return;
          }
          function _y(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c[a2 + 696 >> 2] = c[b2 >> 2];
            c[a2 + 696 + 4 >> 2] = c[b2 + 4 >> 2];
            c[a2 + 696 + 8 >> 2] = c[b2 + 8 >> 2];
            c[a2 + 696 + 12 >> 2] = c[b2 + 12 >> 2];
            return;
          }
          function $y(b2, c2, d2) {
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = +d2;
            if ((c2 | 0) < 3) {
              g[b2 + 820 + (c2 << 2) >> 2] = d2;
              a[b2 + 836 + c2 >> 0] = 1;
              return;
            } else {
              g[b2 + 968 + ((c2 + -3 | 0) * 88 | 0) + 52 >> 2] = d2;
              a[b2 + 968 + ((c2 + -3 | 0) * 88 | 0) + 56 >> 0] = 1;
              return;
            }
          }
          function az(a2) {
            a2 = a2 | 0;
            if (!a2)
              return;
            rb[c[(c[a2 >> 2] | 0) + 4 >> 2] & 255](a2);
            return;
          }
          function bz(b2, d2, e2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0;
            c[5637] = (c[5637] | 0) + 1;
            f2 = qG(1407) | 0;
            if (!f2)
              f2 = 0;
            else {
              c[(f2 + 4 + 15 & -16) + -4 >> 2] = f2;
              f2 = f2 + 4 + 15 & -16;
            }
            mp(f2, b2, d2, e2);
            c[f2 >> 2] = 7364;
            c[f2 + 4 >> 2] = 9;
            a[f2 + 1309 >> 0] = 0;
            g[f2 + 1316 >> 2] = 0;
            g[f2 + 1340 >> 2] = 0;
            g[f2 + 1364 >> 2] = 1;
            a[f2 + 1310 >> 0] = 0;
            g[f2 + 1320 >> 2] = 0;
            g[f2 + 1344 >> 2] = 0;
            g[f2 + 1368 >> 2] = 1;
            a[f2 + 1311 >> 0] = 0;
            g[f2 + 1324 >> 2] = 0;
            g[f2 + 1348 >> 2] = 0;
            g[f2 + 1372 >> 2] = 1;
            a[f2 + 1312 >> 0] = 0;
            g[f2 + 1328 >> 2] = 0;
            g[f2 + 1352 >> 2] = 0;
            g[f2 + 1376 >> 2] = 1;
            a[f2 + 1313 >> 0] = 0;
            g[f2 + 1332 >> 2] = 0;
            g[f2 + 1356 >> 2] = 0;
            g[f2 + 1380 >> 2] = 1;
            a[f2 + 1314 >> 0] = 0;
            g[f2 + 1336 >> 2] = 0;
            g[f2 + 1360 >> 2] = 0;
            g[f2 + 1384 >> 2] = 1;
            return f2 | 0;
          }
          function cz(b2, d2, e2, f2, h2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            h2 = h2 | 0;
            var i2 = 0;
            c[5637] = (c[5637] | 0) + 1;
            i2 = qG(1407) | 0;
            if (!i2)
              i2 = 0;
            else {
              c[(i2 + 4 + 15 & -16) + -4 >> 2] = i2;
              i2 = i2 + 4 + 15 & -16;
            }
            lp(i2, b2, d2, e2, f2, h2);
            c[i2 >> 2] = 7364;
            c[i2 + 4 >> 2] = 9;
            a[i2 + 1309 >> 0] = 0;
            g[i2 + 1316 >> 2] = 0;
            g[i2 + 1340 >> 2] = 0;
            g[i2 + 1364 >> 2] = 1;
            a[i2 + 1310 >> 0] = 0;
            g[i2 + 1320 >> 2] = 0;
            g[i2 + 1344 >> 2] = 0;
            g[i2 + 1368 >> 2] = 1;
            a[i2 + 1311 >> 0] = 0;
            g[i2 + 1324 >> 2] = 0;
            g[i2 + 1348 >> 2] = 0;
            g[i2 + 1372 >> 2] = 1;
            a[i2 + 1312 >> 0] = 0;
            g[i2 + 1328 >> 2] = 0;
            g[i2 + 1352 >> 2] = 0;
            g[i2 + 1376 >> 2] = 1;
            a[i2 + 1313 >> 0] = 0;
            g[i2 + 1332 >> 2] = 0;
            g[i2 + 1356 >> 2] = 0;
            g[i2 + 1380 >> 2] = 1;
            a[i2 + 1314 >> 0] = 0;
            g[i2 + 1336 >> 2] = 0;
            g[i2 + 1360 >> 2] = 0;
            g[i2 + 1384 >> 2] = 1;
            return i2 | 0;
          }
          function dz(b2, c2) {
            b2 = b2 | 0;
            c2 = c2 | 0;
            a[b2 + 21 >> 0] = c2 & 1;
            return;
          }
          function ez(b2, c2, d2) {
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = d2 | 0;
            a[b2 + 1309 + c2 >> 0] = d2 & 1;
            if ((c2 | 0) < 3) {
              a[b2 + 788 + c2 >> 0] = d2 & 1;
              return;
            } else {
              a[b2 + 868 + (c2 + -3 << 6) + 44 >> 0] = d2 & 1;
              return;
            }
          }
          function fz(a2) {
            a2 = a2 | 0;
            return + +g[a2 + 16 >> 2];
          }
          function gz(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var c2 = 0;
            c2 = +oG(+g[b2 >> 2]);
            if (!(c2 < -3.1415927410125732)) {
              if (c2 > 3.1415927410125732)
                c2 = c2 + -6.2831854820251465;
            } else
              c2 = c2 + 6.2831854820251465;
            g[a2 + 868 >> 2] = c2;
            c2 = +oG(+g[b2 + 4 >> 2]);
            if (!(c2 < -3.1415927410125732)) {
              if (c2 > 3.1415927410125732)
                c2 = c2 + -6.2831854820251465;
            } else
              c2 = c2 + 6.2831854820251465;
            g[a2 + 932 >> 2] = c2;
            c2 = +oG(+g[b2 + 8 >> 2]);
            if (c2 < -3.1415927410125732) {
              c2 = c2 + 6.2831854820251465;
              a2 = a2 + 996 | 0;
              g[a2 >> 2] = c2;
              return;
            }
            if (!(c2 > 3.1415927410125732)) {
              a2 = a2 + 996 | 0;
              g[a2 >> 2] = c2;
              return;
            }
            c2 = c2 + -6.2831854820251465;
            a2 = a2 + 996 | 0;
            g[a2 >> 2] = c2;
            return;
          }
          function hz(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var c2 = 0;
            c2 = +oG(+g[b2 >> 2]);
            if (!(c2 < -3.1415927410125732)) {
              if (c2 > 3.1415927410125732)
                c2 = c2 + -6.2831854820251465;
            } else
              c2 = c2 + 6.2831854820251465;
            g[a2 + 872 >> 2] = c2;
            c2 = +oG(+g[b2 + 4 >> 2]);
            if (!(c2 < -3.1415927410125732)) {
              if (c2 > 3.1415927410125732)
                c2 = c2 + -6.2831854820251465;
            } else
              c2 = c2 + 6.2831854820251465;
            g[a2 + 936 >> 2] = c2;
            c2 = +oG(+g[b2 + 8 >> 2]);
            if (c2 < -3.1415927410125732) {
              c2 = c2 + 6.2831854820251465;
              a2 = a2 + 1e3 | 0;
              g[a2 >> 2] = c2;
              return;
            }
            if (!(c2 > 3.1415927410125732)) {
              a2 = a2 + 1e3 | 0;
              g[a2 >> 2] = c2;
              return;
            }
            c2 = c2 + -6.2831854820251465;
            a2 = a2 + 1e3 | 0;
            g[a2 >> 2] = c2;
            return;
          }
          function iz(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            g[a2 + 16 >> 2] = b2;
            return;
          }
          function jz(a2, b2, c2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = +c2;
            g[a2 + 1364 + (b2 << 2) >> 2] = c2;
            return;
          }
          function kz(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c[a2 + 680 >> 2] = c[b2 >> 2];
            c[a2 + 680 + 4 >> 2] = c[b2 + 4 >> 2];
            c[a2 + 680 + 8 >> 2] = c[b2 + 8 >> 2];
            c[a2 + 680 + 12 >> 2] = c[b2 + 12 >> 2];
            return;
          }
          function lz(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c[a2 + 696 >> 2] = c[b2 >> 2];
            c[a2 + 696 + 4 >> 2] = c[b2 + 4 >> 2];
            c[a2 + 696 + 8 >> 2] = c[b2 + 8 >> 2];
            c[a2 + 696 + 12 >> 2] = c[b2 + 12 >> 2];
            return;
          }
          function mz(a2, b2, c2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = +c2;
            g[a2 + 1340 + (b2 << 2) >> 2] = c2;
            return;
          }
          function nz(a2) {
            a2 = a2 | 0;
            if (!a2)
              return;
            rb[c[(c[a2 >> 2] | 0) + 4 >> 2] & 255](a2);
            return;
          }
          function oz(a2) {
            a2 = a2 | 0;
            if (c[a2 + 204 >> 2] & 3 | 0)
              return;
            if ((c[a2 + 216 >> 2] & -2 | 0) != 4)
              c[a2 + 216 >> 2] = 1;
            g[a2 + 220 >> 2] = 0;
            return;
          }
          function pz(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            if (!b2 ? c[a2 + 204 >> 2] & 3 | 0 : 0)
              return;
            if ((c[a2 + 216 >> 2] & -2 | 0) != 4)
              c[a2 + 216 >> 2] = 1;
            g[a2 + 220 >> 2] = 0;
            return;
          }
          function qz() {
            var b2 = 0, d2 = 0;
            c[5637] = (c[5637] | 0) + 1;
            b2 = qG(327) | 0;
            if (!b2)
              b2 = 0;
            else {
              c[(b2 + 4 + 15 & -16) + -4 >> 2] = b2;
              b2 = b2 + 4 + 15 & -16;
            }
            c[b2 + 164 >> 2] = 1065353216;
            c[b2 + 168 >> 2] = 1065353216;
            c[b2 + 172 >> 2] = 1065353216;
            g[b2 + 176 >> 2] = 0;
            c[b2 + 180 >> 2] = 0;
            g[b2 + 184 >> 2] = 999999984306749400;
            d2 = b2 + 188 | 0;
            c[d2 >> 2] = 0;
            c[d2 + 4 >> 2] = 0;
            c[d2 + 8 >> 2] = 0;
            c[d2 + 12 >> 2] = 0;
            c[b2 + 204 >> 2] = 1;
            c[b2 + 208 >> 2] = -1;
            c[b2 + 212 >> 2] = -1;
            c[b2 + 216 >> 2] = 1;
            g[b2 + 220 >> 2] = 0;
            g[b2 + 224 >> 2] = 0.5;
            g[b2 + 228 >> 2] = 0;
            g[b2 + 232 >> 2] = 0;
            c[b2 + 240 >> 2] = 0;
            c[b2 + 244 >> 2] = -1;
            g[b2 + 248 >> 2] = 1;
            g[b2 + 252 >> 2] = 0;
            g[b2 + 256 >> 2] = 0;
            c[b2 + 260 >> 2] = 0;
            a[b2 + 280 >> 0] = 1;
            c[b2 + 276 >> 2] = 0;
            c[b2 + 268 >> 2] = 0;
            c[b2 + 272 >> 2] = 0;
            c[b2 + 284 >> 2] = 0;
            c[b2 + 4 >> 2] = 1065353216;
            d2 = b2 + 8 | 0;
            c[d2 >> 2] = 0;
            c[d2 + 4 >> 2] = 0;
            c[d2 + 8 >> 2] = 0;
            c[d2 + 12 >> 2] = 0;
            c[b2 + 24 >> 2] = 1065353216;
            d2 = b2 + 28 | 0;
            c[d2 >> 2] = 0;
            c[d2 + 4 >> 2] = 0;
            c[d2 + 8 >> 2] = 0;
            c[d2 + 12 >> 2] = 0;
            c[b2 + 44 >> 2] = 1065353216;
            d2 = b2 + 48 | 0;
            c[d2 >> 2] = 0;
            c[d2 + 4 >> 2] = 0;
            c[d2 + 8 >> 2] = 0;
            c[d2 + 12 >> 2] = 0;
            c[d2 + 16 >> 2] = 0;
            c[b2 >> 2] = 4344;
            a[b2 + 304 >> 0] = 1;
            c[b2 + 300 >> 2] = 0;
            c[b2 + 292 >> 2] = 0;
            c[b2 + 296 >> 2] = 0;
            c[b2 + 236 >> 2] = 4;
            return b2 | 0;
          }
          function rz(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c[a2 + 216 >> 2] = b2;
            return;
          }
          function sz(a2) {
            a2 = a2 | 0;
            return c[a2 + 204 >> 2] | 0;
          }
          function tz(a2) {
            a2 = a2 | 0;
            return c[a2 + 192 >> 2] | 0;
          }
          function uz(a2) {
            a2 = a2 | 0;
            return c[a2 + 292 >> 2] | 0;
          }
          function vz(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            return c[(c[a2 + 300 >> 2] | 0) + (b2 << 2) >> 2] | 0;
          }
          function wz(a2) {
            a2 = a2 | 0;
            return a2 + 4 | 0;
          }
          function xz(a2) {
            a2 = a2 | 0;
            a2 = c[a2 + 216 >> 2] | 0;
            return (a2 | 0) != 5 & (a2 | 0) != 2 | 0;
          }
          function yz(a2) {
            a2 = a2 | 0;
            return (c[a2 + 204 >> 2] & 2 | 0) != 0 | 0;
          }
          function zz(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            if ((c[a2 + 216 >> 2] & -2 | 0) == 4)
              return;
            c[a2 + 216 >> 2] = b2;
            return;
          }
          function Az(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            c[a2 + 164 >> 2] = c[b2 >> 2];
            c[a2 + 164 + 4 >> 2] = c[b2 + 4 >> 2];
            c[a2 + 164 + 8 >> 2] = c[b2 + 8 >> 2];
            c[a2 + 164 + 12 >> 2] = c[b2 + 12 >> 2];
            if (!(+g[b2 >> 2] != 1) ? !(+g[b2 + 4 >> 2] != 1) : 0)
              d2 = +g[b2 + 8 >> 2] != 1 ? d2 : 0;
            c[a2 + 180 >> 2] = d2;
            return;
          }
          function Bz(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            g[a2 + 256 >> 2] = b2;
            return;
          }
          function Cz(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            g[a2 + 252 >> 2] = b2;
            return;
          }
          function Dz(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c[a2 + 204 >> 2] = b2;
            return;
          }
          function Ez(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            tb[c[(c[a2 >> 2] | 0) + 8 >> 2] & 127](a2, b2);
            return;
          }
          function Fz(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            g[a2 + 184 >> 2] = b2;
            return;
          }
          function Gz(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            c[a2 + 284 >> 2] = (c[a2 + 284 >> 2] | 0) + 1;
            g[a2 + 224 >> 2] = b2;
            return;
          }
          function Hz(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            c[a2 + 284 >> 2] = (c[a2 + 284 >> 2] | 0) + 1;
            g[a2 + 228 >> 2] = b2;
            return;
          }
          function Iz(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            c[a2 + 284 >> 2] = (c[a2 + 284 >> 2] | 0) + 1;
            g[a2 + 232 >> 2] = b2;
            return;
          }
          function Jz(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c[a2 + 284 >> 2] = (c[a2 + 284 >> 2] | 0) + 1;
            c[a2 + 4 >> 2] = c[b2 >> 2];
            c[a2 + 4 + 4 >> 2] = c[b2 + 4 >> 2];
            c[a2 + 4 + 8 >> 2] = c[b2 + 8 >> 2];
            c[a2 + 4 + 12 >> 2] = c[b2 + 12 >> 2];
            c[a2 + 20 >> 2] = c[b2 + 16 >> 2];
            c[a2 + 20 + 4 >> 2] = c[b2 + 16 + 4 >> 2];
            c[a2 + 20 + 8 >> 2] = c[b2 + 16 + 8 >> 2];
            c[a2 + 20 + 12 >> 2] = c[b2 + 16 + 12 >> 2];
            c[a2 + 36 >> 2] = c[b2 + 32 >> 2];
            c[a2 + 36 + 4 >> 2] = c[b2 + 32 + 4 >> 2];
            c[a2 + 36 + 8 >> 2] = c[b2 + 32 + 8 >> 2];
            c[a2 + 36 + 12 >> 2] = c[b2 + 32 + 12 >> 2];
            c[a2 + 52 >> 2] = c[b2 + 48 >> 2];
            c[a2 + 52 + 4 >> 2] = c[b2 + 48 + 4 >> 2];
            c[a2 + 52 + 8 >> 2] = c[b2 + 48 + 8 >> 2];
            c[a2 + 52 + 12 >> 2] = c[b2 + 48 + 12 >> 2];
            return;
          }
          function Kz(a2) {
            a2 = a2 | 0;
            if (!a2)
              return;
            rb[c[(c[a2 >> 2] | 0) + 4 >> 2] & 255](a2);
            return;
          }
          function Lz() {
            var a2 = 0, b2 = 0;
            while (1) {
              a2 = qG(4) | 0;
              if (a2 | 0) {
                b2 = 6;
                break;
              }
              a2 = c[5831] | 0;
              c[5831] = a2 + 0;
              if (!a2) {
                b2 = 5;
                break;
              }
              _b[a2 & 3]();
            }
            if ((b2 | 0) == 5) {
              b2 = Va(4) | 0;
              c[b2 >> 2] = 8308;
              hb(b2 | 0, 2416, 215);
            } else if ((b2 | 0) == 6) {
              c[a2 >> 2] = 8084;
              return a2 | 0;
            }
            return 0;
          }
          function Mz(a2) {
            a2 = a2 | 0;
            return;
          }
          function Nz(a2) {
            a2 = a2 | 0;
            rG(a2);
            return;
          }
          function Oz(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0;
            e2 = c[b2 >> 2] | 0;
            a2 = c[d2 >> 2] | 0;
            a2 = (c[a2 + 236 >> 2] | 0) == 4 ? a2 : 0;
            if (!((e2 | 0) == 0 ? 1 : (c[e2 + 236 >> 2] | 0) != 4))
              Zb[c[(c[e2 >> 2] | 0) + 28 >> 2] & 127](e2, d2, b2);
            if (!a2)
              return 0;
            Zb[c[(c[a2 >> 2] | 0) + 28 >> 2] & 127](a2, b2, d2);
            return 0;
          }
          function Pz(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0;
            f2 = c[b2 >> 2] | 0;
            a2 = c[d2 >> 2] | 0;
            a2 = (c[a2 + 236 >> 2] | 0) == 4 ? a2 : 0;
            if (!((f2 | 0) == 0 ? 1 : (c[f2 + 236 >> 2] | 0) != 4))
              bc[c[(c[f2 >> 2] | 0) + 32 >> 2] & 127](f2, d2, e2, b2);
            if (!a2)
              return 0;
            bc[c[(c[a2 >> 2] | 0) + 32 >> 2] & 127](a2, b2, e2, d2);
            return 0;
          }
          function Qz(a2, b2, c2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            return;
          }
          function Rz(a2) {
            a2 = a2 | 0;
            if (!a2)
              return;
            rb[c[(c[a2 >> 2] | 0) + 4 >> 2] & 255](a2);
            return;
          }
          function Sz(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0;
            c[5637] = (c[5637] | 0) + 1;
            d2 = qG(787) | 0;
            if (!d2)
              d2 = 0;
            else {
              c[(d2 + 4 + 15 & -16) + -4 >> 2] = d2;
              d2 = d2 + 4 + 15 & -16;
            }
            Lp(d2, a2, b2, 0);
            return d2 | 0;
          }
          function Tz(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0;
            c[5637] = (c[5637] | 0) + 1;
            e2 = qG(787) | 0;
            if (!e2)
              e2 = 0;
            else {
              c[(e2 + 4 + 15 & -16) + -4 >> 2] = e2;
              e2 = e2 + 4 + 15 & -16;
            }
            Lp(e2, a2, b2, d2);
            return e2 | 0;
          }
          function Uz(b2, d2, e2, f2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            var h2 = 0;
            c[5637] = (c[5637] | 0) + 1;
            h2 = qG(787) | 0;
            if (!h2)
              h2 = 0;
            else {
              c[(h2 + 4 + 15 & -16) + -4 >> 2] = h2;
              h2 = h2 + 4 + 15 & -16;
            }
            c[h2 + 4 >> 2] = 4;
            c[h2 + 8 >> 2] = -1;
            c[h2 + 12 >> 2] = -1;
            g[h2 + 16 >> 2] = 34028234663852886e22;
            a[h2 + 20 >> 0] = 1;
            a[h2 + 21 >> 0] = 0;
            c[h2 + 24 >> 2] = -1;
            c[h2 + 28 >> 2] = b2;
            c[h2 + 32 >> 2] = d2;
            g[h2 + 36 >> 2] = 0;
            g[h2 + 40 >> 2] = 0.30000001192092896;
            c[h2 + 44 >> 2] = 0;
            c[h2 >> 2] = 7428;
            d2 = h2 + 552 | 0;
            c[d2 >> 2] = c[e2 >> 2];
            c[d2 + 4 >> 2] = c[e2 + 4 >> 2];
            c[d2 + 8 >> 2] = c[e2 + 8 >> 2];
            c[d2 + 12 >> 2] = c[e2 + 12 >> 2];
            d2 = h2 + 568 | 0;
            c[d2 >> 2] = c[e2 + 16 >> 2];
            c[d2 + 4 >> 2] = c[e2 + 16 + 4 >> 2];
            c[d2 + 8 >> 2] = c[e2 + 16 + 8 >> 2];
            c[d2 + 12 >> 2] = c[e2 + 16 + 12 >> 2];
            d2 = h2 + 584 | 0;
            c[d2 >> 2] = c[e2 + 32 >> 2];
            c[d2 + 4 >> 2] = c[e2 + 32 + 4 >> 2];
            c[d2 + 8 >> 2] = c[e2 + 32 + 8 >> 2];
            c[d2 + 12 >> 2] = c[e2 + 32 + 12 >> 2];
            d2 = h2 + 600 | 0;
            c[d2 >> 2] = c[e2 + 48 >> 2];
            c[d2 + 4 >> 2] = c[e2 + 48 + 4 >> 2];
            c[d2 + 8 >> 2] = c[e2 + 48 + 8 >> 2];
            c[d2 + 12 >> 2] = c[e2 + 48 + 12 >> 2];
            e2 = h2 + 616 | 0;
            c[e2 >> 2] = c[f2 >> 2];
            c[e2 + 4 >> 2] = c[f2 + 4 >> 2];
            c[e2 + 8 >> 2] = c[f2 + 8 >> 2];
            c[e2 + 12 >> 2] = c[f2 + 12 >> 2];
            e2 = h2 + 632 | 0;
            c[e2 >> 2] = c[f2 + 16 >> 2];
            c[e2 + 4 >> 2] = c[f2 + 16 + 4 >> 2];
            c[e2 + 8 >> 2] = c[f2 + 16 + 8 >> 2];
            c[e2 + 12 >> 2] = c[f2 + 16 + 12 >> 2];
            e2 = h2 + 648 | 0;
            c[e2 >> 2] = c[f2 + 32 >> 2];
            c[e2 + 4 >> 2] = c[f2 + 32 + 4 >> 2];
            c[e2 + 8 >> 2] = c[f2 + 32 + 8 >> 2];
            c[e2 + 12 >> 2] = c[f2 + 32 + 12 >> 2];
            e2 = h2 + 664 | 0;
            c[e2 >> 2] = c[f2 + 48 >> 2];
            c[e2 + 4 >> 2] = c[f2 + 48 + 4 >> 2];
            c[e2 + 8 >> 2] = c[f2 + 48 + 8 >> 2];
            c[e2 + 12 >> 2] = c[f2 + 48 + 12 >> 2];
            g[h2 + 688 >> 2] = 0;
            g[h2 + 692 >> 2] = -1;
            g[h2 + 696 >> 2] = 0.8999999761581421;
            g[h2 + 700 >> 2] = 0.30000001192092896;
            g[h2 + 704 >> 2] = 1;
            g[h2 + 708 >> 2] = 0;
            g[h2 + 712 >> 2] = 0;
            a[h2 + 716 >> 0] = 0;
            a[h2 + 736 >> 0] = 0;
            a[h2 + 737 >> 0] = 0;
            a[h2 + 738 >> 0] = 0;
            a[h2 + 739 >> 0] = 1;
            a[h2 + 740 >> 0] = 0;
            f2 = h2 + 748 | 0;
            c[f2 >> 2] = 0;
            c[f2 + 4 >> 2] = 0;
            c[f2 + 8 >> 2] = 0;
            c[f2 + 12 >> 2] = 0;
            c[f2 + 16 >> 2] = 0;
            g[h2 + 732 >> 2] = 1;
            return h2 | 0;
          }
          function Vz(b2, d2, e2, f2, h2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            h2 = h2 | 0;
            var i2 = 0;
            c[5637] = (c[5637] | 0) + 1;
            i2 = qG(787) | 0;
            if (!i2)
              i2 = 0;
            else {
              c[(i2 + 4 + 15 & -16) + -4 >> 2] = i2;
              i2 = i2 + 4 + 15 & -16;
            }
            c[i2 + 4 >> 2] = 4;
            c[i2 + 8 >> 2] = -1;
            c[i2 + 12 >> 2] = -1;
            g[i2 + 16 >> 2] = 34028234663852886e22;
            a[i2 + 20 >> 0] = 1;
            a[i2 + 21 >> 0] = 0;
            c[i2 + 24 >> 2] = -1;
            c[i2 + 28 >> 2] = b2;
            c[i2 + 32 >> 2] = d2;
            g[i2 + 36 >> 2] = 0;
            g[i2 + 40 >> 2] = 0.30000001192092896;
            c[i2 + 44 >> 2] = 0;
            c[i2 >> 2] = 7428;
            d2 = i2 + 552 | 0;
            c[d2 >> 2] = c[e2 >> 2];
            c[d2 + 4 >> 2] = c[e2 + 4 >> 2];
            c[d2 + 8 >> 2] = c[e2 + 8 >> 2];
            c[d2 + 12 >> 2] = c[e2 + 12 >> 2];
            d2 = i2 + 568 | 0;
            c[d2 >> 2] = c[e2 + 16 >> 2];
            c[d2 + 4 >> 2] = c[e2 + 16 + 4 >> 2];
            c[d2 + 8 >> 2] = c[e2 + 16 + 8 >> 2];
            c[d2 + 12 >> 2] = c[e2 + 16 + 12 >> 2];
            d2 = i2 + 584 | 0;
            c[d2 >> 2] = c[e2 + 32 >> 2];
            c[d2 + 4 >> 2] = c[e2 + 32 + 4 >> 2];
            c[d2 + 8 >> 2] = c[e2 + 32 + 8 >> 2];
            c[d2 + 12 >> 2] = c[e2 + 32 + 12 >> 2];
            d2 = i2 + 600 | 0;
            c[d2 >> 2] = c[e2 + 48 >> 2];
            c[d2 + 4 >> 2] = c[e2 + 48 + 4 >> 2];
            c[d2 + 8 >> 2] = c[e2 + 48 + 8 >> 2];
            c[d2 + 12 >> 2] = c[e2 + 48 + 12 >> 2];
            e2 = i2 + 616 | 0;
            c[e2 >> 2] = c[f2 >> 2];
            c[e2 + 4 >> 2] = c[f2 + 4 >> 2];
            c[e2 + 8 >> 2] = c[f2 + 8 >> 2];
            c[e2 + 12 >> 2] = c[f2 + 12 >> 2];
            e2 = i2 + 632 | 0;
            c[e2 >> 2] = c[f2 + 16 >> 2];
            c[e2 + 4 >> 2] = c[f2 + 16 + 4 >> 2];
            c[e2 + 8 >> 2] = c[f2 + 16 + 8 >> 2];
            c[e2 + 12 >> 2] = c[f2 + 16 + 12 >> 2];
            e2 = i2 + 648 | 0;
            c[e2 >> 2] = c[f2 + 32 >> 2];
            c[e2 + 4 >> 2] = c[f2 + 32 + 4 >> 2];
            c[e2 + 8 >> 2] = c[f2 + 32 + 8 >> 2];
            c[e2 + 12 >> 2] = c[f2 + 32 + 12 >> 2];
            e2 = i2 + 664 | 0;
            c[e2 >> 2] = c[f2 + 48 >> 2];
            c[e2 + 4 >> 2] = c[f2 + 48 + 4 >> 2];
            c[e2 + 8 >> 2] = c[f2 + 48 + 8 >> 2];
            c[e2 + 12 >> 2] = c[f2 + 48 + 12 >> 2];
            g[i2 + 688 >> 2] = 0;
            g[i2 + 692 >> 2] = -1;
            g[i2 + 696 >> 2] = 0.8999999761581421;
            g[i2 + 700 >> 2] = 0.30000001192092896;
            g[i2 + 704 >> 2] = 1;
            g[i2 + 708 >> 2] = 0;
            g[i2 + 712 >> 2] = 0;
            a[i2 + 716 >> 0] = 0;
            a[i2 + 736 >> 0] = 0;
            a[i2 + 737 >> 0] = 0;
            a[i2 + 738 >> 0] = 0;
            a[i2 + 739 >> 0] = 1;
            a[i2 + 740 >> 0] = h2 & 1;
            f2 = i2 + 748 | 0;
            c[f2 >> 2] = 0;
            c[f2 + 4 >> 2] = 0;
            c[f2 + 8 >> 2] = 0;
            c[f2 + 12 >> 2] = 0;
            c[f2 + 16 >> 2] = 0;
            g[i2 + 732 >> 2] = h2 ? -1 : 1;
            return i2 | 0;
          }
          function Wz(a2, b2, d2, e2, f2, g2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            g2 = g2 | 0;
            var h2 = 0;
            c[5637] = (c[5637] | 0) + 1;
            h2 = qG(787) | 0;
            if (!h2)
              h2 = 0;
            else {
              c[(h2 + 4 + 15 & -16) + -4 >> 2] = h2;
              h2 = h2 + 4 + 15 & -16;
            }
            Kp(h2, a2, b2, d2, e2, f2, g2, 0);
            return h2 | 0;
          }
          function Xz(a2, b2, d2, e2, f2, g2, h2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            g2 = g2 | 0;
            h2 = h2 | 0;
            var i2 = 0;
            c[5637] = (c[5637] | 0) + 1;
            i2 = qG(787) | 0;
            if (!i2)
              i2 = 0;
            else {
              c[(i2 + 4 + 15 & -16) + -4 >> 2] = i2;
              i2 = i2 + 4 + 15 & -16;
            }
            Kp(i2, a2, b2, d2, e2, f2, g2, h2);
            return i2 | 0;
          }
          function Yz(b2, c2, d2, e2) {
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = +d2;
            e2 = +e2;
            a[b2 + 737 >> 0] = c2 & 1;
            g[b2 + 680 >> 2] = d2;
            g[b2 + 684 >> 2] = e2;
            return;
          }
          function Zz(b2, c2) {
            b2 = b2 | 0;
            c2 = c2 | 0;
            a[b2 + 21 >> 0] = c2 & 1;
            return;
          }
          function _z(a2) {
            a2 = a2 | 0;
            return + +g[a2 + 16 >> 2];
          }
          function $z(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            g[a2 + 16 >> 2] = b2;
            return;
          }
          function aA(a2, b2, c2, d2, e2) {
            a2 = a2 | 0;
            b2 = +b2;
            c2 = +c2;
            d2 = +d2;
            e2 = +e2;
            g[a2 + 692 >> 2] = (c2 - b2) * 0.5;
            b2 = +oG((c2 - b2) * 0.5 + b2);
            if (!(b2 < -3.1415927410125732)) {
              if (b2 > 3.1415927410125732)
                b2 = b2 + -6.2831854820251465;
            } else
              b2 = b2 + 6.2831854820251465;
            g[a2 + 688 >> 2] = b2;
            g[a2 + 696 >> 2] = d2;
            g[a2 + 700 >> 2] = e2;
            g[a2 + 704 >> 2] = 1;
            return;
          }
          function bA(a2, b2, c2, d2, e2, f2) {
            a2 = a2 | 0;
            b2 = +b2;
            c2 = +c2;
            d2 = +d2;
            e2 = +e2;
            f2 = +f2;
            g[a2 + 692 >> 2] = (c2 - b2) * 0.5;
            b2 = +oG((c2 - b2) * 0.5 + b2);
            if (!(b2 < -3.1415927410125732)) {
              if (b2 > 3.1415927410125732)
                b2 = b2 + -6.2831854820251465;
            } else
              b2 = b2 + 6.2831854820251465;
            g[a2 + 688 >> 2] = b2;
            g[a2 + 696 >> 2] = d2;
            g[a2 + 700 >> 2] = e2;
            g[a2 + 704 >> 2] = f2;
            return;
          }
          function cA(a2) {
            a2 = a2 | 0;
            if (!a2)
              return;
            rb[c[(c[a2 >> 2] | 0) + 4 >> 2] & 255](a2);
            return;
          }
          function dA(b2, d2, e2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = +e2;
            var f2 = 0, h2 = 0;
            c[5637] = (c[5637] | 0) + 1;
            f2 = qG(203) | 0;
            if (!f2)
              f2 = 0;
            else {
              c[(f2 + 4 + 15 & -16) + -4 >> 2] = f2;
              f2 = f2 + 4 + 15 & -16;
            }
            c[f2 >> 2] = 7044;
            h2 = f2 + 60 | 0;
            a[f2 + 144 >> 0] = 1;
            c[f2 + 140 >> 2] = 0;
            c[f2 + 132 >> 2] = 0;
            c[f2 + 136 >> 2] = 0;
            c[f2 + 176 >> 2] = 1;
            g[f2 + 56 >> 2] = 0.019999999552965164;
            c[h2 >> 2] = 0;
            c[h2 + 4 >> 2] = 0;
            c[h2 + 8 >> 2] = 0;
            c[h2 + 12 >> 2] = 0;
            a[f2 + 170 >> 0] = 1;
            c[f2 + 8 >> 2] = b2;
            g[f2 + 52 >> 2] = e2;
            g[f2 + 48 >> 2] = 0;
            c[f2 + 12 >> 2] = d2;
            a[f2 + 171 >> 0] = 1;
            g[f2 + 172 >> 2] = 0;
            g[f2 + 16 >> 2] = 0;
            g[f2 + 20 >> 2] = 0;
            g[f2 + 44 >> 2] = 29.399999618530273;
            g[f2 + 24 >> 2] = 55;
            g[f2 + 28 >> 2] = 10;
            a[f2 + 168 >> 0] = 0;
            a[f2 + 169 >> 0] = 0;
            a[f2 + 180 >> 0] = 1;
            g[f2 + 36 >> 2] = 0.7853981852531433;
            g[f2 + 40 >> 2] = 0.7071067690849304;
            g[f2 + 108 >> 2] = 0;
            a[f2 + 181 >> 0] = 0;
            a[f2 + 182 >> 0] = 0;
            return f2 | 0;
          }
          function eA(b2, d2, e2, f2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = +e2;
            f2 = f2 | 0;
            var h2 = 0, i2 = 0;
            c[5637] = (c[5637] | 0) + 1;
            h2 = qG(203) | 0;
            if (!h2)
              h2 = 0;
            else {
              c[(h2 + 4 + 15 & -16) + -4 >> 2] = h2;
              h2 = h2 + 4 + 15 & -16;
            }
            c[h2 >> 2] = 7044;
            i2 = h2 + 60 | 0;
            a[h2 + 144 >> 0] = 1;
            c[h2 + 140 >> 2] = 0;
            c[h2 + 132 >> 2] = 0;
            c[h2 + 136 >> 2] = 0;
            c[h2 + 176 >> 2] = f2;
            g[h2 + 56 >> 2] = 0.019999999552965164;
            c[i2 >> 2] = 0;
            c[i2 + 4 >> 2] = 0;
            c[i2 + 8 >> 2] = 0;
            c[i2 + 12 >> 2] = 0;
            a[h2 + 170 >> 0] = 1;
            c[h2 + 8 >> 2] = b2;
            g[h2 + 52 >> 2] = e2;
            g[h2 + 48 >> 2] = 0;
            c[h2 + 12 >> 2] = d2;
            a[h2 + 171 >> 0] = 1;
            g[h2 + 172 >> 2] = 0;
            g[h2 + 16 >> 2] = 0;
            g[h2 + 20 >> 2] = 0;
            g[h2 + 44 >> 2] = 29.399999618530273;
            g[h2 + 24 >> 2] = 55;
            g[h2 + 28 >> 2] = 10;
            a[h2 + 168 >> 0] = 0;
            a[h2 + 169 >> 0] = 0;
            a[h2 + 180 >> 0] = 1;
            g[h2 + 36 >> 2] = 0.7853981852531433;
            g[h2 + 40 >> 2] = 0.7071067690849304;
            g[h2 + 108 >> 2] = 0;
            a[h2 + 181 >> 0] = 0;
            a[h2 + 182 >> 0] = 0;
            return h2 | 0;
          }
          function fA(a2) {
            a2 = a2 | 0;
            return vb[c[(c[a2 >> 2] | 0) + 40 >> 2] & 127](a2) | 0;
          }
          function gA(a2) {
            a2 = a2 | 0;
            return c[a2 + 8 >> 2] | 0;
          }
          function hA(a2) {
            a2 = a2 | 0;
            return + +g[a2 + 44 >> 2];
          }
          function iA(a2) {
            a2 = a2 | 0;
            return + +g[a2 + 36 >> 2];
          }
          function jA(a2) {
            a2 = a2 | 0;
            rb[c[(c[a2 >> 2] | 0) + 44 >> 2] & 255](a2);
            return;
          }
          function kA(a2) {
            a2 = a2 | 0;
            return vb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 127](a2) | 0;
          }
          function lA(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = +d2;
            $b[c[(c[a2 >> 2] | 0) + 36 >> 2] & 7](a2, b2, d2);
            return;
          }
          function mA(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            tb[c[(c[a2 >> 2] | 0) + 32 >> 2] & 127](a2, b2);
            return;
          }
          function nA(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            g[a2 + 24 >> 2] = b2;
            return;
          }
          function oA(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            g[a2 + 44 >> 2] = b2;
            return;
          }
          function pA(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            g[a2 + 28 >> 2] = b2;
            return;
          }
          function qA(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            g[a2 + 32 >> 2] = b2;
            return;
          }
          function rA(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            g[a2 + 36 >> 2] = b2;
            g[a2 + 40 >> 2] = +Q(+b2);
            return;
          }
          function sA(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            b2 = (b2 | 0) < 0 ? 0 : b2;
            c[a2 + 176 >> 2] = (b2 | 0) > 2 ? 2 : b2;
            return;
          }
          function tA(b2, c2) {
            b2 = b2 | 0;
            c2 = c2 | 0;
            a[b2 + 170 >> 0] = c2 & 1;
            return;
          }
          function uA(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = +d2;
            $b[c[(c[a2 >> 2] | 0) + 20 >> 2] & 7](a2, b2, d2);
            return;
          }
          function vA(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            tb[c[(c[a2 >> 2] | 0) + 16 >> 2] & 127](a2, b2);
            return;
          }
          function wA(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            tb[c[(c[a2 >> 2] | 0) + 28 >> 2] & 127](a2, b2);
            return;
          }
          function xA(a2) {
            a2 = a2 | 0;
            if (!a2)
              return;
            rG(a2);
            return;
          }
          function yA(a2) {
            a2 = a2 | 0;
            return + +g[a2 + 80 >> 2];
          }
          function zA(a2) {
            a2 = a2 | 0;
            return a2 + 48 | 0;
          }
          function AA(a2) {
            a2 = a2 | 0;
            return a2 + 32 | 0;
          }
          function BA(a2) {
            a2 = a2 | 0;
            return a2 | 0;
          }
          function CA(a2) {
            a2 = a2 | 0;
            return a2 + 16 | 0;
          }
          function DA(a2) {
            a2 = a2 | 0;
            return a2 + 64 | 0;
          }
          function EA(a2) {
            a2 = a2 | 0;
            return a2 + 48 | 0;
          }
          function FA(a2) {
            a2 = a2 | 0;
            return a2 + 32 | 0;
          }
          function GA(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c[a2 >> 2] = c[b2 >> 2];
            c[a2 + 4 >> 2] = c[b2 + 4 >> 2];
            c[a2 + 8 >> 2] = c[b2 + 8 >> 2];
            c[a2 + 12 >> 2] = c[b2 + 12 >> 2];
            return;
          }
          function HA(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c[a2 + 16 >> 2] = c[b2 >> 2];
            c[a2 + 16 + 4 >> 2] = c[b2 + 4 >> 2];
            c[a2 + 16 + 8 >> 2] = c[b2 + 8 >> 2];
            c[a2 + 16 + 12 >> 2] = c[b2 + 12 >> 2];
            return;
          }
          function IA(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c[a2 + 64 >> 2] = c[b2 >> 2];
            c[a2 + 64 + 4 >> 2] = c[b2 + 4 >> 2];
            c[a2 + 64 + 8 >> 2] = c[b2 + 8 >> 2];
            c[a2 + 64 + 12 >> 2] = c[b2 + 12 >> 2];
            return;
          }
          function JA(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c[a2 + 48 >> 2] = c[b2 >> 2];
            c[a2 + 48 + 4 >> 2] = c[b2 + 4 >> 2];
            c[a2 + 48 + 8 >> 2] = c[b2 + 8 >> 2];
            c[a2 + 48 + 12 >> 2] = c[b2 + 12 >> 2];
            return;
          }
          function KA(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c[a2 + 32 >> 2] = c[b2 >> 2];
            c[a2 + 32 + 4 >> 2] = c[b2 + 4 >> 2];
            c[a2 + 32 + 8 >> 2] = c[b2 + 8 >> 2];
            c[a2 + 32 + 12 >> 2] = c[b2 + 12 >> 2];
            return;
          }
          function LA(a2) {
            a2 = a2 | 0;
            if (!a2)
              return;
            rG(a2);
            return;
          }
          function MA(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            _f(a2, b2);
            return;
          }
          function NA(b2, d2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            if (!(a[19920] | 0))
              a[19920] = 1;
            c[5696] = c[b2 + (d2 << 4) >> 2];
            c[5697] = c[b2 + (d2 << 4) + 4 >> 2];
            c[5698] = c[b2 + (d2 << 4) + 8 >> 2];
            c[5699] = c[b2 + (d2 << 4) + 12 >> 2];
            return 22784;
          }
          function OA(a2, b2, c2, d2) {
            a2 = a2 | 0;
            b2 = +b2;
            c2 = +c2;
            d2 = +d2;
            var e2 = 0, f2 = 0, h2 = 0;
            f2 = +Q(+b2);
            e2 = +Q(+c2);
            h2 = +Q(+d2);
            b2 = +R(+b2);
            c2 = +R(+c2);
            d2 = +R(+d2);
            g[a2 >> 2] = e2 * h2;
            g[a2 + 4 >> 2] = c2 * (h2 * b2) - f2 * d2;
            g[a2 + 8 >> 2] = f2 * h2 * c2 + b2 * d2;
            g[a2 + 12 >> 2] = 0;
            g[a2 + 16 >> 2] = e2 * d2;
            g[a2 + 20 >> 2] = f2 * h2 + c2 * (b2 * d2);
            g[a2 + 24 >> 2] = c2 * (f2 * d2) - h2 * b2;
            g[a2 + 28 >> 2] = 0;
            g[a2 + 32 >> 2] = -c2;
            g[a2 + 36 >> 2] = e2 * b2;
            g[a2 + 40 >> 2] = f2 * e2;
            g[a2 + 44 >> 2] = 0;
            return;
          }
          function PA(a2) {
            a2 = a2 | 0;
            if (!a2)
              return;
            rb[c[(c[a2 >> 2] | 0) + 4 >> 2] & 255](a2);
            return;
          }
          function QA(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            tb[c[(c[a2 >> 2] | 0) + 8 >> 2] & 127](a2, b2);
            return;
          }
          function RA(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            tb[c[(c[a2 >> 2] | 0) + 12 >> 2] & 127](a2, b2);
            return;
          }
          function SA(a2) {
            a2 = a2 | 0;
            if (!a2)
              return;
            rb[c[(c[a2 >> 2] | 0) + 4 >> 2] & 255](a2);
            return;
          }
          function TA(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            tb[c[(c[a2 >> 2] | 0) + 60 >> 2] & 127](a2, b2);
            return;
          }
          function UA(a2) {
            a2 = a2 | 0;
            if (!a2)
              return;
            rb[c[(c[a2 >> 2] | 0) + 4 >> 2] & 255](a2);
            return;
          }
          function VA(a2) {
            a2 = a2 | 0;
            if (!a2)
              return;
            rb[c[(c[a2 >> 2] | 0) + 4 >> 2] & 255](a2);
            return;
          }
          function WA(a2) {
            a2 = a2 | 0;
            if (c[a2 + 204 >> 2] & 3 | 0)
              return;
            if ((c[a2 + 216 >> 2] & -2 | 0) != 4)
              c[a2 + 216 >> 2] = 1;
            g[a2 + 220 >> 2] = 0;
            return;
          }
          function XA(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            if (!b2 ? c[a2 + 204 >> 2] & 3 | 0 : 0)
              return;
            if ((c[a2 + 216 >> 2] & -2 | 0) != 4)
              c[a2 + 216 >> 2] = 1;
            g[a2 + 220 >> 2] = 0;
            return;
          }
          function YA() {
            var a2 = 0;
            c[5637] = (c[5637] | 0) + 1;
            a2 = qG(331) | 0;
            if (!a2)
              a2 = 0;
            else {
              c[(a2 + 4 + 15 & -16) + -4 >> 2] = a2;
              a2 = a2 + 4 + 15 & -16;
            }
            oi(a2);
            return a2 | 0;
          }
          function ZA(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c[a2 + 216 >> 2] = b2;
            return;
          }
          function _A(a2) {
            a2 = a2 | 0;
            return c[a2 + 204 >> 2] | 0;
          }
          function $A(a2) {
            a2 = a2 | 0;
            return c[a2 + 192 >> 2] | 0;
          }
          function aB(a2) {
            a2 = a2 | 0;
            return c[a2 + 292 >> 2] | 0;
          }
          function bB(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            return c[(c[a2 + 300 >> 2] | 0) + (b2 << 2) >> 2] | 0;
          }
          function cB(a2) {
            a2 = a2 | 0;
            return a2 + 4 | 0;
          }
          function dB(a2) {
            a2 = a2 | 0;
            a2 = c[a2 + 216 >> 2] | 0;
            return (a2 | 0) != 5 & (a2 | 0) != 2 | 0;
          }
          function eB(a2) {
            a2 = a2 | 0;
            return (c[a2 + 204 >> 2] & 2 | 0) != 0 | 0;
          }
          function fB(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            if ((c[a2 + 216 >> 2] & -2 | 0) == 4)
              return;
            c[a2 + 216 >> 2] = b2;
            return;
          }
          function gB(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            c[a2 + 164 >> 2] = c[b2 >> 2];
            c[a2 + 164 + 4 >> 2] = c[b2 + 4 >> 2];
            c[a2 + 164 + 8 >> 2] = c[b2 + 8 >> 2];
            c[a2 + 164 + 12 >> 2] = c[b2 + 12 >> 2];
            if (!(+g[b2 >> 2] != 1) ? !(+g[b2 + 4 >> 2] != 1) : 0)
              d2 = +g[b2 + 8 >> 2] != 1 ? d2 : 0;
            c[a2 + 180 >> 2] = d2;
            return;
          }
          function hB(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            g[a2 + 256 >> 2] = b2;
            return;
          }
          function iB(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            g[a2 + 252 >> 2] = b2;
            return;
          }
          function jB(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c[a2 + 204 >> 2] = b2;
            return;
          }
          function kB(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            tb[c[(c[a2 >> 2] | 0) + 8 >> 2] & 127](a2, b2);
            return;
          }
          function lB(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            g[a2 + 184 >> 2] = b2;
            return;
          }
          function mB(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            c[a2 + 284 >> 2] = (c[a2 + 284 >> 2] | 0) + 1;
            g[a2 + 224 >> 2] = b2;
            return;
          }
          function nB(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            c[a2 + 284 >> 2] = (c[a2 + 284 >> 2] | 0) + 1;
            g[a2 + 228 >> 2] = b2;
            return;
          }
          function oB(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            c[a2 + 284 >> 2] = (c[a2 + 284 >> 2] | 0) + 1;
            g[a2 + 232 >> 2] = b2;
            return;
          }
          function pB(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c[a2 + 284 >> 2] = (c[a2 + 284 >> 2] | 0) + 1;
            c[a2 + 4 >> 2] = c[b2 >> 2];
            c[a2 + 4 + 4 >> 2] = c[b2 + 4 >> 2];
            c[a2 + 4 + 8 >> 2] = c[b2 + 8 >> 2];
            c[a2 + 4 + 12 >> 2] = c[b2 + 12 >> 2];
            c[a2 + 20 >> 2] = c[b2 + 16 >> 2];
            c[a2 + 20 + 4 >> 2] = c[b2 + 16 + 4 >> 2];
            c[a2 + 20 + 8 >> 2] = c[b2 + 16 + 8 >> 2];
            c[a2 + 20 + 12 >> 2] = c[b2 + 16 + 12 >> 2];
            c[a2 + 36 >> 2] = c[b2 + 32 >> 2];
            c[a2 + 36 + 4 >> 2] = c[b2 + 32 + 4 >> 2];
            c[a2 + 36 + 8 >> 2] = c[b2 + 32 + 8 >> 2];
            c[a2 + 36 + 12 >> 2] = c[b2 + 32 + 12 >> 2];
            c[a2 + 52 >> 2] = c[b2 + 48 >> 2];
            c[a2 + 52 + 4 >> 2] = c[b2 + 48 + 4 >> 2];
            c[a2 + 52 + 8 >> 2] = c[b2 + 48 + 8 >> 2];
            c[a2 + 52 + 12 >> 2] = c[b2 + 48 + 12 >> 2];
            return;
          }
          function qB(a2) {
            a2 = a2 | 0;
            if (!a2)
              return;
            c[5638] = (c[5638] | 0) + 1;
            rG(c[a2 + -4 >> 2] | 0);
            return;
          }
          function rB() {
            var b2 = 0, d2 = 0;
            c[5637] = (c[5637] | 0) + 1;
            b2 = qG(791) | 0;
            if (!b2)
              b2 = 0;
            else {
              c[(b2 + 4 + 15 & -16) + -4 >> 2] = b2;
              b2 = b2 + 4 + 15 & -16;
            }
            c[b2 >> 2] = 1025;
            c[b2 + 116 >> 2] = 0;
            a[b2 + 120 >> 0] = 0;
            d2 = b2 + 124 | 0;
            c[d2 >> 2] = 0;
            c[d2 + 4 >> 2] = 0;
            c[d2 + 8 >> 2] = 0;
            c[d2 + 12 >> 2] = 0;
            c[d2 + 16 >> 2] = 0;
            c[d2 + 20 >> 2] = 0;
            c[d2 + 24 >> 2] = 0;
            c[d2 + 28 >> 2] = 0;
            c[b2 + 300 >> 2] = 0;
            a[b2 + 304 >> 0] = 0;
            d2 = b2 + 308 | 0;
            c[d2 >> 2] = 0;
            c[d2 + 4 >> 2] = 0;
            c[d2 + 8 >> 2] = 0;
            c[d2 + 12 >> 2] = 0;
            c[d2 + 16 >> 2] = 0;
            c[d2 + 20 >> 2] = 0;
            c[d2 + 24 >> 2] = 0;
            c[d2 + 28 >> 2] = 0;
            c[b2 + 484 >> 2] = 0;
            a[b2 + 488 >> 0] = 0;
            d2 = b2 + 492 | 0;
            c[d2 >> 2] = 0;
            c[d2 + 4 >> 2] = 0;
            c[d2 + 8 >> 2] = 0;
            c[d2 + 12 >> 2] = 0;
            c[d2 + 16 >> 2] = 0;
            c[d2 + 20 >> 2] = 0;
            c[d2 + 24 >> 2] = 0;
            c[d2 + 28 >> 2] = 0;
            c[b2 + 668 >> 2] = 0;
            a[b2 + 672 >> 0] = 0;
            d2 = b2 + 676 | 0;
            c[d2 >> 2] = 0;
            c[d2 + 4 >> 2] = 0;
            c[d2 + 8 >> 2] = 0;
            c[d2 + 12 >> 2] = 0;
            c[d2 + 16 >> 2] = 0;
            c[d2 + 20 >> 2] = 0;
            c[d2 + 24 >> 2] = 0;
            c[d2 + 28 >> 2] = 0;
            c[b2 + 740 >> 2] = 0;
            c[b2 + 744 >> 2] = 0;
            c[b2 + 748 >> 2] = 0;
            c[b2 + 768 >> 2] = 0;
            return b2 | 0;
          }
          function sB(a2) {
            a2 = a2 | 0;
            return c[a2 + 740 >> 2] | 0;
          }
          function tB(a2) {
            a2 = a2 | 0;
            return c[a2 + 744 >> 2] | 0;
          }
          function uB(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            return a2 + 4 + (b2 * 184 | 0) | 0;
          }
          function vB(a2) {
            a2 = a2 | 0;
            return c[a2 + 748 >> 2] | 0;
          }
          function wB(a2) {
            a2 = a2 | 0;
            if (!a2)
              return;
            rb[c[(c[a2 >> 2] | 0) + 4 >> 2] & 255](a2);
            return;
          }
          function xB(b2, d2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0;
            c[5637] = (c[5637] | 0) + 1;
            e2 = qG(379) | 0;
            if (!e2)
              e2 = 0;
            else {
              c[(e2 + 4 + 15 & -16) + -4 >> 2] = e2;
              e2 = e2 + 4 + 15 & -16;
            }
            yq(e2, 3, b2);
            c[e2 >> 2] = 7484;
            l2 = e2 + 300 | 0;
            c[l2 >> 2] = c[d2 >> 2];
            c[l2 + 4 >> 2] = c[d2 + 4 >> 2];
            c[l2 + 8 >> 2] = c[d2 + 8 >> 2];
            c[l2 + 12 >> 2] = c[d2 + 12 >> 2];
            k2 = +g[d2 >> 2];
            j2 = +g[d2 + 4 >> 2];
            i2 = +g[d2 + 8 >> 2];
            h2 = k2 * +g[b2 + 20 >> 2] + j2 * +g[b2 + 24 >> 2] + i2 * +g[b2 + 28 >> 2] + +g[b2 + 56 >> 2];
            f2 = k2 * +g[b2 + 36 >> 2] + j2 * +g[b2 + 40 >> 2] + i2 * +g[b2 + 44 >> 2] + +g[b2 + 60 >> 2];
            g[e2 + 316 >> 2] = k2 * +g[b2 + 4 >> 2] + j2 * +g[b2 + 8 >> 2] + i2 * +g[b2 + 12 >> 2] + +g[b2 + 52 >> 2];
            g[e2 + 320 >> 2] = h2;
            g[e2 + 324 >> 2] = f2;
            g[e2 + 328 >> 2] = 0;
            c[e2 + 332 >> 2] = 0;
            a[e2 + 344 >> 0] = 0;
            g[e2 + 348 >> 2] = 0.30000001192092896;
            g[e2 + 352 >> 2] = 1;
            g[e2 + 356 >> 2] = 0;
            return e2 | 0;
          }
          function yB(b2, d2, e2, f2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            var h2 = 0;
            c[5637] = (c[5637] | 0) + 1;
            h2 = qG(379) | 0;
            if (!h2)
              h2 = 0;
            else {
              c[(h2 + 4 + 15 & -16) + -4 >> 2] = h2;
              h2 = h2 + 4 + 15 & -16;
            }
            c[h2 + 4 >> 2] = 3;
            c[h2 + 8 >> 2] = -1;
            c[h2 + 12 >> 2] = -1;
            g[h2 + 16 >> 2] = 34028234663852886e22;
            a[h2 + 20 >> 0] = 1;
            a[h2 + 21 >> 0] = 0;
            c[h2 + 24 >> 2] = -1;
            c[h2 + 28 >> 2] = b2;
            c[h2 + 32 >> 2] = d2;
            g[h2 + 36 >> 2] = 0;
            g[h2 + 40 >> 2] = 0.30000001192092896;
            c[h2 + 44 >> 2] = 0;
            c[h2 >> 2] = 7484;
            d2 = h2 + 300 | 0;
            c[d2 >> 2] = c[e2 >> 2];
            c[d2 + 4 >> 2] = c[e2 + 4 >> 2];
            c[d2 + 8 >> 2] = c[e2 + 8 >> 2];
            c[d2 + 12 >> 2] = c[e2 + 12 >> 2];
            e2 = h2 + 316 | 0;
            c[e2 >> 2] = c[f2 >> 2];
            c[e2 + 4 >> 2] = c[f2 + 4 >> 2];
            c[e2 + 8 >> 2] = c[f2 + 8 >> 2];
            c[e2 + 12 >> 2] = c[f2 + 12 >> 2];
            c[h2 + 332 >> 2] = 0;
            a[h2 + 344 >> 0] = 0;
            g[h2 + 348 >> 2] = 0.30000001192092896;
            g[h2 + 352 >> 2] = 1;
            g[h2 + 356 >> 2] = 0;
            return h2 | 0;
          }
          function zB(b2, c2) {
            b2 = b2 | 0;
            c2 = c2 | 0;
            a[b2 + 21 >> 0] = c2 & 1;
            return;
          }
          function AB(a2) {
            a2 = a2 | 0;
            return + +g[a2 + 16 >> 2];
          }
          function BB(a2) {
            a2 = a2 | 0;
            return a2 + 300 | 0;
          }
          function CB(a2) {
            a2 = a2 | 0;
            return a2 + 316 | 0;
          }
          function DB(a2) {
            a2 = a2 | 0;
            return a2 + 348 | 0;
          }
          function EB(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            g[a2 + 16 >> 2] = b2;
            return;
          }
          function FB(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c[a2 + 300 >> 2] = c[b2 >> 2];
            c[a2 + 300 + 4 >> 2] = c[b2 + 4 >> 2];
            c[a2 + 300 + 8 >> 2] = c[b2 + 8 >> 2];
            c[a2 + 300 + 12 >> 2] = c[b2 + 12 >> 2];
            return;
          }
          function GB(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c[a2 + 316 >> 2] = c[b2 >> 2];
            c[a2 + 316 + 4 >> 2] = c[b2 + 4 >> 2];
            c[a2 + 316 + 8 >> 2] = c[b2 + 8 >> 2];
            c[a2 + 316 + 12 >> 2] = c[b2 + 12 >> 2];
            return;
          }
          function HB(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c[a2 + 348 >> 2] = c[b2 >> 2];
            c[a2 + 348 + 4 >> 2] = c[b2 + 4 >> 2];
            c[a2 + 348 + 8 >> 2] = c[b2 + 8 >> 2];
            return;
          }
          function IB(a2) {
            a2 = a2 | 0;
            if (!a2)
              return;
            rG(a2);
            return;
          }
          function JB(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            g[a2 + 12 >> 2] = b2;
            return;
          }
          function KB(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            g[a2 >> 2] = b2;
            return;
          }
          function LB(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            g[a2 + 4 >> 2] = b2;
            return;
          }
          function MB(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            g[a2 + 8 >> 2] = b2;
            return;
          }
          function NB(a2) {
            a2 = a2 | 0;
            return + +g[a2 + 12 >> 2];
          }
          function OB(a2) {
            a2 = a2 | 0;
            return + +g[a2 >> 2];
          }
          function PB(a2) {
            a2 = a2 | 0;
            return + +g[a2 + 4 >> 2];
          }
          function QB(a2) {
            a2 = a2 | 0;
            return + +g[a2 + 8 >> 2];
          }
          function RB(a2) {
            a2 = a2 | 0;
            if (!a2)
              return;
            rG(a2);
            return;
          }
          function SB(a2, b2, d2, e2) {
            a2 = +a2;
            b2 = +b2;
            d2 = +d2;
            e2 = +e2;
            var f2 = 0, h2 = 0;
            while (1) {
              f2 = qG(16) | 0;
              if (f2 | 0) {
                h2 = 6;
                break;
              }
              f2 = c[5831] | 0;
              c[5831] = f2 + 0;
              if (!f2) {
                h2 = 5;
                break;
              }
              _b[f2 & 3]();
            }
            if ((h2 | 0) == 5) {
              h2 = Va(4) | 0;
              c[h2 >> 2] = 8308;
              hb(h2 | 0, 2416, 215);
            } else if ((h2 | 0) == 6) {
              g[f2 >> 2] = a2;
              g[f2 + 4 >> 2] = b2;
              g[f2 + 8 >> 2] = d2;
              g[f2 + 12 >> 2] = e2;
              return f2 | 0;
            }
            return 0;
          }
          function TB(a2) {
            a2 = a2 | 0;
            var b2 = 0, c2 = 0, d2 = 0, e2 = 0, f2 = 0;
            f2 = +g[a2 >> 2];
            e2 = +g[a2 + 4 >> 2];
            d2 = +g[a2 + 8 >> 2];
            c2 = +g[a2 + 12 >> 2];
            b2 = 1 / +O(+(f2 * f2 + e2 * e2 + d2 * d2 + c2 * c2));
            g[a2 >> 2] = f2 * b2;
            g[a2 + 4 >> 2] = e2 * b2;
            g[a2 + 8 >> 2] = d2 * b2;
            g[a2 + 12 >> 2] = c2 * b2;
            return;
          }
          function UB(a2, b2, c2, d2, e2) {
            a2 = a2 | 0;
            b2 = +b2;
            c2 = +c2;
            d2 = +d2;
            e2 = +e2;
            g[a2 >> 2] = b2;
            g[a2 + 4 >> 2] = c2;
            g[a2 + 8 >> 2] = d2;
            g[a2 + 12 >> 2] = e2;
            return;
          }
          function VB(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            g[a2 + 12 >> 2] = b2;
            return;
          }
          function WB(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            g[a2 >> 2] = b2;
            return;
          }
          function XB(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            g[a2 + 4 >> 2] = b2;
            return;
          }
          function YB(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            g[a2 + 8 >> 2] = b2;
            return;
          }
          function ZB(a2) {
            a2 = a2 | 0;
            return + +g[a2 + 12 >> 2];
          }
          function _B(a2) {
            a2 = a2 | 0;
            return + +g[a2 >> 2];
          }
          function $B(a2) {
            a2 = a2 | 0;
            return + +g[a2 + 4 >> 2];
          }
          function aC(a2) {
            a2 = a2 | 0;
            return + +g[a2 + 8 >> 2];
          }
          function bC(a2) {
            a2 = a2 | 0;
            if (!a2)
              return;
            rb[c[(c[a2 >> 2] | 0) + 4 >> 2] & 255](a2);
            return;
          }
          function cC(a2, b2, c2, d2, e2, f2, g2, h2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = d2 | 0;
            e2 = +e2;
            f2 = +f2;
            g2 = g2 | 0;
            h2 = h2 | 0;
            return Wr(a2, b2, c2, d2, e2, f2, g2, h2) | 0;
          }
          function dC(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = +b2;
            d2 = d2 | 0;
            g[(c[a2 + 136 >> 2] | 0) + (d2 * 284 | 0) + 252 >> 2] = b2;
            return;
          }
          function eC(b2, d2, e2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0;
            while (1) {
              b2 = qG(144) | 0;
              if (b2 | 0) {
                f2 = 6;
                break;
              }
              b2 = c[5831] | 0;
              c[5831] = b2 + 0;
              if (!b2) {
                f2 = 5;
                break;
              }
              _b[b2 & 3]();
            }
            if ((f2 | 0) == 5) {
              e2 = Va(4) | 0;
              c[e2 >> 2] = 8308;
              hb(e2 | 0, 2416, 215);
            } else if ((f2 | 0) == 6) {
              c[b2 >> 2] = 7952;
              a[b2 + 20 >> 0] = 1;
              c[b2 + 16 >> 2] = 0;
              c[b2 + 8 >> 2] = 0;
              c[b2 + 12 >> 2] = 0;
              a[b2 + 40 >> 0] = 1;
              c[b2 + 36 >> 2] = 0;
              c[b2 + 28 >> 2] = 0;
              c[b2 + 32 >> 2] = 0;
              a[b2 + 60 >> 0] = 1;
              c[b2 + 56 >> 2] = 0;
              c[b2 + 48 >> 2] = 0;
              c[b2 + 52 >> 2] = 0;
              a[b2 + 80 >> 0] = 1;
              c[b2 + 76 >> 2] = 0;
              c[b2 + 68 >> 2] = 0;
              c[b2 + 72 >> 2] = 0;
              c[b2 + 92 >> 2] = e2;
              g[b2 + 96 >> 2] = 0;
              a[b2 + 140 >> 0] = 1;
              c[b2 + 136 >> 2] = 0;
              c[b2 + 128 >> 2] = 0;
              c[b2 + 132 >> 2] = 0;
              c[b2 + 108 >> 2] = d2;
              c[b2 + 112 >> 2] = 0;
              c[b2 + 116 >> 2] = 2;
              c[b2 + 120 >> 2] = 1;
              g[b2 + 104 >> 2] = 0;
              g[b2 + 100 >> 2] = 0;
              return b2 | 0;
            }
            return 0;
          }
          function fC(a2) {
            a2 = a2 | 0;
            return c[a2 + 128 >> 2] | 0;
          }
          function gC(a2) {
            a2 = a2 | 0;
            return c[a2 + 108 >> 2] | 0;
          }
          function hC(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            return (c[a2 + 136 >> 2] | 0) + (b2 * 284 | 0) | 0;
          }
          function iC(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            return (c[a2 + 136 >> 2] | 0) + (b2 * 284 | 0) + 92 | 0;
          }
          function jC(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = +b2;
            d2 = d2 | 0;
            g[(c[a2 + 136 >> 2] | 0) + (d2 * 284 | 0) + 256 >> 2] = b2;
            return;
          }
          function kC(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            bc[c[(c[a2 >> 2] | 0) + 24 >> 2] & 127](a2, b2, d2, e2);
            return;
          }
          function lC(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = +b2;
            d2 = d2 | 0;
            g[(c[a2 + 136 >> 2] | 0) + (d2 * 284 | 0) + 232 >> 2] = b2;
            return;
          }
          function mC(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            Mr(c[a2 + 108 >> 2] | 0, c[a2 + 136 >> 2] | 0, b2, d2);
            return;
          }
          function nC(a2) {
            a2 = a2 | 0;
            if (!a2)
              return;
            rG(a2);
            return;
          }
          function oC(b2, d2, e2) {
            b2 = +b2;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, h2 = 0;
            while (1) {
              f2 = qG(140) | 0;
              if (f2 | 0) {
                h2 = 6;
                break;
              }
              f2 = c[5831] | 0;
              c[5831] = f2 + 0;
              if (!f2) {
                h2 = 5;
                break;
              }
              _b[f2 & 3]();
            }
            if ((h2 | 0) == 5) {
              e2 = Va(4) | 0;
              c[e2 >> 2] = 8308;
              hb(e2 | 0, 2416, 215);
            } else if ((h2 | 0) == 6) {
              g[f2 >> 2] = b2;
              c[f2 + 4 >> 2] = d2;
              c[f2 + 72 >> 2] = e2;
              c[f2 + 76 >> 2] = 0;
              c[f2 + 76 + 4 >> 2] = 0;
              c[f2 + 76 + 8 >> 2] = 0;
              c[f2 + 76 + 12 >> 2] = 0;
              c[f2 + 76 + 16 >> 2] = 0;
              c[f2 + 76 + 20 >> 2] = 0;
              g[f2 + 100 >> 2] = 0.5;
              g[f2 + 104 >> 2] = 0;
              g[f2 + 108 >> 2] = 0;
              g[f2 + 112 >> 2] = 0.800000011920929;
              g[f2 + 116 >> 2] = 1;
              a[f2 + 120 >> 0] = 0;
              g[f2 + 124 >> 2] = 0.004999999888241291;
              g[f2 + 128 >> 2] = 0.009999999776482582;
              g[f2 + 132 >> 2] = 0.009999999776482582;
              g[f2 + 136 >> 2] = 0.009999999776482582;
              c[f2 + 8 >> 2] = 1065353216;
              c[f2 + 12 >> 2] = 0;
              c[f2 + 12 + 4 >> 2] = 0;
              c[f2 + 12 + 8 >> 2] = 0;
              c[f2 + 12 + 12 >> 2] = 0;
              c[f2 + 28 >> 2] = 1065353216;
              c[f2 + 32 >> 2] = 0;
              c[f2 + 32 + 4 >> 2] = 0;
              c[f2 + 32 + 8 >> 2] = 0;
              c[f2 + 32 + 12 >> 2] = 0;
              c[f2 + 48 >> 2] = 1065353216;
              c[f2 + 52 >> 2] = 0;
              c[f2 + 52 + 4 >> 2] = 0;
              c[f2 + 52 + 8 >> 2] = 0;
              c[f2 + 52 + 12 >> 2] = 0;
              c[f2 + 52 + 16 >> 2] = 0;
              return f2 | 0;
            }
            return 0;
          }
          function pC(b2, d2, e2, f2) {
            b2 = +b2;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            var h2 = 0, i2 = 0;
            while (1) {
              h2 = qG(140) | 0;
              if (h2 | 0) {
                i2 = 6;
                break;
              }
              h2 = c[5831] | 0;
              c[5831] = h2 + 0;
              if (!h2) {
                i2 = 5;
                break;
              }
              _b[h2 & 3]();
            }
            if ((i2 | 0) == 5) {
              f2 = Va(4) | 0;
              c[f2 >> 2] = 8308;
              hb(f2 | 0, 2416, 215);
            } else if ((i2 | 0) == 6) {
              g[h2 >> 2] = b2;
              c[h2 + 4 >> 2] = d2;
              c[h2 + 72 >> 2] = e2;
              c[h2 + 76 >> 2] = c[f2 >> 2];
              c[h2 + 76 + 4 >> 2] = c[f2 + 4 >> 2];
              c[h2 + 76 + 8 >> 2] = c[f2 + 8 >> 2];
              c[h2 + 76 + 12 >> 2] = c[f2 + 12 >> 2];
              g[h2 + 92 >> 2] = 0;
              g[h2 + 96 >> 2] = 0;
              g[h2 + 100 >> 2] = 0.5;
              g[h2 + 104 >> 2] = 0;
              g[h2 + 108 >> 2] = 0;
              g[h2 + 112 >> 2] = 0.800000011920929;
              g[h2 + 116 >> 2] = 1;
              a[h2 + 120 >> 0] = 0;
              g[h2 + 124 >> 2] = 0.004999999888241291;
              g[h2 + 128 >> 2] = 0.009999999776482582;
              g[h2 + 132 >> 2] = 0.009999999776482582;
              g[h2 + 136 >> 2] = 0.009999999776482582;
              c[h2 + 8 >> 2] = 1065353216;
              c[h2 + 12 >> 2] = 0;
              c[h2 + 12 + 4 >> 2] = 0;
              c[h2 + 12 + 8 >> 2] = 0;
              c[h2 + 12 + 12 >> 2] = 0;
              c[h2 + 28 >> 2] = 1065353216;
              c[h2 + 32 >> 2] = 0;
              c[h2 + 32 + 4 >> 2] = 0;
              c[h2 + 32 + 8 >> 2] = 0;
              c[h2 + 32 + 12 >> 2] = 0;
              c[h2 + 48 >> 2] = 1065353216;
              c[h2 + 52 >> 2] = 0;
              c[h2 + 52 + 4 >> 2] = 0;
              c[h2 + 52 + 8 >> 2] = 0;
              c[h2 + 52 + 12 >> 2] = 0;
              c[h2 + 52 + 16 >> 2] = 0;
              return h2 | 0;
            }
            return 0;
          }
          function qC(a2) {
            a2 = a2 | 0;
            return + +g[a2 + 136 >> 2];
          }
          function rC(a2) {
            a2 = a2 | 0;
            return + +g[a2 + 132 >> 2];
          }
          function sC(a2) {
            a2 = a2 | 0;
            return + +g[a2 + 124 >> 2];
          }
          function tC(b2) {
            b2 = b2 | 0;
            return (a[b2 + 120 >> 0] | 0) != 0 | 0;
          }
          function uC(a2) {
            a2 = a2 | 0;
            return + +g[a2 + 128 >> 2];
          }
          function vC(a2) {
            a2 = a2 | 0;
            return + +g[a2 + 96 >> 2];
          }
          function wC(a2) {
            a2 = a2 | 0;
            return + +g[a2 + 116 >> 2];
          }
          function xC(a2) {
            a2 = a2 | 0;
            return + +g[a2 + 100 >> 2];
          }
          function yC(a2) {
            a2 = a2 | 0;
            return + +g[a2 + 92 >> 2];
          }
          function zC(a2) {
            a2 = a2 | 0;
            return + +g[a2 + 112 >> 2];
          }
          function AC(a2) {
            a2 = a2 | 0;
            return + +g[a2 + 108 >> 2];
          }
          function BC(a2) {
            a2 = a2 | 0;
            return + +g[a2 + 104 >> 2];
          }
          function CC(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            g[a2 + 136 >> 2] = b2;
            return;
          }
          function DC(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            g[a2 + 132 >> 2] = b2;
            return;
          }
          function EC(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            g[a2 + 124 >> 2] = b2;
            return;
          }
          function FC(b2, c2) {
            b2 = b2 | 0;
            c2 = c2 | 0;
            a[b2 + 120 >> 0] = c2 & 1;
            return;
          }
          function GC(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            g[a2 + 128 >> 2] = b2;
            return;
          }
          function HC(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            g[a2 + 96 >> 2] = b2;
            return;
          }
          function IC(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            g[a2 + 116 >> 2] = b2;
            return;
          }
          function JC(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            g[a2 + 100 >> 2] = b2;
            return;
          }
          function KC(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            g[a2 + 92 >> 2] = b2;
            return;
          }
          function LC(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            g[a2 + 112 >> 2] = b2;
            return;
          }
          function MC(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            g[a2 + 108 >> 2] = b2;
            return;
          }
          function NC(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            g[a2 + 104 >> 2] = b2;
            return;
          }
          function OC(a2) {
            a2 = a2 | 0;
            if (!a2)
              return;
            rb[c[(c[a2 >> 2] | 0) + 4 >> 2] & 255](a2);
            return;
          }
          function PC(a2) {
            a2 = a2 | 0;
            if (c[a2 + 204 >> 2] & 3 | 0)
              return;
            if ((c[a2 + 216 >> 2] & -2 | 0) != 4)
              c[a2 + 216 >> 2] = 1;
            g[a2 + 220 >> 2] = 0;
            return;
          }
          function QC(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            if (!b2 ? c[a2 + 204 >> 2] & 3 | 0 : 0)
              return;
            if ((c[a2 + 216 >> 2] & -2 | 0) != 4)
              c[a2 + 216 >> 2] = 1;
            g[a2 + 220 >> 2] = 0;
            return;
          }
          function RC(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var c2 = 0, d2 = 0;
            d2 = +g[b2 + 4 >> 2] * +g[a2 + 376 >> 2];
            c2 = +g[b2 + 8 >> 2] * +g[a2 + 380 >> 2];
            g[a2 + 436 >> 2] = +g[b2 >> 2] * +g[a2 + 372 >> 2] + +g[a2 + 436 >> 2];
            g[a2 + 440 >> 2] = d2 + +g[a2 + 440 >> 2];
            g[a2 + 444 >> 2] = c2 + +g[a2 + 444 >> 2];
            return;
          }
          function SC(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var c2 = 0, d2 = 0, e2 = 0;
            e2 = +g[a2 + 368 >> 2];
            d2 = +g[b2 + 4 >> 2] * +g[a2 + 376 >> 2] * e2;
            c2 = e2 * (+g[b2 + 8 >> 2] * +g[a2 + 380 >> 2]);
            g[a2 + 336 >> 2] = +g[b2 >> 2] * +g[a2 + 372 >> 2] * e2 + +g[a2 + 336 >> 2];
            g[a2 + 340 >> 2] = d2 + +g[a2 + 340 >> 2];
            g[a2 + 344 >> 2] = c2 + +g[a2 + 344 >> 2];
            return;
          }
          function TC(a2, b2, c2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0;
            d2 = +g[a2 + 372 >> 2];
            h2 = +g[a2 + 376 >> 2];
            f2 = +g[b2 + 4 >> 2] * h2;
            i2 = +g[a2 + 380 >> 2];
            j2 = +g[b2 + 8 >> 2] * i2;
            g[a2 + 436 >> 2] = +g[b2 >> 2] * d2 + +g[a2 + 436 >> 2];
            g[a2 + 440 >> 2] = f2 + +g[a2 + 440 >> 2];
            g[a2 + 444 >> 2] = j2 + +g[a2 + 444 >> 2];
            d2 = d2 * +g[b2 >> 2];
            h2 = h2 * +g[b2 + 4 >> 2];
            i2 = i2 * +g[b2 + 8 >> 2];
            j2 = +g[c2 + 4 >> 2];
            f2 = +g[c2 + 8 >> 2];
            k2 = +g[c2 >> 2];
            e2 = (d2 * f2 - i2 * k2) * +g[a2 + 572 >> 2];
            d2 = (h2 * k2 - d2 * j2) * +g[a2 + 576 >> 2];
            g[a2 + 452 >> 2] = (j2 * i2 - h2 * f2) * +g[a2 + 568 >> 2] + +g[a2 + 452 >> 2];
            g[a2 + 456 >> 2] = e2 + +g[a2 + 456 >> 2];
            g[a2 + 460 >> 2] = d2 + +g[a2 + 460 >> 2];
            return;
          }
          function UC(a2, b2, c2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            Uo(a2, b2, c2);
            return;
          }
          function VC(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var c2 = 0, d2 = 0, e2 = 0, f2 = 0, h2 = 0;
            h2 = +g[b2 >> 2];
            f2 = +g[b2 + 4 >> 2];
            e2 = +g[b2 + 8 >> 2];
            d2 = (h2 * +g[a2 + 304 >> 2] + f2 * +g[a2 + 308 >> 2] + e2 * +g[a2 + 312 >> 2]) * +g[a2 + 572 >> 2];
            c2 = (h2 * +g[a2 + 320 >> 2] + f2 * +g[a2 + 324 >> 2] + e2 * +g[a2 + 328 >> 2]) * +g[a2 + 576 >> 2];
            g[a2 + 352 >> 2] = (+g[a2 + 288 >> 2] * h2 + +g[a2 + 292 >> 2] * f2 + +g[a2 + 296 >> 2] * e2) * +g[a2 + 568 >> 2] + +g[a2 + 352 >> 2];
            g[a2 + 356 >> 2] = d2 + +g[a2 + 356 >> 2];
            g[a2 + 360 >> 2] = c2 + +g[a2 + 360 >> 2];
            return;
          }
          function WC(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var c2 = 0, d2 = 0;
            d2 = +g[b2 + 4 >> 2] * +g[a2 + 572 >> 2];
            c2 = +g[b2 + 8 >> 2] * +g[a2 + 576 >> 2];
            g[a2 + 452 >> 2] = +g[b2 >> 2] * +g[a2 + 568 >> 2] + +g[a2 + 452 >> 2];
            g[a2 + 456 >> 2] = d2 + +g[a2 + 456 >> 2];
            g[a2 + 460 >> 2] = c2 + +g[a2 + 460 >> 2];
            return;
          }
          function XC(b2) {
            b2 = b2 | 0;
            var d2 = 0, e2 = 0;
            c[5637] = (c[5637] | 0) + 1;
            d2 = qG(659) | 0;
            if (!d2)
              d2 = 0;
            else {
              c[(d2 + 4 + 15 & -16) + -4 >> 2] = d2;
              d2 = d2 + 4 + 15 & -16;
            }
            c[d2 + 164 >> 2] = 1065353216;
            c[d2 + 168 >> 2] = 1065353216;
            c[d2 + 172 >> 2] = 1065353216;
            g[d2 + 176 >> 2] = 0;
            c[d2 + 180 >> 2] = 0;
            g[d2 + 184 >> 2] = 999999984306749400;
            e2 = d2 + 188 | 0;
            c[e2 >> 2] = 0;
            c[e2 + 4 >> 2] = 0;
            c[e2 + 8 >> 2] = 0;
            c[e2 + 12 >> 2] = 0;
            c[d2 + 204 >> 2] = 1;
            c[d2 + 208 >> 2] = -1;
            c[d2 + 212 >> 2] = -1;
            c[d2 + 216 >> 2] = 1;
            g[d2 + 220 >> 2] = 0;
            g[d2 + 224 >> 2] = 0.5;
            g[d2 + 228 >> 2] = 0;
            g[d2 + 232 >> 2] = 0;
            c[d2 + 236 >> 2] = 1;
            c[d2 + 240 >> 2] = 0;
            c[d2 + 244 >> 2] = -1;
            g[d2 + 248 >> 2] = 1;
            g[d2 + 252 >> 2] = 0;
            g[d2 + 256 >> 2] = 0;
            c[d2 + 260 >> 2] = 0;
            a[d2 + 280 >> 0] = 1;
            c[d2 + 276 >> 2] = 0;
            c[d2 + 268 >> 2] = 0;
            c[d2 + 272 >> 2] = 0;
            c[d2 + 284 >> 2] = 0;
            c[d2 + 4 >> 2] = 1065353216;
            e2 = d2 + 8 | 0;
            c[e2 >> 2] = 0;
            c[e2 + 4 >> 2] = 0;
            c[e2 + 8 >> 2] = 0;
            c[e2 + 12 >> 2] = 0;
            c[d2 + 24 >> 2] = 1065353216;
            e2 = d2 + 28 | 0;
            c[e2 >> 2] = 0;
            c[e2 + 4 >> 2] = 0;
            c[e2 + 8 >> 2] = 0;
            c[e2 + 12 >> 2] = 0;
            c[d2 + 44 >> 2] = 1065353216;
            e2 = d2 + 48 | 0;
            c[e2 >> 2] = 0;
            c[e2 + 4 >> 2] = 0;
            c[e2 + 8 >> 2] = 0;
            c[e2 + 12 >> 2] = 0;
            c[e2 + 16 >> 2] = 0;
            c[d2 >> 2] = 7916;
            a[d2 + 524 >> 0] = 1;
            c[d2 + 520 >> 2] = 0;
            c[d2 + 512 >> 2] = 0;
            c[d2 + 516 >> 2] = 0;
            Br(d2, b2);
            return d2 | 0;
          }
          function YC(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c[a2 + 216 >> 2] = b2;
            return;
          }
          function ZC(a2) {
            a2 = a2 | 0;
            return a2 + 352 | 0;
          }
          function _C(a2) {
            a2 = a2 | 0;
            return a2 + 4 | 0;
          }
          function $C(a2) {
            a2 = a2 | 0;
            return c[a2 + 204 >> 2] | 0;
          }
          function aD(a2) {
            a2 = a2 | 0;
            return c[a2 + 192 >> 2] | 0;
          }
          function bD(a2) {
            a2 = a2 | 0;
            return a2 + 336 | 0;
          }
          function cD(a2) {
            a2 = a2 | 0;
            return c[a2 + 504 >> 2] | 0;
          }
          function dD(a2) {
            a2 = a2 | 0;
            return a2 + 4 | 0;
          }
          function eD(a2) {
            a2 = a2 | 0;
            a2 = c[a2 + 216 >> 2] | 0;
            return (a2 | 0) != 5 & (a2 | 0) != 2 | 0;
          }
          function fD(a2) {
            a2 = a2 | 0;
            return (c[a2 + 204 >> 2] & 2 | 0) != 0 | 0;
          }
          function gD(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            if ((c[a2 + 216 >> 2] & -2 | 0) == 4)
              return;
            c[a2 + 216 >> 2] = b2;
            return;
          }
          function hD(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c[a2 + 284 >> 2] = (c[a2 + 284 >> 2] | 0) + 1;
            c[a2 + 568 >> 2] = c[b2 >> 2];
            c[a2 + 568 + 4 >> 2] = c[b2 + 4 >> 2];
            c[a2 + 568 + 8 >> 2] = c[b2 + 8 >> 2];
            c[a2 + 568 + 12 >> 2] = c[b2 + 12 >> 2];
            return;
          }
          function iD(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c[a2 + 284 >> 2] = (c[a2 + 284 >> 2] | 0) + 1;
            c[a2 + 352 >> 2] = c[b2 >> 2];
            c[a2 + 352 + 4 >> 2] = c[b2 + 4 >> 2];
            c[a2 + 352 + 8 >> 2] = c[b2 + 8 >> 2];
            c[a2 + 352 + 12 >> 2] = c[b2 + 12 >> 2];
            return;
          }
          function jD(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            c[a2 + 164 >> 2] = c[b2 >> 2];
            c[a2 + 164 + 4 >> 2] = c[b2 + 4 >> 2];
            c[a2 + 164 + 8 >> 2] = c[b2 + 8 >> 2];
            c[a2 + 164 + 12 >> 2] = c[b2 + 12 >> 2];
            if (!(+g[b2 >> 2] != 1) ? !(+g[b2 + 4 >> 2] != 1) : 0)
              d2 = +g[b2 + 8 >> 2] != 1 ? d2 : 0;
            c[a2 + 180 >> 2] = d2;
            return;
          }
          function kD(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            g[a2 + 256 >> 2] = b2;
            return;
          }
          function lD(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            g[a2 + 252 >> 2] = b2;
            return;
          }
          function mD(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            Er(a2, b2);
            return;
          }
          function nD(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c[a2 + 204 >> 2] = b2;
            return;
          }
          function oD(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            tb[c[(c[a2 >> 2] | 0) + 8 >> 2] & 127](a2, b2);
            return;
          }
          function pD(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            g[a2 + 184 >> 2] = b2;
            return;
          }
          function qD(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = +b2;
            d2 = +d2;
            var e2 = 0;
            e2 = i;
            i = i + 32 | 0;
            g[e2 + 20 >> 2] = b2;
            g[e2 + 16 >> 2] = d2;
            g[e2 + 12 >> 2] = 0;
            g[e2 + 8 >> 2] = 1;
            c[a2 + 468 >> 2] = c[(b2 < 0 ? e2 + 12 | 0 : b2 > 1 ? e2 + 8 | 0 : e2 + 20 | 0) >> 2];
            g[e2 + 4 >> 2] = 0;
            g[e2 >> 2] = 1;
            c[a2 + 472 >> 2] = c[(d2 < 0 ? e2 + 4 | 0 : d2 > 1 ? e2 : e2 + 16 | 0) >> 2];
            i = e2;
            return;
          }
          function rD(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            c[a2 + 284 >> 2] = (c[a2 + 284 >> 2] | 0) + 1;
            g[a2 + 224 >> 2] = b2;
            return;
          }
          function sD(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0;
            c[a2 + 372 >> 2] = c[b2 >> 2];
            c[a2 + 372 + 4 >> 2] = c[b2 + 4 >> 2];
            c[a2 + 372 + 8 >> 2] = c[b2 + 8 >> 2];
            c[a2 + 372 + 12 >> 2] = c[b2 + 12 >> 2];
            f2 = +g[a2 + 368 >> 2];
            e2 = f2 * +g[a2 + 376 >> 2];
            d2 = f2 * +g[a2 + 380 >> 2];
            g[a2 + 584 >> 2] = +g[a2 + 372 >> 2] * f2;
            g[a2 + 588 >> 2] = e2;
            g[a2 + 592 >> 2] = d2;
            g[a2 + 596 >> 2] = 0;
            return;
          }
          function tD(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c[a2 + 284 >> 2] = (c[a2 + 284 >> 2] | 0) + 1;
            c[a2 + 336 >> 2] = c[b2 >> 2];
            c[a2 + 336 + 4 >> 2] = c[b2 + 4 >> 2];
            c[a2 + 336 + 8 >> 2] = c[b2 + 8 >> 2];
            c[a2 + 336 + 12 >> 2] = c[b2 + 12 >> 2];
            return;
          }
          function uD(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = +b2;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0;
            e2 = c[a2 + 204 >> 2] | 0;
            if (b2 == 0) {
              c[a2 + 204 >> 2] = e2 | 1;
              h2 = 0;
            } else {
              c[a2 + 204 >> 2] = e2 & -2;
              h2 = 1 / b2;
            }
            g[a2 + 368 >> 2] = h2;
            j2 = +g[a2 + 408 >> 2] * b2;
            i2 = +g[a2 + 412 >> 2] * b2;
            g[a2 + 388 >> 2] = +g[a2 + 404 >> 2] * b2;
            g[a2 + 392 >> 2] = j2;
            g[a2 + 396 >> 2] = i2;
            g[a2 + 400 >> 2] = 0;
            b2 = +g[d2 >> 2];
            f2 = b2 != 0 ? (g[k >> 2] = 1 / b2, c[k >> 2] | 0) : 0;
            b2 = +g[d2 + 4 >> 2];
            e2 = b2 != 0 ? (g[k >> 2] = 1 / b2, c[k >> 2] | 0) : 0;
            b2 = +g[d2 + 8 >> 2];
            d2 = b2 != 0 ? (g[k >> 2] = 1 / b2, c[k >> 2] | 0) : 0;
            c[a2 + 420 >> 2] = f2;
            c[a2 + 424 >> 2] = e2;
            c[a2 + 428 >> 2] = d2;
            g[a2 + 432 >> 2] = 0;
            i2 = h2 * +g[a2 + 376 >> 2];
            j2 = h2 * +g[a2 + 380 >> 2];
            g[a2 + 584 >> 2] = +g[a2 + 372 >> 2] * h2;
            g[a2 + 588 >> 2] = i2;
            g[a2 + 592 >> 2] = j2;
            g[a2 + 596 >> 2] = 0;
            return;
          }
          function vD(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c[a2 + 504 >> 2] = b2;
            if (!b2)
              return;
            tb[c[(c[b2 >> 2] | 0) + 8 >> 2] & 127](b2, a2 + 4 | 0);
            return;
          }
          function wD(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            c[a2 + 284 >> 2] = (c[a2 + 284 >> 2] | 0) + 1;
            g[a2 + 228 >> 2] = b2;
            return;
          }
          function xD(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            c[a2 + 284 >> 2] = (c[a2 + 284 >> 2] | 0) + 1;
            g[a2 + 232 >> 2] = b2;
            return;
          }
          function yD(a2, b2, c2) {
            a2 = a2 | 0;
            b2 = +b2;
            c2 = +c2;
            g[a2 + 496 >> 2] = b2;
            g[a2 + 500 >> 2] = c2;
            return;
          }
          function zD(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c[a2 + 284 >> 2] = (c[a2 + 284 >> 2] | 0) + 1;
            c[a2 + 4 >> 2] = c[b2 >> 2];
            c[a2 + 4 + 4 >> 2] = c[b2 + 4 >> 2];
            c[a2 + 4 + 8 >> 2] = c[b2 + 8 >> 2];
            c[a2 + 4 + 12 >> 2] = c[b2 + 12 >> 2];
            c[a2 + 20 >> 2] = c[b2 + 16 >> 2];
            c[a2 + 20 + 4 >> 2] = c[b2 + 16 + 4 >> 2];
            c[a2 + 20 + 8 >> 2] = c[b2 + 16 + 8 >> 2];
            c[a2 + 20 + 12 >> 2] = c[b2 + 16 + 12 >> 2];
            c[a2 + 36 >> 2] = c[b2 + 32 >> 2];
            c[a2 + 36 + 4 >> 2] = c[b2 + 32 + 4 >> 2];
            c[a2 + 36 + 8 >> 2] = c[b2 + 32 + 8 >> 2];
            c[a2 + 36 + 12 >> 2] = c[b2 + 32 + 12 >> 2];
            c[a2 + 52 >> 2] = c[b2 + 48 >> 2];
            c[a2 + 52 + 4 >> 2] = c[b2 + 48 + 4 >> 2];
            c[a2 + 52 + 8 >> 2] = c[b2 + 48 + 8 >> 2];
            c[a2 + 52 + 12 >> 2] = c[b2 + 48 + 12 >> 2];
            return;
          }
          function AD(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            return ((c[b2 + 236 >> 2] & 2 | 0) == 0 ? 0 : b2) | 0;
          }
          function BD(a2) {
            a2 = a2 | 0;
            var b2 = 0, c2 = 0, d2 = 0, e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0;
            n2 = +g[a2 + 4 >> 2];
            h2 = +g[a2 + 420 >> 2];
            m2 = +g[a2 + 8 >> 2];
            e2 = +g[a2 + 424 >> 2];
            l2 = +g[a2 + 12 >> 2];
            c2 = +g[a2 + 428 >> 2];
            k2 = +g[a2 + 20 >> 2];
            j2 = +g[a2 + 24 >> 2];
            i2 = +g[a2 + 28 >> 2];
            f2 = +g[a2 + 36 >> 2];
            d2 = +g[a2 + 40 >> 2];
            b2 = +g[a2 + 44 >> 2];
            g[a2 + 288 >> 2] = n2 * h2 * n2 + m2 * e2 * m2 + l2 * c2 * l2;
            g[a2 + 292 >> 2] = n2 * h2 * k2 + m2 * e2 * j2 + l2 * c2 * i2;
            g[a2 + 296 >> 2] = n2 * h2 * f2 + m2 * e2 * d2 + l2 * c2 * b2;
            g[a2 + 300 >> 2] = 0;
            g[a2 + 304 >> 2] = h2 * k2 * n2 + e2 * j2 * m2 + c2 * i2 * l2;
            g[a2 + 308 >> 2] = h2 * k2 * k2 + e2 * j2 * j2 + c2 * i2 * i2;
            g[a2 + 312 >> 2] = h2 * k2 * f2 + e2 * j2 * d2 + c2 * i2 * b2;
            g[a2 + 316 >> 2] = 0;
            g[a2 + 320 >> 2] = h2 * f2 * n2 + e2 * d2 * m2 + c2 * b2 * l2;
            g[a2 + 324 >> 2] = h2 * f2 * k2 + e2 * d2 * j2 + c2 * b2 * i2;
            g[a2 + 328 >> 2] = h2 * f2 * f2 + e2 * d2 * d2 + c2 * b2 * b2;
            g[a2 + 332 >> 2] = 0;
            return;
          }
          function CD(a2) {
            a2 = a2 | 0;
            if (!a2)
              return;
            rG(a2);
            return;
          }
          function DD(a2) {
            a2 = a2 | 0;
            return + +g[a2 + 80 >> 2];
          }
          function ED(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            g[a2 + 80 >> 2] = b2;
            return;
          }
          function FD(a2) {
            a2 = a2 | 0;
            if (!a2)
              return;
            rb[c[(c[a2 >> 2] | 0) + 4 >> 2] & 255](a2);
            return;
          }
          function GD() {
            var b2 = 0;
            c[5637] = (c[5637] | 0) + 1;
            b2 = qG(223) | 0;
            if (!b2)
              b2 = 0;
            else {
              c[(b2 + 4 + 15 & -16) + -4 >> 2] = b2;
              b2 = b2 + 4 + 15 & -16;
            }
            c[b2 >> 2] = 7540;
            a[b2 + 20 >> 0] = 1;
            c[b2 + 16 >> 2] = 0;
            c[b2 + 8 >> 2] = 0;
            c[b2 + 12 >> 2] = 0;
            a[b2 + 40 >> 0] = 1;
            c[b2 + 36 >> 2] = 0;
            c[b2 + 28 >> 2] = 0;
            c[b2 + 32 >> 2] = 0;
            a[b2 + 60 >> 0] = 1;
            c[b2 + 56 >> 2] = 0;
            c[b2 + 48 >> 2] = 0;
            c[b2 + 52 >> 2] = 0;
            a[b2 + 80 >> 0] = 1;
            c[b2 + 76 >> 2] = 0;
            c[b2 + 68 >> 2] = 0;
            c[b2 + 72 >> 2] = 0;
            a[b2 + 100 >> 0] = 1;
            c[b2 + 96 >> 2] = 0;
            c[b2 + 88 >> 2] = 0;
            c[b2 + 92 >> 2] = 0;
            a[b2 + 120 >> 0] = 1;
            c[b2 + 116 >> 2] = 0;
            c[b2 + 108 >> 2] = 0;
            c[b2 + 112 >> 2] = 0;
            a[b2 + 140 >> 0] = 1;
            c[b2 + 136 >> 2] = 0;
            c[b2 + 128 >> 2] = 0;
            c[b2 + 132 >> 2] = 0;
            a[b2 + 160 >> 0] = 1;
            c[b2 + 156 >> 2] = 0;
            c[b2 + 148 >> 2] = 0;
            c[b2 + 152 >> 2] = 0;
            a[b2 + 180 >> 0] = 1;
            c[b2 + 176 >> 2] = 0;
            c[b2 + 168 >> 2] = 0;
            c[b2 + 172 >> 2] = 0;
            c[b2 + 192 >> 2] = 13;
            c[b2 + 196 >> 2] = 14;
            c[b2 + 200 >> 2] = 0;
            return b2 | 0;
          }
          function HD(a2) {
            a2 = a2 | 0;
            if (!a2)
              return;
            rb[c[(c[a2 >> 2] | 0) + 4 >> 2] & 255](a2);
            return;
          }
          function ID(b2, d2, e2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0;
            h2 = i;
            i = i + 16 | 0;
            c[5637] = (c[5637] | 0) + 1;
            f2 = qG(1147) | 0;
            if (!f2)
              f2 = 0;
            else {
              c[(f2 + 4 + 15 & -16) + -4 >> 2] = f2;
              f2 = f2 + 4 + 15 & -16;
            }
            if (!(a[19880] | 0)) {
              a[19880] = 1;
              c[h2 >> 2] = 0;
              c[h2 + 4 >> 2] = 0;
              c[h2 + 8 >> 2] = 0;
              c[h2 + 12 >> 2] = 0;
              Cr(21260, 0, 0, 0, h2);
            }
            c[5366] = c[5366] | 1;
            g[5407] = 0;
            z2 = +g[5417] * 0;
            F2 = +g[5418] * 0;
            g[5412] = +g[5416] * 0;
            g[5413] = z2;
            g[5414] = F2;
            g[5415] = 0;
            c[5420] = 0;
            c[5421] = 0;
            c[5422] = 0;
            c[5423] = 0;
            F2 = +g[5409] * 0;
            z2 = +g[5410] * 0;
            g[5461] = +g[5408] * 0;
            g[5462] = F2;
            g[5463] = z2;
            g[5464] = 0;
            c[f2 + 4 >> 2] = 7;
            c[f2 + 8 >> 2] = -1;
            c[f2 + 12 >> 2] = -1;
            g[f2 + 16 >> 2] = 34028234663852886e22;
            a[f2 + 20 >> 0] = 1;
            a[f2 + 21 >> 0] = 0;
            c[f2 + 24 >> 2] = -1;
            k2 = f2 + 28 | 0;
            c[k2 >> 2] = 21260;
            j2 = f2 + 32 | 0;
            c[j2 >> 2] = b2;
            g[f2 + 36 >> 2] = 0;
            g[f2 + 40 >> 2] = 0.30000001192092896;
            c[f2 + 44 >> 2] = 0;
            c[f2 >> 2] = 7600;
            a[f2 + 48 >> 0] = 0;
            L2 = f2 + 116 | 0;
            c[L2 >> 2] = c[d2 >> 2];
            c[L2 + 4 >> 2] = c[d2 + 4 >> 2];
            c[L2 + 8 >> 2] = c[d2 + 8 >> 2];
            c[L2 + 12 >> 2] = c[d2 + 12 >> 2];
            K2 = f2 + 132 | 0;
            c[K2 >> 2] = c[d2 + 16 >> 2];
            c[K2 + 4 >> 2] = c[d2 + 16 + 4 >> 2];
            c[K2 + 8 >> 2] = c[d2 + 16 + 8 >> 2];
            c[K2 + 12 >> 2] = c[d2 + 16 + 12 >> 2];
            J2 = f2 + 148 | 0;
            c[J2 >> 2] = c[d2 + 32 >> 2];
            c[J2 + 4 >> 2] = c[d2 + 32 + 4 >> 2];
            c[J2 + 8 >> 2] = c[d2 + 32 + 8 >> 2];
            c[J2 + 12 >> 2] = c[d2 + 32 + 12 >> 2];
            I2 = f2 + 164 | 0;
            c[I2 >> 2] = c[d2 + 48 >> 2];
            c[I2 + 4 >> 2] = c[d2 + 48 + 4 >> 2];
            c[I2 + 8 >> 2] = c[d2 + 48 + 8 >> 2];
            c[I2 + 12 >> 2] = c[d2 + 48 + 12 >> 2];
            a[f2 + 180 >> 0] = e2 & 1;
            z2 = +g[L2 >> 2];
            F2 = +g[b2 + 4 >> 2];
            y2 = +g[K2 >> 2];
            E2 = +g[b2 + 8 >> 2];
            x2 = +g[J2 >> 2];
            D2 = +g[b2 + 12 >> 2];
            w2 = +g[f2 + 120 >> 2];
            v2 = +g[f2 + 136 >> 2];
            u2 = +g[f2 + 152 >> 2];
            t2 = +g[f2 + 124 >> 2];
            r2 = +g[f2 + 140 >> 2];
            p2 = +g[f2 + 156 >> 2];
            C2 = +g[b2 + 20 >> 2];
            B2 = +g[b2 + 24 >> 2];
            A2 = +g[b2 + 28 >> 2];
            s2 = +g[b2 + 36 >> 2];
            q2 = +g[b2 + 40 >> 2];
            o2 = +g[b2 + 44 >> 2];
            H2 = +g[I2 >> 2];
            G2 = +g[f2 + 168 >> 2];
            l2 = +g[f2 + 172 >> 2];
            n2 = +g[b2 + 52 >> 2] + (F2 * H2 + E2 * G2 + D2 * l2);
            m2 = C2 * H2 + B2 * G2 + A2 * l2 + +g[b2 + 56 >> 2];
            l2 = s2 * H2 + q2 * G2 + o2 * l2 + +g[b2 + 60 >> 2];
            g[f2 + 52 >> 2] = z2 * F2 + y2 * E2 + x2 * D2;
            g[f2 + 56 >> 2] = F2 * w2 + E2 * v2 + D2 * u2;
            g[f2 + 60 >> 2] = F2 * t2 + E2 * r2 + D2 * p2;
            g[f2 + 64 >> 2] = 0;
            g[f2 + 68 >> 2] = z2 * C2 + y2 * B2 + x2 * A2;
            g[f2 + 72 >> 2] = w2 * C2 + v2 * B2 + u2 * A2;
            g[f2 + 76 >> 2] = t2 * C2 + r2 * B2 + p2 * A2;
            g[f2 + 80 >> 2] = 0;
            g[f2 + 84 >> 2] = z2 * s2 + y2 * q2 + x2 * o2;
            g[f2 + 88 >> 2] = w2 * s2 + v2 * q2 + u2 * o2;
            g[f2 + 92 >> 2] = t2 * s2 + r2 * q2 + p2 * o2;
            g[f2 + 96 >> 2] = 0;
            g[f2 + 100 >> 2] = n2;
            g[f2 + 104 >> 2] = m2;
            g[f2 + 108 >> 2] = l2;
            g[f2 + 112 >> 2] = 0;
            g[f2 + 184 >> 2] = 1;
            g[f2 + 188 >> 2] = -1;
            g[f2 + 192 >> 2] = 0;
            g[f2 + 196 >> 2] = 0;
            g[f2 + 200 >> 2] = 1;
            g[f2 + 204 >> 2] = 0.699999988079071;
            g[f2 + 208 >> 2] = 0;
            g[f2 + 212 >> 2] = 0;
            g[f2 + 216 >> 2] = 1;
            g[f2 + 220 >> 2] = 0.699999988079071;
            g[f2 + 224 >> 2] = 0;
            g[f2 + 228 >> 2] = 0;
            g[f2 + 264 >> 2] = 1;
            g[f2 + 268 >> 2] = 0.699999988079071;
            g[f2 + 272 >> 2] = 1;
            g[f2 + 276 >> 2] = 0;
            g[f2 + 280 >> 2] = 1;
            g[f2 + 284 >> 2] = 0.699999988079071;
            g[f2 + 288 >> 2] = 1;
            g[f2 + 292 >> 2] = 0;
            g[f2 + 232 >> 2] = 1;
            g[f2 + 236 >> 2] = 0.699999988079071;
            g[f2 + 240 >> 2] = 1;
            g[f2 + 244 >> 2] = 0;
            g[f2 + 248 >> 2] = 1;
            g[f2 + 252 >> 2] = 0.699999988079071;
            g[f2 + 256 >> 2] = 1;
            g[f2 + 260 >> 2] = 0;
            a[f2 + 1096 >> 0] = 0;
            e2 = f2 + 1100 | 0;
            g[f2 + 1116 >> 2] = 0;
            g[f2 + 1120 >> 2] = 0;
            g[f2 + 1124 >> 2] = 0;
            c[f2 + 300 >> 2] = 0;
            c[e2 >> 2] = 0;
            c[e2 + 4 >> 2] = 0;
            c[e2 + 8 >> 2] = 0;
            a[e2 + 12 >> 0] = 0;
            a[f2 + 49 >> 0] = 1;
            rq(f2, (c[k2 >> 2] | 0) + 4 | 0, (c[j2 >> 2] | 0) + 4 | 0);
            i = h2;
            return f2 | 0;
          }
          function JD(b2, d2, e2, f2, h2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            h2 = h2 | 0;
            var i2 = 0, j2 = 0;
            c[5637] = (c[5637] | 0) + 1;
            i2 = qG(1147) | 0;
            if (!i2)
              i2 = 0;
            else {
              c[(i2 + 4 + 15 & -16) + -4 >> 2] = i2;
              i2 = i2 + 4 + 15 & -16;
            }
            c[i2 + 4 >> 2] = 7;
            c[i2 + 8 >> 2] = -1;
            c[i2 + 12 >> 2] = -1;
            g[i2 + 16 >> 2] = 34028234663852886e22;
            a[i2 + 20 >> 0] = 1;
            a[i2 + 21 >> 0] = 0;
            c[i2 + 24 >> 2] = -1;
            j2 = i2 + 28 | 0;
            c[j2 >> 2] = b2;
            b2 = i2 + 32 | 0;
            c[b2 >> 2] = d2;
            g[i2 + 36 >> 2] = 0;
            g[i2 + 40 >> 2] = 0.30000001192092896;
            c[i2 + 44 >> 2] = 0;
            c[i2 >> 2] = 7600;
            a[i2 + 48 >> 0] = 0;
            d2 = i2 + 52 | 0;
            c[d2 >> 2] = c[e2 >> 2];
            c[d2 + 4 >> 2] = c[e2 + 4 >> 2];
            c[d2 + 8 >> 2] = c[e2 + 8 >> 2];
            c[d2 + 12 >> 2] = c[e2 + 12 >> 2];
            d2 = i2 + 68 | 0;
            c[d2 >> 2] = c[e2 + 16 >> 2];
            c[d2 + 4 >> 2] = c[e2 + 16 + 4 >> 2];
            c[d2 + 8 >> 2] = c[e2 + 16 + 8 >> 2];
            c[d2 + 12 >> 2] = c[e2 + 16 + 12 >> 2];
            d2 = i2 + 84 | 0;
            c[d2 >> 2] = c[e2 + 32 >> 2];
            c[d2 + 4 >> 2] = c[e2 + 32 + 4 >> 2];
            c[d2 + 8 >> 2] = c[e2 + 32 + 8 >> 2];
            c[d2 + 12 >> 2] = c[e2 + 32 + 12 >> 2];
            d2 = i2 + 100 | 0;
            c[d2 >> 2] = c[e2 + 48 >> 2];
            c[d2 + 4 >> 2] = c[e2 + 48 + 4 >> 2];
            c[d2 + 8 >> 2] = c[e2 + 48 + 8 >> 2];
            c[d2 + 12 >> 2] = c[e2 + 48 + 12 >> 2];
            e2 = i2 + 116 | 0;
            c[e2 >> 2] = c[f2 >> 2];
            c[e2 + 4 >> 2] = c[f2 + 4 >> 2];
            c[e2 + 8 >> 2] = c[f2 + 8 >> 2];
            c[e2 + 12 >> 2] = c[f2 + 12 >> 2];
            e2 = i2 + 132 | 0;
            c[e2 >> 2] = c[f2 + 16 >> 2];
            c[e2 + 4 >> 2] = c[f2 + 16 + 4 >> 2];
            c[e2 + 8 >> 2] = c[f2 + 16 + 8 >> 2];
            c[e2 + 12 >> 2] = c[f2 + 16 + 12 >> 2];
            e2 = i2 + 148 | 0;
            c[e2 >> 2] = c[f2 + 32 >> 2];
            c[e2 + 4 >> 2] = c[f2 + 32 + 4 >> 2];
            c[e2 + 8 >> 2] = c[f2 + 32 + 8 >> 2];
            c[e2 + 12 >> 2] = c[f2 + 32 + 12 >> 2];
            e2 = i2 + 164 | 0;
            c[e2 >> 2] = c[f2 + 48 >> 2];
            c[e2 + 4 >> 2] = c[f2 + 48 + 4 >> 2];
            c[e2 + 8 >> 2] = c[f2 + 48 + 8 >> 2];
            c[e2 + 12 >> 2] = c[f2 + 48 + 12 >> 2];
            a[i2 + 180 >> 0] = h2 & 1;
            g[i2 + 184 >> 2] = 1;
            g[i2 + 188 >> 2] = -1;
            g[i2 + 192 >> 2] = 0;
            g[i2 + 196 >> 2] = 0;
            g[i2 + 200 >> 2] = 1;
            g[i2 + 204 >> 2] = 0.699999988079071;
            g[i2 + 208 >> 2] = 0;
            g[i2 + 212 >> 2] = 0;
            g[i2 + 216 >> 2] = 1;
            g[i2 + 220 >> 2] = 0.699999988079071;
            g[i2 + 224 >> 2] = 0;
            g[i2 + 228 >> 2] = 0;
            g[i2 + 264 >> 2] = 1;
            g[i2 + 268 >> 2] = 0.699999988079071;
            g[i2 + 272 >> 2] = 1;
            g[i2 + 276 >> 2] = 0;
            g[i2 + 280 >> 2] = 1;
            g[i2 + 284 >> 2] = 0.699999988079071;
            g[i2 + 288 >> 2] = 1;
            g[i2 + 292 >> 2] = 0;
            g[i2 + 232 >> 2] = 1;
            g[i2 + 236 >> 2] = 0.699999988079071;
            g[i2 + 240 >> 2] = 1;
            g[i2 + 244 >> 2] = 0;
            g[i2 + 248 >> 2] = 1;
            g[i2 + 252 >> 2] = 0.699999988079071;
            g[i2 + 256 >> 2] = 1;
            g[i2 + 260 >> 2] = 0;
            a[i2 + 1096 >> 0] = 0;
            h2 = i2 + 1100 | 0;
            g[i2 + 1116 >> 2] = 0;
            g[i2 + 1120 >> 2] = 0;
            g[i2 + 1124 >> 2] = 0;
            c[i2 + 300 >> 2] = 0;
            c[h2 >> 2] = 0;
            c[h2 + 4 >> 2] = 0;
            c[h2 + 8 >> 2] = 0;
            a[h2 + 12 >> 0] = 0;
            a[i2 + 49 >> 0] = 1;
            rq(i2, (c[j2 >> 2] | 0) + 4 | 0, (c[b2 >> 2] | 0) + 4 | 0);
            return i2 | 0;
          }
          function KD(b2, c2) {
            b2 = b2 | 0;
            c2 = c2 | 0;
            a[b2 + 21 >> 0] = c2 & 1;
            return;
          }
          function LD(a2) {
            a2 = a2 | 0;
            return + +g[a2 + 16 >> 2];
          }
          function MD(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            g[a2 + 16 >> 2] = b2;
            return;
          }
          function ND(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            b2 = +oG(b2);
            if (!(b2 < -3.1415927410125732)) {
              if (b2 > 3.1415927410125732)
                b2 = b2 + -6.2831854820251465;
            } else
              b2 = b2 + 6.2831854820251465;
            g[a2 + 192 >> 2] = b2;
            return;
          }
          function OD(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            g[a2 + 184 >> 2] = b2;
            return;
          }
          function PD(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            b2 = +oG(b2);
            if (!(b2 < -3.1415927410125732)) {
              if (b2 > 3.1415927410125732)
                b2 = b2 + -6.2831854820251465;
            } else
              b2 = b2 + 6.2831854820251465;
            g[a2 + 196 >> 2] = b2;
            return;
          }
          function QD(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            g[a2 + 188 >> 2] = b2;
            return;
          }
          function RD(a2) {
            a2 = a2 | 0;
            if (!a2)
              return;
            rb[c[(c[a2 >> 2] | 0) + 4 >> 2] & 255](a2);
            return;
          }
          function SD(a2) {
            a2 = +a2;
            var b2 = 0;
            c[5637] = (c[5637] | 0) + 1;
            b2 = qG(75) | 0;
            if (!b2)
              b2 = 0;
            else {
              c[(b2 + 4 + 15 & -16) + -4 >> 2] = b2;
              b2 = b2 + 4 + 15 & -16;
            }
            c[b2 + 8 >> 2] = 0;
            c[b2 + 12 >> 2] = -1;
            c[b2 + 16 >> 2] = 1065353216;
            c[b2 + 20 >> 2] = 1065353216;
            c[b2 + 24 >> 2] = 1065353216;
            g[b2 + 28 >> 2] = 0;
            c[b2 >> 2] = 6380;
            c[b2 + 4 >> 2] = 8;
            g[b2 + 32 >> 2] = a2;
            g[b2 + 48 >> 2] = a2;
            return b2 | 0;
          }
          function TD(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = +b2;
            d2 = d2 | 0;
            Ab[c[(c[a2 >> 2] | 0) + 32 >> 2] & 15](a2, b2, d2);
            return;
          }
          function UD(a2) {
            a2 = a2 | 0;
            return + +Hb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
          }
          function VD(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            tb[c[(c[a2 >> 2] | 0) + 24 >> 2] & 127](a2, b2);
            return;
          }
          function WD(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            qb[c[(c[a2 >> 2] | 0) + 44 >> 2] & 31](a2, b2);
            return;
          }
          function XD(a2) {
            a2 = a2 | 0;
            if (!a2)
              return;
            rb[c[(c[a2 >> 2] | 0) + 4 >> 2] & 255](a2);
            return;
          }
          function YD(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            var d2 = 0, e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0;
            c[5637] = (c[5637] | 0) + 1;
            d2 = qG(107) | 0;
            if (!d2)
              d2 = 0;
            else {
              c[(d2 + 4 + 15 & -16) + -4 >> 2] = d2;
              d2 = d2 + 4 + 15 & -16;
            }
            e2 = d2 + 4 | 0;
            c[e2 >> 2] = 35;
            c[d2 + 8 >> 2] = 0;
            c[d2 + 12 >> 2] = -1;
            g[d2 + 16 >> 2] = 0;
            c[d2 >> 2] = 6480;
            j2 = +g[a2 >> 2];
            i2 = +g[a2 + 4 >> 2];
            h2 = +g[a2 + 8 >> 2];
            a2 = c[a2 + 12 >> 2] | 0;
            f2 = 1 / +O(+(j2 * j2 + i2 * i2 + h2 * h2));
            g[d2 + 52 >> 2] = j2 * f2;
            g[d2 + 56 >> 2] = i2 * f2;
            g[d2 + 60 >> 2] = h2 * f2;
            c[d2 + 64 >> 2] = a2;
            g[d2 + 68 >> 2] = b2;
            c[d2 + 72 >> 2] = 1065353216;
            c[d2 + 76 >> 2] = 1065353216;
            c[d2 + 80 >> 2] = 1065353216;
            g[d2 + 84 >> 2] = 0;
            c[e2 >> 2] = 28;
            return d2 | 0;
          }
          function ZD(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = +b2;
            d2 = d2 | 0;
            Ab[c[(c[a2 >> 2] | 0) + 32 >> 2] & 15](a2, b2, d2);
            return;
          }
          function _D(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            tb[c[(c[a2 >> 2] | 0) + 24 >> 2] & 127](a2, b2);
            return;
          }
          function $D(a2) {
            a2 = a2 | 0;
            if (!a2)
              return;
            rb[c[(c[a2 >> 2] | 0) + 4 >> 2] & 255](a2);
            return;
          }
          function aE(a2) {
            a2 = a2 | 0;
            if (!a2)
              return;
            rG(a2);
            return;
          }
          function bE() {
            var a2 = 0, b2 = 0;
            while (1) {
              a2 = qG(64) | 0;
              if (a2 | 0) {
                b2 = 6;
                break;
              }
              a2 = c[5831] | 0;
              c[5831] = a2 + 0;
              if (!a2) {
                b2 = 5;
                break;
              }
              _b[a2 & 3]();
            }
            if ((b2 | 0) == 5) {
              b2 = Va(4) | 0;
              c[b2 >> 2] = 8308;
              hb(b2 | 0, 2416, 215);
            } else if ((b2 | 0) == 6)
              return a2 | 0;
            return 0;
          }
          function cE(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0;
            while (1) {
              d2 = qG(64) | 0;
              if (d2 | 0) {
                e2 = 6;
                break;
              }
              d2 = c[5831] | 0;
              c[5831] = d2 + 0;
              if (!d2) {
                e2 = 5;
                break;
              }
              _b[d2 & 3]();
            }
            if ((e2 | 0) == 5) {
              b2 = Va(4) | 0;
              c[b2 >> 2] = 8308;
              hb(b2 | 0, 2416, 215);
            } else if ((e2 | 0) == 6) {
              j2 = +g[a2 >> 2];
              h2 = +g[a2 + 4 >> 2];
              m2 = +g[a2 + 8 >> 2];
              k2 = +g[a2 + 12 >> 2];
              i2 = j2 * (2 / (j2 * j2 + h2 * h2 + m2 * m2 + k2 * k2));
              f2 = h2 * (2 / (j2 * j2 + h2 * h2 + m2 * m2 + k2 * k2));
              l2 = m2 * (2 / (j2 * j2 + h2 * h2 + m2 * m2 + k2 * k2));
              g[d2 >> 2] = 1 - (h2 * f2 + m2 * l2);
              g[d2 + 4 >> 2] = j2 * f2 - k2 * l2;
              g[d2 + 8 >> 2] = j2 * l2 + k2 * f2;
              g[d2 + 12 >> 2] = 0;
              g[d2 + 16 >> 2] = j2 * f2 + k2 * l2;
              g[d2 + 20 >> 2] = 1 - (j2 * i2 + m2 * l2);
              g[d2 + 24 >> 2] = h2 * l2 - k2 * i2;
              g[d2 + 28 >> 2] = 0;
              g[d2 + 32 >> 2] = j2 * l2 - k2 * f2;
              g[d2 + 36 >> 2] = h2 * l2 + k2 * i2;
              g[d2 + 40 >> 2] = 1 - (j2 * i2 + h2 * f2);
              g[d2 + 44 >> 2] = 0;
              c[d2 + 48 >> 2] = c[b2 >> 2];
              c[d2 + 48 + 4 >> 2] = c[b2 + 4 >> 2];
              c[d2 + 48 + 8 >> 2] = c[b2 + 8 >> 2];
              c[d2 + 48 + 12 >> 2] = c[b2 + 12 >> 2];
              return d2 | 0;
            }
            return 0;
          }
          function dE(a2) {
            a2 = a2 | 0;
            return a2 | 0;
          }
          function eE(a2) {
            a2 = a2 | 0;
            return a2 + 48 | 0;
          }
          function fE(b2) {
            b2 = b2 | 0;
            var d2 = 0;
            d2 = i;
            i = i + 16 | 0;
            if (!(a[19928] | 0))
              a[19928] = 1;
            _f(b2, d2);
            c[5700] = c[d2 >> 2];
            c[5701] = c[d2 + 4 >> 2];
            c[5702] = c[d2 + 8 >> 2];
            c[5703] = c[d2 + 12 >> 2];
            i = d2;
            return 22800;
          }
          function gE(a2) {
            a2 = a2 | 0;
            c[a2 >> 2] = 1065353216;
            c[a2 + 4 >> 2] = 0;
            c[a2 + 4 + 4 >> 2] = 0;
            c[a2 + 4 + 8 >> 2] = 0;
            c[a2 + 4 + 12 >> 2] = 0;
            c[a2 + 20 >> 2] = 1065353216;
            c[a2 + 24 >> 2] = 0;
            c[a2 + 24 + 4 >> 2] = 0;
            c[a2 + 24 + 8 >> 2] = 0;
            c[a2 + 24 + 12 >> 2] = 0;
            c[a2 + 40 >> 2] = 1065353216;
            c[a2 + 44 >> 2] = 0;
            c[a2 + 44 + 4 >> 2] = 0;
            c[a2 + 44 + 8 >> 2] = 0;
            c[a2 + 44 + 12 >> 2] = 0;
            c[a2 + 44 + 16 >> 2] = 0;
            return;
          }
          function hE(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c[a2 + 48 >> 2] = c[b2 >> 2];
            c[a2 + 48 + 4 >> 2] = c[b2 + 4 >> 2];
            c[a2 + 48 + 8 >> 2] = c[b2 + 8 >> 2];
            c[a2 + 48 + 12 >> 2] = c[b2 + 12 >> 2];
            return;
          }
          function iE(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var c2 = 0, d2 = 0, e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0;
            f2 = +g[b2 >> 2];
            d2 = +g[b2 + 4 >> 2];
            j2 = +g[b2 + 8 >> 2];
            h2 = +g[b2 + 12 >> 2];
            e2 = f2 * (2 / (f2 * f2 + d2 * d2 + j2 * j2 + h2 * h2));
            c2 = d2 * (2 / (f2 * f2 + d2 * d2 + j2 * j2 + h2 * h2));
            i2 = j2 * (2 / (f2 * f2 + d2 * d2 + j2 * j2 + h2 * h2));
            g[a2 >> 2] = 1 - (d2 * c2 + j2 * i2);
            g[a2 + 4 >> 2] = f2 * c2 - h2 * i2;
            g[a2 + 8 >> 2] = f2 * i2 + h2 * c2;
            g[a2 + 12 >> 2] = 0;
            g[a2 + 16 >> 2] = f2 * c2 + h2 * i2;
            g[a2 + 20 >> 2] = 1 - (f2 * e2 + j2 * i2);
            g[a2 + 24 >> 2] = d2 * i2 - h2 * e2;
            g[a2 + 28 >> 2] = 0;
            g[a2 + 32 >> 2] = f2 * i2 - h2 * c2;
            g[a2 + 36 >> 2] = d2 * i2 + h2 * e2;
            g[a2 + 40 >> 2] = 1 - (f2 * e2 + d2 * c2);
            g[a2 + 44 >> 2] = 0;
            return;
          }
          function jE(a2) {
            a2 = a2 | 0;
            if (!a2)
              return;
            rG(a2);
            return;
          }
          function kE(a2) {
            a2 = a2 | 0;
            return a2 + 260 | 0;
          }
          function lE(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c[a2 + 260 >> 2] = c[b2 >> 2];
            c[a2 + 260 + 4 >> 2] = c[b2 + 4 >> 2];
            c[a2 + 260 + 8 >> 2] = c[b2 + 8 >> 2];
            c[a2 + 260 + 12 >> 2] = c[b2 + 12 >> 2];
            return;
          }
          function mE(a2) {
            a2 = a2 | 0;
            if (!a2)
              return;
            rb[c[(c[a2 >> 2] | 0) + 4 >> 2] & 255](a2);
            return;
          }
          function nE(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = +b2;
            d2 = d2 | 0;
            Ab[c[(c[a2 >> 2] | 0) + 32 >> 2] & 15](a2, b2, d2);
            return;
          }
          function oE(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            tb[c[(c[a2 >> 2] | 0) + 24 >> 2] & 127](a2, b2);
            return;
          }
          function pE(a2) {
            a2 = a2 | 0;
            if (!a2)
              return;
            rb[c[(c[a2 >> 2] | 0) + 4 >> 2] & 255](a2);
            return;
          }
          function qE(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0;
            f2 = c[a2 + 32 >> 2] | 0;
            c[f2 >> 2] = (c[f2 >> 2] | 0) + 1;
            an(a2, bn(a2, b2, 0) | 0);
            an(a2, bn(a2, d2, 0) | 0);
            an(a2, bn(a2, e2, 0) | 0);
            return;
          }
          function rE(a2, b2, d2, e2, f2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            var g2 = 0;
            g2 = c[a2 + 32 >> 2] | 0;
            c[g2 >> 2] = (c[g2 >> 2] | 0) + 1;
            an(a2, bn(a2, b2, f2) | 0);
            an(a2, bn(a2, d2, f2) | 0);
            an(a2, bn(a2, e2, f2) | 0);
            return;
          }
          function sE() {
            var a2 = 0;
            c[5637] = (c[5637] | 0) + 1;
            a2 = qG(191) | 0;
            if (!a2)
              a2 = 0;
            else {
              c[(a2 + 4 + 15 & -16) + -4 >> 2] = a2;
              a2 = a2 + 4 + 15 & -16;
            }
            $m(a2, 1, 1);
            return a2 | 0;
          }
          function tE(a2) {
            a2 = a2 | 0;
            var b2 = 0;
            c[5637] = (c[5637] | 0) + 1;
            b2 = qG(191) | 0;
            if (!b2)
              b2 = 0;
            else {
              c[(b2 + 4 + 15 & -16) + -4 >> 2] = b2;
              b2 = b2 + 4 + 15 & -16;
            }
            $m(b2, a2, 1);
            return b2 | 0;
          }
          function uE(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0;
            c[5637] = (c[5637] | 0) + 1;
            d2 = qG(191) | 0;
            if (!d2)
              d2 = 0;
            else {
              c[(d2 + 4 + 15 & -16) + -4 >> 2] = d2;
              d2 = d2 + 4 + 15 & -16;
            }
            $m(d2, a2, b2);
            return d2 | 0;
          }
          function vE(a2) {
            a2 = a2 | 0;
            if (!a2)
              return;
            rb[c[(c[a2 >> 2] | 0) + 4 >> 2] & 255](a2);
            return;
          }
          function wE(b2, c2) {
            b2 = b2 | 0;
            c2 = c2 | 0;
            a[b2 + 21 >> 0] = c2 & 1;
            return;
          }
          function xE(a2) {
            a2 = a2 | 0;
            return + +g[a2 + 16 >> 2];
          }
          function yE(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            g[a2 + 16 >> 2] = b2;
            return;
          }
          function zE(a2) {
            a2 = a2 | 0;
            if (!a2)
              return;
            c[5638] = (c[5638] | 0) + 1;
            rG(c[a2 + -4 >> 2] | 0);
            return;
          }
          function AE() {
            var a2 = 0;
            c[5637] = (c[5637] | 0) + 1;
            a2 = qG(35) | 0;
            if (!a2) {
              a2 = 0;
              return a2 | 0;
            }
            c[(a2 + 4 + 15 & -16) + -4 >> 2] = a2;
            a2 = a2 + 4 + 15 & -16;
            return a2 | 0;
          }
          function BE(a2, b2, d2) {
            a2 = +a2;
            b2 = +b2;
            d2 = +d2;
            var e2 = 0;
            c[5637] = (c[5637] | 0) + 1;
            e2 = qG(35) | 0;
            if (!e2)
              e2 = 0;
            else {
              c[(e2 + 4 + 15 & -16) + -4 >> 2] = e2;
              e2 = e2 + 4 + 15 & -16;
            }
            g[e2 >> 2] = a2;
            g[e2 + 4 >> 2] = b2;
            g[e2 + 8 >> 2] = d2;
            g[e2 + 12 >> 2] = 0;
            return e2 | 0;
          }
          function CE(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            return +(+g[a2 >> 2] * +g[b2 >> 2] + +g[a2 + 4 >> 2] * +g[b2 + 4 >> 2] + +g[a2 + 8 >> 2] * +g[b2 + 8 >> 2]);
          }
          function DE(a2) {
            a2 = a2 | 0;
            var b2 = 0, c2 = 0, d2 = 0;
            d2 = +g[a2 >> 2];
            c2 = +g[a2 + 4 >> 2];
            b2 = +g[a2 + 8 >> 2];
            return + +O(+(d2 * d2 + c2 * c2 + b2 * b2));
          }
          function EE(a2) {
            a2 = a2 | 0;
            var b2 = 0, c2 = 0, d2 = 0, e2 = 0;
            e2 = +g[a2 >> 2];
            d2 = +g[a2 + 4 >> 2];
            c2 = +g[a2 + 8 >> 2];
            b2 = 1 / +O(+(e2 * e2 + d2 * d2 + c2 * c2));
            g[a2 >> 2] = e2 * b2;
            g[a2 + 4 >> 2] = d2 * b2;
            g[a2 + 8 >> 2] = c2 * b2;
            return;
          }
          function FE(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            g[a2 >> 2] = +g[b2 >> 2] + +g[a2 >> 2];
            g[a2 + 4 >> 2] = +g[b2 + 4 >> 2] + +g[a2 + 4 >> 2];
            g[a2 + 8 >> 2] = +g[b2 + 8 >> 2] + +g[a2 + 8 >> 2];
            return a2 | 0;
          }
          function GE(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            g[a2 >> 2] = +g[a2 >> 2] * b2;
            g[a2 + 4 >> 2] = +g[a2 + 4 >> 2] * b2;
            g[a2 + 8 >> 2] = +g[a2 + 8 >> 2] * b2;
            return a2 | 0;
          }
          function HE(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            g[a2 >> 2] = +g[a2 >> 2] - +g[b2 >> 2];
            g[a2 + 4 >> 2] = +g[a2 + 4 >> 2] - +g[b2 + 4 >> 2];
            g[a2 + 8 >> 2] = +g[a2 + 8 >> 2] - +g[b2 + 8 >> 2];
            return a2 | 0;
          }
          function IE(a2, b2, c2, d2) {
            a2 = a2 | 0;
            b2 = +b2;
            c2 = +c2;
            d2 = +d2;
            g[a2 >> 2] = b2;
            g[a2 + 4 >> 2] = c2;
            g[a2 + 8 >> 2] = d2;
            g[a2 + 12 >> 2] = 0;
            return;
          }
          function JE(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            g[a2 >> 2] = b2;
            return;
          }
          function KE(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            g[a2 + 4 >> 2] = b2;
            return;
          }
          function LE(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            g[a2 + 8 >> 2] = b2;
            return;
          }
          function ME(a2) {
            a2 = a2 | 0;
            return + +g[a2 >> 2];
          }
          function NE(a2) {
            a2 = a2 | 0;
            return + +g[a2 + 4 >> 2];
          }
          function OE(a2) {
            a2 = a2 | 0;
            return + +g[a2 + 8 >> 2];
          }
          function PE(a2) {
            a2 = a2 | 0;
            if (!a2)
              return;
            c[5638] = (c[5638] | 0) + 1;
            rG(c[a2 + -4 >> 2] | 0);
            return;
          }
          function QE() {
            var a2 = 0;
            c[5637] = (c[5637] | 0) + 1;
            a2 = qG(35) | 0;
            if (!a2) {
              a2 = 0;
              return a2 | 0;
            }
            c[(a2 + 4 + 15 & -16) + -4 >> 2] = a2;
            a2 = a2 + 4 + 15 & -16;
            return a2 | 0;
          }
          function RE(a2, b2, d2, e2) {
            a2 = +a2;
            b2 = +b2;
            d2 = +d2;
            e2 = +e2;
            var f2 = 0;
            c[5637] = (c[5637] | 0) + 1;
            f2 = qG(35) | 0;
            if (!f2)
              f2 = 0;
            else {
              c[(f2 + 4 + 15 & -16) + -4 >> 2] = f2;
              f2 = f2 + 4 + 15 & -16;
            }
            g[f2 >> 2] = a2;
            g[f2 + 4 >> 2] = b2;
            g[f2 + 8 >> 2] = d2;
            g[f2 + 12 >> 2] = e2;
            return f2 | 0;
          }
          function SE(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            return +(+g[a2 >> 2] * +g[b2 >> 2] + +g[a2 + 4 >> 2] * +g[b2 + 4 >> 2] + +g[a2 + 8 >> 2] * +g[b2 + 8 >> 2]);
          }
          function TE(a2) {
            a2 = a2 | 0;
            var b2 = 0, c2 = 0, d2 = 0;
            d2 = +g[a2 >> 2];
            c2 = +g[a2 + 4 >> 2];
            b2 = +g[a2 + 8 >> 2];
            return + +O(+(d2 * d2 + c2 * c2 + b2 * b2));
          }
          function UE(a2) {
            a2 = a2 | 0;
            var b2 = 0, c2 = 0, d2 = 0, e2 = 0;
            e2 = +g[a2 >> 2];
            d2 = +g[a2 + 4 >> 2];
            c2 = +g[a2 + 8 >> 2];
            b2 = 1 / +O(+(e2 * e2 + d2 * d2 + c2 * c2));
            g[a2 >> 2] = e2 * b2;
            g[a2 + 4 >> 2] = d2 * b2;
            g[a2 + 8 >> 2] = c2 * b2;
            return;
          }
          function VE(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            g[a2 >> 2] = +g[b2 >> 2] + +g[a2 >> 2];
            g[a2 + 4 >> 2] = +g[b2 + 4 >> 2] + +g[a2 + 4 >> 2];
            g[a2 + 8 >> 2] = +g[b2 + 8 >> 2] + +g[a2 + 8 >> 2];
            return a2 | 0;
          }
          function WE(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            g[a2 >> 2] = +g[a2 >> 2] * b2;
            g[a2 + 4 >> 2] = +g[a2 + 4 >> 2] * b2;
            g[a2 + 8 >> 2] = +g[a2 + 8 >> 2] * b2;
            return a2 | 0;
          }
          function XE(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            g[a2 >> 2] = +g[a2 >> 2] - +g[b2 >> 2];
            g[a2 + 4 >> 2] = +g[a2 + 4 >> 2] - +g[b2 + 4 >> 2];
            g[a2 + 8 >> 2] = +g[a2 + 8 >> 2] - +g[b2 + 8 >> 2];
            return a2 | 0;
          }
          function YE(a2, b2, c2, d2, e2) {
            a2 = a2 | 0;
            b2 = +b2;
            c2 = +c2;
            d2 = +d2;
            e2 = +e2;
            g[a2 >> 2] = b2;
            g[a2 + 4 >> 2] = c2;
            g[a2 + 8 >> 2] = d2;
            g[a2 + 12 >> 2] = e2;
            return;
          }
          function ZE(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            g[a2 >> 2] = b2;
            return;
          }
          function _E(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            g[a2 + 4 >> 2] = b2;
            return;
          }
          function $E(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            g[a2 + 8 >> 2] = b2;
            return;
          }
          function aF(a2) {
            a2 = a2 | 0;
            return + +g[a2 + 12 >> 2];
          }
          function bF(a2) {
            a2 = a2 | 0;
            return + +g[a2 >> 2];
          }
          function cF(a2) {
            a2 = a2 | 0;
            return + +g[a2 + 4 >> 2];
          }
          function dF(a2) {
            a2 = a2 | 0;
            return + +g[a2 + 8 >> 2];
          }
          function eF(a2) {
            a2 = a2 | 0;
            if (!a2)
              return;
            rb[c[(c[a2 >> 2] | 0) + 4 >> 2] & 255](a2);
            return;
          }
          function fF() {
            var a2 = 0, b2 = 0;
            while (1) {
              a2 = qG(24) | 0;
              if (a2 | 0) {
                b2 = 6;
                break;
              }
              a2 = c[5831] | 0;
              c[5831] = a2 + 0;
              if (!a2) {
                b2 = 5;
                break;
              }
              _b[a2 & 3]();
            }
            if ((b2 | 0) == 5) {
              b2 = Va(4) | 0;
              c[b2 >> 2] = 8308;
              hb(b2 | 0, 2416, 215);
            } else if ((b2 | 0) == 6) {
              g[a2 >> 2] = 5.880000114440918;
              g[a2 + 4 >> 2] = 0.8299999833106995;
              g[a2 + 8 >> 2] = 0.8799999952316284;
              g[a2 + 12 >> 2] = 500;
              g[a2 + 16 >> 2] = 10.5;
              g[a2 + 20 >> 2] = 6e3;
              return a2 | 0;
            }
            return 0;
          }
          function gF(a2) {
            a2 = a2 | 0;
            return + +g[a2 + 16 >> 2];
          }
          function hF(a2) {
            a2 = a2 | 0;
            return + +g[a2 + 20 >> 2];
          }
          function iF(a2) {
            a2 = a2 | 0;
            return + +g[a2 + 12 >> 2];
          }
          function jF(a2) {
            a2 = a2 | 0;
            return + +g[a2 + 4 >> 2];
          }
          function kF(a2) {
            a2 = a2 | 0;
            return + +g[a2 + 8 >> 2];
          }
          function lF(a2) {
            a2 = a2 | 0;
            return + +g[a2 >> 2];
          }
          function mF(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            g[a2 + 16 >> 2] = b2;
            return;
          }
          function nF(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            g[a2 + 20 >> 2] = b2;
            return;
          }
          function oF(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            g[a2 + 12 >> 2] = b2;
            return;
          }
          function pF(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            g[a2 + 4 >> 2] = b2;
            return;
          }
          function qF(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            g[a2 + 8 >> 2] = b2;
            return;
          }
          function rF(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            g[a2 >> 2] = b2;
            return;
          }
          function sF(a2) {
            a2 = a2 | 0;
            if (!a2)
              return;
            rG(a2);
            return;
          }
          function tF(b2) {
            b2 = b2 | 0;
            return (a[b2 + 260 >> 0] | 0) != 0 | 0;
          }
          function uF(a2) {
            a2 = a2 | 0;
            return a2 + 156 | 0;
          }
          function vF(a2) {
            a2 = a2 | 0;
            return + +g[a2 + 252 >> 2];
          }
          function wF(a2) {
            a2 = a2 | 0;
            return + +g[a2 + 228 >> 2];
          }
          function xF(a2) {
            a2 = a2 | 0;
            return + +g[a2 + 248 >> 2];
          }
          function yF(a2) {
            a2 = a2 | 0;
            return + +g[a2 + 208 >> 2];
          }
          function zF(a2) {
            a2 = a2 | 0;
            return a2 | 0;
          }
          function AF(a2) {
            a2 = a2 | 0;
            return + +g[a2 + 244 >> 2];
          }
          function BF(a2) {
            a2 = a2 | 0;
            return + +g[a2 + 232 >> 2];
          }
          function CF(a2) {
            a2 = a2 | 0;
            return + +g[a2 + 204 >> 2];
          }
          function DF(a2) {
            a2 = a2 | 0;
            return + +g[a2 + 216 >> 2];
          }
          function EF(a2) {
            a2 = a2 | 0;
            return + +g[a2 + 220 >> 2];
          }
          function FF(a2) {
            a2 = a2 | 0;
            return + +g[a2 + 224 >> 2];
          }
          function GF(a2) {
            a2 = a2 | 0;
            return + +g[a2 + 212 >> 2];
          }
          function HF(a2) {
            a2 = a2 | 0;
            return + +g[a2 + 276 >> 2];
          }
          function IF(b2, c2) {
            b2 = b2 | 0;
            c2 = c2 | 0;
            a[b2 + 260 >> 0] = c2 & 1;
            return;
          }
          function JF(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c[a2 + 156 >> 2] = c[b2 >> 2];
            c[a2 + 156 + 4 >> 2] = c[b2 + 4 >> 2];
            c[a2 + 156 + 8 >> 2] = c[b2 + 8 >> 2];
            c[a2 + 156 + 12 >> 2] = c[b2 + 12 >> 2];
            return;
          }
          function KF(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            g[a2 + 252 >> 2] = b2;
            return;
          }
          function LF(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            g[a2 + 228 >> 2] = b2;
            return;
          }
          function MF(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            g[a2 + 248 >> 2] = b2;
            return;
          }
          function NF(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            g[a2 + 208 >> 2] = b2;
            return;
          }
          function OF(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0;
            d2 = a2 + 92 | 0;
            do {
              c[a2 >> 2] = c[b2 >> 2];
              a2 = a2 + 4 | 0;
              b2 = b2 + 4 | 0;
            } while ((a2 | 0) < (d2 | 0));
            return;
          }
          function PF(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            g[a2 + 244 >> 2] = b2;
            return;
          }
          function QF(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            g[a2 + 232 >> 2] = b2;
            return;
          }
          function RF(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            g[a2 + 204 >> 2] = b2;
            return;
          }
          function SF(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            g[a2 + 216 >> 2] = b2;
            return;
          }
          function TF(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            g[a2 + 220 >> 2] = b2;
            return;
          }
          function UF(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            g[a2 + 224 >> 2] = b2;
            return;
          }
          function VF(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            g[a2 + 212 >> 2] = b2;
            return;
          }
          function WF(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            g[a2 + 276 >> 2] = b2;
            return;
          }
          function XF() {
            return 0;
          }
          function YF() {
            return 1;
          }
          function ZF() {
            return 2;
          }
          function _F() {
            return 3;
          }
          function $F() {
            return 4;
          }
          function aG() {
            return 5;
          }
          function bG(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0;
            d2 = i;
            i = i + 16 | 0;
            c[d2 >> 2] = c[a2 + 60 >> 2];
            a2 = ib(6, d2 | 0) | 0;
            if (a2 >>> 0 > 4294963200) {
              if (true)
                b2 = 22816;
              else
                b2 = c[(eH() | 0) + 64 >> 2] | 0;
              c[b2 >> 2] = 0 - a2;
              a2 = -1;
            }
            i = d2;
            return a2 | 0;
          }
          function cG(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0, j2 = 0, k2 = 0;
            k2 = i;
            i = i + 48 | 0;
            g2 = c[a2 + 28 >> 2] | 0;
            c[k2 + 32 >> 2] = g2;
            g2 = (c[a2 + 20 >> 2] | 0) - g2 | 0;
            c[k2 + 32 + 4 >> 2] = g2;
            c[k2 + 32 + 8 >> 2] = b2;
            c[k2 + 32 + 12 >> 2] = d2;
            j2 = k2 + 32 | 0;
            f2 = 2;
            g2 = g2 + d2 | 0;
            while (1) {
              if (true) {
                c[k2 + 16 >> 2] = c[a2 + 60 >> 2];
                c[k2 + 16 + 4 >> 2] = j2;
                c[k2 + 16 + 8 >> 2] = f2;
                b2 = nb(146, k2 + 16 | 0) | 0;
                if (b2 >>> 0 > 4294963200) {
                  if (true)
                    e2 = 22816;
                  else
                    e2 = c[(eH() | 0) + 64 >> 2] | 0;
                  c[e2 >> 2] = 0 - b2;
                  b2 = -1;
                }
              } else {
                jb(218, a2 | 0);
                c[k2 >> 2] = c[a2 + 60 >> 2];
                c[k2 + 4 >> 2] = j2;
                c[k2 + 8 >> 2] = f2;
                b2 = nb(146, k2 | 0) | 0;
                if (b2 >>> 0 > 4294963200) {
                  if (true)
                    e2 = 22816;
                  else
                    e2 = c[(eH() | 0) + 64 >> 2] | 0;
                  c[e2 >> 2] = 0 - b2;
                  b2 = -1;
                }
                Sa(0);
              }
              if ((g2 | 0) == (b2 | 0)) {
                b2 = 13;
                break;
              }
              if ((b2 | 0) < 0) {
                b2 = 15;
                break;
              }
              g2 = g2 - b2 | 0;
              e2 = c[j2 + 4 >> 2] | 0;
              if (b2 >>> 0 <= e2 >>> 0)
                if ((f2 | 0) == 2) {
                  c[a2 + 28 >> 2] = (c[a2 + 28 >> 2] | 0) + b2;
                  h2 = e2;
                  e2 = j2;
                  f2 = 2;
                } else {
                  h2 = e2;
                  e2 = j2;
                }
              else {
                h2 = c[a2 + 44 >> 2] | 0;
                c[a2 + 28 >> 2] = h2;
                c[a2 + 20 >> 2] = h2;
                h2 = c[j2 + 12 >> 2] | 0;
                b2 = b2 - e2 | 0;
                e2 = j2 + 8 | 0;
                f2 = f2 + -1 | 0;
              }
              c[e2 >> 2] = (c[e2 >> 2] | 0) + b2;
              c[e2 + 4 >> 2] = h2 - b2;
              j2 = e2;
            }
            if ((b2 | 0) == 13) {
              j2 = c[a2 + 44 >> 2] | 0;
              c[a2 + 16 >> 2] = j2 + (c[a2 + 48 >> 2] | 0);
              c[a2 + 28 >> 2] = j2;
              c[a2 + 20 >> 2] = j2;
            } else if ((b2 | 0) == 15) {
              c[a2 + 16 >> 2] = 0;
              c[a2 + 28 >> 2] = 0;
              c[a2 + 20 >> 2] = 0;
              c[a2 >> 2] = c[a2 >> 2] | 32;
              if ((f2 | 0) == 2)
                d2 = 0;
              else
                d2 = d2 - (c[j2 + 4 >> 2] | 0) | 0;
            }
            i = k2;
            return d2 | 0;
          }
          function dG(a2) {
            a2 = a2 | 0;
            return;
          }
          function eG(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0;
            f2 = i;
            i = i + 32 | 0;
            c[f2 >> 2] = c[a2 + 60 >> 2];
            c[f2 + 4 >> 2] = 0;
            c[f2 + 8 >> 2] = b2;
            c[f2 + 12 >> 2] = f2 + 20;
            c[f2 + 16 >> 2] = d2;
            b2 = lb(140, f2 | 0) | 0;
            if (b2 >>> 0 <= 4294963200)
              if ((b2 | 0) < 0)
                e2 = 7;
              else
                a2 = c[f2 + 20 >> 2] | 0;
            else {
              if (true)
                a2 = 22816;
              else
                a2 = c[(eH() | 0) + 64 >> 2] | 0;
              c[a2 >> 2] = 0 - b2;
              e2 = 7;
            }
            if ((e2 | 0) == 7) {
              c[f2 + 20 >> 2] = -1;
              a2 = -1;
            }
            i = f2;
            return a2 | 0;
          }
          function fG(b2, d2, e2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, g2 = 0, h2 = 0;
            a:
              do
                if ((e2 | 0) != 0 & (b2 & 3 | 0) != 0) {
                  f2 = e2;
                  while (1) {
                    if ((a[b2 >> 0] | 0) == (d2 & 255) << 24 >> 24)
                      break a;
                    b2 = b2 + 1 | 0;
                    e2 = f2 + -1 | 0;
                    if ((e2 | 0) != 0 & (b2 & 3 | 0) != 0)
                      f2 = e2;
                    else {
                      f2 = e2;
                      e2 = (e2 | 0) != 0;
                      g2 = 5;
                      break;
                    }
                  }
                } else {
                  f2 = e2;
                  e2 = (e2 | 0) != 0;
                  g2 = 5;
                }
              while (0);
            b:
              do
                if ((g2 | 0) == 5)
                  if (e2) {
                    if ((a[b2 >> 0] | 0) != (d2 & 255) << 24 >> 24) {
                      e2 = _(d2 & 255, 16843009) | 0;
                      c:
                        do
                          if (f2 >>> 0 > 3)
                            while (1) {
                              h2 = c[b2 >> 2] ^ e2;
                              if ((h2 & -2139062144 ^ -2139062144) & h2 + -16843009 | 0)
                                break;
                              b2 = b2 + 4 | 0;
                              f2 = f2 + -4 | 0;
                              if (f2 >>> 0 <= 3) {
                                g2 = 11;
                                break c;
                              }
                            }
                          else
                            g2 = 11;
                        while (0);
                      if ((g2 | 0) == 11) {
                        if (!f2) {
                          f2 = 0;
                          break;
                        }
                      }
                      while (1) {
                        if ((a[b2 >> 0] | 0) == (d2 & 255) << 24 >> 24)
                          break b;
                        b2 = b2 + 1 | 0;
                        f2 = f2 + -1 | 0;
                        if (!f2) {
                          f2 = 0;
                          break;
                        }
                      }
                    }
                  } else
                    f2 = 0;
              while (0);
            return (f2 | 0 ? b2 : 0) | 0;
          }
          function gG(e2, f2, g2, j2, l2) {
            e2 = e2 | 0;
            f2 = f2 | 0;
            g2 = g2 | 0;
            j2 = j2 | 0;
            l2 = l2 | 0;
            var m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0, N2 = 0, O2 = 0;
            O2 = i;
            i = i + 624 | 0;
            K2 = O2 + 536 + 40 | 0;
            M2 = O2 + 588 | 0;
            N2 = O2 + 576 + 12 | 0;
            L2 = O2 + 588 + 9 | 0;
            m2 = 0;
            n2 = 0;
            r2 = 0;
            w2 = f2;
            a:
              while (1) {
                do
                  if ((m2 | 0) > -1) {
                    if ((n2 | 0) <= (2147483647 - m2 | 0)) {
                      m2 = n2 + m2 | 0;
                      break;
                    }
                    if (true)
                      m2 = 22816;
                    else
                      m2 = c[(eH() | 0) + 64 >> 2] | 0;
                    c[m2 >> 2] = 75;
                    m2 = -1;
                  }
                while (0);
                f2 = a[w2 >> 0] | 0;
                if (!(f2 << 24 >> 24)) {
                  J2 = 254;
                  break;
                } else
                  n2 = w2;
                b:
                  while (1) {
                    switch (f2 << 24 >> 24) {
                      case 37: {
                        f2 = n2;
                        J2 = 11;
                        break b;
                      }
                      case 0: {
                        f2 = n2;
                        break b;
                      }
                      default: {
                      }
                    }
                    I2 = n2 + 1 | 0;
                    f2 = a[I2 >> 0] | 0;
                    n2 = I2;
                  }
                c:
                  do
                    if ((J2 | 0) == 11)
                      while (1) {
                        J2 = 0;
                        if ((a[f2 + 1 >> 0] | 0) != 37)
                          break c;
                        n2 = n2 + 1 | 0;
                        f2 = f2 + 2 | 0;
                        if ((a[f2 >> 0] | 0) == 37)
                          J2 = 11;
                        else
                          break;
                      }
                  while (0);
                v2 = n2 - w2 | 0;
                if (e2 | 0 ? (c[e2 >> 2] & 32 | 0) == 0 : 0)
                  hG(w2, v2, e2);
                if ((n2 | 0) != (w2 | 0)) {
                  n2 = v2;
                  w2 = f2;
                  continue;
                }
                o2 = f2 + 1 | 0;
                n2 = a[o2 >> 0] | 0;
                if (((n2 << 24 >> 24) + -48 | 0) >>> 0 < 10) {
                  I2 = (a[f2 + 2 >> 0] | 0) == 36;
                  o2 = I2 ? f2 + 3 | 0 : o2;
                  q2 = a[o2 >> 0] | 0;
                  u2 = I2 ? (n2 << 24 >> 24) + -48 | 0 : -1;
                  r2 = I2 ? 1 : r2;
                } else {
                  q2 = n2;
                  u2 = -1;
                }
                f2 = q2 << 24 >> 24;
                d:
                  do
                    if ((f2 & -32 | 0) == 32) {
                      n2 = q2;
                      q2 = 0;
                      do {
                        if (!(1 << f2 + -32 & 75913))
                          break d;
                        q2 = 1 << (n2 << 24 >> 24) + -32 | q2;
                        o2 = o2 + 1 | 0;
                        n2 = a[o2 >> 0] | 0;
                        f2 = n2 << 24 >> 24;
                      } while ((f2 & -32 | 0) == 32);
                    } else {
                      n2 = q2;
                      q2 = 0;
                    }
                  while (0);
                do
                  if (n2 << 24 >> 24 == 42) {
                    n2 = o2 + 1 | 0;
                    f2 = (a[n2 >> 0] | 0) + -48 | 0;
                    if (f2 >>> 0 < 10 ? (a[o2 + 2 >> 0] | 0) == 36 : 0) {
                      c[l2 + (f2 << 2) >> 2] = 10;
                      f2 = 1;
                      o2 = o2 + 3 | 0;
                      n2 = c[j2 + ((a[n2 >> 0] | 0) + -48 << 3) >> 2] | 0;
                    } else {
                      if (r2 | 0) {
                        m2 = -1;
                        break a;
                      }
                      if (!e2) {
                        t2 = q2;
                        I2 = 0;
                        o2 = n2;
                        H2 = 0;
                        break;
                      }
                      f2 = (c[g2 >> 2] | 0) + (4 - 1) & ~(4 - 1);
                      I2 = c[f2 >> 2] | 0;
                      c[g2 >> 2] = f2 + 4;
                      f2 = 0;
                      o2 = n2;
                      n2 = I2;
                    }
                    if ((n2 | 0) < 0) {
                      t2 = q2 | 8192;
                      I2 = f2;
                      H2 = 0 - n2 | 0;
                    } else {
                      t2 = q2;
                      I2 = f2;
                      H2 = n2;
                    }
                  } else {
                    f2 = (n2 << 24 >> 24) + -48 | 0;
                    if (f2 >>> 0 < 10) {
                      n2 = 0;
                      do {
                        n2 = (n2 * 10 | 0) + f2 | 0;
                        o2 = o2 + 1 | 0;
                        f2 = (a[o2 >> 0] | 0) + -48 | 0;
                      } while (f2 >>> 0 < 10);
                      if ((n2 | 0) < 0) {
                        m2 = -1;
                        break a;
                      } else {
                        t2 = q2;
                        I2 = r2;
                        H2 = n2;
                      }
                    } else {
                      t2 = q2;
                      I2 = r2;
                      H2 = 0;
                    }
                  }
                while (0);
                e:
                  do
                    if ((a[o2 >> 0] | 0) == 46) {
                      f2 = o2 + 1 | 0;
                      q2 = a[f2 >> 0] | 0;
                      if (q2 << 24 >> 24 != 42) {
                        if (((q2 << 24 >> 24) + -48 | 0) >>> 0 < 10) {
                          n2 = 0;
                          o2 = (q2 << 24 >> 24) + -48 | 0;
                        } else {
                          r2 = 0;
                          break;
                        }
                        while (1) {
                          n2 = (n2 * 10 | 0) + o2 | 0;
                          f2 = f2 + 1 | 0;
                          o2 = (a[f2 >> 0] | 0) + -48 | 0;
                          if (o2 >>> 0 >= 10) {
                            r2 = n2;
                            break e;
                          }
                        }
                      }
                      f2 = o2 + 2 | 0;
                      n2 = (a[f2 >> 0] | 0) + -48 | 0;
                      if (n2 >>> 0 < 10 ? (a[o2 + 3 >> 0] | 0) == 36 : 0) {
                        c[l2 + (n2 << 2) >> 2] = 10;
                        r2 = c[j2 + ((a[f2 >> 0] | 0) + -48 << 3) >> 2] | 0;
                        f2 = o2 + 4 | 0;
                        break;
                      }
                      if (I2 | 0) {
                        m2 = -1;
                        break a;
                      }
                      if (e2 | 0) {
                        G2 = (c[g2 >> 2] | 0) + (4 - 1) & ~(4 - 1);
                        r2 = c[G2 >> 2] | 0;
                        c[g2 >> 2] = G2 + 4;
                      } else
                        r2 = 0;
                    } else {
                      r2 = -1;
                      f2 = o2;
                    }
                  while (0);
                q2 = 0;
                while (1) {
                  n2 = (a[f2 >> 0] | 0) + -65 | 0;
                  if (n2 >>> 0 > 57) {
                    m2 = -1;
                    break a;
                  }
                  G2 = f2 + 1 | 0;
                  n2 = a[16811 + (q2 * 58 | 0) + n2 >> 0] | 0;
                  if (((n2 & 255) + -1 | 0) >>> 0 < 8) {
                    f2 = G2;
                    q2 = n2 & 255;
                  } else
                    break;
                }
                if (!(n2 << 24 >> 24)) {
                  m2 = -1;
                  break;
                }
                o2 = (u2 | 0) > -1;
                do
                  if (n2 << 24 >> 24 == 19)
                    if (o2) {
                      m2 = -1;
                      break a;
                    } else
                      J2 = 54;
                  else {
                    if (o2) {
                      c[l2 + (u2 << 2) >> 2] = n2 & 255;
                      F2 = j2 + (u2 << 3) | 0;
                      J2 = c[F2 + 4 >> 2] | 0;
                      c[O2 >> 2] = c[F2 >> 2];
                      c[O2 + 4 >> 2] = J2;
                      J2 = 54;
                      break;
                    }
                    if (!e2) {
                      m2 = 0;
                      break a;
                    }
                    jG(O2, n2 & 255, g2);
                  }
                while (0);
                if ((J2 | 0) == 54 ? (J2 = 0, (e2 | 0) == 0) : 0) {
                  n2 = v2;
                  r2 = I2;
                  w2 = G2;
                  continue;
                }
                E2 = a[f2 >> 0] | 0;
                E2 = (q2 | 0) != 0 & (E2 & 15 | 0) == 3 ? E2 & -33 : E2;
                o2 = t2 & -65537;
                F2 = (t2 & 8192 | 0) == 0 ? t2 : o2;
                f:
                  do
                    switch (E2 | 0) {
                      case 110:
                        switch (q2 | 0) {
                          case 0: {
                            c[c[O2 >> 2] >> 2] = m2;
                            n2 = v2;
                            r2 = I2;
                            w2 = G2;
                            continue a;
                          }
                          case 1: {
                            c[c[O2 >> 2] >> 2] = m2;
                            n2 = v2;
                            r2 = I2;
                            w2 = G2;
                            continue a;
                          }
                          case 2: {
                            n2 = c[O2 >> 2] | 0;
                            c[n2 >> 2] = m2;
                            c[n2 + 4 >> 2] = ((m2 | 0) < 0) << 31 >> 31;
                            n2 = v2;
                            r2 = I2;
                            w2 = G2;
                            continue a;
                          }
                          case 3: {
                            b[c[O2 >> 2] >> 1] = m2;
                            n2 = v2;
                            r2 = I2;
                            w2 = G2;
                            continue a;
                          }
                          case 4: {
                            a[c[O2 >> 2] >> 0] = m2;
                            n2 = v2;
                            r2 = I2;
                            w2 = G2;
                            continue a;
                          }
                          case 6: {
                            c[c[O2 >> 2] >> 2] = m2;
                            n2 = v2;
                            r2 = I2;
                            w2 = G2;
                            continue a;
                          }
                          case 7: {
                            n2 = c[O2 >> 2] | 0;
                            c[n2 >> 2] = m2;
                            c[n2 + 4 >> 2] = ((m2 | 0) < 0) << 31 >> 31;
                            n2 = v2;
                            r2 = I2;
                            w2 = G2;
                            continue a;
                          }
                          default: {
                            n2 = v2;
                            r2 = I2;
                            w2 = G2;
                            continue a;
                          }
                        }
                      case 112: {
                        t2 = F2 | 8;
                        r2 = r2 >>> 0 > 8 ? r2 : 8;
                        u2 = 120;
                        J2 = 66;
                        break;
                      }
                      case 88:
                      case 120: {
                        t2 = F2;
                        u2 = E2;
                        J2 = 66;
                        break;
                      }
                      case 111: {
                        n2 = c[O2 >> 2] | 0;
                        o2 = c[O2 + 4 >> 2] | 0;
                        if ((n2 | 0) == 0 & (o2 | 0) == 0)
                          f2 = K2;
                        else {
                          f2 = K2;
                          do {
                            f2 = f2 + -1 | 0;
                            a[f2 >> 0] = n2 & 7 | 48;
                            n2 = aH(n2 | 0, o2 | 0, 3) | 0;
                            o2 = C;
                          } while (!((n2 | 0) == 0 & (o2 | 0) == 0));
                        }
                        if (!(F2 & 8)) {
                          n2 = F2;
                          t2 = 0;
                          q2 = 17291;
                          J2 = 79;
                        } else {
                          t2 = K2 - f2 | 0;
                          n2 = F2;
                          r2 = (r2 | 0) > (t2 | 0) ? r2 : t2 + 1 | 0;
                          t2 = 0;
                          q2 = 17291;
                          J2 = 79;
                        }
                        break;
                      }
                      case 105:
                      case 100: {
                        f2 = c[O2 >> 2] | 0;
                        n2 = c[O2 + 4 >> 2] | 0;
                        if ((n2 | 0) < 0) {
                          f2 = XG(0, 0, f2 | 0, n2 | 0) | 0;
                          n2 = C;
                          c[O2 >> 2] = f2;
                          c[O2 + 4 >> 2] = n2;
                          o2 = 1;
                          q2 = 17291;
                          J2 = 78;
                          break f;
                        }
                        if (!(F2 & 2048)) {
                          o2 = F2 & 1;
                          q2 = (F2 & 1 | 0) == 0 ? 17291 : 17293;
                          J2 = 78;
                        } else {
                          o2 = 1;
                          q2 = 17292;
                          J2 = 78;
                        }
                        break;
                      }
                      case 117: {
                        f2 = c[O2 >> 2] | 0;
                        n2 = c[O2 + 4 >> 2] | 0;
                        o2 = 0;
                        q2 = 17291;
                        J2 = 78;
                        break;
                      }
                      case 99: {
                        a[O2 + 536 + 39 >> 0] = c[O2 >> 2];
                        f2 = O2 + 536 + 39 | 0;
                        u2 = 1;
                        w2 = 0;
                        v2 = 17291;
                        n2 = K2;
                        break;
                      }
                      case 109: {
                        if (true)
                          f2 = 22816;
                        else
                          f2 = c[(eH() | 0) + 64 >> 2] | 0;
                        n2 = c[f2 >> 2] | 0;
                        f2 = 0;
                        while (1) {
                          if ((d[17301 + f2 >> 0] | 0) == (n2 | 0)) {
                            J2 = 85;
                            break;
                          }
                          f2 = f2 + 1 | 0;
                          if ((f2 | 0) == 87) {
                            n2 = 87;
                            f2 = 17389;
                            break;
                          }
                        }
                        if ((J2 | 0) == 85)
                          if (!f2) {
                            n2 = 17389;
                            J2 = 92;
                            break f;
                          } else {
                            n2 = f2;
                            f2 = 17389;
                          }
                        do {
                          do {
                            J2 = f2;
                            f2 = f2 + 1 | 0;
                          } while ((a[J2 >> 0] | 0) != 0);
                          n2 = n2 + -1 | 0;
                        } while ((n2 | 0) != 0);
                        n2 = f2;
                        J2 = 92;
                        break;
                      }
                      case 115: {
                        n2 = c[O2 >> 2] | 0;
                        n2 = n2 | 0 ? n2 : 19193;
                        J2 = 92;
                        break;
                      }
                      case 67: {
                        c[O2 + 8 >> 2] = c[O2 >> 2];
                        c[O2 + 8 + 4 >> 2] = 0;
                        c[O2 >> 2] = O2 + 8;
                        f2 = O2 + 8 | 0;
                        r2 = -1;
                        J2 = 96;
                        break;
                      }
                      case 83: {
                        f2 = c[O2 >> 2] | 0;
                        if (!r2) {
                          lG(e2, 32, H2, 0, F2);
                          f2 = 0;
                          J2 = 107;
                        } else
                          J2 = 96;
                        break;
                      }
                      case 65:
                      case 71:
                      case 70:
                      case 69:
                      case 97:
                      case 103:
                      case 102:
                      case 101: {
                        p2 = +h[O2 >> 3];
                        c[O2 + 16 >> 2] = 0;
                        h[k >> 3] = p2;
                        if ((c[k + 4 >> 2] | 0) >= 0)
                          if (!(F2 & 2048)) {
                            B2 = F2 & 1;
                            D2 = (F2 & 1 | 0) == 0 ? 19201 : 19206;
                          } else {
                            B2 = 1;
                            D2 = 19203;
                          }
                        else {
                          p2 = -p2;
                          B2 = 1;
                          D2 = 19200;
                        }
                        h[k >> 3] = p2;
                        A2 = c[k + 4 >> 2] & 2146435072;
                        do
                          if (A2 >>> 0 < 2146435072 | (A2 | 0) == 2146435072 & 0 < 0) {
                            p2 = +nG(p2, O2 + 16 | 0) * 2;
                            if (p2 != 0)
                              c[O2 + 16 >> 2] = (c[O2 + 16 >> 2] | 0) + -1;
                            if ((E2 | 32 | 0) == 97) {
                              u2 = (E2 & 32 | 0) == 0 ? D2 : D2 + 9 | 0;
                              t2 = B2 | 2;
                              f2 = 12 - r2 | 0;
                              do
                                if (!(r2 >>> 0 > 11 | (f2 | 0) == 0)) {
                                  s2 = 8;
                                  do {
                                    f2 = f2 + -1 | 0;
                                    s2 = s2 * 16;
                                  } while ((f2 | 0) != 0);
                                  if ((a[u2 >> 0] | 0) == 45) {
                                    p2 = -(s2 + (-p2 - s2));
                                    break;
                                  } else {
                                    p2 = p2 + s2 - s2;
                                    break;
                                  }
                                }
                              while (0);
                              n2 = c[O2 + 16 >> 2] | 0;
                              f2 = (n2 | 0) < 0 ? 0 - n2 | 0 : n2;
                              f2 = kG(f2, ((f2 | 0) < 0) << 31 >> 31, O2 + 576 + 12 | 0) | 0;
                              if ((f2 | 0) == (O2 + 576 + 12 | 0)) {
                                a[O2 + 576 + 11 >> 0] = 48;
                                f2 = O2 + 576 + 11 | 0;
                              }
                              a[f2 + -1 >> 0] = (n2 >> 31 & 2) + 43;
                              q2 = f2 + -2 | 0;
                              a[q2 >> 0] = E2 + 15;
                              o2 = (r2 | 0) < 1;
                              f2 = O2 + 588 | 0;
                              while (1) {
                                D2 = ~~p2;
                                n2 = f2 + 1 | 0;
                                a[f2 >> 0] = d[17275 + D2 >> 0] | E2 & 32;
                                p2 = (p2 - +(D2 | 0)) * 16;
                                do
                                  if ((n2 - M2 | 0) == 1) {
                                    if ((F2 & 8 | 0) == 0 & (o2 & p2 == 0))
                                      break;
                                    a[n2 >> 0] = 46;
                                    n2 = f2 + 2 | 0;
                                  }
                                while (0);
                                if (!(p2 != 0))
                                  break;
                                else
                                  f2 = n2;
                              }
                              f2 = (r2 | 0) != 0 & (-2 - M2 + n2 | 0) < (r2 | 0) ? N2 + 2 + r2 - q2 | 0 : N2 - M2 - q2 + n2 | 0;
                              lG(e2, 32, H2, f2 + t2 | 0, F2);
                              if (!(c[e2 >> 2] & 32))
                                hG(u2, t2, e2);
                              lG(e2, 48, H2, f2 + t2 | 0, F2 ^ 65536);
                              if (!(c[e2 >> 2] & 32))
                                hG(O2 + 588 | 0, n2 - M2 | 0, e2);
                              lG(e2, 48, f2 - (n2 - M2 + (N2 - q2)) | 0, 0, 0);
                              if (!(c[e2 >> 2] & 32))
                                hG(q2, N2 - q2 | 0, e2);
                              lG(e2, 32, H2, f2 + t2 | 0, F2 ^ 8192);
                              f2 = (f2 + t2 | 0) < (H2 | 0) ? H2 : f2 + t2 | 0;
                              break;
                            }
                            f2 = (r2 | 0) < 0 ? 6 : r2;
                            if (p2 != 0) {
                              n2 = (c[O2 + 16 >> 2] | 0) + -28 | 0;
                              c[O2 + 16 >> 2] = n2;
                              p2 = p2 * 268435456;
                            } else
                              n2 = c[O2 + 16 >> 2] | 0;
                            A2 = (n2 | 0) < 0 ? O2 + 24 | 0 : O2 + 24 + 288 | 0;
                            q2 = A2;
                            do {
                              z2 = ~~p2 >>> 0;
                              c[q2 >> 2] = z2;
                              q2 = q2 + 4 | 0;
                              p2 = (p2 - +(z2 >>> 0)) * 1e9;
                            } while (p2 != 0);
                            n2 = c[O2 + 16 >> 2] | 0;
                            if ((n2 | 0) > 0) {
                              o2 = A2;
                              do {
                                t2 = (n2 | 0) > 29 ? 29 : n2;
                                n2 = q2 + -4 | 0;
                                do
                                  if (n2 >>> 0 >= o2 >>> 0) {
                                    r2 = 0;
                                    do {
                                      y2 = _G(c[n2 >> 2] | 0, 0, t2 | 0) | 0;
                                      y2 = YG(y2 | 0, C | 0, r2 | 0, 0) | 0;
                                      z2 = C;
                                      x2 = lH(y2 | 0, z2 | 0, 1e9, 0) | 0;
                                      c[n2 >> 2] = x2;
                                      r2 = kH(y2 | 0, z2 | 0, 1e9, 0) | 0;
                                      n2 = n2 + -4 | 0;
                                    } while (n2 >>> 0 >= o2 >>> 0);
                                    if (!r2)
                                      break;
                                    o2 = o2 + -4 | 0;
                                    c[o2 >> 2] = r2;
                                  }
                                while (0);
                                while (1) {
                                  if (q2 >>> 0 <= o2 >>> 0)
                                    break;
                                  n2 = q2 + -4 | 0;
                                  if (!(c[n2 >> 2] | 0))
                                    q2 = n2;
                                  else
                                    break;
                                }
                                n2 = (c[O2 + 16 >> 2] | 0) - t2 | 0;
                                c[O2 + 16 >> 2] = n2;
                              } while ((n2 | 0) > 0);
                            } else
                              o2 = A2;
                            if ((n2 | 0) < 0) {
                              do {
                                t2 = 0 - n2 | 0;
                                t2 = (t2 | 0) > 9 ? 9 : t2;
                                do
                                  if (o2 >>> 0 < q2 >>> 0) {
                                    r2 = 0;
                                    n2 = o2;
                                    do {
                                      z2 = c[n2 >> 2] | 0;
                                      c[n2 >> 2] = (z2 >>> t2) + r2;
                                      r2 = _(z2 & (1 << t2) + -1, 1e9 >>> t2) | 0;
                                      n2 = n2 + 4 | 0;
                                    } while (n2 >>> 0 < q2 >>> 0);
                                    n2 = (c[o2 >> 2] | 0) == 0 ? o2 + 4 | 0 : o2;
                                    if (!r2) {
                                      o2 = n2;
                                      n2 = q2;
                                      break;
                                    }
                                    c[q2 >> 2] = r2;
                                    o2 = n2;
                                    n2 = q2 + 4 | 0;
                                  } else {
                                    o2 = (c[o2 >> 2] | 0) == 0 ? o2 + 4 | 0 : o2;
                                    n2 = q2;
                                  }
                                while (0);
                                q2 = (E2 | 32 | 0) == 102 ? A2 : o2;
                                q2 = (n2 - q2 >> 2 | 0) > (((f2 + 25 | 0) / 9 | 0) + 1 | 0) ? q2 + (((f2 + 25 | 0) / 9 | 0) + 1 << 2) | 0 : n2;
                                n2 = (c[O2 + 16 >> 2] | 0) + t2 | 0;
                                c[O2 + 16 >> 2] = n2;
                              } while ((n2 | 0) < 0);
                              n2 = o2;
                            } else
                              n2 = o2;
                            do
                              if (n2 >>> 0 < q2 >>> 0) {
                                o2 = (A2 - n2 >> 2) * 9 | 0;
                                t2 = c[n2 >> 2] | 0;
                                if (t2 >>> 0 < 10)
                                  break;
                                else
                                  r2 = 10;
                                do {
                                  r2 = r2 * 10 | 0;
                                  o2 = o2 + 1 | 0;
                                } while (t2 >>> 0 >= r2 >>> 0);
                              } else
                                o2 = 0;
                            while (0);
                            r2 = f2 - ((E2 | 32 | 0) != 102 ? o2 : 0) + (((f2 | 0) != 0 & (E2 | 32 | 0) == 103) << 31 >> 31) | 0;
                            if ((r2 | 0) < (((q2 - A2 >> 2) * 9 | 0) + -9 | 0)) {
                              x2 = A2 + 4 + (((r2 + 9216 | 0) / 9 | 0) + -1024 << 2) | 0;
                              if ((((r2 + 9216 | 0) % 9 | 0) + 1 | 0) < 9) {
                                t2 = 10;
                                u2 = ((r2 + 9216 | 0) % 9 | 0) + 1 | 0;
                                while (1) {
                                  r2 = t2 * 10 | 0;
                                  u2 = u2 + 1 | 0;
                                  if ((u2 | 0) == 9)
                                    break;
                                  else
                                    t2 = r2;
                                }
                              } else
                                r2 = 10;
                              v2 = c[x2 >> 2] | 0;
                              w2 = (v2 >>> 0) % (r2 >>> 0) | 0;
                              t2 = (x2 + 4 | 0) == (q2 | 0);
                              do
                                if (t2 & (w2 | 0) == 0)
                                  r2 = x2;
                                else {
                                  s2 = (((v2 >>> 0) / (r2 >>> 0) | 0) & 1 | 0) == 0 ? 9007199254740992 : 9007199254740994;
                                  u2 = (r2 | 0) / 2 | 0;
                                  if (w2 >>> 0 < u2 >>> 0)
                                    p2 = 0.5;
                                  else
                                    p2 = t2 & (w2 | 0) == (u2 | 0) ? 1 : 1.5;
                                  do
                                    if (B2) {
                                      if ((a[D2 >> 0] | 0) != 45)
                                        break;
                                      s2 = -s2;
                                      p2 = -p2;
                                    }
                                  while (0);
                                  c[x2 >> 2] = v2 - w2;
                                  if (!(s2 + p2 != s2)) {
                                    r2 = x2;
                                    break;
                                  }
                                  z2 = v2 - w2 + r2 | 0;
                                  c[x2 >> 2] = z2;
                                  if (z2 >>> 0 > 999999999) {
                                    o2 = x2;
                                    while (1) {
                                      r2 = o2 + -4 | 0;
                                      c[o2 >> 2] = 0;
                                      if (r2 >>> 0 < n2 >>> 0) {
                                        n2 = n2 + -4 | 0;
                                        c[n2 >> 2] = 0;
                                      }
                                      z2 = (c[r2 >> 2] | 0) + 1 | 0;
                                      c[r2 >> 2] = z2;
                                      if (z2 >>> 0 > 999999999)
                                        o2 = r2;
                                      else
                                        break;
                                    }
                                  } else
                                    r2 = x2;
                                  o2 = (A2 - n2 >> 2) * 9 | 0;
                                  u2 = c[n2 >> 2] | 0;
                                  if (u2 >>> 0 < 10)
                                    break;
                                  else
                                    t2 = 10;
                                  do {
                                    t2 = t2 * 10 | 0;
                                    o2 = o2 + 1 | 0;
                                  } while (u2 >>> 0 >= t2 >>> 0);
                                }
                              while (0);
                              y2 = r2 + 4 | 0;
                              z2 = n2;
                              n2 = q2 >>> 0 > y2 >>> 0 ? y2 : q2;
                            } else {
                              z2 = n2;
                              n2 = q2;
                            }
                            u2 = 0 - o2 | 0;
                            y2 = n2;
                            while (1) {
                              if (y2 >>> 0 <= z2 >>> 0) {
                                w2 = 0;
                                break;
                              }
                              n2 = y2 + -4 | 0;
                              if (!(c[n2 >> 2] | 0))
                                y2 = n2;
                              else {
                                w2 = 1;
                                break;
                              }
                            }
                            do
                              if ((E2 | 32 | 0) == 103) {
                                if ((((f2 | 0) != 0 ^ 1) + f2 | 0) > (o2 | 0) & (o2 | 0) > -5) {
                                  t2 = E2 + -1 | 0;
                                  f2 = ((f2 | 0) != 0 ^ 1) + f2 + -1 - o2 | 0;
                                } else {
                                  t2 = E2 + -2 | 0;
                                  f2 = ((f2 | 0) != 0 ^ 1) + f2 + -1 | 0;
                                }
                                if (F2 & 8 | 0) {
                                  r2 = F2 & 8;
                                  break;
                                }
                                do
                                  if (w2) {
                                    n2 = c[y2 + -4 >> 2] | 0;
                                    if (!n2) {
                                      q2 = 9;
                                      break;
                                    }
                                    if (!((n2 >>> 0) % 10 | 0)) {
                                      r2 = 10;
                                      q2 = 0;
                                    } else {
                                      q2 = 0;
                                      break;
                                    }
                                    do {
                                      r2 = r2 * 10 | 0;
                                      q2 = q2 + 1 | 0;
                                    } while (!((n2 >>> 0) % (r2 >>> 0) | 0 | 0));
                                  } else
                                    q2 = 9;
                                while (0);
                                n2 = ((y2 - A2 >> 2) * 9 | 0) + -9 | 0;
                                if ((t2 | 32 | 0) == 102) {
                                  r2 = n2 - q2 | 0;
                                  r2 = (r2 | 0) < 0 ? 0 : r2;
                                  f2 = (f2 | 0) < (r2 | 0) ? f2 : r2;
                                  r2 = 0;
                                  break;
                                } else {
                                  r2 = n2 + o2 - q2 | 0;
                                  r2 = (r2 | 0) < 0 ? 0 : r2;
                                  f2 = (f2 | 0) < (r2 | 0) ? f2 : r2;
                                  r2 = 0;
                                  break;
                                }
                              } else {
                                t2 = E2;
                                r2 = F2 & 8;
                              }
                            while (0);
                            v2 = f2 | r2;
                            q2 = (t2 | 32 | 0) == 102;
                            if (q2) {
                              n2 = (o2 | 0) > 0 ? o2 : 0;
                              u2 = 0;
                            } else {
                              n2 = (o2 | 0) < 0 ? u2 : o2;
                              n2 = kG(n2, ((n2 | 0) < 0) << 31 >> 31, O2 + 576 + 12 | 0) | 0;
                              if ((N2 - n2 | 0) < 2)
                                do {
                                  n2 = n2 + -1 | 0;
                                  a[n2 >> 0] = 48;
                                } while ((N2 - n2 | 0) < 2);
                              a[n2 + -1 >> 0] = (o2 >> 31 & 2) + 43;
                              u2 = n2 + -2 | 0;
                              a[u2 >> 0] = t2;
                              n2 = N2 - u2 | 0;
                            }
                            x2 = B2 + 1 + f2 + ((v2 | 0) != 0 & 1) + n2 | 0;
                            lG(e2, 32, H2, x2, F2);
                            if (!(c[e2 >> 2] & 32))
                              hG(D2, B2, e2);
                            lG(e2, 48, H2, x2, F2 ^ 65536);
                            do
                              if (q2) {
                                q2 = z2 >>> 0 > A2 >>> 0 ? A2 : z2;
                                o2 = q2;
                                do {
                                  n2 = kG(c[o2 >> 2] | 0, 0, L2) | 0;
                                  do
                                    if ((o2 | 0) == (q2 | 0)) {
                                      if ((n2 | 0) != (L2 | 0))
                                        break;
                                      a[O2 + 588 + 8 >> 0] = 48;
                                      n2 = O2 + 588 + 8 | 0;
                                    } else {
                                      if (n2 >>> 0 <= (O2 + 588 | 0) >>> 0)
                                        break;
                                      ZG(O2 + 588 | 0, 48, n2 - M2 | 0) | 0;
                                      do
                                        n2 = n2 + -1 | 0;
                                      while (n2 >>> 0 > (O2 + 588 | 0) >>> 0);
                                    }
                                  while (0);
                                  if (!(c[e2 >> 2] & 32))
                                    hG(n2, L2 - n2 | 0, e2);
                                  o2 = o2 + 4 | 0;
                                } while (o2 >>> 0 <= A2 >>> 0);
                                do
                                  if (v2 | 0) {
                                    if (c[e2 >> 2] & 32 | 0)
                                      break;
                                    hG(19235, 1, e2);
                                  }
                                while (0);
                                if ((f2 | 0) > 0 & o2 >>> 0 < y2 >>> 0)
                                  while (1) {
                                    n2 = kG(c[o2 >> 2] | 0, 0, L2) | 0;
                                    if (n2 >>> 0 > (O2 + 588 | 0) >>> 0) {
                                      ZG(O2 + 588 | 0, 48, n2 - M2 | 0) | 0;
                                      do
                                        n2 = n2 + -1 | 0;
                                      while (n2 >>> 0 > (O2 + 588 | 0) >>> 0);
                                    }
                                    if (!(c[e2 >> 2] & 32))
                                      hG(n2, (f2 | 0) > 9 ? 9 : f2, e2);
                                    o2 = o2 + 4 | 0;
                                    n2 = f2 + -9 | 0;
                                    if (!((f2 | 0) > 9 & o2 >>> 0 < y2 >>> 0)) {
                                      f2 = n2;
                                      break;
                                    } else
                                      f2 = n2;
                                  }
                                lG(e2, 48, f2 + 9 | 0, 9, 0);
                              } else {
                                t2 = w2 ? y2 : z2 + 4 | 0;
                                if ((f2 | 0) > -1) {
                                  r2 = (r2 | 0) == 0;
                                  q2 = z2;
                                  do {
                                    n2 = kG(c[q2 >> 2] | 0, 0, L2) | 0;
                                    if ((n2 | 0) == (L2 | 0)) {
                                      a[O2 + 588 + 8 >> 0] = 48;
                                      n2 = O2 + 588 + 8 | 0;
                                    }
                                    do
                                      if ((q2 | 0) == (z2 | 0)) {
                                        o2 = n2 + 1 | 0;
                                        if (!(c[e2 >> 2] & 32))
                                          hG(n2, 1, e2);
                                        if (r2 & (f2 | 0) < 1) {
                                          n2 = o2;
                                          break;
                                        }
                                        if (c[e2 >> 2] & 32 | 0) {
                                          n2 = o2;
                                          break;
                                        }
                                        hG(19235, 1, e2);
                                        n2 = o2;
                                      } else {
                                        if (n2 >>> 0 <= (O2 + 588 | 0) >>> 0)
                                          break;
                                        ZG(O2 + 588 | 0, 48, n2 + (0 - M2) | 0) | 0;
                                        do
                                          n2 = n2 + -1 | 0;
                                        while (n2 >>> 0 > (O2 + 588 | 0) >>> 0);
                                      }
                                    while (0);
                                    o2 = L2 - n2 | 0;
                                    if (!(c[e2 >> 2] & 32))
                                      hG(n2, (f2 | 0) > (o2 | 0) ? o2 : f2, e2);
                                    f2 = f2 - o2 | 0;
                                    q2 = q2 + 4 | 0;
                                  } while (q2 >>> 0 < t2 >>> 0 & (f2 | 0) > -1);
                                }
                                lG(e2, 48, f2 + 18 | 0, 18, 0);
                                if (c[e2 >> 2] & 32 | 0)
                                  break;
                                hG(u2, N2 - u2 | 0, e2);
                              }
                            while (0);
                            lG(e2, 32, H2, x2, F2 ^ 8192);
                            f2 = (x2 | 0) < (H2 | 0) ? H2 : x2;
                          } else {
                            q2 = p2 != p2 | false;
                            n2 = q2 ? 0 : B2;
                            lG(e2, 32, H2, n2 + 3 | 0, o2);
                            f2 = c[e2 >> 2] | 0;
                            if (!(f2 & 32)) {
                              hG(D2, n2, e2);
                              f2 = c[e2 >> 2] | 0;
                            }
                            if (!(f2 & 32))
                              hG(q2 ? E2 & 32 | 0 ? 19227 : 19231 : E2 & 32 | 0 ? 19219 : 19223, 3, e2);
                            lG(e2, 32, H2, n2 + 3 | 0, F2 ^ 8192);
                            f2 = (n2 + 3 | 0) < (H2 | 0) ? H2 : n2 + 3 | 0;
                          }
                        while (0);
                        n2 = f2;
                        r2 = I2;
                        w2 = G2;
                        continue a;
                      }
                      default: {
                        f2 = w2;
                        o2 = F2;
                        u2 = r2;
                        w2 = 0;
                        v2 = 17291;
                        n2 = K2;
                      }
                    }
                  while (0);
                g:
                  do
                    if ((J2 | 0) == 66) {
                      n2 = c[O2 >> 2] | 0;
                      o2 = c[O2 + 4 >> 2] | 0;
                      q2 = u2 & 32;
                      if (!((n2 | 0) == 0 & (o2 | 0) == 0)) {
                        f2 = K2;
                        do {
                          f2 = f2 + -1 | 0;
                          a[f2 >> 0] = d[17275 + (n2 & 15) >> 0] | q2;
                          n2 = aH(n2 | 0, o2 | 0, 4) | 0;
                          o2 = C;
                        } while (!((n2 | 0) == 0 & (o2 | 0) == 0));
                        if ((t2 & 8 | 0) == 0 | (c[O2 >> 2] | 0) == 0 & (c[O2 + 4 >> 2] | 0) == 0) {
                          n2 = t2;
                          t2 = 0;
                          q2 = 17291;
                          J2 = 79;
                        } else {
                          n2 = t2;
                          t2 = 2;
                          q2 = 17291 + (u2 >> 4) | 0;
                          J2 = 79;
                        }
                      } else {
                        f2 = K2;
                        n2 = t2;
                        t2 = 0;
                        q2 = 17291;
                        J2 = 79;
                      }
                    } else if ((J2 | 0) == 78) {
                      f2 = kG(f2, n2, K2) | 0;
                      n2 = F2;
                      t2 = o2;
                      J2 = 79;
                    } else if ((J2 | 0) == 92) {
                      J2 = 0;
                      F2 = fG(n2, 0, r2) | 0;
                      f2 = n2;
                      u2 = (F2 | 0) == 0 ? r2 : F2 - n2 | 0;
                      w2 = 0;
                      v2 = 17291;
                      n2 = (F2 | 0) == 0 ? n2 + r2 | 0 : F2;
                    } else if ((J2 | 0) == 96) {
                      J2 = 0;
                      o2 = 0;
                      n2 = 0;
                      t2 = f2;
                      while (1) {
                        q2 = c[t2 >> 2] | 0;
                        if (!q2)
                          break;
                        n2 = mG(O2 + 528 | 0, q2) | 0;
                        if ((n2 | 0) < 0 | n2 >>> 0 > (r2 - o2 | 0) >>> 0)
                          break;
                        o2 = n2 + o2 | 0;
                        if (r2 >>> 0 > o2 >>> 0)
                          t2 = t2 + 4 | 0;
                        else
                          break;
                      }
                      if ((n2 | 0) < 0) {
                        m2 = -1;
                        break a;
                      }
                      lG(e2, 32, H2, o2, F2);
                      if (!o2) {
                        f2 = 0;
                        J2 = 107;
                      } else {
                        q2 = 0;
                        while (1) {
                          n2 = c[f2 >> 2] | 0;
                          if (!n2) {
                            f2 = o2;
                            J2 = 107;
                            break g;
                          }
                          n2 = mG(O2 + 528 | 0, n2) | 0;
                          q2 = n2 + q2 | 0;
                          if ((q2 | 0) > (o2 | 0)) {
                            f2 = o2;
                            J2 = 107;
                            break g;
                          }
                          if (!(c[e2 >> 2] & 32))
                            hG(O2 + 528 | 0, n2, e2);
                          if (q2 >>> 0 >= o2 >>> 0) {
                            f2 = o2;
                            J2 = 107;
                            break;
                          } else
                            f2 = f2 + 4 | 0;
                        }
                      }
                    }
                  while (0);
                if ((J2 | 0) == 107) {
                  J2 = 0;
                  lG(e2, 32, H2, f2, F2 ^ 8192);
                  n2 = (H2 | 0) > (f2 | 0) ? H2 : f2;
                  r2 = I2;
                  w2 = G2;
                  continue;
                }
                if ((J2 | 0) == 79) {
                  J2 = 0;
                  o2 = (r2 | 0) > -1 ? n2 & -65537 : n2;
                  n2 = (c[O2 >> 2] | 0) != 0 | (c[O2 + 4 >> 2] | 0) != 0;
                  if ((r2 | 0) != 0 | n2) {
                    u2 = (n2 & 1 ^ 1) + (K2 - f2) | 0;
                    u2 = (r2 | 0) > (u2 | 0) ? r2 : u2;
                    w2 = t2;
                    v2 = q2;
                    n2 = K2;
                  } else {
                    f2 = K2;
                    u2 = 0;
                    w2 = t2;
                    v2 = q2;
                    n2 = K2;
                  }
                }
                t2 = n2 - f2 | 0;
                q2 = (u2 | 0) < (t2 | 0) ? t2 : u2;
                r2 = w2 + q2 | 0;
                n2 = (H2 | 0) < (r2 | 0) ? r2 : H2;
                lG(e2, 32, n2, r2, o2);
                if (!(c[e2 >> 2] & 32))
                  hG(v2, w2, e2);
                lG(e2, 48, n2, r2, o2 ^ 65536);
                lG(e2, 48, q2, t2, 0);
                if (!(c[e2 >> 2] & 32))
                  hG(f2, t2, e2);
                lG(e2, 32, n2, r2, o2 ^ 8192);
                r2 = I2;
                w2 = G2;
              }
            h:
              do
                if ((J2 | 0) == 254) {
                  if (!e2)
                    if (!r2)
                      m2 = 0;
                    else {
                      m2 = 1;
                      while (1) {
                        f2 = c[l2 + (m2 << 2) >> 2] | 0;
                        if (!f2) {
                          f2 = 0;
                          break;
                        }
                        jG(j2 + (m2 << 3) | 0, f2, g2);
                        m2 = m2 + 1 | 0;
                        if ((m2 | 0) >= 10) {
                          m2 = 1;
                          break h;
                        }
                      }
                      while (1) {
                        m2 = m2 + 1 | 0;
                        if (f2 | 0) {
                          m2 = -1;
                          break h;
                        }
                        if ((m2 | 0) >= 10) {
                          m2 = 1;
                          break h;
                        }
                        f2 = c[l2 + (m2 << 2) >> 2] | 0;
                      }
                    }
                }
              while (0);
            i = O2;
            return m2 | 0;
          }
          function hG(b2, d2, e2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, g2 = 0, h2 = 0;
            f2 = c[e2 + 16 >> 2] | 0;
            if (!f2) {
              if (!(iG(e2) | 0)) {
                g2 = c[e2 + 16 >> 2] | 0;
                h2 = 5;
              }
            } else {
              g2 = f2;
              h2 = 5;
            }
            a:
              do
                if ((h2 | 0) == 5) {
                  f2 = c[e2 + 20 >> 2] | 0;
                  if ((g2 - f2 | 0) >>> 0 < d2 >>> 0) {
                    Eb[c[e2 + 36 >> 2] & 63](e2, b2, d2) | 0;
                    break;
                  }
                  b:
                    do
                      if ((a[e2 + 75 >> 0] | 0) > -1) {
                        h2 = d2;
                        while (1) {
                          if (!h2) {
                            g2 = d2;
                            break b;
                          }
                          g2 = h2 + -1 | 0;
                          if ((a[b2 + g2 >> 0] | 0) == 10)
                            break;
                          else
                            h2 = g2;
                        }
                        if ((Eb[c[e2 + 36 >> 2] & 63](e2, b2, h2) | 0) >>> 0 < h2 >>> 0)
                          break a;
                        g2 = d2 - h2 | 0;
                        b2 = b2 + h2 | 0;
                        f2 = c[e2 + 20 >> 2] | 0;
                      } else
                        g2 = d2;
                    while (0);
                  bH(f2 | 0, b2 | 0, g2 | 0) | 0;
                  c[e2 + 20 >> 2] = (c[e2 + 20 >> 2] | 0) + g2;
                }
              while (0);
            return;
          }
          function iG(b2) {
            b2 = b2 | 0;
            var d2 = 0;
            d2 = a[b2 + 74 >> 0] | 0;
            a[b2 + 74 >> 0] = d2 + 255 | d2;
            d2 = c[b2 >> 2] | 0;
            if (!(d2 & 8)) {
              c[b2 + 8 >> 2] = 0;
              c[b2 + 4 >> 2] = 0;
              d2 = c[b2 + 44 >> 2] | 0;
              c[b2 + 28 >> 2] = d2;
              c[b2 + 20 >> 2] = d2;
              c[b2 + 16 >> 2] = d2 + (c[b2 + 48 >> 2] | 0);
              d2 = 0;
            } else {
              c[b2 >> 2] = d2 | 32;
              d2 = -1;
            }
            return d2 | 0;
          }
          function jG(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0;
            a:
              do
                if (b2 >>> 0 <= 20)
                  do
                    switch (b2 | 0) {
                      case 9: {
                        e2 = (c[d2 >> 2] | 0) + (4 - 1) & ~(4 - 1);
                        b2 = c[e2 >> 2] | 0;
                        c[d2 >> 2] = e2 + 4;
                        c[a2 >> 2] = b2;
                        break a;
                      }
                      case 10: {
                        b2 = (c[d2 >> 2] | 0) + (4 - 1) & ~(4 - 1);
                        e2 = c[b2 >> 2] | 0;
                        c[d2 >> 2] = b2 + 4;
                        c[a2 >> 2] = e2;
                        c[a2 + 4 >> 2] = ((e2 | 0) < 0) << 31 >> 31;
                        break a;
                      }
                      case 11: {
                        b2 = (c[d2 >> 2] | 0) + (4 - 1) & ~(4 - 1);
                        e2 = c[b2 >> 2] | 0;
                        c[d2 >> 2] = b2 + 4;
                        c[a2 >> 2] = e2;
                        c[a2 + 4 >> 2] = 0;
                        break a;
                      }
                      case 12: {
                        f2 = (c[d2 >> 2] | 0) + (8 - 1) & ~(8 - 1);
                        b2 = c[f2 >> 2] | 0;
                        e2 = c[f2 + 4 >> 2] | 0;
                        c[d2 >> 2] = f2 + 8;
                        c[a2 >> 2] = b2;
                        c[a2 + 4 >> 2] = e2;
                        break a;
                      }
                      case 13: {
                        e2 = (c[d2 >> 2] | 0) + (4 - 1) & ~(4 - 1);
                        f2 = c[e2 >> 2] | 0;
                        c[d2 >> 2] = e2 + 4;
                        c[a2 >> 2] = (f2 & 65535) << 16 >> 16;
                        c[a2 + 4 >> 2] = (((f2 & 65535) << 16 >> 16 | 0) < 0) << 31 >> 31;
                        break a;
                      }
                      case 14: {
                        e2 = (c[d2 >> 2] | 0) + (4 - 1) & ~(4 - 1);
                        f2 = c[e2 >> 2] | 0;
                        c[d2 >> 2] = e2 + 4;
                        c[a2 >> 2] = f2 & 65535;
                        c[a2 + 4 >> 2] = 0;
                        break a;
                      }
                      case 15: {
                        e2 = (c[d2 >> 2] | 0) + (4 - 1) & ~(4 - 1);
                        f2 = c[e2 >> 2] | 0;
                        c[d2 >> 2] = e2 + 4;
                        c[a2 >> 2] = (f2 & 255) << 24 >> 24;
                        c[a2 + 4 >> 2] = (((f2 & 255) << 24 >> 24 | 0) < 0) << 31 >> 31;
                        break a;
                      }
                      case 16: {
                        e2 = (c[d2 >> 2] | 0) + (4 - 1) & ~(4 - 1);
                        f2 = c[e2 >> 2] | 0;
                        c[d2 >> 2] = e2 + 4;
                        c[a2 >> 2] = f2 & 255;
                        c[a2 + 4 >> 2] = 0;
                        break a;
                      }
                      case 17: {
                        f2 = (c[d2 >> 2] | 0) + (8 - 1) & ~(8 - 1);
                        g2 = +h[f2 >> 3];
                        c[d2 >> 2] = f2 + 8;
                        h[a2 >> 3] = g2;
                        break a;
                      }
                      case 18: {
                        f2 = (c[d2 >> 2] | 0) + (8 - 1) & ~(8 - 1);
                        g2 = +h[f2 >> 3];
                        c[d2 >> 2] = f2 + 8;
                        h[a2 >> 3] = g2;
                        break a;
                      }
                      default:
                        break a;
                    }
                  while (0);
              while (0);
            return;
          }
          function kG(b2, c2, d2) {
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = d2 | 0;
            var e2 = 0;
            if (c2 >>> 0 > 0 | (c2 | 0) == 0 & b2 >>> 0 > 4294967295)
              while (1) {
                e2 = lH(b2 | 0, c2 | 0, 10, 0) | 0;
                d2 = d2 + -1 | 0;
                a[d2 >> 0] = e2 | 48;
                e2 = b2;
                b2 = kH(b2 | 0, c2 | 0, 10, 0) | 0;
                if (!(c2 >>> 0 > 9 | (c2 | 0) == 9 & e2 >>> 0 > 4294967295))
                  break;
                else
                  c2 = C;
              }
            if (b2)
              while (1) {
                d2 = d2 + -1 | 0;
                a[d2 >> 0] = (b2 >>> 0) % 10 | 0 | 48;
                if (b2 >>> 0 < 10)
                  break;
                else
                  b2 = (b2 >>> 0) / 10 | 0;
              }
            return d2 | 0;
          }
          function lG(a2, b2, d2, e2, f2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            var g2 = 0, h2 = 0;
            h2 = i;
            i = i + 256 | 0;
            do
              if ((d2 | 0) > (e2 | 0) & (f2 & 73728 | 0) == 0) {
                ZG(h2 | 0, b2 | 0, ((d2 - e2 | 0) >>> 0 > 256 ? 256 : d2 - e2 | 0) | 0) | 0;
                f2 = c[a2 >> 2] | 0;
                if ((d2 - e2 | 0) >>> 0 > 255) {
                  g2 = d2 - e2 | 0;
                  b2 = f2;
                  f2 = (f2 & 32 | 0) == 0;
                  do {
                    if (f2) {
                      hG(h2, 256, a2);
                      b2 = c[a2 >> 2] | 0;
                    }
                    g2 = g2 + -256 | 0;
                    f2 = (b2 & 32 | 0) == 0;
                  } while (g2 >>> 0 > 255);
                  if (f2)
                    b2 = d2 - e2 & 255;
                  else
                    break;
                } else if (!(f2 & 32))
                  b2 = d2 - e2 | 0;
                else
                  break;
                hG(h2, b2, a2);
              }
            while (0);
            i = h2;
            return;
          }
          function mG(b2, d2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            do
              if (!b2)
                b2 = 0;
              else {
                if (d2 >>> 0 < 128) {
                  a[b2 >> 0] = d2;
                  b2 = 1;
                  break;
                }
                if (d2 >>> 0 < 2048) {
                  a[b2 >> 0] = d2 >>> 6 | 192;
                  a[b2 + 1 >> 0] = d2 & 63 | 128;
                  b2 = 2;
                  break;
                }
                if (d2 >>> 0 < 55296 | (d2 & -8192 | 0) == 57344) {
                  a[b2 >> 0] = d2 >>> 12 | 224;
                  a[b2 + 1 >> 0] = d2 >>> 6 & 63 | 128;
                  a[b2 + 2 >> 0] = d2 & 63 | 128;
                  b2 = 3;
                  break;
                }
                if ((d2 + -65536 | 0) >>> 0 < 1048576) {
                  a[b2 >> 0] = d2 >>> 18 | 240;
                  a[b2 + 1 >> 0] = d2 >>> 12 & 63 | 128;
                  a[b2 + 2 >> 0] = d2 >>> 6 & 63 | 128;
                  a[b2 + 3 >> 0] = d2 & 63 | 128;
                  b2 = 4;
                  break;
                }
                if (true)
                  b2 = 22816;
                else
                  b2 = c[(eH() | 0) + 64 >> 2] | 0;
                c[b2 >> 2] = 84;
                b2 = -1;
              }
            while (0);
            return b2 | 0;
          }
          function nG(a2, b2) {
            a2 = +a2;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0;
            h[k >> 3] = a2;
            d2 = c[k >> 2] | 0;
            e2 = c[k + 4 >> 2] | 0;
            f2 = aH(d2 | 0, e2 | 0, 52) | 0;
            switch (f2 & 2047 | 0) {
              case 0: {
                if (a2 != 0) {
                  a2 = +nG(a2 * 18446744073709552e3, b2);
                  d2 = (c[b2 >> 2] | 0) + -64 | 0;
                } else
                  d2 = 0;
                c[b2 >> 2] = d2;
                break;
              }
              case 2047:
                break;
              default: {
                c[b2 >> 2] = (f2 & 2047) + -1022;
                c[k >> 2] = d2;
                c[k + 4 >> 2] = e2 & -2146435073 | 1071644672;
                a2 = +h[k >> 3];
              }
            }
            return +a2;
          }
          function oG(a2) {
            a2 = +a2;
            var b2 = 0, d2 = 0, e2 = 0, f2 = 0, h2 = 0, i2 = 0;
            i2 = (g[k >> 2] = a2, c[k >> 2] | 0);
            a:
              do
                if ((i2 >>> 23 & 255 | 0) == 255)
                  a2 = a2 * 6.2831854820251465 / (a2 * 6.2831854820251465);
                else {
                  if (i2 << 1 >>> 0 <= 2173837238)
                    return +((i2 << 1 | 0) == -2121130058 ? a2 * 0 : a2);
                  if (!(i2 >>> 23 & 255)) {
                    if ((i2 << 9 | 0) > -1) {
                      b2 = 0;
                      d2 = i2 << 9;
                      do {
                        b2 = b2 + -1 | 0;
                        d2 = d2 << 1;
                      } while ((d2 | 0) > -1);
                      d2 = b2;
                    } else
                      d2 = 0;
                    b2 = d2;
                    e2 = i2 << 1 - d2;
                  } else {
                    b2 = i2 >>> 23 & 255;
                    e2 = i2 & 8388607 | 8388608;
                  }
                  f2 = e2 + -13176795 | 0;
                  b:
                    do
                      if ((b2 | 0) > 129) {
                        h2 = (f2 | 0) > -1;
                        d2 = f2;
                        while (1) {
                          if (h2) {
                            if ((e2 | 0) == 13176795)
                              break;
                          } else
                            d2 = e2;
                          e2 = d2 << 1;
                          b2 = b2 + -1 | 0;
                          if ((b2 | 0) > 129) {
                            h2 = (e2 + -13176795 | 0) > -1;
                            d2 = e2 + -13176795 | 0;
                          } else {
                            d2 = e2 + -13176795 | 0;
                            f2 = (e2 + -13176795 | 0) > -1;
                            break b;
                          }
                        }
                        a2 = a2 * 0;
                        break a;
                      } else {
                        d2 = f2;
                        f2 = (f2 | 0) > -1;
                      }
                    while (0);
                  if (f2) {
                    if ((e2 | 0) == 13176795) {
                      a2 = a2 * 0;
                      break;
                    }
                  } else
                    d2 = e2;
                  if (d2 >>> 0 < 8388608)
                    do {
                      d2 = d2 << 1;
                      b2 = b2 + -1 | 0;
                    } while (d2 >>> 0 < 8388608);
                  if ((b2 | 0) > 0)
                    b2 = d2 + -8388608 | b2 << 23;
                  else
                    b2 = d2 >>> (1 - b2 | 0);
                  a2 = (c[k >> 2] = b2 | i2 & -2147483648, +g[k >> 2]);
                }
              while (0);
            return +a2;
          }
          function pG(b2, e2) {
            b2 = b2 | 0;
            e2 = e2 | 0;
            var f2 = 0, g2 = 0, h2 = 0;
            h2 = i;
            i = i + 16 | 0;
            a[h2 >> 0] = e2;
            f2 = c[b2 + 16 >> 2] | 0;
            if (!f2)
              if (!(iG(b2) | 0)) {
                f2 = c[b2 + 16 >> 2] | 0;
                g2 = 4;
              } else
                f2 = -1;
            else
              g2 = 4;
            do
              if ((g2 | 0) == 4) {
                g2 = c[b2 + 20 >> 2] | 0;
                if (g2 >>> 0 < f2 >>> 0 ? (e2 & 255 | 0) != (a[b2 + 75 >> 0] | 0) : 0) {
                  c[b2 + 20 >> 2] = g2 + 1;
                  a[g2 >> 0] = e2;
                  f2 = e2 & 255;
                  break;
                }
                if ((Eb[c[b2 + 36 >> 2] & 63](b2, h2, 1) | 0) == 1)
                  f2 = d[h2 >> 0] | 0;
                else
                  f2 = -1;
              }
            while (0);
            i = h2;
            return f2 | 0;
          }
          function qG(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0;
            F2 = i;
            i = i + 16 | 0;
            do
              if (a2 >>> 0 < 245) {
                o2 = a2 >>> 0 < 11 ? 16 : a2 + 11 & -8;
                g2 = c[5705] | 0;
                if (g2 >>> (o2 >>> 3) & 3 | 0) {
                  a2 = 22860 + ((g2 >>> (o2 >>> 3) & 1 ^ 1) + (o2 >>> 3) << 1 << 2) | 0;
                  b2 = c[a2 + 8 >> 2] | 0;
                  d2 = c[b2 + 8 >> 2] | 0;
                  do
                    if ((a2 | 0) != (d2 | 0)) {
                      if (d2 >>> 0 < (c[5709] | 0) >>> 0)
                        Ta();
                      if ((c[d2 + 12 >> 2] | 0) == (b2 | 0)) {
                        c[d2 + 12 >> 2] = a2;
                        c[a2 + 8 >> 2] = d2;
                        break;
                      } else
                        Ta();
                    } else
                      c[5705] = g2 & ~(1 << (g2 >>> (o2 >>> 3) & 1 ^ 1) + (o2 >>> 3));
                  while (0);
                  E2 = (g2 >>> (o2 >>> 3) & 1 ^ 1) + (o2 >>> 3) << 3;
                  c[b2 + 4 >> 2] = E2 | 3;
                  c[b2 + E2 + 4 >> 2] = c[b2 + E2 + 4 >> 2] | 1;
                  E2 = b2 + 8 | 0;
                  i = F2;
                  return E2 | 0;
                }
                b2 = c[5707] | 0;
                if (o2 >>> 0 > b2 >>> 0) {
                  if (g2 >>> (o2 >>> 3) | 0) {
                    a2 = g2 >>> (o2 >>> 3) << (o2 >>> 3) & (2 << (o2 >>> 3) | 0 - (2 << (o2 >>> 3)));
                    f2 = ((a2 & 0 - a2) + -1 | 0) >>> (((a2 & 0 - a2) + -1 | 0) >>> 12 & 16);
                    e2 = f2 >>> (f2 >>> 5 & 8) >>> (f2 >>> (f2 >>> 5 & 8) >>> 2 & 4);
                    e2 = (f2 >>> 5 & 8 | ((a2 & 0 - a2) + -1 | 0) >>> 12 & 16 | f2 >>> (f2 >>> 5 & 8) >>> 2 & 4 | e2 >>> 1 & 2 | e2 >>> (e2 >>> 1 & 2) >>> 1 & 1) + (e2 >>> (e2 >>> 1 & 2) >>> (e2 >>> (e2 >>> 1 & 2) >>> 1 & 1)) | 0;
                    f2 = c[22860 + (e2 << 1 << 2) + 8 >> 2] | 0;
                    a2 = c[f2 + 8 >> 2] | 0;
                    do
                      if ((22860 + (e2 << 1 << 2) | 0) != (a2 | 0)) {
                        if (a2 >>> 0 < (c[5709] | 0) >>> 0)
                          Ta();
                        if ((c[a2 + 12 >> 2] | 0) == (f2 | 0)) {
                          c[a2 + 12 >> 2] = 22860 + (e2 << 1 << 2);
                          c[22860 + (e2 << 1 << 2) + 8 >> 2] = a2;
                          h2 = c[5707] | 0;
                          break;
                        } else
                          Ta();
                      } else {
                        c[5705] = g2 & ~(1 << e2);
                        h2 = b2;
                      }
                    while (0);
                    c[f2 + 4 >> 2] = o2 | 3;
                    c[f2 + o2 + 4 >> 2] = (e2 << 3) - o2 | 1;
                    c[f2 + o2 + ((e2 << 3) - o2) >> 2] = (e2 << 3) - o2;
                    if (h2 | 0) {
                      d2 = c[5710] | 0;
                      b2 = h2 >>> 3;
                      a2 = c[5705] | 0;
                      if (a2 & 1 << b2) {
                        a2 = c[22860 + (b2 << 1 << 2) + 8 >> 2] | 0;
                        if (a2 >>> 0 < (c[5709] | 0) >>> 0)
                          Ta();
                        else {
                          j2 = 22860 + (b2 << 1 << 2) + 8 | 0;
                          k2 = a2;
                        }
                      } else {
                        c[5705] = a2 | 1 << b2;
                        j2 = 22860 + (b2 << 1 << 2) + 8 | 0;
                        k2 = 22860 + (b2 << 1 << 2) | 0;
                      }
                      c[j2 >> 2] = d2;
                      c[k2 + 12 >> 2] = d2;
                      c[d2 + 8 >> 2] = k2;
                      c[d2 + 12 >> 2] = 22860 + (b2 << 1 << 2);
                    }
                    c[5707] = (e2 << 3) - o2;
                    c[5710] = f2 + o2;
                    E2 = f2 + 8 | 0;
                    i = F2;
                    return E2 | 0;
                  }
                  a2 = c[5706] | 0;
                  if (a2) {
                    j2 = ((a2 & 0 - a2) + -1 | 0) >>> (((a2 & 0 - a2) + -1 | 0) >>> 12 & 16);
                    k2 = j2 >>> (j2 >>> 5 & 8) >>> (j2 >>> (j2 >>> 5 & 8) >>> 2 & 4);
                    k2 = c[23124 + ((j2 >>> 5 & 8 | ((a2 & 0 - a2) + -1 | 0) >>> 12 & 16 | j2 >>> (j2 >>> 5 & 8) >>> 2 & 4 | k2 >>> 1 & 2 | k2 >>> (k2 >>> 1 & 2) >>> 1 & 1) + (k2 >>> (k2 >>> 1 & 2) >>> (k2 >>> (k2 >>> 1 & 2) >>> 1 & 1)) << 2) >> 2] | 0;
                    j2 = (c[k2 + 4 >> 2] & -8) - o2 | 0;
                    b2 = k2;
                    while (1) {
                      a2 = c[b2 + 16 >> 2] | 0;
                      if (!a2) {
                        a2 = c[b2 + 20 >> 2] | 0;
                        if (!a2)
                          break;
                      }
                      b2 = (c[a2 + 4 >> 2] & -8) - o2 | 0;
                      E2 = b2 >>> 0 < j2 >>> 0;
                      j2 = E2 ? b2 : j2;
                      b2 = a2;
                      k2 = E2 ? a2 : k2;
                    }
                    f2 = c[5709] | 0;
                    if (k2 >>> 0 < f2 >>> 0)
                      Ta();
                    h2 = k2 + o2 | 0;
                    if (k2 >>> 0 >= h2 >>> 0)
                      Ta();
                    g2 = c[k2 + 24 >> 2] | 0;
                    a2 = c[k2 + 12 >> 2] | 0;
                    do
                      if ((a2 | 0) == (k2 | 0)) {
                        b2 = k2 + 20 | 0;
                        a2 = c[b2 >> 2] | 0;
                        if (!a2) {
                          b2 = k2 + 16 | 0;
                          a2 = c[b2 >> 2] | 0;
                          if (!a2) {
                            l2 = 0;
                            break;
                          }
                        }
                        while (1) {
                          d2 = a2 + 20 | 0;
                          e2 = c[d2 >> 2] | 0;
                          if (e2 | 0) {
                            a2 = e2;
                            b2 = d2;
                            continue;
                          }
                          d2 = a2 + 16 | 0;
                          e2 = c[d2 >> 2] | 0;
                          if (!e2)
                            break;
                          else {
                            a2 = e2;
                            b2 = d2;
                          }
                        }
                        if (b2 >>> 0 < f2 >>> 0)
                          Ta();
                        else {
                          c[b2 >> 2] = 0;
                          l2 = a2;
                          break;
                        }
                      } else {
                        b2 = c[k2 + 8 >> 2] | 0;
                        if (b2 >>> 0 < f2 >>> 0)
                          Ta();
                        if ((c[b2 + 12 >> 2] | 0) != (k2 | 0))
                          Ta();
                        if ((c[a2 + 8 >> 2] | 0) == (k2 | 0)) {
                          c[b2 + 12 >> 2] = a2;
                          c[a2 + 8 >> 2] = b2;
                          l2 = a2;
                          break;
                        } else
                          Ta();
                      }
                    while (0);
                    do
                      if (g2 | 0) {
                        a2 = c[k2 + 28 >> 2] | 0;
                        if ((k2 | 0) == (c[23124 + (a2 << 2) >> 2] | 0)) {
                          c[23124 + (a2 << 2) >> 2] = l2;
                          if (!l2) {
                            c[5706] = c[5706] & ~(1 << a2);
                            break;
                          }
                        } else {
                          if (g2 >>> 0 < (c[5709] | 0) >>> 0)
                            Ta();
                          if ((c[g2 + 16 >> 2] | 0) == (k2 | 0))
                            c[g2 + 16 >> 2] = l2;
                          else
                            c[g2 + 20 >> 2] = l2;
                          if (!l2)
                            break;
                        }
                        b2 = c[5709] | 0;
                        if (l2 >>> 0 < b2 >>> 0)
                          Ta();
                        c[l2 + 24 >> 2] = g2;
                        a2 = c[k2 + 16 >> 2] | 0;
                        do
                          if (a2 | 0)
                            if (a2 >>> 0 < b2 >>> 0)
                              Ta();
                            else {
                              c[l2 + 16 >> 2] = a2;
                              c[a2 + 24 >> 2] = l2;
                              break;
                            }
                        while (0);
                        a2 = c[k2 + 20 >> 2] | 0;
                        if (a2 | 0)
                          if (a2 >>> 0 < (c[5709] | 0) >>> 0)
                            Ta();
                          else {
                            c[l2 + 20 >> 2] = a2;
                            c[a2 + 24 >> 2] = l2;
                            break;
                          }
                      }
                    while (0);
                    if (j2 >>> 0 < 16) {
                      E2 = j2 + o2 | 0;
                      c[k2 + 4 >> 2] = E2 | 3;
                      E2 = k2 + E2 + 4 | 0;
                      c[E2 >> 2] = c[E2 >> 2] | 1;
                    } else {
                      c[k2 + 4 >> 2] = o2 | 3;
                      c[h2 + 4 >> 2] = j2 | 1;
                      c[h2 + j2 >> 2] = j2;
                      b2 = c[5707] | 0;
                      if (b2 | 0) {
                        d2 = c[5710] | 0;
                        a2 = c[5705] | 0;
                        if (a2 & 1 << (b2 >>> 3)) {
                          a2 = c[22860 + (b2 >>> 3 << 1 << 2) + 8 >> 2] | 0;
                          if (a2 >>> 0 < (c[5709] | 0) >>> 0)
                            Ta();
                          else {
                            m2 = 22860 + (b2 >>> 3 << 1 << 2) + 8 | 0;
                            n2 = a2;
                          }
                        } else {
                          c[5705] = a2 | 1 << (b2 >>> 3);
                          m2 = 22860 + (b2 >>> 3 << 1 << 2) + 8 | 0;
                          n2 = 22860 + (b2 >>> 3 << 1 << 2) | 0;
                        }
                        c[m2 >> 2] = d2;
                        c[n2 + 12 >> 2] = d2;
                        c[d2 + 8 >> 2] = n2;
                        c[d2 + 12 >> 2] = 22860 + (b2 >>> 3 << 1 << 2);
                      }
                      c[5707] = j2;
                      c[5710] = h2;
                    }
                    E2 = k2 + 8 | 0;
                    i = F2;
                    return E2 | 0;
                  }
                }
              } else if (a2 >>> 0 <= 4294967231) {
                o2 = a2 + 11 & -8;
                j2 = c[5706] | 0;
                if (j2) {
                  if ((a2 + 11 | 0) >>> 8)
                    if (o2 >>> 0 > 16777215)
                      h2 = 31;
                    else {
                      h2 = (a2 + 11 | 0) >>> 8 << ((((a2 + 11 | 0) >>> 8) + 1048320 | 0) >>> 16 & 8);
                      h2 = 14 - ((h2 + 520192 | 0) >>> 16 & 4 | (((a2 + 11 | 0) >>> 8) + 1048320 | 0) >>> 16 & 8 | ((h2 << ((h2 + 520192 | 0) >>> 16 & 4)) + 245760 | 0) >>> 16 & 2) + (h2 << ((h2 + 520192 | 0) >>> 16 & 4) << (((h2 << ((h2 + 520192 | 0) >>> 16 & 4)) + 245760 | 0) >>> 16 & 2) >>> 15) | 0;
                      h2 = o2 >>> (h2 + 7 | 0) & 1 | h2 << 1;
                    }
                  else
                    h2 = 0;
                  b2 = c[23124 + (h2 << 2) >> 2] | 0;
                  a:
                    do
                      if (!b2) {
                        d2 = 0 - o2 | 0;
                        a2 = 0;
                        b2 = 0;
                        x2 = 86;
                      } else {
                        d2 = 0 - o2 | 0;
                        a2 = 0;
                        f2 = o2 << ((h2 | 0) == 31 ? 0 : 25 - (h2 >>> 1) | 0);
                        g2 = b2;
                        b2 = 0;
                        while (1) {
                          e2 = c[g2 + 4 >> 2] & -8;
                          if ((e2 - o2 | 0) >>> 0 < d2 >>> 0)
                            if ((e2 | 0) == (o2 | 0)) {
                              d2 = e2 - o2 | 0;
                              a2 = g2;
                              b2 = g2;
                              x2 = 90;
                              break a;
                            } else {
                              d2 = e2 - o2 | 0;
                              b2 = g2;
                            }
                          e2 = c[g2 + 20 >> 2] | 0;
                          g2 = c[g2 + 16 + (f2 >>> 31 << 2) >> 2] | 0;
                          a2 = (e2 | 0) == 0 | (e2 | 0) == (g2 | 0) ? a2 : e2;
                          e2 = (g2 | 0) == 0;
                          if (e2) {
                            x2 = 86;
                            break;
                          } else
                            f2 = f2 << (e2 & 1 ^ 1);
                        }
                      }
                    while (0);
                  if ((x2 | 0) == 86) {
                    if ((a2 | 0) == 0 & (b2 | 0) == 0) {
                      a2 = 2 << h2;
                      if (!(j2 & (a2 | 0 - a2)))
                        break;
                      m2 = (j2 & (a2 | 0 - a2) & 0 - (j2 & (a2 | 0 - a2))) + -1 | 0;
                      n2 = m2 >>> (m2 >>> 12 & 16) >>> (m2 >>> (m2 >>> 12 & 16) >>> 5 & 8);
                      a2 = n2 >>> (n2 >>> 2 & 4) >>> (n2 >>> (n2 >>> 2 & 4) >>> 1 & 2);
                      a2 = c[23124 + ((m2 >>> (m2 >>> 12 & 16) >>> 5 & 8 | m2 >>> 12 & 16 | n2 >>> 2 & 4 | n2 >>> (n2 >>> 2 & 4) >>> 1 & 2 | a2 >>> 1 & 1) + (a2 >>> (a2 >>> 1 & 1)) << 2) >> 2] | 0;
                    }
                    if (!a2) {
                      j2 = d2;
                      k2 = b2;
                    } else
                      x2 = 90;
                  }
                  if ((x2 | 0) == 90)
                    while (1) {
                      x2 = 0;
                      n2 = (c[a2 + 4 >> 2] & -8) - o2 | 0;
                      e2 = n2 >>> 0 < d2 >>> 0;
                      d2 = e2 ? n2 : d2;
                      b2 = e2 ? a2 : b2;
                      e2 = c[a2 + 16 >> 2] | 0;
                      if (e2 | 0) {
                        a2 = e2;
                        x2 = 90;
                        continue;
                      }
                      a2 = c[a2 + 20 >> 2] | 0;
                      if (!a2) {
                        j2 = d2;
                        k2 = b2;
                        break;
                      } else
                        x2 = 90;
                    }
                  if ((k2 | 0) != 0 ? j2 >>> 0 < ((c[5707] | 0) - o2 | 0) >>> 0 : 0) {
                    f2 = c[5709] | 0;
                    if (k2 >>> 0 < f2 >>> 0)
                      Ta();
                    h2 = k2 + o2 | 0;
                    if (k2 >>> 0 >= h2 >>> 0)
                      Ta();
                    g2 = c[k2 + 24 >> 2] | 0;
                    a2 = c[k2 + 12 >> 2] | 0;
                    do
                      if ((a2 | 0) == (k2 | 0)) {
                        b2 = k2 + 20 | 0;
                        a2 = c[b2 >> 2] | 0;
                        if (!a2) {
                          b2 = k2 + 16 | 0;
                          a2 = c[b2 >> 2] | 0;
                          if (!a2) {
                            q2 = 0;
                            break;
                          }
                        }
                        while (1) {
                          d2 = a2 + 20 | 0;
                          e2 = c[d2 >> 2] | 0;
                          if (e2 | 0) {
                            a2 = e2;
                            b2 = d2;
                            continue;
                          }
                          d2 = a2 + 16 | 0;
                          e2 = c[d2 >> 2] | 0;
                          if (!e2)
                            break;
                          else {
                            a2 = e2;
                            b2 = d2;
                          }
                        }
                        if (b2 >>> 0 < f2 >>> 0)
                          Ta();
                        else {
                          c[b2 >> 2] = 0;
                          q2 = a2;
                          break;
                        }
                      } else {
                        b2 = c[k2 + 8 >> 2] | 0;
                        if (b2 >>> 0 < f2 >>> 0)
                          Ta();
                        if ((c[b2 + 12 >> 2] | 0) != (k2 | 0))
                          Ta();
                        if ((c[a2 + 8 >> 2] | 0) == (k2 | 0)) {
                          c[b2 + 12 >> 2] = a2;
                          c[a2 + 8 >> 2] = b2;
                          q2 = a2;
                          break;
                        } else
                          Ta();
                      }
                    while (0);
                    do
                      if (g2 | 0) {
                        a2 = c[k2 + 28 >> 2] | 0;
                        if ((k2 | 0) == (c[23124 + (a2 << 2) >> 2] | 0)) {
                          c[23124 + (a2 << 2) >> 2] = q2;
                          if (!q2) {
                            c[5706] = c[5706] & ~(1 << a2);
                            break;
                          }
                        } else {
                          if (g2 >>> 0 < (c[5709] | 0) >>> 0)
                            Ta();
                          if ((c[g2 + 16 >> 2] | 0) == (k2 | 0))
                            c[g2 + 16 >> 2] = q2;
                          else
                            c[g2 + 20 >> 2] = q2;
                          if (!q2)
                            break;
                        }
                        b2 = c[5709] | 0;
                        if (q2 >>> 0 < b2 >>> 0)
                          Ta();
                        c[q2 + 24 >> 2] = g2;
                        a2 = c[k2 + 16 >> 2] | 0;
                        do
                          if (a2 | 0)
                            if (a2 >>> 0 < b2 >>> 0)
                              Ta();
                            else {
                              c[q2 + 16 >> 2] = a2;
                              c[a2 + 24 >> 2] = q2;
                              break;
                            }
                        while (0);
                        a2 = c[k2 + 20 >> 2] | 0;
                        if (a2 | 0)
                          if (a2 >>> 0 < (c[5709] | 0) >>> 0)
                            Ta();
                          else {
                            c[q2 + 20 >> 2] = a2;
                            c[a2 + 24 >> 2] = q2;
                            break;
                          }
                      }
                    while (0);
                    do
                      if (j2 >>> 0 >= 16) {
                        c[k2 + 4 >> 2] = o2 | 3;
                        c[h2 + 4 >> 2] = j2 | 1;
                        c[h2 + j2 >> 2] = j2;
                        b2 = j2 >>> 3;
                        if (j2 >>> 0 < 256) {
                          a2 = c[5705] | 0;
                          if (a2 & 1 << b2) {
                            a2 = c[22860 + (b2 << 1 << 2) + 8 >> 2] | 0;
                            if (a2 >>> 0 < (c[5709] | 0) >>> 0)
                              Ta();
                            else {
                              r2 = 22860 + (b2 << 1 << 2) + 8 | 0;
                              s2 = a2;
                            }
                          } else {
                            c[5705] = a2 | 1 << b2;
                            r2 = 22860 + (b2 << 1 << 2) + 8 | 0;
                            s2 = 22860 + (b2 << 1 << 2) | 0;
                          }
                          c[r2 >> 2] = h2;
                          c[s2 + 12 >> 2] = h2;
                          c[h2 + 8 >> 2] = s2;
                          c[h2 + 12 >> 2] = 22860 + (b2 << 1 << 2);
                          break;
                        }
                        a2 = j2 >>> 8;
                        if (a2)
                          if (j2 >>> 0 > 16777215)
                            d2 = 31;
                          else {
                            d2 = a2 << ((a2 + 1048320 | 0) >>> 16 & 8) << (((a2 << ((a2 + 1048320 | 0) >>> 16 & 8)) + 520192 | 0) >>> 16 & 4);
                            d2 = 14 - (((a2 << ((a2 + 1048320 | 0) >>> 16 & 8)) + 520192 | 0) >>> 16 & 4 | (a2 + 1048320 | 0) >>> 16 & 8 | (d2 + 245760 | 0) >>> 16 & 2) + (d2 << ((d2 + 245760 | 0) >>> 16 & 2) >>> 15) | 0;
                            d2 = j2 >>> (d2 + 7 | 0) & 1 | d2 << 1;
                          }
                        else
                          d2 = 0;
                        e2 = 23124 + (d2 << 2) | 0;
                        c[h2 + 28 >> 2] = d2;
                        c[h2 + 16 + 4 >> 2] = 0;
                        c[h2 + 16 >> 2] = 0;
                        a2 = c[5706] | 0;
                        b2 = 1 << d2;
                        if (!(a2 & b2)) {
                          c[5706] = a2 | b2;
                          c[e2 >> 2] = h2;
                          c[h2 + 24 >> 2] = e2;
                          c[h2 + 12 >> 2] = h2;
                          c[h2 + 8 >> 2] = h2;
                          break;
                        }
                        d2 = j2 << ((d2 | 0) == 31 ? 0 : 25 - (d2 >>> 1) | 0);
                        e2 = c[e2 >> 2] | 0;
                        while (1) {
                          if ((c[e2 + 4 >> 2] & -8 | 0) == (j2 | 0)) {
                            x2 = 148;
                            break;
                          }
                          b2 = e2 + 16 + (d2 >>> 31 << 2) | 0;
                          a2 = c[b2 >> 2] | 0;
                          if (!a2) {
                            x2 = 145;
                            break;
                          } else {
                            d2 = d2 << 1;
                            e2 = a2;
                          }
                        }
                        if ((x2 | 0) == 145)
                          if (b2 >>> 0 < (c[5709] | 0) >>> 0)
                            Ta();
                          else {
                            c[b2 >> 2] = h2;
                            c[h2 + 24 >> 2] = e2;
                            c[h2 + 12 >> 2] = h2;
                            c[h2 + 8 >> 2] = h2;
                            break;
                          }
                        else if ((x2 | 0) == 148) {
                          a2 = e2 + 8 | 0;
                          b2 = c[a2 >> 2] | 0;
                          E2 = c[5709] | 0;
                          if (b2 >>> 0 >= E2 >>> 0 & e2 >>> 0 >= E2 >>> 0) {
                            c[b2 + 12 >> 2] = h2;
                            c[a2 >> 2] = h2;
                            c[h2 + 8 >> 2] = b2;
                            c[h2 + 12 >> 2] = e2;
                            c[h2 + 24 >> 2] = 0;
                            break;
                          } else
                            Ta();
                        }
                      } else {
                        E2 = j2 + o2 | 0;
                        c[k2 + 4 >> 2] = E2 | 3;
                        E2 = k2 + E2 + 4 | 0;
                        c[E2 >> 2] = c[E2 >> 2] | 1;
                      }
                    while (0);
                    E2 = k2 + 8 | 0;
                    i = F2;
                    return E2 | 0;
                  }
                }
              } else
                o2 = -1;
            while (0);
            d2 = c[5707] | 0;
            if (d2 >>> 0 >= o2 >>> 0) {
              a2 = d2 - o2 | 0;
              b2 = c[5710] | 0;
              if (a2 >>> 0 > 15) {
                E2 = b2 + o2 | 0;
                c[5710] = E2;
                c[5707] = a2;
                c[E2 + 4 >> 2] = a2 | 1;
                c[E2 + a2 >> 2] = a2;
                c[b2 + 4 >> 2] = o2 | 3;
              } else {
                c[5707] = 0;
                c[5710] = 0;
                c[b2 + 4 >> 2] = d2 | 3;
                c[b2 + d2 + 4 >> 2] = c[b2 + d2 + 4 >> 2] | 1;
              }
              E2 = b2 + 8 | 0;
              i = F2;
              return E2 | 0;
            }
            a2 = c[5708] | 0;
            if (a2 >>> 0 > o2 >>> 0) {
              C2 = a2 - o2 | 0;
              c[5708] = C2;
              E2 = c[5711] | 0;
              D2 = E2 + o2 | 0;
              c[5711] = D2;
              c[D2 + 4 >> 2] = C2 | 1;
              c[E2 + 4 >> 2] = o2 | 3;
              E2 = E2 + 8 | 0;
              i = F2;
              return E2 | 0;
            }
            if (!(c[5823] | 0)) {
              c[5825] = 4096;
              c[5824] = 4096;
              c[5826] = -1;
              c[5827] = -1;
              c[5828] = 0;
              c[5816] = 0;
              c[F2 >> 2] = F2 & -16 ^ 1431655768;
              c[5823] = F2 & -16 ^ 1431655768;
            }
            f2 = o2 + 48 | 0;
            d2 = c[5825] | 0;
            g2 = o2 + 47 | 0;
            h2 = d2 + g2 & 0 - d2;
            if (h2 >>> 0 <= o2 >>> 0) {
              E2 = 0;
              i = F2;
              return E2 | 0;
            }
            a2 = c[5815] | 0;
            if (a2 | 0 ? (s2 = c[5813] | 0, (s2 + h2 | 0) >>> 0 <= s2 >>> 0 | (s2 + h2 | 0) >>> 0 > a2 >>> 0) : 0) {
              E2 = 0;
              i = F2;
              return E2 | 0;
            }
            b:
              do
                if (!(c[5816] & 4)) {
                  b2 = c[5711] | 0;
                  c:
                    do
                      if (b2) {
                        e2 = 23268;
                        while (1) {
                          a2 = c[e2 >> 2] | 0;
                          if (a2 >>> 0 <= b2 >>> 0 ? (p2 = e2 + 4 | 0, (a2 + (c[p2 >> 2] | 0) | 0) >>> 0 > b2 >>> 0) : 0)
                            break;
                          a2 = c[e2 + 8 >> 2] | 0;
                          if (!a2) {
                            x2 = 171;
                            break c;
                          } else
                            e2 = a2;
                        }
                        a2 = d2 + g2 - (c[5708] | 0) & 0 - d2;
                        if (a2 >>> 0 < 2147483647) {
                          b2 = Xa(a2 | 0) | 0;
                          if ((b2 | 0) == ((c[e2 >> 2] | 0) + (c[p2 >> 2] | 0) | 0)) {
                            if ((b2 | 0) != (-1 | 0)) {
                              h2 = b2;
                              g2 = a2;
                              x2 = 191;
                              break b;
                            }
                          } else
                            x2 = 181;
                        }
                      } else
                        x2 = 171;
                    while (0);
                  do
                    if ((x2 | 0) == 171 ? (t2 = Xa(0) | 0, (t2 | 0) != (-1 | 0)) : 0) {
                      a2 = c[5824] | 0;
                      if (!(a2 + -1 & t2))
                        a2 = h2;
                      else
                        a2 = h2 - t2 + (a2 + -1 + t2 & 0 - a2) | 0;
                      b2 = c[5813] | 0;
                      d2 = b2 + a2 | 0;
                      if (a2 >>> 0 > o2 >>> 0 & a2 >>> 0 < 2147483647) {
                        s2 = c[5815] | 0;
                        if (s2 | 0 ? d2 >>> 0 <= b2 >>> 0 | d2 >>> 0 > s2 >>> 0 : 0)
                          break;
                        b2 = Xa(a2 | 0) | 0;
                        if ((b2 | 0) == (t2 | 0)) {
                          h2 = t2;
                          g2 = a2;
                          x2 = 191;
                          break b;
                        } else
                          x2 = 181;
                      }
                    }
                  while (0);
                  d:
                    do
                      if ((x2 | 0) == 181) {
                        d2 = 0 - a2 | 0;
                        do
                          if (f2 >>> 0 > a2 >>> 0 & (a2 >>> 0 < 2147483647 & (b2 | 0) != (-1 | 0)) ? (u2 = c[5825] | 0, u2 = g2 - a2 + u2 & 0 - u2, u2 >>> 0 < 2147483647) : 0)
                            if ((Xa(u2 | 0) | 0) == (-1 | 0)) {
                              Xa(d2 | 0) | 0;
                              break d;
                            } else {
                              a2 = u2 + a2 | 0;
                              break;
                            }
                        while (0);
                        if ((b2 | 0) != (-1 | 0)) {
                          h2 = b2;
                          g2 = a2;
                          x2 = 191;
                          break b;
                        }
                      }
                    while (0);
                  c[5816] = c[5816] | 4;
                  x2 = 188;
                } else
                  x2 = 188;
              while (0);
            if ((((x2 | 0) == 188 ? h2 >>> 0 < 2147483647 : 0) ? (v2 = Xa(h2 | 0) | 0, w2 = Xa(0) | 0, v2 >>> 0 < w2 >>> 0 & ((v2 | 0) != (-1 | 0) & (w2 | 0) != (-1 | 0))) : 0) ? (w2 - v2 | 0) >>> 0 > (o2 + 40 | 0) >>> 0 : 0) {
              h2 = v2;
              g2 = w2 - v2 | 0;
              x2 = 191;
            }
            if ((x2 | 0) == 191) {
              a2 = (c[5813] | 0) + g2 | 0;
              c[5813] = a2;
              if (a2 >>> 0 > (c[5814] | 0) >>> 0)
                c[5814] = a2;
              l2 = c[5711] | 0;
              do
                if (l2) {
                  f2 = 23268;
                  while (1) {
                    a2 = c[f2 >> 2] | 0;
                    b2 = f2 + 4 | 0;
                    d2 = c[b2 >> 2] | 0;
                    if ((h2 | 0) == (a2 + d2 | 0)) {
                      x2 = 201;
                      break;
                    }
                    e2 = c[f2 + 8 >> 2] | 0;
                    if (!e2)
                      break;
                    else
                      f2 = e2;
                  }
                  if (((x2 | 0) == 201 ? (c[f2 + 12 >> 2] & 8 | 0) == 0 : 0) ? l2 >>> 0 < h2 >>> 0 & l2 >>> 0 >= a2 >>> 0 : 0) {
                    c[b2 >> 2] = d2 + g2;
                    D2 = (l2 + 8 & 7 | 0) == 0 ? 0 : 0 - (l2 + 8) & 7;
                    E2 = g2 - D2 + (c[5708] | 0) | 0;
                    c[5711] = l2 + D2;
                    c[5708] = E2;
                    c[l2 + D2 + 4 >> 2] = E2 | 1;
                    c[l2 + D2 + E2 + 4 >> 2] = 40;
                    c[5712] = c[5827];
                    break;
                  }
                  a2 = c[5709] | 0;
                  if (h2 >>> 0 < a2 >>> 0) {
                    c[5709] = h2;
                    k2 = h2;
                  } else
                    k2 = a2;
                  b2 = h2 + g2 | 0;
                  a2 = 23268;
                  while (1) {
                    if ((c[a2 >> 2] | 0) == (b2 | 0)) {
                      x2 = 209;
                      break;
                    }
                    a2 = c[a2 + 8 >> 2] | 0;
                    if (!a2) {
                      b2 = 23268;
                      break;
                    }
                  }
                  if ((x2 | 0) == 209)
                    if (!(c[a2 + 12 >> 2] & 8)) {
                      c[a2 >> 2] = h2;
                      n2 = a2 + 4 | 0;
                      c[n2 >> 2] = (c[n2 >> 2] | 0) + g2;
                      n2 = h2 + 8 | 0;
                      n2 = h2 + ((n2 & 7 | 0) == 0 ? 0 : 0 - n2 & 7) | 0;
                      a2 = b2 + ((b2 + 8 & 7 | 0) == 0 ? 0 : 0 - (b2 + 8) & 7) | 0;
                      m2 = n2 + o2 | 0;
                      j2 = a2 - n2 - o2 | 0;
                      c[n2 + 4 >> 2] = o2 | 3;
                      do
                        if ((a2 | 0) != (l2 | 0)) {
                          if ((a2 | 0) == (c[5710] | 0)) {
                            E2 = (c[5707] | 0) + j2 | 0;
                            c[5707] = E2;
                            c[5710] = m2;
                            c[m2 + 4 >> 2] = E2 | 1;
                            c[m2 + E2 >> 2] = E2;
                            break;
                          }
                          h2 = c[a2 + 4 >> 2] | 0;
                          if ((h2 & 3 | 0) == 1) {
                            e:
                              do
                                if (h2 >>> 0 >= 256) {
                                  g2 = c[a2 + 24 >> 2] | 0;
                                  b2 = c[a2 + 12 >> 2] | 0;
                                  do
                                    if ((b2 | 0) == (a2 | 0)) {
                                      b2 = c[a2 + 16 + 4 >> 2] | 0;
                                      if (!b2) {
                                        b2 = c[a2 + 16 >> 2] | 0;
                                        if (!b2) {
                                          C2 = 0;
                                          break;
                                        } else
                                          f2 = a2 + 16 | 0;
                                      } else
                                        f2 = a2 + 16 + 4 | 0;
                                      while (1) {
                                        d2 = b2 + 20 | 0;
                                        e2 = c[d2 >> 2] | 0;
                                        if (e2 | 0) {
                                          b2 = e2;
                                          f2 = d2;
                                          continue;
                                        }
                                        d2 = b2 + 16 | 0;
                                        e2 = c[d2 >> 2] | 0;
                                        if (!e2)
                                          break;
                                        else {
                                          b2 = e2;
                                          f2 = d2;
                                        }
                                      }
                                      if (f2 >>> 0 < k2 >>> 0)
                                        Ta();
                                      else {
                                        c[f2 >> 2] = 0;
                                        C2 = b2;
                                        break;
                                      }
                                    } else {
                                      d2 = c[a2 + 8 >> 2] | 0;
                                      if (d2 >>> 0 < k2 >>> 0)
                                        Ta();
                                      if ((c[d2 + 12 >> 2] | 0) != (a2 | 0))
                                        Ta();
                                      if ((c[b2 + 8 >> 2] | 0) == (a2 | 0)) {
                                        c[d2 + 12 >> 2] = b2;
                                        c[b2 + 8 >> 2] = d2;
                                        C2 = b2;
                                        break;
                                      } else
                                        Ta();
                                    }
                                  while (0);
                                  if (!g2)
                                    break;
                                  b2 = c[a2 + 28 >> 2] | 0;
                                  do
                                    if ((a2 | 0) != (c[23124 + (b2 << 2) >> 2] | 0)) {
                                      if (g2 >>> 0 < (c[5709] | 0) >>> 0)
                                        Ta();
                                      if ((c[g2 + 16 >> 2] | 0) == (a2 | 0))
                                        c[g2 + 16 >> 2] = C2;
                                      else
                                        c[g2 + 20 >> 2] = C2;
                                      if (!C2)
                                        break e;
                                    } else {
                                      c[23124 + (b2 << 2) >> 2] = C2;
                                      if (C2 | 0)
                                        break;
                                      c[5706] = c[5706] & ~(1 << b2);
                                      break e;
                                    }
                                  while (0);
                                  d2 = c[5709] | 0;
                                  if (C2 >>> 0 < d2 >>> 0)
                                    Ta();
                                  c[C2 + 24 >> 2] = g2;
                                  b2 = c[a2 + 16 >> 2] | 0;
                                  do
                                    if (b2 | 0)
                                      if (b2 >>> 0 < d2 >>> 0)
                                        Ta();
                                      else {
                                        c[C2 + 16 >> 2] = b2;
                                        c[b2 + 24 >> 2] = C2;
                                        break;
                                      }
                                  while (0);
                                  b2 = c[a2 + 16 + 4 >> 2] | 0;
                                  if (!b2)
                                    break;
                                  if (b2 >>> 0 < (c[5709] | 0) >>> 0)
                                    Ta();
                                  else {
                                    c[C2 + 20 >> 2] = b2;
                                    c[b2 + 24 >> 2] = C2;
                                    break;
                                  }
                                } else {
                                  b2 = c[a2 + 8 >> 2] | 0;
                                  d2 = c[a2 + 12 >> 2] | 0;
                                  do
                                    if ((b2 | 0) != (22860 + (h2 >>> 3 << 1 << 2) | 0)) {
                                      if (b2 >>> 0 < k2 >>> 0)
                                        Ta();
                                      if ((c[b2 + 12 >> 2] | 0) == (a2 | 0))
                                        break;
                                      Ta();
                                    }
                                  while (0);
                                  if ((d2 | 0) == (b2 | 0)) {
                                    c[5705] = c[5705] & ~(1 << (h2 >>> 3));
                                    break;
                                  }
                                  do
                                    if ((d2 | 0) == (22860 + (h2 >>> 3 << 1 << 2) | 0))
                                      A2 = d2 + 8 | 0;
                                    else {
                                      if (d2 >>> 0 < k2 >>> 0)
                                        Ta();
                                      if ((c[d2 + 8 >> 2] | 0) == (a2 | 0)) {
                                        A2 = d2 + 8 | 0;
                                        break;
                                      }
                                      Ta();
                                    }
                                  while (0);
                                  c[b2 + 12 >> 2] = d2;
                                  c[A2 >> 2] = b2;
                                }
                              while (0);
                            a2 = a2 + (h2 & -8) | 0;
                            f2 = (h2 & -8) + j2 | 0;
                          } else
                            f2 = j2;
                          b2 = a2 + 4 | 0;
                          c[b2 >> 2] = c[b2 >> 2] & -2;
                          c[m2 + 4 >> 2] = f2 | 1;
                          c[m2 + f2 >> 2] = f2;
                          b2 = f2 >>> 3;
                          if (f2 >>> 0 < 256) {
                            a2 = c[5705] | 0;
                            do
                              if (!(a2 & 1 << b2)) {
                                c[5705] = a2 | 1 << b2;
                                D2 = 22860 + (b2 << 1 << 2) + 8 | 0;
                                E2 = 22860 + (b2 << 1 << 2) | 0;
                              } else {
                                a2 = c[22860 + (b2 << 1 << 2) + 8 >> 2] | 0;
                                if (a2 >>> 0 >= (c[5709] | 0) >>> 0) {
                                  D2 = 22860 + (b2 << 1 << 2) + 8 | 0;
                                  E2 = a2;
                                  break;
                                }
                                Ta();
                              }
                            while (0);
                            c[D2 >> 2] = m2;
                            c[E2 + 12 >> 2] = m2;
                            c[m2 + 8 >> 2] = E2;
                            c[m2 + 12 >> 2] = 22860 + (b2 << 1 << 2);
                            break;
                          }
                          a2 = f2 >>> 8;
                          do
                            if (!a2)
                              d2 = 0;
                            else {
                              if (f2 >>> 0 > 16777215) {
                                d2 = 31;
                                break;
                              }
                              d2 = a2 << ((a2 + 1048320 | 0) >>> 16 & 8) << (((a2 << ((a2 + 1048320 | 0) >>> 16 & 8)) + 520192 | 0) >>> 16 & 4);
                              d2 = 14 - (((a2 << ((a2 + 1048320 | 0) >>> 16 & 8)) + 520192 | 0) >>> 16 & 4 | (a2 + 1048320 | 0) >>> 16 & 8 | (d2 + 245760 | 0) >>> 16 & 2) + (d2 << ((d2 + 245760 | 0) >>> 16 & 2) >>> 15) | 0;
                              d2 = f2 >>> (d2 + 7 | 0) & 1 | d2 << 1;
                            }
                          while (0);
                          e2 = 23124 + (d2 << 2) | 0;
                          c[m2 + 28 >> 2] = d2;
                          c[m2 + 16 + 4 >> 2] = 0;
                          c[m2 + 16 >> 2] = 0;
                          a2 = c[5706] | 0;
                          b2 = 1 << d2;
                          if (!(a2 & b2)) {
                            c[5706] = a2 | b2;
                            c[e2 >> 2] = m2;
                            c[m2 + 24 >> 2] = e2;
                            c[m2 + 12 >> 2] = m2;
                            c[m2 + 8 >> 2] = m2;
                            break;
                          }
                          d2 = f2 << ((d2 | 0) == 31 ? 0 : 25 - (d2 >>> 1) | 0);
                          e2 = c[e2 >> 2] | 0;
                          while (1) {
                            if ((c[e2 + 4 >> 2] & -8 | 0) == (f2 | 0)) {
                              x2 = 279;
                              break;
                            }
                            b2 = e2 + 16 + (d2 >>> 31 << 2) | 0;
                            a2 = c[b2 >> 2] | 0;
                            if (!a2) {
                              x2 = 276;
                              break;
                            } else {
                              d2 = d2 << 1;
                              e2 = a2;
                            }
                          }
                          if ((x2 | 0) == 276)
                            if (b2 >>> 0 < (c[5709] | 0) >>> 0)
                              Ta();
                            else {
                              c[b2 >> 2] = m2;
                              c[m2 + 24 >> 2] = e2;
                              c[m2 + 12 >> 2] = m2;
                              c[m2 + 8 >> 2] = m2;
                              break;
                            }
                          else if ((x2 | 0) == 279) {
                            a2 = e2 + 8 | 0;
                            b2 = c[a2 >> 2] | 0;
                            E2 = c[5709] | 0;
                            if (b2 >>> 0 >= E2 >>> 0 & e2 >>> 0 >= E2 >>> 0) {
                              c[b2 + 12 >> 2] = m2;
                              c[a2 >> 2] = m2;
                              c[m2 + 8 >> 2] = b2;
                              c[m2 + 12 >> 2] = e2;
                              c[m2 + 24 >> 2] = 0;
                              break;
                            } else
                              Ta();
                          }
                        } else {
                          E2 = (c[5708] | 0) + j2 | 0;
                          c[5708] = E2;
                          c[5711] = m2;
                          c[m2 + 4 >> 2] = E2 | 1;
                        }
                      while (0);
                      E2 = n2 + 8 | 0;
                      i = F2;
                      return E2 | 0;
                    } else
                      b2 = 23268;
                  while (1) {
                    a2 = c[b2 >> 2] | 0;
                    if (a2 >>> 0 <= l2 >>> 0 ? (y2 = a2 + (c[b2 + 4 >> 2] | 0) | 0, y2 >>> 0 > l2 >>> 0) : 0)
                      break;
                    b2 = c[b2 + 8 >> 2] | 0;
                  }
                  f2 = y2 + -47 + ((y2 + -47 + 8 & 7 | 0) == 0 ? 0 : 0 - (y2 + -47 + 8) & 7) | 0;
                  f2 = f2 >>> 0 < (l2 + 16 | 0) >>> 0 ? l2 : f2;
                  a2 = h2 + 8 | 0;
                  a2 = (a2 & 7 | 0) == 0 ? 0 : 0 - a2 & 7;
                  E2 = h2 + a2 | 0;
                  a2 = g2 + -40 - a2 | 0;
                  c[5711] = E2;
                  c[5708] = a2;
                  c[E2 + 4 >> 2] = a2 | 1;
                  c[E2 + a2 + 4 >> 2] = 40;
                  c[5712] = c[5827];
                  c[f2 + 4 >> 2] = 27;
                  c[f2 + 8 >> 2] = c[5817];
                  c[f2 + 8 + 4 >> 2] = c[5818];
                  c[f2 + 8 + 8 >> 2] = c[5819];
                  c[f2 + 8 + 12 >> 2] = c[5820];
                  c[5817] = h2;
                  c[5818] = g2;
                  c[5820] = 0;
                  c[5819] = f2 + 8;
                  a2 = f2 + 24 | 0;
                  do {
                    a2 = a2 + 4 | 0;
                    c[a2 >> 2] = 7;
                  } while ((a2 + 4 | 0) >>> 0 < y2 >>> 0);
                  if ((f2 | 0) != (l2 | 0)) {
                    c[f2 + 4 >> 2] = c[f2 + 4 >> 2] & -2;
                    c[l2 + 4 >> 2] = f2 - l2 | 1;
                    c[f2 >> 2] = f2 - l2;
                    if ((f2 - l2 | 0) >>> 0 < 256) {
                      b2 = 22860 + ((f2 - l2 | 0) >>> 3 << 1 << 2) | 0;
                      a2 = c[5705] | 0;
                      if (a2 & 1 << ((f2 - l2 | 0) >>> 3)) {
                        a2 = c[b2 + 8 >> 2] | 0;
                        if (a2 >>> 0 < (c[5709] | 0) >>> 0)
                          Ta();
                        else {
                          z2 = b2 + 8 | 0;
                          B2 = a2;
                        }
                      } else {
                        c[5705] = a2 | 1 << ((f2 - l2 | 0) >>> 3);
                        z2 = b2 + 8 | 0;
                        B2 = b2;
                      }
                      c[z2 >> 2] = l2;
                      c[B2 + 12 >> 2] = l2;
                      c[l2 + 8 >> 2] = B2;
                      c[l2 + 12 >> 2] = b2;
                      break;
                    }
                    if ((f2 - l2 | 0) >>> 8)
                      if ((f2 - l2 | 0) >>> 0 > 16777215)
                        d2 = 31;
                      else {
                        d2 = (f2 - l2 | 0) >>> 8 << ((((f2 - l2 | 0) >>> 8) + 1048320 | 0) >>> 16 & 8);
                        d2 = 14 - ((d2 + 520192 | 0) >>> 16 & 4 | (((f2 - l2 | 0) >>> 8) + 1048320 | 0) >>> 16 & 8 | ((d2 << ((d2 + 520192 | 0) >>> 16 & 4)) + 245760 | 0) >>> 16 & 2) + (d2 << ((d2 + 520192 | 0) >>> 16 & 4) << (((d2 << ((d2 + 520192 | 0) >>> 16 & 4)) + 245760 | 0) >>> 16 & 2) >>> 15) | 0;
                        d2 = (f2 - l2 | 0) >>> (d2 + 7 | 0) & 1 | d2 << 1;
                      }
                    else
                      d2 = 0;
                    e2 = 23124 + (d2 << 2) | 0;
                    c[l2 + 28 >> 2] = d2;
                    c[l2 + 20 >> 2] = 0;
                    c[l2 + 16 >> 2] = 0;
                    a2 = c[5706] | 0;
                    b2 = 1 << d2;
                    if (!(a2 & b2)) {
                      c[5706] = a2 | b2;
                      c[e2 >> 2] = l2;
                      c[l2 + 24 >> 2] = e2;
                      c[l2 + 12 >> 2] = l2;
                      c[l2 + 8 >> 2] = l2;
                      break;
                    }
                    d2 = f2 - l2 << ((d2 | 0) == 31 ? 0 : 25 - (d2 >>> 1) | 0);
                    e2 = c[e2 >> 2] | 0;
                    while (1) {
                      if ((c[e2 + 4 >> 2] & -8 | 0) == (f2 - l2 | 0)) {
                        x2 = 305;
                        break;
                      }
                      b2 = e2 + 16 + (d2 >>> 31 << 2) | 0;
                      a2 = c[b2 >> 2] | 0;
                      if (!a2) {
                        x2 = 302;
                        break;
                      } else {
                        d2 = d2 << 1;
                        e2 = a2;
                      }
                    }
                    if ((x2 | 0) == 302)
                      if (b2 >>> 0 < (c[5709] | 0) >>> 0)
                        Ta();
                      else {
                        c[b2 >> 2] = l2;
                        c[l2 + 24 >> 2] = e2;
                        c[l2 + 12 >> 2] = l2;
                        c[l2 + 8 >> 2] = l2;
                        break;
                      }
                    else if ((x2 | 0) == 305) {
                      a2 = e2 + 8 | 0;
                      b2 = c[a2 >> 2] | 0;
                      E2 = c[5709] | 0;
                      if (b2 >>> 0 >= E2 >>> 0 & e2 >>> 0 >= E2 >>> 0) {
                        c[b2 + 12 >> 2] = l2;
                        c[a2 >> 2] = l2;
                        c[l2 + 8 >> 2] = b2;
                        c[l2 + 12 >> 2] = e2;
                        c[l2 + 24 >> 2] = 0;
                        break;
                      } else
                        Ta();
                    }
                  }
                } else {
                  E2 = c[5709] | 0;
                  if ((E2 | 0) == 0 | h2 >>> 0 < E2 >>> 0)
                    c[5709] = h2;
                  c[5817] = h2;
                  c[5818] = g2;
                  c[5820] = 0;
                  c[5714] = c[5823];
                  c[5713] = -1;
                  a2 = 0;
                  do {
                    E2 = 22860 + (a2 << 1 << 2) | 0;
                    c[E2 + 12 >> 2] = E2;
                    c[E2 + 8 >> 2] = E2;
                    a2 = a2 + 1 | 0;
                  } while ((a2 | 0) != 32);
                  E2 = h2 + 8 | 0;
                  E2 = (E2 & 7 | 0) == 0 ? 0 : 0 - E2 & 7;
                  D2 = h2 + E2 | 0;
                  E2 = g2 + -40 - E2 | 0;
                  c[5711] = D2;
                  c[5708] = E2;
                  c[D2 + 4 >> 2] = E2 | 1;
                  c[D2 + E2 + 4 >> 2] = 40;
                  c[5712] = c[5827];
                }
              while (0);
              a2 = c[5708] | 0;
              if (a2 >>> 0 > o2 >>> 0) {
                C2 = a2 - o2 | 0;
                c[5708] = C2;
                E2 = c[5711] | 0;
                D2 = E2 + o2 | 0;
                c[5711] = D2;
                c[D2 + 4 >> 2] = C2 | 1;
                c[E2 + 4 >> 2] = o2 | 3;
                E2 = E2 + 8 | 0;
                i = F2;
                return E2 | 0;
              }
            }
            if (true)
              a2 = 22816;
            else
              a2 = c[(eH() | 0) + 64 >> 2] | 0;
            c[a2 >> 2] = 12;
            E2 = 0;
            i = F2;
            return E2 | 0;
          }
          function rG(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0;
            if (!a2)
              return;
            h2 = c[5709] | 0;
            if ((a2 + -8 | 0) >>> 0 < h2 >>> 0)
              Ta();
            b2 = c[a2 + -4 >> 2] | 0;
            if ((b2 & 3 | 0) == 1)
              Ta();
            n2 = a2 + -8 + (b2 & -8) | 0;
            do
              if (!(b2 & 1)) {
                e2 = c[a2 + -8 >> 2] | 0;
                if (!(b2 & 3))
                  return;
                k2 = a2 + -8 + (0 - e2) | 0;
                j2 = e2 + (b2 & -8) | 0;
                if (k2 >>> 0 < h2 >>> 0)
                  Ta();
                if ((k2 | 0) == (c[5710] | 0)) {
                  a2 = c[n2 + 4 >> 2] | 0;
                  if ((a2 & 3 | 0) != 3) {
                    q2 = k2;
                    f2 = j2;
                    break;
                  }
                  c[5707] = j2;
                  c[n2 + 4 >> 2] = a2 & -2;
                  c[k2 + 4 >> 2] = j2 | 1;
                  c[k2 + j2 >> 2] = j2;
                  return;
                }
                if (e2 >>> 0 < 256) {
                  a2 = c[k2 + 8 >> 2] | 0;
                  b2 = c[k2 + 12 >> 2] | 0;
                  if ((a2 | 0) != (22860 + (e2 >>> 3 << 1 << 2) | 0)) {
                    if (a2 >>> 0 < h2 >>> 0)
                      Ta();
                    if ((c[a2 + 12 >> 2] | 0) != (k2 | 0))
                      Ta();
                  }
                  if ((b2 | 0) == (a2 | 0)) {
                    c[5705] = c[5705] & ~(1 << (e2 >>> 3));
                    q2 = k2;
                    f2 = j2;
                    break;
                  }
                  if ((b2 | 0) != (22860 + (e2 >>> 3 << 1 << 2) | 0)) {
                    if (b2 >>> 0 < h2 >>> 0)
                      Ta();
                    if ((c[b2 + 8 >> 2] | 0) != (k2 | 0))
                      Ta();
                    else
                      d2 = b2 + 8 | 0;
                  } else
                    d2 = b2 + 8 | 0;
                  c[a2 + 12 >> 2] = b2;
                  c[d2 >> 2] = a2;
                  q2 = k2;
                  f2 = j2;
                  break;
                }
                g2 = c[k2 + 24 >> 2] | 0;
                a2 = c[k2 + 12 >> 2] | 0;
                do
                  if ((a2 | 0) == (k2 | 0)) {
                    a2 = c[k2 + 16 + 4 >> 2] | 0;
                    if (!a2) {
                      a2 = c[k2 + 16 >> 2] | 0;
                      if (!a2) {
                        i2 = 0;
                        break;
                      } else
                        e2 = k2 + 16 | 0;
                    } else
                      e2 = k2 + 16 + 4 | 0;
                    while (1) {
                      b2 = a2 + 20 | 0;
                      d2 = c[b2 >> 2] | 0;
                      if (d2 | 0) {
                        a2 = d2;
                        e2 = b2;
                        continue;
                      }
                      b2 = a2 + 16 | 0;
                      d2 = c[b2 >> 2] | 0;
                      if (!d2)
                        break;
                      else {
                        a2 = d2;
                        e2 = b2;
                      }
                    }
                    if (e2 >>> 0 < h2 >>> 0)
                      Ta();
                    else {
                      c[e2 >> 2] = 0;
                      i2 = a2;
                      break;
                    }
                  } else {
                    b2 = c[k2 + 8 >> 2] | 0;
                    if (b2 >>> 0 < h2 >>> 0)
                      Ta();
                    if ((c[b2 + 12 >> 2] | 0) != (k2 | 0))
                      Ta();
                    if ((c[a2 + 8 >> 2] | 0) == (k2 | 0)) {
                      c[b2 + 12 >> 2] = a2;
                      c[a2 + 8 >> 2] = b2;
                      i2 = a2;
                      break;
                    } else
                      Ta();
                  }
                while (0);
                if (g2) {
                  a2 = c[k2 + 28 >> 2] | 0;
                  if ((k2 | 0) == (c[23124 + (a2 << 2) >> 2] | 0)) {
                    c[23124 + (a2 << 2) >> 2] = i2;
                    if (!i2) {
                      c[5706] = c[5706] & ~(1 << a2);
                      q2 = k2;
                      f2 = j2;
                      break;
                    }
                  } else {
                    if (g2 >>> 0 < (c[5709] | 0) >>> 0)
                      Ta();
                    if ((c[g2 + 16 >> 2] | 0) == (k2 | 0))
                      c[g2 + 16 >> 2] = i2;
                    else
                      c[g2 + 20 >> 2] = i2;
                    if (!i2) {
                      q2 = k2;
                      f2 = j2;
                      break;
                    }
                  }
                  b2 = c[5709] | 0;
                  if (i2 >>> 0 < b2 >>> 0)
                    Ta();
                  c[i2 + 24 >> 2] = g2;
                  a2 = c[k2 + 16 >> 2] | 0;
                  do
                    if (a2 | 0)
                      if (a2 >>> 0 < b2 >>> 0)
                        Ta();
                      else {
                        c[i2 + 16 >> 2] = a2;
                        c[a2 + 24 >> 2] = i2;
                        break;
                      }
                  while (0);
                  a2 = c[k2 + 16 + 4 >> 2] | 0;
                  if (a2)
                    if (a2 >>> 0 < (c[5709] | 0) >>> 0)
                      Ta();
                    else {
                      c[i2 + 20 >> 2] = a2;
                      c[a2 + 24 >> 2] = i2;
                      q2 = k2;
                      f2 = j2;
                      break;
                    }
                  else {
                    q2 = k2;
                    f2 = j2;
                  }
                } else {
                  q2 = k2;
                  f2 = j2;
                }
              } else {
                q2 = a2 + -8 | 0;
                f2 = b2 & -8;
              }
            while (0);
            if (q2 >>> 0 >= n2 >>> 0)
              Ta();
            d2 = c[n2 + 4 >> 2] | 0;
            if (!(d2 & 1))
              Ta();
            if (!(d2 & 2)) {
              if ((n2 | 0) == (c[5711] | 0)) {
                p2 = (c[5708] | 0) + f2 | 0;
                c[5708] = p2;
                c[5711] = q2;
                c[q2 + 4 >> 2] = p2 | 1;
                if ((q2 | 0) != (c[5710] | 0))
                  return;
                c[5710] = 0;
                c[5707] = 0;
                return;
              }
              if ((n2 | 0) == (c[5710] | 0)) {
                p2 = (c[5707] | 0) + f2 | 0;
                c[5707] = p2;
                c[5710] = q2;
                c[q2 + 4 >> 2] = p2 | 1;
                c[q2 + p2 >> 2] = p2;
                return;
              }
              f2 = (d2 & -8) + f2 | 0;
              do
                if (d2 >>> 0 >= 256) {
                  g2 = c[n2 + 24 >> 2] | 0;
                  a2 = c[n2 + 12 >> 2] | 0;
                  do
                    if ((a2 | 0) == (n2 | 0)) {
                      a2 = c[n2 + 16 + 4 >> 2] | 0;
                      if (!a2) {
                        a2 = c[n2 + 16 >> 2] | 0;
                        if (!a2) {
                          m2 = 0;
                          break;
                        } else
                          e2 = n2 + 16 | 0;
                      } else
                        e2 = n2 + 16 + 4 | 0;
                      while (1) {
                        b2 = a2 + 20 | 0;
                        d2 = c[b2 >> 2] | 0;
                        if (d2 | 0) {
                          a2 = d2;
                          e2 = b2;
                          continue;
                        }
                        b2 = a2 + 16 | 0;
                        d2 = c[b2 >> 2] | 0;
                        if (!d2)
                          break;
                        else {
                          a2 = d2;
                          e2 = b2;
                        }
                      }
                      if (e2 >>> 0 < (c[5709] | 0) >>> 0)
                        Ta();
                      else {
                        c[e2 >> 2] = 0;
                        m2 = a2;
                        break;
                      }
                    } else {
                      b2 = c[n2 + 8 >> 2] | 0;
                      if (b2 >>> 0 < (c[5709] | 0) >>> 0)
                        Ta();
                      if ((c[b2 + 12 >> 2] | 0) != (n2 | 0))
                        Ta();
                      if ((c[a2 + 8 >> 2] | 0) == (n2 | 0)) {
                        c[b2 + 12 >> 2] = a2;
                        c[a2 + 8 >> 2] = b2;
                        m2 = a2;
                        break;
                      } else
                        Ta();
                    }
                  while (0);
                  if (g2 | 0) {
                    a2 = c[n2 + 28 >> 2] | 0;
                    if ((n2 | 0) == (c[23124 + (a2 << 2) >> 2] | 0)) {
                      c[23124 + (a2 << 2) >> 2] = m2;
                      if (!m2) {
                        c[5706] = c[5706] & ~(1 << a2);
                        break;
                      }
                    } else {
                      if (g2 >>> 0 < (c[5709] | 0) >>> 0)
                        Ta();
                      if ((c[g2 + 16 >> 2] | 0) == (n2 | 0))
                        c[g2 + 16 >> 2] = m2;
                      else
                        c[g2 + 20 >> 2] = m2;
                      if (!m2)
                        break;
                    }
                    b2 = c[5709] | 0;
                    if (m2 >>> 0 < b2 >>> 0)
                      Ta();
                    c[m2 + 24 >> 2] = g2;
                    a2 = c[n2 + 16 >> 2] | 0;
                    do
                      if (a2 | 0)
                        if (a2 >>> 0 < b2 >>> 0)
                          Ta();
                        else {
                          c[m2 + 16 >> 2] = a2;
                          c[a2 + 24 >> 2] = m2;
                          break;
                        }
                    while (0);
                    a2 = c[n2 + 16 + 4 >> 2] | 0;
                    if (a2 | 0)
                      if (a2 >>> 0 < (c[5709] | 0) >>> 0)
                        Ta();
                      else {
                        c[m2 + 20 >> 2] = a2;
                        c[a2 + 24 >> 2] = m2;
                        break;
                      }
                  }
                } else {
                  a2 = c[n2 + 8 >> 2] | 0;
                  b2 = c[n2 + 12 >> 2] | 0;
                  if ((a2 | 0) != (22860 + (d2 >>> 3 << 1 << 2) | 0)) {
                    if (a2 >>> 0 < (c[5709] | 0) >>> 0)
                      Ta();
                    if ((c[a2 + 12 >> 2] | 0) != (n2 | 0))
                      Ta();
                  }
                  if ((b2 | 0) == (a2 | 0)) {
                    c[5705] = c[5705] & ~(1 << (d2 >>> 3));
                    break;
                  }
                  if ((b2 | 0) != (22860 + (d2 >>> 3 << 1 << 2) | 0)) {
                    if (b2 >>> 0 < (c[5709] | 0) >>> 0)
                      Ta();
                    if ((c[b2 + 8 >> 2] | 0) != (n2 | 0))
                      Ta();
                    else
                      l2 = b2 + 8 | 0;
                  } else
                    l2 = b2 + 8 | 0;
                  c[a2 + 12 >> 2] = b2;
                  c[l2 >> 2] = a2;
                }
              while (0);
              c[q2 + 4 >> 2] = f2 | 1;
              c[q2 + f2 >> 2] = f2;
              if ((q2 | 0) == (c[5710] | 0)) {
                c[5707] = f2;
                return;
              }
            } else {
              c[n2 + 4 >> 2] = d2 & -2;
              c[q2 + 4 >> 2] = f2 | 1;
              c[q2 + f2 >> 2] = f2;
            }
            b2 = f2 >>> 3;
            if (f2 >>> 0 < 256) {
              a2 = c[5705] | 0;
              if (a2 & 1 << b2) {
                a2 = c[22860 + (b2 << 1 << 2) + 8 >> 2] | 0;
                if (a2 >>> 0 < (c[5709] | 0) >>> 0)
                  Ta();
                else {
                  o2 = 22860 + (b2 << 1 << 2) + 8 | 0;
                  p2 = a2;
                }
              } else {
                c[5705] = a2 | 1 << b2;
                o2 = 22860 + (b2 << 1 << 2) + 8 | 0;
                p2 = 22860 + (b2 << 1 << 2) | 0;
              }
              c[o2 >> 2] = q2;
              c[p2 + 12 >> 2] = q2;
              c[q2 + 8 >> 2] = p2;
              c[q2 + 12 >> 2] = 22860 + (b2 << 1 << 2);
              return;
            }
            a2 = f2 >>> 8;
            if (a2)
              if (f2 >>> 0 > 16777215)
                d2 = 31;
              else {
                d2 = a2 << ((a2 + 1048320 | 0) >>> 16 & 8) << (((a2 << ((a2 + 1048320 | 0) >>> 16 & 8)) + 520192 | 0) >>> 16 & 4);
                d2 = 14 - (((a2 << ((a2 + 1048320 | 0) >>> 16 & 8)) + 520192 | 0) >>> 16 & 4 | (a2 + 1048320 | 0) >>> 16 & 8 | (d2 + 245760 | 0) >>> 16 & 2) + (d2 << ((d2 + 245760 | 0) >>> 16 & 2) >>> 15) | 0;
                d2 = f2 >>> (d2 + 7 | 0) & 1 | d2 << 1;
              }
            else
              d2 = 0;
            e2 = 23124 + (d2 << 2) | 0;
            c[q2 + 28 >> 2] = d2;
            c[q2 + 20 >> 2] = 0;
            c[q2 + 16 >> 2] = 0;
            a2 = c[5706] | 0;
            b2 = 1 << d2;
            do
              if (a2 & b2) {
                d2 = f2 << ((d2 | 0) == 31 ? 0 : 25 - (d2 >>> 1) | 0);
                e2 = c[e2 >> 2] | 0;
                while (1) {
                  if ((c[e2 + 4 >> 2] & -8 | 0) == (f2 | 0)) {
                    a2 = 130;
                    break;
                  }
                  b2 = e2 + 16 + (d2 >>> 31 << 2) | 0;
                  a2 = c[b2 >> 2] | 0;
                  if (!a2) {
                    a2 = 127;
                    break;
                  } else {
                    d2 = d2 << 1;
                    e2 = a2;
                  }
                }
                if ((a2 | 0) == 127)
                  if (b2 >>> 0 < (c[5709] | 0) >>> 0)
                    Ta();
                  else {
                    c[b2 >> 2] = q2;
                    c[q2 + 24 >> 2] = e2;
                    c[q2 + 12 >> 2] = q2;
                    c[q2 + 8 >> 2] = q2;
                    break;
                  }
                else if ((a2 | 0) == 130) {
                  a2 = e2 + 8 | 0;
                  b2 = c[a2 >> 2] | 0;
                  p2 = c[5709] | 0;
                  if (b2 >>> 0 >= p2 >>> 0 & e2 >>> 0 >= p2 >>> 0) {
                    c[b2 + 12 >> 2] = q2;
                    c[a2 >> 2] = q2;
                    c[q2 + 8 >> 2] = b2;
                    c[q2 + 12 >> 2] = e2;
                    c[q2 + 24 >> 2] = 0;
                    break;
                  } else
                    Ta();
                }
              } else {
                c[5706] = a2 | b2;
                c[e2 >> 2] = q2;
                c[q2 + 24 >> 2] = e2;
                c[q2 + 12 >> 2] = q2;
                c[q2 + 8 >> 2] = q2;
              }
            while (0);
            q2 = (c[5713] | 0) + -1 | 0;
            c[5713] = q2;
            if (!q2)
              a2 = 23276;
            else
              return;
            while (1) {
              a2 = c[a2 >> 2] | 0;
              if (!a2)
                break;
              else
                a2 = a2 + 8 | 0;
            }
            c[5713] = -1;
            return;
          }
          function sG() {
            var a2 = 0, b2 = 0, d2 = 0, e2 = 0;
            e2 = i;
            i = i + 48 | 0;
            if (cb(23316, 3) | 0)
              vG(19340, e2);
            a2 = bb(c[5830] | 0) | 0;
            if (a2 | 0 ? (d2 = c[a2 >> 2] | 0, d2 | 0) : 0) {
              a2 = c[d2 + 48 >> 2] | 0;
              b2 = c[d2 + 48 + 4 >> 2] | 0;
              if (!((a2 & -256 | 0) == 1126902528 & (b2 | 0) == 1129074247)) {
                c[e2 + 32 >> 2] = 19519;
                vG(19614, e2 + 32 | 0);
              }
              if ((a2 | 0) == 1126902529 & (b2 | 0) == 1129074247)
                a2 = c[d2 + 44 >> 2] | 0;
              else
                a2 = d2 + 80 | 0;
              c[e2 + 44 >> 2] = a2;
              d2 = c[d2 >> 2] | 0;
              a2 = c[d2 + 4 >> 2] | 0;
              if (AG(2352, d2, e2 + 44 | 0) | 0) {
                d2 = c[e2 + 44 >> 2] | 0;
                d2 = vb[c[(c[d2 >> 2] | 0) + 8 >> 2] & 127](d2) | 0;
                c[e2 + 8 >> 2] = 19519;
                c[e2 + 8 + 4 >> 2] = a2;
                c[e2 + 8 + 8 >> 2] = d2;
                vG(19528, e2 + 8 | 0);
              } else {
                c[e2 + 24 >> 2] = 19519;
                c[e2 + 24 + 4 >> 2] = a2;
                vG(19573, e2 + 24 | 0);
              }
            }
            vG(19652, e2 + 40 | 0);
          }
          function tG() {
            var a2 = 0;
            a2 = i;
            i = i + 16 | 0;
            if (!(eb(23320, 219) | 0)) {
              i = a2;
              return;
            } else
              vG(19290, a2);
          }
          function uG(a2) {
            a2 = a2 | 0;
            var b2 = 0;
            b2 = i;
            i = i + 16 | 0;
            rG(a2);
            if (!(gb(c[5830] | 0, 0) | 0)) {
              i = b2;
              return;
            } else
              vG(19237, b2);
          }
          function vG(b2, d2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0;
            f2 = i;
            i = i + 240 | 0;
            c[f2 + 80 >> 2] = d2;
            d2 = f2 + 96 | 0;
            e2 = d2 + 40 | 0;
            do {
              c[d2 >> 2] = 0;
              d2 = d2 + 4 | 0;
            } while ((d2 | 0) < (e2 | 0));
            c[f2 + 136 >> 2] = c[f2 + 80 >> 2];
            if ((gG(0, b2, f2 + 136 | 0, f2, f2 + 96 | 0) | 0) >= 0) {
              d2 = c[2026] | 0;
              if ((a[8178] | 0) < 1)
                c[2026] = d2 & -33;
              if (!(c[2038] | 0)) {
                e2 = c[2037] | 0;
                c[2037] = f2 + 152;
                c[2033] = f2 + 152;
                c[2031] = f2 + 152;
                c[2038] = 80;
                c[2030] = f2 + 152 + 80;
                gG(8104, b2, f2 + 136 | 0, f2, f2 + 96 | 0) | 0;
                if (e2 | 0) {
                  Eb[c[8140 >> 2] & 63](8104, 0, 0) | 0;
                  c[2037] = e2;
                  c[2038] = 0;
                  c[2030] = 0;
                  c[2033] = 0;
                  c[2031] = 0;
                }
              } else
                gG(8104, b2, f2 + 136 | 0, f2, f2 + 96 | 0) | 0;
              c[2026] = c[2026] | d2 & 32;
            }
            d2 = (a[8179] | 0) == 10;
            do
              if ((c[2045] | 0) < 0) {
                if (!d2 ? (g2 = c[2031] | 0, g2 >>> 0 < (c[2030] | 0) >>> 0) : 0) {
                  c[2031] = g2 + 1;
                  a[g2 >> 0] = 10;
                  break;
                }
                pG(8104, 10) | 0;
              } else {
                if (!d2 ? (h2 = c[2031] | 0, h2 >>> 0 < (c[2030] | 0) >>> 0) : 0) {
                  c[2031] = h2 + 1;
                  a[h2 >> 0] = 10;
                  break;
                }
                pG(8104, 10) | 0;
              }
            while (0);
            Ta();
          }
          function wG(a2) {
            a2 = a2 | 0;
            return;
          }
          function xG(a2) {
            a2 = a2 | 0;
            rG(a2);
            return;
          }
          function yG(a2) {
            a2 = a2 | 0;
            return;
          }
          function zG(a2) {
            a2 = a2 | 0;
            return;
          }
          function AG(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0;
            g2 = i;
            i = i + 64 | 0;
            if ((a2 | 0) != (b2 | 0))
              if ((b2 | 0) != 0 ? (f2 = BG(b2, 2360) | 0, (f2 | 0) != 0) : 0) {
                b2 = g2;
                e2 = b2 + 56 | 0;
                do {
                  c[b2 >> 2] = 0;
                  b2 = b2 + 4 | 0;
                } while ((b2 | 0) < (e2 | 0));
                c[g2 >> 2] = f2;
                c[g2 + 8 >> 2] = a2;
                c[g2 + 12 >> 2] = -1;
                c[g2 + 48 >> 2] = 1;
                bc[c[(c[f2 >> 2] | 0) + 28 >> 2] & 127](f2, g2, c[d2 >> 2] | 0, 1);
                if ((c[g2 + 24 >> 2] | 0) == 1) {
                  c[d2 >> 2] = c[g2 + 16 >> 2];
                  b2 = 1;
                } else
                  b2 = 0;
              } else
                b2 = 0;
            else
              b2 = 1;
            i = g2;
            return b2 | 0;
          }
          function BG(d2, e2) {
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, g2 = 0, h2 = 0, j2 = 0;
            j2 = i;
            i = i + 64 | 0;
            h2 = c[d2 >> 2] | 0;
            g2 = d2 + (c[h2 + -8 >> 2] | 0) | 0;
            h2 = c[h2 + -4 >> 2] | 0;
            c[j2 >> 2] = e2;
            c[j2 + 4 >> 2] = d2;
            c[j2 + 8 >> 2] = 2392;
            d2 = j2 + 12 | 0;
            f2 = d2 + 40 | 0;
            do {
              c[d2 >> 2] = 0;
              d2 = d2 + 4 | 0;
            } while ((d2 | 0) < (f2 | 0));
            b[j2 + 12 + 40 >> 1] = 0;
            a[j2 + 12 + 42 >> 0] = 0;
            a:
              do
                if ((h2 | 0) == (e2 | 0)) {
                  c[j2 + 48 >> 2] = 1;
                  Fb[c[(c[e2 >> 2] | 0) + 20 >> 2] & 7](e2, j2, g2, g2, 1, 0);
                  d2 = (c[j2 + 24 >> 2] | 0) == 1 ? g2 : 0;
                } else {
                  pb[c[(c[h2 >> 2] | 0) + 24 >> 2] & 31](h2, j2, g2, 1, 0);
                  switch (c[j2 + 36 >> 2] | 0) {
                    case 0: {
                      d2 = ((c[j2 + 40 >> 2] | 0) == 1 ? (c[j2 + 28 >> 2] | 0) == 1 : 0) & (c[j2 + 32 >> 2] | 0) == 1 ? c[j2 + 20 >> 2] | 0 : 0;
                      break a;
                    }
                    case 1:
                      break;
                    default: {
                      d2 = 0;
                      break a;
                    }
                  }
                  if ((c[j2 + 24 >> 2] | 0) != 1 ? !(((c[j2 + 40 >> 2] | 0) == 0 ? (c[j2 + 28 >> 2] | 0) == 1 : 0) & (c[j2 + 32 >> 2] | 0) == 1) : 0) {
                    d2 = 0;
                    break;
                  }
                  d2 = c[j2 + 16 >> 2] | 0;
                }
              while (0);
            i = j2;
            return d2 | 0;
          }
          function CG(a2, b2, d2, e2, f2, g2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            g2 = g2 | 0;
            if ((a2 | 0) == (c[b2 + 8 >> 2] | 0))
              DG(b2, d2, e2, f2);
            else {
              a2 = c[a2 + 8 >> 2] | 0;
              Fb[c[(c[a2 >> 2] | 0) + 20 >> 2] & 7](a2, b2, d2, e2, f2, g2);
            }
            return;
          }
          function DG(b2, d2, e2, f2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            a[b2 + 53 >> 0] = 1;
            do
              if ((c[b2 + 4 >> 2] | 0) == (e2 | 0)) {
                a[b2 + 52 >> 0] = 1;
                e2 = c[b2 + 16 >> 2] | 0;
                if (!e2) {
                  c[b2 + 16 >> 2] = d2;
                  c[b2 + 24 >> 2] = f2;
                  c[b2 + 36 >> 2] = 1;
                  if (!((f2 | 0) == 1 ? (c[b2 + 48 >> 2] | 0) == 1 : 0))
                    break;
                  a[b2 + 54 >> 0] = 1;
                  break;
                }
                if ((e2 | 0) != (d2 | 0)) {
                  c[b2 + 36 >> 2] = (c[b2 + 36 >> 2] | 0) + 1;
                  a[b2 + 54 >> 0] = 1;
                  break;
                }
                e2 = c[b2 + 24 >> 2] | 0;
                if ((e2 | 0) == 2) {
                  c[b2 + 24 >> 2] = f2;
                  e2 = f2;
                }
                if ((e2 | 0) == 1 ? (c[b2 + 48 >> 2] | 0) == 1 : 0)
                  a[b2 + 54 >> 0] = 1;
              }
            while (0);
            return;
          }
          function EG(b2, d2, e2, f2, g2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            g2 = g2 | 0;
            do
              if ((b2 | 0) == (c[d2 + 8 >> 2] | 0)) {
                if ((c[d2 + 4 >> 2] | 0) == (e2 | 0) ? (c[d2 + 28 >> 2] | 0) != 1 : 0)
                  c[d2 + 28 >> 2] = f2;
              } else {
                if ((b2 | 0) != (c[d2 >> 2] | 0)) {
                  b2 = c[b2 + 8 >> 2] | 0;
                  pb[c[(c[b2 >> 2] | 0) + 24 >> 2] & 31](b2, d2, e2, f2, g2);
                  break;
                }
                if ((c[d2 + 16 >> 2] | 0) != (e2 | 0) ? (c[d2 + 20 >> 2] | 0) != (e2 | 0) : 0) {
                  c[d2 + 32 >> 2] = f2;
                  if ((c[d2 + 44 >> 2] | 0) == 4)
                    break;
                  a[d2 + 52 >> 0] = 0;
                  a[d2 + 53 >> 0] = 0;
                  b2 = c[b2 + 8 >> 2] | 0;
                  Fb[c[(c[b2 >> 2] | 0) + 20 >> 2] & 7](b2, d2, e2, e2, 1, g2);
                  if (a[d2 + 53 >> 0] | 0)
                    if (!(a[d2 + 52 >> 0] | 0)) {
                      f2 = 1;
                      b2 = 13;
                    } else
                      b2 = 17;
                  else {
                    f2 = 0;
                    b2 = 13;
                  }
                  do
                    if ((b2 | 0) == 13) {
                      c[d2 + 20 >> 2] = e2;
                      c[d2 + 40 >> 2] = (c[d2 + 40 >> 2] | 0) + 1;
                      if ((c[d2 + 36 >> 2] | 0) == 1 ? (c[d2 + 24 >> 2] | 0) == 2 : 0) {
                        a[d2 + 54 >> 0] = 1;
                        if (f2) {
                          b2 = 17;
                          break;
                        } else {
                          f2 = 4;
                          break;
                        }
                      }
                      if (f2)
                        b2 = 17;
                      else
                        f2 = 4;
                    }
                  while (0);
                  if ((b2 | 0) == 17)
                    f2 = 3;
                  c[d2 + 44 >> 2] = f2;
                  break;
                }
                if ((f2 | 0) == 1)
                  c[d2 + 32 >> 2] = 1;
              }
            while (0);
            return;
          }
          function FG(b2, d2, e2, f2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            do
              if ((b2 | 0) == (c[d2 + 8 >> 2] | 0)) {
                b2 = c[d2 + 16 >> 2] | 0;
                if (!b2) {
                  c[d2 + 16 >> 2] = e2;
                  c[d2 + 24 >> 2] = f2;
                  c[d2 + 36 >> 2] = 1;
                  break;
                }
                if ((b2 | 0) != (e2 | 0)) {
                  c[d2 + 36 >> 2] = (c[d2 + 36 >> 2] | 0) + 1;
                  c[d2 + 24 >> 2] = 2;
                  a[d2 + 54 >> 0] = 1;
                  break;
                }
                if ((c[d2 + 24 >> 2] | 0) == 2)
                  c[d2 + 24 >> 2] = f2;
              } else {
                b2 = c[b2 + 8 >> 2] | 0;
                bc[c[(c[b2 >> 2] | 0) + 28 >> 2] & 127](b2, d2, e2, f2);
              }
            while (0);
            return;
          }
          function GG(a2) {
            a2 = a2 | 0;
            rG(a2);
            return;
          }
          function HG(a2, b2, d2, e2, f2, g2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            g2 = g2 | 0;
            if ((a2 | 0) == (c[b2 + 8 >> 2] | 0))
              DG(b2, d2, e2, f2);
            return;
          }
          function IG(b2, d2, e2, f2, g2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            g2 = g2 | 0;
            do
              if ((b2 | 0) == (c[d2 + 8 >> 2] | 0)) {
                if ((c[d2 + 4 >> 2] | 0) == (e2 | 0) ? (c[d2 + 28 >> 2] | 0) != 1 : 0)
                  c[d2 + 28 >> 2] = f2;
              } else if ((b2 | 0) == (c[d2 >> 2] | 0)) {
                if ((c[d2 + 16 >> 2] | 0) != (e2 | 0) ? (c[d2 + 20 >> 2] | 0) != (e2 | 0) : 0) {
                  c[d2 + 32 >> 2] = f2;
                  c[d2 + 20 >> 2] = e2;
                  c[d2 + 40 >> 2] = (c[d2 + 40 >> 2] | 0) + 1;
                  if ((c[d2 + 36 >> 2] | 0) == 1 ? (c[d2 + 24 >> 2] | 0) == 2 : 0)
                    a[d2 + 54 >> 0] = 1;
                  c[d2 + 44 >> 2] = 4;
                  break;
                }
                if ((f2 | 0) == 1)
                  c[d2 + 32 >> 2] = 1;
              }
            while (0);
            return;
          }
          function JG(b2, d2, e2, f2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            do
              if ((b2 | 0) == (c[d2 + 8 >> 2] | 0)) {
                b2 = c[d2 + 16 >> 2] | 0;
                if (!b2) {
                  c[d2 + 16 >> 2] = e2;
                  c[d2 + 24 >> 2] = f2;
                  c[d2 + 36 >> 2] = 1;
                  break;
                }
                if ((b2 | 0) != (e2 | 0)) {
                  c[d2 + 36 >> 2] = (c[d2 + 36 >> 2] | 0) + 1;
                  c[d2 + 24 >> 2] = 2;
                  a[d2 + 54 >> 0] = 1;
                  break;
                }
                if ((c[d2 + 24 >> 2] | 0) == 2)
                  c[d2 + 24 >> 2] = f2;
              }
            while (0);
            return;
          }
          function KG(a2) {
            a2 = a2 | 0;
            return;
          }
          function LG(a2) {
            a2 = a2 | 0;
            rG(a2);
            return;
          }
          function MG(a2) {
            a2 = a2 | 0;
            return 19717;
          }
          function NG(a2) {
            a2 = a2 | 0;
            rG(a2);
            return;
          }
          function OG(d2, e2, f2, g2, h2, i2) {
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            g2 = g2 | 0;
            h2 = h2 | 0;
            i2 = i2 | 0;
            var j2 = 0, k2 = 0, l2 = 0, m2 = 0;
            if ((d2 | 0) == (c[e2 + 8 >> 2] | 0))
              DG(e2, f2, g2, h2);
            else {
              l2 = b[e2 + 52 >> 1] | 0;
              j2 = c[d2 + 12 >> 2] | 0;
              a[e2 + 52 >> 0] = 0;
              a[e2 + 53 >> 0] = 0;
              PG(d2 + 16 | 0, e2, f2, g2, h2, i2);
              a:
                do
                  if ((j2 | 0) > 1) {
                    m2 = d2 + 24 | 0;
                    do {
                      if (a[e2 + 54 >> 0] | 0)
                        break a;
                      k2 = b[e2 + 52 >> 1] | 0;
                      if (!((k2 & 255) << 24 >> 24)) {
                        if ((k2 & 65535) >= 256 ? (c[d2 + 8 >> 2] & 1 | 0) == 0 : 0)
                          break a;
                      } else {
                        if ((c[e2 + 24 >> 2] | 0) == 1)
                          break a;
                        if (!(c[d2 + 8 >> 2] & 2))
                          break a;
                      }
                      a[e2 + 52 >> 0] = 0;
                      a[e2 + 53 >> 0] = 0;
                      PG(m2, e2, f2, g2, h2, i2);
                      m2 = m2 + 8 | 0;
                    } while (m2 >>> 0 < (d2 + 16 + (j2 << 3) | 0) >>> 0);
                  }
                while (0);
              a[e2 + 52 >> 0] = l2;
              a[e2 + 53 >> 0] = (l2 & 65535) >>> 8;
            }
            return;
          }
          function PG(a2, b2, d2, e2, f2, g2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            g2 = g2 | 0;
            var h2 = 0, i2 = 0;
            h2 = c[a2 + 4 >> 2] | 0;
            if (!(h2 & 1))
              i2 = h2 >> 8;
            else
              i2 = c[(c[e2 >> 2] | 0) + (h2 >> 8) >> 2] | 0;
            a2 = c[a2 >> 2] | 0;
            Fb[c[(c[a2 >> 2] | 0) + 20 >> 2] & 7](a2, b2, d2, e2 + i2 | 0, h2 & 2 | 0 ? f2 : 2, g2);
            return;
          }
          function QG(b2, d2, e2, f2, g2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            g2 = g2 | 0;
            var h2 = 0, i2 = 0, j2 = 0, k2 = 0;
            a:
              do
                if ((b2 | 0) == (c[d2 + 8 >> 2] | 0)) {
                  if ((c[d2 + 4 >> 2] | 0) == (e2 | 0) ? (c[d2 + 28 >> 2] | 0) != 1 : 0)
                    c[d2 + 28 >> 2] = f2;
                } else {
                  if ((b2 | 0) != (c[d2 >> 2] | 0)) {
                    i2 = c[b2 + 12 >> 2] | 0;
                    RG(b2 + 16 | 0, d2, e2, f2, g2);
                    if ((i2 | 0) <= 1)
                      break;
                    h2 = c[b2 + 8 >> 2] | 0;
                    if ((h2 & 2 | 0) == 0 ? (c[d2 + 36 >> 2] | 0) != 1 : 0) {
                      if (!(h2 & 1)) {
                        h2 = b2 + 24 | 0;
                        while (1) {
                          if (a[d2 + 54 >> 0] | 0)
                            break a;
                          if ((c[d2 + 36 >> 2] | 0) == 1)
                            break a;
                          RG(h2, d2, e2, f2, g2);
                          h2 = h2 + 8 | 0;
                          if (h2 >>> 0 >= (b2 + 16 + (i2 << 3) | 0) >>> 0)
                            break a;
                        }
                      }
                      h2 = b2 + 24 | 0;
                      while (1) {
                        if (a[d2 + 54 >> 0] | 0)
                          break a;
                        if ((c[d2 + 36 >> 2] | 0) == 1 ? (c[d2 + 24 >> 2] | 0) == 1 : 0)
                          break a;
                        RG(h2, d2, e2, f2, g2);
                        h2 = h2 + 8 | 0;
                        if (h2 >>> 0 >= (b2 + 16 + (i2 << 3) | 0) >>> 0)
                          break a;
                      }
                    }
                    h2 = b2 + 24 | 0;
                    while (1) {
                      if (a[d2 + 54 >> 0] | 0)
                        break a;
                      RG(h2, d2, e2, f2, g2);
                      h2 = h2 + 8 | 0;
                      if (h2 >>> 0 >= (b2 + 16 + (i2 << 3) | 0) >>> 0)
                        break a;
                    }
                  }
                  if ((c[d2 + 16 >> 2] | 0) != (e2 | 0) ? (c[d2 + 20 >> 2] | 0) != (e2 | 0) : 0) {
                    c[d2 + 32 >> 2] = f2;
                    if ((c[d2 + 44 >> 2] | 0) == 4)
                      break;
                    f2 = b2 + 16 + (c[b2 + 12 >> 2] << 3) | 0;
                    k2 = 0;
                    h2 = 0;
                    j2 = b2 + 16 | 0;
                    b:
                      while (1) {
                        if (j2 >>> 0 >= f2 >>> 0) {
                          i2 = 20;
                          break;
                        }
                        a[d2 + 52 >> 0] = 0;
                        a[d2 + 53 >> 0] = 0;
                        PG(j2, d2, e2, e2, 1, g2);
                        if (a[d2 + 54 >> 0] | 0) {
                          i2 = 20;
                          break;
                        }
                        do
                          if (a[d2 + 53 >> 0] | 0) {
                            if (!(a[d2 + 52 >> 0] | 0))
                              if (!(c[b2 + 8 >> 2] & 1)) {
                                h2 = 1;
                                i2 = 20;
                                break b;
                              } else {
                                i2 = k2;
                                h2 = 1;
                                break;
                              }
                            if ((c[d2 + 24 >> 2] | 0) == 1) {
                              i2 = 25;
                              break b;
                            }
                            if (!(c[b2 + 8 >> 2] & 2)) {
                              i2 = 25;
                              break b;
                            } else {
                              i2 = 1;
                              h2 = 1;
                            }
                          } else
                            i2 = k2;
                        while (0);
                        k2 = i2;
                        j2 = j2 + 8 | 0;
                      }
                    do
                      if ((i2 | 0) == 20) {
                        if ((!k2 ? (c[d2 + 20 >> 2] = e2, c[d2 + 40 >> 2] = (c[d2 + 40 >> 2] | 0) + 1, (c[d2 + 36 >> 2] | 0) == 1) : 0) ? (c[d2 + 24 >> 2] | 0) == 2 : 0) {
                          a[d2 + 54 >> 0] = 1;
                          if (h2) {
                            i2 = 25;
                            break;
                          } else {
                            h2 = 4;
                            break;
                          }
                        }
                        if (h2)
                          i2 = 25;
                        else
                          h2 = 4;
                      }
                    while (0);
                    if ((i2 | 0) == 25)
                      h2 = 3;
                    c[d2 + 44 >> 2] = h2;
                    break;
                  }
                  if ((f2 | 0) == 1)
                    c[d2 + 32 >> 2] = 1;
                }
              while (0);
            return;
          }
          function RG(a2, b2, d2, e2, f2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            var g2 = 0, h2 = 0;
            g2 = c[a2 + 4 >> 2] | 0;
            if (!(g2 & 1))
              h2 = g2 >> 8;
            else
              h2 = c[(c[d2 >> 2] | 0) + (g2 >> 8) >> 2] | 0;
            a2 = c[a2 >> 2] | 0;
            pb[c[(c[a2 >> 2] | 0) + 24 >> 2] & 31](a2, b2, d2 + h2 | 0, g2 & 2 | 0 ? e2 : 2, f2);
            return;
          }
          function SG(b2, d2, e2, f2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            var g2 = 0, h2 = 0;
            a:
              do
                if ((b2 | 0) == (c[d2 + 8 >> 2] | 0)) {
                  g2 = c[d2 + 16 >> 2] | 0;
                  if (!g2) {
                    c[d2 + 16 >> 2] = e2;
                    c[d2 + 24 >> 2] = f2;
                    c[d2 + 36 >> 2] = 1;
                    break;
                  }
                  if ((g2 | 0) != (e2 | 0)) {
                    c[d2 + 36 >> 2] = (c[d2 + 36 >> 2] | 0) + 1;
                    c[d2 + 24 >> 2] = 2;
                    a[d2 + 54 >> 0] = 1;
                    break;
                  }
                  if ((c[d2 + 24 >> 2] | 0) == 2)
                    c[d2 + 24 >> 2] = f2;
                } else {
                  g2 = c[b2 + 12 >> 2] | 0;
                  TG(b2 + 16 | 0, d2, e2, f2);
                  if ((g2 | 0) > 1) {
                    h2 = b2 + 24 | 0;
                    do {
                      TG(h2, d2, e2, f2);
                      if (a[d2 + 54 >> 0] | 0)
                        break a;
                      h2 = h2 + 8 | 0;
                    } while (h2 >>> 0 < (b2 + 16 + (g2 << 3) | 0) >>> 0);
                  }
                }
              while (0);
            return;
          }
          function TG(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, g2 = 0;
            f2 = c[a2 + 4 >> 2] | 0;
            if (!(f2 & 1))
              g2 = f2 >> 8;
            else
              g2 = c[(c[d2 >> 2] | 0) + (f2 >> 8) >> 2] | 0;
            a2 = c[a2 >> 2] | 0;
            bc[c[(c[a2 >> 2] | 0) + 28 >> 2] & 127](a2, b2, d2 + g2 | 0, f2 & 2 | 0 ? e2 : 2);
            return;
          }
          function UG(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0;
            e2 = i;
            i = i + 16 | 0;
            c[e2 >> 2] = c[d2 >> 2];
            a2 = Eb[c[(c[a2 >> 2] | 0) + 16 >> 2] & 63](a2, b2, e2) | 0;
            if (a2)
              c[d2 >> 2] = c[e2 >> 2];
            i = e2;
            return a2 & 1 | 0;
          }
          function VG(a2) {
            a2 = a2 | 0;
            if (!a2)
              a2 = 0;
            else
              a2 = (BG(a2, 2448) | 0) != 0;
            return a2 & 1 | 0;
          }
          function WG() {
          }
          function XG(a2, b2, c2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = d2 | 0;
            d2 = b2 - d2 - (c2 >>> 0 > a2 >>> 0 | 0) >>> 0;
            return (C = d2, a2 - c2 >>> 0 | 0) | 0;
          }
          function YG(a2, b2, c2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = d2 | 0;
            return (C = b2 + d2 + (a2 + c2 >>> 0 >>> 0 < a2 >>> 0 | 0) >>> 0, a2 + c2 >>> 0 | 0) | 0;
          }
          function ZG(b2, d2, e2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, g2 = 0, h2 = 0;
            f2 = b2 + e2 | 0;
            if ((e2 | 0) >= 20) {
              d2 = d2 & 255;
              g2 = b2 & 3;
              h2 = d2 | d2 << 8 | d2 << 16 | d2 << 24;
              if (g2) {
                g2 = b2 + 4 - g2 | 0;
                while ((b2 | 0) < (g2 | 0)) {
                  a[b2 >> 0] = d2;
                  b2 = b2 + 1 | 0;
                }
              }
              while ((b2 | 0) < (f2 & ~3 | 0)) {
                c[b2 >> 2] = h2;
                b2 = b2 + 4 | 0;
              }
            }
            while ((b2 | 0) < (f2 | 0)) {
              a[b2 >> 0] = d2;
              b2 = b2 + 1 | 0;
            }
            return b2 - e2 | 0;
          }
          function _G(a2, b2, c2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            if ((c2 | 0) < 32) {
              C = b2 << c2 | (a2 & (1 << c2) - 1 << 32 - c2) >>> 32 - c2;
              return a2 << c2;
            }
            C = a2 << c2 - 32;
            return 0;
          }
          function $G(a2, b2, c2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            if ((c2 | 0) < 32) {
              C = b2 >> c2;
              return a2 >>> c2 | (b2 & (1 << c2) - 1) << 32 - c2;
            }
            C = (b2 | 0) < 0 ? -1 : 0;
            return b2 >> c2 - 32 | 0;
          }
          function aH(a2, b2, c2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            if ((c2 | 0) < 32) {
              C = b2 >>> c2;
              return a2 >>> c2 | (b2 & (1 << c2) - 1) << 32 - c2;
            }
            C = 0;
            return b2 >>> c2 - 32 | 0;
          }
          function bH(b2, d2, e2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0;
            if ((e2 | 0) >= 4096)
              return _a(b2 | 0, d2 | 0, e2 | 0) | 0;
            f2 = b2 | 0;
            if ((b2 & 3) == (d2 & 3)) {
              while (b2 & 3) {
                if (!e2)
                  return f2 | 0;
                a[b2 >> 0] = a[d2 >> 0] | 0;
                b2 = b2 + 1 | 0;
                d2 = d2 + 1 | 0;
                e2 = e2 - 1 | 0;
              }
              while ((e2 | 0) >= 4) {
                c[b2 >> 2] = c[d2 >> 2];
                b2 = b2 + 4 | 0;
                d2 = d2 + 4 | 0;
                e2 = e2 - 4 | 0;
              }
            }
            while ((e2 | 0) > 0) {
              a[b2 >> 0] = a[d2 >> 0] | 0;
              b2 = b2 + 1 | 0;
              d2 = d2 + 1 | 0;
              e2 = e2 - 1 | 0;
            }
            return f2 | 0;
          }
          function cH(b2, c2, d2) {
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = d2 | 0;
            var e2 = 0;
            if ((c2 | 0) < (b2 | 0) & (b2 | 0) < (c2 + d2 | 0)) {
              e2 = b2;
              c2 = c2 + d2 | 0;
              b2 = b2 + d2 | 0;
              while ((d2 | 0) > 0) {
                b2 = b2 - 1 | 0;
                c2 = c2 - 1 | 0;
                d2 = d2 - 1 | 0;
                a[b2 >> 0] = a[c2 >> 0] | 0;
              }
              b2 = e2;
            } else
              bH(b2, c2, d2) | 0;
            return b2 | 0;
          }
          function dH(a2) {
            a2 = a2 | 0;
            return (a2 & 255) << 24 | (a2 >> 8 & 255) << 16 | (a2 >> 16 & 255) << 8 | a2 >>> 24 | 0;
          }
          function eH() {
            return 0;
          }
          function fH(b2) {
            b2 = b2 | 0;
            var c2 = 0;
            c2 = a[m + (b2 & 255) >> 0] | 0;
            if ((c2 | 0) < 8)
              return c2 | 0;
            c2 = a[m + (b2 >> 8 & 255) >> 0] | 0;
            if ((c2 | 0) < 8)
              return c2 + 8 | 0;
            c2 = a[m + (b2 >> 16 & 255) >> 0] | 0;
            if ((c2 | 0) < 8)
              return c2 + 16 | 0;
            return (a[m + (b2 >>> 24) >> 0] | 0) + 24 | 0;
          }
          function gH(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var c2 = 0, d2 = 0, e2 = 0;
            c2 = _(b2 & 65535, a2 & 65535) | 0;
            e2 = (c2 >>> 16) + (_(b2 & 65535, a2 >>> 16) | 0) | 0;
            d2 = _(b2 >>> 16, a2 & 65535) | 0;
            return (C = (e2 >>> 16) + (_(b2 >>> 16, a2 >>> 16) | 0) + (((e2 & 65535) + d2 | 0) >>> 16) | 0, e2 + d2 << 16 | c2 & 65535 | 0) | 0;
          }
          function hH(a2, b2, c2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0;
            g2 = b2 >> 31 | ((b2 | 0) < 0 ? -1 : 0) << 1;
            e2 = ((b2 | 0) < 0 ? -1 : 0) >> 31 | ((b2 | 0) < 0 ? -1 : 0) << 1;
            h2 = d2 >> 31 | ((d2 | 0) < 0 ? -1 : 0) << 1;
            f2 = ((d2 | 0) < 0 ? -1 : 0) >> 31 | ((d2 | 0) < 0 ? -1 : 0) << 1;
            a2 = XG(g2 ^ a2 | 0, e2 ^ b2 | 0, g2 | 0, e2 | 0) | 0;
            b2 = C;
            return XG((mH(a2, b2, XG(h2 ^ c2 | 0, f2 ^ d2 | 0, h2 | 0, f2 | 0) | 0, C, 0) | 0) ^ (h2 ^ g2) | 0, C ^ (f2 ^ e2) | 0, h2 ^ g2 | 0, f2 ^ e2 | 0) | 0;
          }
          function iH(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, g2 = 0, h2 = 0, j2 = 0, k2 = 0;
            f2 = i;
            i = i + 16 | 0;
            h2 = b2 >> 31 | ((b2 | 0) < 0 ? -1 : 0) << 1;
            g2 = ((b2 | 0) < 0 ? -1 : 0) >> 31 | ((b2 | 0) < 0 ? -1 : 0) << 1;
            k2 = e2 >> 31 | ((e2 | 0) < 0 ? -1 : 0) << 1;
            j2 = ((e2 | 0) < 0 ? -1 : 0) >> 31 | ((e2 | 0) < 0 ? -1 : 0) << 1;
            a2 = XG(h2 ^ a2 | 0, g2 ^ b2 | 0, h2 | 0, g2 | 0) | 0;
            b2 = C;
            mH(a2, b2, XG(k2 ^ d2 | 0, j2 ^ e2 | 0, k2 | 0, j2 | 0) | 0, C, f2 | 0) | 0;
            e2 = XG(c[f2 >> 2] ^ h2 | 0, c[f2 + 4 >> 2] ^ g2 | 0, h2 | 0, g2 | 0) | 0;
            d2 = C;
            i = f2;
            return (C = d2, e2) | 0;
          }
          function jH(a2, b2, c2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0;
            e2 = gH(a2, c2) | 0;
            f2 = C;
            return (C = (_(b2, c2) | 0) + (_(d2, a2) | 0) + f2 | f2 & 0, e2 | 0 | 0) | 0;
          }
          function kH(a2, b2, c2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = d2 | 0;
            return mH(a2, b2, c2, d2, 0) | 0;
          }
          function lH(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0;
            f2 = i;
            i = i + 16 | 0;
            mH(a2, b2, d2, e2, f2 | 0) | 0;
            i = f2;
            return (C = c[f2 + 4 >> 2] | 0, c[f2 >> 2] | 0) | 0;
          }
          function mH(a2, b2, d2, e2, f2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            var g2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0;
            if (!b2)
              if (!e2) {
                if (f2 | 0) {
                  c[f2 >> 2] = (a2 >>> 0) % (d2 >>> 0);
                  c[f2 + 4 >> 2] = 0;
                }
                e2 = 0;
                f2 = (a2 >>> 0) / (d2 >>> 0) >>> 0;
                return (C = e2, f2) | 0;
              } else {
                if (!f2) {
                  e2 = 0;
                  f2 = 0;
                  return (C = e2, f2) | 0;
                }
                c[f2 >> 2] = a2 | 0;
                c[f2 + 4 >> 2] = b2 & 0;
                e2 = 0;
                f2 = 0;
                return (C = e2, f2) | 0;
              }
            do
              if (d2) {
                if (e2 | 0) {
                  h2 = (aa(e2 | 0) | 0) - (aa(b2 | 0) | 0) | 0;
                  if (h2 >>> 0 <= 31) {
                    n2 = h2 + 1 | 0;
                    i2 = a2 >>> ((h2 + 1 | 0) >>> 0) & h2 - 31 >> 31 | b2 << 31 - h2;
                    m2 = b2 >>> ((h2 + 1 | 0) >>> 0) & h2 - 31 >> 31;
                    g2 = 0;
                    h2 = a2 << 31 - h2;
                    break;
                  }
                  if (!f2) {
                    e2 = 0;
                    f2 = 0;
                    return (C = e2, f2) | 0;
                  }
                  c[f2 >> 2] = a2 | 0;
                  c[f2 + 4 >> 2] = b2 | b2 & 0;
                  e2 = 0;
                  f2 = 0;
                  return (C = e2, f2) | 0;
                }
                if (d2 - 1 & d2 | 0) {
                  h2 = (aa(d2 | 0) | 0) + 33 - (aa(b2 | 0) | 0) | 0;
                  n2 = h2;
                  i2 = 32 - h2 - 1 >> 31 & b2 >>> ((h2 - 32 | 0) >>> 0) | (b2 << 32 - h2 | a2 >>> (h2 >>> 0)) & h2 - 32 >> 31;
                  m2 = h2 - 32 >> 31 & b2 >>> (h2 >>> 0);
                  g2 = a2 << 64 - h2 & 32 - h2 >> 31;
                  h2 = (b2 << 64 - h2 | a2 >>> ((h2 - 32 | 0) >>> 0)) & 32 - h2 >> 31 | a2 << 32 - h2 & h2 - 33 >> 31;
                  break;
                }
                if (f2 | 0) {
                  c[f2 >> 2] = d2 - 1 & a2;
                  c[f2 + 4 >> 2] = 0;
                }
                if ((d2 | 0) == 1) {
                  e2 = b2 | b2 & 0;
                  f2 = a2 | 0 | 0;
                  return (C = e2, f2) | 0;
                } else {
                  f2 = fH(d2 | 0) | 0;
                  e2 = b2 >>> (f2 >>> 0) | 0;
                  f2 = b2 << 32 - f2 | a2 >>> (f2 >>> 0) | 0;
                  return (C = e2, f2) | 0;
                }
              } else {
                if (!e2) {
                  if (f2 | 0) {
                    c[f2 >> 2] = (b2 >>> 0) % (d2 >>> 0);
                    c[f2 + 4 >> 2] = 0;
                  }
                  e2 = 0;
                  f2 = (b2 >>> 0) / (d2 >>> 0) >>> 0;
                  return (C = e2, f2) | 0;
                }
                if (!a2) {
                  if (f2 | 0) {
                    c[f2 >> 2] = 0;
                    c[f2 + 4 >> 2] = (b2 >>> 0) % (e2 >>> 0);
                  }
                  d2 = 0;
                  f2 = (b2 >>> 0) / (e2 >>> 0) >>> 0;
                  return (C = d2, f2) | 0;
                }
                if (!(e2 - 1 & e2)) {
                  if (f2 | 0) {
                    c[f2 >> 2] = a2 | 0;
                    c[f2 + 4 >> 2] = e2 - 1 & b2 | b2 & 0;
                  }
                  d2 = 0;
                  f2 = b2 >>> ((fH(e2 | 0) | 0) >>> 0);
                  return (C = d2, f2) | 0;
                }
                h2 = (aa(e2 | 0) | 0) - (aa(b2 | 0) | 0) | 0;
                if (h2 >>> 0 <= 30) {
                  n2 = h2 + 1 | 0;
                  i2 = b2 << 31 - h2 | a2 >>> ((h2 + 1 | 0) >>> 0);
                  m2 = b2 >>> ((h2 + 1 | 0) >>> 0);
                  g2 = 0;
                  h2 = a2 << 31 - h2;
                  break;
                }
                if (!f2) {
                  e2 = 0;
                  f2 = 0;
                  return (C = e2, f2) | 0;
                }
                c[f2 >> 2] = a2 | 0;
                c[f2 + 4 >> 2] = b2 | b2 & 0;
                e2 = 0;
                f2 = 0;
                return (C = e2, f2) | 0;
              }
            while (0);
            if (!n2) {
              j2 = h2;
              b2 = m2;
              a2 = 0;
              h2 = 0;
            } else {
              k2 = YG(d2 | 0 | 0, e2 | e2 & 0 | 0, -1, -1) | 0;
              l2 = C;
              j2 = h2;
              b2 = m2;
              a2 = n2;
              h2 = 0;
              do {
                p2 = j2;
                j2 = g2 >>> 31 | j2 << 1;
                g2 = h2 | g2 << 1;
                p2 = i2 << 1 | p2 >>> 31 | 0;
                o2 = i2 >>> 31 | b2 << 1 | 0;
                XG(k2 | 0, l2 | 0, p2 | 0, o2 | 0) | 0;
                n2 = C;
                m2 = n2 >> 31 | ((n2 | 0) < 0 ? -1 : 0) << 1;
                h2 = m2 & 1;
                i2 = XG(p2 | 0, o2 | 0, m2 & (d2 | 0) | 0, (((n2 | 0) < 0 ? -1 : 0) >> 31 | ((n2 | 0) < 0 ? -1 : 0) << 1) & (e2 | e2 & 0) | 0) | 0;
                b2 = C;
                a2 = a2 - 1 | 0;
              } while ((a2 | 0) != 0);
              a2 = 0;
            }
            if (f2 | 0) {
              c[f2 >> 2] = i2;
              c[f2 + 4 >> 2] = b2;
            }
            o2 = (g2 | 0) >>> 31 | j2 << 1 | (0 << 1 | g2 >>> 31) & 0 | a2;
            p2 = (g2 << 1 | 0 >>> 31) & -2 | h2;
            return (C = o2, p2) | 0;
          }
          function nH(a2, b2, c2, d2, e2, f2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            pb[a2 & 31](b2 | 0, c2 | 0, d2 | 0, e2 | 0, f2 | 0);
          }
          function oH(a2, b2, c2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = +c2;
            qb[a2 & 31](b2 | 0, +c2);
          }
          function pH(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            rb[a2 & 255](b2 | 0);
          }
          function qH(a2, b2, c2, d2, e2, f2, g2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = d2 | 0;
            e2 = +e2;
            f2 = f2 | 0;
            g2 = g2 | 0;
            sb[a2 & 0](b2 | 0, c2 | 0, d2 | 0, +e2, f2 | 0, g2 | 0);
          }
          function rH(a2, b2, c2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            tb[a2 & 127](b2 | 0, c2 | 0);
          }
          function sH(a2, b2, c2, d2, e2, f2, g2, h2, i2, j2, k2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            g2 = g2 | 0;
            h2 = h2 | 0;
            i2 = i2 | 0;
            j2 = j2 | 0;
            k2 = k2 | 0;
            return ub[a2 & 3](b2 | 0, c2 | 0, d2 | 0, e2 | 0, f2 | 0, g2 | 0, h2 | 0, i2 | 0, j2 | 0, k2 | 0) | 0;
          }
          function tH(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            return vb[a2 & 127](b2 | 0) | 0;
          }
          function uH(a2, b2, c2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = +d2;
            e2 = e2 | 0;
            wb[a2 & 7](b2 | 0, c2 | 0, +d2, e2 | 0);
          }
          function vH(a2, b2, c2, d2, e2, f2, g2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = +c2;
            d2 = +d2;
            e2 = e2 | 0;
            f2 = f2 | 0;
            g2 = g2 | 0;
            xb[a2 & 0](b2 | 0, +c2, +d2, e2 | 0, f2 | 0, g2 | 0);
          }
          function wH(a2, b2, c2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = +c2;
            d2 = d2 | 0;
            e2 = e2 | 0;
            yb[a2 & 0](b2 | 0, +c2, d2 | 0, e2 | 0);
          }
          function xH(a2, b2, c2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            return zb[a2 & 31](b2 | 0, c2 | 0, d2 | 0, e2 | 0) | 0;
          }
          function yH(a2, b2, c2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = +c2;
            d2 = d2 | 0;
            Ab[a2 & 15](b2 | 0, +c2, d2 | 0);
          }
          function zH(a2, b2, c2, d2, e2, f2, g2, h2, i2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            g2 = g2 | 0;
            h2 = h2 | 0;
            i2 = i2 | 0;
            return +Bb[a2 & 1](b2 | 0, c2 | 0, d2 | 0, e2 | 0, f2 | 0, g2 | 0, h2 | 0, i2 | 0);
          }
          function AH(a2, b2, c2, d2, e2, f2, g2, h2, i2, j2, k2, l2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = +f2;
            g2 = +g2;
            h2 = +h2;
            i2 = +i2;
            j2 = j2 | 0;
            k2 = k2 | 0;
            l2 = +l2;
            Cb[a2 & 0](b2 | 0, c2 | 0, d2 | 0, e2 | 0, +f2, +g2, +h2, +i2, j2 | 0, k2 | 0, +l2);
          }
          function BH(a2, b2, c2, d2, e2, f2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            return +Db[a2 & 15](b2 | 0, c2 | 0, d2 | 0, e2 | 0, f2 | 0);
          }
          function CH(a2, b2, c2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = d2 | 0;
            return Eb[a2 & 63](b2 | 0, c2 | 0, d2 | 0) | 0;
          }
          function DH(a2, b2, c2, d2, e2, f2, g2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            g2 = g2 | 0;
            Fb[a2 & 7](b2 | 0, c2 | 0, d2 | 0, e2 | 0, f2 | 0, g2 | 0);
          }
          function EH(a2, b2, c2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = +d2;
            return Gb[a2 & 7](b2 | 0, c2 | 0, +d2) | 0;
          }
          function FH(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            return +Hb[a2 & 15](b2 | 0);
          }
          function GH(a2, b2, c2, d2, e2, f2, g2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            g2 = g2 | 0;
            return Ib[a2 & 3](b2 | 0, c2 | 0, d2 | 0, e2 | 0, f2 | 0, g2 | 0) | 0;
          }
          function HH(a2, b2, c2, d2, e2, f2, g2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = d2 | 0;
            e2 = +e2;
            f2 = f2 | 0;
            g2 = g2 | 0;
            return +Jb[a2 & 3](b2 | 0, c2 | 0, d2 | 0, +e2, f2 | 0, g2 | 0);
          }
          function IH(a2, b2, c2, d2, e2, f2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = +d2;
            e2 = e2 | 0;
            f2 = f2 | 0;
            Kb[a2 & 0](b2 | 0, c2 | 0, +d2, e2 | 0, f2 | 0);
          }
          function JH(a2, b2, c2, d2, e2, f2, g2, h2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            g2 = g2 | 0;
            h2 = h2 | 0;
            Lb[a2 & 3](b2 | 0, c2 | 0, d2 | 0, e2 | 0, f2 | 0, g2 | 0, h2 | 0);
          }
          function KH(a2, b2, c2, d2, e2, f2, g2, h2, i2, j2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            g2 = g2 | 0;
            h2 = h2 | 0;
            i2 = i2 | 0;
            j2 = j2 | 0;
            Mb[a2 & 1](b2 | 0, c2 | 0, d2 | 0, e2 | 0, f2 | 0, g2 | 0, h2 | 0, i2 | 0, j2 | 0);
          }
          function LH(a2, b2, c2, d2, e2, f2, g2, h2, i2, j2, k2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            g2 = g2 | 0;
            h2 = h2 | 0;
            i2 = i2 | 0;
            j2 = j2 | 0;
            k2 = k2 | 0;
            Nb[a2 & 3](b2 | 0, c2 | 0, d2 | 0, e2 | 0, f2 | 0, g2 | 0, h2 | 0, i2 | 0, j2 | 0, k2 | 0);
          }
          function MH(a2, b2, c2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            return Ob[a2 & 31](b2 | 0, c2 | 0) | 0;
          }
          function NH(a2, b2, c2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = d2 | 0;
            return +Pb[a2 & 15](b2 | 0, c2 | 0, d2 | 0);
          }
          function OH(a2, b2, c2, d2, e2, f2, g2, h2, i2, j2, k2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            g2 = g2 | 0;
            h2 = h2 | 0;
            i2 = i2 | 0;
            j2 = j2 | 0;
            k2 = k2 | 0;
            return +Qb[a2 & 3](b2 | 0, c2 | 0, d2 | 0, e2 | 0, f2 | 0, g2 | 0, h2 | 0, i2 | 0, j2 | 0, k2 | 0);
          }
          function PH(a2, b2, c2, d2, e2, f2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = +f2;
            Rb[a2 & 1](b2 | 0, c2 | 0, d2 | 0, e2 | 0, +f2);
          }
          function QH(a2, b2, c2, d2, e2, f2, g2, h2, i2, j2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            g2 = g2 | 0;
            h2 = h2 | 0;
            i2 = i2 | 0;
            j2 = j2 | 0;
            return +Sb[a2 & 3](b2 | 0, c2 | 0, d2 | 0, e2 | 0, f2 | 0, g2 | 0, h2 | 0, i2 | 0, j2 | 0);
          }
          function RH(a2, b2, c2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = +c2;
            return +Tb[a2 & 1](b2 | 0, +c2);
          }
          function SH(a2, b2, c2, d2, e2, f2, g2, h2, i2, j2, k2, l2, m2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = +f2;
            g2 = +g2;
            h2 = +h2;
            i2 = +i2;
            j2 = +j2;
            k2 = k2 | 0;
            l2 = +l2;
            m2 = m2 | 0;
            Ub[a2 & 0](b2 | 0, c2 | 0, d2 | 0, e2 | 0, +f2, +g2, +h2, +i2, +j2, k2 | 0, +l2, m2 | 0);
          }
          function TH(a2, b2, c2, d2, e2, f2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = +d2;
            e2 = e2 | 0;
            f2 = f2 | 0;
            return +Vb[a2 & 3](b2 | 0, c2 | 0, +d2, e2 | 0, f2 | 0);
          }
          function UH(a2, b2, c2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            return +Wb[a2 & 1](b2 | 0, c2 | 0, d2 | 0, e2 | 0);
          }
          function VH(a2, b2, c2, d2, e2, f2, g2, h2, i2, j2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            g2 = g2 | 0;
            h2 = h2 | 0;
            i2 = i2 | 0;
            j2 = j2 | 0;
            return Xb[a2 & 3](b2 | 0, c2 | 0, d2 | 0, e2 | 0, f2 | 0, g2 | 0, h2 | 0, i2 | 0, j2 | 0) | 0;
          }
          function WH(a2, b2, c2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = d2 | 0;
            e2 = +e2;
            Yb[a2 & 15](b2 | 0, c2 | 0, d2 | 0, +e2);
          }
          function XH(a2, b2, c2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = d2 | 0;
            Zb[a2 & 127](b2 | 0, c2 | 0, d2 | 0);
          }
          function YH(a2) {
            a2 = a2 | 0;
            _b[a2 & 3]();
          }
          function ZH(a2, b2, c2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = +d2;
            $b[a2 & 7](b2 | 0, c2 | 0, +d2);
          }
          function _H(a2, b2, c2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = +c2;
            d2 = d2 | 0;
            e2 = +e2;
            return ac[a2 & 1](b2 | 0, +c2, d2 | 0, +e2) | 0;
          }
          function $H(a2, b2, c2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            bc[a2 & 127](b2 | 0, c2 | 0, d2 | 0, e2 | 0);
          }
          function aI(a2, b2, c2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            ba(0);
          }
          function bI(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            ba(1);
          }
          function cI(a2) {
            a2 = a2 | 0;
            ba(2);
          }
          function dI(a2, b2, c2, d2, e2, f2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = +d2;
            e2 = e2 | 0;
            f2 = f2 | 0;
            ba(3);
          }
          function eI(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            ba(4);
          }
          function fI(a2, b2, c2, d2, e2, f2, g2, h2, i2, j2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            g2 = g2 | 0;
            h2 = h2 | 0;
            i2 = i2 | 0;
            j2 = j2 | 0;
            ba(5);
            return 0;
          }
          function gI(a2) {
            a2 = a2 | 0;
            ba(6);
            return 0;
          }
          function hI(a2, b2, c2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = +c2;
            d2 = d2 | 0;
            ba(7);
          }
          function iI(a2, b2, c2, d2, e2, f2) {
            a2 = a2 | 0;
            b2 = +b2;
            c2 = +c2;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            ba(8);
          }
          function jI(a2, b2, c2, d2) {
            a2 = a2 | 0;
            b2 = +b2;
            c2 = c2 | 0;
            d2 = d2 | 0;
            ba(9);
          }
          function kI(a2, b2, c2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = d2 | 0;
            ba(10);
            return 0;
          }
          function lI(a2, b2, c2) {
            a2 = a2 | 0;
            b2 = +b2;
            c2 = c2 | 0;
            ba(11);
          }
          function mI(a2, b2, c2, d2, e2, f2, g2, h2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            g2 = g2 | 0;
            h2 = h2 | 0;
            ba(12);
            return 0;
          }
          function nI(a2, b2, c2, d2, e2, f2, g2, h2, i2, j2, k2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = d2 | 0;
            e2 = +e2;
            f2 = +f2;
            g2 = +g2;
            h2 = +h2;
            i2 = i2 | 0;
            j2 = j2 | 0;
            k2 = +k2;
            ba(13);
          }
          function oI(a2, b2, c2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            ba(14);
            return 0;
          }
          function pI(a2, b2, c2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            ba(15);
            return 0;
          }
          function qI(a2, b2, c2, d2, e2, f2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            ba(16);
          }
          function rI(a2, b2, c2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = +c2;
            ba(17);
            return 0;
          }
          function sI(a2) {
            a2 = a2 | 0;
            ba(18);
            return 0;
          }
          function tI(a2, b2, c2, d2, e2, f2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            ba(19);
            return 0;
          }
          function uI(a2, b2, c2, d2, e2, f2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = +d2;
            e2 = e2 | 0;
            f2 = f2 | 0;
            ba(20);
            return 0;
          }
          function vI(a2, b2, c2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = +c2;
            d2 = d2 | 0;
            e2 = e2 | 0;
            ba(21);
          }
          function wI(a2, b2, c2, d2, e2, f2, g2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            g2 = g2 | 0;
            ba(22);
          }
          function xI(a2, b2, c2, d2, e2, f2, g2, h2, i2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            g2 = g2 | 0;
            h2 = h2 | 0;
            i2 = i2 | 0;
            ba(23);
          }
          function yI(a2, b2, c2, d2, e2, f2, g2, h2, i2, j2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            g2 = g2 | 0;
            h2 = h2 | 0;
            i2 = i2 | 0;
            j2 = j2 | 0;
            ba(24);
          }
          function zI(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            ba(25);
            return 0;
          }
          function AI(a2, b2, c2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            ba(26);
            return 0;
          }
          function BI(a2, b2, c2, d2, e2, f2, g2, h2, i2, j2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            g2 = g2 | 0;
            h2 = h2 | 0;
            i2 = i2 | 0;
            j2 = j2 | 0;
            ba(27);
            return 0;
          }
          function CI(a2, b2, c2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = d2 | 0;
            e2 = +e2;
            ba(28);
          }
          function DI(a2, b2, c2, d2, e2, f2, g2, h2, i2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            g2 = g2 | 0;
            h2 = h2 | 0;
            i2 = i2 | 0;
            ba(29);
            return 0;
          }
          function EI(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            ba(30);
            return 0;
          }
          function FI(a2, b2, c2, d2, e2, f2, g2, h2, i2, j2, k2, l2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = d2 | 0;
            e2 = +e2;
            f2 = +f2;
            g2 = +g2;
            h2 = +h2;
            i2 = +i2;
            j2 = j2 | 0;
            k2 = +k2;
            l2 = l2 | 0;
            ba(31);
          }
          function GI(a2, b2, c2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = +c2;
            d2 = d2 | 0;
            e2 = e2 | 0;
            ba(32);
            return 0;
          }
          function HI(a2, b2, c2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = d2 | 0;
            ba(33);
            return 0;
          }
          function II(a2, b2, c2, d2, e2, f2, g2, h2, i2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            g2 = g2 | 0;
            h2 = h2 | 0;
            i2 = i2 | 0;
            ba(34);
            return 0;
          }
          function JI(a2, b2, c2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = +d2;
            ba(35);
          }
          function KI(a2, b2, c2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            ba(36);
          }
          function LI() {
            ba(37);
          }
          function MI() {
            mb();
          }
          function NI(a2, b2, c2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = +c2;
            ba(38);
          }
          function OI(a2, b2, c2, d2) {
            a2 = a2 | 0;
            b2 = +b2;
            c2 = c2 | 0;
            d2 = +d2;
            ba(39);
            return 0;
          }
          function PI(a2, b2, c2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = d2 | 0;
            ba(40);
          }
          function Lr(b2, d2) {
            b2 = b2 | 0;
            d2 = +d2;
            var e2 = 0, f2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0;
            C2 = i;
            i = i + 64 | 0;
            e2 = c[b2 + 128 >> 2] | 0;
            if ((e2 | 0) > 0) {
              f2 = 0;
              do {
                Mr(c[b2 + 108 >> 2] | 0, c[b2 + 136 >> 2] | 0, f2, 0);
                f2 = f2 + 1 | 0;
                e2 = c[b2 + 128 >> 2] | 0;
              } while ((f2 | 0) < (e2 | 0));
            }
            f2 = c[b2 + 108 >> 2] | 0;
            t2 = +g[f2 + 336 >> 2];
            u2 = +g[f2 + 340 >> 2];
            h2 = +g[f2 + 344 >> 2];
            h2 = +O(+(t2 * t2 + u2 * u2 + h2 * h2)) * 3.5999999046325684;
            g[b2 + 104 >> 2] = h2;
            B2 = c[b2 + 120 >> 2] | 0;
            if (+g[f2 + 4 + (B2 << 2) >> 2] * +g[f2 + 336 >> 2] + +g[f2 + 20 + (B2 << 2) >> 2] * +g[f2 + 340 >> 2] + +g[f2 + 36 + (B2 << 2) >> 2] * +g[f2 + 344 >> 2] < 0)
              g[b2 + 104 >> 2] = -h2;
            if ((e2 | 0) > 0) {
              B2 = 0;
              do {
                A2 = c[b2 + 136 >> 2] | 0;
                p2 = A2 + (B2 * 284 | 0) | 0;
                Nr(f2, p2, 0);
                o2 = A2 + (B2 * 284 | 0) + 204 | 0;
                e2 = A2 + (B2 * 284 | 0) + 212 | 0;
                h2 = +g[o2 >> 2] + +g[e2 >> 2];
                q2 = A2 + (B2 * 284 | 0) + 52 | 0;
                v2 = A2 + (B2 * 284 | 0) + 56 | 0;
                w2 = A2 + (B2 * 284 | 0) + 60 | 0;
                D2 = A2 + (B2 * 284 | 0) + 36 | 0;
                x2 = A2 + (B2 * 284 | 0) + 16 | 0;
                t2 = h2 * +g[v2 >> 2] + +g[A2 + (B2 * 284 | 0) + 40 >> 2];
                u2 = h2 * +g[w2 >> 2] + +g[A2 + (B2 * 284 | 0) + 44 >> 2];
                g[A2 + (B2 * 284 | 0) + 16 >> 2] = +g[q2 >> 2] * h2 + +g[D2 >> 2];
                y2 = A2 + (B2 * 284 | 0) + 20 | 0;
                g[y2 >> 2] = t2;
                z2 = A2 + (B2 * 284 | 0) + 24 | 0;
                g[z2 >> 2] = u2;
                g[A2 + (B2 * 284 | 0) + 28 >> 2] = 0;
                g[C2 + 32 >> 2] = -1;
                f2 = c[b2 + 92 >> 2] | 0;
                D2 = zb[c[(c[f2 >> 2] | 0) + 8 >> 2] & 31](f2, D2, x2, C2) | 0;
                f2 = A2 + (B2 * 284 | 0) + 88 | 0;
                c[f2 >> 2] = 0;
                do
                  if (D2) {
                    h2 = h2 * +g[C2 + 32 >> 2];
                    c[p2 >> 2] = c[C2 + 16 >> 2];
                    c[p2 + 4 >> 2] = c[C2 + 16 + 4 >> 2];
                    c[p2 + 8 >> 2] = c[C2 + 16 + 8 >> 2];
                    c[p2 + 12 >> 2] = c[C2 + 16 + 12 >> 2];
                    a[A2 + (B2 * 284 | 0) + 84 >> 0] = 1;
                    if (!(a[19888] | 0)) {
                      a[19888] = 1;
                      c[C2 + 40 >> 2] = 0;
                      c[C2 + 40 + 4 >> 2] = 0;
                      c[C2 + 40 + 8 >> 2] = 0;
                      c[C2 + 40 + 12 >> 2] = 0;
                      Cr(21908, 0, 0, 0, C2 + 40 | 0);
                    }
                    c[5528] = c[5528] | 1;
                    g[5569] = 0;
                    j2 = +g[5579] * 0;
                    k2 = +g[5580] * 0;
                    g[5574] = +g[5578] * 0;
                    g[5575] = j2;
                    g[5576] = k2;
                    g[5577] = 0;
                    c[5582] = 0;
                    c[5583] = 0;
                    c[5584] = 0;
                    c[5585] = 0;
                    k2 = +g[5571] * 0;
                    j2 = +g[5572] * 0;
                    g[5623] = +g[5570] * 0;
                    g[5624] = k2;
                    g[5625] = j2;
                    g[5626] = 0;
                    c[f2 >> 2] = 21908;
                    h2 = h2 - +g[e2 >> 2];
                    e2 = A2 + (B2 * 284 | 0) + 32 | 0;
                    g[e2 >> 2] = h2;
                    j2 = +g[o2 >> 2];
                    k2 = +g[A2 + (B2 * 284 | 0) + 208 >> 2] * 0.009999999776482582;
                    if (h2 < j2 - k2) {
                      g[e2 >> 2] = j2 - k2;
                      h2 = j2 - k2;
                    }
                    if (h2 > j2 + k2)
                      g[e2 >> 2] = j2 + k2;
                    c[x2 >> 2] = c[C2 >> 2];
                    c[x2 + 4 >> 2] = c[C2 + 4 >> 2];
                    c[x2 + 8 >> 2] = c[C2 + 8 >> 2];
                    c[x2 + 12 >> 2] = c[C2 + 12 >> 2];
                    s2 = +g[p2 >> 2];
                    t2 = +g[A2 + (B2 * 284 | 0) + 4 >> 2];
                    u2 = +g[A2 + (B2 * 284 | 0) + 8 >> 2];
                    r2 = s2 * +g[q2 >> 2] + t2 * +g[v2 >> 2] + u2 * +g[w2 >> 2];
                    e2 = c[b2 + 108 >> 2] | 0;
                    n2 = +g[x2 >> 2] - +g[e2 + 52 >> 2];
                    m2 = +g[y2 >> 2] - +g[e2 + 56 >> 2];
                    h2 = +g[z2 >> 2] - +g[e2 + 60 >> 2];
                    j2 = +g[e2 + 356 >> 2];
                    k2 = +g[e2 + 360 >> 2];
                    l2 = +g[e2 + 352 >> 2];
                    if (!(r2 >= -0.10000000149011612)) {
                      g[A2 + (B2 * 284 | 0) + 272 >> 2] = -1 / r2 * (s2 * (j2 * h2 - m2 * k2 + +g[e2 + 336 >> 2]) + t2 * (n2 * k2 - h2 * l2 + +g[e2 + 340 >> 2]) + u2 * (m2 * l2 - n2 * j2 + +g[e2 + 344 >> 2]));
                      g[A2 + (B2 * 284 | 0) + 268 >> 2] = -1 / r2;
                      break;
                    } else {
                      g[A2 + (B2 * 284 | 0) + 272 >> 2] = 0;
                      g[A2 + (B2 * 284 | 0) + 268 >> 2] = 10;
                      break;
                    }
                  } else {
                    c[A2 + (B2 * 284 | 0) + 32 >> 2] = c[o2 >> 2];
                    g[A2 + (B2 * 284 | 0) + 272 >> 2] = 0;
                    t2 = -+g[v2 >> 2];
                    u2 = -+g[w2 >> 2];
                    g[p2 >> 2] = -+g[q2 >> 2];
                    g[A2 + (B2 * 284 | 0) + 4 >> 2] = t2;
                    g[A2 + (B2 * 284 | 0) + 8 >> 2] = u2;
                    g[A2 + (B2 * 284 | 0) + 12 >> 2] = 0;
                    g[A2 + (B2 * 284 | 0) + 268 >> 2] = 1;
                  }
                while (0);
                B2 = B2 + 1 | 0;
                e2 = c[b2 + 128 >> 2] | 0;
                f2 = c[b2 + 108 >> 2] | 0;
              } while ((B2 | 0) < (e2 | 0));
              j2 = 1 / +g[f2 + 368 >> 2];
              if ((e2 | 0) > 0) {
                f2 = 0;
                do {
                  e2 = c[b2 + 136 >> 2] | 0;
                  if (!(a[e2 + (f2 * 284 | 0) + 84 >> 0] | 0))
                    h2 = 0;
                  else {
                    h2 = +g[e2 + (f2 * 284 | 0) + 272 >> 2];
                    h2 = j2 * (+g[e2 + (f2 * 284 | 0) + 216 >> 2] * (+g[e2 + (f2 * 284 | 0) + 204 >> 2] - +g[e2 + (f2 * 284 | 0) + 32 >> 2]) * +g[e2 + (f2 * 284 | 0) + 268 >> 2] - h2 * +g[(h2 < 0 ? e2 + (f2 * 284 | 0) + 220 | 0 : e2 + (f2 * 284 | 0) + 224 | 0) >> 2]);
                    h2 = h2 < 0 ? 0 : h2;
                  }
                  g[e2 + (f2 * 284 | 0) + 276 >> 2] = h2;
                  f2 = f2 + 1 | 0;
                  e2 = c[b2 + 128 >> 2] | 0;
                } while ((f2 | 0) < (e2 | 0));
                if ((e2 | 0) > 0) {
                  e2 = 0;
                  do {
                    B2 = c[b2 + 136 >> 2] | 0;
                    s2 = +g[B2 + (e2 * 284 | 0) + 276 >> 2];
                    u2 = +g[B2 + (e2 * 284 | 0) + 248 >> 2];
                    s2 = s2 > u2 ? u2 : s2;
                    u2 = s2 * +g[B2 + (e2 * 284 | 0) + 4 >> 2] * d2;
                    t2 = s2 * +g[B2 + (e2 * 284 | 0) + 8 >> 2] * d2;
                    g[C2 + 40 >> 2] = +g[B2 + (e2 * 284 | 0) >> 2] * s2 * d2;
                    g[C2 + 40 + 4 >> 2] = u2;
                    g[C2 + 40 + 8 >> 2] = t2;
                    g[C2 + 40 + 12 >> 2] = 0;
                    D2 = c[b2 + 108 >> 2] | 0;
                    t2 = +g[B2 + (e2 * 284 | 0) + 20 >> 2] - +g[D2 + 56 >> 2];
                    u2 = +g[B2 + (e2 * 284 | 0) + 24 >> 2] - +g[D2 + 60 >> 2];
                    g[C2 >> 2] = +g[B2 + (e2 * 284 | 0) + 16 >> 2] - +g[D2 + 52 >> 2];
                    g[C2 + 4 >> 2] = t2;
                    g[C2 + 8 >> 2] = u2;
                    g[C2 + 12 >> 2] = 0;
                    Uo(D2, C2 + 40 | 0, C2);
                    e2 = e2 + 1 | 0;
                  } while ((e2 | 0) < (c[b2 + 128 >> 2] | 0));
                }
              }
            }
            qb[c[(c[b2 >> 2] | 0) + 20 >> 2] & 31](b2, d2);
            f2 = c[b2 + 128 >> 2] | 0;
            if ((f2 | 0) <= 0) {
              i = C2;
              return;
            }
            o2 = c[b2 + 136 >> 2] | 0;
            p2 = c[b2 + 108 >> 2] | 0;
            q2 = 0;
            do {
              h2 = +g[o2 + (q2 * 284 | 0) + 36 >> 2] - +g[p2 + 52 >> 2];
              j2 = +g[o2 + (q2 * 284 | 0) + 40 >> 2] - +g[p2 + 56 >> 2];
              k2 = +g[o2 + (q2 * 284 | 0) + 44 >> 2] - +g[p2 + 60 >> 2];
              l2 = +g[p2 + 356 >> 2];
              m2 = +g[p2 + 360 >> 2];
              n2 = +g[p2 + 352 >> 2];
              if (!(a[o2 + (q2 * 284 | 0) + 84 >> 0] | 0)) {
                e2 = o2 + (q2 * 284 | 0) + 240 | 0;
                h2 = +g[e2 >> 2];
                D2 = o2 + (q2 * 284 | 0) + 236 | 0;
                g[D2 >> 2] = h2 + +g[D2 >> 2];
              } else {
                e2 = c[b2 + 120 >> 2] | 0;
                F2 = +g[p2 + 4 + (e2 << 2) >> 2];
                r2 = +g[p2 + 20 + (e2 << 2) >> 2];
                t2 = +g[p2 + 36 + (e2 << 2) >> 2];
                E2 = +g[o2 + (q2 * 284 | 0) >> 2];
                s2 = +g[o2 + (q2 * 284 | 0) + 4 >> 2];
                u2 = +g[o2 + (q2 * 284 | 0) + 8 >> 2];
                h2 = ((j2 * n2 - h2 * l2 + +g[p2 + 344 >> 2]) * (t2 - u2 * (F2 * E2 + r2 * s2 + t2 * u2)) + ((l2 * k2 - j2 * m2 + +g[p2 + 336 >> 2]) * (F2 - E2 * (F2 * E2 + r2 * s2 + t2 * u2)) + (h2 * m2 - k2 * n2 + +g[p2 + 340 >> 2]) * (r2 - s2 * (F2 * E2 + r2 * s2 + t2 * u2)))) * d2 / +g[o2 + (q2 * 284 | 0) + 212 >> 2];
                e2 = o2 + (q2 * 284 | 0) + 240 | 0;
                g[e2 >> 2] = h2;
                D2 = o2 + (q2 * 284 | 0) + 236 | 0;
                g[D2 >> 2] = +g[D2 >> 2] + h2;
              }
              g[e2 >> 2] = h2 * 0.9900000095367432;
              q2 = q2 + 1 | 0;
            } while ((q2 | 0) != (f2 | 0));
            i = C2;
            return;
          }
          function Mr(a2, b2, c2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0;
            Nr(a2, b2 + (c2 * 284 | 0) | 0, d2);
            m2 = +g[b2 + (c2 * 284 | 0) + 52 >> 2];
            h2 = +g[b2 + (c2 * 284 | 0) + 56 >> 2];
            q2 = +g[b2 + (c2 * 284 | 0) + 60 >> 2];
            G2 = +g[b2 + (c2 * 284 | 0) + 76 >> 2];
            x2 = +g[b2 + (c2 * 284 | 0) + 72 >> 2];
            z2 = +g[b2 + (c2 * 284 | 0) + 68 >> 2];
            w2 = 1 / +O(+((x2 * -m2 - z2 * -h2) * (x2 * -m2 - z2 * -h2) + ((G2 * -h2 - x2 * -q2) * (G2 * -h2 - x2 * -q2) + (z2 * -q2 - G2 * -m2) * (z2 * -q2 - G2 * -m2))));
            v2 = (G2 * -h2 - x2 * -q2) * w2;
            u2 = w2 * (z2 * -q2 - G2 * -m2);
            w2 = w2 * (x2 * -m2 - z2 * -h2);
            e2 = +g[b2 + (c2 * 284 | 0) + 232 >> 2] * 0.5;
            k2 = +R(+e2) / +O(+(m2 * m2 + h2 * h2 + q2 * q2));
            e2 = +Q(+e2);
            l2 = 2 / (e2 * e2 + (k2 * -q2 * (k2 * -q2) + (k2 * -m2 * (k2 * -m2) + k2 * -h2 * (k2 * -h2))));
            E2 = 1 - (k2 * -h2 * (k2 * -h2 * l2) + k2 * -q2 * (k2 * -q2 * l2));
            D2 = k2 * -m2 * (k2 * -h2 * l2) - e2 * (k2 * -q2 * l2);
            F2 = k2 * -m2 * (k2 * -q2 * l2) + e2 * (k2 * -h2 * l2);
            B2 = k2 * -m2 * (k2 * -h2 * l2) + e2 * (k2 * -q2 * l2);
            A2 = 1 - (k2 * -m2 * (k2 * -m2 * l2) + k2 * -q2 * (k2 * -q2 * l2));
            C2 = k2 * -h2 * (k2 * -q2 * l2) - e2 * (k2 * -m2 * l2);
            j2 = k2 * -m2 * (k2 * -q2 * l2) - e2 * (k2 * -h2 * l2);
            e2 = k2 * -h2 * (k2 * -q2 * l2) + e2 * (k2 * -m2 * l2);
            l2 = 1 - (k2 * -m2 * (k2 * -m2 * l2) + k2 * -h2 * (k2 * -h2 * l2));
            k2 = +g[b2 + (c2 * 284 | 0) + 236 >> 2] * -0.5;
            y2 = +R(+k2) / +O(+(G2 * G2 + (x2 * x2 + z2 * z2)));
            k2 = +Q(+k2);
            r2 = 2 / (k2 * k2 + (G2 * y2 * (G2 * y2) + (z2 * y2 * (z2 * y2) + x2 * y2 * (x2 * y2))));
            n2 = 1 - (x2 * y2 * (x2 * y2 * r2) + G2 * y2 * (G2 * y2 * r2));
            i2 = z2 * y2 * (x2 * y2 * r2) - k2 * (G2 * y2 * r2);
            t2 = z2 * y2 * (G2 * y2 * r2) + k2 * (x2 * y2 * r2);
            o2 = z2 * y2 * (x2 * y2 * r2) + k2 * (G2 * y2 * r2);
            f2 = 1 - (z2 * y2 * (z2 * y2 * r2) + G2 * y2 * (G2 * y2 * r2));
            s2 = x2 * y2 * (G2 * y2 * r2) - k2 * (z2 * y2 * r2);
            p2 = z2 * y2 * (G2 * y2 * r2) - k2 * (x2 * y2 * r2);
            k2 = x2 * y2 * (G2 * y2 * r2) + k2 * (z2 * y2 * r2);
            r2 = 1 - (z2 * y2 * (z2 * y2 * r2) + x2 * y2 * (x2 * y2 * r2));
            y2 = +g[b2 + (c2 * 284 | 0) + 68 >> 2];
            x2 = +g[b2 + (c2 * 284 | 0) + 72 >> 2];
            z2 = +g[b2 + (c2 * 284 | 0) + 76 >> 2];
            g[b2 + (c2 * 284 | 0) + 92 >> 2] = z2 * (E2 * t2 + D2 * s2 + F2 * r2) + (y2 * (F2 * p2 + (D2 * o2 + E2 * n2)) + x2 * (F2 * k2 + (E2 * i2 + D2 * f2)));
            g[b2 + (c2 * 284 | 0) + 96 >> 2] = w2 * (E2 * t2 + D2 * s2 + F2 * r2) + (v2 * (F2 * p2 + (D2 * o2 + E2 * n2)) + u2 * (F2 * k2 + (E2 * i2 + D2 * f2)));
            g[b2 + (c2 * 284 | 0) + 100 >> 2] = (E2 * t2 + D2 * s2 + F2 * r2) * -q2 + ((F2 * p2 + (D2 * o2 + E2 * n2)) * -m2 + (F2 * k2 + (E2 * i2 + D2 * f2)) * -h2);
            g[b2 + (c2 * 284 | 0) + 104 >> 2] = 0;
            g[b2 + (c2 * 284 | 0) + 108 >> 2] = z2 * (B2 * t2 + A2 * s2 + C2 * r2) + (y2 * (C2 * p2 + (A2 * o2 + B2 * n2)) + x2 * (C2 * k2 + (B2 * i2 + A2 * f2)));
            g[b2 + (c2 * 284 | 0) + 112 >> 2] = w2 * (B2 * t2 + A2 * s2 + C2 * r2) + (v2 * (C2 * p2 + (A2 * o2 + B2 * n2)) + u2 * (C2 * k2 + (B2 * i2 + A2 * f2)));
            g[b2 + (c2 * 284 | 0) + 116 >> 2] = (B2 * t2 + A2 * s2 + C2 * r2) * -q2 + ((C2 * p2 + (A2 * o2 + B2 * n2)) * -m2 + (C2 * k2 + (B2 * i2 + A2 * f2)) * -h2);
            g[b2 + (c2 * 284 | 0) + 120 >> 2] = 0;
            g[b2 + (c2 * 284 | 0) + 124 >> 2] = z2 * (j2 * t2 + e2 * s2 + l2 * r2) + (y2 * (l2 * p2 + (e2 * o2 + j2 * n2)) + x2 * (l2 * k2 + (j2 * i2 + e2 * f2)));
            g[b2 + (c2 * 284 | 0) + 128 >> 2] = w2 * (j2 * t2 + e2 * s2 + l2 * r2) + (v2 * (l2 * p2 + (e2 * o2 + j2 * n2)) + u2 * (l2 * k2 + (j2 * i2 + e2 * f2)));
            g[b2 + (c2 * 284 | 0) + 132 >> 2] = (j2 * t2 + e2 * s2 + l2 * r2) * -q2 + ((l2 * p2 + (e2 * o2 + j2 * n2)) * -m2 + (l2 * k2 + (j2 * i2 + e2 * f2)) * -h2);
            g[b2 + (c2 * 284 | 0) + 136 >> 2] = 0;
            h2 = +g[b2 + (c2 * 284 | 0) + 32 >> 2];
            f2 = h2 * +g[b2 + (c2 * 284 | 0) + 56 >> 2] + +g[b2 + (c2 * 284 | 0) + 40 >> 2];
            e2 = h2 * +g[b2 + (c2 * 284 | 0) + 60 >> 2] + +g[b2 + (c2 * 284 | 0) + 44 >> 2];
            g[b2 + (c2 * 284 | 0) + 140 >> 2] = +g[b2 + (c2 * 284 | 0) + 52 >> 2] * h2 + +g[b2 + (c2 * 284 | 0) + 36 >> 2];
            g[b2 + (c2 * 284 | 0) + 144 >> 2] = f2;
            g[b2 + (c2 * 284 | 0) + 148 >> 2] = e2;
            g[b2 + (c2 * 284 | 0) + 152 >> 2] = 0;
            return;
          }
          function Nr(b2, d2, e2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0;
            h2 = i;
            i = i + 64 | 0;
            a[d2 + 84 >> 0] = 0;
            c[h2 >> 2] = c[b2 + 4 >> 2];
            c[h2 + 4 >> 2] = c[b2 + 4 + 4 >> 2];
            c[h2 + 8 >> 2] = c[b2 + 4 + 8 >> 2];
            c[h2 + 12 >> 2] = c[b2 + 4 + 12 >> 2];
            c[h2 + 16 >> 2] = c[b2 + 20 >> 2];
            c[h2 + 16 + 4 >> 2] = c[b2 + 20 + 4 >> 2];
            c[h2 + 16 + 8 >> 2] = c[b2 + 20 + 8 >> 2];
            c[h2 + 16 + 12 >> 2] = c[b2 + 20 + 12 >> 2];
            c[h2 + 32 >> 2] = c[b2 + 36 >> 2];
            c[h2 + 32 + 4 >> 2] = c[b2 + 36 + 4 >> 2];
            c[h2 + 32 + 8 >> 2] = c[b2 + 36 + 8 >> 2];
            c[h2 + 32 + 12 >> 2] = c[b2 + 36 + 12 >> 2];
            c[h2 + 48 >> 2] = c[b2 + 52 >> 2];
            c[h2 + 48 + 4 >> 2] = c[b2 + 52 + 4 >> 2];
            c[h2 + 48 + 8 >> 2] = c[b2 + 52 + 8 >> 2];
            c[h2 + 48 + 12 >> 2] = c[b2 + 52 + 12 >> 2];
            if (e2 ? (f2 = c[b2 + 504 >> 2] | 0, f2 | 0) : 0)
              tb[c[(c[f2 >> 2] | 0) + 8 >> 2] & 127](f2, h2);
            w2 = +g[d2 + 156 >> 2];
            u2 = +g[h2 >> 2];
            v2 = +g[d2 + 160 >> 2];
            t2 = +g[h2 + 4 >> 2];
            o2 = +g[d2 + 164 >> 2];
            s2 = +g[h2 + 8 >> 2];
            r2 = +g[h2 + 16 >> 2];
            q2 = +g[h2 + 20 >> 2];
            p2 = +g[h2 + 24 >> 2];
            n2 = +g[h2 + 32 >> 2];
            l2 = +g[h2 + 36 >> 2];
            j2 = +g[h2 + 40 >> 2];
            m2 = w2 * r2 + v2 * q2 + o2 * p2 + +g[h2 + 52 >> 2];
            k2 = w2 * n2 + v2 * l2 + o2 * j2 + +g[h2 + 56 >> 2];
            g[d2 + 36 >> 2] = w2 * u2 + v2 * t2 + o2 * s2 + +g[h2 + 48 >> 2];
            g[d2 + 40 >> 2] = m2;
            g[d2 + 44 >> 2] = k2;
            g[d2 + 48 >> 2] = 0;
            k2 = +g[d2 + 172 >> 2];
            m2 = +g[d2 + 176 >> 2];
            o2 = +g[d2 + 180 >> 2];
            g[d2 + 52 >> 2] = u2 * k2 + t2 * m2 + s2 * o2;
            g[d2 + 56 >> 2] = k2 * r2 + m2 * q2 + o2 * p2;
            g[d2 + 60 >> 2] = k2 * n2 + m2 * l2 + o2 * j2;
            g[d2 + 64 >> 2] = 0;
            o2 = +g[d2 + 188 >> 2];
            m2 = +g[d2 + 192 >> 2];
            k2 = +g[d2 + 196 >> 2];
            g[d2 + 68 >> 2] = u2 * o2 + t2 * m2 + s2 * k2;
            g[d2 + 72 >> 2] = o2 * r2 + m2 * q2 + k2 * p2;
            g[d2 + 76 >> 2] = o2 * n2 + m2 * l2 + k2 * j2;
            g[d2 + 80 >> 2] = 0;
            i = h2;
            return;
          }
          function Or(b2, d2) {
            b2 = b2 | 0;
            d2 = +d2;
            var e2 = 0, f2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0, N2 = 0, P2 = 0, Q2 = 0, R2 = 0;
            r2 = i;
            i = i + 144 | 0;
            o2 = c[b2 + 128 >> 2] | 0;
            if (!o2) {
              i = r2;
              return;
            }
            k2 = c[b2 + 8 >> 2] | 0;
            if ((k2 | 0) < (o2 | 0)) {
              if ((c[b2 + 12 >> 2] | 0) < (o2 | 0)) {
                c[5637] = (c[5637] | 0) + 1;
                e2 = qG((o2 << 4 | 3) + 16 | 0) | 0;
                if (!e2)
                  j2 = 0;
                else {
                  c[(e2 + 4 + 15 & -16) + -4 >> 2] = e2;
                  j2 = e2 + 4 + 15 & -16;
                }
                e2 = c[b2 + 8 >> 2] | 0;
                if ((e2 | 0) > 0) {
                  h2 = 0;
                  do {
                    n2 = j2 + (h2 << 4) | 0;
                    s2 = (c[b2 + 16 >> 2] | 0) + (h2 << 4) | 0;
                    c[n2 >> 2] = c[s2 >> 2];
                    c[n2 + 4 >> 2] = c[s2 + 4 >> 2];
                    c[n2 + 8 >> 2] = c[s2 + 8 >> 2];
                    c[n2 + 12 >> 2] = c[s2 + 12 >> 2];
                    h2 = h2 + 1 | 0;
                  } while ((h2 | 0) != (e2 | 0));
                }
                e2 = c[b2 + 16 >> 2] | 0;
                if (e2 | 0) {
                  if (a[b2 + 20 >> 0] | 0) {
                    c[5638] = (c[5638] | 0) + 1;
                    rG(c[e2 + -4 >> 2] | 0);
                  }
                  c[b2 + 16 >> 2] = 0;
                }
                a[b2 + 20 >> 0] = 1;
                c[b2 + 16 >> 2] = j2;
                c[b2 + 12 >> 2] = o2;
                h2 = b2 + 16 | 0;
              } else
                h2 = b2 + 16 | 0;
              e2 = k2;
              do {
                s2 = (c[h2 >> 2] | 0) + (e2 << 4) | 0;
                c[s2 >> 2] = c[r2 + 80 >> 2];
                c[s2 + 4 >> 2] = c[r2 + 80 + 4 >> 2];
                c[s2 + 8 >> 2] = c[r2 + 80 + 8 >> 2];
                c[s2 + 12 >> 2] = c[r2 + 80 + 12 >> 2];
                e2 = e2 + 1 | 0;
              } while ((e2 | 0) != (o2 | 0));
            }
            c[b2 + 8 >> 2] = o2;
            k2 = c[b2 + 28 >> 2] | 0;
            if ((k2 | 0) < (o2 | 0)) {
              if ((c[b2 + 32 >> 2] | 0) < (o2 | 0)) {
                c[5637] = (c[5637] | 0) + 1;
                e2 = qG((o2 << 4 | 3) + 16 | 0) | 0;
                if (!e2)
                  j2 = 0;
                else {
                  c[(e2 + 4 + 15 & -16) + -4 >> 2] = e2;
                  j2 = e2 + 4 + 15 & -16;
                }
                e2 = c[b2 + 28 >> 2] | 0;
                if ((e2 | 0) > 0) {
                  h2 = 0;
                  do {
                    s2 = j2 + (h2 << 4) | 0;
                    n2 = (c[b2 + 36 >> 2] | 0) + (h2 << 4) | 0;
                    c[s2 >> 2] = c[n2 >> 2];
                    c[s2 + 4 >> 2] = c[n2 + 4 >> 2];
                    c[s2 + 8 >> 2] = c[n2 + 8 >> 2];
                    c[s2 + 12 >> 2] = c[n2 + 12 >> 2];
                    h2 = h2 + 1 | 0;
                  } while ((h2 | 0) != (e2 | 0));
                }
                e2 = c[b2 + 36 >> 2] | 0;
                if (e2 | 0) {
                  if (a[b2 + 40 >> 0] | 0) {
                    c[5638] = (c[5638] | 0) + 1;
                    rG(c[e2 + -4 >> 2] | 0);
                  }
                  c[b2 + 36 >> 2] = 0;
                }
                a[b2 + 40 >> 0] = 1;
                c[b2 + 36 >> 2] = j2;
                c[b2 + 32 >> 2] = o2;
                h2 = b2 + 36 | 0;
              } else
                h2 = b2 + 36 | 0;
              e2 = k2;
              do {
                s2 = (c[h2 >> 2] | 0) + (e2 << 4) | 0;
                c[s2 >> 2] = c[r2 + 64 >> 2];
                c[s2 + 4 >> 2] = c[r2 + 64 + 4 >> 2];
                c[s2 + 8 >> 2] = c[r2 + 64 + 8 >> 2];
                c[s2 + 12 >> 2] = c[r2 + 64 + 12 >> 2];
                e2 = e2 + 1 | 0;
              } while ((e2 | 0) != (o2 | 0));
            }
            c[b2 + 28 >> 2] = o2;
            n2 = c[b2 + 48 >> 2] | 0;
            if ((n2 | 0) < (o2 | 0)) {
              do
                if ((c[b2 + 52 >> 2] | 0) < (o2 | 0)) {
                  c[5637] = (c[5637] | 0) + 1;
                  e2 = qG((o2 << 2 | 3) + 16 | 0) | 0;
                  if (!e2)
                    e2 = 0;
                  else {
                    c[(e2 + 4 + 15 & -16) + -4 >> 2] = e2;
                    e2 = e2 + 4 + 15 & -16;
                  }
                  h2 = c[b2 + 48 >> 2] | 0;
                  j2 = c[b2 + 56 >> 2] | 0;
                  if ((h2 | 0) <= 0) {
                    if (!j2) {
                      a[b2 + 60 >> 0] = 1;
                      c[b2 + 56 >> 2] = e2;
                      c[b2 + 52 >> 2] = o2;
                      h2 = o2 << 2;
                      break;
                    }
                  } else {
                    k2 = 0;
                    do {
                      c[e2 + (k2 << 2) >> 2] = c[j2 + (k2 << 2) >> 2];
                      k2 = k2 + 1 | 0;
                    } while ((k2 | 0) != (h2 | 0));
                  }
                  if (a[b2 + 60 >> 0] | 0) {
                    c[5638] = (c[5638] | 0) + 1;
                    rG(c[j2 + -4 >> 2] | 0);
                  }
                  a[b2 + 60 >> 0] = 1;
                  c[b2 + 56 >> 2] = e2;
                  c[b2 + 52 >> 2] = o2;
                  h2 = o2 << 2;
                } else {
                  h2 = o2 << 2;
                  e2 = c[b2 + 56 >> 2] | 0;
                }
              while (0);
              ZG(e2 + (n2 << 2) | 0, 0, h2 - (n2 << 2) | 0) | 0;
            }
            c[b2 + 48 >> 2] = o2;
            n2 = c[b2 + 68 >> 2] | 0;
            if ((n2 | 0) < (o2 | 0)) {
              do
                if ((c[b2 + 72 >> 2] | 0) < (o2 | 0)) {
                  c[5637] = (c[5637] | 0) + 1;
                  e2 = qG((o2 << 2 | 3) + 16 | 0) | 0;
                  if (!e2)
                    e2 = 0;
                  else {
                    c[(e2 + 4 + 15 & -16) + -4 >> 2] = e2;
                    e2 = e2 + 4 + 15 & -16;
                  }
                  h2 = c[b2 + 68 >> 2] | 0;
                  j2 = c[b2 + 76 >> 2] | 0;
                  if ((h2 | 0) <= 0) {
                    if (!j2) {
                      a[b2 + 80 >> 0] = 1;
                      c[b2 + 76 >> 2] = e2;
                      c[b2 + 72 >> 2] = o2;
                      h2 = o2 << 2;
                      break;
                    }
                  } else {
                    k2 = 0;
                    do {
                      c[e2 + (k2 << 2) >> 2] = c[j2 + (k2 << 2) >> 2];
                      k2 = k2 + 1 | 0;
                    } while ((k2 | 0) != (h2 | 0));
                  }
                  if (a[b2 + 80 >> 0] | 0) {
                    c[5638] = (c[5638] | 0) + 1;
                    rG(c[j2 + -4 >> 2] | 0);
                  }
                  a[b2 + 80 >> 0] = 1;
                  c[b2 + 76 >> 2] = e2;
                  c[b2 + 72 >> 2] = o2;
                  h2 = o2 << 2;
                } else {
                  h2 = o2 << 2;
                  e2 = c[b2 + 76 >> 2] | 0;
                }
              while (0);
              ZG(e2 + (n2 << 2) | 0, 0, h2 - (n2 << 2) | 0) | 0;
            }
            c[b2 + 68 >> 2] = o2;
            e2 = c[b2 + 128 >> 2] | 0;
            if ((e2 | 0) <= 0) {
              i = r2;
              return;
            }
            h2 = c[b2 + 76 >> 2] | 0;
            j2 = c[b2 + 56 >> 2] | 0;
            k2 = 0;
            do {
              g[h2 + (k2 << 2) >> 2] = 0;
              g[j2 + (k2 << 2) >> 2] = 0;
              k2 = k2 + 1 | 0;
            } while ((k2 | 0) != (e2 | 0));
            k2 = 0;
            do {
              h2 = c[b2 + 136 >> 2] | 0;
              j2 = c[h2 + (k2 * 284 | 0) + 88 >> 2] | 0;
              if (j2) {
                e2 = h2 + (k2 * 284 | 0) + 92 | 0;
                c[r2 + 96 >> 2] = c[e2 >> 2];
                c[r2 + 96 + 4 >> 2] = c[e2 + 4 >> 2];
                c[r2 + 96 + 8 >> 2] = c[e2 + 8 >> 2];
                c[r2 + 96 + 12 >> 2] = c[e2 + 12 >> 2];
                e2 = h2 + (k2 * 284 | 0) + 108 | 0;
                c[r2 + 96 + 16 >> 2] = c[e2 >> 2];
                c[r2 + 96 + 16 + 4 >> 2] = c[e2 + 4 >> 2];
                c[r2 + 96 + 16 + 8 >> 2] = c[e2 + 8 >> 2];
                c[r2 + 96 + 16 + 12 >> 2] = c[e2 + 12 >> 2];
                e2 = h2 + (k2 * 284 | 0) + 124 | 0;
                c[r2 + 96 + 32 >> 2] = c[e2 >> 2];
                c[r2 + 96 + 32 + 4 >> 2] = c[e2 + 4 >> 2];
                c[r2 + 96 + 32 + 8 >> 2] = c[e2 + 8 >> 2];
                c[r2 + 96 + 32 + 12 >> 2] = c[e2 + 12 >> 2];
                e2 = c[b2 + 36 >> 2] | 0;
                x2 = c[b2 + 112 >> 2] | 0;
                o2 = c[r2 + 96 + 16 + (x2 << 2) >> 2] | 0;
                y2 = c[r2 + 96 + 32 + (x2 << 2) >> 2] | 0;
                c[e2 + (k2 << 4) >> 2] = c[r2 + 96 + (x2 << 2) >> 2];
                c[e2 + (k2 << 4) + 4 >> 2] = o2;
                c[e2 + (k2 << 4) + 8 >> 2] = y2;
                g[e2 + (k2 << 4) + 12 >> 2] = 0;
                e2 = c[b2 + 36 >> 2] | 0;
                y2 = e2 + (k2 << 4) | 0;
                z2 = +g[y2 >> 2];
                o2 = h2 + (k2 * 284 | 0) | 0;
                f2 = +g[o2 >> 2];
                x2 = e2 + (k2 << 4) + 4 | 0;
                w2 = +g[x2 >> 2];
                n2 = h2 + (k2 * 284 | 0) + 4 | 0;
                l2 = +g[n2 >> 2];
                e2 = e2 + (k2 << 4) + 8 | 0;
                t2 = +g[e2 >> 2];
                s2 = h2 + (k2 * 284 | 0) + 8 | 0;
                v2 = +g[s2 >> 2];
                m2 = z2 - f2 * (z2 * f2 + w2 * l2 + t2 * v2);
                u2 = w2 - l2 * (z2 * f2 + w2 * l2 + t2 * v2);
                v2 = t2 - v2 * (z2 * f2 + w2 * l2 + t2 * v2);
                t2 = 1 / +O(+(m2 * m2 + u2 * u2 + v2 * v2));
                g[y2 >> 2] = m2 * t2;
                g[x2 >> 2] = u2 * t2;
                g[e2 >> 2] = v2 * t2;
                e2 = c[b2 + 16 >> 2] | 0;
                l2 = +g[n2 >> 2];
                w2 = +g[s2 >> 2];
                f2 = +g[o2 >> 2];
                g[e2 + (k2 << 4) >> 2] = l2 * (v2 * t2) - w2 * (u2 * t2);
                g[e2 + (k2 << 4) + 4 >> 2] = w2 * (m2 * t2) - v2 * t2 * f2;
                g[e2 + (k2 << 4) + 8 >> 2] = u2 * t2 * f2 - l2 * (m2 * t2);
                g[e2 + (k2 << 4) + 12 >> 2] = 0;
                e2 = c[b2 + 16 >> 2] | 0;
                o2 = e2 + (k2 << 4) | 0;
                t2 = +g[o2 >> 2];
                s2 = e2 + (k2 << 4) + 4 | 0;
                m2 = +g[s2 >> 2];
                e2 = e2 + (k2 << 4) + 8 | 0;
                l2 = +g[e2 >> 2];
                f2 = 1 / +O(+(t2 * t2 + m2 * m2 + l2 * l2));
                g[o2 >> 2] = t2 * f2;
                g[s2 >> 2] = m2 * f2;
                g[e2 >> 2] = l2 * f2;
                e2 = c[b2 + 108 >> 2] | 0;
                s2 = c[b2 + 36 >> 2] | 0;
                f2 = +g[s2 + (k2 << 4) >> 2];
                l2 = +g[s2 + (k2 << 4) + 4 >> 2];
                m2 = +g[s2 + (k2 << 4) + 8 >> 2];
                if (f2 * f2 + l2 * l2 + m2 * m2 > 1.100000023841858)
                  f2 = 0;
                else {
                  C2 = +g[h2 + (k2 * 284 | 0) + 16 >> 2];
                  G2 = C2 - +g[e2 + 52 >> 2];
                  E2 = +g[h2 + (k2 * 284 | 0) + 20 >> 2];
                  I2 = E2 - +g[e2 + 56 >> 2];
                  J2 = +g[h2 + (k2 * 284 | 0) + 24 >> 2];
                  L2 = J2 - +g[e2 + 60 >> 2];
                  C2 = C2 - +g[j2 + 52 >> 2];
                  E2 = E2 - +g[j2 + 56 >> 2];
                  J2 = J2 - +g[j2 + 60 >> 2];
                  F2 = +g[e2 + 356 >> 2];
                  M2 = +g[e2 + 360 >> 2];
                  H2 = +g[e2 + 352 >> 2];
                  B2 = +g[j2 + 356 >> 2];
                  K2 = +g[j2 + 360 >> 2];
                  D2 = +g[j2 + 352 >> 2];
                  A2 = (m2 * I2 - l2 * L2) * +g[e2 + 4 >> 2] + (f2 * L2 - m2 * G2) * +g[e2 + 20 >> 2] + (l2 * G2 - f2 * I2) * +g[e2 + 36 >> 2];
                  t2 = (m2 * I2 - l2 * L2) * +g[e2 + 8 >> 2] + (f2 * L2 - m2 * G2) * +g[e2 + 24 >> 2] + (l2 * G2 - f2 * I2) * +g[e2 + 40 >> 2];
                  u2 = (m2 * I2 - l2 * L2) * +g[e2 + 12 >> 2] + (f2 * L2 - m2 * G2) * +g[e2 + 28 >> 2] + (l2 * G2 - f2 * I2) * +g[e2 + 44 >> 2];
                  v2 = (E2 * -m2 - J2 * -l2) * +g[j2 + 4 >> 2] + (J2 * -f2 - C2 * -m2) * +g[j2 + 20 >> 2] + (C2 * -l2 - E2 * -f2) * +g[j2 + 36 >> 2];
                  w2 = (E2 * -m2 - J2 * -l2) * +g[j2 + 8 >> 2] + (J2 * -f2 - C2 * -m2) * +g[j2 + 24 >> 2] + (C2 * -l2 - E2 * -f2) * +g[j2 + 40 >> 2];
                  z2 = (E2 * -m2 - J2 * -l2) * +g[j2 + 12 >> 2] + (J2 * -f2 - C2 * -m2) * +g[j2 + 28 >> 2] + (C2 * -l2 - E2 * -f2) * +g[j2 + 44 >> 2];
                  f2 = (f2 * (L2 * F2 - I2 * M2 + +g[e2 + 336 >> 2] - (J2 * B2 - E2 * K2 + +g[j2 + 336 >> 2])) + l2 * (+g[e2 + 340 >> 2] + (G2 * M2 - L2 * H2) - (+g[j2 + 340 >> 2] + (C2 * K2 - J2 * D2))) + m2 * (I2 * H2 - G2 * F2 + +g[e2 + 344 >> 2] - (E2 * D2 - C2 * B2 + +g[j2 + 344 >> 2]))) * -0.20000000298023224 * (1 / (+g[j2 + 368 >> 2] + (+g[e2 + 368 >> 2] + (A2 * (A2 * +g[e2 + 420 >> 2]) + t2 * (t2 * +g[e2 + 424 >> 2]) + u2 * (u2 * +g[e2 + 428 >> 2]))) + (v2 * (v2 * +g[j2 + 420 >> 2]) + w2 * (w2 * +g[j2 + 424 >> 2]) + z2 * (z2 * +g[j2 + 428 >> 2]))));
                }
                g[(c[b2 + 76 >> 2] | 0) + (k2 << 2) >> 2] = f2;
                e2 = c[b2 + 128 >> 2] | 0;
              }
              k2 = k2 + 1 | 0;
            } while ((k2 | 0) < (e2 | 0));
            if ((e2 | 0) <= 0) {
              i = r2;
              return;
            }
            h2 = c[b2 + 136 >> 2] | 0;
            j2 = 0;
            o2 = 0;
            while (1) {
              e2 = c[h2 + (o2 * 284 | 0) + 88 >> 2] | 0;
              if (e2) {
                f2 = +g[h2 + (o2 * 284 | 0) + 252 >> 2];
                if (f2 != 0) {
                  k2 = h2;
                  f2 = f2 * d2;
                } else {
                  M2 = +g[h2 + (o2 * 284 | 0) + 256 >> 2];
                  M2 = M2 == 0 ? 0 : M2;
                  k2 = c[b2 + 108 >> 2] | 0;
                  y2 = c[b2 + 16 >> 2] | 0;
                  G2 = +g[h2 + (o2 * 284 | 0) + 16 >> 2];
                  E2 = +g[h2 + (o2 * 284 | 0) + 20 >> 2];
                  A2 = +g[h2 + (o2 * 284 | 0) + 24 >> 2];
                  w2 = +g[y2 + (o2 << 4) >> 2];
                  D2 = +g[y2 + (o2 << 4) + 4 >> 2];
                  f2 = +g[y2 + (o2 << 4) + 8 >> 2];
                  P2 = G2 - +g[k2 + 52 >> 2];
                  Q2 = E2 - +g[k2 + 56 >> 2];
                  l2 = A2 - +g[k2 + 60 >> 2];
                  m2 = +g[k2 + 288 >> 2] * (Q2 * f2 - l2 * D2) + +g[k2 + 304 >> 2] * (l2 * w2 - P2 * f2) + (P2 * D2 - Q2 * w2) * +g[k2 + 320 >> 2];
                  R2 = (Q2 * f2 - l2 * D2) * +g[k2 + 292 >> 2] + (l2 * w2 - P2 * f2) * +g[k2 + 308 >> 2] + (P2 * D2 - Q2 * w2) * +g[k2 + 324 >> 2];
                  N2 = (Q2 * f2 - l2 * D2) * +g[k2 + 296 >> 2] + (l2 * w2 - P2 * f2) * +g[k2 + 312 >> 2] + (P2 * D2 - Q2 * w2) * +g[k2 + 328 >> 2];
                  K2 = G2 - +g[e2 + 52 >> 2];
                  I2 = E2 - +g[e2 + 56 >> 2];
                  C2 = A2 - +g[e2 + 60 >> 2];
                  v2 = (D2 * K2 - w2 * I2) * +g[e2 + 320 >> 2] + (+g[e2 + 288 >> 2] * (f2 * I2 - D2 * C2) + +g[e2 + 304 >> 2] * (w2 * C2 - f2 * K2));
                  t2 = (f2 * I2 - D2 * C2) * +g[e2 + 292 >> 2] + (w2 * C2 - f2 * K2) * +g[e2 + 308 >> 2] + (D2 * K2 - w2 * I2) * +g[e2 + 324 >> 2];
                  u2 = (f2 * I2 - D2 * C2) * +g[e2 + 296 >> 2] + (w2 * C2 - f2 * K2) * +g[e2 + 312 >> 2] + (D2 * K2 - w2 * I2) * +g[e2 + 328 >> 2];
                  G2 = G2 - +g[k2 + 52 >> 2];
                  E2 = E2 - +g[k2 + 56 >> 2];
                  A2 = A2 - +g[k2 + 60 >> 2];
                  H2 = +g[k2 + 356 >> 2];
                  z2 = +g[k2 + 360 >> 2];
                  F2 = +g[k2 + 352 >> 2];
                  L2 = +g[e2 + 356 >> 2];
                  B2 = +g[e2 + 360 >> 2];
                  J2 = +g[e2 + 352 >> 2];
                  f2 = -(1 / (+g[k2 + 368 >> 2] + (f2 * (Q2 * m2 - P2 * R2) + (w2 * (l2 * R2 - Q2 * N2) + D2 * (P2 * N2 - l2 * m2))) + (+g[e2 + 368 >> 2] + (f2 * (I2 * v2 - K2 * t2) + (w2 * (C2 * t2 - I2 * u2) + D2 * (K2 * u2 - C2 * v2))))) * ((A2 * H2 - E2 * z2 + +g[k2 + 336 >> 2] - (C2 * L2 - I2 * B2 + +g[e2 + 336 >> 2])) * w2 + (+g[k2 + 340 >> 2] + (G2 * z2 - A2 * F2) - (+g[e2 + 340 >> 2] + (K2 * B2 - C2 * J2))) * D2 + (E2 * F2 - G2 * H2 + +g[k2 + 344 >> 2] - (I2 * J2 - K2 * L2 + +g[e2 + 344 >> 2])) * f2));
                  f2 = M2 < f2 ? M2 : f2;
                  k2 = c[b2 + 136 >> 2] | 0;
                  f2 = f2 < -M2 ? -M2 : f2;
                }
                n2 = c[b2 + 56 >> 2] | 0;
                y2 = n2 + (o2 << 2) | 0;
                g[y2 >> 2] = 0;
                e2 = k2 + (o2 * 284 | 0) + 280 | 0;
                g[e2 >> 2] = 1;
                m2 = +g[h2 + (o2 * 284 | 0) + 276 >> 2] * d2 * +g[h2 + (o2 * 284 | 0) + 228 >> 2];
                g[y2 >> 2] = f2;
                f2 = f2 * 0.5;
                l2 = +g[(c[b2 + 76 >> 2] | 0) + (o2 << 2) >> 2];
                if (f2 * f2 + l2 * l2 > m2 * m2) {
                  R2 = m2 / +O(+(f2 * f2 + l2 * l2));
                  g[e2 >> 2] = R2 * +g[e2 >> 2];
                  e2 = 1;
                } else
                  e2 = j2;
              } else {
                n2 = c[b2 + 56 >> 2] | 0;
                g[n2 + (o2 << 2) >> 2] = 0;
                g[h2 + (o2 * 284 | 0) + 280 >> 2] = 1;
                k2 = h2;
                e2 = j2;
              }
              o2 = o2 + 1 | 0;
              j2 = c[b2 + 128 >> 2] | 0;
              if ((o2 | 0) >= (j2 | 0))
                break;
              else {
                h2 = k2;
                j2 = e2;
              }
            }
            if (e2) {
              if ((j2 | 0) <= 0) {
                i = r2;
                return;
              }
              e2 = c[b2 + 76 >> 2] | 0;
              h2 = 0;
              do {
                if (+g[e2 + (h2 << 2) >> 2] != 0 ? (p2 = k2 + (h2 * 284 | 0) + 280 | 0, q2 = +g[p2 >> 2], q2 < 1) : 0) {
                  y2 = n2 + (h2 << 2) | 0;
                  g[y2 >> 2] = q2 * +g[y2 >> 2];
                  y2 = (c[b2 + 76 >> 2] | 0) + (h2 << 2) | 0;
                  g[y2 >> 2] = +g[p2 >> 2] * +g[y2 >> 2];
                }
                h2 = h2 + 1 | 0;
              } while ((h2 | 0) != (j2 | 0));
            }
            if ((j2 | 0) <= 0) {
              i = r2;
              return;
            }
            j2 = n2;
            e2 = 0;
            while (1) {
              h2 = c[b2 + 108 >> 2] | 0;
              n2 = k2 + (e2 * 284 | 0) + 16 | 0;
              l2 = +g[n2 >> 2] - +g[h2 + 52 >> 2];
              o2 = k2 + (e2 * 284 | 0) + 20 | 0;
              m2 = +g[o2 >> 2] - +g[h2 + 56 >> 2];
              p2 = k2 + (e2 * 284 | 0) + 24 | 0;
              d2 = +g[p2 >> 2] - +g[h2 + 60 >> 2];
              g[r2 + 96 >> 2] = l2;
              g[r2 + 96 + 4 >> 2] = m2;
              g[r2 + 96 + 8 >> 2] = d2;
              g[r2 + 96 + 12 >> 2] = 0;
              f2 = +g[j2 + (e2 << 2) >> 2];
              if (f2 != 0) {
                y2 = c[b2 + 16 >> 2] | 0;
                Q2 = f2 * +g[y2 + (e2 << 4) + 4 >> 2];
                R2 = f2 * +g[y2 + (e2 << 4) + 8 >> 2];
                g[r2 + 16 >> 2] = f2 * +g[y2 + (e2 << 4) >> 2];
                g[r2 + 16 + 4 >> 2] = Q2;
                g[r2 + 16 + 8 >> 2] = R2;
                g[r2 + 16 + 12 >> 2] = 0;
                Uo(h2, r2 + 16 | 0, r2 + 96 | 0);
              }
              f2 = +g[(c[b2 + 76 >> 2] | 0) + (e2 << 2) >> 2];
              if (f2 != 0) {
                y2 = c[(c[b2 + 136 >> 2] | 0) + (e2 * 284 | 0) + 88 >> 2] | 0;
                Q2 = +g[o2 >> 2] - +g[y2 + 56 >> 2];
                P2 = +g[p2 >> 2] - +g[y2 + 60 >> 2];
                g[r2 + 48 >> 2] = +g[n2 >> 2] - +g[y2 + 52 >> 2];
                g[r2 + 48 + 4 >> 2] = Q2;
                g[r2 + 48 + 8 >> 2] = P2;
                g[r2 + 48 + 12 >> 2] = 0;
                x2 = c[b2 + 36 >> 2] | 0;
                P2 = +g[x2 + (e2 << 4) >> 2] * f2;
                Q2 = f2 * +g[x2 + (e2 << 4) + 4 >> 2];
                R2 = f2 * +g[x2 + (e2 << 4) + 8 >> 2];
                g[r2 + 32 >> 2] = P2;
                g[r2 + 32 + 4 >> 2] = Q2;
                g[r2 + 32 + 8 >> 2] = R2;
                g[r2 + 32 + 12 >> 2] = 0;
                x2 = c[b2 + 108 >> 2] | 0;
                s2 = c[b2 + 116 >> 2] | 0;
                K2 = +g[x2 + 4 + (s2 << 2) >> 2];
                L2 = +g[x2 + 20 + (s2 << 2) >> 2];
                M2 = +g[x2 + 36 + (s2 << 2) >> 2];
                N2 = (K2 * l2 + L2 * m2 + M2 * d2) * (1 - +g[k2 + (e2 * 284 | 0) + 244 >> 2]);
                g[r2 + 96 >> 2] = l2 - K2 * N2;
                g[r2 + 96 + 4 >> 2] = m2 - L2 * N2;
                g[r2 + 96 + 8 >> 2] = d2 - M2 * N2;
                Uo(x2, r2 + 32 | 0, r2 + 96 | 0);
                g[r2 >> 2] = -P2;
                g[r2 + 4 >> 2] = -Q2;
                g[r2 + 8 >> 2] = -R2;
                g[r2 + 12 >> 2] = 0;
                Uo(y2, r2, r2 + 48 | 0);
              }
              e2 = e2 + 1 | 0;
              if ((e2 | 0) >= (c[b2 + 128 >> 2] | 0))
                break;
              k2 = c[b2 + 136 >> 2] | 0;
              j2 = c[b2 + 56 >> 2] | 0;
            }
            i = r2;
            return;
          }
          function Pr(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            c[a2 + 112 >> 2] = b2;
            c[a2 + 116 >> 2] = d2;
            c[a2 + 120 >> 2] = e2;
            return;
          }
          function Qr(a2) {
            a2 = a2 | 0;
            return;
          }
          function Rr(a2) {
            a2 = a2 | 0;
            rG(a2);
            return;
          }
          function Sr(a2, d2, e2, f2) {
            a2 = a2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            var h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0;
            h2 = i;
            i = i + 96 | 0;
            g[h2 + 4 >> 2] = 1;
            c[h2 + 8 >> 2] = 0;
            b[h2 + 12 >> 1] = 1;
            b[h2 + 14 >> 1] = -1;
            c[h2 + 16 >> 2] = 0;
            c[h2 >> 2] = 8008;
            c[h2 + 20 >> 2] = c[d2 >> 2];
            c[h2 + 20 + 4 >> 2] = c[d2 + 4 >> 2];
            c[h2 + 20 + 8 >> 2] = c[d2 + 8 >> 2];
            c[h2 + 20 + 12 >> 2] = c[d2 + 12 >> 2];
            c[h2 + 36 >> 2] = c[e2 >> 2];
            c[h2 + 36 + 4 >> 2] = c[e2 + 4 >> 2];
            c[h2 + 36 + 8 >> 2] = c[e2 + 8 >> 2];
            c[h2 + 36 + 12 >> 2] = c[e2 + 12 >> 2];
            a2 = c[a2 + 4 >> 2] | 0;
            bc[c[(c[a2 >> 2] | 0) + 32 >> 2] & 127](a2, d2, e2, h2);
            d2 = c[h2 + 8 >> 2] | 0;
            if (!d2) {
              f2 = 0;
              i = h2;
              return f2 | 0;
            }
            if (!(c[d2 + 236 >> 2] & 2)) {
              f2 = 0;
              i = h2;
              return f2 | 0;
            }
            if (c[d2 + 204 >> 2] & 4 | 0) {
              f2 = 0;
              i = h2;
              return f2 | 0;
            }
            c[f2 >> 2] = c[h2 + 68 >> 2];
            c[f2 + 4 >> 2] = c[h2 + 68 + 4 >> 2];
            c[f2 + 8 >> 2] = c[h2 + 68 + 8 >> 2];
            c[f2 + 12 >> 2] = c[h2 + 68 + 12 >> 2];
            c[f2 + 16 >> 2] = c[h2 + 52 >> 2];
            c[f2 + 16 + 4 >> 2] = c[h2 + 52 + 4 >> 2];
            c[f2 + 16 + 8 >> 2] = c[h2 + 52 + 8 >> 2];
            c[f2 + 16 + 12 >> 2] = c[h2 + 52 + 12 >> 2];
            m2 = +g[f2 + 16 >> 2];
            l2 = +g[f2 + 20 >> 2];
            k2 = +g[f2 + 24 >> 2];
            j2 = 1 / +O(+(m2 * m2 + l2 * l2 + k2 * k2));
            g[f2 + 16 >> 2] = m2 * j2;
            g[f2 + 20 >> 2] = l2 * j2;
            g[f2 + 24 >> 2] = k2 * j2;
            c[f2 + 32 >> 2] = c[h2 + 4 >> 2];
            f2 = d2;
            i = h2;
            return f2 | 0;
          }
          function Tr(a2) {
            a2 = a2 | 0;
            rG(a2);
            return;
          }
          function Ur(a2, d2) {
            a2 = a2 | 0;
            d2 = d2 | 0;
            d2 = c[d2 + 4 >> 2] | 0;
            if (!((b[a2 + 14 >> 1] & (d2 & 65535)) << 16 >> 16)) {
              a2 = 0;
              return a2 | 0;
            }
            a2 = (d2 >>> 16 & 65535 & b[a2 + 12 >> 1]) << 16 >> 16 != 0;
            return a2 | 0;
          }
          function Vr(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0;
            c[a2 + 4 >> 2] = c[b2 + 24 >> 2];
            e2 = c[b2 >> 2] | 0;
            c[a2 + 8 >> 2] = e2;
            if (d2) {
              c[a2 + 52 >> 2] = c[b2 + 8 >> 2];
              c[a2 + 52 + 4 >> 2] = c[b2 + 8 + 4 >> 2];
              c[a2 + 52 + 8 >> 2] = c[b2 + 8 + 8 >> 2];
              c[a2 + 52 + 12 >> 2] = c[b2 + 8 + 12 >> 2];
            } else {
              k2 = +g[b2 + 8 >> 2];
              j2 = +g[b2 + 12 >> 2];
              i2 = +g[b2 + 16 >> 2];
              h2 = k2 * +g[e2 + 20 >> 2] + j2 * +g[e2 + 24 >> 2] + i2 * +g[e2 + 28 >> 2];
              f2 = k2 * +g[e2 + 36 >> 2] + j2 * +g[e2 + 40 >> 2] + i2 * +g[e2 + 44 >> 2];
              g[a2 + 52 >> 2] = +g[e2 + 4 >> 2] * k2 + +g[e2 + 8 >> 2] * j2 + +g[e2 + 12 >> 2] * i2;
              g[a2 + 56 >> 2] = h2;
              g[a2 + 60 >> 2] = f2;
              g[a2 + 64 >> 2] = 0;
            }
            k2 = +g[b2 + 24 >> 2];
            g[a2 + 68 >> 2] = (1 - k2) * +g[a2 + 20 >> 2] + k2 * +g[a2 + 36 >> 2];
            g[a2 + 72 >> 2] = (1 - k2) * +g[a2 + 24 >> 2] + k2 * +g[a2 + 40 >> 2];
            g[a2 + 76 >> 2] = (1 - k2) * +g[a2 + 28 >> 2] + k2 * +g[a2 + 44 >> 2];
            return + +g[b2 + 24 >> 2];
          }
          function Wr(b2, d2, e2, f2, h2, j2, k2, l2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            h2 = +h2;
            j2 = +j2;
            k2 = k2 | 0;
            l2 = l2 | 0;
            var m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0;
            w2 = i;
            i = i + 288 | 0;
            c[w2 + 208 >> 2] = c[d2 >> 2];
            c[w2 + 208 + 4 >> 2] = c[d2 + 4 >> 2];
            c[w2 + 208 + 8 >> 2] = c[d2 + 8 >> 2];
            c[w2 + 208 + 12 >> 2] = c[d2 + 12 >> 2];
            n2 = w2 + 208 + 16 | 0;
            c[n2 >> 2] = c[e2 >> 2];
            c[n2 + 4 >> 2] = c[e2 + 4 >> 2];
            c[n2 + 8 >> 2] = c[e2 + 8 >> 2];
            c[n2 + 12 >> 2] = c[e2 + 12 >> 2];
            o2 = w2 + 208 + 32 | 0;
            c[o2 >> 2] = c[f2 >> 2];
            c[o2 + 4 >> 2] = c[f2 + 4 >> 2];
            c[o2 + 8 >> 2] = c[f2 + 8 >> 2];
            c[o2 + 12 >> 2] = c[f2 + 12 >> 2];
            r2 = c[k2 >> 2] | 0;
            t2 = c[k2 + 4 >> 2] | 0;
            u2 = c[k2 + 8 >> 2] | 0;
            v2 = c[k2 + 16 >> 2] | 0;
            q2 = c[k2 + 12 >> 2] | 0;
            p2 = c[k2 + 20 >> 2] | 0;
            c[w2 >> 2] = c[w2 + 208 >> 2];
            c[w2 + 4 >> 2] = c[w2 + 208 + 4 >> 2];
            c[w2 + 8 >> 2] = c[w2 + 208 + 8 >> 2];
            c[w2 + 12 >> 2] = c[w2 + 208 + 12 >> 2];
            c[w2 + 16 >> 2] = c[n2 >> 2];
            c[w2 + 16 + 4 >> 2] = c[n2 + 4 >> 2];
            c[w2 + 16 + 8 >> 2] = c[n2 + 8 >> 2];
            c[w2 + 16 + 12 >> 2] = c[n2 + 12 >> 2];
            c[w2 + 32 >> 2] = c[o2 >> 2];
            c[w2 + 32 + 4 >> 2] = c[o2 + 4 >> 2];
            c[w2 + 32 + 8 >> 2] = c[o2 + 8 >> 2];
            c[w2 + 32 + 12 >> 2] = c[o2 + 12 >> 2];
            f2 = c[b2 + 128 >> 2] | 0;
            if ((f2 | 0) == (c[b2 + 132 >> 2] | 0) ? (s2 = f2 | 0 ? f2 << 1 : 1, (f2 | 0) < (s2 | 0)) : 0) {
              if (!s2)
                d2 = 0;
              else {
                c[5637] = (c[5637] | 0) + 1;
                d2 = qG((s2 * 284 | 3) + 16 | 0) | 0;
                if (!d2)
                  d2 = 0;
                else {
                  c[(d2 + 4 + 15 & -16) + -4 >> 2] = d2;
                  d2 = d2 + 4 + 15 & -16;
                }
                f2 = c[b2 + 128 >> 2] | 0;
              }
              if ((f2 | 0) > 0) {
                k2 = 0;
                do {
                  e2 = c[b2 + 136 >> 2] | 0;
                  m2 = d2 + (k2 * 284 | 0) | 0;
                  n2 = e2 + (k2 * 284 | 0) | 0;
                  o2 = m2 + 92 | 0;
                  do {
                    c[m2 >> 2] = c[n2 >> 2];
                    m2 = m2 + 4 | 0;
                    n2 = n2 + 4 | 0;
                  } while ((m2 | 0) < (o2 | 0));
                  m2 = d2 + (k2 * 284 | 0) + 92 | 0;
                  n2 = e2 + (k2 * 284 | 0) + 92 | 0;
                  c[m2 >> 2] = c[n2 >> 2];
                  c[m2 + 4 >> 2] = c[n2 + 4 >> 2];
                  c[m2 + 8 >> 2] = c[n2 + 8 >> 2];
                  c[m2 + 12 >> 2] = c[n2 + 12 >> 2];
                  m2 = d2 + (k2 * 284 | 0) + 108 | 0;
                  n2 = e2 + (k2 * 284 | 0) + 108 | 0;
                  c[m2 >> 2] = c[n2 >> 2];
                  c[m2 + 4 >> 2] = c[n2 + 4 >> 2];
                  c[m2 + 8 >> 2] = c[n2 + 8 >> 2];
                  c[m2 + 12 >> 2] = c[n2 + 12 >> 2];
                  m2 = d2 + (k2 * 284 | 0) + 124 | 0;
                  n2 = e2 + (k2 * 284 | 0) + 124 | 0;
                  c[m2 >> 2] = c[n2 >> 2];
                  c[m2 + 4 >> 2] = c[n2 + 4 >> 2];
                  c[m2 + 8 >> 2] = c[n2 + 8 >> 2];
                  c[m2 + 12 >> 2] = c[n2 + 12 >> 2];
                  m2 = d2 + (k2 * 284 | 0) + 140 | 0;
                  n2 = e2 + (k2 * 284 | 0) + 140 | 0;
                  c[m2 >> 2] = c[n2 >> 2];
                  c[m2 + 4 >> 2] = c[n2 + 4 >> 2];
                  c[m2 + 8 >> 2] = c[n2 + 8 >> 2];
                  c[m2 + 12 >> 2] = c[n2 + 12 >> 2];
                  m2 = d2 + (k2 * 284 | 0) + 156 | 0;
                  n2 = e2 + (k2 * 284 | 0) + 156 | 0;
                  o2 = m2 + 128 | 0;
                  do {
                    c[m2 >> 2] = c[n2 >> 2];
                    m2 = m2 + 4 | 0;
                    n2 = n2 + 4 | 0;
                  } while ((m2 | 0) < (o2 | 0));
                  k2 = k2 + 1 | 0;
                } while ((k2 | 0) != (f2 | 0));
              }
              f2 = c[b2 + 136 >> 2] | 0;
              if (f2 | 0) {
                if (a[b2 + 140 >> 0] | 0) {
                  c[5638] = (c[5638] | 0) + 1;
                  rG(c[f2 + -4 >> 2] | 0);
                }
                c[b2 + 136 >> 2] = 0;
              }
              a[b2 + 140 >> 0] = 1;
              c[b2 + 136 >> 2] = d2;
              c[b2 + 132 >> 2] = s2;
              f2 = c[b2 + 128 >> 2] | 0;
            }
            d2 = c[b2 + 136 >> 2] | 0;
            m2 = d2 + (f2 * 284 | 0) | 0;
            n2 = w2 + 48 | 0;
            o2 = m2 + 92 | 0;
            do {
              c[m2 >> 2] = c[n2 >> 2];
              m2 = m2 + 4 | 0;
              n2 = n2 + 4 | 0;
            } while ((m2 | 0) < (o2 | 0));
            m2 = d2 + (f2 * 284 | 0) + 92 | 0;
            c[m2 >> 2] = c[w2 + 192 >> 2];
            c[m2 + 4 >> 2] = c[w2 + 192 + 4 >> 2];
            c[m2 + 8 >> 2] = c[w2 + 192 + 8 >> 2];
            c[m2 + 12 >> 2] = c[w2 + 192 + 12 >> 2];
            m2 = d2 + (f2 * 284 | 0) + 108 | 0;
            c[m2 >> 2] = c[w2 + 176 >> 2];
            c[m2 + 4 >> 2] = c[w2 + 176 + 4 >> 2];
            c[m2 + 8 >> 2] = c[w2 + 176 + 8 >> 2];
            c[m2 + 12 >> 2] = c[w2 + 176 + 12 >> 2];
            m2 = d2 + (f2 * 284 | 0) + 124 | 0;
            c[m2 >> 2] = c[w2 + 160 >> 2];
            c[m2 + 4 >> 2] = c[w2 + 160 + 4 >> 2];
            c[m2 + 8 >> 2] = c[w2 + 160 + 8 >> 2];
            c[m2 + 12 >> 2] = c[w2 + 160 + 12 >> 2];
            m2 = d2 + (f2 * 284 | 0) + 140 | 0;
            c[m2 >> 2] = c[w2 + 144 >> 2];
            c[m2 + 4 >> 2] = c[w2 + 144 + 4 >> 2];
            c[m2 + 8 >> 2] = c[w2 + 144 + 8 >> 2];
            c[m2 + 12 >> 2] = c[w2 + 144 + 12 >> 2];
            d2 = d2 + (f2 * 284 | 0) + 156 | 0;
            m2 = d2;
            n2 = w2;
            o2 = m2 + 48 | 0;
            do {
              c[m2 >> 2] = c[n2 >> 2];
              m2 = m2 + 4 | 0;
              n2 = n2 + 4 | 0;
            } while ((m2 | 0) < (o2 | 0));
            g[d2 + 48 >> 2] = h2;
            c[d2 + 52 >> 2] = q2;
            g[d2 + 56 >> 2] = j2;
            c[d2 + 60 >> 2] = r2;
            c[d2 + 64 >> 2] = t2;
            c[d2 + 68 >> 2] = u2;
            c[d2 + 72 >> 2] = v2;
            g[d2 + 76 >> 2] = 0;
            g[d2 + 80 >> 2] = 0;
            g[d2 + 84 >> 2] = 0;
            g[d2 + 88 >> 2] = 0.10000000149011612;
            c[d2 + 92 >> 2] = p2;
            g[d2 + 96 >> 2] = 0;
            g[d2 + 100 >> 2] = 0;
            a[d2 + 104 >> 0] = l2 & 1;
            m2 = d2 + 105 | 0;
            n2 = w2 + 256 | 0;
            o2 = m2 + 23 | 0;
            do {
              a[m2 >> 0] = a[n2 >> 0] | 0;
              m2 = m2 + 1 | 0;
              n2 = n2 + 1 | 0;
            } while ((m2 | 0) < (o2 | 0));
            l2 = c[b2 + 128 >> 2] | 0;
            c[b2 + 128 >> 2] = l2 + 1;
            l2 = (c[b2 + 136 >> 2] | 0) + (l2 * 284 | 0) | 0;
            Nr(c[b2 + 108 >> 2] | 0, l2, 0);
            Mr(c[b2 + 108 >> 2] | 0, c[b2 + 136 >> 2] | 0, (c[b2 + 128 >> 2] | 0) + -1 | 0, 0);
            i = w2;
            return l2 | 0;
          }
          function Xr(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0, i2 = 0, j2 = 0;
            e2 = c[a2 + 56 >> 2] | 0;
            if (!e2) {
              e2 = c[a2 + 52 >> 2] | 0;
              if (!e2) {
                c[5637] = (c[5637] | 0) + 1;
                e2 = qG(31) | 0;
                if (!e2)
                  e2 = 0;
                else {
                  c[(e2 + 4 + 15 & -16) + -4 >> 2] = e2;
                  e2 = e2 + 4 + 15 & -16;
                }
                f2 = c[a2 + 60 >> 2] | 0;
                c[e2 + 4 >> 2] = f2;
                g2 = e2 + 8 | 0;
                c[g2 >> 2] = 0;
                c[5637] = (c[5637] | 0) + 1;
                f2 = qG((f2 * 24 | 3) + 16 | 0) | 0;
                if (!f2)
                  f2 = 0;
                else {
                  c[(f2 + 4 + 15 & -16) + -4 >> 2] = f2;
                  f2 = f2 + 4 + 15 & -16;
                }
                c[e2 >> 2] = f2;
                c[g2 >> 2] = c[a2 + 48 >> 2];
                c[a2 + 48 >> 2] = e2;
              } else
                c[a2 + 52 >> 2] = c[e2 + 8 >> 2];
              h2 = c[e2 + 4 >> 2] | 0;
              e2 = c[e2 >> 2] | 0;
              if ((h2 | 0) > 0) {
                f2 = 0;
                g2 = e2;
                do {
                  f2 = f2 + 1 | 0;
                  i2 = g2;
                  g2 = g2 + 24 | 0;
                  c[i2 >> 2] = (f2 | 0) < (h2 | 0) ? g2 : 0;
                } while ((f2 | 0) != (h2 | 0));
                i2 = e2;
              } else
                i2 = e2;
            } else
              i2 = e2;
            c[a2 + 56 >> 2] = c[i2 >> 2];
            c[i2 >> 2] = 0;
            c[i2 + 4 >> 2] = 0;
            c[i2 + 8 >> 2] = 0;
            c[i2 + 12 >> 2] = 0;
            c[i2 + 16 >> 2] = 0;
            c[i2 + 20 >> 2] = 0;
            e2 = c[a2 + 56 >> 2] | 0;
            if (!e2) {
              e2 = c[a2 + 52 >> 2] | 0;
              if (!e2) {
                c[5637] = (c[5637] | 0) + 1;
                e2 = qG(31) | 0;
                if (!e2)
                  e2 = 0;
                else {
                  c[(e2 + 4 + 15 & -16) + -4 >> 2] = e2;
                  e2 = e2 + 4 + 15 & -16;
                }
                f2 = c[a2 + 60 >> 2] | 0;
                c[e2 + 4 >> 2] = f2;
                g2 = e2 + 8 | 0;
                c[g2 >> 2] = 0;
                c[5637] = (c[5637] | 0) + 1;
                f2 = qG((f2 * 24 | 3) + 16 | 0) | 0;
                if (!f2)
                  f2 = 0;
                else {
                  c[(f2 + 4 + 15 & -16) + -4 >> 2] = f2;
                  f2 = f2 + 4 + 15 & -16;
                }
                c[e2 >> 2] = f2;
                c[g2 >> 2] = c[a2 + 48 >> 2];
                c[a2 + 48 >> 2] = e2;
              } else
                c[a2 + 52 >> 2] = c[e2 + 8 >> 2];
              h2 = c[e2 + 4 >> 2] | 0;
              e2 = c[e2 >> 2] | 0;
              if ((h2 | 0) > 0) {
                f2 = 0;
                g2 = e2;
                do {
                  f2 = f2 + 1 | 0;
                  j2 = g2;
                  g2 = g2 + 24 | 0;
                  c[j2 >> 2] = (f2 | 0) < (h2 | 0) ? g2 : 0;
                } while ((f2 | 0) != (h2 | 0));
              }
            }
            c[a2 + 56 >> 2] = c[e2 >> 2];
            c[e2 >> 2] = 0;
            c[e2 + 4 >> 2] = 0;
            c[e2 + 8 >> 2] = 0;
            c[i2 + 8 >> 2] = e2;
            c[e2 + 8 >> 2] = i2;
            j2 = c[a2 + 100 >> 2] | 0;
            c[i2 + 20 >> 2] = j2;
            c[e2 + 20 >> 2] = j2;
            c[i2 + 12 >> 2] = d2;
            c[e2 + 12 >> 2] = b2;
            c[i2 + 16 >> 2] = 0;
            c[e2 + 16 >> 2] = 0;
            e2 = c[a2 + 116 >> 2] | 0;
            c[a2 + 116 >> 2] = e2 + 1;
            if ((e2 | 0) < (c[a2 + 120 >> 2] | 0))
              return i2 | 0;
            c[a2 + 120 >> 2] = e2 + 1;
            return i2 | 0;
          }
          function Yr(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, g2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0, N2 = 0, O2 = 0;
            K2 = i;
            i = i + 144 | 0;
            a:
              do
                switch (d2 - b2 | 0) {
                  case 0: {
                    c[e2 >> 2] = 0;
                    c[e2 + 4 >> 2] = 0;
                    c[e2 + 8 >> 2] = 0;
                    c[e2 + 12 >> 2] = 0;
                    i = K2;
                    return;
                  }
                  case 2: {
                    f2 = c[(c[a2 + 92 >> 2] | 0) + (b2 << 2) >> 2] | 0;
                    k2 = c[f2 + 88 >> 2] | 0;
                    l2 = c[f2 + 200 >> 2] | 0;
                    j2 = c[f2 + 92 >> 2] | 0;
                    g2 = c[f2 + 204 >> 2] | 0;
                    if ((k2 | 0) == (l2 | 0)) {
                      if ((j2 | 0) == (g2 | 0))
                        if ((c[f2 + 96 >> 2] | 0) == (c[f2 + 208 >> 2] | 0))
                          break a;
                        else
                          g2 = j2;
                      if ((j2 | 0) == (g2 | 0)) {
                        I2 = (c[f2 + 96 >> 2] | 0) > (c[f2 + 208 >> 2] | 0);
                        g2 = I2 ? f2 + 112 | 0 : f2;
                        c[g2 >> 2] = g2;
                        c[g2 + 4 >> 2] = g2;
                        c[e2 >> 2] = g2;
                        c[e2 + 4 >> 2] = g2;
                        c[e2 + 8 >> 2] = g2;
                        c[e2 + 12 >> 2] = g2;
                        f2 = I2 ? f2 : f2 + 112 | 0;
                      } else {
                        h2 = g2;
                        g2 = 0;
                        J2 = 9;
                      }
                    } else {
                      h2 = g2;
                      g2 = (j2 | 0) == (g2 | 0);
                      J2 = 9;
                    }
                    do
                      if ((J2 | 0) == 9) {
                        c[f2 >> 2] = f2 + 112;
                        c[f2 + 4 >> 2] = f2 + 112;
                        c[f2 + 112 >> 2] = f2;
                        c[f2 + 116 >> 2] = f2;
                        J2 = (j2 | 0) < (h2 | 0);
                        c[e2 >> 2] = (k2 | 0) < (l2 | 0) | (k2 | 0) == (l2 | 0) & J2 ? f2 : f2 + 112 | 0;
                        c[e2 + 4 >> 2] = (k2 | 0) < (l2 | 0) | (k2 | 0) == (l2 | 0) & J2 ? f2 + 112 | 0 : f2;
                        if (J2 | (k2 | 0) < (l2 | 0) & g2) {
                          c[e2 + 8 >> 2] = f2;
                          c[e2 + 12 >> 2] = f2 + 112;
                          g2 = f2;
                          f2 = f2 + 112 | 0;
                          break;
                        } else {
                          c[e2 + 8 >> 2] = f2 + 112;
                          c[e2 + 12 >> 2] = f2;
                          g2 = f2;
                          f2 = f2 + 112 | 0;
                          break;
                        }
                      }
                    while (0);
                    a2 = Xr(a2, g2, f2) | 0;
                    c[a2 >> 2] = a2;
                    c[a2 + 4 >> 2] = a2;
                    c[g2 + 8 >> 2] = a2;
                    a2 = c[a2 + 8 >> 2] | 0;
                    c[a2 >> 2] = a2;
                    c[a2 + 4 >> 2] = a2;
                    c[f2 + 8 >> 2] = a2;
                    i = K2;
                    return;
                  }
                  case 1: {
                    f2 = c[(c[a2 + 92 >> 2] | 0) + (b2 << 2) >> 2] | 0;
                    break;
                  }
                  default: {
                    n2 = ((d2 - b2 | 0) / 2 | 0) + b2 | 0;
                    h2 = c[a2 + 92 >> 2] | 0;
                    m2 = c[h2 + (n2 + -1 << 2) >> 2] | 0;
                    j2 = c[m2 + 88 >> 2] | 0;
                    k2 = c[m2 + 92 >> 2] | 0;
                    m2 = c[m2 + 96 >> 2] | 0;
                    b:
                      do
                        if ((n2 | 0) < (d2 | 0)) {
                          f2 = n2;
                          do {
                            g2 = c[h2 + (f2 << 2) >> 2] | 0;
                            if ((c[g2 + 88 >> 2] | 0) != (j2 | 0))
                              break b;
                            if ((c[g2 + 92 >> 2] | 0) != (k2 | 0))
                              break b;
                            if ((c[g2 + 96 >> 2] | 0) != (m2 | 0))
                              break b;
                            f2 = f2 + 1 | 0;
                          } while ((f2 | 0) < (d2 | 0));
                        } else
                          f2 = n2;
                      while (0);
                    Yr(a2, b2, n2, e2);
                    c[K2 + 96 >> 2] = 0;
                    c[K2 + 96 + 4 >> 2] = 0;
                    c[K2 + 96 + 8 >> 2] = 0;
                    c[K2 + 96 + 12 >> 2] = 0;
                    Yr(a2, f2, d2, K2 + 96 | 0);
                    m2 = c[K2 + 96 + 4 >> 2] | 0;
                    c:
                      do
                        if (m2 | 0) {
                          A2 = c[e2 + 4 >> 2] | 0;
                          if (!A2) {
                            c[e2 >> 2] = c[K2 + 96 >> 2];
                            c[e2 + 4 >> 2] = c[K2 + 96 + 4 >> 2];
                            c[e2 + 8 >> 2] = c[K2 + 96 + 8 >> 2];
                            c[e2 + 12 >> 2] = c[K2 + 96 + 12 >> 2];
                            break;
                          }
                          c[a2 + 100 >> 2] = (c[a2 + 100 >> 2] | 0) + -1;
                          h2 = c[e2 + 12 >> 2] | 0;
                          k2 = c[K2 + 96 + 8 >> 2] | 0;
                          j2 = c[h2 + 88 >> 2] | 0;
                          d:
                            do
                              if ((j2 | 0) == (c[k2 + 88 >> 2] | 0) ? (l2 = c[h2 + 92 >> 2] | 0, (l2 | 0) == (c[k2 + 92 >> 2] | 0)) : 0) {
                                n2 = c[k2 + 4 >> 2] | 0;
                                if ((n2 | 0) == (k2 | 0)) {
                                  f2 = c[k2 + 8 >> 2] | 0;
                                  if (f2) {
                                    k2 = c[f2 + 12 >> 2] | 0;
                                    l2 = c[k2 + 92 >> 2] | 0;
                                    j2 = c[k2 + 88 >> 2] | 0;
                                  }
                                  g2 = h2;
                                  G2 = k2;
                                  f2 = k2;
                                  n2 = j2 + 1 | 0;
                                  d2 = c[k2 + 96 >> 2] | 0;
                                  break;
                                }
                                h2 = c[k2 >> 2] | 0;
                                c[n2 >> 2] = h2;
                                c[h2 + 4 >> 2] = n2;
                                e:
                                  do
                                    if ((k2 | 0) == (c[K2 + 96 >> 2] | 0)) {
                                      f2 = c[h2 + 88 >> 2] | 0;
                                      g2 = c[n2 + 88 >> 2] | 0;
                                      do
                                        if ((f2 | 0) >= (g2 | 0)) {
                                          if ((f2 | 0) == (g2 | 0) ? (c[h2 + 92 >> 2] | 0) < (c[n2 + 92 >> 2] | 0) : 0)
                                            break;
                                          c[K2 + 96 >> 2] = n2;
                                          break e;
                                        }
                                      while (0);
                                      c[K2 + 96 >> 2] = h2;
                                    }
                                  while (0);
                                if ((k2 | 0) == (m2 | 0)) {
                                  f2 = c[h2 + 88 >> 2] | 0;
                                  g2 = c[n2 + 88 >> 2] | 0;
                                  do
                                    if ((f2 | 0) <= (g2 | 0)) {
                                      if ((f2 | 0) == (g2 | 0) ? (c[h2 + 92 >> 2] | 0) > (c[n2 + 92 >> 2] | 0) : 0)
                                        break;
                                      c[K2 + 96 + 4 >> 2] = n2;
                                      h2 = n2;
                                      J2 = 39;
                                      break d;
                                    }
                                  while (0);
                                  c[K2 + 96 + 4 >> 2] = h2;
                                  J2 = 39;
                                } else {
                                  h2 = m2;
                                  J2 = 39;
                                }
                              } else {
                                h2 = m2;
                                J2 = 39;
                              }
                            while (0);
                          if ((J2 | 0) == 39) {
                            w2 = c[e2 >> 2] | 0;
                            x2 = c[K2 + 96 >> 2] | 0;
                            y2 = 0;
                            z2 = 1;
                            b2 = A2;
                            g2 = 0;
                            f2 = h2;
                            j2 = 0;
                            while (1) {
                              k2 = c[f2 + 88 >> 2] | 0;
                              d2 = c[b2 + 88 >> 2] | 0;
                              l2 = _(k2 - d2 | 0, z2) | 0;
                              f:
                                do
                                  if ((l2 | 0) <= 0) {
                                    if ((l2 | 0) < 0) {
                                      v2 = (y2 | 0) != 0;
                                      n2 = c[b2 + 92 >> 2] | 0;
                                      u2 = c[f2 + 92 >> 2] | 0;
                                      m2 = l2;
                                      l2 = b2;
                                      while (1) {
                                        r2 = c[(v2 ? f2 + 4 | 0 : f2) >> 2] | 0;
                                        s2 = (r2 | 0) == (f2 | 0);
                                        t2 = f2 + 88 | 0;
                                        q2 = m2;
                                        while (1) {
                                          m2 = l2 + 88 | 0;
                                          o2 = u2 - n2 | 0;
                                          if (!s2 ? (B2 = c[r2 + 88 >> 2] | 0, D2 = _(B2 - k2 | 0, z2) | 0, E2 = c[r2 + 92 >> 2] | 0, F2 = E2 - u2 | 0, (F2 | 0) > -1) : 0) {
                                            if (!D2)
                                              break;
                                            if ((D2 | 0) < 0 ? (_(F2, q2) | 0) <= (_(D2, o2) | 0) : 0)
                                              break;
                                          }
                                          p2 = c[(v2 ? l2 + 4 | 0 : l2) >> 2] | 0;
                                          if ((p2 | 0) == (l2 | 0))
                                            break f;
                                          G2 = c[p2 + 88 >> 2] | 0;
                                          d2 = _(G2 - (c[m2 >> 2] | 0) | 0, z2) | 0;
                                          b2 = c[p2 + 92 >> 2] | 0;
                                          m2 = b2 - n2 | 0;
                                          k2 = c[t2 >> 2] | 0;
                                          n2 = q2;
                                          q2 = _(k2 - G2 | 0, z2) | 0;
                                          if (!((m2 | 0) > 0 & (q2 | 0) < 0))
                                            break f;
                                          if (!d2) {
                                            n2 = b2;
                                            l2 = p2;
                                            continue;
                                          }
                                          if ((d2 | 0) >= 0)
                                            break f;
                                          if ((_(m2, n2) | 0) >= (_(d2, o2) | 0))
                                            break f;
                                          else {
                                            n2 = b2;
                                            l2 = p2;
                                          }
                                        }
                                        k2 = B2;
                                        u2 = E2;
                                        m2 = _(B2 - (c[m2 >> 2] | 0) | 0, z2) | 0;
                                        f2 = r2;
                                      }
                                    }
                                    k2 = c[b2 + 92 >> 2] | 0;
                                    n2 = (y2 | 0) != 0;
                                    g:
                                      do
                                        if (n2) {
                                          m2 = b2;
                                          while (1) {
                                            l2 = c[m2 >> 2] | 0;
                                            if ((l2 | 0) == (b2 | 0))
                                              break g;
                                            if ((c[l2 + 88 >> 2] | 0) != (d2 | 0))
                                              break g;
                                            G2 = k2;
                                            k2 = c[l2 + 92 >> 2] | 0;
                                            if ((k2 | 0) > (G2 | 0))
                                              break;
                                            else
                                              m2 = l2;
                                          }
                                        } else {
                                          m2 = b2;
                                          while (1) {
                                            l2 = c[m2 + 4 >> 2] | 0;
                                            if ((l2 | 0) == (b2 | 0))
                                              break g;
                                            if ((c[l2 + 88 >> 2] | 0) != (d2 | 0))
                                              break g;
                                            G2 = k2;
                                            k2 = c[l2 + 92 >> 2] | 0;
                                            if ((k2 | 0) > (G2 | 0))
                                              break;
                                            else
                                              m2 = l2;
                                          }
                                        }
                                      while (0);
                                    l2 = c[f2 + 92 >> 2] | 0;
                                    if (n2) {
                                      n2 = f2;
                                      while (1) {
                                        k2 = c[n2 + 4 >> 2] | 0;
                                        if ((k2 | 0) == (f2 | 0)) {
                                          l2 = m2;
                                          f2 = n2;
                                          break f;
                                        }
                                        if ((c[k2 + 88 >> 2] | 0) != (d2 | 0)) {
                                          l2 = m2;
                                          f2 = n2;
                                          break f;
                                        }
                                        G2 = l2;
                                        l2 = c[k2 + 92 >> 2] | 0;
                                        if ((l2 | 0) < (G2 | 0)) {
                                          l2 = m2;
                                          f2 = n2;
                                          break;
                                        } else
                                          n2 = k2;
                                      }
                                    } else {
                                      n2 = f2;
                                      while (1) {
                                        k2 = c[n2 >> 2] | 0;
                                        if ((k2 | 0) == (f2 | 0)) {
                                          l2 = m2;
                                          f2 = n2;
                                          break f;
                                        }
                                        if ((c[k2 + 88 >> 2] | 0) != (d2 | 0)) {
                                          l2 = m2;
                                          f2 = n2;
                                          break f;
                                        }
                                        G2 = l2;
                                        l2 = c[k2 + 92 >> 2] | 0;
                                        if ((l2 | 0) < (G2 | 0)) {
                                          l2 = m2;
                                          f2 = n2;
                                          break;
                                        } else
                                          n2 = k2;
                                      }
                                    }
                                  } else {
                                    u2 = (y2 | 0) != 0;
                                    s2 = d2;
                                    t2 = c[f2 + 92 >> 2] | 0;
                                    r2 = l2;
                                    while (1) {
                                      q2 = f2 + 88 | 0;
                                      m2 = c[b2 + 92 >> 2] | 0;
                                      k2 = t2 - m2 | 0;
                                      l2 = c[(u2 ? b2 : b2 + 4 | 0) >> 2] | 0;
                                      h:
                                        do
                                          if ((l2 | 0) != (b2 | 0))
                                            if (u2) {
                                              p2 = s2;
                                              o2 = m2;
                                              d2 = r2;
                                              while (1) {
                                                m2 = p2;
                                                p2 = c[l2 + 88 >> 2] | 0;
                                                m2 = _(p2 - m2 | 0, z2) | 0;
                                                n2 = o2;
                                                o2 = c[l2 + 92 >> 2] | 0;
                                                n2 = o2 - n2 | 0;
                                                if ((n2 | 0) >= 1) {
                                                  o2 = k2;
                                                  l2 = b2;
                                                  break h;
                                                }
                                                if (m2 | 0) {
                                                  if ((m2 | 0) >= 0) {
                                                    o2 = k2;
                                                    l2 = b2;
                                                    break h;
                                                  }
                                                  if ((_(n2, d2) | 0) > (_(m2, k2) | 0)) {
                                                    o2 = k2;
                                                    l2 = b2;
                                                    break h;
                                                  }
                                                }
                                                n2 = _((c[q2 >> 2] | 0) - p2 | 0, z2) | 0;
                                                k2 = t2 - o2 | 0;
                                                m2 = c[l2 >> 2] | 0;
                                                if ((m2 | 0) == (l2 | 0)) {
                                                  o2 = k2;
                                                  d2 = n2;
                                                  break;
                                                } else {
                                                  b2 = l2;
                                                  l2 = m2;
                                                  d2 = n2;
                                                }
                                              }
                                            } else {
                                              p2 = s2;
                                              o2 = m2;
                                              d2 = r2;
                                              while (1) {
                                                m2 = p2;
                                                p2 = c[l2 + 88 >> 2] | 0;
                                                m2 = _(p2 - m2 | 0, z2) | 0;
                                                n2 = o2;
                                                o2 = c[l2 + 92 >> 2] | 0;
                                                n2 = o2 - n2 | 0;
                                                if ((n2 | 0) >= 1) {
                                                  o2 = k2;
                                                  l2 = b2;
                                                  break h;
                                                }
                                                if (m2 | 0) {
                                                  if ((m2 | 0) >= 0) {
                                                    o2 = k2;
                                                    l2 = b2;
                                                    break h;
                                                  }
                                                  if ((_(n2, d2) | 0) > (_(m2, k2) | 0)) {
                                                    o2 = k2;
                                                    l2 = b2;
                                                    break h;
                                                  }
                                                }
                                                n2 = _((c[q2 >> 2] | 0) - p2 | 0, z2) | 0;
                                                k2 = t2 - o2 | 0;
                                                m2 = c[l2 + 4 >> 2] | 0;
                                                if ((m2 | 0) == (l2 | 0)) {
                                                  o2 = k2;
                                                  d2 = n2;
                                                  break;
                                                } else {
                                                  b2 = l2;
                                                  l2 = m2;
                                                  d2 = n2;
                                                }
                                              }
                                            }
                                          else {
                                            o2 = k2;
                                            d2 = r2;
                                            l2 = b2;
                                          }
                                        while (0);
                                      n2 = c[(u2 ? f2 : f2 + 4 | 0) >> 2] | 0;
                                      if ((n2 | 0) == (f2 | 0))
                                        break f;
                                      r2 = c[n2 + 88 >> 2] | 0;
                                      k2 = _(r2 - (c[q2 >> 2] | 0) | 0, z2) | 0;
                                      m2 = t2;
                                      t2 = c[n2 + 92 >> 2] | 0;
                                      m2 = t2 - m2 | 0;
                                      s2 = c[l2 + 88 >> 2] | 0;
                                      r2 = _(r2 - s2 | 0, z2) | 0;
                                      if (!((m2 | 0) < 0 & (r2 | 0) > 0))
                                        break f;
                                      if (!k2) {
                                        b2 = l2;
                                        f2 = n2;
                                        continue;
                                      }
                                      if ((k2 | 0) >= 0)
                                        break f;
                                      if ((_(m2, d2) | 0) >= (_(k2, o2) | 0))
                                        break;
                                      else {
                                        b2 = l2;
                                        f2 = n2;
                                      }
                                    }
                                  }
                                while (0);
                              k2 = (y2 | 0) == 0;
                              j2 = k2 ? f2 : j2;
                              g2 = k2 ? l2 : g2;
                              f2 = k2 ? x2 : f2;
                              b2 = k2 ? w2 : l2;
                              y2 = y2 + 1 | 0;
                              if ((y2 | 0) == 2)
                                break;
                              else
                                z2 = k2 ? -1 : z2;
                            }
                            c[b2 + 4 >> 2] = f2;
                            c[f2 >> 2] = b2;
                            c[g2 >> 2] = j2;
                            c[j2 + 4 >> 2] = g2;
                            if ((c[x2 + 88 >> 2] | 0) < (c[w2 + 88 >> 2] | 0))
                              c[e2 >> 2] = x2;
                            if ((c[h2 + 88 >> 2] | 0) >= (c[A2 + 88 >> 2] | 0))
                              c[e2 + 4 >> 2] = h2;
                            c[e2 + 12 >> 2] = c[K2 + 96 + 12 >> 2];
                            h2 = g2;
                            F2 = j2;
                            s2 = c[j2 + 88 >> 2] | 0;
                            d2 = c[g2 + 88 >> 2] | 0;
                            t2 = c[j2 + 92 >> 2] | 0;
                            u2 = c[g2 + 92 >> 2] | 0;
                            v2 = c[j2 + 96 >> 2] | 0;
                            b2 = c[g2 + 96 >> 2] | 0;
                            w2 = ((t2 - u2 | 0) < 0) << 31 >> 31;
                            x2 = 0 - (s2 - d2) | 0;
                            y2 = XG(0, 0, x2 | 0, ((x2 | 0) < 0) << 31 >> 31 | 0) | 0;
                            y2 = jH(v2 - b2 | 0, ((v2 - b2 | 0) < 0) << 31 >> 31 | 0, y2 | 0, C | 0) | 0;
                            z2 = C;
                            A2 = jH(v2 - b2 | 0, ((v2 - b2 | 0) < 0) << 31 >> 31 | 0, t2 - u2 | 0, w2 | 0) | 0;
                            B2 = C;
                            o2 = jH(s2 - d2 | 0, ((s2 - d2 | 0) < 0) << 31 >> 31 | 0, x2 | 0, ((x2 | 0) < 0) << 31 >> 31 | 0) | 0;
                            E2 = C;
                            D2 = jH(t2 - u2 | 0, w2 | 0, t2 - u2 | 0, w2 | 0) | 0;
                            D2 = XG(o2 | 0, E2 | 0, D2 | 0, C | 0) | 0;
                            E2 = C;
                            o2 = c[g2 + 8 >> 2] | 0;
                            c[K2 + 120 >> 2] = 0;
                            if (!o2)
                              p2 = 0;
                            else {
                              p2 = XG(0, 0, t2 - u2 | 0, w2 | 0) | 0;
                              q2 = C;
                              f2 = 0;
                              r2 = o2;
                              while (1) {
                                m2 = c[r2 + 12 >> 2] | 0;
                                k2 = c[m2 + 88 >> 2] | 0;
                                l2 = c[m2 + 92 >> 2] | 0;
                                m2 = c[m2 + 96 >> 2] | 0;
                                n2 = jH(l2 - u2 | 0, ((l2 - u2 | 0) < 0) << 31 >> 31 | 0, x2 | 0, ((x2 | 0) < 0) << 31 >> 31 | 0) | 0;
                                G2 = C;
                                e2 = jH(k2 - d2 | 0, ((k2 - d2 | 0) < 0) << 31 >> 31 | 0, p2 | 0, q2 | 0) | 0;
                                i:
                                  do
                                    if ((n2 | 0) == (e2 | 0) & (G2 | 0) == (C | 0) ? (e2 = jH(k2 - d2 | 0, ((k2 - d2 | 0) < 0) << 31 >> 31 | 0, y2 | 0, z2 | 0) | 0, n2 = C, G2 = jH(l2 - u2 | 0, ((l2 - u2 | 0) < 0) << 31 >> 31 | 0, A2 | 0, B2 | 0) | 0, n2 = YG(G2 | 0, C | 0, e2 | 0, n2 | 0) | 0, e2 = C, G2 = jH(m2 - b2 | 0, ((m2 - b2 | 0) < 0) << 31 >> 31 | 0, D2 | 0, E2 | 0) | 0, G2 = YG(n2 | 0, e2 | 0, G2 | 0, C | 0) | 0, e2 = C, (e2 | 0) > 0 | (e2 | 0) == 0 & G2 >>> 0 > 0) : 0) {
                                      do
                                        if (f2 | 0) {
                                          n2 = (c[f2 + 4 >> 2] | 0) == (r2 | 0);
                                          if ((c[f2 >> 2] | 0) != (r2 | 0))
                                            if (n2)
                                              break;
                                            else
                                              break i;
                                          if (!n2)
                                            break i;
                                          e2 = c[f2 + 12 >> 2] | 0;
                                          L2 = c[(c[r2 + 8 >> 2] | 0) + 12 >> 2] | 0;
                                          G2 = c[L2 + 88 >> 2] | 0;
                                          n2 = c[L2 + 92 >> 2] | 0;
                                          L2 = c[L2 + 96 >> 2] | 0;
                                          M2 = (c[e2 + 96 >> 2] | 0) - L2 | 0;
                                          n2 = (_(m2 - L2 | 0, (c[e2 + 92 >> 2] | 0) - n2 | 0) | 0) - (_(M2, l2 - n2 | 0) | 0) | 0;
                                          G2 = (_(M2, k2 - G2 | 0) | 0) - (_(m2 - L2 | 0, (c[e2 + 88 >> 2] | 0) - G2 | 0) | 0) | 0;
                                          n2 = jH(n2 | 0, ((n2 | 0) < 0) << 31 >> 31 | 0, t2 - u2 | 0, w2 | 0) | 0;
                                          e2 = C;
                                          G2 = jH(G2 | 0, ((G2 | 0) < 0) << 31 >> 31 | 0, x2 | 0, ((x2 | 0) < 0) << 31 >> 31 | 0) | 0;
                                          G2 = YG(n2 | 0, e2 | 0, G2 | 0, C | 0) | 0;
                                          e2 = C;
                                          if ((e2 | 0) > 0 | (e2 | 0) == 0 & G2 >>> 0 > 0)
                                            break i;
                                        }
                                      while (0);
                                      c[K2 + 120 >> 2] = r2;
                                      f2 = r2;
                                    }
                                  while (0);
                                r2 = c[r2 >> 2] | 0;
                                if ((r2 | 0) == (o2 | 0)) {
                                  p2 = f2;
                                  break;
                                }
                              }
                            }
                            n2 = c[j2 + 8 >> 2] | 0;
                            c[K2 + 72 >> 2] = 0;
                            if (!n2)
                              f2 = 0;
                            else {
                              d2 = XG(0, 0, t2 - u2 | 0, w2 | 0) | 0;
                              b2 = C;
                              f2 = 0;
                              o2 = n2;
                              do {
                                m2 = c[o2 + 12 >> 2] | 0;
                                k2 = c[m2 + 88 >> 2] | 0;
                                l2 = c[m2 + 92 >> 2] | 0;
                                m2 = c[m2 + 96 >> 2] | 0;
                                G2 = jH(l2 - t2 | 0, ((l2 - t2 | 0) < 0) << 31 >> 31 | 0, x2 | 0, ((x2 | 0) < 0) << 31 >> 31 | 0) | 0;
                                M2 = C;
                                L2 = jH(k2 - s2 | 0, ((k2 - s2 | 0) < 0) << 31 >> 31 | 0, d2 | 0, b2 | 0) | 0;
                                do
                                  if ((G2 | 0) == (L2 | 0) & (M2 | 0) == (C | 0) ? (L2 = jH(k2 - s2 | 0, ((k2 - s2 | 0) < 0) << 31 >> 31 | 0, y2 | 0, z2 | 0) | 0, G2 = C, M2 = jH(l2 - t2 | 0, ((l2 - t2 | 0) < 0) << 31 >> 31 | 0, A2 | 0, B2 | 0) | 0, G2 = YG(M2 | 0, C | 0, L2 | 0, G2 | 0) | 0, L2 = C, M2 = jH(m2 - v2 | 0, ((m2 - v2 | 0) < 0) << 31 >> 31 | 0, D2 | 0, E2 | 0) | 0, M2 = YG(G2 | 0, L2 | 0, M2 | 0, C | 0) | 0, L2 = C, (L2 | 0) > 0 | (L2 | 0) == 0 & M2 >>> 0 > 0) : 0) {
                                    if (f2 | 0) {
                                      if ((c[f2 >> 2] | 0) != (o2 | 0))
                                        break;
                                      if ((c[f2 + 4 >> 2] | 0) == (o2 | 0) ? (L2 = c[f2 + 12 >> 2] | 0, e2 = c[(c[o2 + 8 >> 2] | 0) + 12 >> 2] | 0, M2 = c[e2 + 88 >> 2] | 0, G2 = c[e2 + 92 >> 2] | 0, e2 = c[e2 + 96 >> 2] | 0, r2 = (c[L2 + 96 >> 2] | 0) - e2 | 0, G2 = (_(m2 - e2 | 0, (c[L2 + 92 >> 2] | 0) - G2 | 0) | 0) - (_(r2, l2 - G2 | 0) | 0) | 0, M2 = (_(r2, k2 - M2 | 0) | 0) - (_(m2 - e2 | 0, (c[L2 + 88 >> 2] | 0) - M2 | 0) | 0) | 0, G2 = jH(G2 | 0, ((G2 | 0) < 0) << 31 >> 31 | 0, t2 - u2 | 0, w2 | 0) | 0, L2 = C, M2 = jH(M2 | 0, ((M2 | 0) < 0) << 31 >> 31 | 0, x2 | 0, ((x2 | 0) < 0) << 31 >> 31 | 0) | 0, M2 = YG(G2 | 0, L2 | 0, M2 | 0, C | 0) | 0, L2 = C, !((L2 | 0) > 0 | (L2 | 0) == 0 & M2 >>> 0 > 0)) : 0)
                                        break;
                                    }
                                    c[K2 + 72 >> 2] = o2;
                                    f2 = o2;
                                  }
                                while (0);
                                o2 = c[o2 >> 2] | 0;
                              } while ((o2 | 0) != (n2 | 0));
                            }
                            if ((p2 | 0) != 0 | (f2 | 0) != 0) {
                              Zr(a2, g2, j2, K2 + 120 | 0, K2 + 72 | 0);
                              f2 = c[K2 + 120 >> 2] | 0;
                              if (f2) {
                                h2 = c[f2 + 12 >> 2] | 0;
                                g2 = h2;
                              }
                              f2 = c[K2 + 72 >> 2] | 0;
                              if (!f2)
                                f2 = F2;
                              else {
                                f2 = c[f2 + 12 >> 2] | 0;
                                j2 = f2;
                              }
                            } else
                              f2 = F2;
                            G2 = j2;
                            n2 = c[j2 + 88 >> 2] | 0;
                            d2 = (c[j2 + 96 >> 2] | 0) + 1 | 0;
                            l2 = c[j2 + 92 >> 2] | 0;
                          }
                          w2 = G2;
                          x2 = g2;
                          j2 = 0;
                          D2 = 0;
                          e2 = 1;
                          k2 = 0;
                          m2 = 0;
                          y2 = 0;
                          A2 = 0;
                          B2 = n2;
                          o2 = d2;
                          F2 = 0;
                          n2 = 0;
                          while (1) {
                            z2 = x2 + 88 | 0;
                            u2 = (c[w2 + 88 >> 2] | 0) - (c[z2 >> 2] | 0) | 0;
                            M2 = x2 + 92 | 0;
                            E2 = (c[w2 + 92 >> 2] | 0) - (c[M2 >> 2] | 0) | 0;
                            t2 = x2 + 96 | 0;
                            r2 = (c[w2 + 96 >> 2] | 0) - (c[t2 >> 2] | 0) | 0;
                            c[K2 + 120 >> 2] = u2;
                            c[K2 + 120 + 4 >> 2] = E2;
                            c[K2 + 120 + 8 >> 2] = r2;
                            c[K2 + 120 + 12 >> 2] = -1;
                            z2 = B2 - (c[z2 >> 2] | 0) | 0;
                            M2 = l2 - (c[M2 >> 2] | 0) | 0;
                            t2 = o2 - (c[t2 >> 2] | 0) | 0;
                            s2 = (_(r2, M2) | 0) - (_(E2, t2) | 0) | 0;
                            t2 = (_(u2, t2) | 0) - (_(r2, z2) | 0) | 0;
                            M2 = (_(E2, z2) | 0) - (_(u2, M2) | 0) | 0;
                            c[K2 + 72 >> 2] = s2;
                            c[K2 + 72 + 4 >> 2] = ((s2 | 0) < 0) << 31 >> 31;
                            c[K2 + 72 + 8 >> 2] = t2;
                            c[K2 + 72 + 8 + 4 >> 2] = ((t2 | 0) < 0) << 31 >> 31;
                            c[K2 + 72 + 16 >> 2] = M2;
                            c[K2 + 72 + 16 + 4 >> 2] = ((M2 | 0) < 0) << 31 >> 31;
                            z2 = jH(E2 | 0, ((E2 | 0) < 0) << 31 >> 31 | 0, M2 | 0, ((M2 | 0) < 0) << 31 >> 31 | 0) | 0;
                            L2 = C;
                            v2 = jH(r2 | 0, ((r2 | 0) < 0) << 31 >> 31 | 0, t2 | 0, ((t2 | 0) < 0) << 31 >> 31 | 0) | 0;
                            v2 = XG(z2 | 0, L2 | 0, v2 | 0, C | 0) | 0;
                            L2 = C;
                            r2 = jH(s2 | 0, ((s2 | 0) < 0) << 31 >> 31 | 0, r2 | 0, ((r2 | 0) < 0) << 31 >> 31 | 0) | 0;
                            z2 = C;
                            M2 = jH(u2 | 0, ((u2 | 0) < 0) << 31 >> 31 | 0, M2 | 0, ((M2 | 0) < 0) << 31 >> 31 | 0) | 0;
                            M2 = XG(r2 | 0, z2 | 0, M2 | 0, C | 0) | 0;
                            z2 = C;
                            t2 = jH(u2 | 0, ((u2 | 0) < 0) << 31 >> 31 | 0, t2 | 0, ((t2 | 0) < 0) << 31 >> 31 | 0) | 0;
                            u2 = C;
                            E2 = jH(s2 | 0, ((s2 | 0) < 0) << 31 >> 31 | 0, E2 | 0, ((E2 | 0) < 0) << 31 >> 31 | 0) | 0;
                            E2 = XG(t2 | 0, u2 | 0, E2 | 0, C | 0) | 0;
                            c[K2 + 48 >> 2] = v2;
                            c[K2 + 48 + 4 >> 2] = L2;
                            c[K2 + 48 + 8 >> 2] = M2;
                            c[K2 + 48 + 8 + 4 >> 2] = z2;
                            c[K2 + 48 + 16 >> 2] = E2;
                            c[K2 + 48 + 16 + 4 >> 2] = C;
                            c[K2 + 24 >> 2] = 0;
                            c[K2 + 24 + 4 >> 2] = 0;
                            c[K2 + 24 + 8 >> 2] = 0;
                            c[K2 + 24 + 12 >> 2] = 0;
                            c[K2 + 24 + 16 >> 2] = 0;
                            E2 = _r(a2, 0, x2, K2 + 120 | 0, K2 + 72 | 0, K2 + 48 | 0, K2 + 24 | 0) | 0;
                            c[K2 >> 2] = 0;
                            c[K2 + 4 >> 2] = 0;
                            c[K2 + 8 >> 2] = 0;
                            c[K2 + 12 >> 2] = 0;
                            c[K2 + 16 >> 2] = 0;
                            z2 = _r(a2, 1, w2, K2 + 120 | 0, K2 + 72 | 0, K2 + 48 | 0, K2) | 0;
                            do
                              if ((E2 | 0) != 0 | (z2 | 0) != 0) {
                                d2 = E2 | 0 ? -1 : 1;
                                do
                                  if ((E2 | 0) != 0 & (z2 | 0) != 0) {
                                    v2 = c[K2 + 24 + 16 >> 2] | 0;
                                    d2 = c[K2 + 16 >> 2] | 0;
                                    if ((v2 | 0) != (d2 | 0)) {
                                      u2 = v2 - d2 | 0;
                                      break;
                                    }
                                    if (!v2)
                                      u2 = 0;
                                    else {
                                      M2 = c[K2 + 24 >> 2] | 0;
                                      t2 = c[K2 + 24 + 4 >> 2] | 0;
                                      p2 = c[K2 + 8 >> 2] | 0;
                                      N2 = c[K2 + 8 + 4 >> 2] | 0;
                                      b2 = jH(p2 | 0, 0, M2 | 0, 0) | 0;
                                      d2 = C;
                                      M2 = jH(N2 | 0, 0, M2 | 0, 0) | 0;
                                      L2 = C;
                                      p2 = jH(p2 | 0, 0, t2 | 0, 0) | 0;
                                      q2 = C;
                                      t2 = jH(N2 | 0, 0, t2 | 0, 0) | 0;
                                      N2 = C;
                                      p2 = YG(M2 | 0, 0, p2 | 0, 0) | 0;
                                      M2 = C;
                                      N2 = YG(L2 | 0, 0, t2 | 0, N2 | 0) | 0;
                                      q2 = YG(N2 | 0, C | 0, q2 | 0, 0) | 0;
                                      M2 = YG(q2 | 0, C | 0, M2 | 0, 0) | 0;
                                      q2 = C;
                                      d2 = YG(0, p2 | 0, b2 | 0, d2 | 0) | 0;
                                      b2 = C;
                                      p2 = YG(M2 | 0, q2 | 0, (b2 >>> 0 < p2 >>> 0 | (b2 | 0) == (p2 | 0) & d2 >>> 0 < 0) & 1 | 0, 0) | 0;
                                      q2 = C;
                                      M2 = c[K2 + 24 + 8 >> 2] | 0;
                                      N2 = c[K2 + 24 + 8 + 4 >> 2] | 0;
                                      t2 = c[K2 >> 2] | 0;
                                      L2 = c[K2 + 4 >> 2] | 0;
                                      s2 = jH(t2 | 0, 0, M2 | 0, 0) | 0;
                                      r2 = C;
                                      M2 = jH(L2 | 0, 0, M2 | 0, 0) | 0;
                                      O2 = C;
                                      t2 = jH(t2 | 0, 0, N2 | 0, 0) | 0;
                                      u2 = C;
                                      N2 = jH(L2 | 0, 0, N2 | 0, 0) | 0;
                                      L2 = C;
                                      t2 = YG(M2 | 0, 0, t2 | 0, 0) | 0;
                                      M2 = C;
                                      L2 = YG(O2 | 0, 0, N2 | 0, L2 | 0) | 0;
                                      u2 = YG(L2 | 0, C | 0, u2 | 0, 0) | 0;
                                      M2 = YG(u2 | 0, C | 0, M2 | 0, 0) | 0;
                                      u2 = C;
                                      r2 = YG(0, t2 | 0, s2 | 0, r2 | 0) | 0;
                                      s2 = C;
                                      t2 = YG(M2 | 0, u2 | 0, (s2 >>> 0 < t2 >>> 0 | (s2 | 0) == (t2 | 0) & r2 >>> 0 < 0) & 1 | 0, 0) | 0;
                                      u2 = C;
                                      if (!(q2 >>> 0 < u2 >>> 0 | (q2 | 0) == (u2 | 0) & p2 >>> 0 < t2 >>> 0))
                                        if (!(q2 >>> 0 > u2 >>> 0 | (q2 | 0) == (u2 | 0) & p2 >>> 0 > t2 >>> 0))
                                          if (b2 >>> 0 < s2 >>> 0 | (b2 | 0) == (s2 | 0) & d2 >>> 0 < r2 >>> 0)
                                            d2 = -1;
                                          else
                                            d2 = (b2 >>> 0 > s2 >>> 0 | (b2 | 0) == (s2 | 0) & d2 >>> 0 > r2 >>> 0) & 1;
                                        else
                                          d2 = 1;
                                      else
                                        d2 = -1;
                                      u2 = _(d2, v2) | 0;
                                    }
                                  } else
                                    u2 = d2;
                                while (0);
                                do
                                  if (!e2)
                                    if ((u2 | 0) > -1)
                                      if ((c[K2 + 16 >> 2] | 0) < 0 & ((c[K2 + 8 >> 2] | 0) == 0 ? (c[K2 + 8 + 4 >> 2] | 0) == 0 : 0)) {
                                        b2 = y2;
                                        t2 = A2;
                                        break;
                                      } else {
                                        J2 = 136;
                                        break;
                                      }
                                    else if ((c[K2 + 24 + 16 >> 2] | 0) < 0 & ((c[K2 + 24 + 8 >> 2] | 0) == 0 ? (c[K2 + 24 + 8 + 4 >> 2] | 0) == 0 : 0)) {
                                      b2 = y2;
                                      t2 = A2;
                                      break;
                                    } else {
                                      J2 = 136;
                                      break;
                                    }
                                  else
                                    J2 = 136;
                                while (0);
                                if ((J2 | 0) == 136) {
                                  J2 = 0;
                                  b2 = Xr(a2, x2, w2) | 0;
                                  if (!y2)
                                    k2 = b2;
                                  else
                                    c[y2 + 4 >> 2] = b2;
                                  c[b2 >> 2] = y2;
                                  d2 = c[b2 + 8 >> 2] | 0;
                                  if (!A2)
                                    m2 = d2;
                                  else
                                    c[A2 >> 2] = d2;
                                  c[d2 + 4 >> 2] = A2;
                                  t2 = d2;
                                }
                                c[K2 + 116 >> 2] = E2;
                                c[K2 + 112 >> 2] = z2;
                                if (!u2) {
                                  Zr(a2, h2, f2, K2 + 116 | 0, K2 + 112 | 0);
                                  s2 = c[K2 + 112 >> 2] | 0;
                                } else
                                  s2 = z2;
                                if ((u2 | 0) > -1 & (s2 | 0) != 0) {
                                  r2 = (n2 | 0) != 0;
                                  if (r2 ? (H2 = c[n2 >> 2] | 0, (H2 | 0) != (z2 | 0)) : 0) {
                                    p2 = H2;
                                    do {
                                      q2 = p2;
                                      p2 = c[p2 >> 2] | 0;
                                      o2 = c[q2 + 8 >> 2] | 0;
                                      d2 = c[o2 + 12 >> 2] | 0;
                                      if ((p2 | 0) == (q2 | 0))
                                        l2 = 0;
                                      else {
                                        c[p2 + 4 >> 2] = c[q2 + 4 >> 2];
                                        c[c[q2 + 4 >> 2] >> 2] = p2;
                                        l2 = p2;
                                      }
                                      c[d2 + 8 >> 2] = l2;
                                      l2 = c[o2 >> 2] | 0;
                                      d2 = c[q2 + 12 >> 2] | 0;
                                      if ((l2 | 0) == (o2 | 0))
                                        l2 = 0;
                                      else {
                                        c[l2 + 4 >> 2] = c[o2 + 4 >> 2];
                                        c[c[o2 + 4 >> 2] >> 2] = l2;
                                      }
                                      c[d2 + 8 >> 2] = l2;
                                      c[q2 >> 2] = 0;
                                      c[q2 + 4 >> 2] = 0;
                                      c[q2 + 8 >> 2] = 0;
                                      c[q2 + 12 >> 2] = 0;
                                      c[q2 + 16 >> 2] = 0;
                                      c[q2 >> 2] = c[a2 + 56 >> 2];
                                      c[a2 + 56 >> 2] = q2;
                                      c[o2 >> 2] = 0;
                                      c[o2 + 4 >> 2] = 0;
                                      c[o2 + 8 >> 2] = 0;
                                      c[o2 + 12 >> 2] = 0;
                                      c[o2 + 16 >> 2] = 0;
                                      c[o2 >> 2] = c[a2 + 56 >> 2];
                                      c[a2 + 56 >> 2] = o2;
                                      c[a2 + 116 >> 2] = (c[a2 + 116 >> 2] | 0) + -1;
                                    } while ((p2 | 0) != (z2 | 0));
                                  }
                                  if (!t2) {
                                    n2 = s2;
                                    l2 = r2 ? D2 : z2;
                                  } else {
                                    if (r2) {
                                      c[n2 >> 2] = m2;
                                      d2 = z2 + 4 | 0;
                                      l2 = D2;
                                    } else {
                                      n2 = c[z2 + 4 >> 2] | 0;
                                      c[n2 >> 2] = m2;
                                      d2 = z2 + 4 | 0;
                                      l2 = m2;
                                    }
                                    c[m2 + 4 >> 2] = n2;
                                    c[t2 >> 2] = z2;
                                    c[d2 >> 2] = t2;
                                    n2 = c[K2 + 112 >> 2] | 0;
                                    m2 = 0;
                                  }
                                  y2 = f2;
                                  f2 = c[n2 + 12 >> 2] | 0;
                                  D2 = l2;
                                  t2 = 0;
                                  d2 = c[y2 + 88 >> 2] | 0;
                                  o2 = c[y2 + 96 >> 2] | 0;
                                  l2 = c[y2 + 92 >> 2] | 0;
                                  y2 = c[n2 + 8 >> 2] | 0;
                                } else {
                                  d2 = B2;
                                  y2 = n2;
                                }
                                s2 = c[K2 + 116 >> 2] | 0;
                                if ((u2 | 0) < 1 & (s2 | 0) != 0) {
                                  r2 = (F2 | 0) != 0;
                                  if (r2 ? (I2 = c[F2 + 4 >> 2] | 0, (I2 | 0) != (E2 | 0)) : 0) {
                                    p2 = I2;
                                    do {
                                      n2 = p2 + 4 | 0;
                                      q2 = p2;
                                      p2 = c[n2 >> 2] | 0;
                                      l2 = c[q2 >> 2] | 0;
                                      o2 = c[q2 + 8 >> 2] | 0;
                                      d2 = c[o2 + 12 >> 2] | 0;
                                      if ((l2 | 0) == (q2 | 0))
                                        l2 = 0;
                                      else {
                                        c[l2 + 4 >> 2] = p2;
                                        c[c[n2 >> 2] >> 2] = l2;
                                      }
                                      c[d2 + 8 >> 2] = l2;
                                      l2 = c[o2 >> 2] | 0;
                                      n2 = c[q2 + 12 >> 2] | 0;
                                      if ((l2 | 0) == (o2 | 0))
                                        l2 = 0;
                                      else {
                                        c[l2 + 4 >> 2] = c[o2 + 4 >> 2];
                                        c[c[o2 + 4 >> 2] >> 2] = l2;
                                      }
                                      c[n2 + 8 >> 2] = l2;
                                      c[q2 >> 2] = 0;
                                      c[q2 + 4 >> 2] = 0;
                                      c[q2 + 8 >> 2] = 0;
                                      c[q2 + 12 >> 2] = 0;
                                      c[q2 + 16 >> 2] = 0;
                                      c[q2 >> 2] = c[a2 + 56 >> 2];
                                      c[a2 + 56 >> 2] = q2;
                                      c[o2 >> 2] = 0;
                                      c[o2 + 4 >> 2] = 0;
                                      c[o2 + 8 >> 2] = 0;
                                      c[o2 + 12 >> 2] = 0;
                                      c[o2 + 16 >> 2] = 0;
                                      c[o2 >> 2] = c[a2 + 56 >> 2];
                                      c[a2 + 56 >> 2] = o2;
                                      c[a2 + 116 >> 2] = (c[a2 + 116 >> 2] | 0) + -1;
                                    } while ((p2 | 0) != (E2 | 0));
                                  }
                                  if (!b2) {
                                    n2 = s2;
                                    j2 = r2 ? j2 : E2;
                                  } else {
                                    if (r2) {
                                      c[F2 + 4 >> 2] = k2;
                                      n2 = E2;
                                      l2 = F2;
                                    } else {
                                      l2 = c[E2 >> 2] | 0;
                                      c[l2 + 4 >> 2] = k2;
                                      n2 = E2;
                                      j2 = k2;
                                    }
                                    c[k2 >> 2] = l2;
                                    c[n2 >> 2] = b2;
                                    c[b2 + 4 >> 2] = E2;
                                    n2 = c[K2 + 116 >> 2] | 0;
                                    k2 = 0;
                                  }
                                  l2 = h2;
                                  h2 = c[n2 + 12 >> 2] | 0;
                                  u2 = 0;
                                  w2 = c[l2 + 88 >> 2] | 0;
                                  x2 = c[l2 + 96 >> 2] | 0;
                                  l2 = c[l2 + 92 >> 2] | 0;
                                  v2 = c[n2 + 8 >> 2] | 0;
                                } else {
                                  u2 = b2;
                                  w2 = d2;
                                  x2 = o2;
                                  v2 = F2;
                                }
                                if ((h2 | 0) == (g2 | 0) & (f2 | 0) == (G2 | 0)) {
                                  if (v2) {
                                    r2 = v2 + 4 | 0;
                                    n2 = c[r2 >> 2] | 0;
                                    if ((n2 | 0) != (j2 | 0))
                                      do {
                                        b2 = n2 + 4 | 0;
                                        q2 = n2;
                                        n2 = c[b2 >> 2] | 0;
                                        d2 = c[q2 >> 2] | 0;
                                        p2 = c[q2 + 8 >> 2] | 0;
                                        o2 = c[p2 + 12 >> 2] | 0;
                                        if ((d2 | 0) == (q2 | 0))
                                          d2 = 0;
                                        else {
                                          c[d2 + 4 >> 2] = n2;
                                          c[c[b2 >> 2] >> 2] = d2;
                                        }
                                        c[o2 + 8 >> 2] = d2;
                                        d2 = c[p2 >> 2] | 0;
                                        b2 = c[q2 + 12 >> 2] | 0;
                                        if ((d2 | 0) == (p2 | 0))
                                          d2 = 0;
                                        else {
                                          c[d2 + 4 >> 2] = c[p2 + 4 >> 2];
                                          c[c[p2 + 4 >> 2] >> 2] = d2;
                                        }
                                        c[b2 + 8 >> 2] = d2;
                                        c[q2 >> 2] = 0;
                                        c[q2 + 4 >> 2] = 0;
                                        c[q2 + 8 >> 2] = 0;
                                        c[q2 + 12 >> 2] = 0;
                                        c[q2 + 16 >> 2] = 0;
                                        c[q2 >> 2] = c[a2 + 56 >> 2];
                                        c[a2 + 56 >> 2] = q2;
                                        c[p2 >> 2] = 0;
                                        c[p2 + 4 >> 2] = 0;
                                        c[p2 + 8 >> 2] = 0;
                                        c[p2 + 12 >> 2] = 0;
                                        c[p2 + 16 >> 2] = 0;
                                        c[p2 >> 2] = c[a2 + 56 >> 2];
                                        c[a2 + 56 >> 2] = p2;
                                        c[a2 + 116 >> 2] = (c[a2 + 116 >> 2] | 0) + -1;
                                      } while ((n2 | 0) != (j2 | 0));
                                    if (u2 | 0) {
                                      c[k2 >> 2] = v2;
                                      c[r2 >> 2] = k2;
                                      c[j2 >> 2] = u2;
                                      c[u2 + 4 >> 2] = j2;
                                    }
                                  } else {
                                    c[k2 >> 2] = u2;
                                    c[u2 + 4 >> 2] = k2;
                                    c[h2 + 8 >> 2] = u2;
                                  }
                                  if (!y2) {
                                    c[t2 >> 2] = m2;
                                    c[m2 + 4 >> 2] = t2;
                                    c[G2 + 8 >> 2] = t2;
                                    s2 = 0;
                                    q2 = D2;
                                    r2 = e2;
                                    p2 = u2;
                                    b2 = w2;
                                    o2 = x2;
                                    d2 = v2;
                                    n2 = 0;
                                    break;
                                  }
                                  n2 = c[y2 >> 2] | 0;
                                  if ((n2 | 0) != (D2 | 0))
                                    do {
                                      p2 = n2;
                                      n2 = c[n2 >> 2] | 0;
                                      o2 = c[p2 + 8 >> 2] | 0;
                                      b2 = c[o2 + 12 >> 2] | 0;
                                      if ((n2 | 0) == (p2 | 0))
                                        d2 = 0;
                                      else {
                                        c[n2 + 4 >> 2] = c[p2 + 4 >> 2];
                                        c[c[p2 + 4 >> 2] >> 2] = n2;
                                        d2 = n2;
                                      }
                                      c[b2 + 8 >> 2] = d2;
                                      d2 = c[o2 >> 2] | 0;
                                      b2 = c[p2 + 12 >> 2] | 0;
                                      if ((d2 | 0) == (o2 | 0))
                                        d2 = 0;
                                      else {
                                        c[d2 + 4 >> 2] = c[o2 + 4 >> 2];
                                        c[c[o2 + 4 >> 2] >> 2] = d2;
                                      }
                                      c[b2 + 8 >> 2] = d2;
                                      c[p2 >> 2] = 0;
                                      c[p2 + 4 >> 2] = 0;
                                      c[p2 + 8 >> 2] = 0;
                                      c[p2 + 12 >> 2] = 0;
                                      c[p2 + 16 >> 2] = 0;
                                      c[p2 >> 2] = c[a2 + 56 >> 2];
                                      c[a2 + 56 >> 2] = p2;
                                      c[o2 >> 2] = 0;
                                      c[o2 + 4 >> 2] = 0;
                                      c[o2 + 8 >> 2] = 0;
                                      c[o2 + 12 >> 2] = 0;
                                      c[o2 + 16 >> 2] = 0;
                                      c[o2 >> 2] = c[a2 + 56 >> 2];
                                      c[a2 + 56 >> 2] = o2;
                                      c[a2 + 116 >> 2] = (c[a2 + 116 >> 2] | 0) + -1;
                                    } while ((n2 | 0) != (D2 | 0));
                                  if (!t2) {
                                    s2 = 0;
                                    q2 = D2;
                                    r2 = e2;
                                    p2 = u2;
                                    t2 = 0;
                                    b2 = w2;
                                    o2 = x2;
                                    d2 = v2;
                                    n2 = y2;
                                  } else {
                                    c[y2 >> 2] = m2;
                                    c[m2 + 4 >> 2] = y2;
                                    c[t2 >> 2] = D2;
                                    c[D2 + 4 >> 2] = t2;
                                    s2 = 0;
                                    q2 = D2;
                                    r2 = e2;
                                    p2 = u2;
                                    b2 = w2;
                                    o2 = x2;
                                    d2 = v2;
                                    n2 = y2;
                                  }
                                } else {
                                  s2 = 1;
                                  q2 = D2;
                                  r2 = 0;
                                  p2 = u2;
                                  b2 = w2;
                                  o2 = x2;
                                  d2 = v2;
                                  n2 = y2;
                                }
                              } else {
                                s2 = Xr(a2, x2, w2) | 0;
                                c[s2 >> 2] = s2;
                                c[s2 + 4 >> 2] = s2;
                                c[x2 + 8 >> 2] = s2;
                                s2 = c[s2 + 8 >> 2] | 0;
                                c[s2 >> 2] = s2;
                                c[s2 + 4 >> 2] = s2;
                                c[f2 + 8 >> 2] = s2;
                                s2 = 0;
                                q2 = D2;
                                r2 = e2;
                                p2 = y2;
                                t2 = A2;
                                b2 = B2;
                                d2 = F2;
                              }
                            while (0);
                            if (!s2)
                              break c;
                            w2 = f2;
                            x2 = h2;
                            D2 = q2;
                            e2 = r2;
                            y2 = p2;
                            A2 = t2;
                            B2 = b2;
                            F2 = d2;
                          }
                        }
                      while (0);
                    i = K2;
                    return;
                  }
                }
              while (0);
            c[f2 + 8 >> 2] = 0;
            c[f2 >> 2] = f2;
            c[f2 + 4 >> 2] = f2;
            c[e2 >> 2] = f2;
            c[e2 + 4 >> 2] = f2;
            c[e2 + 8 >> 2] = f2;
            c[e2 + 12 >> 2] = f2;
            i = K2;
            return;
          }
          function Zr(a2, b2, d2, e2, f2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            var g2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0, N2 = 0, O2 = 0, P2 = 0, Q2 = 0, R2 = 0, S2 = 0, T2 = 0, U2 = 0, V2 = 0, W2 = 0, X2 = 0, Y2 = 0, Z2 = 0, $2 = 0, aa2 = 0, ba2 = 0, ca2 = 0, da2 = 0, ea2 = 0, fa2 = 0, ga2 = 0, ha2 = 0, ia2 = 0, ja2 = 0;
            U2 = c[e2 >> 2] | 0;
            fa2 = c[f2 >> 2] | 0;
            if (U2 | 0)
              g2 = c[U2 + 12 >> 2] | 0;
            else
              g2 = b2;
            i2 = c[g2 + 88 >> 2] | 0;
            j2 = c[g2 + 92 >> 2] | 0;
            h2 = c[g2 + 96 >> 2] | 0;
            if (!fa2)
              g2 = d2;
            else
              g2 = c[fa2 + 12 >> 2] | 0;
            s2 = c[g2 + 88 >> 2] | 0;
            n2 = c[g2 + 92 >> 2] | 0;
            p2 = c[g2 + 96 >> 2] | 0;
            $2 = c[b2 + 88 >> 2] | 0;
            da2 = (c[d2 + 88 >> 2] | 0) - $2 | 0;
            u2 = c[b2 + 92 >> 2] | 0;
            ea2 = (c[d2 + 92 >> 2] | 0) - u2 | 0;
            b2 = c[b2 + 96 >> 2] | 0;
            X2 = (c[d2 + 96 >> 2] | 0) - b2 | 0;
            Z2 = c[(U2 | 0 ? U2 : fa2) + 12 >> 2] | 0;
            aa2 = (c[Z2 + 88 >> 2] | 0) - $2 | 0;
            T2 = (c[Z2 + 92 >> 2] | 0) - u2 | 0;
            Z2 = (c[Z2 + 96 >> 2] | 0) - b2 | 0;
            Y2 = (_(T2, X2) | 0) - (_(Z2, ea2) | 0) | 0;
            Z2 = (_(Z2, da2) | 0) - (_(aa2, X2) | 0) | 0;
            T2 = (_(aa2, ea2) | 0) - (_(T2, da2) | 0) | 0;
            $2 = jH(Y2 | 0, ((Y2 | 0) < 0) << 31 >> 31 | 0, $2 | 0, (($2 | 0) < 0) << 31 >> 31 | 0) | 0;
            aa2 = C;
            u2 = jH(Z2 | 0, ((Z2 | 0) < 0) << 31 >> 31 | 0, u2 | 0, ((u2 | 0) < 0) << 31 >> 31 | 0) | 0;
            t2 = C;
            b2 = jH(T2 | 0, ((T2 | 0) < 0) << 31 >> 31 | 0, b2 | 0, ((b2 | 0) < 0) << 31 >> 31 | 0) | 0;
            b2 = YG($2 | 0, aa2 | 0, b2 | 0, C | 0) | 0;
            t2 = YG(b2 | 0, C | 0, u2 | 0, t2 | 0) | 0;
            u2 = C;
            b2 = jH(T2 | 0, ((T2 | 0) < 0) << 31 >> 31 | 0, ea2 | 0, ((ea2 | 0) < 0) << 31 >> 31 | 0) | 0;
            aa2 = C;
            $2 = jH(Z2 | 0, ((Z2 | 0) < 0) << 31 >> 31 | 0, X2 | 0, ((X2 | 0) < 0) << 31 >> 31 | 0) | 0;
            $2 = XG(b2 | 0, aa2 | 0, $2 | 0, C | 0) | 0;
            aa2 = C;
            b2 = jH(Y2 | 0, ((Y2 | 0) < 0) << 31 >> 31 | 0, X2 | 0, ((X2 | 0) < 0) << 31 >> 31 | 0) | 0;
            ca2 = C;
            ba2 = jH(T2 | 0, ((T2 | 0) < 0) << 31 >> 31 | 0, da2 | 0, ((da2 | 0) < 0) << 31 >> 31 | 0) | 0;
            ba2 = XG(b2 | 0, ca2 | 0, ba2 | 0, C | 0) | 0;
            ca2 = C;
            b2 = jH(Z2 | 0, ((Z2 | 0) < 0) << 31 >> 31 | 0, da2 | 0, ((da2 | 0) < 0) << 31 >> 31 | 0) | 0;
            W2 = C;
            V2 = jH(Y2 | 0, ((Y2 | 0) < 0) << 31 >> 31 | 0, ea2 | 0, ((ea2 | 0) < 0) << 31 >> 31 | 0) | 0;
            V2 = XG(b2 | 0, W2 | 0, V2 | 0, C | 0) | 0;
            W2 = C;
            b2 = jH($2 | 0, aa2 | 0, i2 | 0, ((i2 | 0) < 0) << 31 >> 31 | 0) | 0;
            S2 = C;
            g2 = jH(ba2 | 0, ca2 | 0, j2 | 0, ((j2 | 0) < 0) << 31 >> 31 | 0) | 0;
            S2 = YG(g2 | 0, C | 0, b2 | 0, S2 | 0) | 0;
            b2 = C;
            g2 = jH(V2 | 0, W2 | 0, h2 | 0, ((h2 | 0) < 0) << 31 >> 31 | 0) | 0;
            g2 = YG(S2 | 0, b2 | 0, g2 | 0, C | 0) | 0;
            b2 = C;
            if ((U2 | 0) != 0 ? (c[U2 + 12 >> 2] | 0) != 0 : 0) {
              r2 = U2;
              q2 = i2;
              o2 = j2;
              m2 = h2;
              while (1) {
                r2 = c[(c[r2 + 8 >> 2] | 0) + 4 >> 2] | 0;
                j2 = r2 + 12 | 0;
                i2 = c[j2 >> 2] | 0;
                d2 = c[i2 + 88 >> 2] | 0;
                R2 = jH(d2 | 0, ((d2 | 0) < 0) << 31 >> 31 | 0, Y2 | 0, ((Y2 | 0) < 0) << 31 >> 31 | 0) | 0;
                Q2 = C;
                h2 = c[i2 + 92 >> 2] | 0;
                S2 = jH(h2 | 0, ((h2 | 0) < 0) << 31 >> 31 | 0, Z2 | 0, ((Z2 | 0) < 0) << 31 >> 31 | 0) | 0;
                Q2 = YG(S2 | 0, C | 0, R2 | 0, Q2 | 0) | 0;
                R2 = C;
                i2 = c[i2 + 96 >> 2] | 0;
                S2 = jH(i2 | 0, ((i2 | 0) < 0) << 31 >> 31 | 0, T2 | 0, ((T2 | 0) < 0) << 31 >> 31 | 0) | 0;
                S2 = YG(Q2 | 0, R2 | 0, S2 | 0, C | 0) | 0;
                R2 = C;
                if ((R2 | 0) < (u2 | 0) | (R2 | 0) == (u2 | 0) & S2 >>> 0 < t2 >>> 0) {
                  d2 = q2;
                  i2 = o2;
                  h2 = m2;
                  break;
                }
                if ((c[r2 + 20 >> 2] | 0) == (c[a2 + 100 >> 2] | 0)) {
                  d2 = q2;
                  i2 = o2;
                  h2 = m2;
                  break;
                }
                l2 = jH(d2 | 0, ((d2 | 0) < 0) << 31 >> 31 | 0, $2 | 0, aa2 | 0) | 0;
                S2 = C;
                k2 = jH(h2 | 0, ((h2 | 0) < 0) << 31 >> 31 | 0, ba2 | 0, ca2 | 0) | 0;
                S2 = YG(k2 | 0, C | 0, l2 | 0, S2 | 0) | 0;
                l2 = C;
                k2 = jH(i2 | 0, ((i2 | 0) < 0) << 31 >> 31 | 0, V2 | 0, W2 | 0) | 0;
                k2 = YG(S2 | 0, l2 | 0, k2 | 0, C | 0) | 0;
                l2 = C;
                if (!((l2 | 0) > (b2 | 0) | (l2 | 0) == (b2 | 0) & k2 >>> 0 > g2 >>> 0)) {
                  d2 = q2;
                  i2 = o2;
                  h2 = m2;
                  break;
                }
                c[e2 >> 2] = r2;
                S2 = c[j2 >> 2] | 0;
                d2 = c[S2 + 88 >> 2] | 0;
                i2 = c[S2 + 92 >> 2] | 0;
                h2 = c[S2 + 96 >> 2] | 0;
                if (!S2) {
                  g2 = k2;
                  b2 = l2;
                  break;
                } else {
                  b2 = l2;
                  g2 = k2;
                  q2 = d2;
                  o2 = i2;
                  m2 = h2;
                }
              }
              o2 = c[f2 >> 2] | 0;
              S2 = i2;
            } else {
              o2 = fa2;
              d2 = i2;
              S2 = j2;
            }
            j2 = jH($2 | 0, aa2 | 0, s2 | 0, ((s2 | 0) < 0) << 31 >> 31 | 0) | 0;
            R2 = C;
            i2 = jH(ba2 | 0, ca2 | 0, n2 | 0, ((n2 | 0) < 0) << 31 >> 31 | 0) | 0;
            R2 = YG(i2 | 0, C | 0, j2 | 0, R2 | 0) | 0;
            j2 = C;
            i2 = jH(V2 | 0, W2 | 0, p2 | 0, ((p2 | 0) < 0) << 31 >> 31 | 0) | 0;
            i2 = YG(R2 | 0, j2 | 0, i2 | 0, C | 0) | 0;
            j2 = C;
            a:
              do
                if (o2)
                  if (!(c[o2 + 12 >> 2] | 0))
                    k2 = s2;
                  else {
                    r2 = o2;
                    q2 = s2;
                    while (1) {
                      o2 = c[c[r2 + 8 >> 2] >> 2] | 0;
                      m2 = c[o2 + 12 >> 2] | 0;
                      k2 = c[m2 + 88 >> 2] | 0;
                      Q2 = jH(k2 | 0, ((k2 | 0) < 0) << 31 >> 31 | 0, Y2 | 0, ((Y2 | 0) < 0) << 31 >> 31 | 0) | 0;
                      P2 = C;
                      l2 = c[m2 + 92 >> 2] | 0;
                      R2 = jH(l2 | 0, ((l2 | 0) < 0) << 31 >> 31 | 0, Z2 | 0, ((Z2 | 0) < 0) << 31 >> 31 | 0) | 0;
                      P2 = YG(R2 | 0, C | 0, Q2 | 0, P2 | 0) | 0;
                      Q2 = C;
                      m2 = c[m2 + 96 >> 2] | 0;
                      R2 = jH(m2 | 0, ((m2 | 0) < 0) << 31 >> 31 | 0, T2 | 0, ((T2 | 0) < 0) << 31 >> 31 | 0) | 0;
                      R2 = YG(P2 | 0, Q2 | 0, R2 | 0, C | 0) | 0;
                      Q2 = C;
                      if ((Q2 | 0) < (u2 | 0) | (Q2 | 0) == (u2 | 0) & R2 >>> 0 < t2 >>> 0) {
                        o2 = r2;
                        k2 = q2;
                        break a;
                      }
                      if ((c[o2 + 20 >> 2] | 0) == (c[a2 + 100 >> 2] | 0)) {
                        o2 = r2;
                        k2 = q2;
                        break a;
                      }
                      R2 = jH(k2 | 0, ((k2 | 0) < 0) << 31 >> 31 | 0, $2 | 0, aa2 | 0) | 0;
                      Q2 = C;
                      l2 = jH(l2 | 0, ((l2 | 0) < 0) << 31 >> 31 | 0, ba2 | 0, ca2 | 0) | 0;
                      Q2 = YG(l2 | 0, C | 0, R2 | 0, Q2 | 0) | 0;
                      R2 = C;
                      l2 = jH(m2 | 0, ((m2 | 0) < 0) << 31 >> 31 | 0, V2 | 0, W2 | 0) | 0;
                      l2 = YG(Q2 | 0, R2 | 0, l2 | 0, C | 0) | 0;
                      m2 = C;
                      if (!((m2 | 0) > (j2 | 0) | (m2 | 0) == (j2 | 0) & l2 >>> 0 > i2 >>> 0)) {
                        o2 = r2;
                        k2 = q2;
                        break a;
                      }
                      c[f2 >> 2] = o2;
                      R2 = c[o2 + 12 >> 2] | 0;
                      k2 = c[R2 + 88 >> 2] | 0;
                      n2 = c[R2 + 92 >> 2] | 0;
                      p2 = c[R2 + 96 >> 2] | 0;
                      if (!R2) {
                        i2 = l2;
                        j2 = m2;
                        break;
                      } else {
                        r2 = o2;
                        j2 = m2;
                        i2 = l2;
                        q2 = k2;
                      }
                    }
                  }
                else {
                  o2 = 0;
                  k2 = s2;
                }
              while (0);
            i2 = XG(i2 | 0, j2 | 0, g2 | 0, b2 | 0) | 0;
            b2 = C;
            if ((b2 | 0) > 0 | (b2 | 0) == 0 & i2 >>> 0 > 0) {
              Q2 = XG(0, 0, T2 | 0, ((T2 | 0) < 0) << 31 >> 31 | 0) | 0;
              R2 = C;
              j2 = o2;
              q2 = i2;
              m2 = b2;
              r2 = d2;
              s2 = S2;
              t2 = h2;
              N2 = k2;
              O2 = n2;
              P2 = p2;
              while (1) {
                l2 = (_(O2 - s2 | 0, ea2) | 0) + (_(N2 - r2 | 0, da2) | 0) + (_(P2 - t2 | 0, X2) | 0) | 0;
                g2 = c[e2 >> 2] | 0;
                if (!g2) {
                  E2 = l2;
                  D2 = l2;
                  B2 = ((l2 | 0) < 0) << 31 >> 31;
                  l2 = q2;
                  I2 = r2;
                  H2 = s2;
                  G2 = t2;
                } else {
                  K2 = l2;
                  u2 = l2;
                  L2 = ((l2 | 0) < 0) << 31 >> 31;
                  l2 = q2;
                  H2 = r2;
                  I2 = s2;
                  J2 = t2;
                  b:
                    while (1) {
                      if (!(c[g2 + 12 >> 2] | 0)) {
                        s2 = K2;
                        t2 = L2;
                        r2 = H2;
                        q2 = I2;
                        g2 = J2;
                        break;
                      }
                      G2 = c[(c[g2 >> 2] | 0) + 8 >> 2] | 0;
                      if ((c[G2 + 20 >> 2] | 0) <= (c[a2 + 100 >> 2] | 0)) {
                        s2 = K2;
                        t2 = L2;
                        r2 = H2;
                        q2 = I2;
                        g2 = J2;
                        break;
                      }
                      M2 = c[G2 + 12 >> 2] | 0;
                      r2 = c[M2 + 88 >> 2] | 0;
                      F2 = r2 - H2 | 0;
                      q2 = c[M2 + 92 >> 2] | 0;
                      E2 = q2 - I2 | 0;
                      M2 = c[M2 + 96 >> 2] | 0;
                      j2 = M2 - J2 | 0;
                      t2 = jH(F2 | 0, ((F2 | 0) < 0) << 31 >> 31 | 0, $2 | 0, aa2 | 0) | 0;
                      D2 = C;
                      s2 = jH(E2 | 0, ((E2 | 0) < 0) << 31 >> 31 | 0, ba2 | 0, ca2 | 0) | 0;
                      D2 = YG(s2 | 0, C | 0, t2 | 0, D2 | 0) | 0;
                      t2 = C;
                      s2 = jH(j2 | 0, ((j2 | 0) < 0) << 31 >> 31 | 0, V2 | 0, W2 | 0) | 0;
                      s2 = YG(D2 | 0, t2 | 0, s2 | 0, C | 0) | 0;
                      t2 = C;
                      j2 = (_(E2, ea2) | 0) + (_(F2, da2) | 0) + (_(j2, X2) | 0) | 0;
                      do
                        if ((s2 | 0) == 0 & (t2 | 0) == 0) {
                          if ((j2 | 0) >= 0) {
                            s2 = K2;
                            t2 = L2;
                            r2 = H2;
                            q2 = I2;
                            g2 = J2;
                            break b;
                          }
                        } else {
                          if ((t2 | 0) >= 0) {
                            s2 = K2;
                            t2 = L2;
                            r2 = H2;
                            q2 = I2;
                            g2 = J2;
                            break b;
                          }
                          if ((j2 | 0) > 0) {
                            w2 = 1;
                            x2 = j2;
                            v2 = ((j2 | 0) < 0) << 31 >> 31;
                          } else {
                            x2 = XG(0, 0, j2 | 0, ((j2 | 0) < 0) << 31 >> 31 | 0) | 0;
                            w2 = j2 >> 31;
                            x2 = (j2 | 0) < 0 ? x2 : 0;
                            v2 = (j2 | 0) < 0 ? C : 0;
                          }
                          F2 = 0 - w2 | 0;
                          A2 = XG(0, 0, s2 | 0, t2 | 0) | 0;
                          B2 = C;
                          if ((K2 | 0) > 0) {
                            j2 = 1;
                            D2 = u2;
                            E2 = L2;
                          } else {
                            E2 = (K2 | 0) < 0;
                            D2 = XG(0, 0, u2 | 0, L2 | 0) | 0;
                            j2 = K2 >> 31;
                            D2 = E2 ? D2 : 0;
                            E2 = E2 ? C : 0;
                          }
                          if (!((m2 | 0) > 0 | (m2 | 0) == 0 & l2 >>> 0 > 0))
                            if ((m2 | 0) < 0) {
                              s2 = XG(0, 0, l2 | 0, m2 | 0) | 0;
                              j2 = 0 - j2 | 0;
                              t2 = C;
                            } else {
                              s2 = 0;
                              t2 = 0;
                            }
                          else {
                            s2 = l2;
                            t2 = m2;
                          }
                          if ((j2 | 0) == (F2 | 0)) {
                            if (!w2)
                              break;
                            j2 = jH(s2 | 0, 0, x2 | 0, 0) | 0;
                            w2 = C;
                            ja2 = jH(t2 | 0, 0, x2 | 0, 0) | 0;
                            ia2 = C;
                            y2 = jH(s2 | 0, 0, v2 | 0, 0) | 0;
                            z2 = C;
                            ha2 = jH(t2 | 0, 0, v2 | 0, 0) | 0;
                            x2 = C;
                            y2 = YG(ja2 | 0, 0, y2 | 0, 0) | 0;
                            s2 = C;
                            x2 = YG(ia2 | 0, 0, ha2 | 0, x2 | 0) | 0;
                            z2 = YG(x2 | 0, C | 0, z2 | 0, 0) | 0;
                            s2 = YG(z2 | 0, C | 0, s2 | 0, 0) | 0;
                            z2 = C;
                            w2 = YG(0, y2 | 0, j2 | 0, w2 | 0) | 0;
                            x2 = C;
                            y2 = YG(s2 | 0, z2 | 0, (x2 >>> 0 < y2 >>> 0 | (x2 | 0) == (y2 | 0) & w2 >>> 0 < 0) & 1 | 0, 0) | 0;
                            z2 = C;
                            s2 = jH(D2 | 0, 0, A2 | 0, 0) | 0;
                            j2 = C;
                            ha2 = jH(E2 | 0, 0, A2 | 0, 0) | 0;
                            A2 = C;
                            t2 = jH(D2 | 0, 0, B2 | 0, 0) | 0;
                            v2 = C;
                            B2 = jH(E2 | 0, 0, B2 | 0, 0) | 0;
                            D2 = C;
                            t2 = YG(ha2 | 0, 0, t2 | 0, 0) | 0;
                            E2 = C;
                            D2 = YG(A2 | 0, 0, B2 | 0, D2 | 0) | 0;
                            v2 = YG(D2 | 0, C | 0, v2 | 0, 0) | 0;
                            E2 = YG(v2 | 0, C | 0, E2 | 0, 0) | 0;
                            v2 = C;
                            j2 = YG(0, t2 | 0, s2 | 0, j2 | 0) | 0;
                            s2 = C;
                            t2 = YG(E2 | 0, v2 | 0, (s2 >>> 0 < t2 >>> 0 | (s2 | 0) == (t2 | 0) & j2 >>> 0 < 0) & 1 | 0, 0) | 0;
                            v2 = C;
                            do
                              if (z2 >>> 0 < v2 >>> 0 | (z2 | 0) == (v2 | 0) & y2 >>> 0 < t2 >>> 0)
                                j2 = -1;
                              else {
                                if (z2 >>> 0 > v2 >>> 0 | (z2 | 0) == (v2 | 0) & y2 >>> 0 > t2 >>> 0) {
                                  j2 = 1;
                                  break;
                                }
                                if (x2 >>> 0 < s2 >>> 0 | (x2 | 0) == (s2 | 0) & w2 >>> 0 < j2 >>> 0) {
                                  j2 = -1;
                                  break;
                                }
                                j2 = (x2 >>> 0 > s2 >>> 0 | (x2 | 0) == (s2 | 0) & w2 >>> 0 > j2 >>> 0) & 1;
                              }
                            while (0);
                            j2 = _(j2, F2) | 0;
                          } else
                            j2 = F2 - j2 | 0;
                          if ((j2 | 0) <= -1) {
                            s2 = K2;
                            t2 = L2;
                            r2 = H2;
                            q2 = I2;
                            g2 = J2;
                            break b;
                          }
                        }
                      while (0);
                      ja2 = N2 - r2 | 0;
                      ia2 = O2 - q2 | 0;
                      j2 = P2 - M2 | 0;
                      m2 = jH(ja2 | 0, ((ja2 | 0) < 0) << 31 >> 31 | 0, $2 | 0, aa2 | 0) | 0;
                      ha2 = C;
                      l2 = jH(ia2 | 0, ((ia2 | 0) < 0) << 31 >> 31 | 0, ba2 | 0, ca2 | 0) | 0;
                      ha2 = YG(l2 | 0, C | 0, m2 | 0, ha2 | 0) | 0;
                      m2 = C;
                      l2 = jH(j2 | 0, ((j2 | 0) < 0) << 31 >> 31 | 0, V2 | 0, W2 | 0) | 0;
                      l2 = YG(ha2 | 0, m2 | 0, l2 | 0, C | 0) | 0;
                      m2 = C;
                      g2 = (g2 | 0) == (U2 | 0) ? 0 : G2;
                      c[e2 >> 2] = g2;
                      j2 = (_(ia2, ea2) | 0) + (_(ja2, da2) | 0) + (_(j2, X2) | 0) | 0;
                      if (!g2) {
                        s2 = j2;
                        u2 = j2;
                        t2 = ((j2 | 0) < 0) << 31 >> 31;
                        g2 = M2;
                        break;
                      } else {
                        K2 = j2;
                        u2 = j2;
                        L2 = ((j2 | 0) < 0) << 31 >> 31;
                        H2 = r2;
                        I2 = q2;
                        J2 = M2;
                      }
                    }
                  E2 = s2;
                  j2 = c[f2 >> 2] | 0;
                  D2 = u2;
                  B2 = t2;
                  I2 = r2;
                  H2 = q2;
                  G2 = g2;
                }
                if (!j2) {
                  g2 = 122;
                  break;
                }
                if (!(c[j2 + 12 >> 2] | 0)) {
                  g2 = 122;
                  break;
                }
                F2 = c[c[j2 + 8 >> 2] >> 2] | 0;
                if ((c[F2 + 20 >> 2] | 0) <= (c[a2 + 100 >> 2] | 0)) {
                  g2 = 122;
                  break;
                }
                r2 = c[F2 + 12 >> 2] | 0;
                t2 = c[r2 + 88 >> 2] | 0;
                q2 = t2 - N2 | 0;
                s2 = c[r2 + 92 >> 2] | 0;
                j2 = s2 - O2 | 0;
                r2 = c[r2 + 96 >> 2] | 0;
                g2 = r2 - P2 | 0;
                ja2 = jH(q2 | 0, ((q2 | 0) < 0) << 31 >> 31 | 0, Y2 | 0, ((Y2 | 0) < 0) << 31 >> 31 | 0) | 0;
                ha2 = C;
                ia2 = jH(j2 | 0, ((j2 | 0) < 0) << 31 >> 31 | 0, Z2 | 0, ((Z2 | 0) < 0) << 31 >> 31 | 0) | 0;
                ha2 = YG(ia2 | 0, C | 0, ja2 | 0, ha2 | 0) | 0;
                ja2 = C;
                ia2 = jH(g2 | 0, ((g2 | 0) < 0) << 31 >> 31 | 0, Q2 | 0, R2 | 0) | 0;
                if (!((ha2 | 0) == (ia2 | 0) & (ja2 | 0) == (C | 0))) {
                  g2 = 122;
                  break;
                }
                v2 = jH(q2 | 0, ((q2 | 0) < 0) << 31 >> 31 | 0, $2 | 0, aa2 | 0) | 0;
                A2 = C;
                u2 = jH(j2 | 0, ((j2 | 0) < 0) << 31 >> 31 | 0, ba2 | 0, ca2 | 0) | 0;
                A2 = YG(u2 | 0, C | 0, v2 | 0, A2 | 0) | 0;
                v2 = C;
                u2 = jH(g2 | 0, ((g2 | 0) < 0) << 31 >> 31 | 0, V2 | 0, W2 | 0) | 0;
                u2 = YG(A2 | 0, v2 | 0, u2 | 0, C | 0) | 0;
                v2 = C;
                g2 = (_(j2, ea2) | 0) + (_(q2, da2) | 0) + (_(g2, X2) | 0) | 0;
                A2 = t2 - I2 | 0;
                ia2 = s2 - H2 | 0;
                z2 = r2 - G2 | 0;
                A2 = jH(A2 | 0, ((A2 | 0) < 0) << 31 >> 31 | 0, $2 | 0, aa2 | 0) | 0;
                ja2 = C;
                ia2 = jH(ia2 | 0, ((ia2 | 0) < 0) << 31 >> 31 | 0, ba2 | 0, ca2 | 0) | 0;
                ja2 = YG(ia2 | 0, C | 0, A2 | 0, ja2 | 0) | 0;
                A2 = C;
                z2 = jH(z2 | 0, ((z2 | 0) < 0) << 31 >> 31 | 0, V2 | 0, W2 | 0) | 0;
                z2 = YG(ja2 | 0, A2 | 0, z2 | 0, C | 0) | 0;
                A2 = C;
                if (!((A2 | 0) > 0 | (A2 | 0) == 0 & z2 >>> 0 > 0)) {
                  g2 = 122;
                  break;
                }
                if ((u2 | 0) == 0 & (v2 | 0) == 0) {
                  if ((g2 | 0) >= 0) {
                    g2 = 122;
                    break;
                  }
                } else {
                  if ((v2 | 0) >= 0) {
                    g2 = 122;
                    break;
                  }
                  if ((g2 | 0) > 0) {
                    r2 = 1;
                    s2 = g2;
                    q2 = ((g2 | 0) < 0) << 31 >> 31;
                  } else {
                    s2 = XG(0, 0, g2 | 0, ((g2 | 0) < 0) << 31 >> 31 | 0) | 0;
                    r2 = g2 >> 31;
                    s2 = (g2 | 0) < 0 ? s2 : 0;
                    q2 = (g2 | 0) < 0 ? C : 0;
                  }
                  y2 = 0 - r2 | 0;
                  w2 = XG(0, 0, u2 | 0, v2 | 0) | 0;
                  x2 = C;
                  if ((E2 | 0) > 0) {
                    g2 = 1;
                    v2 = D2;
                    u2 = B2;
                  } else {
                    u2 = (E2 | 0) < 0;
                    v2 = XG(0, 0, D2 | 0, B2 | 0) | 0;
                    g2 = E2 >> 31;
                    v2 = u2 ? v2 : 0;
                    u2 = u2 ? C : 0;
                  }
                  do
                    if ((m2 | 0) > 0 | (m2 | 0) == 0 & l2 >>> 0 > 0) {
                      j2 = g2;
                      g2 = m2;
                    } else {
                      if ((m2 | 0) >= 0) {
                        j2 = g2;
                        l2 = 0;
                        g2 = 0;
                        break;
                      }
                      l2 = XG(0, 0, l2 | 0, m2 | 0) | 0;
                      j2 = 0 - g2 | 0;
                      g2 = C;
                    }
                  while (0);
                  if ((j2 | 0) == (y2 | 0)) {
                    if (!r2) {
                      g2 = 122;
                      break;
                    }
                    ja2 = jH(l2 | 0, 0, s2 | 0, 0) | 0;
                    r2 = C;
                    j2 = jH(g2 | 0, 0, s2 | 0, 0) | 0;
                    P2 = C;
                    s2 = jH(l2 | 0, 0, q2 | 0, 0) | 0;
                    t2 = C;
                    g2 = jH(g2 | 0, 0, q2 | 0, 0) | 0;
                    q2 = C;
                    s2 = YG(j2 | 0, 0, s2 | 0, 0) | 0;
                    j2 = C;
                    q2 = YG(P2 | 0, 0, g2 | 0, q2 | 0) | 0;
                    t2 = YG(q2 | 0, C | 0, t2 | 0, 0) | 0;
                    j2 = YG(t2 | 0, C | 0, j2 | 0, 0) | 0;
                    t2 = C;
                    q2 = YG(0, s2 | 0, ja2 | 0, r2 | 0) | 0;
                    r2 = C;
                    s2 = YG(j2 | 0, t2 | 0, (r2 >>> 0 < s2 >>> 0 | (r2 | 0) == (s2 | 0) & q2 >>> 0 < 0) & 1 | 0, 0) | 0;
                    t2 = C;
                    j2 = jH(v2 | 0, 0, w2 | 0, 0) | 0;
                    g2 = C;
                    ja2 = jH(u2 | 0, 0, w2 | 0, 0) | 0;
                    P2 = C;
                    l2 = jH(v2 | 0, 0, x2 | 0, 0) | 0;
                    m2 = C;
                    ha2 = jH(u2 | 0, 0, x2 | 0, 0) | 0;
                    ia2 = C;
                    l2 = YG(ja2 | 0, 0, l2 | 0, 0) | 0;
                    ja2 = C;
                    ia2 = YG(P2 | 0, 0, ha2 | 0, ia2 | 0) | 0;
                    m2 = YG(ia2 | 0, C | 0, m2 | 0, 0) | 0;
                    ja2 = YG(m2 | 0, C | 0, ja2 | 0, 0) | 0;
                    m2 = C;
                    g2 = YG(0, l2 | 0, j2 | 0, g2 | 0) | 0;
                    j2 = C;
                    l2 = YG(ja2 | 0, m2 | 0, (j2 >>> 0 < l2 >>> 0 | (j2 | 0) == (l2 | 0) & g2 >>> 0 < 0) & 1 | 0, 0) | 0;
                    m2 = C;
                    do
                      if (t2 >>> 0 < m2 >>> 0 | (t2 | 0) == (m2 | 0) & s2 >>> 0 < l2 >>> 0)
                        g2 = -1;
                      else {
                        if (t2 >>> 0 > m2 >>> 0 | (t2 | 0) == (m2 | 0) & s2 >>> 0 > l2 >>> 0) {
                          g2 = 1;
                          break;
                        }
                        if (r2 >>> 0 < j2 >>> 0 | (r2 | 0) == (j2 | 0) & q2 >>> 0 < g2 >>> 0) {
                          g2 = -1;
                          break;
                        }
                        g2 = (r2 >>> 0 > j2 >>> 0 | (r2 | 0) == (j2 | 0) & q2 >>> 0 > g2 >>> 0) & 1;
                      }
                    while (0);
                    g2 = _(g2, y2) | 0;
                  } else
                    g2 = y2 - j2 | 0;
                  if ((g2 | 0) <= 0) {
                    g2 = 122;
                    break;
                  }
                }
                c[f2 >> 2] = F2;
                P2 = c[F2 + 12 >> 2] | 0;
                j2 = F2;
                q2 = z2;
                m2 = A2;
                r2 = I2;
                s2 = H2;
                t2 = G2;
                N2 = c[P2 + 88 >> 2] | 0;
                O2 = c[P2 + 92 >> 2] | 0;
                P2 = c[P2 + 96 >> 2] | 0;
              }
              if ((g2 | 0) == 122)
                return;
            }
            if ((b2 | 0) >= 0)
              return;
            F2 = XG(0, 0, T2 | 0, ((T2 | 0) < 0) << 31 >> 31 | 0) | 0;
            G2 = C;
            g2 = S2;
            E2 = k2;
            c:
              while (1) {
                D2 = b2;
                B2 = i2;
                z2 = g2;
                d:
                  while (1) {
                    A2 = (_(n2 - z2 | 0, ea2) | 0) + (_(E2 - d2 | 0, da2) | 0) + (_(p2 - h2 | 0, X2) | 0) | 0;
                    do
                      if ((o2 | 0 ? c[o2 + 12 >> 2] | 0 : 0) ? (ga2 = c[(c[o2 + 4 >> 2] | 0) + 8 >> 2] | 0, (c[ga2 + 20 >> 2] | 0) > (c[a2 + 100 >> 2] | 0)) : 0) {
                        y2 = c[ga2 + 12 >> 2] | 0;
                        w2 = c[y2 + 88 >> 2] | 0;
                        ja2 = w2 - E2 | 0;
                        x2 = c[y2 + 92 >> 2] | 0;
                        ia2 = x2 - n2 | 0;
                        y2 = c[y2 + 96 >> 2] | 0;
                        g2 = y2 - p2 | 0;
                        i2 = jH(ja2 | 0, ((ja2 | 0) < 0) << 31 >> 31 | 0, $2 | 0, aa2 | 0) | 0;
                        ha2 = C;
                        b2 = jH(ia2 | 0, ((ia2 | 0) < 0) << 31 >> 31 | 0, ba2 | 0, ca2 | 0) | 0;
                        ha2 = YG(b2 | 0, C | 0, i2 | 0, ha2 | 0) | 0;
                        i2 = C;
                        b2 = jH(g2 | 0, ((g2 | 0) < 0) << 31 >> 31 | 0, V2 | 0, W2 | 0) | 0;
                        b2 = YG(ha2 | 0, i2 | 0, b2 | 0, C | 0) | 0;
                        i2 = C;
                        g2 = (_(ia2, ea2) | 0) + (_(ja2, da2) | 0) + (_(g2, X2) | 0) | 0;
                        if ((b2 | 0) == 0 & (i2 | 0) == 0)
                          if ((g2 | 0) > 0)
                            break d;
                          else
                            break;
                        if ((i2 | 0) < 0) {
                          if ((g2 | 0) > 0) {
                            k2 = 1;
                            l2 = g2;
                            j2 = ((g2 | 0) < 0) << 31 >> 31;
                          } else {
                            l2 = XG(0, 0, g2 | 0, ((g2 | 0) < 0) << 31 >> 31 | 0) | 0;
                            k2 = g2 >> 31;
                            l2 = (g2 | 0) < 0 ? l2 : 0;
                            j2 = (g2 | 0) < 0 ? C : 0;
                          }
                          v2 = 0 - k2 | 0;
                          r2 = XG(0, 0, b2 | 0, i2 | 0) | 0;
                          s2 = C;
                          if ((A2 | 0) > 0) {
                            g2 = 1;
                            t2 = A2;
                            u2 = ((A2 | 0) < 0) << 31 >> 31;
                          } else {
                            t2 = XG(0, 0, A2 | 0, ((A2 | 0) < 0) << 31 >> 31 | 0) | 0;
                            g2 = A2 >> 31;
                            t2 = (A2 | 0) < 0 ? t2 : 0;
                            u2 = (A2 | 0) < 0 ? C : 0;
                          }
                          if (!((D2 | 0) > 0 | (D2 | 0) == 0 & B2 >>> 0 > 0))
                            if ((D2 | 0) < 0) {
                              b2 = XG(0, 0, B2 | 0, D2 | 0) | 0;
                              g2 = 0 - g2 | 0;
                              i2 = C;
                            } else {
                              b2 = 0;
                              i2 = 0;
                            }
                          else {
                            b2 = B2;
                            i2 = D2;
                          }
                          if ((g2 | 0) == (v2 | 0)) {
                            if (!k2)
                              break d;
                            g2 = jH(b2 | 0, 0, l2 | 0, 0) | 0;
                            k2 = C;
                            ha2 = jH(i2 | 0, 0, l2 | 0, 0) | 0;
                            U2 = C;
                            m2 = jH(b2 | 0, 0, j2 | 0, 0) | 0;
                            q2 = C;
                            ja2 = jH(i2 | 0, 0, j2 | 0, 0) | 0;
                            l2 = C;
                            m2 = YG(ha2 | 0, 0, m2 | 0, 0) | 0;
                            b2 = C;
                            l2 = YG(U2 | 0, 0, ja2 | 0, l2 | 0) | 0;
                            q2 = YG(l2 | 0, C | 0, q2 | 0, 0) | 0;
                            b2 = YG(q2 | 0, C | 0, b2 | 0, 0) | 0;
                            q2 = C;
                            k2 = YG(0, m2 | 0, g2 | 0, k2 | 0) | 0;
                            l2 = C;
                            m2 = YG(b2 | 0, q2 | 0, (l2 >>> 0 < m2 >>> 0 | (l2 | 0) == (m2 | 0) & k2 >>> 0 < 0) & 1 | 0, 0) | 0;
                            q2 = C;
                            b2 = jH(t2 | 0, 0, r2 | 0, 0) | 0;
                            g2 = C;
                            ja2 = jH(u2 | 0, 0, r2 | 0, 0) | 0;
                            U2 = C;
                            i2 = jH(t2 | 0, 0, s2 | 0, 0) | 0;
                            j2 = C;
                            ha2 = jH(u2 | 0, 0, s2 | 0, 0) | 0;
                            ia2 = C;
                            i2 = YG(ja2 | 0, 0, i2 | 0, 0) | 0;
                            ja2 = C;
                            ia2 = YG(U2 | 0, 0, ha2 | 0, ia2 | 0) | 0;
                            j2 = YG(ia2 | 0, C | 0, j2 | 0, 0) | 0;
                            ja2 = YG(j2 | 0, C | 0, ja2 | 0, 0) | 0;
                            j2 = C;
                            g2 = YG(0, i2 | 0, b2 | 0, g2 | 0) | 0;
                            b2 = C;
                            i2 = YG(ja2 | 0, j2 | 0, (b2 >>> 0 < i2 >>> 0 | (b2 | 0) == (i2 | 0) & g2 >>> 0 < 0) & 1 | 0, 0) | 0;
                            j2 = C;
                            do
                              if (q2 >>> 0 < j2 >>> 0 | (q2 | 0) == (j2 | 0) & m2 >>> 0 < i2 >>> 0)
                                g2 = -1;
                              else {
                                if (q2 >>> 0 > j2 >>> 0 | (q2 | 0) == (j2 | 0) & m2 >>> 0 > i2 >>> 0) {
                                  g2 = 1;
                                  break;
                                }
                                if (l2 >>> 0 < b2 >>> 0 | (l2 | 0) == (b2 | 0) & k2 >>> 0 < g2 >>> 0) {
                                  g2 = -1;
                                  break;
                                }
                                g2 = (l2 >>> 0 > b2 >>> 0 | (l2 | 0) == (b2 | 0) & k2 >>> 0 > g2 >>> 0) & 1;
                              }
                            while (0);
                            g2 = _(g2, v2) | 0;
                          } else
                            g2 = v2 - g2 | 0;
                          if ((g2 | 0) < 1)
                            break d;
                        }
                      }
                    while (0);
                    g2 = c[e2 >> 2] | 0;
                    if (!g2) {
                      g2 = 122;
                      break c;
                    }
                    if (!(c[g2 + 12 >> 2] | 0)) {
                      g2 = 122;
                      break c;
                    }
                    u2 = c[(c[g2 + 8 >> 2] | 0) + 4 >> 2] | 0;
                    if ((c[u2 + 20 >> 2] | 0) <= (c[a2 + 100 >> 2] | 0)) {
                      g2 = 122;
                      break c;
                    }
                    i2 = c[u2 + 12 >> 2] | 0;
                    k2 = c[i2 + 88 >> 2] | 0;
                    d2 = k2 - d2 | 0;
                    j2 = c[i2 + 92 >> 2] | 0;
                    b2 = j2 - z2 | 0;
                    i2 = c[i2 + 96 >> 2] | 0;
                    g2 = i2 - h2 | 0;
                    ja2 = jH(d2 | 0, ((d2 | 0) < 0) << 31 >> 31 | 0, Y2 | 0, ((Y2 | 0) < 0) << 31 >> 31 | 0) | 0;
                    ha2 = C;
                    ia2 = jH(b2 | 0, ((b2 | 0) < 0) << 31 >> 31 | 0, Z2 | 0, ((Z2 | 0) < 0) << 31 >> 31 | 0) | 0;
                    ha2 = YG(ia2 | 0, C | 0, ja2 | 0, ha2 | 0) | 0;
                    ja2 = C;
                    ia2 = jH(g2 | 0, ((g2 | 0) < 0) << 31 >> 31 | 0, F2 | 0, G2 | 0) | 0;
                    if (!((ha2 | 0) == (ia2 | 0) & (ja2 | 0) == (C | 0))) {
                      g2 = 122;
                      break c;
                    }
                    l2 = jH(d2 | 0, ((d2 | 0) < 0) << 31 >> 31 | 0, $2 | 0, aa2 | 0) | 0;
                    t2 = C;
                    h2 = jH(b2 | 0, ((b2 | 0) < 0) << 31 >> 31 | 0, ba2 | 0, ca2 | 0) | 0;
                    t2 = YG(h2 | 0, C | 0, l2 | 0, t2 | 0) | 0;
                    l2 = C;
                    h2 = jH(g2 | 0, ((g2 | 0) < 0) << 31 >> 31 | 0, V2 | 0, W2 | 0) | 0;
                    h2 = YG(t2 | 0, l2 | 0, h2 | 0, C | 0) | 0;
                    l2 = C;
                    g2 = (_(b2, ea2) | 0) + (_(d2, da2) | 0) + (_(g2, X2) | 0) | 0;
                    t2 = E2 - k2 | 0;
                    ia2 = n2 - j2 | 0;
                    s2 = p2 - i2 | 0;
                    t2 = jH(t2 | 0, ((t2 | 0) < 0) << 31 >> 31 | 0, $2 | 0, aa2 | 0) | 0;
                    ja2 = C;
                    ia2 = jH(ia2 | 0, ((ia2 | 0) < 0) << 31 >> 31 | 0, ba2 | 0, ca2 | 0) | 0;
                    ja2 = YG(ia2 | 0, C | 0, t2 | 0, ja2 | 0) | 0;
                    t2 = C;
                    s2 = jH(s2 | 0, ((s2 | 0) < 0) << 31 >> 31 | 0, V2 | 0, W2 | 0) | 0;
                    s2 = YG(ja2 | 0, t2 | 0, s2 | 0, C | 0) | 0;
                    t2 = C;
                    if ((t2 | 0) >= 0) {
                      g2 = 122;
                      break c;
                    }
                    if ((h2 | 0) == 0 & (l2 | 0) == 0) {
                      if ((g2 | 0) <= 0) {
                        g2 = 122;
                        break c;
                      }
                    } else {
                      if ((l2 | 0) >= 0) {
                        g2 = 122;
                        break c;
                      }
                      if ((g2 | 0) > 0) {
                        j2 = g2;
                        k2 = ((g2 | 0) < 0) << 31 >> 31;
                        i2 = 1;
                      } else {
                        j2 = XG(0, 0, g2 | 0, ((g2 | 0) < 0) << 31 >> 31 | 0) | 0;
                        j2 = (g2 | 0) < 0 ? j2 : 0;
                        k2 = (g2 | 0) < 0 ? C : 0;
                        i2 = g2 >> 31;
                      }
                      r2 = 0 - i2 | 0;
                      o2 = XG(0, 0, h2 | 0, l2 | 0) | 0;
                      q2 = C;
                      if ((A2 | 0) > 0) {
                        g2 = 1;
                        m2 = A2;
                        h2 = ((A2 | 0) < 0) << 31 >> 31;
                      } else {
                        m2 = XG(0, 0, A2 | 0, ((A2 | 0) < 0) << 31 >> 31 | 0) | 0;
                        g2 = A2 >> 31;
                        m2 = (A2 | 0) < 0 ? m2 : 0;
                        h2 = (A2 | 0) < 0 ? C : 0;
                      }
                      do
                        if ((D2 | 0) > 0 | (D2 | 0) == 0 & B2 >>> 0 > 0) {
                          d2 = g2;
                          b2 = B2;
                          g2 = D2;
                        } else {
                          if ((D2 | 0) >= 0) {
                            d2 = g2;
                            b2 = 0;
                            g2 = 0;
                            break;
                          }
                          b2 = XG(0, 0, B2 | 0, D2 | 0) | 0;
                          d2 = 0 - g2 | 0;
                          g2 = C;
                        }
                      while (0);
                      if ((d2 | 0) == (r2 | 0)) {
                        if (!i2) {
                          g2 = 122;
                          break c;
                        }
                        ja2 = jH(b2 | 0, 0, j2 | 0, 0) | 0;
                        i2 = C;
                        d2 = jH(g2 | 0, 0, j2 | 0, 0) | 0;
                        U2 = C;
                        b2 = jH(b2 | 0, 0, k2 | 0, 0) | 0;
                        l2 = C;
                        g2 = jH(g2 | 0, 0, k2 | 0, 0) | 0;
                        j2 = C;
                        k2 = YG(d2 | 0, 0, b2 | 0, 0) | 0;
                        b2 = C;
                        j2 = YG(U2 | 0, 0, g2 | 0, j2 | 0) | 0;
                        l2 = YG(j2 | 0, C | 0, l2 | 0, 0) | 0;
                        b2 = YG(l2 | 0, C | 0, b2 | 0, 0) | 0;
                        l2 = C;
                        i2 = YG(0, k2 | 0, ja2 | 0, i2 | 0) | 0;
                        j2 = C;
                        k2 = YG(b2 | 0, l2 | 0, (j2 >>> 0 < k2 >>> 0 | (j2 | 0) == (k2 | 0) & i2 >>> 0 < 0) & 1 | 0, 0) | 0;
                        l2 = C;
                        b2 = jH(m2 | 0, 0, o2 | 0, 0) | 0;
                        g2 = C;
                        ja2 = jH(h2 | 0, 0, o2 | 0, 0) | 0;
                        U2 = C;
                        d2 = jH(m2 | 0, 0, q2 | 0, 0) | 0;
                        ia2 = C;
                        ha2 = jH(h2 | 0, 0, q2 | 0, 0) | 0;
                        h2 = C;
                        d2 = YG(ja2 | 0, 0, d2 | 0, 0) | 0;
                        ja2 = C;
                        h2 = YG(U2 | 0, 0, ha2 | 0, h2 | 0) | 0;
                        h2 = YG(h2 | 0, C | 0, ia2 | 0, 0) | 0;
                        ja2 = YG(h2 | 0, C | 0, ja2 | 0, 0) | 0;
                        h2 = C;
                        g2 = YG(0, d2 | 0, b2 | 0, g2 | 0) | 0;
                        b2 = C;
                        d2 = YG(ja2 | 0, h2 | 0, (b2 >>> 0 < d2 >>> 0 | (b2 | 0) == (d2 | 0) & g2 >>> 0 < 0) & 1 | 0, 0) | 0;
                        h2 = C;
                        do
                          if (l2 >>> 0 < h2 >>> 0 | (l2 | 0) == (h2 | 0) & k2 >>> 0 < d2 >>> 0)
                            g2 = -1;
                          else {
                            if (l2 >>> 0 > h2 >>> 0 | (l2 | 0) == (h2 | 0) & k2 >>> 0 > d2 >>> 0) {
                              g2 = 1;
                              break;
                            }
                            if (j2 >>> 0 < b2 >>> 0 | (j2 | 0) == (b2 | 0) & i2 >>> 0 < g2 >>> 0) {
                              g2 = -1;
                              break;
                            }
                            g2 = (j2 >>> 0 > b2 >>> 0 | (j2 | 0) == (b2 | 0) & i2 >>> 0 > g2 >>> 0) & 1;
                          }
                        while (0);
                        g2 = _(g2, r2) | 0;
                      } else
                        g2 = r2 - d2 | 0;
                      if ((g2 | 0) >= 0) {
                        g2 = 122;
                        break c;
                      }
                    }
                    c[e2 >> 2] = u2;
                    h2 = c[u2 + 12 >> 2] | 0;
                    o2 = c[f2 >> 2] | 0;
                    D2 = t2;
                    B2 = s2;
                    d2 = c[h2 + 88 >> 2] | 0;
                    z2 = c[h2 + 92 >> 2] | 0;
                    h2 = c[h2 + 96 >> 2] | 0;
                  }
                b2 = w2 - d2 | 0;
                E2 = x2 - z2 | 0;
                i2 = y2 - h2 | 0;
                b2 = jH(b2 | 0, ((b2 | 0) < 0) << 31 >> 31 | 0, $2 | 0, aa2 | 0) | 0;
                g2 = C;
                E2 = jH(E2 | 0, ((E2 | 0) < 0) << 31 >> 31 | 0, ba2 | 0, ca2 | 0) | 0;
                g2 = YG(E2 | 0, C | 0, b2 | 0, g2 | 0) | 0;
                b2 = C;
                i2 = jH(i2 | 0, ((i2 | 0) < 0) << 31 >> 31 | 0, V2 | 0, W2 | 0) | 0;
                i2 = YG(g2 | 0, b2 | 0, i2 | 0, C | 0) | 0;
                o2 = (o2 | 0) == (fa2 | 0) ? 0 : ga2;
                c[f2 >> 2] = o2;
                b2 = C;
                g2 = z2;
                E2 = w2;
                n2 = x2;
                p2 = y2;
              }
            if ((g2 | 0) == 122)
              return;
          }
          function _r(a2, b2, d2, e2, f2, g2, h2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            g2 = g2 | 0;
            h2 = h2 | 0;
            var i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0;
            i2 = c[d2 + 8 >> 2] | 0;
            if (!i2) {
              a2 = 0;
              return a2 | 0;
            }
            j2 = i2;
            D2 = i2;
            i2 = 0;
            do {
              if ((c[D2 + 20 >> 2] | 0) > (c[a2 + 100 >> 2] | 0)) {
                A2 = c[D2 + 12 >> 2] | 0;
                w2 = c[A2 + 88 >> 2] | 0;
                x2 = w2 - (c[d2 + 88 >> 2] | 0) | 0;
                y2 = c[A2 + 92 >> 2] | 0;
                z2 = y2 - (c[d2 + 92 >> 2] | 0) | 0;
                A2 = c[A2 + 96 >> 2] | 0;
                B2 = A2 - (c[d2 + 96 >> 2] | 0) | 0;
                k2 = jH(c[g2 >> 2] | 0, c[g2 + 4 >> 2] | 0, x2 | 0, ((x2 | 0) < 0) << 31 >> 31 | 0) | 0;
                l2 = C;
                j2 = jH(c[g2 + 8 >> 2] | 0, c[g2 + 8 + 4 >> 2] | 0, z2 | 0, ((z2 | 0) < 0) << 31 >> 31 | 0) | 0;
                l2 = YG(j2 | 0, C | 0, k2 | 0, l2 | 0) | 0;
                k2 = C;
                j2 = jH(c[g2 + 16 >> 2] | 0, c[g2 + 16 + 4 >> 2] | 0, B2 | 0, ((B2 | 0) < 0) << 31 >> 31 | 0) | 0;
                j2 = YG(l2 | 0, k2 | 0, j2 | 0, C | 0) | 0;
                k2 = C;
                l2 = jH(c[f2 >> 2] | 0, c[f2 + 4 >> 2] | 0, x2 | 0, ((x2 | 0) < 0) << 31 >> 31 | 0) | 0;
                v2 = C;
                m2 = jH(c[f2 + 8 >> 2] | 0, c[f2 + 8 + 4 >> 2] | 0, z2 | 0, ((z2 | 0) < 0) << 31 >> 31 | 0) | 0;
                v2 = YG(m2 | 0, C | 0, l2 | 0, v2 | 0) | 0;
                l2 = C;
                m2 = jH(c[f2 + 16 >> 2] | 0, c[f2 + 16 + 4 >> 2] | 0, B2 | 0, ((B2 | 0) < 0) << 31 >> 31 | 0) | 0;
                m2 = YG(v2 | 0, l2 | 0, m2 | 0, C | 0) | 0;
                l2 = C;
                if ((k2 | 0) > 0 | (k2 | 0) == 0 & j2 >>> 0 > 0) {
                  v2 = k2;
                  k2 = 1;
                } else {
                  t2 = XG(0, 0, j2 | 0, k2 | 0) | 0;
                  v2 = C;
                  u2 = $G(j2 | 0, k2 | 0, 63) | 0;
                  j2 = (k2 | 0) < 0 ? t2 : 0;
                  v2 = (k2 | 0) < 0 ? v2 : 0;
                  k2 = u2;
                }
                if (!((l2 | 0) > 0 | (l2 | 0) == 0 & m2 >>> 0 > 0)) {
                  u2 = XG(0, 0, m2 | 0, l2 | 0) | 0;
                  n2 = (l2 | 0) < 0 ? 0 - k2 | 0 : k2;
                  k2 = (l2 | 0) < 0 ? u2 : 0;
                  l2 = (l2 | 0) < 0 ? C : 0;
                  if (!((n2 | 0) == 0 & ((k2 | 0) == 0 & (l2 | 0) == 0))) {
                    m2 = k2;
                    o2 = 8;
                  }
                } else {
                  n2 = k2;
                  o2 = 8;
                }
                a:
                  do
                    if ((o2 | 0) == 8) {
                      o2 = 0;
                      if (!i2) {
                        c[h2 >> 2] = j2;
                        c[h2 + 4 >> 2] = v2;
                        c[h2 + 8 >> 2] = m2;
                        c[h2 + 8 + 4 >> 2] = l2;
                        c[h2 + 16 >> 2] = n2;
                        i2 = D2;
                        break;
                      }
                      k2 = c[h2 + 16 >> 2] | 0;
                      if ((n2 | 0) == (k2 | 0)) {
                        if (n2 | 0) {
                          p2 = c[h2 + 8 >> 2] | 0;
                          s2 = c[h2 + 8 + 4 >> 2] | 0;
                          o2 = jH(p2 | 0, 0, j2 | 0, 0) | 0;
                          k2 = C;
                          t2 = jH(s2 | 0, 0, j2 | 0, 0) | 0;
                          r2 = C;
                          p2 = jH(p2 | 0, 0, v2 | 0, 0) | 0;
                          q2 = C;
                          s2 = jH(s2 | 0, 0, v2 | 0, 0) | 0;
                          G2 = C;
                          p2 = YG(t2 | 0, 0, p2 | 0, 0) | 0;
                          t2 = C;
                          G2 = YG(r2 | 0, 0, s2 | 0, G2 | 0) | 0;
                          q2 = YG(G2 | 0, C | 0, q2 | 0, 0) | 0;
                          t2 = YG(q2 | 0, C | 0, t2 | 0, 0) | 0;
                          q2 = C;
                          k2 = YG(0, p2 | 0, o2 | 0, k2 | 0) | 0;
                          o2 = C;
                          p2 = YG(t2 | 0, q2 | 0, (o2 >>> 0 < p2 >>> 0 | (o2 | 0) == (p2 | 0) & k2 >>> 0 < 0) & 1 | 0, 0) | 0;
                          q2 = C;
                          t2 = c[h2 >> 2] | 0;
                          G2 = c[h2 + 4 >> 2] | 0;
                          s2 = jH(t2 | 0, 0, m2 | 0, 0) | 0;
                          r2 = C;
                          E2 = jH(G2 | 0, 0, m2 | 0, 0) | 0;
                          H2 = C;
                          t2 = jH(t2 | 0, 0, l2 | 0, 0) | 0;
                          u2 = C;
                          G2 = jH(G2 | 0, 0, l2 | 0, 0) | 0;
                          F2 = C;
                          t2 = YG(E2 | 0, 0, t2 | 0, 0) | 0;
                          E2 = C;
                          F2 = YG(H2 | 0, 0, G2 | 0, F2 | 0) | 0;
                          u2 = YG(F2 | 0, C | 0, u2 | 0, 0) | 0;
                          E2 = YG(u2 | 0, C | 0, E2 | 0, 0) | 0;
                          u2 = C;
                          r2 = YG(0, t2 | 0, s2 | 0, r2 | 0) | 0;
                          s2 = C;
                          t2 = YG(E2 | 0, u2 | 0, (s2 >>> 0 < t2 >>> 0 | (s2 | 0) == (t2 | 0) & r2 >>> 0 < 0) & 1 | 0, 0) | 0;
                          u2 = C;
                          if (!(q2 >>> 0 < u2 >>> 0 | (q2 | 0) == (u2 | 0) & p2 >>> 0 < t2 >>> 0))
                            if (!(q2 >>> 0 > u2 >>> 0 | (q2 | 0) == (u2 | 0) & p2 >>> 0 > t2 >>> 0))
                              if (o2 >>> 0 < s2 >>> 0 | (o2 | 0) == (s2 | 0) & k2 >>> 0 < r2 >>> 0)
                                k2 = -1;
                              else
                                k2 = (o2 >>> 0 > s2 >>> 0 | (o2 | 0) == (s2 | 0) & k2 >>> 0 > r2 >>> 0) & 1;
                            else
                              k2 = 1;
                          else
                            k2 = -1;
                          k2 = _(k2, n2) | 0;
                          o2 = 18;
                        }
                      } else {
                        k2 = n2 - k2 | 0;
                        o2 = 18;
                      }
                      do
                        if ((o2 | 0) == 18) {
                          o2 = 0;
                          if ((k2 | 0) >= 0)
                            if (!k2)
                              break;
                            else
                              break a;
                          else {
                            c[h2 >> 2] = j2;
                            c[h2 + 4 >> 2] = v2;
                            c[h2 + 8 >> 2] = m2;
                            c[h2 + 8 + 4 >> 2] = l2;
                            c[h2 + 16 >> 2] = n2;
                            i2 = D2;
                            break a;
                          }
                        }
                      while (0);
                      j2 = (c[i2 + 4 >> 2] | 0) == (D2 | 0);
                      if ((c[i2 >> 2] | 0) == (D2 | 0))
                        if (j2) {
                          H2 = c[e2 + 8 >> 2] | 0;
                          E2 = _(H2, z2) | 0;
                          u2 = c[e2 + 4 >> 2] | 0;
                          E2 = E2 - (_(u2, B2) | 0) | 0;
                          G2 = c[e2 >> 2] | 0;
                          H2 = (_(G2, B2) | 0) - (_(H2, x2) | 0) | 0;
                          G2 = (_(u2, x2) | 0) - (_(G2, z2) | 0) | 0;
                          u2 = c[i2 + 12 >> 2] | 0;
                          j2 = c[(c[D2 + 8 >> 2] | 0) + 12 >> 2] | 0;
                          z2 = c[j2 + 88 >> 2] | 0;
                          x2 = (c[u2 + 88 >> 2] | 0) - z2 | 0;
                          v2 = c[j2 + 92 >> 2] | 0;
                          B2 = (c[u2 + 92 >> 2] | 0) - v2 | 0;
                          j2 = c[j2 + 96 >> 2] | 0;
                          u2 = (c[u2 + 96 >> 2] | 0) - j2 | 0;
                          F2 = (_(A2 - j2 | 0, B2) | 0) - (_(y2 - v2 | 0, u2) | 0) | 0;
                          j2 = (_(w2 - z2 | 0, u2) | 0) - (_(A2 - j2 | 0, x2) | 0) | 0;
                          B2 = (_(y2 - v2 | 0, x2) | 0) - (_(w2 - z2 | 0, B2) | 0) | 0;
                          E2 = jH(F2 | 0, ((F2 | 0) < 0) << 31 >> 31 | 0, E2 | 0, ((E2 | 0) < 0) << 31 >> 31 | 0) | 0;
                          F2 = C;
                          H2 = jH(j2 | 0, ((j2 | 0) < 0) << 31 >> 31 | 0, H2 | 0, ((H2 | 0) < 0) << 31 >> 31 | 0) | 0;
                          j2 = C;
                          G2 = jH(B2 | 0, ((B2 | 0) < 0) << 31 >> 31 | 0, G2 | 0, ((G2 | 0) < 0) << 31 >> 31 | 0) | 0;
                          G2 = YG(E2 | 0, F2 | 0, G2 | 0, C | 0) | 0;
                          j2 = YG(G2 | 0, C | 0, H2 | 0, j2 | 0) | 0;
                          H2 = C;
                          j2 = (H2 | 0) > 0 | (H2 | 0) == 0 & j2 >>> 0 > 0 ? 2 : 1;
                        } else
                          j2 = 2;
                      else
                        j2 = j2 & 1;
                      i2 = (j2 | 0) == 2 ^ b2 ? i2 : D2;
                    }
                  while (0);
                j2 = c[d2 + 8 >> 2] | 0;
              }
              D2 = c[D2 >> 2] | 0;
            } while ((D2 | 0) != (j2 | 0));
            return i2 | 0;
          }
          function $r(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0;
            m2 = i;
            i = i + 16 | 0;
            h2 = c[a2 + 12 >> 2] | 0;
            j2 = c[h2 + (((d2 + b2 | 0) / 2 | 0) << 4) >> 2] | 0;
            k2 = c[h2 + (((d2 + b2 | 0) / 2 | 0) << 4) + 4 >> 2] | 0;
            l2 = c[h2 + (((d2 + b2 | 0) / 2 | 0) << 4) + 8 >> 2] | 0;
            e2 = b2;
            f2 = d2;
            while (1) {
              g2 = e2;
              while (1) {
                e2 = c[h2 + (g2 << 4) + 4 >> 2] | 0;
                if ((e2 | 0) >= (k2 | 0)) {
                  if ((e2 | 0) != (k2 | 0))
                    break;
                  e2 = c[h2 + (g2 << 4) >> 2] | 0;
                  if ((e2 | 0) >= (j2 | 0)) {
                    if ((e2 | 0) != (j2 | 0))
                      break;
                    if ((c[h2 + (g2 << 4) + 8 >> 2] | 0) >= (l2 | 0))
                      break;
                  }
                }
                g2 = g2 + 1 | 0;
              }
              while (1) {
                e2 = c[h2 + (f2 << 4) + 4 >> 2] | 0;
                if ((k2 | 0) >= (e2 | 0)) {
                  if ((k2 | 0) != (e2 | 0))
                    break;
                  e2 = c[h2 + (f2 << 4) >> 2] | 0;
                  if ((j2 | 0) >= (e2 | 0)) {
                    if ((j2 | 0) != (e2 | 0))
                      break;
                    if ((l2 | 0) >= (c[h2 + (f2 << 4) + 8 >> 2] | 0))
                      break;
                  }
                }
                f2 = f2 + -1 | 0;
              }
              if ((g2 | 0) > (f2 | 0))
                e2 = g2;
              else {
                e2 = h2 + (g2 << 4) | 0;
                c[m2 >> 2] = c[e2 >> 2];
                c[m2 + 4 >> 2] = c[e2 + 4 >> 2];
                c[m2 + 8 >> 2] = c[e2 + 8 >> 2];
                c[m2 + 12 >> 2] = c[e2 + 12 >> 2];
                h2 = h2 + (f2 << 4) | 0;
                c[e2 >> 2] = c[h2 >> 2];
                c[e2 + 4 >> 2] = c[h2 + 4 >> 2];
                c[e2 + 8 >> 2] = c[h2 + 8 >> 2];
                c[e2 + 12 >> 2] = c[h2 + 12 >> 2];
                e2 = (c[a2 + 12 >> 2] | 0) + (f2 << 4) | 0;
                c[e2 >> 2] = c[m2 >> 2];
                c[e2 + 4 >> 2] = c[m2 + 4 >> 2];
                c[e2 + 8 >> 2] = c[m2 + 8 >> 2];
                c[e2 + 12 >> 2] = c[m2 + 12 >> 2];
                e2 = g2 + 1 | 0;
                f2 = f2 + -1 | 0;
              }
              if ((e2 | 0) > (f2 | 0))
                break;
              h2 = c[a2 + 12 >> 2] | 0;
            }
            if ((f2 | 0) > (b2 | 0))
              $r(a2, b2, f2);
            if ((e2 | 0) >= (d2 | 0)) {
              i = m2;
              return;
            }
            $r(a2, e2, d2);
            i = m2;
            return;
          }
          function as(a2, b2, c2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0;
            if ((d2 | 0) > -1 | (d2 | 0) == -1 & c2 >>> 0 > 4294967295) {
              e2 = (+(c2 >>> 0) + 4294967296 * +(d2 >>> 0)) * 18446744073709552e3 + (+(a2 >>> 0) + 4294967296 * +(b2 >>> 0));
              return +e2;
            } else {
              g2 = XG(0, 0, a2 | 0, b2 | 0) | 0;
              f2 = C;
              d2 = YG((a2 | 0) == 0 & (b2 | 0) == 0 & 1 | 0, 0, ~c2 | 0, ~d2 | 0) | 0;
              e2 = -+as(g2, f2, d2, C);
              return +e2;
            }
            return 0;
          }
          function bs(b2, d2, e2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, h2 = 0, j2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0;
            J2 = i;
            i = i + 240 | 0;
            if ((e2 | 0) < 1) {
              f2 = c[b2 + 12 >> 2] | 0;
              if (f2 | 0) {
                if (a[b2 + 16 >> 0] | 0) {
                  c[5638] = (c[5638] | 0) + 1;
                  rG(c[f2 + -4 >> 2] | 0);
                }
                c[b2 + 12 >> 2] = 0;
              }
              a[b2 + 16 >> 0] = 1;
              c[b2 + 12 >> 2] = 0;
              c[b2 + 4 >> 2] = 0;
              c[b2 + 8 >> 2] = 0;
              f2 = c[b2 + 32 >> 2] | 0;
              if (f2 | 0) {
                if (a[b2 + 36 >> 0] | 0) {
                  c[5638] = (c[5638] | 0) + 1;
                  rG(c[f2 + -4 >> 2] | 0);
                }
                c[b2 + 32 >> 2] = 0;
              }
              a[b2 + 36 >> 0] = 1;
              c[b2 + 32 >> 2] = 0;
              c[b2 + 24 >> 2] = 0;
              c[b2 + 28 >> 2] = 0;
              f2 = c[b2 + 52 >> 2] | 0;
              if (f2 | 0) {
                if (a[b2 + 56 >> 0] | 0) {
                  c[5638] = (c[5638] | 0) + 1;
                  rG(c[f2 + -4 >> 2] | 0);
                }
                c[b2 + 52 >> 2] = 0;
              }
              a[b2 + 56 >> 0] = 1;
              c[b2 + 52 >> 2] = 0;
              c[b2 + 44 >> 2] = 0;
              c[b2 + 48 >> 2] = 0;
              i = J2;
              return;
            }
            c[J2 + 40 + 32 >> 2] = 0;
            c[J2 + 40 + 36 >> 2] = 0;
            c[J2 + 40 + 40 >> 2] = 0;
            c[J2 + 40 + 44 >> 2] = 256;
            c[J2 + 40 + 48 >> 2] = 0;
            c[J2 + 40 + 52 >> 2] = 0;
            c[J2 + 40 + 56 >> 2] = 0;
            c[J2 + 40 + 60 >> 2] = 256;
            c[J2 + 40 + 64 >> 2] = 0;
            c[J2 + 40 + 68 >> 2] = 0;
            c[J2 + 40 + 72 >> 2] = 0;
            c[J2 + 40 + 76 >> 2] = 256;
            a[J2 + 40 + 96 >> 0] = 1;
            F2 = J2 + 40 + 92 | 0;
            c[F2 >> 2] = 0;
            c[J2 + 40 + 84 >> 2] = 0;
            c[J2 + 40 + 88 >> 2] = 0;
            m2 = 0;
            n2 = -246811958;
            v2 = -246811958;
            s2 = -246811958;
            r2 = 1900671690;
            z2 = 1900671690;
            u2 = 1900671690;
            o2 = d2;
            while (1) {
              E2 = +g[o2 >> 2];
              j2 = +g[o2 + 4 >> 2];
              p2 = +g[o2 + 8 >> 2];
              G2 = E2 < (c[k >> 2] = r2, +g[k >> 2]);
              f2 = (g[k >> 2] = E2, c[k >> 2] | 0);
              r2 = G2 ? f2 : r2;
              G2 = j2 < (c[k >> 2] = u2, +g[k >> 2]);
              h2 = (g[k >> 2] = j2, c[k >> 2] | 0);
              u2 = G2 ? h2 : u2;
              G2 = p2 < (c[k >> 2] = z2, +g[k >> 2]);
              l2 = (g[k >> 2] = p2, c[k >> 2] | 0);
              z2 = G2 ? l2 : z2;
              n2 = (c[k >> 2] = n2, +g[k >> 2]) < E2 ? f2 : n2;
              s2 = (c[k >> 2] = s2, +g[k >> 2]) < j2 ? h2 : s2;
              v2 = (c[k >> 2] = v2, +g[k >> 2]) < p2 ? l2 : v2;
              m2 = m2 + 1 | 0;
              if ((m2 | 0) == (e2 | 0))
                break;
              else
                o2 = o2 + 16 | 0;
            }
            B2 = (c[k >> 2] = n2, +g[k >> 2]);
            A2 = (c[k >> 2] = r2, +g[k >> 2]);
            y2 = (c[k >> 2] = s2, +g[k >> 2]);
            x2 = (c[k >> 2] = u2, +g[k >> 2]);
            w2 = (c[k >> 2] = v2, +g[k >> 2]);
            t2 = (c[k >> 2] = z2, +g[k >> 2]);
            h2 = B2 - A2 < y2 - x2 ? y2 - x2 < w2 - t2 ? 2 : 1 : B2 - A2 < w2 - t2 ? 2 : 0;
            c[J2 + 40 + 112 >> 2] = h2;
            f2 = B2 - A2 < y2 - x2 ? B2 - A2 < w2 - t2 ? 0 : 2 : y2 - x2 < w2 - t2 ? 1 : 2;
            if ((f2 | 0) == (h2 | 0))
              f2 = ((h2 + 1 | 0) >>> 0) % 3 | 0;
            c[J2 + 40 + 104 >> 2] = f2;
            G2 = (h2 ^ 3) - f2 | 0;
            c[J2 + 40 + 108 >> 2] = G2;
            if (((G2 + 1 | 0) % 3 | 0 | 0) == (h2 | 0)) {
              j2 = (B2 - A2) * 9788566967472434e-20;
              p2 = (y2 - x2) * 9788566967472434e-20;
              q2 = (w2 - t2) * 9788566967472434e-20;
            } else {
              j2 = -((B2 - A2) * 9788566967472434e-20);
              p2 = -((y2 - x2) * 9788566967472434e-20);
              q2 = -((w2 - t2) * 9788566967472434e-20);
            }
            g[J2 + 40 >> 2] = j2;
            g[J2 + 40 + 4 >> 2] = p2;
            g[J2 + 40 + 8 >> 2] = q2;
            g[J2 + 40 + 12 >> 2] = 0;
            E2 = j2 != 0 ? 1 / j2 : j2;
            D2 = p2 != 0 ? 1 / p2 : p2;
            C2 = q2 != 0 ? 1 / q2 : q2;
            g[J2 + 40 + 16 >> 2] = (B2 + A2) * 0.5;
            g[J2 + 40 + 20 >> 2] = (y2 + x2) * 0.5;
            g[J2 + 40 + 24 >> 2] = (w2 + t2) * 0.5;
            g[J2 + 40 + 28 >> 2] = 0;
            r2 = J2 + 216 + 16 | 0;
            a[r2 >> 0] = 1;
            s2 = J2 + 216 + 12 | 0;
            c[s2 >> 2] = 0;
            c[J2 + 216 + 4 >> 2] = 0;
            c[J2 + 216 + 8 >> 2] = 0;
            c[5637] = (c[5637] | 0) + 1;
            f2 = qG((e2 << 4 | 3) + 16 | 0) | 0;
            if (!f2)
              m2 = 0;
            else {
              c[(f2 + 4 + 15 & -16) + -4 >> 2] = f2;
              m2 = f2 + 4 + 15 & -16;
            }
            h2 = c[J2 + 216 + 4 >> 2] | 0;
            l2 = c[s2 >> 2] | 0;
            if ((h2 | 0) <= 0) {
              if (l2 | 0)
                I2 = 26;
            } else {
              f2 = 0;
              do {
                I2 = m2 + (f2 << 4) | 0;
                G2 = l2 + (f2 << 4) | 0;
                c[I2 >> 2] = c[G2 >> 2];
                c[I2 + 4 >> 2] = c[G2 + 4 >> 2];
                c[I2 + 8 >> 2] = c[G2 + 8 >> 2];
                c[I2 + 12 >> 2] = c[G2 + 12 >> 2];
                f2 = f2 + 1 | 0;
              } while ((f2 | 0) != (h2 | 0));
              I2 = 26;
            }
            if ((I2 | 0) == 26) {
              if (a[r2 >> 0] | 0) {
                c[5638] = (c[5638] | 0) + 1;
                rG(c[l2 + -4 >> 2] | 0);
              }
              c[s2 >> 2] = 0;
            }
            a[r2 >> 0] = 1;
            c[s2 >> 2] = m2;
            c[J2 + 216 + 8 >> 2] = e2;
            c[m2 >> 2] = c[J2 + 200 >> 2];
            c[m2 + 4 >> 2] = c[J2 + 200 + 4 >> 2];
            c[m2 + 8 >> 2] = c[J2 + 200 + 8 >> 2];
            c[m2 + 12 >> 2] = c[J2 + 200 + 12 >> 2];
            if ((e2 | 0) != 1) {
              f2 = 1;
              do {
                G2 = (c[s2 >> 2] | 0) + (f2 << 4) | 0;
                c[G2 >> 2] = c[J2 + 200 >> 2];
                c[G2 + 4 >> 2] = c[J2 + 200 + 4 >> 2];
                c[G2 + 8 >> 2] = c[J2 + 200 + 8 >> 2];
                c[G2 + 12 >> 2] = c[J2 + 200 + 12 >> 2];
                f2 = f2 + 1 | 0;
              } while ((f2 | 0) != (e2 | 0));
            }
            c[J2 + 216 + 4 >> 2] = e2;
            h2 = J2 + 184 + (c[J2 + 40 + 108 >> 2] << 2) | 0;
            l2 = c[s2 >> 2] | 0;
            m2 = J2 + 184 + (c[J2 + 40 + 112 >> 2] << 2) | 0;
            n2 = J2 + 184 + (c[J2 + 40 + 104 >> 2] << 2) | 0;
            j2 = +g[J2 + 40 + 16 >> 2];
            p2 = +g[J2 + 40 + 20 >> 2];
            q2 = +g[J2 + 40 + 24 >> 2];
            o2 = 0;
            f2 = d2;
            while (1) {
              d2 = c[f2 >> 2] | 0;
              c[J2 + 184 >> 2] = d2;
              G2 = c[f2 + 4 >> 2] | 0;
              c[J2 + 184 + 4 >> 2] = G2;
              y2 = (c[k >> 2] = d2, +g[k >> 2]) - j2;
              A2 = D2 * ((c[k >> 2] = G2, +g[k >> 2]) - p2);
              B2 = C2 * (+g[f2 + 8 >> 2] - q2);
              g[J2 + 184 >> 2] = E2 * y2;
              g[J2 + 184 + 4 >> 2] = A2;
              g[J2 + 184 + 8 >> 2] = B2;
              g[J2 + 184 + 12 >> 2] = 0;
              c[l2 + (o2 << 4) >> 2] = ~~+g[h2 >> 2];
              c[l2 + (o2 << 4) + 4 >> 2] = ~~+g[m2 >> 2];
              c[l2 + (o2 << 4) + 8 >> 2] = ~~+g[n2 >> 2];
              c[l2 + (o2 << 4) + 12 >> 2] = o2;
              o2 = o2 + 1 | 0;
              if ((o2 | 0) == (e2 | 0))
                break;
              else
                f2 = f2 + 16 | 0;
            }
            if ((e2 | 0) > 1)
              $r(J2 + 216 | 0, 0, e2 + -1 | 0);
            c[J2 + 40 + 36 >> 2] = c[J2 + 40 + 32 >> 2];
            c[J2 + 40 + 40 >> 2] = 0;
            c[J2 + 40 + 44 >> 2] = e2;
            f2 = c[J2 + 40 + 84 >> 2] | 0;
            if ((f2 | 0) < (e2 | 0)) {
              if ((c[J2 + 40 + 88 >> 2] | 0) < (e2 | 0)) {
                if (!e2) {
                  h2 = 0;
                  l2 = f2;
                } else {
                  c[5637] = (c[5637] | 0) + 1;
                  h2 = qG((e2 << 2 | 3) + 16 | 0) | 0;
                  if (!h2)
                    h2 = 0;
                  else {
                    c[(h2 + 4 + 15 & -16) + -4 >> 2] = h2;
                    h2 = h2 + 4 + 15 & -16;
                  }
                  l2 = c[J2 + 40 + 84 >> 2] | 0;
                }
                if ((l2 | 0) > 0) {
                  m2 = 0;
                  do {
                    c[h2 + (m2 << 2) >> 2] = c[(c[F2 >> 2] | 0) + (m2 << 2) >> 2];
                    m2 = m2 + 1 | 0;
                  } while ((m2 | 0) != (l2 | 0));
                }
                l2 = c[F2 >> 2] | 0;
                if (l2 | 0) {
                  if (a[J2 + 40 + 96 >> 0] | 0) {
                    c[5638] = (c[5638] | 0) + 1;
                    rG(c[l2 + -4 >> 2] | 0);
                  }
                  c[F2 >> 2] = 0;
                }
                a[J2 + 40 + 96 >> 0] = 1;
                c[F2 >> 2] = h2;
                c[J2 + 40 + 88 >> 2] = e2;
              }
              do {
                c[(c[F2 >> 2] | 0) + (f2 << 2) >> 2] = 0;
                f2 = f2 + 1 | 0;
              } while ((f2 | 0) != (e2 | 0));
            }
            c[J2 + 40 + 84 >> 2] = e2;
            n2 = 0;
            do {
              f2 = c[J2 + 40 + 40 >> 2] | 0;
              if (!f2) {
                f2 = c[J2 + 40 + 36 >> 2] | 0;
                if (!f2) {
                  c[5637] = (c[5637] | 0) + 1;
                  f2 = qG(31) | 0;
                  if (!f2)
                    f2 = 0;
                  else {
                    c[(f2 + 4 + 15 & -16) + -4 >> 2] = f2;
                    f2 = f2 + 4 + 15 & -16;
                  }
                  h2 = c[J2 + 40 + 44 >> 2] | 0;
                  c[f2 + 4 >> 2] = h2;
                  l2 = f2 + 8 | 0;
                  c[l2 >> 2] = 0;
                  c[5637] = (c[5637] | 0) + 1;
                  h2 = qG((h2 * 112 | 3) + 16 | 0) | 0;
                  if (!h2)
                    h2 = 0;
                  else {
                    c[(h2 + 4 + 15 & -16) + -4 >> 2] = h2;
                    h2 = h2 + 4 + 15 & -16;
                  }
                  c[f2 >> 2] = h2;
                  c[l2 >> 2] = c[J2 + 40 + 32 >> 2];
                  c[J2 + 40 + 32 >> 2] = f2;
                } else
                  c[J2 + 40 + 36 >> 2] = c[f2 + 8 >> 2];
                m2 = c[f2 + 4 >> 2] | 0;
                f2 = c[f2 >> 2] | 0;
                if ((m2 | 0) > 0) {
                  h2 = 0;
                  l2 = f2;
                  do {
                    h2 = h2 + 1 | 0;
                    G2 = l2;
                    l2 = l2 + 112 | 0;
                    c[G2 >> 2] = (h2 | 0) < (m2 | 0) ? l2 : 0;
                  } while ((h2 | 0) != (m2 | 0));
                }
              }
              c[J2 + 40 + 40 >> 2] = c[f2 >> 2];
              G2 = f2 + 104 | 0;
              c[f2 >> 2] = 0;
              c[f2 + 4 >> 2] = 0;
              c[f2 + 8 >> 2] = 0;
              c[f2 + 12 >> 2] = 0;
              c[f2 + 16 >> 2] = 0;
              c[G2 >> 2] = -1;
              c[f2 + 8 >> 2] = 0;
              d2 = f2 + 88 | 0;
              z2 = (c[s2 >> 2] | 0) + (n2 << 4) | 0;
              c[d2 >> 2] = c[z2 >> 2];
              c[d2 + 4 >> 2] = c[z2 + 4 >> 2];
              c[d2 + 8 >> 2] = c[z2 + 8 >> 2];
              c[d2 + 12 >> 2] = c[z2 + 12 >> 2];
              c[G2 >> 2] = -1;
              c[(c[F2 >> 2] | 0) + (n2 << 2) >> 2] = f2;
              n2 = n2 + 1 | 0;
            } while ((n2 | 0) < (e2 | 0));
            f2 = c[s2 >> 2] | 0;
            if (f2 | 0) {
              if (a[r2 >> 0] | 0) {
                c[5638] = (c[5638] | 0) + 1;
                rG(c[f2 + -4 >> 2] | 0);
              }
              c[s2 >> 2] = 0;
            }
            a[r2 >> 0] = 1;
            c[s2 >> 2] = 0;
            c[J2 + 216 + 4 >> 2] = 0;
            c[J2 + 216 + 8 >> 2] = 0;
            c[J2 + 40 + 52 >> 2] = c[J2 + 40 + 48 >> 2];
            c[J2 + 40 + 56 >> 2] = 0;
            c[J2 + 40 + 60 >> 2] = e2 * 6;
            c[J2 + 40 + 116 >> 2] = 0;
            c[J2 + 40 + 120 >> 2] = 0;
            c[J2 + 40 + 100 >> 2] = -3;
            c[J2 + 184 >> 2] = 0;
            c[J2 + 184 + 4 >> 2] = 0;
            c[J2 + 184 + 8 >> 2] = 0;
            c[J2 + 184 + 12 >> 2] = 0;
            Yr(J2 + 40 | 0, 0, e2, J2 + 184 | 0);
            c[J2 + 40 + 124 >> 2] = c[J2 + 184 >> 2];
            f2 = c[s2 >> 2] | 0;
            if (f2 | 0) {
              if (a[r2 >> 0] | 0) {
                c[5638] = (c[5638] | 0) + 1;
                rG(c[f2 + -4 >> 2] | 0);
              }
              c[s2 >> 2] = 0;
            }
            f2 = c[b2 + 4 >> 2] | 0;
            if ((f2 | 0) < 0) {
              if ((c[b2 + 8 >> 2] | 0) < 0) {
                h2 = c[b2 + 12 >> 2] | 0;
                if (h2 | 0) {
                  if (a[b2 + 16 >> 0] | 0) {
                    c[5638] = (c[5638] | 0) + 1;
                    rG(c[h2 + -4 >> 2] | 0);
                  }
                  c[b2 + 12 >> 2] = 0;
                }
                a[b2 + 16 >> 0] = 1;
                c[b2 + 12 >> 2] = 0;
                c[b2 + 8 >> 2] = 0;
              }
              do {
                G2 = (c[b2 + 12 >> 2] | 0) + (f2 << 4) | 0;
                c[G2 >> 2] = c[J2 + 168 >> 2];
                c[G2 + 4 >> 2] = c[J2 + 168 + 4 >> 2];
                c[G2 + 8 >> 2] = c[J2 + 168 + 8 >> 2];
                c[G2 + 12 >> 2] = c[J2 + 168 + 12 >> 2];
                f2 = f2 + 1 | 0;
              } while ((f2 | 0) != 0);
            }
            c[b2 + 4 >> 2] = 0;
            c[J2 + 24 >> 2] = 0;
            c[J2 + 24 + 4 >> 2] = 0;
            c[J2 + 24 + 8 >> 2] = 0;
            f2 = c[b2 + 24 >> 2] | 0;
            if ((f2 | 0) < 0) {
              if ((c[b2 + 28 >> 2] | 0) < 0) {
                h2 = c[b2 + 32 >> 2] | 0;
                if (h2 | 0) {
                  if (a[b2 + 36 >> 0] | 0) {
                    c[5638] = (c[5638] | 0) + 1;
                    rG(c[h2 + -4 >> 2] | 0);
                  }
                  c[b2 + 32 >> 2] = 0;
                }
                a[b2 + 36 >> 0] = 1;
                c[b2 + 32 >> 2] = 0;
                c[b2 + 28 >> 2] = 0;
              }
              do {
                G2 = (c[b2 + 32 >> 2] | 0) + (f2 * 12 | 0) | 0;
                c[G2 >> 2] = c[J2 + 24 >> 2];
                c[G2 + 4 >> 2] = c[J2 + 24 + 4 >> 2];
                c[G2 + 8 >> 2] = c[J2 + 24 + 8 >> 2];
                f2 = f2 + 1 | 0;
              } while ((f2 | 0) != 0);
            }
            c[b2 + 24 >> 2] = 0;
            h2 = c[b2 + 44 >> 2] | 0;
            if ((h2 | 0) < 0) {
              f2 = c[b2 + 52 >> 2] | 0;
              do
                if ((c[b2 + 48 >> 2] | 0) < 0) {
                  if (!f2) {
                    a[b2 + 56 >> 0] = 1;
                    c[b2 + 52 >> 2] = 0;
                    c[b2 + 48 >> 2] = 0;
                    f2 = 0;
                    break;
                  }
                  if (a[b2 + 56 >> 0] | 0) {
                    c[5638] = (c[5638] | 0) + 1;
                    rG(c[f2 + -4 >> 2] | 0);
                  }
                  a[b2 + 56 >> 0] = 1;
                  c[b2 + 52 >> 2] = 0;
                  c[b2 + 48 >> 2] = 0;
                  f2 = 0;
                }
              while (0);
              ZG(f2 + (h2 << 2) | 0, 0, _(h2, -4) | 0) | 0;
            }
            c[b2 + 44 >> 2] = 0;
            f2 = c[J2 + 40 + 124 >> 2] | 0;
            if ((c[f2 + 104 >> 2] | 0) < 0) {
              c[f2 + 104 >> 2] = 0;
              c[5637] = (c[5637] | 0) + 1;
              r2 = qG(23) | 0;
              c[(r2 + 4 + 15 & -16) + -4 >> 2] = r2;
              c[(r2 + 4 + 15 & -16) >> 2] = f2;
              G2 = 0;
              m2 = 1;
              l2 = 1;
              r2 = r2 + 4 + 15 & -16;
              while (1) {
                if ((c[f2 + 100 >> 2] | 0) > -1) {
                  g[J2 + 216 + (c[J2 + 40 + 108 >> 2] << 2) >> 2] = +(c[f2 + 88 >> 2] | 0);
                  g[J2 + 216 + (c[J2 + 40 + 112 >> 2] << 2) >> 2] = +(c[f2 + 92 >> 2] | 0);
                  j2 = +(c[f2 + 96 >> 2] | 0);
                } else {
                  e2 = f2 + 24 | 0;
                  d2 = f2 + 32 | 0;
                  j2 = +as(c[e2 >> 2] | 0, c[e2 + 4 >> 2] | 0, c[d2 >> 2] | 0, c[d2 + 4 >> 2] | 0);
                  d2 = f2 + 72 | 0;
                  e2 = f2 + 80 | 0;
                  F2 = c[e2 >> 2] | 0;
                  e2 = c[e2 + 4 >> 2] | 0;
                  j2 = j2 / +as(c[d2 >> 2] | 0, c[d2 + 4 >> 2] | 0, F2, e2);
                  g[J2 + 216 + (c[J2 + 40 + 108 >> 2] << 2) >> 2] = j2;
                  z2 = f2 + 40 | 0;
                  v2 = f2 + 48 | 0;
                  j2 = +as(c[z2 >> 2] | 0, c[z2 + 4 >> 2] | 0, c[v2 >> 2] | 0, c[v2 + 4 >> 2] | 0);
                  j2 = j2 / +as(c[d2 >> 2] | 0, c[d2 + 4 >> 2] | 0, F2, e2);
                  g[J2 + 216 + (c[J2 + 40 + 112 >> 2] << 2) >> 2] = j2;
                  v2 = f2 + 56 | 0;
                  z2 = f2 + 64 | 0;
                  j2 = +as(c[v2 >> 2] | 0, c[v2 + 4 >> 2] | 0, c[z2 >> 2] | 0, c[z2 + 4 >> 2] | 0);
                  j2 = j2 / +as(c[d2 >> 2] | 0, c[d2 + 4 >> 2] | 0, F2, e2);
                }
                g[J2 + 216 + (c[J2 + 40 + 104 >> 2] << 2) >> 2] = j2;
                j2 = +g[J2 + 216 >> 2] * +g[J2 + 40 >> 2] + +g[J2 + 40 + 16 >> 2];
                p2 = +g[J2 + 216 + 4 >> 2] * +g[J2 + 40 + 4 >> 2] + +g[J2 + 40 + 20 >> 2];
                q2 = +g[J2 + 216 + 8 >> 2] * +g[J2 + 40 + 8 >> 2] + +g[J2 + 40 + 24 >> 2];
                h2 = c[b2 + 4 >> 2] | 0;
                if ((h2 | 0) == (c[b2 + 8 >> 2] | 0) ? (H2 = h2 | 0 ? h2 << 1 : 1, (h2 | 0) < (H2 | 0)) : 0) {
                  if (!H2)
                    o2 = 0;
                  else {
                    c[5637] = (c[5637] | 0) + 1;
                    h2 = qG((H2 << 4 | 3) + 16 | 0) | 0;
                    if (!h2)
                      h2 = 0;
                    else {
                      c[(h2 + 4 + 15 & -16) + -4 >> 2] = h2;
                      h2 = h2 + 4 + 15 & -16;
                    }
                    o2 = h2;
                    h2 = c[b2 + 4 >> 2] | 0;
                  }
                  if ((h2 | 0) > 0) {
                    n2 = 0;
                    do {
                      e2 = o2 + (n2 << 4) | 0;
                      F2 = (c[b2 + 12 >> 2] | 0) + (n2 << 4) | 0;
                      c[e2 >> 2] = c[F2 >> 2];
                      c[e2 + 4 >> 2] = c[F2 + 4 >> 2];
                      c[e2 + 8 >> 2] = c[F2 + 8 >> 2];
                      c[e2 + 12 >> 2] = c[F2 + 12 >> 2];
                      n2 = n2 + 1 | 0;
                    } while ((n2 | 0) != (h2 | 0));
                  }
                  h2 = c[b2 + 12 >> 2] | 0;
                  if (h2 | 0) {
                    if (a[b2 + 16 >> 0] | 0) {
                      c[5638] = (c[5638] | 0) + 1;
                      rG(c[h2 + -4 >> 2] | 0);
                    }
                    c[b2 + 12 >> 2] = 0;
                  }
                  a[b2 + 16 >> 0] = 1;
                  c[b2 + 12 >> 2] = o2;
                  c[b2 + 8 >> 2] = H2;
                  h2 = c[b2 + 4 >> 2] | 0;
                }
                F2 = c[b2 + 12 >> 2] | 0;
                g[F2 + (h2 << 4) >> 2] = j2;
                g[F2 + (h2 << 4) + 4 >> 2] = p2;
                g[F2 + (h2 << 4) + 8 >> 2] = q2;
                g[F2 + (h2 << 4) + 12 >> 2] = 0;
                c[b2 + 4 >> 2] = (c[b2 + 4 >> 2] | 0) + 1;
                F2 = c[f2 + 8 >> 2] | 0;
                if (!F2)
                  n2 = r2;
                else {
                  e2 = F2;
                  f2 = -1;
                  z2 = r2;
                  d2 = -1;
                  while (1) {
                    v2 = e2 + 20 | 0;
                    h2 = c[v2 >> 2] | 0;
                    if ((h2 | 0) < 0) {
                      u2 = c[b2 + 24 >> 2] | 0;
                      c[J2 + 12 >> 2] = 0;
                      c[J2 + 12 + 4 >> 2] = 0;
                      c[J2 + 12 + 8 >> 2] = 0;
                      do
                        if ((u2 | 0) == (c[b2 + 28 >> 2] | 0)) {
                          r2 = u2 | 0 ? u2 << 1 : 1;
                          if ((u2 | 0) >= (r2 | 0)) {
                            h2 = u2;
                            break;
                          }
                          if (!r2) {
                            h2 = 0;
                            n2 = u2;
                          } else {
                            c[5637] = (c[5637] | 0) + 1;
                            h2 = qG((r2 * 12 | 3) + 16 | 0) | 0;
                            if (!h2)
                              h2 = 0;
                            else {
                              c[(h2 + 4 + 15 & -16) + -4 >> 2] = h2;
                              h2 = h2 + 4 + 15 & -16;
                            }
                            n2 = c[b2 + 24 >> 2] | 0;
                          }
                          if ((n2 | 0) > 0) {
                            o2 = 0;
                            do {
                              s2 = h2 + (o2 * 12 | 0) | 0;
                              K2 = (c[b2 + 32 >> 2] | 0) + (o2 * 12 | 0) | 0;
                              c[s2 >> 2] = c[K2 >> 2];
                              c[s2 + 4 >> 2] = c[K2 + 4 >> 2];
                              c[s2 + 8 >> 2] = c[K2 + 8 >> 2];
                              o2 = o2 + 1 | 0;
                            } while ((o2 | 0) != (n2 | 0));
                          }
                          n2 = c[b2 + 32 >> 2] | 0;
                          if (n2 | 0) {
                            if (a[b2 + 36 >> 0] | 0) {
                              c[5638] = (c[5638] | 0) + 1;
                              rG(c[n2 + -4 >> 2] | 0);
                            }
                            c[b2 + 32 >> 2] = 0;
                          }
                          a[b2 + 36 >> 0] = 1;
                          c[b2 + 32 >> 2] = h2;
                          c[b2 + 28 >> 2] = r2;
                          h2 = c[b2 + 24 >> 2] | 0;
                        } else
                          h2 = u2;
                      while (0);
                      h2 = (c[b2 + 32 >> 2] | 0) + (h2 * 12 | 0) | 0;
                      c[h2 >> 2] = c[J2 + 12 >> 2];
                      c[h2 + 4 >> 2] = c[J2 + 12 + 4 >> 2];
                      c[h2 + 8 >> 2] = c[J2 + 12 + 8 >> 2];
                      h2 = (c[b2 + 24 >> 2] | 0) + 1 | 0;
                      c[b2 + 24 >> 2] = h2;
                      c[J2 >> 2] = 0;
                      c[J2 + 4 >> 2] = 0;
                      c[J2 + 8 >> 2] = 0;
                      do
                        if ((h2 | 0) == (c[b2 + 28 >> 2] | 0)) {
                          r2 = h2 | 0 ? h2 << 1 : 1;
                          if ((h2 | 0) >= (r2 | 0))
                            break;
                          if (!r2)
                            o2 = 0;
                          else {
                            c[5637] = (c[5637] | 0) + 1;
                            h2 = qG((r2 * 12 | 3) + 16 | 0) | 0;
                            if (!h2)
                              h2 = 0;
                            else {
                              c[(h2 + 4 + 15 & -16) + -4 >> 2] = h2;
                              h2 = h2 + 4 + 15 & -16;
                            }
                            o2 = h2;
                            h2 = c[b2 + 24 >> 2] | 0;
                          }
                          if ((h2 | 0) > 0) {
                            n2 = 0;
                            do {
                              K2 = o2 + (n2 * 12 | 0) | 0;
                              s2 = (c[b2 + 32 >> 2] | 0) + (n2 * 12 | 0) | 0;
                              c[K2 >> 2] = c[s2 >> 2];
                              c[K2 + 4 >> 2] = c[s2 + 4 >> 2];
                              c[K2 + 8 >> 2] = c[s2 + 8 >> 2];
                              n2 = n2 + 1 | 0;
                            } while ((n2 | 0) != (h2 | 0));
                          }
                          h2 = c[b2 + 32 >> 2] | 0;
                          if (h2 | 0) {
                            if (a[b2 + 36 >> 0] | 0) {
                              c[5638] = (c[5638] | 0) + 1;
                              rG(c[h2 + -4 >> 2] | 0);
                            }
                            c[b2 + 32 >> 2] = 0;
                          }
                          a[b2 + 36 >> 0] = 1;
                          c[b2 + 32 >> 2] = o2;
                          c[b2 + 28 >> 2] = r2;
                          h2 = c[b2 + 24 >> 2] | 0;
                        }
                      while (0);
                      s2 = (c[b2 + 32 >> 2] | 0) + (h2 * 12 | 0) | 0;
                      c[s2 >> 2] = c[J2 >> 2];
                      c[s2 + 4 >> 2] = c[J2 + 4 >> 2];
                      c[s2 + 8 >> 2] = c[J2 + 8 >> 2];
                      c[b2 + 24 >> 2] = (c[b2 + 24 >> 2] | 0) + 1;
                      s2 = c[b2 + 32 >> 2] | 0;
                      c[v2 >> 2] = u2;
                      c[(c[e2 + 8 >> 2] | 0) + 20 >> 2] = u2 + 1;
                      c[s2 + (u2 * 12 | 0) + 4 >> 2] = 1;
                      c[s2 + ((u2 + 1 | 0) * 12 | 0) + 4 >> 2] = -1;
                      r2 = c[e2 + 12 >> 2] | 0;
                      h2 = c[r2 + 104 >> 2] | 0;
                      if ((h2 | 0) < 0) {
                        c[r2 + 104 >> 2] = l2;
                        do
                          if ((l2 | 0) == (m2 | 0)) {
                            o2 = m2 | 0 ? m2 << 1 : 1;
                            if ((m2 | 0) >= (o2 | 0)) {
                              n2 = z2;
                              break;
                            }
                            do
                              if (!o2)
                                n2 = 0;
                              else {
                                c[5637] = (c[5637] | 0) + 1;
                                h2 = qG((o2 << 2 | 3) + 16 | 0) | 0;
                                if (!h2) {
                                  n2 = 0;
                                  break;
                                }
                                c[(h2 + 4 + 15 & -16) + -4 >> 2] = h2;
                                n2 = h2 + 4 + 15 & -16;
                              }
                            while (0);
                            if ((m2 | 0) <= 0) {
                              if (!z2) {
                                m2 = o2;
                                break;
                              }
                            } else {
                              h2 = 0;
                              do {
                                c[n2 + (h2 << 2) >> 2] = c[z2 + (h2 << 2) >> 2];
                                h2 = h2 + 1 | 0;
                              } while ((h2 | 0) != (m2 | 0));
                            }
                            c[5638] = (c[5638] | 0) + 1;
                            rG(c[z2 + -4 >> 2] | 0);
                            m2 = o2;
                          } else
                            n2 = z2;
                        while (0);
                        c[n2 + (l2 << 2) >> 2] = r2;
                        h2 = l2;
                        l2 = l2 + 1 | 0;
                      } else
                        n2 = z2;
                      c[s2 + (u2 * 12 | 0) + 8 >> 2] = h2;
                      c[s2 + ((u2 + 1 | 0) * 12 | 0) + 8 >> 2] = G2;
                      h2 = c[v2 >> 2] | 0;
                    } else
                      n2 = z2;
                    if ((d2 | 0) > -1)
                      c[(c[b2 + 32 >> 2] | 0) + (h2 * 12 | 0) >> 2] = d2 - h2;
                    else
                      f2 = h2;
                    e2 = c[e2 >> 2] | 0;
                    if ((e2 | 0) == (F2 | 0))
                      break;
                    else {
                      z2 = n2;
                      d2 = h2;
                    }
                  }
                  c[(c[b2 + 32 >> 2] | 0) + (f2 * 12 | 0) >> 2] = h2 - f2;
                }
                h2 = G2 + 1 | 0;
                if ((h2 | 0) >= (l2 | 0))
                  break;
                f2 = c[n2 + (h2 << 2) >> 2] | 0;
                G2 = h2;
                r2 = n2;
              }
              if ((G2 | 0) > -1) {
                v2 = 0;
                while (1) {
                  s2 = c[(c[n2 + (v2 << 2) >> 2] | 0) + 8 >> 2] | 0;
                  if (s2 | 0) {
                    u2 = s2;
                    do {
                      r2 = u2 + 20 | 0;
                      f2 = c[r2 >> 2] | 0;
                      if ((f2 | 0) > -1) {
                        h2 = c[b2 + 44 >> 2] | 0;
                        do
                          if ((h2 | 0) == (c[b2 + 48 >> 2] | 0)) {
                            o2 = h2 | 0 ? h2 << 1 : 1;
                            if ((h2 | 0) >= (o2 | 0))
                              break;
                            if (!o2)
                              f2 = 0;
                            else {
                              c[5637] = (c[5637] | 0) + 1;
                              f2 = qG((o2 << 2 | 3) + 16 | 0) | 0;
                              if (!f2)
                                f2 = 0;
                              else {
                                c[(f2 + 4 + 15 & -16) + -4 >> 2] = f2;
                                f2 = f2 + 4 + 15 & -16;
                              }
                              h2 = c[b2 + 44 >> 2] | 0;
                            }
                            m2 = c[b2 + 52 >> 2] | 0;
                            if ((h2 | 0) <= 0) {
                              if (m2)
                                I2 = 173;
                            } else {
                              l2 = 0;
                              do {
                                c[f2 + (l2 << 2) >> 2] = c[m2 + (l2 << 2) >> 2];
                                l2 = l2 + 1 | 0;
                              } while ((l2 | 0) != (h2 | 0));
                              I2 = 173;
                            }
                            if ((I2 | 0) == 173) {
                              I2 = 0;
                              if (a[b2 + 56 >> 0] | 0) {
                                c[5638] = (c[5638] | 0) + 1;
                                rG(c[m2 + -4 >> 2] | 0);
                              }
                              c[b2 + 52 >> 2] = 0;
                              h2 = c[b2 + 44 >> 2] | 0;
                            }
                            a[b2 + 56 >> 0] = 1;
                            c[b2 + 52 >> 2] = f2;
                            c[b2 + 48 >> 2] = o2;
                            f2 = c[r2 >> 2] | 0;
                          }
                        while (0);
                        c[(c[b2 + 52 >> 2] | 0) + (h2 << 2) >> 2] = f2;
                        c[b2 + 44 >> 2] = (c[b2 + 44 >> 2] | 0) + 1;
                        f2 = u2;
                        do {
                          c[f2 + 20 >> 2] = -1;
                          f2 = c[(c[f2 + 8 >> 2] | 0) + 4 >> 2] | 0;
                        } while ((f2 | 0) != (u2 | 0));
                      }
                      u2 = c[u2 >> 2] | 0;
                    } while ((u2 | 0) != (s2 | 0));
                  }
                  if ((v2 | 0) == (G2 | 0))
                    break;
                  else
                    v2 = v2 + 1 | 0;
                }
              }
              if (n2 | 0) {
                c[5638] = (c[5638] | 0) + 1;
                rG(c[n2 + -4 >> 2] | 0);
              }
            }
            cs(J2 + 40 | 0);
            i = J2;
            return;
          }
          function cs(b2) {
            b2 = b2 | 0;
            var d2 = 0, e2 = 0;
            d2 = c[b2 + 92 >> 2] | 0;
            if (d2 | 0) {
              if (a[b2 + 96 >> 0] | 0) {
                c[5638] = (c[5638] | 0) + 1;
                rG(c[d2 + -4 >> 2] | 0);
              }
              c[b2 + 92 >> 2] = 0;
            }
            a[b2 + 96 >> 0] = 1;
            c[b2 + 92 >> 2] = 0;
            c[b2 + 84 >> 2] = 0;
            c[b2 + 88 >> 2] = 0;
            d2 = c[b2 + 64 >> 2] | 0;
            if (d2 | 0)
              do {
                c[b2 + 64 >> 2] = c[d2 + 8 >> 2];
                e2 = c[d2 >> 2] | 0;
                if (e2 | 0) {
                  c[5638] = (c[5638] | 0) + 1;
                  rG(c[e2 + -4 >> 2] | 0);
                }
                c[5638] = (c[5638] | 0) + 1;
                rG(c[d2 + -4 >> 2] | 0);
                d2 = c[b2 + 64 >> 2] | 0;
              } while ((d2 | 0) != 0);
            d2 = c[b2 + 48 >> 2] | 0;
            if (d2 | 0)
              do {
                c[b2 + 48 >> 2] = c[d2 + 8 >> 2];
                e2 = c[d2 >> 2] | 0;
                if (e2 | 0) {
                  c[5638] = (c[5638] | 0) + 1;
                  rG(c[e2 + -4 >> 2] | 0);
                }
                c[5638] = (c[5638] | 0) + 1;
                rG(c[d2 + -4 >> 2] | 0);
                d2 = c[b2 + 48 >> 2] | 0;
              } while ((d2 | 0) != 0);
            d2 = c[b2 + 32 >> 2] | 0;
            if (!d2)
              return;
            do {
              c[b2 + 32 >> 2] = c[d2 + 8 >> 2];
              e2 = c[d2 >> 2] | 0;
              if (e2 | 0) {
                c[5638] = (c[5638] | 0) + 1;
                rG(c[e2 + -4 >> 2] | 0);
              }
              c[5638] = (c[5638] | 0) + 1;
              rG(c[d2 + -4 >> 2] | 0);
              d2 = c[b2 + 32 >> 2] | 0;
            } while ((d2 | 0) != 0);
            return;
          }
          function ds() {
            var a2 = 0, b2 = 0;
            while (1) {
              a2 = qG(8) | 0;
              if (a2 | 0) {
                b2 = 6;
                break;
              }
              a2 = c[5831] | 0;
              c[5831] = a2 + 0;
              if (!a2) {
                b2 = 5;
                break;
              }
              _b[a2 & 3]();
            }
            if ((b2 | 0) == 5) {
              b2 = Va(4) | 0;
              c[b2 >> 2] = 8308;
              hb(b2 | 0, 2416, 215);
            } else if ((b2 | 0) == 6) {
              c[5649] = a2;
              kb(a2 | 0, 0) | 0;
              c[5639] = 16373;
              c[5640] = 0;
              c[5641] = 0;
              c[5642] = 0;
              c[5643] = 0;
              c[5644] = 0;
              c[5645] = 0;
              c[5646] = 0;
              c[5647] = 0;
              es(22556);
              return;
            }
          }
          function es(a2) {
            a2 = a2 | 0;
            var b2 = 0;
            do {
              c[a2 + 4 >> 2] = 0;
              g[a2 + 8 >> 2] = 0;
              b2 = c[a2 + 24 >> 2] | 0;
              if (b2 | 0)
                es(b2);
              a2 = c[a2 + 28 >> 2] | 0;
            } while ((a2 | 0) != 0);
            return;
          }
          function fs(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0, e2 = 0, f2 = 0;
            f2 = i;
            i = i + 16 | 0;
            d2 = c[2006] | 0;
            if ((c[d2 >> 2] | 0) == (a2 | 0))
              b2 = d2;
            else {
              b2 = c[d2 + 24 >> 2] | 0;
              a:
                do
                  if (!b2)
                    e2 = 5;
                  else
                    while (1) {
                      if ((c[b2 >> 2] | 0) == (a2 | 0))
                        break a;
                      b2 = c[b2 + 28 >> 2] | 0;
                      if (!b2) {
                        e2 = 5;
                        break;
                      }
                    }
                while (0);
              do
                if ((e2 | 0) == 5) {
                  while (1) {
                    b2 = qG(36) | 0;
                    if (b2 | 0) {
                      e2 = 9;
                      break;
                    }
                    b2 = c[5831] | 0;
                    c[5831] = b2 + 0;
                    if (!b2) {
                      e2 = 8;
                      break;
                    }
                    _b[b2 & 3]();
                    e2 = 5;
                  }
                  if ((e2 | 0) == 8) {
                    f2 = Va(4) | 0;
                    c[f2 >> 2] = 8308;
                    hb(f2 | 0, 2416, 215);
                  } else if ((e2 | 0) == 9) {
                    c[b2 >> 2] = a2;
                    c[b2 + 4 >> 2] = 0;
                    c[b2 + 4 + 4 >> 2] = 0;
                    c[b2 + 4 + 8 >> 2] = 0;
                    c[b2 + 4 + 12 >> 2] = 0;
                    c[b2 + 20 >> 2] = d2;
                    c[b2 + 24 >> 2] = 0;
                    c[b2 + 28 >> 2] = 0;
                    c[b2 + 32 >> 2] = 0;
                    es(b2);
                    c[b2 + 28 >> 2] = c[d2 + 24 >> 2];
                    c[d2 + 24 >> 2] = b2;
                    break;
                  }
                }
              while (0);
              c[2006] = b2;
            }
            a2 = b2 + 4 | 0;
            c[a2 >> 2] = (c[a2 >> 2] | 0) + 1;
            a2 = b2 + 16 | 0;
            e2 = c[a2 >> 2] | 0;
            c[a2 >> 2] = e2 + 1;
            if (e2 | 0) {
              i = f2;
              return;
            }
            kb(f2 | 0, 0) | 0;
            e2 = c[5649] | 0;
            c[b2 + 12 >> 2] = (c[f2 + 4 >> 2] | 0) - (c[e2 + 4 >> 2] | 0) + (((c[f2 >> 2] | 0) - (c[e2 >> 2] | 0) | 0) * 1e6 | 0);
            i = f2;
            return;
          }
          function gs(a2, d2) {
            a2 = a2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0;
            while (1) {
              e2 = qG(80) | 0;
              if (e2 | 0) {
                f2 = 6;
                break;
              }
              e2 = c[5831] | 0;
              c[5831] = e2 + 0;
              if (!e2) {
                f2 = 5;
                break;
              }
              _b[e2 & 3]();
            }
            if ((f2 | 0) == 5) {
              d2 = Va(4) | 0;
              c[d2 >> 2] = 8308;
              hb(d2 | 0, 2416, 215);
            } else if ((f2 | 0) == 6) {
              g[e2 + 4 >> 2] = 1;
              b[e2 + 8 >> 1] = 1;
              b[e2 + 10 >> 1] = -1;
              c[e2 >> 2] = 7848;
              c[e2 + 12 >> 2] = c[a2 >> 2];
              c[e2 + 12 + 4 >> 2] = c[a2 + 4 >> 2];
              c[e2 + 12 + 8 >> 2] = c[a2 + 8 >> 2];
              c[e2 + 12 + 12 >> 2] = c[a2 + 12 >> 2];
              c[e2 + 28 >> 2] = c[d2 >> 2];
              c[e2 + 28 + 4 >> 2] = c[d2 + 4 >> 2];
              c[e2 + 28 + 8 >> 2] = c[d2 + 8 >> 2];
              c[e2 + 28 + 12 >> 2] = c[d2 + 12 >> 2];
              c[e2 + 76 >> 2] = 0;
              return e2 | 0;
            }
            return 0;
          }
          function hs(a2) {
            a2 = a2 | 0;
            if (!a2)
              return;
            rb[c[(c[a2 >> 2] | 0) + 4 >> 2] & 255](a2);
            return;
          }
          function is(a2) {
            a2 = a2 | 0;
            return + +g[a2 + 4 >> 2];
          }
          function js(a2) {
            a2 = a2 | 0;
            return b[a2 + 8 >> 1] | 0;
          }
          function ks(a2) {
            a2 = a2 | 0;
            return b[a2 + 10 >> 1] | 0;
          }
          function ls(a2) {
            a2 = a2 | 0;
            return a2 + 12 | 0;
          }
          function ms(a2) {
            a2 = a2 | 0;
            return a2 + 28 | 0;
          }
          function ns(a2) {
            a2 = a2 | 0;
            return a2 + 44 | 0;
          }
          function os(a2) {
            a2 = a2 | 0;
            return a2 + 60 | 0;
          }
          function ps(a2) {
            a2 = a2 | 0;
            return +g[a2 + 4 >> 2] < 1 | 0;
          }
          function qs(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            g[a2 + 4 >> 2] = b2;
            return;
          }
          function rs(a2, c2) {
            a2 = a2 | 0;
            c2 = c2 | 0;
            b[a2 + 8 >> 1] = c2;
            return;
          }
          function ss(a2, c2) {
            a2 = a2 | 0;
            c2 = c2 | 0;
            b[a2 + 10 >> 1] = c2;
            return;
          }
          function ts(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c[a2 + 12 >> 2] = c[b2 >> 2];
            c[a2 + 12 + 4 >> 2] = c[b2 + 4 >> 2];
            c[a2 + 12 + 8 >> 2] = c[b2 + 8 >> 2];
            c[a2 + 12 + 12 >> 2] = c[b2 + 12 >> 2];
            return;
          }
          function us(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c[a2 + 28 >> 2] = c[b2 >> 2];
            c[a2 + 28 + 4 >> 2] = c[b2 + 4 >> 2];
            c[a2 + 28 + 8 >> 2] = c[b2 + 8 >> 2];
            c[a2 + 28 + 12 >> 2] = c[b2 + 12 >> 2];
            return;
          }
          function vs(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c[a2 + 44 >> 2] = c[b2 >> 2];
            c[a2 + 44 + 4 >> 2] = c[b2 + 4 >> 2];
            c[a2 + 44 + 8 >> 2] = c[b2 + 8 >> 2];
            c[a2 + 44 + 12 >> 2] = c[b2 + 12 >> 2];
            return;
          }
          function ws(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c[a2 + 60 >> 2] = c[b2 >> 2];
            c[a2 + 60 + 4 >> 2] = c[b2 + 4 >> 2];
            c[a2 + 60 + 8 >> 2] = c[b2 + 8 >> 2];
            c[a2 + 60 + 12 >> 2] = c[b2 + 12 >> 2];
            return;
          }
          function xs(a2, d2) {
            a2 = a2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0;
            while (1) {
              e2 = qG(84) | 0;
              if (e2 | 0) {
                f2 = 6;
                break;
              }
              e2 = c[5831] | 0;
              c[5831] = e2 + 0;
              if (!e2) {
                f2 = 5;
                break;
              }
              _b[e2 & 3]();
            }
            if ((f2 | 0) == 5) {
              d2 = Va(4) | 0;
              c[d2 >> 2] = 8308;
              hb(d2 | 0, 2416, 215);
            } else if ((f2 | 0) == 6) {
              g[e2 + 4 >> 2] = 1;
              c[e2 + 8 >> 2] = 0;
              b[e2 + 12 >> 1] = 1;
              b[e2 + 14 >> 1] = -1;
              c[e2 + 16 >> 2] = 0;
              c[e2 >> 2] = 8008;
              c[e2 + 20 >> 2] = c[a2 >> 2];
              c[e2 + 20 + 4 >> 2] = c[a2 + 4 >> 2];
              c[e2 + 20 + 8 >> 2] = c[a2 + 8 >> 2];
              c[e2 + 20 + 12 >> 2] = c[a2 + 12 >> 2];
              c[e2 + 36 >> 2] = c[d2 >> 2];
              c[e2 + 36 + 4 >> 2] = c[d2 + 4 >> 2];
              c[e2 + 36 + 8 >> 2] = c[d2 + 8 >> 2];
              c[e2 + 36 + 12 >> 2] = c[d2 + 12 >> 2];
              return e2 | 0;
            }
            return 0;
          }
          function ys(a2) {
            a2 = a2 | 0;
            if (!a2)
              return;
            rb[c[(c[a2 >> 2] | 0) + 4 >> 2] & 255](a2);
            return;
          }
          function zs(a2) {
            a2 = a2 | 0;
            return b[a2 + 12 >> 1] | 0;
          }
          function As(a2) {
            a2 = a2 | 0;
            return b[a2 + 14 >> 1] | 0;
          }
          function Bs(a2) {
            a2 = a2 | 0;
            return c[a2 + 8 >> 2] | 0;
          }
          function Cs(a2) {
            a2 = a2 | 0;
            return a2 + 52 | 0;
          }
          function Ds(a2) {
            a2 = a2 | 0;
            return a2 + 68 | 0;
          }
          function Es(a2) {
            a2 = a2 | 0;
            return a2 + 20 | 0;
          }
          function Fs(a2) {
            a2 = a2 | 0;
            return a2 + 36 | 0;
          }
          function Gs(a2) {
            a2 = a2 | 0;
            return (c[a2 + 8 >> 2] | 0) != 0 | 0;
          }
          function Hs(a2, c2) {
            a2 = a2 | 0;
            c2 = c2 | 0;
            b[a2 + 12 >> 1] = c2;
            return;
          }
          function Is(a2, c2) {
            a2 = a2 | 0;
            c2 = c2 | 0;
            b[a2 + 14 >> 1] = c2;
            return;
          }
          function Js(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c[a2 + 8 >> 2] = b2;
            return;
          }
          function Ks(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c[a2 + 52 >> 2] = c[b2 >> 2];
            c[a2 + 52 + 4 >> 2] = c[b2 + 4 >> 2];
            c[a2 + 52 + 8 >> 2] = c[b2 + 8 >> 2];
            c[a2 + 52 + 12 >> 2] = c[b2 + 12 >> 2];
            return;
          }
          function Ls(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c[a2 + 68 >> 2] = c[b2 >> 2];
            c[a2 + 68 + 4 >> 2] = c[b2 + 4 >> 2];
            c[a2 + 68 + 8 >> 2] = c[b2 + 8 >> 2];
            c[a2 + 68 + 12 >> 2] = c[b2 + 12 >> 2];
            return;
          }
          function Ms(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c[a2 + 20 >> 2] = c[b2 >> 2];
            c[a2 + 20 + 4 >> 2] = c[b2 + 4 >> 2];
            c[a2 + 20 + 8 >> 2] = c[b2 + 8 >> 2];
            c[a2 + 20 + 12 >> 2] = c[b2 + 12 >> 2];
            return;
          }
          function Ns(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c[a2 + 36 >> 2] = c[b2 >> 2];
            c[a2 + 36 + 4 >> 2] = c[b2 + 4 >> 2];
            c[a2 + 36 + 8 >> 2] = c[b2 + 8 >> 2];
            c[a2 + 36 + 12 >> 2] = c[b2 + 12 >> 2];
            return;
          }
          function Os() {
            var a2 = 0, d2 = 0;
            while (1) {
              a2 = qG(8) | 0;
              if (a2 | 0) {
                d2 = 6;
                break;
              }
              a2 = c[5831] | 0;
              c[5831] = a2 + 0;
              if (!a2) {
                d2 = 5;
                break;
              }
              _b[a2 & 3]();
            }
            if ((d2 | 0) == 5) {
              d2 = Va(4) | 0;
              c[d2 >> 2] = 8308;
              hb(d2 | 0, 2416, 215);
            } else if ((d2 | 0) == 6) {
              c[a2 >> 2] = 0;
              c[a2 + 4 >> 2] = 0;
              b[a2 + 4 >> 1] = 1;
              b[a2 + 6 >> 1] = -1;
              c[a2 >> 2] = 8036;
              return a2 | 0;
            }
            return 0;
          }
          function Ps(a2) {
            a2 = a2 | 0;
            return;
          }
          function Qs(a2) {
            a2 = a2 | 0;
            rG(a2);
            return;
          }
          function Rs(a2, d2) {
            a2 = a2 | 0;
            d2 = d2 | 0;
            d2 = c[d2 + 4 >> 2] | 0;
            if (!((b[a2 + 6 >> 1] & (d2 & 65535)) << 16 >> 16)) {
              a2 = 0;
              return a2 | 0;
            }
            a2 = (d2 >>> 16 & 65535 & b[a2 + 4 >> 1]) << 16 >> 16 != 0;
            return a2 | 0;
          }
          function Ss(a2, b2, c2, d2, e2, f2, g2, h2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            g2 = g2 | 0;
            h2 = h2 | 0;
            return + +fb(0, a2 | 0, b2 | 0, c2 | 0, d2 | 0, e2 | 0, f2 | 0, g2 | 0, h2 | 0);
          }
          function Ts(a2) {
            a2 = a2 | 0;
            if (!a2)
              return;
            rb[c[(c[a2 >> 2] | 0) + 4 >> 2] & 255](a2);
            return;
          }
          function Us(a2, b2, d2, e2, f2, g2, h2, i2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            g2 = g2 | 0;
            h2 = h2 | 0;
            i2 = i2 | 0;
            return + +Bb[c[(c[a2 >> 2] | 0) + 12 >> 2] & 1](a2, b2, d2, e2, f2, g2, h2, i2);
          }
          function Vs(a2) {
            a2 = a2 | 0;
            if (!a2)
              return;
            rb[c[(c[a2 >> 2] | 0) + 4 >> 2] & 255](a2);
            return;
          }
          function Ws(a2, b2, d2, e2, f2, g2, h2, i2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            g2 = g2 | 0;
            h2 = h2 | 0;
            i2 = i2 | 0;
            return + +Bb[c[(c[a2 >> 2] | 0) + 12 >> 2] & 1](a2, b2, d2, e2, f2, g2, h2, i2);
          }
          function Xs(a2) {
            a2 = a2 | 0;
            if (!a2)
              return;
            rb[c[(c[a2 >> 2] | 0) + 4 >> 2] & 255](a2);
            return;
          }
          function Ys(a2) {
            a2 = a2 | 0;
            return + +g[a2 + 4 >> 2];
          }
          function Zs(a2) {
            a2 = a2 | 0;
            return b[a2 + 8 >> 1] | 0;
          }
          function _s(a2) {
            a2 = a2 | 0;
            return b[a2 + 10 >> 1] | 0;
          }
          function $s(a2) {
            a2 = a2 | 0;
            return +g[a2 + 4 >> 2] < 1 | 0;
          }
          function at(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            g[a2 + 4 >> 2] = b2;
            return;
          }
          function bt(a2, c2) {
            a2 = a2 | 0;
            c2 = c2 | 0;
            b[a2 + 8 >> 1] = c2;
            return;
          }
          function ct(a2, c2) {
            a2 = a2 | 0;
            c2 = c2 | 0;
            b[a2 + 10 >> 1] = c2;
            return;
          }
          function dt(a2, b2, d2, e2, f2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = +f2;
            var h2 = 0, i2 = 0;
            while (1) {
              h2 = qG(44) | 0;
              if (h2 | 0) {
                i2 = 6;
                break;
              }
              h2 = c[5831] | 0;
              c[5831] = h2 + 0;
              if (!h2) {
                i2 = 5;
                break;
              }
              _b[h2 & 3]();
            }
            if ((i2 | 0) == 5) {
              e2 = Va(4) | 0;
              c[e2 >> 2] = 8308;
              hb(e2 | 0, 2416, 215);
            } else if ((i2 | 0) == 6) {
              c[h2 >> 2] = a2;
              c[h2 + 4 >> 2] = b2;
              c[h2 + 8 >> 2] = c[d2 >> 2];
              c[h2 + 8 + 4 >> 2] = c[d2 + 4 >> 2];
              c[h2 + 8 + 8 >> 2] = c[d2 + 8 >> 2];
              c[h2 + 8 + 12 >> 2] = c[d2 + 12 >> 2];
              c[h2 + 24 >> 2] = c[e2 >> 2];
              c[h2 + 24 + 4 >> 2] = c[e2 + 4 >> 2];
              c[h2 + 24 + 8 >> 2] = c[e2 + 8 >> 2];
              c[h2 + 24 + 12 >> 2] = c[e2 + 12 >> 2];
              g[h2 + 40 >> 2] = f2;
              return h2 | 0;
            }
            return 0;
          }
          function et(a2) {
            a2 = a2 | 0;
            if (!a2)
              return;
            rG(a2);
            return;
          }
          function ft(a2) {
            a2 = a2 | 0;
            return c[a2 >> 2] | 0;
          }
          function gt(a2) {
            a2 = a2 | 0;
            return + +g[a2 + 40 >> 2];
          }
          function ht(a2) {
            a2 = a2 | 0;
            return a2 + 8 | 0;
          }
          function it(a2) {
            a2 = a2 | 0;
            return a2 + 24 | 0;
          }
          function jt(a2) {
            a2 = a2 | 0;
            return c[a2 + 4 >> 2] | 0;
          }
          function kt(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c[a2 >> 2] = b2;
            return;
          }
          function lt(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            g[a2 + 40 >> 2] = b2;
            return;
          }
          function mt(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c[a2 + 8 >> 2] = c[b2 >> 2];
            c[a2 + 8 + 4 >> 2] = c[b2 + 4 >> 2];
            c[a2 + 8 + 8 >> 2] = c[b2 + 8 >> 2];
            c[a2 + 8 + 12 >> 2] = c[b2 + 12 >> 2];
            return;
          }
          function nt(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c[a2 + 24 >> 2] = c[b2 >> 2];
            c[a2 + 24 + 4 >> 2] = c[b2 + 4 >> 2];
            c[a2 + 24 + 8 >> 2] = c[b2 + 8 >> 2];
            c[a2 + 24 + 12 >> 2] = c[b2 + 12 >> 2];
            return;
          }
          function ot(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c[a2 + 4 >> 2] = b2;
            return;
          }
          function pt(a2) {
            a2 = a2 | 0;
            if (!a2)
              return;
            rG(a2);
            return;
          }
          function qt(a2) {
            a2 = a2 | 0;
            return c[a2 >> 2] | 0;
          }
          function rt(a2) {
            a2 = a2 | 0;
            return c[a2 + 4 >> 2] | 0;
          }
          function st(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c[a2 >> 2] = b2;
            return;
          }
          function tt(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c[a2 + 4 >> 2] = b2;
            return;
          }
          function ut(a2) {
            a2 = a2 | 0;
            if (!a2)
              return;
            rb[c[(c[a2 >> 2] | 0) + 4 >> 2] & 255](a2);
            return;
          }
          function vt(a2) {
            a2 = a2 | 0;
            return b[a2 + 12 >> 1] | 0;
          }
          function wt(a2) {
            a2 = a2 | 0;
            return b[a2 + 14 >> 1] | 0;
          }
          function xt(a2) {
            a2 = a2 | 0;
            return c[a2 + 8 >> 2] | 0;
          }
          function yt(a2) {
            a2 = a2 | 0;
            return (c[a2 + 8 >> 2] | 0) != 0 | 0;
          }
          function zt(a2, c2) {
            a2 = a2 | 0;
            c2 = c2 | 0;
            b[a2 + 12 >> 1] = c2;
            return;
          }
          function At(a2, c2) {
            a2 = a2 | 0;
            c2 = c2 | 0;
            b[a2 + 14 >> 1] = c2;
            return;
          }
          function Bt(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c[a2 + 8 >> 2] = b2;
            return;
          }
          function Ct(a2) {
            a2 = a2 | 0;
            if (!a2)
              return;
            rG(a2);
            return;
          }
          function Dt(a2) {
            a2 = a2 | 0;
            return a2 | 0;
          }
          function Et(a2) {
            a2 = a2 | 0;
            return a2 + 16 | 0;
          }
          function Ft(a2) {
            a2 = a2 | 0;
            return c[a2 + 88 >> 2] | 0;
          }
          function Gt(a2) {
            a2 = a2 | 0;
            return a2 + 36 | 0;
          }
          function Ht(b2) {
            b2 = b2 | 0;
            return (a[b2 + 84 >> 0] | 0) != 0 | 0;
          }
          function It(a2) {
            a2 = a2 | 0;
            return + +g[a2 + 32 >> 2];
          }
          function Jt(a2) {
            a2 = a2 | 0;
            return a2 + 68 | 0;
          }
          function Kt(a2) {
            a2 = a2 | 0;
            return a2 + 52 | 0;
          }
          function Lt(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c[a2 >> 2] = c[b2 >> 2];
            c[a2 + 4 >> 2] = c[b2 + 4 >> 2];
            c[a2 + 8 >> 2] = c[b2 + 8 >> 2];
            c[a2 + 12 >> 2] = c[b2 + 12 >> 2];
            return;
          }
          function Mt(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c[a2 + 16 >> 2] = c[b2 >> 2];
            c[a2 + 16 + 4 >> 2] = c[b2 + 4 >> 2];
            c[a2 + 16 + 8 >> 2] = c[b2 + 8 >> 2];
            c[a2 + 16 + 12 >> 2] = c[b2 + 12 >> 2];
            return;
          }
          function Nt(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c[a2 + 88 >> 2] = b2;
            return;
          }
          function Ot(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c[a2 + 36 >> 2] = c[b2 >> 2];
            c[a2 + 36 + 4 >> 2] = c[b2 + 4 >> 2];
            c[a2 + 36 + 8 >> 2] = c[b2 + 8 >> 2];
            c[a2 + 36 + 12 >> 2] = c[b2 + 12 >> 2];
            return;
          }
          function Pt(b2, c2) {
            b2 = b2 | 0;
            c2 = c2 | 0;
            a[b2 + 84 >> 0] = c2 & 1;
            return;
          }
          function Qt(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            g[a2 + 32 >> 2] = b2;
            return;
          }
          function Rt(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c[a2 + 68 >> 2] = c[b2 >> 2];
            c[a2 + 68 + 4 >> 2] = c[b2 + 4 >> 2];
            c[a2 + 68 + 8 >> 2] = c[b2 + 8 >> 2];
            c[a2 + 68 + 12 >> 2] = c[b2 + 12 >> 2];
            return;
          }
          function St(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c[a2 + 52 >> 2] = c[b2 >> 2];
            c[a2 + 52 + 4 >> 2] = c[b2 + 4 >> 2];
            c[a2 + 52 + 8 >> 2] = c[b2 + 8 >> 2];
            c[a2 + 52 + 12 >> 2] = c[b2 + 12 >> 2];
            return;
          }
          function Tt(a2) {
            a2 = a2 | 0;
            if (!a2)
              return;
            rG(a2);
            return;
          }
          function Ut(a2) {
            a2 = a2 | 0;
            if (!a2)
              return;
            rb[c[(c[a2 >> 2] | 0) + 4 >> 2] & 255](a2);
            return;
          }
          function Vt(a2) {
            a2 = a2 | 0;
            if (!a2)
              return;
            rb[c[(c[a2 >> 2] | 0) + 4 >> 2] & 255](a2);
            return;
          }
          function Wt(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0;
            c[5637] = (c[5637] | 0) + 1;
            d2 = qG(135) | 0;
            if (!d2)
              d2 = 0;
            else {
              c[(d2 + 4 + 15 & -16) + -4 >> 2] = d2;
              d2 = d2 + 4 + 15 & -16;
            }
            lc(d2, a2, b2, 16384, 0, 0);
            return d2 | 0;
          }
          function Xt(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0;
            c[5637] = (c[5637] | 0) + 1;
            e2 = qG(135) | 0;
            if (!e2)
              e2 = 0;
            else {
              c[(e2 + 4 + 15 & -16) + -4 >> 2] = e2;
              e2 = e2 + 4 + 15 & -16;
            }
            lc(e2, a2, b2, d2 & 65535, 0, 0);
            return e2 | 0;
          }
          function Yt(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0;
            c[5637] = (c[5637] | 0) + 1;
            f2 = qG(135) | 0;
            if (!f2)
              f2 = 0;
            else {
              c[(f2 + 4 + 15 & -16) + -4 >> 2] = f2;
              f2 = f2 + 4 + 15 & -16;
            }
            lc(f2, a2, b2, d2 & 65535, e2, 0);
            return f2 | 0;
          }
          function Zt(a2, b2, d2, e2, f2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            var g2 = 0;
            c[5637] = (c[5637] | 0) + 1;
            g2 = qG(135) | 0;
            if (!g2)
              g2 = 0;
            else {
              c[(g2 + 4 + 15 & -16) + -4 >> 2] = g2;
              g2 = g2 + 4 + 15 & -16;
            }
            lc(g2, a2, b2, d2 & 65535, e2, f2);
            return g2 | 0;
          }
          function _t(a2) {
            a2 = a2 | 0;
            if (!a2)
              return;
            rb[c[(c[a2 >> 2] | 0) + 4 >> 2] & 255](a2);
            return;
          }
          function $t(a2) {
            a2 = a2 | 0;
            var b2 = 0;
            c[5637] = (c[5637] | 0) + 1;
            b2 = qG(79) | 0;
            if (!b2)
              b2 = 0;
            else {
              c[(b2 + 4 + 15 & -16) + -4 >> 2] = b2;
              b2 = b2 + 4 + 15 & -16;
            }
            jj(b2, a2);
            return b2 | 0;
          }
          function au(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = +b2;
            d2 = d2 | 0;
            Ab[c[(c[a2 >> 2] | 0) + 32 >> 2] & 15](a2, b2, d2);
            return;
          }
          function bu(a2) {
            a2 = a2 | 0;
            return + +Hb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
          }
          function cu(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            tb[c[(c[a2 >> 2] | 0) + 24 >> 2] & 127](a2, b2);
            return;
          }
          function du(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            qb[c[(c[a2 >> 2] | 0) + 44 >> 2] & 31](a2, b2);
            return;
          }
          function eu(a2) {
            a2 = a2 | 0;
            if (!a2)
              return;
            rb[c[(c[a2 >> 2] | 0) + 4 >> 2] & 255](a2);
            return;
          }
          function fu(a2) {
            a2 = a2 | 0;
            if (!a2)
              return;
            rb[c[(c[a2 >> 2] | 0) + 4 >> 2] & 255](a2);
            return;
          }
          function gu(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0;
            c[5637] = (c[5637] | 0) + 1;
            d2 = qG(99) | 0;
            if (!d2)
              d2 = 0;
            else {
              c[(d2 + 4 + 15 & -16) + -4 >> 2] = d2;
              d2 = d2 + 4 + 15 & -16;
            }
            yj(d2, a2, b2, 1);
            return d2 | 0;
          }
          function hu(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0;
            c[5637] = (c[5637] | 0) + 1;
            e2 = qG(99) | 0;
            if (!e2)
              e2 = 0;
            else {
              c[(e2 + 4 + 15 & -16) + -4 >> 2] = e2;
              e2 = e2 + 4 + 15 & -16;
            }
            yj(e2, a2, b2, d2);
            return e2 | 0;
          }
          function iu(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = +b2;
            d2 = d2 | 0;
            Ab[c[(c[a2 >> 2] | 0) + 32 >> 2] & 15](a2, b2, d2);
            return;
          }
          function ju(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            tb[c[(c[a2 >> 2] | 0) + 24 >> 2] & 127](a2, b2);
            return;
          }
          function ku(a2) {
            a2 = a2 | 0;
            if (!a2)
              return;
            rb[c[(c[a2 >> 2] | 0) + 4 >> 2] & 255](a2);
            return;
          }
          function lu(a2, b2) {
            a2 = +a2;
            b2 = +b2;
            var d2 = 0;
            c[5637] = (c[5637] | 0) + 1;
            d2 = qG(79) | 0;
            if (!d2)
              d2 = 0;
            else {
              c[(d2 + 4 + 15 & -16) + -4 >> 2] = d2;
              d2 = d2 + 4 + 15 & -16;
            }
            c[d2 + 8 >> 2] = 0;
            c[d2 + 12 >> 2] = -1;
            c[d2 + 16 >> 2] = 1065353216;
            c[d2 + 20 >> 2] = 1065353216;
            c[d2 + 24 >> 2] = 1065353216;
            g[d2 + 28 >> 2] = 0;
            g[d2 + 48 >> 2] = 0.03999999910593033;
            c[d2 + 4 >> 2] = 10;
            c[d2 >> 2] = 4976;
            c[d2 + 56 >> 2] = 0;
            g[d2 + 32 >> 2] = b2 * 0.5;
            g[d2 + 36 >> 2] = a2;
            g[d2 + 40 >> 2] = a2;
            g[d2 + 44 >> 2] = 0;
            return d2 | 0;
          }
          function mu(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = +b2;
            d2 = d2 | 0;
            Ab[c[(c[a2 >> 2] | 0) + 32 >> 2] & 15](a2, b2, d2);
            return;
          }
          function nu(a2) {
            a2 = a2 | 0;
            return + +Hb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
          }
          function ou(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            tb[c[(c[a2 >> 2] | 0) + 24 >> 2] & 127](a2, b2);
            return;
          }
          function pu(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            qb[c[(c[a2 >> 2] | 0) + 44 >> 2] & 31](a2, b2);
            return;
          }
          function qu(a2) {
            a2 = a2 | 0;
            if (!a2)
              return;
            rb[c[(c[a2 >> 2] | 0) + 4 >> 2] & 255](a2);
            return;
          }
          function ru(a2, b2) {
            a2 = +a2;
            b2 = +b2;
            var d2 = 0;
            c[5637] = (c[5637] | 0) + 1;
            d2 = qG(79) | 0;
            if (!d2)
              d2 = 0;
            else {
              c[(d2 + 4 + 15 & -16) + -4 >> 2] = d2;
              d2 = d2 + 4 + 15 & -16;
            }
            c[d2 + 8 >> 2] = 0;
            c[d2 + 12 >> 2] = -1;
            c[d2 + 16 >> 2] = 1065353216;
            c[d2 + 20 >> 2] = 1065353216;
            c[d2 + 24 >> 2] = 1065353216;
            g[d2 + 28 >> 2] = 0;
            g[d2 + 48 >> 2] = 0.03999999910593033;
            c[d2 + 4 >> 2] = 10;
            c[d2 >> 2] = 5076;
            c[d2 + 56 >> 2] = 2;
            g[d2 + 32 >> 2] = a2;
            g[d2 + 36 >> 2] = a2;
            g[d2 + 40 >> 2] = b2 * 0.5;
            g[d2 + 44 >> 2] = 0;
            return d2 | 0;
          }
          function su(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = +b2;
            d2 = d2 | 0;
            Ab[c[(c[a2 >> 2] | 0) + 32 >> 2] & 15](a2, b2, d2);
            return;
          }
          function tu(a2) {
            a2 = a2 | 0;
            return + +Hb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
          }
          function uu(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            tb[c[(c[a2 >> 2] | 0) + 24 >> 2] & 127](a2, b2);
            return;
          }
          function vu(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            qb[c[(c[a2 >> 2] | 0) + 44 >> 2] & 31](a2, b2);
            return;
          }
          function wu(a2) {
            a2 = a2 | 0;
            if (!a2)
              return;
            rb[c[(c[a2 >> 2] | 0) + 4 >> 2] & 255](a2);
            return;
          }
          function xu(a2, b2) {
            a2 = +a2;
            b2 = +b2;
            var d2 = 0;
            c[5637] = (c[5637] | 0) + 1;
            d2 = qG(79) | 0;
            if (!d2)
              d2 = 0;
            else {
              c[(d2 + 4 + 15 & -16) + -4 >> 2] = d2;
              d2 = d2 + 4 + 15 & -16;
            }
            c[d2 + 8 >> 2] = 0;
            c[d2 + 12 >> 2] = -1;
            c[d2 + 16 >> 2] = 1065353216;
            c[d2 + 20 >> 2] = 1065353216;
            c[d2 + 24 >> 2] = 1065353216;
            g[d2 + 28 >> 2] = 0;
            g[d2 + 48 >> 2] = 0.03999999910593033;
            c[d2 >> 2] = 4876;
            c[d2 + 4 >> 2] = 10;
            c[d2 + 56 >> 2] = 1;
            g[d2 + 32 >> 2] = a2;
            g[d2 + 36 >> 2] = b2 * 0.5;
            g[d2 + 40 >> 2] = a2;
            g[d2 + 44 >> 2] = 0;
            return d2 | 0;
          }
          function yu(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = +b2;
            d2 = d2 | 0;
            Ab[c[(c[a2 >> 2] | 0) + 32 >> 2] & 15](a2, b2, d2);
            return;
          }
          function zu(a2) {
            a2 = a2 | 0;
            return + +Hb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
          }
          function Au(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            tb[c[(c[a2 >> 2] | 0) + 24 >> 2] & 127](a2, b2);
            return;
          }
          function Bu(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            qb[c[(c[a2 >> 2] | 0) + 44 >> 2] & 31](a2, b2);
            return;
          }
          function Cu(a2) {
            a2 = a2 | 0;
            if (!a2)
              return;
            rb[c[(c[a2 >> 2] | 0) + 4 >> 2] & 255](a2);
            return;
          }
          function Du(a2) {
            a2 = a2 | 0;
            if (!a2)
              return;
            rb[c[(c[a2 >> 2] | 0) + 4 >> 2] & 255](a2);
            return;
          }
          function Eu(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0;
            while (1) {
              b2 = qG(5260) | 0;
              if (b2 | 0) {
                d2 = 6;
                break;
              }
              b2 = c[5831] | 0;
              c[5831] = b2 + 0;
              if (!b2) {
                d2 = 5;
                break;
              }
              _b[b2 & 3]();
            }
            if ((d2 | 0) == 5) {
              a2 = Va(4) | 0;
              c[a2 >> 2] = 8308;
              hb(a2 | 0, 2416, 215);
            } else if ((d2 | 0) == 6) {
              Qe(b2, a2);
              return b2 | 0;
            }
            return 0;
          }
          function Fu(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            return Ob[c[(c[a2 >> 2] | 0) + 40 >> 2] & 31](a2, b2) | 0;
          }
          function Gu(a2) {
            a2 = a2 | 0;
            return vb[c[(c[a2 >> 2] | 0) + 36 >> 2] & 127](a2) | 0;
          }
          function Hu(a2) {
            a2 = a2 | 0;
            if (!a2)
              return;
            rb[c[(c[a2 >> 2] | 0) + 4 >> 2] & 255](a2);
            return;
          }
          function Iu(a2) {
            a2 = a2 | 0;
            if (c[a2 + 204 >> 2] & 3 | 0)
              return;
            if ((c[a2 + 216 >> 2] & -2 | 0) != 4)
              c[a2 + 216 >> 2] = 1;
            g[a2 + 220 >> 2] = 0;
            return;
          }
          function Ju(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            if (!b2 ? c[a2 + 204 >> 2] & 3 | 0 : 0)
              return;
            if ((c[a2 + 216 >> 2] & -2 | 0) != 4)
              c[a2 + 216 >> 2] = 1;
            g[a2 + 220 >> 2] = 0;
            return;
          }
          function Ku(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c[a2 + 216 >> 2] = b2;
            return;
          }
          function Lu(a2) {
            a2 = a2 | 0;
            return c[a2 + 204 >> 2] | 0;
          }
          function Mu(a2) {
            a2 = a2 | 0;
            return c[a2 + 192 >> 2] | 0;
          }
          function Nu(a2) {
            a2 = a2 | 0;
            return a2 + 4 | 0;
          }
          function Ou(a2) {
            a2 = a2 | 0;
            a2 = c[a2 + 216 >> 2] | 0;
            return (a2 | 0) != 5 & (a2 | 0) != 2 | 0;
          }
          function Pu(a2) {
            a2 = a2 | 0;
            return (c[a2 + 204 >> 2] & 2 | 0) != 0 | 0;
          }
          function Qu(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            if ((c[a2 + 216 >> 2] & -2 | 0) == 4)
              return;
            c[a2 + 216 >> 2] = b2;
            return;
          }
          function Ru(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            c[a2 + 164 >> 2] = c[b2 >> 2];
            c[a2 + 164 + 4 >> 2] = c[b2 + 4 >> 2];
            c[a2 + 164 + 8 >> 2] = c[b2 + 8 >> 2];
            c[a2 + 164 + 12 >> 2] = c[b2 + 12 >> 2];
            if (!(+g[b2 >> 2] != 1) ? !(+g[b2 + 4 >> 2] != 1) : 0)
              d2 = +g[b2 + 8 >> 2] != 1 ? d2 : 0;
            c[a2 + 180 >> 2] = d2;
            return;
          }
          function Su(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            g[a2 + 256 >> 2] = b2;
            return;
          }
          function Tu(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            g[a2 + 252 >> 2] = b2;
            return;
          }
          function Uu(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c[a2 + 204 >> 2] = b2;
            return;
          }
          function Vu(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            tb[c[(c[a2 >> 2] | 0) + 8 >> 2] & 127](a2, b2);
            return;
          }
          function Wu(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            g[a2 + 184 >> 2] = b2;
            return;
          }
          function Xu(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            c[a2 + 284 >> 2] = (c[a2 + 284 >> 2] | 0) + 1;
            g[a2 + 224 >> 2] = b2;
            return;
          }
          function Yu(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            c[a2 + 284 >> 2] = (c[a2 + 284 >> 2] | 0) + 1;
            g[a2 + 228 >> 2] = b2;
            return;
          }
          function Zu(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            c[a2 + 284 >> 2] = (c[a2 + 284 >> 2] | 0) + 1;
            g[a2 + 232 >> 2] = b2;
            return;
          }
          function _u(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c[a2 + 284 >> 2] = (c[a2 + 284 >> 2] | 0) + 1;
            c[a2 + 4 >> 2] = c[b2 >> 2];
            c[a2 + 4 + 4 >> 2] = c[b2 + 4 >> 2];
            c[a2 + 4 + 8 >> 2] = c[b2 + 8 >> 2];
            c[a2 + 4 + 12 >> 2] = c[b2 + 12 >> 2];
            c[a2 + 20 >> 2] = c[b2 + 16 >> 2];
            c[a2 + 20 + 4 >> 2] = c[b2 + 16 + 4 >> 2];
            c[a2 + 20 + 8 >> 2] = c[b2 + 16 + 8 >> 2];
            c[a2 + 20 + 12 >> 2] = c[b2 + 16 + 12 >> 2];
            c[a2 + 36 >> 2] = c[b2 + 32 >> 2];
            c[a2 + 36 + 4 >> 2] = c[b2 + 32 + 4 >> 2];
            c[a2 + 36 + 8 >> 2] = c[b2 + 32 + 8 >> 2];
            c[a2 + 36 + 12 >> 2] = c[b2 + 32 + 12 >> 2];
            c[a2 + 52 >> 2] = c[b2 + 48 >> 2];
            c[a2 + 52 + 4 >> 2] = c[b2 + 48 + 4 >> 2];
            c[a2 + 52 + 8 >> 2] = c[b2 + 48 + 8 >> 2];
            c[a2 + 52 + 12 >> 2] = c[b2 + 48 + 12 >> 2];
            return;
          }
          function $u(a2) {
            a2 = a2 | 0;
            if (!a2)
              return;
            rb[c[(c[a2 >> 2] | 0) + 4 >> 2] & 255](a2);
            return;
          }
          function av(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = +b2;
            d2 = d2 | 0;
            Ab[c[(c[a2 >> 2] | 0) + 32 >> 2] & 15](a2, b2, d2);
            return;
          }
          function bv(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            tb[c[(c[a2 >> 2] | 0) + 24 >> 2] & 127](a2, b2);
            return;
          }
          function cv(a2) {
            a2 = a2 | 0;
            if (!a2)
              return;
            rb[c[(c[a2 >> 2] | 0) + 4 >> 2] & 255](a2);
            return;
          }
          function dv(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            bc[c[(c[a2 >> 2] | 0) + 36 >> 2] & 127](a2, b2, 1, -1);
            return;
          }
          function ev(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            bc[c[(c[a2 >> 2] | 0) + 36 >> 2] & 127](a2, b2, d2, -1);
            return;
          }
          function fv(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            bc[c[(c[a2 >> 2] | 0) + 36 >> 2] & 127](a2, b2, d2, e2);
            return;
          }
          function gv(a2, b2, c2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = d2 | 0;
            ig(a2, b2, c2, d2);
            return;
          }
          function hv(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0;
            e2 = i;
            i = i + 48 | 0;
            f2 = c[b2 + 192 >> 2] | 0;
            bc[c[(c[f2 >> 2] | 0) + 8 >> 2] & 127](f2, b2 + 4 | 0, e2 + 32 | 0, e2 + 16 | 0);
            c[e2 >> 2] = 3544;
            c[e2 + 4 >> 2] = b2;
            c[e2 + 8 >> 2] = a2;
            c[e2 + 12 >> 2] = d2;
            a2 = c[a2 + 68 >> 2] | 0;
            bc[c[(c[a2 >> 2] | 0) + 28 >> 2] & 127](a2, e2 + 32 | 0, e2 + 16 | 0, e2);
            i = e2;
            return;
          }
          function iv(a2, b2, c2, d2, e2, f2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = +f2;
            Yf(a2, b2, c2, d2, e2, f2);
            return;
          }
          function jv(a2) {
            a2 = a2 | 0;
            return c[a2 + 68 >> 2] | 0;
          }
          function kv(a2) {
            a2 = a2 | 0;
            return a2 + 28 | 0;
          }
          function lv(a2) {
            a2 = a2 | 0;
            return c[a2 + 24 >> 2] | 0;
          }
          function mv(a2) {
            a2 = a2 | 0;
            a2 = c[a2 + 68 >> 2] | 0;
            return vb[c[(c[a2 >> 2] | 0) + 36 >> 2] & 127](a2) | 0;
          }
          function nv(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            bc[c[(c[a2 >> 2] | 0) + 32 >> 2] & 127](a2, b2, d2, e2);
            return;
          }
          function ov(a2) {
            a2 = a2 | 0;
            if (!a2)
              return;
            rb[c[(c[a2 >> 2] | 0) + 4 >> 2] & 255](a2);
            return;
          }
          function pv(b2, d2, e2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0;
            p2 = i;
            i = i + 128 | 0;
            c[b2 + 72 >> 2] = (c[b2 + 72 >> 2] | 0) + 1;
            c[p2 >> 2] = c[d2 >> 2];
            c[p2 + 4 >> 2] = c[d2 + 4 >> 2];
            c[p2 + 8 >> 2] = c[d2 + 8 >> 2];
            c[p2 + 12 >> 2] = c[d2 + 12 >> 2];
            c[p2 + 16 >> 2] = c[d2 + 16 >> 2];
            c[p2 + 16 + 4 >> 2] = c[d2 + 16 + 4 >> 2];
            c[p2 + 16 + 8 >> 2] = c[d2 + 16 + 8 >> 2];
            c[p2 + 16 + 12 >> 2] = c[d2 + 16 + 12 >> 2];
            c[p2 + 32 >> 2] = c[d2 + 32 >> 2];
            c[p2 + 32 + 4 >> 2] = c[d2 + 32 + 4 >> 2];
            c[p2 + 32 + 8 >> 2] = c[d2 + 32 + 8 >> 2];
            c[p2 + 32 + 12 >> 2] = c[d2 + 32 + 12 >> 2];
            c[p2 + 48 >> 2] = c[d2 + 48 >> 2];
            c[p2 + 48 + 4 >> 2] = c[d2 + 48 + 4 >> 2];
            c[p2 + 48 + 8 >> 2] = c[d2 + 48 + 8 >> 2];
            c[p2 + 48 + 12 >> 2] = c[d2 + 48 + 12 >> 2];
            n2 = c[e2 + 4 >> 2] | 0;
            o2 = +Hb[c[(c[e2 >> 2] | 0) + 48 >> 2] & 15](e2);
            bc[c[(c[e2 >> 2] | 0) + 8 >> 2] & 127](e2, d2, p2 + 112 | 0, p2 + 96 | 0);
            f2 = +g[p2 + 112 >> 2];
            if (+g[b2 + 36 >> 2] > f2)
              g[b2 + 36 >> 2] = f2;
            f2 = +g[p2 + 96 >> 2];
            if (+g[b2 + 52 >> 2] < f2)
              g[b2 + 52 >> 2] = f2;
            f2 = +g[p2 + 112 + 4 >> 2];
            if (+g[b2 + 40 >> 2] > f2)
              g[b2 + 40 >> 2] = f2;
            f2 = +g[p2 + 96 + 4 >> 2];
            if (+g[b2 + 56 >> 2] < f2)
              g[b2 + 56 >> 2] = f2;
            f2 = +g[p2 + 112 + 8 >> 2];
            if (+g[b2 + 44 >> 2] > f2)
              g[b2 + 44 >> 2] = f2;
            f2 = +g[p2 + 96 + 8 >> 2];
            if (+g[b2 + 60 >> 2] < f2)
              g[b2 + 60 >> 2] = f2;
            l2 = c[b2 + 68 >> 2] | 0;
            if (!l2) {
              l2 = b2 + 20 | 0;
              k2 = 0;
            } else {
              c[p2 + 64 >> 2] = c[p2 + 112 >> 2];
              c[p2 + 64 + 4 >> 2] = c[p2 + 112 + 4 >> 2];
              c[p2 + 64 + 8 >> 2] = c[p2 + 112 + 8 >> 2];
              c[p2 + 64 + 12 >> 2] = c[p2 + 112 + 12 >> 2];
              c[p2 + 64 + 16 >> 2] = c[p2 + 96 >> 2];
              c[p2 + 64 + 16 + 4 >> 2] = c[p2 + 96 + 4 >> 2];
              c[p2 + 64 + 16 + 8 >> 2] = c[p2 + 96 + 8 >> 2];
              c[p2 + 64 + 16 + 12 >> 2] = c[p2 + 96 + 12 >> 2];
              k2 = c[b2 + 20 >> 2] | 0;
              d2 = c[l2 + 4 >> 2] | 0;
              if (!d2) {
                c[5637] = (c[5637] | 0) + 1;
                d2 = qG(63) | 0;
                if (!d2)
                  d2 = 0;
                else {
                  c[(d2 + 4 + 15 & -16) + -4 >> 2] = d2;
                  d2 = d2 + 4 + 15 & -16;
                }
                h2 = d2;
                j2 = h2 + 44 | 0;
                do {
                  c[h2 >> 2] = 0;
                  h2 = h2 + 4 | 0;
                } while ((h2 | 0) < (j2 | 0));
              } else
                c[l2 + 4 >> 2] = 0;
              c[d2 + 32 >> 2] = 0;
              c[d2 + 36 >> 2] = k2;
              c[d2 + 40 >> 2] = 0;
              c[d2 >> 2] = c[p2 + 64 >> 2];
              c[d2 + 4 >> 2] = c[p2 + 64 + 4 >> 2];
              c[d2 + 8 >> 2] = c[p2 + 64 + 8 >> 2];
              c[d2 + 12 >> 2] = c[p2 + 64 + 12 >> 2];
              c[d2 + 16 >> 2] = c[p2 + 64 + 16 >> 2];
              c[d2 + 20 >> 2] = c[p2 + 64 + 20 >> 2];
              c[d2 + 24 >> 2] = c[p2 + 64 + 24 >> 2];
              c[d2 + 28 >> 2] = c[p2 + 64 + 28 >> 2];
              bd(l2, c[l2 >> 2] | 0, d2);
              c[l2 + 12 >> 2] = (c[l2 + 12 >> 2] | 0) + 1;
              l2 = b2 + 20 | 0;
              k2 = d2;
            }
            d2 = c[l2 >> 2] | 0;
            if ((d2 | 0) == (c[b2 + 24 >> 2] | 0) ? (m2 = d2 | 0 ? d2 << 1 : 1, (d2 | 0) < (m2 | 0)) : 0) {
              if (!m2)
                j2 = 0;
              else {
                c[5637] = (c[5637] | 0) + 1;
                d2 = qG((m2 * 80 | 3) + 16 | 0) | 0;
                if (!d2)
                  d2 = 0;
                else {
                  c[(d2 + 4 + 15 & -16) + -4 >> 2] = d2;
                  d2 = d2 + 4 + 15 & -16;
                }
                j2 = d2;
                d2 = c[l2 >> 2] | 0;
              }
              if ((d2 | 0) > 0) {
                h2 = 0;
                do {
                  q2 = j2 + (h2 * 80 | 0) | 0;
                  r2 = c[b2 + 28 >> 2] | 0;
                  s2 = r2 + (h2 * 80 | 0) | 0;
                  c[q2 >> 2] = c[s2 >> 2];
                  c[q2 + 4 >> 2] = c[s2 + 4 >> 2];
                  c[q2 + 8 >> 2] = c[s2 + 8 >> 2];
                  c[q2 + 12 >> 2] = c[s2 + 12 >> 2];
                  q2 = j2 + (h2 * 80 | 0) + 16 | 0;
                  s2 = r2 + (h2 * 80 | 0) + 16 | 0;
                  c[q2 >> 2] = c[s2 >> 2];
                  c[q2 + 4 >> 2] = c[s2 + 4 >> 2];
                  c[q2 + 8 >> 2] = c[s2 + 8 >> 2];
                  c[q2 + 12 >> 2] = c[s2 + 12 >> 2];
                  q2 = j2 + (h2 * 80 | 0) + 32 | 0;
                  s2 = r2 + (h2 * 80 | 0) + 32 | 0;
                  c[q2 >> 2] = c[s2 >> 2];
                  c[q2 + 4 >> 2] = c[s2 + 4 >> 2];
                  c[q2 + 8 >> 2] = c[s2 + 8 >> 2];
                  c[q2 + 12 >> 2] = c[s2 + 12 >> 2];
                  q2 = j2 + (h2 * 80 | 0) + 48 | 0;
                  s2 = r2 + (h2 * 80 | 0) + 48 | 0;
                  c[q2 >> 2] = c[s2 >> 2];
                  c[q2 + 4 >> 2] = c[s2 + 4 >> 2];
                  c[q2 + 8 >> 2] = c[s2 + 8 >> 2];
                  c[q2 + 12 >> 2] = c[s2 + 12 >> 2];
                  q2 = j2 + (h2 * 80 | 0) + 64 | 0;
                  r2 = r2 + (h2 * 80 | 0) + 64 | 0;
                  c[q2 >> 2] = c[r2 >> 2];
                  c[q2 + 4 >> 2] = c[r2 + 4 >> 2];
                  c[q2 + 8 >> 2] = c[r2 + 8 >> 2];
                  c[q2 + 12 >> 2] = c[r2 + 12 >> 2];
                  h2 = h2 + 1 | 0;
                } while ((h2 | 0) != (d2 | 0));
              }
              d2 = c[b2 + 28 >> 2] | 0;
              if (d2 | 0) {
                if (a[b2 + 32 >> 0] | 0) {
                  c[5638] = (c[5638] | 0) + 1;
                  rG(c[d2 + -4 >> 2] | 0);
                }
                c[b2 + 28 >> 2] = 0;
              }
              a[b2 + 32 >> 0] = 1;
              c[b2 + 28 >> 2] = j2;
              c[b2 + 24 >> 2] = m2;
              d2 = c[l2 >> 2] | 0;
            }
            s2 = c[b2 + 28 >> 2] | 0;
            r2 = s2 + (d2 * 80 | 0) | 0;
            c[r2 >> 2] = c[p2 >> 2];
            c[r2 + 4 >> 2] = c[p2 + 4 >> 2];
            c[r2 + 8 >> 2] = c[p2 + 8 >> 2];
            c[r2 + 12 >> 2] = c[p2 + 12 >> 2];
            r2 = s2 + (d2 * 80 | 0) + 16 | 0;
            c[r2 >> 2] = c[p2 + 16 >> 2];
            c[r2 + 4 >> 2] = c[p2 + 16 + 4 >> 2];
            c[r2 + 8 >> 2] = c[p2 + 16 + 8 >> 2];
            c[r2 + 12 >> 2] = c[p2 + 16 + 12 >> 2];
            r2 = s2 + (d2 * 80 | 0) + 32 | 0;
            c[r2 >> 2] = c[p2 + 32 >> 2];
            c[r2 + 4 >> 2] = c[p2 + 32 + 4 >> 2];
            c[r2 + 8 >> 2] = c[p2 + 32 + 8 >> 2];
            c[r2 + 12 >> 2] = c[p2 + 32 + 12 >> 2];
            r2 = s2 + (d2 * 80 | 0) + 48 | 0;
            c[r2 >> 2] = c[p2 + 48 >> 2];
            c[r2 + 4 >> 2] = c[p2 + 48 + 4 >> 2];
            c[r2 + 8 >> 2] = c[p2 + 48 + 8 >> 2];
            c[r2 + 12 >> 2] = c[p2 + 48 + 12 >> 2];
            s2 = s2 + (d2 * 80 | 0) + 64 | 0;
            c[s2 >> 2] = e2;
            c[s2 + 4 >> 2] = n2;
            g[s2 + 8 >> 2] = o2;
            c[s2 + 12 >> 2] = k2;
            c[l2 >> 2] = (c[l2 >> 2] | 0) + 1;
            i = p2;
            return;
          }
          function qv() {
            var a2 = 0;
            c[5637] = (c[5637] | 0) + 1;
            a2 = qG(115) | 0;
            if (!a2)
              a2 = 0;
            else {
              c[(a2 + 4 + 15 & -16) + -4 >> 2] = a2;
              a2 = a2 + 4 + 15 & -16;
            }
            nk(a2, 1, 0);
            return a2 | 0;
          }
          function rv(a2) {
            a2 = a2 | 0;
            var b2 = 0;
            c[5637] = (c[5637] | 0) + 1;
            b2 = qG(115) | 0;
            if (!b2)
              b2 = 0;
            else {
              c[(b2 + 4 + 15 & -16) + -4 >> 2] = b2;
              b2 = b2 + 4 + 15 & -16;
            }
            nk(b2, a2, 0);
            return b2 | 0;
          }
          function sv(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = +b2;
            d2 = d2 | 0;
            Ab[c[(c[a2 >> 2] | 0) + 32 >> 2] & 15](a2, b2, d2);
            return;
          }
          function tv(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            return c[(c[a2 + 28 >> 2] | 0) + (b2 * 80 | 0) + 64 >> 2] | 0;
          }
          function uv(a2) {
            a2 = a2 | 0;
            return + +Hb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
          }
          function vv(a2) {
            a2 = a2 | 0;
            return c[a2 + 20 >> 2] | 0;
          }
          function wv(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            lk(a2, b2);
            return;
          }
          function xv(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            tb[c[(c[a2 >> 2] | 0) + 24 >> 2] & 127](a2, b2);
            return;
          }
          function yv(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            qb[c[(c[a2 >> 2] | 0) + 44 >> 2] & 31](a2, b2);
            return;
          }
          function zv(a2) {
            a2 = a2 | 0;
            if (!a2)
              return;
            rb[c[(c[a2 >> 2] | 0) + 4 >> 2] & 255](a2);
            return;
          }
          function Av(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = +b2;
            d2 = d2 | 0;
            Ab[c[(c[a2 >> 2] | 0) + 32 >> 2] & 15](a2, b2, d2);
            return;
          }
          function Bv(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            tb[c[(c[a2 >> 2] | 0) + 24 >> 2] & 127](a2, b2);
            return;
          }
          function Cv(a2) {
            a2 = a2 | 0;
            if (!a2)
              return;
            rb[c[(c[a2 >> 2] | 0) + 4 >> 2] & 255](a2);
            return;
          }
          function Dv(a2, b2) {
            a2 = +a2;
            b2 = +b2;
            var d2 = 0;
            c[5637] = (c[5637] | 0) + 1;
            d2 = qG(99) | 0;
            if (!d2)
              d2 = 0;
            else {
              c[(d2 + 4 + 15 & -16) + -4 >> 2] = d2;
              d2 = d2 + 4 + 15 & -16;
            }
            c[d2 + 8 >> 2] = 0;
            c[d2 + 12 >> 2] = -1;
            c[d2 + 16 >> 2] = 1065353216;
            c[d2 + 20 >> 2] = 1065353216;
            c[d2 + 24 >> 2] = 1065353216;
            g[d2 + 28 >> 2] = 0;
            g[d2 + 48 >> 2] = 0.03999999910593033;
            g[d2 + 60 >> 2] = a2;
            g[d2 + 64 >> 2] = b2;
            c[d2 + 4 >> 2] = 11;
            g[d2 + 56 >> 2] = a2 / +O(+(a2 * a2 + b2 * b2));
            c[d2 >> 2] = 5456;
            c[d2 + 68 >> 2] = 1;
            c[d2 + 72 >> 2] = 0;
            c[d2 + 76 >> 2] = 2;
            g[d2 + 36 >> 2] = a2;
            g[d2 + 32 >> 2] = b2;
            g[d2 + 40 >> 2] = a2;
            return d2 | 0;
          }
          function Ev(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = +b2;
            d2 = d2 | 0;
            Ab[c[(c[a2 >> 2] | 0) + 32 >> 2] & 15](a2, b2, d2);
            return;
          }
          function Fv(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            tb[c[(c[a2 >> 2] | 0) + 24 >> 2] & 127](a2, b2);
            return;
          }
          function Gv(a2) {
            a2 = a2 | 0;
            if (!a2)
              return;
            rb[c[(c[a2 >> 2] | 0) + 4 >> 2] & 255](a2);
            return;
          }
          function Hv(a2, b2) {
            a2 = +a2;
            b2 = +b2;
            var d2 = 0;
            c[5637] = (c[5637] | 0) + 1;
            d2 = qG(99) | 0;
            if (!d2)
              d2 = 0;
            else {
              c[(d2 + 4 + 15 & -16) + -4 >> 2] = d2;
              d2 = d2 + 4 + 15 & -16;
            }
            c[d2 + 8 >> 2] = 0;
            c[d2 + 12 >> 2] = -1;
            c[d2 + 16 >> 2] = 1065353216;
            c[d2 + 20 >> 2] = 1065353216;
            c[d2 + 24 >> 2] = 1065353216;
            g[d2 + 28 >> 2] = 0;
            g[d2 + 48 >> 2] = 0.03999999910593033;
            g[d2 + 60 >> 2] = a2;
            g[d2 + 64 >> 2] = b2;
            c[d2 + 4 >> 2] = 11;
            g[d2 + 56 >> 2] = a2 / +O(+(a2 * a2 + b2 * b2));
            c[d2 >> 2] = 5356;
            c[d2 + 68 >> 2] = 0;
            c[d2 + 72 >> 2] = 2;
            c[d2 + 76 >> 2] = 1;
            g[d2 + 32 >> 2] = a2;
            g[d2 + 40 >> 2] = b2;
            g[d2 + 36 >> 2] = a2;
            return d2 | 0;
          }
          function Iv(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = +b2;
            d2 = d2 | 0;
            Ab[c[(c[a2 >> 2] | 0) + 32 >> 2] & 15](a2, b2, d2);
            return;
          }
          function Jv(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            tb[c[(c[a2 >> 2] | 0) + 24 >> 2] & 127](a2, b2);
            return;
          }
          function Kv(a2) {
            a2 = a2 | 0;
            if (!a2)
              return;
            rb[c[(c[a2 >> 2] | 0) + 4 >> 2] & 255](a2);
            return;
          }
          function Lv(a2, b2) {
            a2 = +a2;
            b2 = +b2;
            var d2 = 0;
            c[5637] = (c[5637] | 0) + 1;
            d2 = qG(99) | 0;
            if (!d2)
              d2 = 0;
            else {
              c[(d2 + 4 + 15 & -16) + -4 >> 2] = d2;
              d2 = d2 + 4 + 15 & -16;
            }
            c[d2 + 8 >> 2] = 0;
            c[d2 + 12 >> 2] = -1;
            c[d2 + 16 >> 2] = 1065353216;
            c[d2 + 20 >> 2] = 1065353216;
            c[d2 + 24 >> 2] = 1065353216;
            g[d2 + 28 >> 2] = 0;
            g[d2 + 48 >> 2] = 0.03999999910593033;
            c[d2 >> 2] = 5256;
            g[d2 + 60 >> 2] = a2;
            g[d2 + 64 >> 2] = b2;
            c[d2 + 4 >> 2] = 11;
            c[d2 + 68 >> 2] = 0;
            c[d2 + 72 >> 2] = 1;
            c[d2 + 76 >> 2] = 2;
            g[d2 + 32 >> 2] = a2;
            g[d2 + 36 >> 2] = b2;
            g[d2 + 40 >> 2] = a2;
            g[d2 + 56 >> 2] = a2 / +O(+(a2 * a2 + b2 * b2));
            return d2 | 0;
          }
          function Mv(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = +b2;
            d2 = d2 | 0;
            Ab[c[(c[a2 >> 2] | 0) + 32 >> 2] & 15](a2, b2, d2);
            return;
          }
          function Nv(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            tb[c[(c[a2 >> 2] | 0) + 24 >> 2] & 127](a2, b2);
            return;
          }
          function Ov(a2) {
            a2 = a2 | 0;
            if (!a2)
              return;
            rb[c[(c[a2 >> 2] | 0) + 4 >> 2] & 255](a2);
            return;
          }
          function Pv(b2, d2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, h2 = 0, i2 = 0;
            c[5637] = (c[5637] | 0) + 1;
            e2 = qG(627) | 0;
            if (!e2)
              e2 = 0;
            else {
              c[(e2 + 4 + 15 & -16) + -4 >> 2] = e2;
              e2 = e2 + 4 + 15 & -16;
            }
            yq(e2, 5, b2);
            c[e2 >> 2] = 7132;
            h2 = e2 + 300 | 0;
            c[h2 >> 2] = c[d2 >> 2];
            c[h2 + 4 >> 2] = c[d2 + 4 >> 2];
            c[h2 + 8 >> 2] = c[d2 + 8 >> 2];
            c[h2 + 12 >> 2] = c[d2 + 12 >> 2];
            f2 = e2 + 316 | 0;
            c[f2 >> 2] = c[d2 + 16 >> 2];
            c[f2 + 4 >> 2] = c[d2 + 16 + 4 >> 2];
            c[f2 + 8 >> 2] = c[d2 + 16 + 8 >> 2];
            c[f2 + 12 >> 2] = c[d2 + 16 + 12 >> 2];
            b2 = e2 + 332 | 0;
            c[b2 >> 2] = c[d2 + 32 >> 2];
            c[b2 + 4 >> 2] = c[d2 + 32 + 4 >> 2];
            c[b2 + 8 >> 2] = c[d2 + 32 + 8 >> 2];
            c[b2 + 12 >> 2] = c[d2 + 32 + 12 >> 2];
            i2 = e2 + 348 | 0;
            c[i2 >> 2] = c[d2 + 48 >> 2];
            c[i2 + 4 >> 2] = c[d2 + 48 + 4 >> 2];
            c[i2 + 8 >> 2] = c[d2 + 48 + 8 >> 2];
            c[i2 + 12 >> 2] = c[d2 + 48 + 12 >> 2];
            d2 = e2 + 364 | 0;
            a[e2 + 527 >> 0] = 0;
            c[d2 >> 2] = c[h2 >> 2];
            c[d2 + 4 >> 2] = c[h2 + 4 >> 2];
            c[d2 + 8 >> 2] = c[h2 + 8 >> 2];
            c[d2 + 12 >> 2] = c[h2 + 12 >> 2];
            d2 = e2 + 380 | 0;
            c[d2 >> 2] = c[f2 >> 2];
            c[d2 + 4 >> 2] = c[f2 + 4 >> 2];
            c[d2 + 8 >> 2] = c[f2 + 8 >> 2];
            c[d2 + 12 >> 2] = c[f2 + 12 >> 2];
            d2 = e2 + 396 | 0;
            c[d2 >> 2] = c[b2 >> 2];
            c[d2 + 4 >> 2] = c[b2 + 4 >> 2];
            c[d2 + 8 >> 2] = c[b2 + 8 >> 2];
            c[d2 + 12 >> 2] = c[b2 + 12 >> 2];
            d2 = e2 + 412 | 0;
            a[e2 + 524 >> 0] = 0;
            a[e2 + 525 >> 0] = 0;
            a[e2 + 526 >> 0] = 0;
            a[e2 + 552 >> 0] = 0;
            c[d2 >> 2] = 0;
            c[d2 + 4 >> 2] = 0;
            c[d2 + 8 >> 2] = 0;
            c[d2 + 12 >> 2] = 0;
            g[e2 + 572 >> 2] = -1;
            g[e2 + 444 >> 2] = 999999984306749400;
            g[e2 + 448 >> 2] = 999999984306749400;
            g[e2 + 452 >> 2] = 999999984306749400;
            g[e2 + 428 >> 2] = 1;
            g[e2 + 432 >> 2] = 0.30000001192092896;
            g[e2 + 436 >> 2] = 1;
            g[e2 + 440 >> 2] = 0.009999999776482582;
            g[e2 + 456 >> 2] = 0.05000000074505806;
            c[e2 + 592 >> 2] = 0;
            g[e2 + 596 >> 2] = 0;
            g[e2 + 600 >> 2] = 0.699999988079071;
            g[e2 + 604 >> 2] = 0;
            return e2 | 0;
          }
          function Qv(b2, d2, e2, f2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            var h2 = 0;
            c[5637] = (c[5637] | 0) + 1;
            h2 = qG(627) | 0;
            if (!h2)
              h2 = 0;
            else {
              c[(h2 + 4 + 15 & -16) + -4 >> 2] = h2;
              h2 = h2 + 4 + 15 & -16;
            }
            c[h2 + 4 >> 2] = 5;
            c[h2 + 8 >> 2] = -1;
            c[h2 + 12 >> 2] = -1;
            g[h2 + 16 >> 2] = 34028234663852886e22;
            a[h2 + 20 >> 0] = 1;
            a[h2 + 21 >> 0] = 0;
            c[h2 + 24 >> 2] = -1;
            c[h2 + 28 >> 2] = b2;
            c[h2 + 32 >> 2] = d2;
            g[h2 + 36 >> 2] = 0;
            g[h2 + 40 >> 2] = 0.30000001192092896;
            c[h2 + 44 >> 2] = 0;
            c[h2 >> 2] = 7132;
            d2 = h2 + 300 | 0;
            c[d2 >> 2] = c[e2 >> 2];
            c[d2 + 4 >> 2] = c[e2 + 4 >> 2];
            c[d2 + 8 >> 2] = c[e2 + 8 >> 2];
            c[d2 + 12 >> 2] = c[e2 + 12 >> 2];
            d2 = h2 + 316 | 0;
            c[d2 >> 2] = c[e2 + 16 >> 2];
            c[d2 + 4 >> 2] = c[e2 + 16 + 4 >> 2];
            c[d2 + 8 >> 2] = c[e2 + 16 + 8 >> 2];
            c[d2 + 12 >> 2] = c[e2 + 16 + 12 >> 2];
            d2 = h2 + 332 | 0;
            c[d2 >> 2] = c[e2 + 32 >> 2];
            c[d2 + 4 >> 2] = c[e2 + 32 + 4 >> 2];
            c[d2 + 8 >> 2] = c[e2 + 32 + 8 >> 2];
            c[d2 + 12 >> 2] = c[e2 + 32 + 12 >> 2];
            d2 = h2 + 348 | 0;
            c[d2 >> 2] = c[e2 + 48 >> 2];
            c[d2 + 4 >> 2] = c[e2 + 48 + 4 >> 2];
            c[d2 + 8 >> 2] = c[e2 + 48 + 8 >> 2];
            c[d2 + 12 >> 2] = c[e2 + 48 + 12 >> 2];
            e2 = h2 + 364 | 0;
            c[e2 >> 2] = c[f2 >> 2];
            c[e2 + 4 >> 2] = c[f2 + 4 >> 2];
            c[e2 + 8 >> 2] = c[f2 + 8 >> 2];
            c[e2 + 12 >> 2] = c[f2 + 12 >> 2];
            e2 = h2 + 380 | 0;
            c[e2 >> 2] = c[f2 + 16 >> 2];
            c[e2 + 4 >> 2] = c[f2 + 16 + 4 >> 2];
            c[e2 + 8 >> 2] = c[f2 + 16 + 8 >> 2];
            c[e2 + 12 >> 2] = c[f2 + 16 + 12 >> 2];
            e2 = h2 + 396 | 0;
            c[e2 >> 2] = c[f2 + 32 >> 2];
            c[e2 + 4 >> 2] = c[f2 + 32 + 4 >> 2];
            c[e2 + 8 >> 2] = c[f2 + 32 + 8 >> 2];
            c[e2 + 12 >> 2] = c[f2 + 32 + 12 >> 2];
            e2 = h2 + 412 | 0;
            c[e2 >> 2] = c[f2 + 48 >> 2];
            c[e2 + 4 >> 2] = c[f2 + 48 + 4 >> 2];
            c[e2 + 8 >> 2] = c[f2 + 48 + 8 >> 2];
            c[e2 + 12 >> 2] = c[f2 + 48 + 12 >> 2];
            a[h2 + 552 >> 0] = 0;
            c[h2 + 524 >> 2] = 0;
            g[h2 + 572 >> 2] = -1;
            g[h2 + 444 >> 2] = 999999984306749400;
            g[h2 + 448 >> 2] = 999999984306749400;
            g[h2 + 452 >> 2] = 999999984306749400;
            g[h2 + 428 >> 2] = 1;
            g[h2 + 432 >> 2] = 0.30000001192092896;
            g[h2 + 436 >> 2] = 1;
            g[h2 + 440 >> 2] = 0.009999999776482582;
            g[h2 + 456 >> 2] = 0.05000000074505806;
            c[h2 + 592 >> 2] = 0;
            g[h2 + 596 >> 2] = 0;
            g[h2 + 600 >> 2] = 0.699999988079071;
            g[h2 + 604 >> 2] = 0;
            return h2 | 0;
          }
          function Rv(b2, c2) {
            b2 = b2 | 0;
            c2 = c2 | 0;
            a[b2 + 21 >> 0] = c2 & 1;
            return;
          }
          function Sv(b2, c2) {
            b2 = b2 | 0;
            c2 = c2 | 0;
            a[b2 + 552 >> 0] = c2 & 1;
            return;
          }
          function Tv(a2) {
            a2 = a2 | 0;
            return + +g[a2 + 16 >> 2];
          }
          function Uv(b2, c2) {
            b2 = b2 | 0;
            c2 = c2 | 0;
            a[b2 + 524 >> 0] = c2 & 1;
            return;
          }
          function Vv(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            g[a2 + 16 >> 2] = b2;
            return;
          }
          function Wv(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            g[a2 + 440 >> 2] = b2;
            return;
          }
          function Xv(a2, b2, c2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = +c2;
            switch (b2 | 0) {
              case 3: {
                g[a2 + 452 >> 2] = c2;
                return;
              }
              case 4: {
                g[a2 + 448 >> 2] = c2;
                return;
              }
              case 5: {
                g[a2 + 444 >> 2] = c2;
                return;
              }
              default:
                return;
            }
          }
          function Yv(b2, c2) {
            b2 = b2 | 0;
            c2 = +c2;
            g[b2 + 572 >> 2] = c2;
            a[b2 + 553 >> 0] = 1;
            return;
          }
          function Zv(b2, c2) {
            b2 = b2 | 0;
            c2 = +c2;
            g[b2 + 572 >> 2] = c2;
            a[b2 + 553 >> 0] = 0;
            return;
          }
          function _v(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            To(a2, b2);
            return;
          }
          function $v(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var c2 = 0, d2 = 0, e2 = 0, f2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0;
            c2 = i;
            i = i + 48 | 0;
            _f(a2 + 364 | 0, c2 + 16 | 0);
            h2 = -+g[c2 + 16 >> 2];
            e2 = -+g[c2 + 16 + 4 >> 2];
            m2 = -+g[c2 + 16 + 8 >> 2];
            l2 = +g[c2 + 16 + 12 >> 2];
            f2 = +g[b2 >> 2];
            n2 = +g[b2 + 12 >> 2];
            k2 = +g[b2 + 8 >> 2];
            j2 = +g[b2 + 4 >> 2];
            _f(a2 + 300 | 0, c2);
            p2 = +g[c2 >> 2];
            q2 = +g[c2 + 12 >> 2];
            d2 = +g[c2 + 8 >> 2];
            o2 = +g[c2 + 4 >> 2];
            g[c2 + 32 >> 2] = p2 * (l2 * n2 - f2 * h2 - j2 * e2 - k2 * m2) + (l2 * f2 + n2 * h2 + k2 * e2 - j2 * m2) * q2 + (f2 * m2 + (n2 * e2 + l2 * j2) - k2 * h2) * d2 - (n2 * m2 + l2 * k2 + j2 * h2 - f2 * e2) * o2;
            g[c2 + 32 + 4 >> 2] = p2 * (n2 * m2 + l2 * k2 + j2 * h2 - f2 * e2) + (q2 * (f2 * m2 + (n2 * e2 + l2 * j2) - k2 * h2) + (l2 * n2 - f2 * h2 - j2 * e2 - k2 * m2) * o2) - (l2 * f2 + n2 * h2 + k2 * e2 - j2 * m2) * d2;
            g[c2 + 32 + 8 >> 2] = q2 * (n2 * m2 + l2 * k2 + j2 * h2 - f2 * e2) + (l2 * n2 - f2 * h2 - j2 * e2 - k2 * m2) * d2 + (l2 * f2 + n2 * h2 + k2 * e2 - j2 * m2) * o2 - p2 * (f2 * m2 + (n2 * e2 + l2 * j2) - k2 * h2);
            g[c2 + 32 + 12 >> 2] = (l2 * n2 - f2 * h2 - j2 * e2 - k2 * m2) * q2 - p2 * (l2 * f2 + n2 * h2 + k2 * e2 - j2 * m2) - (f2 * m2 + (n2 * e2 + l2 * j2) - k2 * h2) * o2 - (n2 * m2 + l2 * k2 + j2 * h2 - f2 * e2) * d2;
            To(a2, c2 + 32 | 0);
            i = c2;
            return;
          }
          function aw(a2) {
            a2 = a2 | 0;
            if (!a2)
              return;
            rG(a2);
            return;
          }
          function bw() {
            var a2 = 0, b2 = 0;
            while (1) {
              a2 = qG(12) | 0;
              if (a2 | 0) {
                b2 = 6;
                break;
              }
              a2 = c[5831] | 0;
              c[5831] = a2 + 0;
              if (!a2) {
                b2 = 5;
                break;
              }
              _b[a2 & 3]();
            }
            if ((b2 | 0) == 5) {
              b2 = Va(4) | 0;
              c[b2 >> 2] = 8308;
              hb(b2 | 0, 2416, 215);
            } else if ((b2 | 0) == 6) {
              g[a2 >> 2] = 0.30000001192092896;
              g[a2 + 4 >> 2] = 1;
              g[a2 + 8 >> 2] = 0;
              return a2 | 0;
            }
            return 0;
          }
          function cw(a2) {
            a2 = a2 | 0;
            return + +g[a2 + 4 >> 2];
          }
          function dw(a2) {
            a2 = a2 | 0;
            return + +g[a2 + 8 >> 2];
          }
          function ew(a2) {
            a2 = a2 | 0;
            return + +g[a2 >> 2];
          }
          function fw(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            g[a2 + 4 >> 2] = b2;
            return;
          }
          function gw(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            g[a2 + 8 >> 2] = b2;
            return;
          }
          function hw(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            g[a2 >> 2] = b2;
            return;
          }
          function iw(a2) {
            a2 = a2 | 0;
            if (!a2)
              return;
            rb[c[(c[a2 >> 2] | 0) + 4 >> 2] & 255](a2);
            return;
          }
          function jw(a2) {
            a2 = a2 | 0;
            if (!a2)
              return;
            rG(a2);
            return;
          }
          function kw(a2) {
            a2 = a2 | 0;
            return ~~+g[a2 + 48 >> 2] | 0;
          }
          function lw(a2) {
            a2 = a2 | 0;
            return (c[a2 + 44 >> 2] | 0) != 0 | 0;
          }
          function mw(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            g[a2 + 48 >> 2] = +(b2 | 0);
            return;
          }
          function nw(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c[a2 + 44 >> 2] = b2 & 1;
            return;
          }
          function ow(a2) {
            a2 = a2 | 0;
            if (!a2)
              return;
            rb[c[(c[a2 >> 2] | 0) + 4 >> 2] & 255](a2);
            return;
          }
          function pw(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            Xk(a2, b2, 1);
            return;
          }
          function qw(a2, b2, c2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            Xk(a2, b2, c2);
            return;
          }
          function rw() {
            var a2 = 0;
            c[5637] = (c[5637] | 0) + 1;
            a2 = qG(135) | 0;
            if (!a2)
              a2 = 0;
            else {
              c[(a2 + 4 + 15 & -16) + -4 >> 2] = a2;
              a2 = a2 + 4 + 15 & -16;
            }
            Wk(a2, 0, 0, 16);
            return a2 | 0;
          }
          function sw(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = +b2;
            d2 = d2 | 0;
            Ab[c[(c[a2 >> 2] | 0) + 32 >> 2] & 15](a2, b2, d2);
            return;
          }
          function tw(a2) {
            a2 = a2 | 0;
            return + +Hb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
          }
          function uw(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            tb[c[(c[a2 >> 2] | 0) + 24 >> 2] & 127](a2, b2);
            return;
          }
          function vw(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            qb[c[(c[a2 >> 2] | 0) + 44 >> 2] & 31](a2, b2);
            return;
          }
          function ww(a2) {
            a2 = a2 | 0;
            if (!a2)
              return;
            rb[c[(c[a2 >> 2] | 0) + 4 >> 2] & 255](a2);
            return;
          }
          function xw(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = +b2;
            d2 = d2 | 0;
            Ab[c[(c[a2 >> 2] | 0) + 32 >> 2] & 15](a2, b2, d2);
            return;
          }
          function yw(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            tb[c[(c[a2 >> 2] | 0) + 24 >> 2] & 127](a2, b2);
            return;
          }
          function zw(a2) {
            a2 = a2 | 0;
            if (!a2)
              return;
            rb[c[(c[a2 >> 2] | 0) + 4 >> 2] & 255](a2);
            return;
          }
          function Aw(a2) {
            a2 = a2 | 0;
            var b2 = 0;
            c[5637] = (c[5637] | 0) + 1;
            b2 = qG(119) | 0;
            if (!b2)
              b2 = 0;
            else {
              c[(b2 + 4 + 15 & -16) + -4 >> 2] = b2;
              b2 = b2 + 4 + 15 & -16;
            }
            xl(b2, a2, 1);
            return b2 | 0;
          }
          function Bw(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0;
            c[5637] = (c[5637] | 0) + 1;
            d2 = qG(119) | 0;
            if (!d2)
              d2 = 0;
            else {
              c[(d2 + 4 + 15 & -16) + -4 >> 2] = d2;
              d2 = d2 + 4 + 15 & -16;
            }
            xl(d2, a2, b2);
            return d2 | 0;
          }
          function Cw(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = +b2;
            d2 = d2 | 0;
            Ab[c[(c[a2 >> 2] | 0) + 32 >> 2] & 15](a2, b2, d2);
            return;
          }
          function Dw(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            tb[c[(c[a2 >> 2] | 0) + 24 >> 2] & 127](a2, b2);
            return;
          }
          function Ew(a2) {
            a2 = a2 | 0;
            if (!a2)
              return;
            rb[c[(c[a2 >> 2] | 0) + 4 >> 2] & 255](a2);
            return;
          }
          function Fw(a2) {
            a2 = a2 | 0;
            var b2 = 0;
            c[5637] = (c[5637] | 0) + 1;
            b2 = qG(79) | 0;
            if (!b2)
              b2 = 0;
            else {
              c[(b2 + 4 + 15 & -16) + -4 >> 2] = b2;
              b2 = b2 + 4 + 15 & -16;
            }
            Vl(b2, a2);
            c[b2 >> 2] = 5960;
            c[b2 + 56 >> 2] = 0;
            return b2 | 0;
          }
          function Gw(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = +b2;
            d2 = d2 | 0;
            Ab[c[(c[a2 >> 2] | 0) + 32 >> 2] & 15](a2, b2, d2);
            return;
          }
          function Hw(a2) {
            a2 = a2 | 0;
            return + +Hb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
          }
          function Iw(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            tb[c[(c[a2 >> 2] | 0) + 24 >> 2] & 127](a2, b2);
            return;
          }
          function Jw(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            qb[c[(c[a2 >> 2] | 0) + 44 >> 2] & 31](a2, b2);
            return;
          }
          function Kw(a2) {
            a2 = a2 | 0;
            if (!a2)
              return;
            rb[c[(c[a2 >> 2] | 0) + 4 >> 2] & 255](a2);
            return;
          }
          function Lw(a2) {
            a2 = a2 | 0;
            var b2 = 0;
            c[5637] = (c[5637] | 0) + 1;
            b2 = qG(79) | 0;
            if (!b2)
              b2 = 0;
            else {
              c[(b2 + 4 + 15 & -16) + -4 >> 2] = b2;
              b2 = b2 + 4 + 15 & -16;
            }
            Vl(b2, a2);
            c[b2 >> 2] = 6064;
            c[b2 + 56 >> 2] = 2;
            return b2 | 0;
          }
          function Mw(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = +b2;
            d2 = d2 | 0;
            Ab[c[(c[a2 >> 2] | 0) + 32 >> 2] & 15](a2, b2, d2);
            return;
          }
          function Nw(a2) {
            a2 = a2 | 0;
            return + +Hb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
          }
          function Ow(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            tb[c[(c[a2 >> 2] | 0) + 24 >> 2] & 127](a2, b2);
            return;
          }
          function Pw(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            qb[c[(c[a2 >> 2] | 0) + 44 >> 2] & 31](a2, b2);
            return;
          }
          function Qw(a2) {
            a2 = a2 | 0;
            if (!a2)
              return;
            rb[c[(c[a2 >> 2] | 0) + 4 >> 2] & 255](a2);
            return;
          }
          function Rw(a2) {
            a2 = a2 | 0;
            var b2 = 0;
            c[5637] = (c[5637] | 0) + 1;
            b2 = qG(79) | 0;
            if (!b2)
              b2 = 0;
            else {
              c[(b2 + 4 + 15 & -16) + -4 >> 2] = b2;
              b2 = b2 + 4 + 15 & -16;
            }
            Vl(b2, a2);
            return b2 | 0;
          }
          function Sw(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = +b2;
            d2 = d2 | 0;
            Ab[c[(c[a2 >> 2] | 0) + 32 >> 2] & 15](a2, b2, d2);
            return;
          }
          function Tw(a2) {
            a2 = a2 | 0;
            return + +Hb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
          }
          function Uw(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            tb[c[(c[a2 >> 2] | 0) + 24 >> 2] & 127](a2, b2);
            return;
          }
          function Vw(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            qb[c[(c[a2 >> 2] | 0) + 44 >> 2] & 31](a2, b2);
            return;
          }
          function Ww(a2) {
            a2 = a2 | 0;
            if (!a2)
              return;
            rb[c[(c[a2 >> 2] | 0) + 4 >> 2] & 255](a2);
            return;
          }
          function Xw() {
            var a2 = 0, b2 = 0;
            while (1) {
              a2 = qG(196) | 0;
              if (a2 | 0) {
                b2 = 6;
                break;
              }
              a2 = c[5831] | 0;
              c[5831] = a2 + 0;
              if (!a2) {
                b2 = 5;
                break;
              }
              _b[a2 & 3]();
            }
            if ((b2 | 0) == 5) {
              b2 = Va(4) | 0;
              c[b2 >> 2] = 8308;
              hb(b2 | 0, 2416, 215);
            } else if ((b2 | 0) == 6) {
              Gd(a2, 0);
              return a2 | 0;
            }
            return 0;
          }
          function Yw(a2) {
            a2 = a2 | 0;
            if (!a2)
              return;
            rb[c[(c[a2 >> 2] | 0) + 4 >> 2] & 255](a2);
            return;
          }
          function Zw() {
            var a2 = 0, b2 = 0, d2 = 0;
            d2 = i;
            i = i + 32 | 0;
            while (1) {
              a2 = qG(92) | 0;
              if (a2 | 0) {
                b2 = 6;
                break;
              }
              a2 = c[5831] | 0;
              c[5831] = a2 + 0;
              if (!a2) {
                b2 = 5;
                break;
              }
              _b[a2 & 3]();
            }
            if ((b2 | 0) == 5) {
              d2 = Va(4) | 0;
              c[d2 >> 2] = 8308;
              hb(d2 | 0, 2416, 215);
            } else if ((b2 | 0) == 6) {
              c[d2 >> 2] = 0;
              c[d2 + 4 >> 2] = 0;
              c[d2 + 8 >> 2] = 4096;
              c[d2 + 12 >> 2] = 4096;
              c[d2 + 16 >> 2] = 0;
              c[d2 + 20 >> 2] = 1;
              Ih(a2, d2);
              i = d2;
              return a2 | 0;
            }
            return 0;
          }
          function _w(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0;
            while (1) {
              b2 = qG(92) | 0;
              if (b2 | 0) {
                d2 = 6;
                break;
              }
              b2 = c[5831] | 0;
              c[5831] = b2 + 0;
              if (!b2) {
                d2 = 5;
                break;
              }
              _b[b2 & 3]();
            }
            if ((d2 | 0) == 5) {
              a2 = Va(4) | 0;
              c[a2 >> 2] = 8308;
              hb(a2 | 0, 2416, 215);
            } else if ((d2 | 0) == 6) {
              Ih(b2, a2);
              return b2 | 0;
            }
            return 0;
          }
          function $w(a2) {
            a2 = a2 | 0;
            if (!a2)
              return;
            rG(a2);
            return;
          }
          function ax() {
            var a2 = 0, b2 = 0;
            while (1) {
              a2 = qG(24) | 0;
              if (a2 | 0) {
                b2 = 6;
                break;
              }
              a2 = c[5831] | 0;
              c[5831] = a2 + 0;
              if (!a2) {
                b2 = 5;
                break;
              }
              _b[a2 & 3]();
            }
            if ((b2 | 0) == 5) {
              b2 = Va(4) | 0;
              c[b2 >> 2] = 8308;
              hb(b2 | 0, 2416, 215);
            } else if ((b2 | 0) == 6) {
              c[a2 >> 2] = 0;
              c[a2 + 4 >> 2] = 0;
              c[a2 + 8 >> 2] = 4096;
              c[a2 + 12 >> 2] = 4096;
              c[a2 + 16 >> 2] = 0;
              c[a2 + 20 >> 2] = 1;
              return a2 | 0;
            }
            return 0;
          }
          function bx(a2) {
            a2 = a2 | 0;
            if (!a2)
              return;
            rb[c[(c[a2 >> 2] | 0) + 4 >> 2] & 255](a2);
            return;
          }
          function cx() {
            var b2 = 0, d2 = 0;
            c[5637] = (c[5637] | 0) + 1;
            b2 = qG(219) | 0;
            if (!b2)
              b2 = 0;
            else {
              c[(b2 + 4 + 15 & -16) + -4 >> 2] = b2;
              b2 = b2 + 4 + 15 & -16;
            }
            if (!(a[19848] | 0)) {
              a[19848] = 1;
              if (!(a[19856] | 0)) {
                a[19856] = 1;
                c[5017] = 1065353216;
                c[5018] = 0;
                c[5019] = 0;
                c[5020] = 0;
                c[5021] = 0;
                c[5022] = 1065353216;
                c[5023] = 0;
                c[5024] = 0;
                c[5025] = 0;
                c[5026] = 0;
                c[5027] = 1065353216;
                g[5028] = 0;
              }
              ;
              c[5029] = c[5017];
              c[5030] = c[5018];
              c[5031] = c[5019];
              c[5032] = c[5020];
              c[5033] = c[5021];
              c[5034] = c[5022];
              c[5035] = c[5023];
              c[5036] = c[5024];
              c[5037] = c[5025];
              c[5038] = c[5026];
              c[5039] = c[5027];
              c[5040] = c[5028];
              c[5041] = 0;
              c[5042] = 0;
              c[5043] = 0;
              c[5044] = 0;
            }
            if (!(a[19848] | 0)) {
              a[19848] = 1;
              if (!(a[19856] | 0)) {
                a[19856] = 1;
                c[5017] = 1065353216;
                c[5018] = 0;
                c[5019] = 0;
                c[5020] = 0;
                c[5021] = 0;
                c[5022] = 1065353216;
                c[5023] = 0;
                c[5024] = 0;
                c[5025] = 0;
                c[5026] = 0;
                c[5027] = 1065353216;
                g[5028] = 0;
              }
              ;
              c[5029] = c[5017];
              c[5030] = c[5018];
              c[5031] = c[5019];
              c[5032] = c[5020];
              c[5033] = c[5021];
              c[5034] = c[5022];
              c[5035] = c[5023];
              c[5036] = c[5024];
              c[5037] = c[5025];
              c[5038] = c[5026];
              c[5039] = c[5027];
              c[5040] = c[5028];
              c[5041] = 0;
              c[5042] = 0;
              c[5043] = 0;
              c[5044] = 0;
            }
            c[b2 >> 2] = 8060;
            d2 = b2 + 4 | 0;
            c[d2 >> 2] = c[5029];
            c[d2 + 4 >> 2] = c[5030];
            c[d2 + 8 >> 2] = c[5031];
            c[d2 + 12 >> 2] = c[5032];
            d2 = b2 + 20 | 0;
            c[d2 >> 2] = c[5033];
            c[d2 + 4 >> 2] = c[5034];
            c[d2 + 8 >> 2] = c[5035];
            c[d2 + 12 >> 2] = c[5036];
            d2 = b2 + 36 | 0;
            c[d2 >> 2] = c[5037];
            c[d2 + 4 >> 2] = c[5038];
            c[d2 + 8 >> 2] = c[5039];
            c[d2 + 12 >> 2] = c[5040];
            d2 = b2 + 52 | 0;
            c[d2 >> 2] = c[5041];
            c[d2 + 4 >> 2] = c[5042];
            c[d2 + 8 >> 2] = c[5043];
            c[d2 + 12 >> 2] = c[5044];
            d2 = b2 + 68 | 0;
            c[d2 >> 2] = c[5029];
            c[d2 + 4 >> 2] = c[5030];
            c[d2 + 8 >> 2] = c[5031];
            c[d2 + 12 >> 2] = c[5032];
            d2 = b2 + 84 | 0;
            c[d2 >> 2] = c[5033];
            c[d2 + 4 >> 2] = c[5034];
            c[d2 + 8 >> 2] = c[5035];
            c[d2 + 12 >> 2] = c[5036];
            d2 = b2 + 100 | 0;
            c[d2 >> 2] = c[5037];
            c[d2 + 4 >> 2] = c[5038];
            c[d2 + 8 >> 2] = c[5039];
            c[d2 + 12 >> 2] = c[5040];
            d2 = b2 + 116 | 0;
            c[d2 >> 2] = c[5041];
            c[d2 + 4 >> 2] = c[5042];
            c[d2 + 8 >> 2] = c[5043];
            c[d2 + 12 >> 2] = c[5044];
            d2 = b2 + 132 | 0;
            c[d2 >> 2] = c[5029];
            c[d2 + 4 >> 2] = c[5030];
            c[d2 + 8 >> 2] = c[5031];
            c[d2 + 12 >> 2] = c[5032];
            d2 = b2 + 148 | 0;
            c[d2 >> 2] = c[5033];
            c[d2 + 4 >> 2] = c[5034];
            c[d2 + 8 >> 2] = c[5035];
            c[d2 + 12 >> 2] = c[5036];
            d2 = b2 + 164 | 0;
            c[d2 >> 2] = c[5037];
            c[d2 + 4 >> 2] = c[5038];
            c[d2 + 8 >> 2] = c[5039];
            c[d2 + 12 >> 2] = c[5040];
            d2 = b2 + 180 | 0;
            c[d2 >> 2] = c[5041];
            c[d2 + 4 >> 2] = c[5042];
            c[d2 + 8 >> 2] = c[5043];
            c[d2 + 12 >> 2] = c[5044];
            c[b2 + 196 >> 2] = 0;
            return b2 | 0;
          }
          function dx(a2) {
            a2 = a2 | 0;
            return;
          }
          function ex(a2) {
            a2 = a2 | 0;
            if (!a2)
              return;
            c[5638] = (c[5638] | 0) + 1;
            rG(c[a2 + -4 >> 2] | 0);
            return;
          }
          function fx(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var c2 = 0, d2 = 0, e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0;
            r2 = +g[a2 + 68 >> 2];
            o2 = +g[a2 + 84 >> 2];
            l2 = +g[a2 + 100 >> 2];
            q2 = +g[a2 + 72 >> 2];
            n2 = +g[a2 + 88 >> 2];
            j2 = +g[a2 + 104 >> 2];
            p2 = +g[a2 + 76 >> 2];
            m2 = +g[a2 + 92 >> 2];
            h2 = +g[a2 + 108 >> 2];
            z2 = -+g[a2 + 116 >> 2];
            y2 = -+g[a2 + 120 >> 2];
            c2 = -+g[a2 + 124 >> 2];
            x2 = +g[a2 + 4 >> 2];
            w2 = +g[a2 + 8 >> 2];
            v2 = +g[a2 + 12 >> 2];
            u2 = +g[a2 + 20 >> 2];
            t2 = +g[a2 + 24 >> 2];
            s2 = +g[a2 + 28 >> 2];
            k2 = +g[a2 + 36 >> 2];
            i2 = +g[a2 + 40 >> 2];
            f2 = +g[a2 + 44 >> 2];
            e2 = x2 * (r2 * z2 + o2 * y2 + l2 * c2) + (q2 * z2 + n2 * y2 + j2 * c2) * w2 + (p2 * z2 + m2 * y2 + h2 * c2) * v2 + +g[a2 + 52 >> 2];
            d2 = (r2 * z2 + o2 * y2 + l2 * c2) * u2 + (q2 * z2 + n2 * y2 + j2 * c2) * t2 + (p2 * z2 + m2 * y2 + h2 * c2) * s2 + +g[a2 + 56 >> 2];
            c2 = (r2 * z2 + o2 * y2 + l2 * c2) * k2 + (q2 * z2 + n2 * y2 + j2 * c2) * i2 + (p2 * z2 + m2 * y2 + h2 * c2) * f2 + +g[a2 + 60 >> 2];
            g[b2 >> 2] = r2 * x2 + q2 * w2 + p2 * v2;
            g[b2 + 4 >> 2] = o2 * x2 + n2 * w2 + m2 * v2;
            g[b2 + 8 >> 2] = l2 * x2 + j2 * w2 + h2 * v2;
            g[b2 + 12 >> 2] = 0;
            g[b2 + 16 >> 2] = r2 * u2 + q2 * t2 + p2 * s2;
            g[b2 + 20 >> 2] = o2 * u2 + n2 * t2 + m2 * s2;
            g[b2 + 24 >> 2] = l2 * u2 + j2 * t2 + h2 * s2;
            g[b2 + 28 >> 2] = 0;
            g[b2 + 32 >> 2] = r2 * k2 + q2 * i2 + p2 * f2;
            g[b2 + 36 >> 2] = o2 * k2 + n2 * i2 + m2 * f2;
            g[b2 + 40 >> 2] = l2 * k2 + j2 * i2 + h2 * f2;
            g[b2 + 44 >> 2] = 0;
            g[b2 + 48 >> 2] = e2;
            g[b2 + 52 >> 2] = d2;
            g[b2 + 56 >> 2] = c2;
            g[b2 + 60 >> 2] = 0;
            return;
          }
          function gx(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var c2 = 0, d2 = 0, e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0;
            r2 = +g[a2 + 68 >> 2];
            x2 = +g[b2 >> 2];
            q2 = +g[a2 + 84 >> 2];
            w2 = +g[b2 + 4 >> 2];
            p2 = +g[a2 + 100 >> 2];
            v2 = +g[b2 + 8 >> 2];
            o2 = +g[a2 + 72 >> 2];
            n2 = +g[a2 + 88 >> 2];
            m2 = +g[a2 + 104 >> 2];
            l2 = +g[a2 + 76 >> 2];
            j2 = +g[a2 + 92 >> 2];
            h2 = +g[a2 + 108 >> 2];
            u2 = +g[b2 + 16 >> 2];
            t2 = +g[b2 + 20 >> 2];
            s2 = +g[b2 + 24 >> 2];
            k2 = +g[b2 + 32 >> 2];
            i2 = +g[b2 + 36 >> 2];
            f2 = +g[b2 + 40 >> 2];
            z2 = +g[a2 + 116 >> 2];
            y2 = +g[a2 + 120 >> 2];
            c2 = +g[a2 + 124 >> 2];
            e2 = +g[b2 + 48 >> 2] + (x2 * z2 + w2 * y2 + v2 * c2);
            d2 = u2 * z2 + t2 * y2 + s2 * c2 + +g[b2 + 52 >> 2];
            c2 = k2 * z2 + i2 * y2 + f2 * c2 + +g[b2 + 56 >> 2];
            g[a2 + 4 >> 2] = r2 * x2 + q2 * w2 + p2 * v2;
            g[a2 + 8 >> 2] = x2 * o2 + w2 * n2 + v2 * m2;
            g[a2 + 12 >> 2] = x2 * l2 + w2 * j2 + v2 * h2;
            g[a2 + 16 >> 2] = 0;
            g[a2 + 20 >> 2] = r2 * u2 + q2 * t2 + p2 * s2;
            g[a2 + 24 >> 2] = o2 * u2 + n2 * t2 + m2 * s2;
            g[a2 + 28 >> 2] = l2 * u2 + j2 * t2 + h2 * s2;
            g[a2 + 32 >> 2] = 0;
            g[a2 + 36 >> 2] = r2 * k2 + q2 * i2 + p2 * f2;
            g[a2 + 40 >> 2] = o2 * k2 + n2 * i2 + m2 * f2;
            g[a2 + 44 >> 2] = l2 * k2 + j2 * i2 + h2 * f2;
            g[a2 + 48 >> 2] = 0;
            g[a2 + 52 >> 2] = e2;
            g[a2 + 56 >> 2] = d2;
            g[a2 + 60 >> 2] = c2;
            g[a2 + 64 >> 2] = 0;
            return;
          }
          function hx(b2) {
            b2 = b2 | 0;
            var d2 = 0, e2 = 0;
            c[5637] = (c[5637] | 0) + 1;
            d2 = qG(219) | 0;
            if (!d2)
              d2 = 0;
            else {
              c[(d2 + 4 + 15 & -16) + -4 >> 2] = d2;
              d2 = d2 + 4 + 15 & -16;
            }
            if (!(a[19848] | 0)) {
              a[19848] = 1;
              if (!(a[19856] | 0)) {
                a[19856] = 1;
                c[5017] = 1065353216;
                c[5018] = 0;
                c[5019] = 0;
                c[5020] = 0;
                c[5021] = 0;
                c[5022] = 1065353216;
                c[5023] = 0;
                c[5024] = 0;
                c[5025] = 0;
                c[5026] = 0;
                c[5027] = 1065353216;
                g[5028] = 0;
              }
              ;
              c[5029] = c[5017];
              c[5030] = c[5018];
              c[5031] = c[5019];
              c[5032] = c[5020];
              c[5033] = c[5021];
              c[5034] = c[5022];
              c[5035] = c[5023];
              c[5036] = c[5024];
              c[5037] = c[5025];
              c[5038] = c[5026];
              c[5039] = c[5027];
              c[5040] = c[5028];
              c[5041] = 0;
              c[5042] = 0;
              c[5043] = 0;
              c[5044] = 0;
            }
            c[d2 >> 2] = 8060;
            e2 = d2 + 4 | 0;
            c[e2 >> 2] = c[b2 >> 2];
            c[e2 + 4 >> 2] = c[b2 + 4 >> 2];
            c[e2 + 8 >> 2] = c[b2 + 8 >> 2];
            c[e2 + 12 >> 2] = c[b2 + 12 >> 2];
            e2 = d2 + 20 | 0;
            c[e2 >> 2] = c[b2 + 16 >> 2];
            c[e2 + 4 >> 2] = c[b2 + 16 + 4 >> 2];
            c[e2 + 8 >> 2] = c[b2 + 16 + 8 >> 2];
            c[e2 + 12 >> 2] = c[b2 + 16 + 12 >> 2];
            e2 = d2 + 36 | 0;
            c[e2 >> 2] = c[b2 + 32 >> 2];
            c[e2 + 4 >> 2] = c[b2 + 32 + 4 >> 2];
            c[e2 + 8 >> 2] = c[b2 + 32 + 8 >> 2];
            c[e2 + 12 >> 2] = c[b2 + 32 + 12 >> 2];
            e2 = d2 + 52 | 0;
            c[e2 >> 2] = c[b2 + 48 >> 2];
            c[e2 + 4 >> 2] = c[b2 + 48 + 4 >> 2];
            c[e2 + 8 >> 2] = c[b2 + 48 + 8 >> 2];
            c[e2 + 12 >> 2] = c[b2 + 48 + 12 >> 2];
            e2 = d2 + 68 | 0;
            c[e2 >> 2] = c[5029];
            c[e2 + 4 >> 2] = c[5030];
            c[e2 + 8 >> 2] = c[5031];
            c[e2 + 12 >> 2] = c[5032];
            e2 = d2 + 84 | 0;
            c[e2 >> 2] = c[5033];
            c[e2 + 4 >> 2] = c[5034];
            c[e2 + 8 >> 2] = c[5035];
            c[e2 + 12 >> 2] = c[5036];
            e2 = d2 + 100 | 0;
            c[e2 >> 2] = c[5037];
            c[e2 + 4 >> 2] = c[5038];
            c[e2 + 8 >> 2] = c[5039];
            c[e2 + 12 >> 2] = c[5040];
            e2 = d2 + 116 | 0;
            c[e2 >> 2] = c[5041];
            c[e2 + 4 >> 2] = c[5042];
            c[e2 + 8 >> 2] = c[5043];
            c[e2 + 12 >> 2] = c[5044];
            e2 = d2 + 132 | 0;
            c[e2 >> 2] = c[b2 >> 2];
            c[e2 + 4 >> 2] = c[b2 + 4 >> 2];
            c[e2 + 8 >> 2] = c[b2 + 8 >> 2];
            c[e2 + 12 >> 2] = c[b2 + 12 >> 2];
            e2 = d2 + 148 | 0;
            c[e2 >> 2] = c[b2 + 16 >> 2];
            c[e2 + 4 >> 2] = c[b2 + 16 + 4 >> 2];
            c[e2 + 8 >> 2] = c[b2 + 16 + 8 >> 2];
            c[e2 + 12 >> 2] = c[b2 + 16 + 12 >> 2];
            e2 = d2 + 164 | 0;
            c[e2 >> 2] = c[b2 + 32 >> 2];
            c[e2 + 4 >> 2] = c[b2 + 32 + 4 >> 2];
            c[e2 + 8 >> 2] = c[b2 + 32 + 8 >> 2];
            c[e2 + 12 >> 2] = c[b2 + 32 + 12 >> 2];
            e2 = d2 + 180 | 0;
            c[e2 >> 2] = c[b2 + 48 >> 2];
            c[e2 + 4 >> 2] = c[b2 + 48 + 4 >> 2];
            c[e2 + 8 >> 2] = c[b2 + 48 + 8 >> 2];
            c[e2 + 12 >> 2] = c[b2 + 48 + 12 >> 2];
            c[d2 + 196 >> 2] = 0;
            return d2 | 0;
          }
          function ix(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0;
            c[5637] = (c[5637] | 0) + 1;
            d2 = qG(219) | 0;
            if (!d2)
              d2 = 0;
            else {
              c[(d2 + 4 + 15 & -16) + -4 >> 2] = d2;
              d2 = d2 + 4 + 15 & -16;
            }
            c[d2 >> 2] = 8060;
            e2 = d2 + 4 | 0;
            c[e2 >> 2] = c[a2 >> 2];
            c[e2 + 4 >> 2] = c[a2 + 4 >> 2];
            c[e2 + 8 >> 2] = c[a2 + 8 >> 2];
            c[e2 + 12 >> 2] = c[a2 + 12 >> 2];
            e2 = d2 + 20 | 0;
            c[e2 >> 2] = c[a2 + 16 >> 2];
            c[e2 + 4 >> 2] = c[a2 + 16 + 4 >> 2];
            c[e2 + 8 >> 2] = c[a2 + 16 + 8 >> 2];
            c[e2 + 12 >> 2] = c[a2 + 16 + 12 >> 2];
            e2 = d2 + 36 | 0;
            c[e2 >> 2] = c[a2 + 32 >> 2];
            c[e2 + 4 >> 2] = c[a2 + 32 + 4 >> 2];
            c[e2 + 8 >> 2] = c[a2 + 32 + 8 >> 2];
            c[e2 + 12 >> 2] = c[a2 + 32 + 12 >> 2];
            e2 = d2 + 52 | 0;
            c[e2 >> 2] = c[a2 + 48 >> 2];
            c[e2 + 4 >> 2] = c[a2 + 48 + 4 >> 2];
            c[e2 + 8 >> 2] = c[a2 + 48 + 8 >> 2];
            c[e2 + 12 >> 2] = c[a2 + 48 + 12 >> 2];
            e2 = d2 + 68 | 0;
            c[e2 >> 2] = c[b2 >> 2];
            c[e2 + 4 >> 2] = c[b2 + 4 >> 2];
            c[e2 + 8 >> 2] = c[b2 + 8 >> 2];
            c[e2 + 12 >> 2] = c[b2 + 12 >> 2];
            e2 = d2 + 84 | 0;
            c[e2 >> 2] = c[b2 + 16 >> 2];
            c[e2 + 4 >> 2] = c[b2 + 16 + 4 >> 2];
            c[e2 + 8 >> 2] = c[b2 + 16 + 8 >> 2];
            c[e2 + 12 >> 2] = c[b2 + 16 + 12 >> 2];
            e2 = d2 + 100 | 0;
            c[e2 >> 2] = c[b2 + 32 >> 2];
            c[e2 + 4 >> 2] = c[b2 + 32 + 4 >> 2];
            c[e2 + 8 >> 2] = c[b2 + 32 + 8 >> 2];
            c[e2 + 12 >> 2] = c[b2 + 32 + 12 >> 2];
            e2 = d2 + 116 | 0;
            c[e2 >> 2] = c[b2 + 48 >> 2];
            c[e2 + 4 >> 2] = c[b2 + 48 + 4 >> 2];
            c[e2 + 8 >> 2] = c[b2 + 48 + 8 >> 2];
            c[e2 + 12 >> 2] = c[b2 + 48 + 12 >> 2];
            b2 = d2 + 132 | 0;
            c[b2 >> 2] = c[a2 >> 2];
            c[b2 + 4 >> 2] = c[a2 + 4 >> 2];
            c[b2 + 8 >> 2] = c[a2 + 8 >> 2];
            c[b2 + 12 >> 2] = c[a2 + 12 >> 2];
            b2 = d2 + 148 | 0;
            c[b2 >> 2] = c[a2 + 16 >> 2];
            c[b2 + 4 >> 2] = c[a2 + 16 + 4 >> 2];
            c[b2 + 8 >> 2] = c[a2 + 16 + 8 >> 2];
            c[b2 + 12 >> 2] = c[a2 + 16 + 12 >> 2];
            b2 = d2 + 164 | 0;
            c[b2 >> 2] = c[a2 + 32 >> 2];
            c[b2 + 4 >> 2] = c[a2 + 32 + 4 >> 2];
            c[b2 + 8 >> 2] = c[a2 + 32 + 8 >> 2];
            c[b2 + 12 >> 2] = c[a2 + 32 + 12 >> 2];
            b2 = d2 + 180 | 0;
            c[b2 >> 2] = c[a2 + 48 >> 2];
            c[b2 + 4 >> 2] = c[a2 + 48 + 4 >> 2];
            c[b2 + 8 >> 2] = c[a2 + 48 + 8 >> 2];
            c[b2 + 12 >> 2] = c[a2 + 48 + 12 >> 2];
            c[d2 + 196 >> 2] = 0;
            return d2 | 0;
          }
          function jx(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            tb[c[(c[a2 >> 2] | 0) + 8 >> 2] & 127](a2, b2);
            return;
          }
          function kx(a2) {
            a2 = a2 | 0;
            return a2 + 4 | 0;
          }
          function lx(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            tb[c[(c[a2 >> 2] | 0) + 12 >> 2] & 127](a2, b2);
            return;
          }
          function mx(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c[a2 + 4 >> 2] = c[b2 >> 2];
            c[a2 + 4 + 4 >> 2] = c[b2 + 4 >> 2];
            c[a2 + 4 + 8 >> 2] = c[b2 + 8 >> 2];
            c[a2 + 4 + 12 >> 2] = c[b2 + 12 >> 2];
            c[a2 + 20 >> 2] = c[b2 + 16 >> 2];
            c[a2 + 20 + 4 >> 2] = c[b2 + 16 + 4 >> 2];
            c[a2 + 20 + 8 >> 2] = c[b2 + 16 + 8 >> 2];
            c[a2 + 20 + 12 >> 2] = c[b2 + 16 + 12 >> 2];
            c[a2 + 36 >> 2] = c[b2 + 32 >> 2];
            c[a2 + 36 + 4 >> 2] = c[b2 + 32 + 4 >> 2];
            c[a2 + 36 + 8 >> 2] = c[b2 + 32 + 8 >> 2];
            c[a2 + 36 + 12 >> 2] = c[b2 + 32 + 12 >> 2];
            c[a2 + 52 >> 2] = c[b2 + 48 >> 2];
            c[a2 + 52 + 4 >> 2] = c[b2 + 48 + 4 >> 2];
            c[a2 + 52 + 8 >> 2] = c[b2 + 48 + 8 >> 2];
            c[a2 + 52 + 12 >> 2] = c[b2 + 48 + 12 >> 2];
            return;
          }
          function nx(a2) {
            a2 = a2 | 0;
            if (!a2)
              return;
            rb[c[(c[a2 >> 2] | 0) + 4 >> 2] & 255](a2);
            return;
          }
          function ox(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0;
            while (1) {
              b2 = qG(8) | 0;
              if (b2 | 0) {
                d2 = 6;
                break;
              }
              b2 = c[5831] | 0;
              c[5831] = b2 + 0;
              if (!b2) {
                d2 = 5;
                break;
              }
              _b[b2 & 3]();
            }
            if ((d2 | 0) == 5) {
              a2 = Va(4) | 0;
              c[a2 >> 2] = 8308;
              hb(a2 | 0, 2416, 215);
            } else if ((d2 | 0) == 6) {
              c[b2 >> 2] = 7988;
              c[b2 + 4 >> 2] = a2;
              return b2 | 0;
            }
            return 0;
          }
          function px(a2) {
            a2 = a2 | 0;
            if (!a2)
              return;
            rb[c[(c[a2 >> 2] | 0) + 4 >> 2] & 255](a2);
            return;
          }
          function qx(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            tb[c[(c[a2 >> 2] | 0) + 64 >> 2] & 127](a2, b2);
            return;
          }
          function rx(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            bc[c[(c[a2 >> 2] | 0) + 36 >> 2] & 127](a2, b2, 2, -3);
            return;
          }
          function sx(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            bc[c[(c[a2 >> 2] | 0) + 36 >> 2] & 127](a2, b2, d2, -3);
            return;
          }
          function tx(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            bc[c[(c[a2 >> 2] | 0) + 36 >> 2] & 127](a2, b2, d2, e2);
            return;
          }
          function ux(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            Zb[c[(c[a2 >> 2] | 0) + 56 >> 2] & 127](a2, b2, 0);
            return;
          }
          function vx(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            Zb[c[(c[a2 >> 2] | 0) + 56 >> 2] & 127](a2, b2, d2);
            return;
          }
          function wx(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            tb[c[(c[a2 >> 2] | 0) + 84 >> 2] & 127](a2, b2);
            return;
          }
          function xx(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            bc[c[(c[a2 >> 2] | 0) + 88 >> 2] & 127](a2, b2, d2, e2);
            return;
          }
          function yx(b2, d2, e2, f2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            var h2 = 0, i2 = 0;
            c[5637] = (c[5637] | 0) + 1;
            f2 = qG(343) | 0;
            if (!f2)
              i2 = 0;
            else {
              c[(f2 + 4 + 15 & -16) + -4 >> 2] = f2;
              i2 = f2 + 4 + 15 & -16;
            }
            a[i2 + 20 >> 0] = 1;
            c[i2 + 16 >> 2] = 0;
            c[i2 + 8 >> 2] = 0;
            c[i2 + 12 >> 2] = 0;
            c[i2 + 24 >> 2] = b2;
            g[i2 + 28 >> 2] = 0;
            c[i2 + 32 >> 2] = 0;
            c[i2 + 36 >> 2] = 1;
            g[i2 + 40 >> 2] = 1;
            a[i2 + 44 >> 0] = 1;
            c[i2 + 48 >> 2] = 0;
            a[i2 + 52 >> 0] = 0;
            a[i2 + 53 >> 0] = 1;
            a[i2 + 54 >> 0] = 1;
            g[i2 + 56 >> 2] = 0.03999999910593033;
            a[i2 + 60 >> 0] = 0;
            g[i2 + 64 >> 2] = 0;
            c[i2 + 68 >> 2] = d2;
            c[i2 + 72 >> 2] = 0;
            a[i2 + 76 >> 0] = 1;
            c[i2 + 80 >> 2] = 0;
            c[i2 + 84 >> 2] = 0;
            c[i2 + 88 >> 2] = 0;
            g[i2 + 92 >> 2] = 0.6000000238418579;
            g[i2 + 96 >> 2] = 1;
            g[i2 + 100 >> 2] = 0.30000001192092896;
            g[i2 + 104 >> 2] = 0.01666666753590107;
            g[i2 + 108 >> 2] = 0;
            g[i2 + 116 >> 2] = 20;
            c[i2 + 112 >> 2] = 10;
            g[i2 + 124 >> 2] = 0.20000000298023224;
            g[i2 + 128 >> 2] = 0.800000011920929;
            g[i2 + 132 >> 2] = 0;
            g[i2 + 120 >> 2] = 1;
            c[i2 + 136 >> 2] = 1;
            g[i2 + 140 >> 2] = -0.03999999910593033;
            g[i2 + 144 >> 2] = 0.10000000149011612;
            g[i2 + 148 >> 2] = 0;
            g[i2 + 152 >> 2] = 0.8500000238418579;
            c[i2 + 156 >> 2] = 260;
            c[i2 + 160 >> 2] = 2;
            c[i2 + 164 >> 2] = 128;
            g[i2 + 168 >> 2] = 100;
            g[i2 + 172 >> 2] = 10000000150474662e14;
            c[i2 >> 2] = 7656;
            a[i2 + 192 >> 0] = 1;
            c[i2 + 188 >> 2] = 0;
            c[i2 + 180 >> 2] = 0;
            c[i2 + 184 >> 2] = 0;
            d2 = i2 + 196 | 0;
            c[d2 >> 2] = 0;
            h2 = i2 + 200 | 0;
            c[h2 >> 2] = e2;
            a[i2 + 224 >> 0] = 1;
            c[i2 + 220 >> 2] = 0;
            c[i2 + 212 >> 2] = 0;
            c[i2 + 216 >> 2] = 0;
            a[i2 + 244 >> 0] = 1;
            c[i2 + 240 >> 2] = 0;
            c[i2 + 232 >> 2] = 0;
            c[i2 + 236 >> 2] = 0;
            c[i2 + 248 >> 2] = 0;
            c[i2 + 252 >> 2] = -1054867456;
            f2 = i2 + 256 | 0;
            a[i2 + 274 >> 0] = 0;
            a[i2 + 275 >> 0] = 0;
            c[f2 >> 2] = 0;
            c[f2 + 4 >> 2] = 0;
            c[f2 + 8 >> 2] = 0;
            c[f2 + 12 >> 2] = 0;
            a[i2 + 292 >> 0] = 1;
            c[i2 + 288 >> 2] = 0;
            c[i2 + 280 >> 2] = 0;
            c[i2 + 284 >> 2] = 0;
            c[i2 + 296 >> 2] = 0;
            a[i2 + 300 >> 0] = 1;
            a[i2 + 320 >> 0] = 1;
            c[i2 + 316 >> 2] = 0;
            c[i2 + 308 >> 2] = 0;
            c[i2 + 312 >> 2] = 0;
            if (!e2) {
              c[5637] = (c[5637] | 0) + 1;
              f2 = qG(223) | 0;
              if (!f2)
                f2 = 0;
              else {
                c[(f2 + 4 + 15 & -16) + -4 >> 2] = f2;
                f2 = f2 + 4 + 15 & -16;
              }
              c[f2 >> 2] = 7540;
              a[f2 + 20 >> 0] = 1;
              c[f2 + 16 >> 2] = 0;
              c[f2 + 8 >> 2] = 0;
              c[f2 + 12 >> 2] = 0;
              a[f2 + 40 >> 0] = 1;
              c[f2 + 36 >> 2] = 0;
              c[f2 + 28 >> 2] = 0;
              c[f2 + 32 >> 2] = 0;
              a[f2 + 60 >> 0] = 1;
              c[f2 + 56 >> 2] = 0;
              c[f2 + 48 >> 2] = 0;
              c[f2 + 52 >> 2] = 0;
              a[f2 + 80 >> 0] = 1;
              c[f2 + 76 >> 2] = 0;
              c[f2 + 68 >> 2] = 0;
              c[f2 + 72 >> 2] = 0;
              a[f2 + 100 >> 0] = 1;
              c[f2 + 96 >> 2] = 0;
              c[f2 + 88 >> 2] = 0;
              c[f2 + 92 >> 2] = 0;
              a[f2 + 120 >> 0] = 1;
              c[f2 + 116 >> 2] = 0;
              c[f2 + 108 >> 2] = 0;
              c[f2 + 112 >> 2] = 0;
              a[f2 + 140 >> 0] = 1;
              c[f2 + 136 >> 2] = 0;
              c[f2 + 128 >> 2] = 0;
              c[f2 + 132 >> 2] = 0;
              a[f2 + 160 >> 0] = 1;
              c[f2 + 156 >> 2] = 0;
              c[f2 + 148 >> 2] = 0;
              c[f2 + 152 >> 2] = 0;
              a[f2 + 180 >> 0] = 1;
              c[f2 + 176 >> 2] = 0;
              c[f2 + 168 >> 2] = 0;
              c[f2 + 172 >> 2] = 0;
              c[f2 + 192 >> 2] = 13;
              c[f2 + 196 >> 2] = 14;
              c[f2 + 200 >> 2] = 0;
              c[h2 >> 2] = f2;
              a[i2 + 273 >> 0] = 1;
            } else
              a[i2 + 273 >> 0] = 0;
            c[5637] = (c[5637] | 0) + 1;
            f2 = qG(87) | 0;
            if (!f2)
              f2 = 0;
            else {
              c[(f2 + 4 + 15 & -16) + -4 >> 2] = f2;
              f2 = f2 + 4 + 15 & -16;
            }
            c[f2 >> 2] = 4488;
            a[f2 + 20 >> 0] = 1;
            c[f2 + 16 >> 2] = 0;
            c[f2 + 8 >> 2] = 0;
            c[f2 + 12 >> 2] = 0;
            a[f2 + 40 >> 0] = 1;
            c[f2 + 36 >> 2] = 0;
            c[f2 + 28 >> 2] = 0;
            c[f2 + 32 >> 2] = 0;
            a[f2 + 60 >> 0] = 1;
            c[f2 + 56 >> 2] = 0;
            c[f2 + 48 >> 2] = 0;
            c[f2 + 52 >> 2] = 0;
            a[f2 + 64 >> 0] = 1;
            c[i2 + 204 >> 2] = f2;
            a[i2 + 272 >> 0] = 1;
            c[5637] = (c[5637] | 0) + 1;
            f2 = qG(107) | 0;
            if (!f2) {
              e2 = 0;
              f2 = c[h2 >> 2] | 0;
              c[e2 >> 2] = 7896;
              h2 = e2 + 4 | 0;
              c[h2 >> 2] = 0;
              h2 = e2 + 8 | 0;
              c[h2 >> 2] = f2;
              h2 = e2 + 12 | 0;
              c[h2 >> 2] = 0;
              h2 = e2 + 16 | 0;
              c[h2 >> 2] = 0;
              h2 = e2 + 20 | 0;
              c[h2 >> 2] = 0;
              h2 = e2 + 24 | 0;
              c[h2 >> 2] = b2;
              b2 = e2 + 44 | 0;
              a[b2 >> 0] = 1;
              b2 = e2 + 40 | 0;
              c[b2 >> 2] = 0;
              b2 = e2 + 32 | 0;
              c[b2 >> 2] = 0;
              b2 = e2 + 36 | 0;
              c[b2 >> 2] = 0;
              b2 = e2 + 64 | 0;
              a[b2 >> 0] = 1;
              b2 = e2 + 60 | 0;
              c[b2 >> 2] = 0;
              b2 = e2 + 52 | 0;
              c[b2 >> 2] = 0;
              b2 = e2 + 56 | 0;
              c[b2 >> 2] = 0;
              b2 = e2 + 84 | 0;
              a[b2 >> 0] = 1;
              b2 = e2 + 80 | 0;
              c[b2 >> 2] = 0;
              b2 = e2 + 72 | 0;
              c[b2 >> 2] = 0;
              b2 = e2 + 76 | 0;
              c[b2 >> 2] = 0;
              c[d2 >> 2] = e2;
              return i2 | 0;
            }
            c[(f2 + 4 + 15 & -16) + -4 >> 2] = f2;
            e2 = f2 + 4 + 15 & -16;
            f2 = c[h2 >> 2] | 0;
            c[e2 >> 2] = 7896;
            h2 = e2 + 4 | 0;
            c[h2 >> 2] = 0;
            h2 = e2 + 8 | 0;
            c[h2 >> 2] = f2;
            h2 = e2 + 12 | 0;
            c[h2 >> 2] = 0;
            h2 = e2 + 16 | 0;
            c[h2 >> 2] = 0;
            h2 = e2 + 20 | 0;
            c[h2 >> 2] = 0;
            h2 = e2 + 24 | 0;
            c[h2 >> 2] = b2;
            b2 = e2 + 44 | 0;
            a[b2 >> 0] = 1;
            b2 = e2 + 40 | 0;
            c[b2 >> 2] = 0;
            b2 = e2 + 32 | 0;
            c[b2 >> 2] = 0;
            b2 = e2 + 36 | 0;
            c[b2 >> 2] = 0;
            b2 = e2 + 64 | 0;
            a[b2 >> 0] = 1;
            b2 = e2 + 60 | 0;
            c[b2 >> 2] = 0;
            b2 = e2 + 52 | 0;
            c[b2 >> 2] = 0;
            b2 = e2 + 56 | 0;
            c[b2 >> 2] = 0;
            b2 = e2 + 84 | 0;
            a[b2 >> 0] = 1;
            b2 = e2 + 80 | 0;
            c[b2 >> 2] = 0;
            b2 = e2 + 72 | 0;
            c[b2 >> 2] = 0;
            b2 = e2 + 76 | 0;
            c[b2 >> 2] = 0;
            c[d2 >> 2] = e2;
            return i2 | 0;
          }
          function zx(a2, b2, c2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = d2 | 0;
            ig(a2, b2, c2, d2);
            return;
          }
          function Ax(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0;
            e2 = i;
            i = i + 48 | 0;
            f2 = c[b2 + 192 >> 2] | 0;
            bc[c[(c[f2 >> 2] | 0) + 8 >> 2] & 127](f2, b2 + 4 | 0, e2 + 32 | 0, e2 + 16 | 0);
            c[e2 >> 2] = 3544;
            c[e2 + 4 >> 2] = b2;
            c[e2 + 8 >> 2] = a2;
            c[e2 + 12 >> 2] = d2;
            a2 = c[a2 + 68 >> 2] | 0;
            bc[c[(c[a2 >> 2] | 0) + 28 >> 2] & 127](a2, e2 + 32 | 0, e2 + 16 | 0, e2);
            i = e2;
            return;
          }
          function Bx(a2, b2, c2, d2, e2, f2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = +f2;
            Yf(a2, b2, c2, d2, e2, f2);
            return;
          }
          function Cx(a2) {
            a2 = a2 | 0;
            return c[a2 + 68 >> 2] | 0;
          }
          function Dx(a2) {
            a2 = a2 | 0;
            return a2 + 28 | 0;
          }
          function Ex(a2) {
            a2 = a2 | 0;
            return c[a2 + 24 >> 2] | 0;
          }
          function Fx(b2) {
            b2 = b2 | 0;
            var d2 = 0;
            d2 = i;
            i = i + 16 | 0;
            if (!(a[19896] | 0))
              a[19896] = 1;
            tb[c[(c[b2 >> 2] | 0) + 76 >> 2] & 127](d2, b2);
            c[5650] = c[d2 >> 2];
            c[5651] = c[d2 + 4 >> 2];
            c[5652] = c[d2 + 8 >> 2];
            c[5653] = c[d2 + 12 >> 2];
            i = d2;
            return 22600;
          }
          function Gx(a2) {
            a2 = a2 | 0;
            a2 = c[a2 + 68 >> 2] | 0;
            return vb[c[(c[a2 >> 2] | 0) + 36 >> 2] & 127](a2) | 0;
          }
          function Hx(b2) {
            b2 = b2 | 0;
            var d2 = 0, e2 = 0;
            if (a[19904] | 0) {
              d2 = b2 + 92 | 0;
              b2 = 22616;
              e2 = b2 + 84 | 0;
              do {
                c[b2 >> 2] = c[d2 >> 2];
                b2 = b2 + 4 | 0;
                d2 = d2 + 4 | 0;
              } while ((b2 | 0) < (e2 | 0));
              return 22616;
            }
            a[19904] = 1;
            g[5654] = 0.6000000238418579;
            g[5655] = 1;
            g[5656] = 0.30000001192092896;
            g[5657] = 0.01666666753590107;
            g[5658] = 0;
            g[5660] = 20;
            c[5659] = 10;
            g[5662] = 0.20000000298023224;
            g[5663] = 0.800000011920929;
            g[5664] = 0;
            g[5661] = 1;
            c[5665] = 1;
            g[5666] = -0.03999999910593033;
            g[5667] = 0.10000000149011612;
            g[5668] = 0;
            g[5669] = 0.8500000238418579;
            c[5670] = 260;
            c[5671] = 2;
            c[5672] = 128;
            g[5673] = 100;
            g[5674] = 10000000150474662e14;
            d2 = b2 + 92 | 0;
            b2 = 22616;
            e2 = b2 + 84 | 0;
            do {
              c[b2 >> 2] = c[d2 >> 2];
              b2 = b2 + 4 | 0;
              d2 = d2 + 4 | 0;
            } while ((b2 | 0) < (e2 | 0));
            return 22616;
          }
          function Ix(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            bc[c[(c[a2 >> 2] | 0) + 32 >> 2] & 127](a2, b2, d2, e2);
            return;
          }
          function Jx(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            tb[c[(c[a2 >> 2] | 0) + 68 >> 2] & 127](a2, b2);
            return;
          }
          function Kx(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            tb[c[(c[a2 >> 2] | 0) + 60 >> 2] & 127](a2, b2);
            return;
          }
          function Lx(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            tb[c[(c[a2 >> 2] | 0) + 92 >> 2] & 127](a2, b2);
            return;
          }
          function Mx(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            tb[c[(c[a2 >> 2] | 0) + 72 >> 2] & 127](a2, b2);
            return;
          }
          function Nx(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            return ac[c[(c[a2 >> 2] | 0) + 52 >> 2] & 1](a2, b2, 1, 0.01666666753590107) | 0;
          }
          function Ox(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = +b2;
            d2 = d2 | 0;
            return ac[c[(c[a2 >> 2] | 0) + 52 >> 2] & 1](a2, b2, d2, 0.01666666753590107) | 0;
          }
          function Px(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = +b2;
            d2 = d2 | 0;
            e2 = +e2;
            return ac[c[(c[a2 >> 2] | 0) + 52 >> 2] & 1](a2, b2, d2, e2) | 0;
          }
          function Qx(a2) {
            a2 = a2 | 0;
            if (!a2)
              return;
            rG(a2);
            return;
          }
          function Rx(a2) {
            a2 = a2 | 0;
            return + +g[a2 + 28 >> 2];
          }
          function Sx(a2) {
            a2 = a2 | 0;
            return + +g[a2 + 36 >> 2];
          }
          function Tx(a2) {
            a2 = a2 | 0;
            return c[a2 + 8 >> 2] | 0;
          }
          function Ux(b2) {
            b2 = b2 | 0;
            return (a[b2 + 25 >> 0] | 0) != 0 | 0;
          }
          function Vx(b2) {
            b2 = b2 | 0;
            return (a[b2 + 24 >> 0] | 0) != 0 | 0;
          }
          function Wx(a2) {
            a2 = a2 | 0;
            return c[a2 + 4 >> 2] | 0;
          }
          function Xx(a2) {
            a2 = a2 | 0;
            return + +g[a2 + 12 >> 2];
          }
          function Yx(a2) {
            a2 = a2 | 0;
            return + +g[a2 >> 2];
          }
          function Zx(b2) {
            b2 = b2 | 0;
            return (a[b2 + 16 >> 0] | 0) != 0 | 0;
          }
          function _x(b2) {
            b2 = b2 | 0;
            return (a[b2 + 32 >> 0] | 0) != 0 | 0;
          }
          function $x(b2) {
            b2 = b2 | 0;
            return (a[b2 + 26 >> 0] | 0) != 0 | 0;
          }
          function ay(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            g[a2 + 28 >> 2] = b2;
            return;
          }
          function by(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            g[a2 + 36 >> 2] = b2;
            return;
          }
          function cy(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c[a2 + 8 >> 2] = b2;
            return;
          }
          function dy(b2, c2) {
            b2 = b2 | 0;
            c2 = c2 | 0;
            a[b2 + 25 >> 0] = c2 & 1;
            return;
          }
          function ey(b2, c2) {
            b2 = b2 | 0;
            c2 = c2 | 0;
            a[b2 + 24 >> 0] = c2 & 1;
            return;
          }
          function fy(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c[a2 + 4 >> 2] = b2;
            return;
          }
          function gy(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            g[a2 + 12 >> 2] = b2;
            return;
          }
          function hy(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            g[a2 >> 2] = b2;
            return;
          }
          function iy(b2, c2) {
            b2 = b2 | 0;
            c2 = c2 | 0;
            a[b2 + 16 >> 0] = c2 & 1;
            return;
          }
          function jy(b2, c2) {
            b2 = b2 | 0;
            c2 = c2 | 0;
            a[b2 + 32 >> 0] = c2 & 1;
            return;
          }
          function ky(b2, c2) {
            b2 = b2 | 0;
            c2 = c2 | 0;
            a[b2 + 26 >> 0] = c2 & 1;
            return;
          }
          function ly(a2) {
            a2 = a2 | 0;
            if (!a2)
              return;
            rb[c[(c[a2 >> 2] | 0) + 4 >> 2] & 255](a2);
            return;
          }
          function my(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            return Ob[c[(c[a2 >> 2] | 0) + 40 >> 2] & 31](a2, b2) | 0;
          }
          function ny(a2) {
            a2 = a2 | 0;
            return vb[c[(c[a2 >> 2] | 0) + 36 >> 2] & 127](a2) | 0;
          }
          function oy(a2) {
            a2 = a2 | 0;
            if (!a2)
              return;
            rb[c[(c[a2 >> 2] | 0) + 4 >> 2] & 255](a2);
            return;
          }
          function py(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            tb[c[(c[a2 >> 2] | 0) + 64 >> 2] & 127](a2, b2);
            return;
          }
          function qy(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            bc[c[(c[a2 >> 2] | 0) + 36 >> 2] & 127](a2, b2, 1, -1);
            return;
          }
          function ry(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            bc[c[(c[a2 >> 2] | 0) + 36 >> 2] & 127](a2, b2, d2, -1);
            return;
          }
          function sy(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            bc[c[(c[a2 >> 2] | 0) + 36 >> 2] & 127](a2, b2, d2, e2);
            return;
          }
          function ty(a2, b2, c2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = d2 | 0;
            ig(a2, b2, c2, d2);
            return;
          }
          function uy(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0;
            e2 = i;
            i = i + 48 | 0;
            f2 = c[b2 + 192 >> 2] | 0;
            bc[c[(c[f2 >> 2] | 0) + 8 >> 2] & 127](f2, b2 + 4 | 0, e2 + 32 | 0, e2 + 16 | 0);
            c[e2 >> 2] = 3544;
            c[e2 + 4 >> 2] = b2;
            c[e2 + 8 >> 2] = a2;
            c[e2 + 12 >> 2] = d2;
            a2 = c[a2 + 68 >> 2] | 0;
            bc[c[(c[a2 >> 2] | 0) + 28 >> 2] & 127](a2, e2 + 32 | 0, e2 + 16 | 0, e2);
            i = e2;
            return;
          }
          function vy(a2, b2, c2, d2, e2, f2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = +f2;
            Yf(a2, b2, c2, d2, e2, f2);
            return;
          }
          function wy(a2) {
            a2 = a2 | 0;
            return c[a2 + 68 >> 2] | 0;
          }
          function xy(a2) {
            a2 = a2 | 0;
            return a2 + 28 | 0;
          }
          function yy(a2) {
            a2 = a2 | 0;
            return c[a2 + 24 >> 2] | 0;
          }
          function zy(a2) {
            a2 = a2 | 0;
            a2 = c[a2 + 68 >> 2] | 0;
            return vb[c[(c[a2 >> 2] | 0) + 36 >> 2] & 127](a2) | 0;
          }
          function Ay(b2) {
            b2 = b2 | 0;
            var d2 = 0, e2 = 0;
            if (a[19912] | 0) {
              d2 = b2 + 92 | 0;
              b2 = 22700;
              e2 = b2 + 84 | 0;
              do {
                c[b2 >> 2] = c[d2 >> 2];
                b2 = b2 + 4 | 0;
                d2 = d2 + 4 | 0;
              } while ((b2 | 0) < (e2 | 0));
              return 22700;
            }
            a[19912] = 1;
            g[5675] = 0.6000000238418579;
            g[5676] = 1;
            g[5677] = 0.30000001192092896;
            g[5678] = 0.01666666753590107;
            g[5679] = 0;
            g[5681] = 20;
            c[5680] = 10;
            g[5683] = 0.20000000298023224;
            g[5684] = 0.800000011920929;
            g[5685] = 0;
            g[5682] = 1;
            c[5686] = 1;
            g[5687] = -0.03999999910593033;
            g[5688] = 0.10000000149011612;
            g[5689] = 0;
            g[5690] = 0.8500000238418579;
            c[5691] = 260;
            c[5692] = 2;
            c[5693] = 128;
            g[5694] = 100;
            g[5695] = 10000000150474662e14;
            d2 = b2 + 92 | 0;
            b2 = 22700;
            e2 = b2 + 84 | 0;
            do {
              c[b2 >> 2] = c[d2 >> 2];
              b2 = b2 + 4 | 0;
              d2 = d2 + 4 | 0;
            } while ((b2 | 0) < (e2 | 0));
            return 22700;
          }
          function By(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            bc[c[(c[a2 >> 2] | 0) + 32 >> 2] & 127](a2, b2, d2, e2);
            return;
          }
          function Cy(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            tb[c[(c[a2 >> 2] | 0) + 68 >> 2] & 127](a2, b2);
            return;
          }
          function Dy(a2) {
            a2 = a2 | 0;
            if (!a2)
              return;
            rb[c[(c[a2 >> 2] | 0) + 4 >> 2] & 255](a2);
            return;
          }
          function Ey(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0;
            c[5637] = (c[5637] | 0) + 1;
            e2 = qG(1331) | 0;
            if (!e2)
              e2 = 0;
            else {
              c[(e2 + 4 + 15 & -16) + -4 >> 2] = e2;
              e2 = e2 + 4 + 15 & -16;
            }
            mp(e2, a2, b2, d2);
            return e2 | 0;
          }
          function Fy(a2, b2, d2, e2, f2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            var g2 = 0;
            c[5637] = (c[5637] | 0) + 1;
            g2 = qG(1331) | 0;
            if (!g2)
              g2 = 0;
            else {
              c[(g2 + 4 + 15 & -16) + -4 >> 2] = g2;
              g2 = g2 + 4 + 15 & -16;
            }
            lp(g2, a2, b2, d2, e2, f2);
            return g2 | 0;
          }
          function Gy(b2, c2) {
            b2 = b2 | 0;
            c2 = c2 | 0;
            a[b2 + 21 >> 0] = c2 & 1;
            return;
          }
          function Hy(a2) {
            a2 = a2 | 0;
            return + +g[a2 + 16 >> 2];
          }
          function Iy(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var c2 = 0;
            c2 = +oG(+g[b2 >> 2]);
            if (!(c2 < -3.1415927410125732)) {
              if (c2 > 3.1415927410125732)
                c2 = c2 + -6.2831854820251465;
            } else
              c2 = c2 + 6.2831854820251465;
            g[a2 + 868 >> 2] = c2;
            c2 = +oG(+g[b2 + 4 >> 2]);
            if (!(c2 < -3.1415927410125732)) {
              if (c2 > 3.1415927410125732)
                c2 = c2 + -6.2831854820251465;
            } else
              c2 = c2 + 6.2831854820251465;
            g[a2 + 932 >> 2] = c2;
            c2 = +oG(+g[b2 + 8 >> 2]);
            if (c2 < -3.1415927410125732) {
              c2 = c2 + 6.2831854820251465;
              a2 = a2 + 996 | 0;
              g[a2 >> 2] = c2;
              return;
            }
            if (!(c2 > 3.1415927410125732)) {
              a2 = a2 + 996 | 0;
              g[a2 >> 2] = c2;
              return;
            }
            c2 = c2 + -6.2831854820251465;
            a2 = a2 + 996 | 0;
            g[a2 >> 2] = c2;
            return;
          }
          function Jy(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var c2 = 0;
            c2 = +oG(+g[b2 >> 2]);
            if (!(c2 < -3.1415927410125732)) {
              if (c2 > 3.1415927410125732)
                c2 = c2 + -6.2831854820251465;
            } else
              c2 = c2 + 6.2831854820251465;
            g[a2 + 872 >> 2] = c2;
            c2 = +oG(+g[b2 + 4 >> 2]);
            if (!(c2 < -3.1415927410125732)) {
              if (c2 > 3.1415927410125732)
                c2 = c2 + -6.2831854820251465;
            } else
              c2 = c2 + 6.2831854820251465;
            g[a2 + 936 >> 2] = c2;
            c2 = +oG(+g[b2 + 8 >> 2]);
            if (c2 < -3.1415927410125732) {
              c2 = c2 + 6.2831854820251465;
              a2 = a2 + 1e3 | 0;
              g[a2 >> 2] = c2;
              return;
            }
            if (!(c2 > 3.1415927410125732)) {
              a2 = a2 + 1e3 | 0;
              g[a2 >> 2] = c2;
              return;
            }
            c2 = c2 + -6.2831854820251465;
            a2 = a2 + 1e3 | 0;
            g[a2 >> 2] = c2;
            return;
          }
          function Ky(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            g[a2 + 16 >> 2] = b2;
            return;
          }
          function Ly(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c[a2 + 680 >> 2] = c[b2 >> 2];
            c[a2 + 680 + 4 >> 2] = c[b2 + 4 >> 2];
            c[a2 + 680 + 8 >> 2] = c[b2 + 8 >> 2];
            c[a2 + 680 + 12 >> 2] = c[b2 + 12 >> 2];
            return;
          }
          function My(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c[a2 + 696 >> 2] = c[b2 >> 2];
            c[a2 + 696 + 4 >> 2] = c[b2 + 4 >> 2];
            c[a2 + 696 + 8 >> 2] = c[b2 + 8 >> 2];
            c[a2 + 696 + 12 >> 2] = c[b2 + 12 >> 2];
            return;
          }
          function Ny(a2) {
            a2 = a2 | 0;
            if (!a2)
              return;
            rb[c[(c[a2 >> 2] | 0) + 4 >> 2] & 255](a2);
            return;
          }
          function nq(b2, d2, e2, f2, h2, j2, l2, m2, n2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            h2 = h2 | 0;
            j2 = j2 | 0;
            l2 = l2 | 0;
            m2 = m2 | 0;
            n2 = n2 | 0;
            var o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0, P2 = 0, Q2 = 0, R2 = 0, S2 = 0, T2 = 0, U2 = 0, V2 = 0, W2 = 0, X2 = 0, Y2 = 0, Z2 = 0, _2 = 0, $2 = 0, aa2 = 0, ba2 = 0, ca2 = 0, da2 = 0, ea2 = 0, fa2 = 0, ga2 = 0, ha2 = 0, ia2 = 0, ja2 = 0, ka2 = 0, la2 = 0, ma2 = 0;
            Y2 = i;
            i = i + 304 | 0;
            c[b2 + 188 >> 2] = -1;
            fs(15532);
            c[b2 + 184 >> 2] = 0;
            if ((e2 | 0) > 0) {
              n2 = 0;
              do {
                c[(c[d2 + (n2 << 2) >> 2] | 0) + 212 >> 2] = -1;
                n2 = n2 + 1 | 0;
              } while ((n2 | 0) != (e2 | 0));
            }
            o2 = c[b2 + 12 >> 2] | 0;
            if ((o2 | 0) > (e2 | 0))
              p2 = b2 + 8 | 0;
            else {
              if ((e2 + 1 | 0) != 0 ? (c[5637] = (c[5637] | 0) + 1, p2 = qG(((e2 + 1 | 0) * 244 | 3) + 16 | 0) | 0, (p2 | 0) != 0) : 0) {
                c[(p2 + 4 + 15 & -16) + -4 >> 2] = p2;
                p2 = p2 + 4 + 15 & -16;
              } else
                p2 = 0;
              n2 = c[b2 + 8 >> 2] | 0;
              if ((n2 | 0) > 0) {
                o2 = 0;
                do {
                  V2 = p2 + (o2 * 244 | 0) | 0;
                  W2 = c[b2 + 16 >> 2] | 0;
                  U2 = W2 + (o2 * 244 | 0) | 0;
                  c[V2 >> 2] = c[U2 >> 2];
                  c[V2 + 4 >> 2] = c[U2 + 4 >> 2];
                  c[V2 + 8 >> 2] = c[U2 + 8 >> 2];
                  c[V2 + 12 >> 2] = c[U2 + 12 >> 2];
                  V2 = p2 + (o2 * 244 | 0) + 16 | 0;
                  U2 = W2 + (o2 * 244 | 0) + 16 | 0;
                  c[V2 >> 2] = c[U2 >> 2];
                  c[V2 + 4 >> 2] = c[U2 + 4 >> 2];
                  c[V2 + 8 >> 2] = c[U2 + 8 >> 2];
                  c[V2 + 12 >> 2] = c[U2 + 12 >> 2];
                  V2 = p2 + (o2 * 244 | 0) + 32 | 0;
                  U2 = W2 + (o2 * 244 | 0) + 32 | 0;
                  c[V2 >> 2] = c[U2 >> 2];
                  c[V2 + 4 >> 2] = c[U2 + 4 >> 2];
                  c[V2 + 8 >> 2] = c[U2 + 8 >> 2];
                  c[V2 + 12 >> 2] = c[U2 + 12 >> 2];
                  V2 = p2 + (o2 * 244 | 0) + 48 | 0;
                  U2 = W2 + (o2 * 244 | 0) + 48 | 0;
                  c[V2 >> 2] = c[U2 >> 2];
                  c[V2 + 4 >> 2] = c[U2 + 4 >> 2];
                  c[V2 + 8 >> 2] = c[U2 + 8 >> 2];
                  c[V2 + 12 >> 2] = c[U2 + 12 >> 2];
                  bH(p2 + (o2 * 244 | 0) + 64 | 0, W2 + (o2 * 244 | 0) + 64 | 0, 180) | 0;
                  o2 = o2 + 1 | 0;
                } while ((o2 | 0) != (n2 | 0));
              }
              n2 = c[b2 + 16 >> 2] | 0;
              if (n2 | 0) {
                if (a[b2 + 20 >> 0] | 0) {
                  c[5638] = (c[5638] | 0) + 1;
                  rG(c[n2 + -4 >> 2] | 0);
                }
                c[b2 + 16 >> 2] = 0;
              }
              a[b2 + 20 >> 0] = 1;
              c[b2 + 16 >> 2] = p2;
              c[b2 + 12 >> 2] = e2 + 1;
              p2 = b2 + 8 | 0;
              o2 = e2 + 1 | 0;
            }
            ZG(Y2 | 0, 0, 244) | 0;
            n2 = c[p2 >> 2] | 0;
            if ((n2 | 0) < 0) {
              if ((o2 | 0) < 0) {
                o2 = c[b2 + 16 >> 2] | 0;
                if (o2 | 0) {
                  if (a[b2 + 20 >> 0] | 0) {
                    c[5638] = (c[5638] | 0) + 1;
                    rG(c[o2 + -4 >> 2] | 0);
                  }
                  c[b2 + 16 >> 2] = 0;
                }
                a[b2 + 20 >> 0] = 1;
                c[b2 + 16 >> 2] = 0;
                c[b2 + 12 >> 2] = 0;
              }
              do {
                W2 = c[b2 + 16 >> 2] | 0;
                V2 = W2 + (n2 * 244 | 0) | 0;
                c[V2 >> 2] = c[Y2 >> 2];
                c[V2 + 4 >> 2] = c[Y2 + 4 >> 2];
                c[V2 + 8 >> 2] = c[Y2 + 8 >> 2];
                c[V2 + 12 >> 2] = c[Y2 + 12 >> 2];
                V2 = W2 + (n2 * 244 | 0) + 16 | 0;
                c[V2 >> 2] = c[Y2 + 16 >> 2];
                c[V2 + 4 >> 2] = c[Y2 + 16 + 4 >> 2];
                c[V2 + 8 >> 2] = c[Y2 + 16 + 8 >> 2];
                c[V2 + 12 >> 2] = c[Y2 + 16 + 12 >> 2];
                V2 = W2 + (n2 * 244 | 0) + 32 | 0;
                c[V2 >> 2] = c[Y2 + 32 >> 2];
                c[V2 + 4 >> 2] = c[Y2 + 32 + 4 >> 2];
                c[V2 + 8 >> 2] = c[Y2 + 32 + 8 >> 2];
                c[V2 + 12 >> 2] = c[Y2 + 32 + 12 >> 2];
                V2 = W2 + (n2 * 244 | 0) + 48 | 0;
                c[V2 >> 2] = c[Y2 + 48 >> 2];
                c[V2 + 4 >> 2] = c[Y2 + 48 + 4 >> 2];
                c[V2 + 8 >> 2] = c[Y2 + 48 + 8 >> 2];
                c[V2 + 12 >> 2] = c[Y2 + 48 + 12 >> 2];
                bH(W2 + (n2 * 244 | 0) + 64 | 0, Y2 + 64 | 0, 180) | 0;
                n2 = n2 + 1 | 0;
              } while ((n2 | 0) != 0);
            }
            c[p2 >> 2] = 0;
            if ((e2 | 0) > 0) {
              s2 = 0;
              do {
                p2 = d2 + (s2 << 2) | 0;
                o2 = cq(b2, c[p2 >> 2] | 0, +g[m2 + 12 >> 2]) | 0;
                p2 = c[p2 >> 2] | 0;
                if (!((p2 | 0) == 0 ? 1 : (c[p2 + 236 >> 2] & 2 | 0) == 0) ? +g[p2 + 368 >> 2] != 0 : 0) {
                  q2 = c[b2 + 16 >> 2] | 0;
                  n2 = c[p2 + 528 >> 2] | 0;
                  if (n2 & 2) {
                    r2 = +g[m2 + 76 >> 2];
                    _2 = +g[p2 + 420 >> 2];
                    u2 = +g[p2 + 424 >> 2];
                    t2 = +g[p2 + 428 >> 2];
                    ea2 = +g[p2 + 4 >> 2];
                    _2 = _2 != 0 ? 1 / _2 : 0;
                    da2 = +g[p2 + 8 >> 2];
                    u2 = u2 != 0 ? 1 / u2 : 0;
                    ca2 = +g[p2 + 12 >> 2];
                    t2 = t2 != 0 ? 1 / t2 : 0;
                    ba2 = +g[p2 + 20 >> 2];
                    aa2 = +g[p2 + 24 >> 2];
                    $2 = +g[p2 + 28 >> 2];
                    Z2 = +g[p2 + 36 >> 2];
                    B2 = +g[p2 + 40 >> 2];
                    w2 = +g[p2 + 44 >> 2];
                    x2 = +g[p2 + 352 >> 2];
                    y2 = +g[p2 + 356 >> 2];
                    v2 = +g[p2 + 360 >> 2];
                    z2 = (_2 * ea2 * ea2 + u2 * da2 * da2 + t2 * ca2 * ca2) * x2 + (_2 * ea2 * ba2 + u2 * da2 * aa2 + t2 * ca2 * $2) * y2 + (_2 * ea2 * Z2 + u2 * da2 * B2 + t2 * ca2 * w2) * v2;
                    A2 = (_2 * ba2 * ea2 + u2 * aa2 * da2 + t2 * $2 * ca2) * x2 + (_2 * ba2 * ba2 + u2 * aa2 * aa2 + t2 * $2 * $2) * y2 + (_2 * ba2 * Z2 + u2 * aa2 * B2 + t2 * $2 * w2) * v2;
                    w2 = (_2 * Z2 * ea2 + u2 * B2 * da2 + t2 * w2 * ca2) * x2 + (_2 * Z2 * ba2 + u2 * B2 * aa2 + t2 * w2 * $2) * y2 + (_2 * Z2 * Z2 + u2 * B2 * B2 + t2 * w2 * w2) * v2;
                    t2 = (y2 * w2 - v2 * A2) * (y2 * w2 - v2 * A2) + (v2 * z2 - x2 * w2) * (v2 * z2 - x2 * w2) + (x2 * A2 - y2 * z2) * (x2 * A2 - y2 * z2);
                    if (t2 > r2 * r2) {
                      r2 = 1 / +O(+t2) * r2;
                      u2 = (y2 * w2 - v2 * A2) * r2;
                      t2 = r2 * (v2 * z2 - x2 * w2);
                      r2 = r2 * (x2 * A2 - y2 * z2);
                    } else {
                      u2 = y2 * w2 - v2 * A2;
                      t2 = v2 * z2 - x2 * w2;
                      r2 = x2 * A2 - y2 * z2;
                    }
                    ca2 = +g[m2 + 12 >> 2];
                    da2 = (u2 * +g[p2 + 292 >> 2] + t2 * +g[p2 + 308 >> 2] + r2 * +g[p2 + 324 >> 2]) * ca2;
                    ea2 = ca2 * (u2 * +g[p2 + 296 >> 2] + t2 * +g[p2 + 312 >> 2] + r2 * +g[p2 + 328 >> 2]);
                    g[q2 + (o2 * 244 | 0) + 224 >> 2] = +g[q2 + (o2 * 244 | 0) + 224 >> 2] - (u2 * +g[p2 + 288 >> 2] + t2 * +g[p2 + 304 >> 2] + r2 * +g[p2 + 320 >> 2]) * ca2;
                    g[q2 + (o2 * 244 | 0) + 228 >> 2] = +g[q2 + (o2 * 244 | 0) + 228 >> 2] - da2;
                    g[q2 + (o2 * 244 | 0) + 232 >> 2] = +g[q2 + (o2 * 244 | 0) + 232 >> 2] - ea2;
                    n2 = c[p2 + 528 >> 2] | 0;
                  }
                  if (n2 & 4) {
                    B2 = +g[m2 + 12 >> 2];
                    ia2 = +g[p2 + 420 >> 2];
                    ca2 = +g[p2 + 424 >> 2];
                    aa2 = +g[p2 + 428 >> 2];
                    y2 = +g[p2 + 352 >> 2];
                    t2 = +g[p2 + 356 >> 2];
                    ea2 = +g[p2 + 360 >> 2];
                    $2 = +g[p2 + 4 >> 2];
                    ia2 = ia2 != 0 ? 1 / ia2 : 0;
                    r2 = +g[p2 + 8 >> 2];
                    ca2 = ca2 != 0 ? 1 / ca2 : 0;
                    u2 = +g[p2 + 12 >> 2];
                    aa2 = aa2 != 0 ? 1 / aa2 : 0;
                    ja2 = +g[p2 + 20 >> 2];
                    _2 = +g[p2 + 24 >> 2];
                    x2 = +g[p2 + 28 >> 2];
                    ba2 = +g[p2 + 36 >> 2];
                    Z2 = +g[p2 + 40 >> 2];
                    ha2 = +g[p2 + 44 >> 2];
                    v2 = ia2 * $2 * $2 + ca2 * r2 * r2 + aa2 * u2 * u2;
                    A2 = ia2 * $2 * ja2 + ca2 * r2 * _2 + aa2 * u2 * x2;
                    ga2 = ia2 * $2 * ba2 + ca2 * r2 * Z2 + aa2 * u2 * ha2;
                    w2 = ia2 * ja2 * $2 + ca2 * _2 * r2 + aa2 * x2 * u2;
                    z2 = ia2 * ja2 * ja2 + ca2 * _2 * _2 + aa2 * x2 * x2;
                    fa2 = ia2 * ja2 * ba2 + ca2 * _2 * Z2 + aa2 * x2 * ha2;
                    u2 = ia2 * ba2 * $2 + ca2 * Z2 * r2 + aa2 * ha2 * u2;
                    x2 = ia2 * ba2 * ja2 + ca2 * Z2 * _2 + aa2 * ha2 * x2;
                    ha2 = ia2 * ba2 * ba2 + ca2 * Z2 * Z2 + aa2 * ha2 * ha2;
                    aa2 = y2 * v2 + t2 * A2 + ea2 * ga2 + (t2 * (y2 * u2 + t2 * x2 + ea2 * ha2) - ea2 * (y2 * w2 + t2 * z2 + ea2 * fa2)) * B2 - (B2 * 0 + (y2 * v2 + t2 * A2 + ea2 * ga2));
                    Z2 = y2 * w2 + t2 * z2 + ea2 * fa2 + (ea2 * (y2 * v2 + t2 * A2 + ea2 * ga2) - y2 * (y2 * u2 + t2 * x2 + ea2 * ha2)) * B2 - (B2 * 0 + (y2 * w2 + t2 * z2 + ea2 * fa2));
                    ca2 = y2 * u2 + t2 * x2 + ea2 * ha2 + (y2 * (y2 * w2 + t2 * z2 + ea2 * fa2) - t2 * (y2 * v2 + t2 * A2 + ea2 * ga2)) * B2 - (B2 * 0 + (y2 * u2 + t2 * x2 + ea2 * ha2));
                    ba2 = A2 + (y2 * u2 + t2 * x2 + ea2 * ha2 + (t2 * x2 + (A2 * 0 + z2 * -ea2))) * B2;
                    ia2 = ga2 + (t2 * ha2 + (ga2 * 0 + fa2 * -ea2) - (y2 * w2 + t2 * z2 + ea2 * fa2)) * B2;
                    _2 = w2 + (u2 * -y2 + (w2 * 0 + ea2 * v2) - (y2 * u2 + t2 * x2 + ea2 * ha2)) * B2;
                    ja2 = fa2 + (y2 * v2 + t2 * A2 + ea2 * ga2 + (ha2 * -y2 + (fa2 * 0 + ea2 * ga2))) * B2;
                    r2 = u2 + (u2 * 0 + (v2 * -t2 + y2 * w2) + (y2 * w2 + t2 * z2 + ea2 * fa2)) * B2;
                    $2 = x2 + (x2 * 0 + (A2 * -t2 + y2 * z2) - (y2 * v2 + t2 * A2 + ea2 * ga2)) * B2;
                    la2 = (z2 + (x2 * -y2 + (z2 * 0 + ea2 * A2)) * B2) * (ha2 + (ha2 * 0 + (ga2 * -t2 + y2 * fa2)) * B2) - $2 * ja2;
                    ka2 = $2 * ia2 - ba2 * (ha2 + (ha2 * 0 + (ga2 * -t2 + y2 * fa2)) * B2);
                    ma2 = ba2 * ja2 - (z2 + (x2 * -y2 + (z2 * 0 + ea2 * A2)) * B2) * ia2;
                    da2 = r2 * ma2 + ((v2 + (t2 * u2 + (v2 * 0 + w2 * -ea2)) * B2) * la2 + _2 * ka2);
                    n2 = +N(+da2) > 11920928955078125e-23;
                    da2 = n2 ? 1 / da2 : da2;
                    g[q2 + (o2 * 244 | 0) + 224 >> 2] = y2 - (ca2 * ma2 + (aa2 * la2 + Z2 * ka2)) * da2 - y2 + +g[q2 + (o2 * 244 | 0) + 224 >> 2];
                    g[q2 + (o2 * 244 | 0) + 228 >> 2] = t2 - (r2 * (ja2 * aa2 - ia2 * Z2) + ((v2 + (t2 * u2 + (v2 * 0 + w2 * -ea2)) * B2) * ((ha2 + (ha2 * 0 + (ga2 * -t2 + y2 * fa2)) * B2) * Z2 - ja2 * ca2) + _2 * (ia2 * ca2 - (ha2 + (ha2 * 0 + (ga2 * -t2 + y2 * fa2)) * B2) * aa2))) * da2 - t2 + +g[q2 + (o2 * 244 | 0) + 228 >> 2];
                    g[q2 + (o2 * 244 | 0) + 232 >> 2] = ea2 - (r2 * (ba2 * Z2 - (z2 + (x2 * -y2 + (z2 * 0 + ea2 * A2)) * B2) * aa2) + ((v2 + (t2 * u2 + (v2 * 0 + w2 * -ea2)) * B2) * ((z2 + (x2 * -y2 + (z2 * 0 + ea2 * A2)) * B2) * ca2 - $2 * Z2) + _2 * ($2 * aa2 - ba2 * ca2))) * da2 - ea2 + +g[q2 + (o2 * 244 | 0) + 232 >> 2];
                    n2 = c[p2 + 528 >> 2] | 0;
                  }
                  if (n2 & 8 | 0) {
                    ia2 = +g[m2 + 12 >> 2];
                    A2 = +g[p2 + 420 >> 2];
                    B2 = +g[p2 + 424 >> 2];
                    x2 = +g[p2 + 428 >> 2];
                    da2 = +g[p2 + 352 >> 2];
                    ea2 = +g[p2 + 356 >> 2];
                    ma2 = +g[p2 + 360 >> 2];
                    _f(p2 + 4 | 0, Y2 + 248 | 0);
                    la2 = +g[Y2 + 248 >> 2];
                    fa2 = +g[Y2 + 248 + 4 >> 2];
                    ga2 = +g[Y2 + 248 + 8 >> 2];
                    Z2 = +g[Y2 + 248 + 12 >> 2];
                    $2 = ga2 * (da2 * -ga2 + ea2 * Z2 - ma2 * -la2) + (la2 * (-(da2 * -la2) - ea2 * -fa2 - ma2 * -ga2) + Z2 * (ma2 * -fa2 + da2 * Z2 - ea2 * -ga2)) - fa2 * (ea2 * -la2 + ma2 * Z2 - da2 * -fa2);
                    ba2 = la2 * (ea2 * -la2 + ma2 * Z2 - da2 * -fa2) + (fa2 * (-(da2 * -la2) - ea2 * -fa2 - ma2 * -ga2) + Z2 * (da2 * -ga2 + ea2 * Z2 - ma2 * -la2)) - ga2 * (ma2 * -fa2 + da2 * Z2 - ea2 * -ga2);
                    Z2 = fa2 * (ma2 * -fa2 + da2 * Z2 - ea2 * -ga2) + (ga2 * (-(da2 * -la2) - ea2 * -fa2 - ma2 * -ga2) + Z2 * (ea2 * -la2 + ma2 * Z2 - da2 * -fa2)) - la2 * (da2 * -ga2 + ea2 * Z2 - ma2 * -la2);
                    A2 = A2 != 0 ? 1 / A2 : 0;
                    ca2 = Z2 * 0 + (A2 * $2 + ba2 * 0);
                    B2 = B2 != 0 ? 1 / B2 : 0;
                    aa2 = Z2 * 0 + ($2 * 0 + B2 * ba2);
                    x2 = x2 != 0 ? 1 / x2 : 0;
                    _2 = x2 * Z2 + ($2 * 0 + ba2 * 0);
                    y2 = A2 + (ba2 * 0 + (A2 * 0 + Z2 * -0)) * ia2;
                    z2 = B2 + ($2 * -0 + (B2 * 0 + Z2 * 0)) * ia2;
                    ja2 = x2 + (x2 * 0 + (ba2 * -0 + $2 * 0)) * ia2;
                    w2 = z2 * ja2 - ((ba2 * -0 + B2 * $2 + 0 - ca2) * ia2 + 0) * ((Z2 * 0 + 0 - x2 * $2 + ca2) * ia2 + 0);
                    ha2 = ((ba2 * -0 + B2 * $2 + 0 - ca2) * ia2 + 0) * ((x2 * ba2 + (Z2 * -0 + 0) - aa2) * ia2 + 0) - ja2 * ((ba2 * 0 + (0 - B2 * Z2) + _2) * ia2 + 0);
                    v2 = ((ba2 * 0 + (0 - B2 * Z2) + _2) * ia2 + 0) * ((Z2 * 0 + 0 - x2 * $2 + ca2) * ia2 + 0) - z2 * ((x2 * ba2 + (Z2 * -0 + 0) - aa2) * ia2 + 0);
                    ka2 = (($2 * 0 - A2 * ba2 + 0 + aa2) * ia2 + 0) * v2 + (y2 * w2 + (($2 * -0 + (A2 * Z2 + 0) - _2) * ia2 + 0) * ha2);
                    W2 = +N(+ka2) > 11920928955078125e-23;
                    ka2 = W2 ? 1 / ka2 : ka2;
                    ha2 = $2 - (($2 * aa2 - ba2 * ca2) * ia2 * v2 + ((ba2 * _2 - Z2 * aa2) * ia2 * w2 + (Z2 * ca2 - $2 * _2) * ia2 * ha2)) * ka2;
                    ja2 = ba2 - ((($2 * 0 - A2 * ba2 + 0 + aa2) * ia2 + 0) * (((Z2 * 0 + 0 - x2 * $2 + ca2) * ia2 + 0) * ((ba2 * _2 - Z2 * aa2) * ia2) - ((x2 * ba2 + (Z2 * -0 + 0) - aa2) * ia2 + 0) * ((Z2 * ca2 - $2 * _2) * ia2)) + (y2 * (ja2 * ((Z2 * ca2 - $2 * _2) * ia2) - ((Z2 * 0 + 0 - x2 * $2 + ca2) * ia2 + 0) * (($2 * aa2 - ba2 * ca2) * ia2)) + (($2 * -0 + (A2 * Z2 + 0) - _2) * ia2 + 0) * (((x2 * ba2 + (Z2 * -0 + 0) - aa2) * ia2 + 0) * (($2 * aa2 - ba2 * ca2) * ia2) - ja2 * ((ba2 * _2 - Z2 * aa2) * ia2)))) * ka2;
                    ka2 = Z2 - ((($2 * 0 - A2 * ba2 + 0 + aa2) * ia2 + 0) * (((ba2 * 0 + (0 - B2 * Z2) + _2) * ia2 + 0) * ((Z2 * ca2 - $2 * _2) * ia2) - z2 * ((ba2 * _2 - Z2 * aa2) * ia2)) + (y2 * (z2 * (($2 * aa2 - ba2 * ca2) * ia2) - ((ba2 * -0 + B2 * $2 + 0 - ca2) * ia2 + 0) * ((Z2 * ca2 - $2 * _2) * ia2)) + (($2 * -0 + (A2 * Z2 + 0) - _2) * ia2 + 0) * (((ba2 * -0 + B2 * $2 + 0 - ca2) * ia2 + 0) * ((ba2 * _2 - Z2 * aa2) * ia2) - ((ba2 * 0 + (0 - B2 * Z2) + _2) * ia2 + 0) * (($2 * aa2 - ba2 * ca2) * ia2)))) * ka2;
                    ia2 = +g[Y2 + 248 + 12 >> 2];
                    g[q2 + (o2 * 244 | 0) + 224 >> 2] = (ga2 * ha2 + ia2 * ja2 - la2 * ka2) * -ga2 + (ia2 * (ia2 * ha2 + fa2 * ka2 - ga2 * ja2) + (-(la2 * ha2) - fa2 * ja2 - ga2 * ka2) * -la2) - (ia2 * ka2 + la2 * ja2 - fa2 * ha2) * -fa2 - da2 + +g[q2 + (o2 * 244 | 0) + 224 >> 2];
                    g[q2 + (o2 * 244 | 0) + 228 >> 2] = (ia2 * ka2 + la2 * ja2 - fa2 * ha2) * -la2 + (ia2 * (ga2 * ha2 + ia2 * ja2 - la2 * ka2) + (-(la2 * ha2) - fa2 * ja2 - ga2 * ka2) * -fa2) - (ia2 * ha2 + fa2 * ka2 - ga2 * ja2) * -ga2 - ea2 + +g[q2 + (o2 * 244 | 0) + 228 >> 2];
                    g[q2 + (o2 * 244 | 0) + 232 >> 2] = (ia2 * ha2 + fa2 * ka2 - ga2 * ja2) * -fa2 + ((-(la2 * ha2) - fa2 * ja2 - ga2 * ka2) * -ga2 + ia2 * (ia2 * ka2 + la2 * ja2 - fa2 * ha2)) - (ga2 * ha2 + ia2 * ja2 - la2 * ka2) * -la2 - ma2 + +g[q2 + (o2 * 244 | 0) + 232 >> 2];
                  }
                }
                s2 = s2 + 1 | 0;
              } while ((s2 | 0) != (e2 | 0));
            }
            if ((l2 | 0) > 0) {
              n2 = 0;
              do {
                W2 = c[j2 + (n2 << 2) >> 2] | 0;
                rb[c[(c[W2 >> 2] | 0) + 8 >> 2] & 255](W2);
                g[W2 + 36 >> 2] = 0;
                n2 = n2 + 1 | 0;
              } while ((n2 | 0) < (l2 | 0));
            }
            o2 = c[b2 + 168 >> 2] | 0;
            if ((o2 | 0) < (l2 | 0) ? (c[b2 + 172 >> 2] | 0) < (l2 | 0) : 0) {
              if (!l2)
                n2 = 0;
              else {
                c[5637] = (c[5637] | 0) + 1;
                n2 = qG((l2 << 3 | 3) + 16 | 0) | 0;
                if (!n2)
                  n2 = 0;
                else {
                  c[(n2 + 4 + 15 & -16) + -4 >> 2] = n2;
                  n2 = n2 + 4 + 15 & -16;
                }
                o2 = c[b2 + 168 >> 2] | 0;
              }
              if ((o2 | 0) > 0) {
                p2 = 0;
                do {
                  U2 = (c[b2 + 176 >> 2] | 0) + (p2 << 3) | 0;
                  V2 = c[U2 + 4 >> 2] | 0;
                  W2 = n2 + (p2 << 3) | 0;
                  c[W2 >> 2] = c[U2 >> 2];
                  c[W2 + 4 >> 2] = V2;
                  p2 = p2 + 1 | 0;
                } while ((p2 | 0) != (o2 | 0));
              }
              o2 = c[b2 + 176 >> 2] | 0;
              if (o2 | 0) {
                if (a[b2 + 180 >> 0] | 0) {
                  c[5638] = (c[5638] | 0) + 1;
                  rG(c[o2 + -4 >> 2] | 0);
                }
                c[b2 + 176 >> 2] = 0;
              }
              a[b2 + 180 >> 0] = 1;
              c[b2 + 176 >> 2] = n2;
              c[b2 + 172 >> 2] = l2;
            }
            c[b2 + 168 >> 2] = l2;
            if ((l2 | 0) > 0) {
              e2 = 0;
              n2 = 0;
              do {
                s2 = c[b2 + 176 >> 2] | 0;
                d2 = s2 + (e2 << 3) | 0;
                q2 = j2 + (e2 << 2) | 0;
                o2 = c[q2 >> 2] | 0;
                p2 = c[o2 + 44 >> 2] | 0;
                if (p2) {
                  o2 = p2 + 64 | 0;
                  do {
                    c[p2 >> 2] = 0;
                    p2 = p2 + 4 | 0;
                  } while ((p2 | 0) < (o2 | 0));
                  o2 = c[q2 >> 2] | 0;
                }
                if (!(a[o2 + 20 >> 0] | 0)) {
                  c[d2 >> 2] = 0;
                  c[s2 + (e2 << 3) + 4 >> 2] = 0;
                  o2 = 0;
                } else {
                  tb[c[(c[o2 >> 2] | 0) + 16 >> 2] & 127](o2, d2);
                  o2 = c[d2 >> 2] | 0;
                }
                n2 = o2 + n2 | 0;
                e2 = e2 + 1 | 0;
              } while ((e2 | 0) < (l2 | 0));
            } else
              n2 = 0;
            p2 = c[b2 + 48 >> 2] | 0;
            if ((p2 | 0) < (n2 | 0) ? (c[b2 + 52 >> 2] | 0) < (n2 | 0) : 0) {
              if (!n2)
                o2 = 0;
              else {
                c[5637] = (c[5637] | 0) + 1;
                o2 = qG((n2 * 152 | 3) + 16 | 0) | 0;
                if (!o2)
                  o2 = 0;
                else {
                  c[(o2 + 4 + 15 & -16) + -4 >> 2] = o2;
                  o2 = o2 + 4 + 15 & -16;
                }
                p2 = c[b2 + 48 >> 2] | 0;
              }
              if ((p2 | 0) > 0) {
                q2 = 0;
                do {
                  bH(o2 + (q2 * 152 | 0) | 0, (c[b2 + 56 >> 2] | 0) + (q2 * 152 | 0) | 0, 152) | 0;
                  q2 = q2 + 1 | 0;
                } while ((q2 | 0) != (p2 | 0));
              }
              p2 = c[b2 + 56 >> 2] | 0;
              if (p2 | 0) {
                if (a[b2 + 60 >> 0] | 0) {
                  c[5638] = (c[5638] | 0) + 1;
                  rG(c[p2 + -4 >> 2] | 0);
                }
                c[b2 + 56 >> 2] = 0;
              }
              a[b2 + 60 >> 0] = 1;
              c[b2 + 56 >> 2] = o2;
              c[b2 + 52 >> 2] = n2;
            }
            c[b2 + 48 >> 2] = n2;
            if ((l2 | 0) > 0) {
              n2 = c[b2 + 176 >> 2] | 0;
              V2 = 0;
              W2 = 0;
              while (1) {
                U2 = n2 + (W2 << 3) | 0;
                if (!(c[U2 >> 2] | 0))
                  o2 = 0;
                else {
                  n2 = c[b2 + 56 >> 2] | 0;
                  K2 = n2 + (V2 * 152 | 0) | 0;
                  L2 = j2 + (W2 << 2) | 0;
                  M2 = c[L2 >> 2] | 0;
                  P2 = c[M2 + 28 >> 2] | 0;
                  Q2 = c[M2 + 32 >> 2] | 0;
                  R2 = cq(b2, P2, +g[m2 + 12 >> 2]) | 0;
                  S2 = cq(b2, Q2, +g[m2 + 12 >> 2]) | 0;
                  T2 = c[b2 + 16 >> 2] | 0;
                  o2 = c[M2 + 24 >> 2] | 0;
                  o2 = (o2 | 0) > 0 ? o2 : c[m2 + 20 >> 2] | 0;
                  if ((o2 | 0) > (c[b2 + 184 >> 2] | 0))
                    c[b2 + 184 >> 2] = o2;
                  if ((c[U2 >> 2] | 0) > 0) {
                    p2 = 0;
                    do {
                      ZG(K2 + (p2 * 152 | 0) | 0, 0, 152) | 0;
                      g[K2 + (p2 * 152 | 0) + 120 >> 2] = -34028234663852886e22;
                      g[K2 + (p2 * 152 | 0) + 124 >> 2] = 34028234663852886e22;
                      g[K2 + (p2 * 152 | 0) + 100 >> 2] = 0;
                      g[K2 + (p2 * 152 | 0) + 96 >> 2] = 0;
                      c[K2 + (p2 * 152 | 0) + 144 >> 2] = R2;
                      c[K2 + (p2 * 152 | 0) + 148 >> 2] = S2;
                      c[K2 + (p2 * 152 | 0) + 136 >> 2] = o2;
                      p2 = p2 + 1 | 0;
                    } while ((p2 | 0) < (c[U2 >> 2] | 0));
                  }
                  c[T2 + (R2 * 244 | 0) + 64 >> 2] = 0;
                  c[T2 + (R2 * 244 | 0) + 64 + 4 >> 2] = 0;
                  c[T2 + (R2 * 244 | 0) + 64 + 8 >> 2] = 0;
                  c[T2 + (R2 * 244 | 0) + 64 + 12 >> 2] = 0;
                  c[T2 + (R2 * 244 | 0) + 64 + 16 >> 2] = 0;
                  c[T2 + (R2 * 244 | 0) + 64 + 20 >> 2] = 0;
                  c[T2 + (R2 * 244 | 0) + 64 + 24 >> 2] = 0;
                  c[T2 + (R2 * 244 | 0) + 64 + 28 >> 2] = 0;
                  c[T2 + (R2 * 244 | 0) + 144 >> 2] = 0;
                  c[T2 + (R2 * 244 | 0) + 144 + 4 >> 2] = 0;
                  c[T2 + (R2 * 244 | 0) + 144 + 8 >> 2] = 0;
                  c[T2 + (R2 * 244 | 0) + 144 + 12 >> 2] = 0;
                  c[T2 + (R2 * 244 | 0) + 144 + 16 >> 2] = 0;
                  c[T2 + (R2 * 244 | 0) + 144 + 20 >> 2] = 0;
                  c[T2 + (R2 * 244 | 0) + 144 + 24 >> 2] = 0;
                  c[T2 + (R2 * 244 | 0) + 144 + 28 >> 2] = 0;
                  c[T2 + (S2 * 244 | 0) + 64 >> 2] = 0;
                  c[T2 + (S2 * 244 | 0) + 64 + 4 >> 2] = 0;
                  c[T2 + (S2 * 244 | 0) + 64 + 8 >> 2] = 0;
                  c[T2 + (S2 * 244 | 0) + 64 + 12 >> 2] = 0;
                  c[T2 + (S2 * 244 | 0) + 64 + 16 >> 2] = 0;
                  c[T2 + (S2 * 244 | 0) + 64 + 20 >> 2] = 0;
                  c[T2 + (S2 * 244 | 0) + 64 + 24 >> 2] = 0;
                  c[T2 + (S2 * 244 | 0) + 64 + 28 >> 2] = 0;
                  c[T2 + (S2 * 244 | 0) + 144 >> 2] = 0;
                  c[T2 + (S2 * 244 | 0) + 144 + 4 >> 2] = 0;
                  c[T2 + (S2 * 244 | 0) + 144 + 8 >> 2] = 0;
                  c[T2 + (S2 * 244 | 0) + 144 + 12 >> 2] = 0;
                  c[T2 + (S2 * 244 | 0) + 144 + 16 >> 2] = 0;
                  c[T2 + (S2 * 244 | 0) + 144 + 20 >> 2] = 0;
                  c[T2 + (S2 * 244 | 0) + 144 + 24 >> 2] = 0;
                  c[T2 + (S2 * 244 | 0) + 144 + 28 >> 2] = 0;
                  g[Y2 + 248 >> 2] = 1 / +g[m2 + 12 >> 2];
                  c[Y2 + 248 + 4 >> 2] = c[m2 + 32 >> 2];
                  c[Y2 + 248 + 8 >> 2] = n2 + (V2 * 152 | 0) + 16;
                  c[Y2 + 248 + 12 >> 2] = K2;
                  c[Y2 + 248 + 16 >> 2] = n2 + (V2 * 152 | 0) + 48;
                  c[Y2 + 248 + 20 >> 2] = n2 + (V2 * 152 | 0) + 32;
                  c[Y2 + 248 + 24 >> 2] = 38;
                  c[Y2 + 248 + 28 >> 2] = n2 + (V2 * 152 | 0) + 112;
                  J2 = n2 + (V2 * 152 | 0) + 116 | 0;
                  c[J2 >> 2] = c[m2 + 40 >> 2];
                  c[Y2 + 248 + 52 >> 2] = c[m2 + 4 >> 2];
                  c[Y2 + 248 + 32 >> 2] = J2;
                  c[Y2 + 248 + 36 >> 2] = n2 + (V2 * 152 | 0) + 120;
                  c[Y2 + 248 + 40 >> 2] = n2 + (V2 * 152 | 0) + 124;
                  c[Y2 + 248 + 48 >> 2] = c[m2 + 20 >> 2];
                  J2 = c[L2 >> 2] | 0;
                  tb[c[(c[J2 >> 2] | 0) + 20 >> 2] & 127](J2, Y2 + 248 | 0);
                  if ((c[U2 >> 2] | 0) > 0) {
                    J2 = 0;
                    do {
                      n2 = K2 + (J2 * 152 | 0) + 124 | 0;
                      r2 = +g[(c[L2 >> 2] | 0) + 16 >> 2];
                      if (+g[n2 >> 2] >= r2)
                        g[n2 >> 2] = r2;
                      n2 = K2 + (J2 * 152 | 0) + 120 | 0;
                      if (+g[n2 >> 2] <= -r2)
                        g[n2 >> 2] = -r2;
                      c[K2 + (J2 * 152 | 0) + 132 >> 2] = M2;
                      I2 = K2 + (J2 * 152 | 0) | 0;
                      n2 = K2 + (J2 * 152 | 0) + 64 | 0;
                      o2 = c[M2 + 28 >> 2] | 0;
                      la2 = +g[I2 >> 2];
                      ja2 = +g[I2 + 4 >> 2];
                      B2 = +g[I2 + 8 >> 2];
                      ka2 = (la2 * +g[o2 + 304 >> 2] + ja2 * +g[o2 + 308 >> 2] + B2 * +g[o2 + 312 >> 2]) * +g[o2 + 572 >> 2];
                      r2 = (la2 * +g[o2 + 320 >> 2] + ja2 * +g[o2 + 324 >> 2] + B2 * +g[o2 + 328 >> 2]) * +g[o2 + 576 >> 2];
                      g[n2 >> 2] = (+g[o2 + 288 >> 2] * la2 + +g[o2 + 292 >> 2] * ja2 + +g[o2 + 296 >> 2] * B2) * +g[o2 + 568 >> 2];
                      g[n2 + 4 >> 2] = ka2;
                      g[n2 + 8 >> 2] = r2;
                      g[n2 + 12 >> 2] = 0;
                      n2 = K2 + (J2 * 152 | 0) + 32 | 0;
                      o2 = K2 + (J2 * 152 | 0) + 80 | 0;
                      H2 = c[M2 + 32 >> 2] | 0;
                      r2 = +g[n2 >> 2];
                      ka2 = +g[n2 + 4 >> 2];
                      B2 = +g[n2 + 8 >> 2];
                      ja2 = (r2 * +g[H2 + 304 >> 2] + ka2 * +g[H2 + 308 >> 2] + B2 * +g[H2 + 312 >> 2]) * +g[H2 + 572 >> 2];
                      la2 = (r2 * +g[H2 + 320 >> 2] + ka2 * +g[H2 + 324 >> 2] + B2 * +g[H2 + 328 >> 2]) * +g[H2 + 576 >> 2];
                      g[o2 >> 2] = (+g[H2 + 288 >> 2] * r2 + +g[H2 + 292 >> 2] * ka2 + +g[H2 + 296 >> 2] * B2) * +g[H2 + 568 >> 2];
                      g[o2 + 4 >> 2] = ja2;
                      g[o2 + 8 >> 2] = la2;
                      g[o2 + 12 >> 2] = 0;
                      o2 = K2 + (J2 * 152 | 0) + 16 | 0;
                      la2 = +g[P2 + 368 >> 2];
                      ja2 = +g[o2 >> 2];
                      ka2 = +g[o2 + 4 >> 2];
                      r2 = +g[o2 + 8 >> 2];
                      t2 = +g[I2 >> 2];
                      u2 = +g[I2 + 4 >> 2];
                      v2 = +g[I2 + 8 >> 2];
                      I2 = K2 + (J2 * 152 | 0) + 48 | 0;
                      ma2 = +g[Q2 + 368 >> 2];
                      w2 = +g[I2 >> 2];
                      x2 = +g[I2 + 4 >> 2];
                      y2 = +g[I2 + 8 >> 2];
                      z2 = +g[n2 >> 2];
                      A2 = +g[n2 + 4 >> 2];
                      B2 = ja2 * (la2 * ja2) + ka2 * (la2 * ka2) + r2 * (la2 * r2) + (t2 * (+g[P2 + 288 >> 2] * t2 + +g[P2 + 292 >> 2] * u2 + +g[P2 + 296 >> 2] * v2) + u2 * (t2 * +g[P2 + 304 >> 2] + u2 * +g[P2 + 308 >> 2] + v2 * +g[P2 + 312 >> 2]) + v2 * (t2 * +g[P2 + 320 >> 2] + u2 * +g[P2 + 324 >> 2] + v2 * +g[P2 + 328 >> 2])) + (w2 * (ma2 * w2) + x2 * (ma2 * x2) + y2 * (ma2 * y2)) + (z2 * (+g[Q2 + 288 >> 2] * z2 + +g[Q2 + 292 >> 2] * A2 + +g[Q2 + 296 >> 2] * B2) + A2 * (z2 * +g[Q2 + 304 >> 2] + A2 * +g[Q2 + 308 >> 2] + B2 * +g[Q2 + 312 >> 2]) + B2 * (z2 * +g[Q2 + 320 >> 2] + A2 * +g[Q2 + 324 >> 2] + B2 * +g[Q2 + 328 >> 2]));
                      I2 = +N(+B2) > 11920928955078125e-23;
                      B2 = I2 ? 1 / B2 : 0;
                      g[K2 + (J2 * 152 | 0) + 108 >> 2] = B2;
                      if (!(c[T2 + (R2 * 244 | 0) + 240 >> 2] | 0)) {
                        p2 = 0;
                        q2 = 0;
                        s2 = 0;
                        D2 = 0;
                        E2 = 0;
                        F2 = 0;
                      } else {
                        p2 = c[T2 + (R2 * 244 | 0) + 208 >> 2] | 0;
                        q2 = c[T2 + (R2 * 244 | 0) + 212 >> 2] | 0;
                        s2 = c[T2 + (R2 * 244 | 0) + 216 >> 2] | 0;
                        D2 = c[T2 + (R2 * 244 | 0) + 224 >> 2] | 0;
                        E2 = c[T2 + (R2 * 244 | 0) + 228 >> 2] | 0;
                        F2 = c[T2 + (R2 * 244 | 0) + 232 >> 2] | 0;
                      }
                      if (!(c[T2 + (S2 * 244 | 0) + 240 >> 2] | 0)) {
                        d2 = 0;
                        e2 = 0;
                        C2 = 0;
                        G2 = 0;
                        H2 = 0;
                        I2 = 0;
                      } else {
                        d2 = c[T2 + (S2 * 244 | 0) + 208 >> 2] | 0;
                        e2 = c[T2 + (S2 * 244 | 0) + 212 >> 2] | 0;
                        C2 = c[T2 + (S2 * 244 | 0) + 216 >> 2] | 0;
                        G2 = c[T2 + (S2 * 244 | 0) + 224 >> 2] | 0;
                        H2 = c[T2 + (S2 * 244 | 0) + 228 >> 2] | 0;
                        I2 = c[T2 + (S2 * 244 | 0) + 232 >> 2] | 0;
                      }
                      la2 = (c[k >> 2] = p2, +g[k >> 2]) + +g[P2 + 336 >> 2];
                      ka2 = (c[k >> 2] = q2, +g[k >> 2]) + +g[P2 + 340 >> 2];
                      ka2 = la2 * +g[o2 >> 2] + ka2 * +g[o2 + 4 >> 2] + ((c[k >> 2] = s2, +g[k >> 2]) + +g[P2 + 344 >> 2]) * r2;
                      la2 = (c[k >> 2] = D2, +g[k >> 2]) + +g[P2 + 352 >> 2];
                      ja2 = (c[k >> 2] = E2, +g[k >> 2]) + +g[P2 + 356 >> 2];
                      ja2 = ka2 + (la2 * t2 + ja2 * u2 + ((c[k >> 2] = F2, +g[k >> 2]) + +g[P2 + 360 >> 2]) * v2);
                      la2 = (c[k >> 2] = d2, +g[k >> 2]) + +g[Q2 + 336 >> 2];
                      ka2 = (c[k >> 2] = e2, +g[k >> 2]) + +g[Q2 + 340 >> 2];
                      ka2 = la2 * w2 + ka2 * x2 + ((c[k >> 2] = C2, +g[k >> 2]) + +g[Q2 + 344 >> 2]) * y2;
                      la2 = (c[k >> 2] = G2, +g[k >> 2]) + +g[Q2 + 352 >> 2];
                      ma2 = (c[k >> 2] = H2, +g[k >> 2]) + +g[Q2 + 356 >> 2];
                      H2 = K2 + (J2 * 152 | 0) + 112 | 0;
                      g[H2 >> 2] = +g[H2 >> 2] * B2 + B2 * (0 - +g[Y2 + 248 + 52 >> 2] * (ja2 + (ka2 + (la2 * z2 + ma2 * A2 + ((c[k >> 2] = I2, +g[k >> 2]) + +g[Q2 + 360 >> 2]) * +g[n2 + 8 >> 2]))));
                      g[K2 + (J2 * 152 | 0) + 100 >> 2] = 0;
                      J2 = J2 + 1 | 0;
                    } while ((J2 | 0) < (c[U2 >> 2] | 0));
                  }
                  n2 = c[b2 + 176 >> 2] | 0;
                  o2 = c[n2 + (W2 << 3) >> 2] | 0;
                }
                W2 = W2 + 1 | 0;
                if ((W2 | 0) >= (l2 | 0))
                  break;
                else
                  V2 = o2 + V2 | 0;
              }
            }
            bc[c[(c[b2 >> 2] | 0) + 28 >> 2] & 127](b2, f2, h2, m2);
            s2 = c[b2 + 48 >> 2] | 0;
            d2 = c[b2 + 28 >> 2] | 0;
            e2 = c[b2 + 68 >> 2] | 0;
            o2 = c[b2 + 128 >> 2] | 0;
            if ((o2 | 0) < (s2 | 0) ? (c[b2 + 132 >> 2] | 0) < (s2 | 0) : 0) {
              if (!s2)
                n2 = 0;
              else {
                c[5637] = (c[5637] | 0) + 1;
                n2 = qG((s2 << 2 | 3) + 16 | 0) | 0;
                if (!n2)
                  n2 = 0;
                else {
                  c[(n2 + 4 + 15 & -16) + -4 >> 2] = n2;
                  n2 = n2 + 4 + 15 & -16;
                }
                o2 = c[b2 + 128 >> 2] | 0;
              }
              q2 = c[b2 + 136 >> 2] | 0;
              if ((o2 | 0) <= 0)
                if (!q2)
                  o2 = b2 + 140 | 0;
                else
                  X2 = 103;
              else {
                p2 = 0;
                do {
                  c[n2 + (p2 << 2) >> 2] = c[q2 + (p2 << 2) >> 2];
                  p2 = p2 + 1 | 0;
                } while ((p2 | 0) != (o2 | 0));
                X2 = 103;
              }
              if ((X2 | 0) == 103) {
                if (a[b2 + 140 >> 0] | 0) {
                  c[5638] = (c[5638] | 0) + 1;
                  rG(c[q2 + -4 >> 2] | 0);
                }
                c[b2 + 136 >> 2] = 0;
                o2 = b2 + 140 | 0;
              }
              a[o2 >> 0] = 1;
              c[b2 + 136 >> 2] = n2;
              c[b2 + 132 >> 2] = s2;
            }
            c[b2 + 128 >> 2] = s2;
            if (!(c[m2 + 64 >> 2] & 16)) {
              o2 = c[b2 + 108 >> 2] | 0;
              if ((o2 | 0) < (d2 | 0) ? (c[b2 + 112 >> 2] | 0) < (d2 | 0) : 0) {
                if (!d2)
                  n2 = 0;
                else {
                  c[5637] = (c[5637] | 0) + 1;
                  n2 = qG((d2 << 2 | 3) + 16 | 0) | 0;
                  if (!n2)
                    n2 = 0;
                  else {
                    c[(n2 + 4 + 15 & -16) + -4 >> 2] = n2;
                    n2 = n2 + 4 + 15 & -16;
                  }
                  o2 = c[b2 + 108 >> 2] | 0;
                }
                q2 = c[b2 + 116 >> 2] | 0;
                if ((o2 | 0) <= 0)
                  if (!q2)
                    o2 = b2 + 120 | 0;
                  else
                    X2 = 133;
                else {
                  p2 = 0;
                  do {
                    c[n2 + (p2 << 2) >> 2] = c[q2 + (p2 << 2) >> 2];
                    p2 = p2 + 1 | 0;
                  } while ((p2 | 0) != (o2 | 0));
                  X2 = 133;
                }
                if ((X2 | 0) == 133) {
                  if (a[b2 + 120 >> 0] | 0) {
                    c[5638] = (c[5638] | 0) + 1;
                    rG(c[q2 + -4 >> 2] | 0);
                  }
                  c[b2 + 116 >> 2] = 0;
                  o2 = b2 + 120 | 0;
                }
                a[o2 >> 0] = 1;
                c[b2 + 116 >> 2] = n2;
                c[b2 + 112 >> 2] = d2;
              }
              c[b2 + 108 >> 2] = d2;
            } else {
              o2 = c[b2 + 108 >> 2] | 0;
              if ((o2 | 0) < (d2 << 1 | 0) ? (c[b2 + 112 >> 2] | 0) < (d2 << 1 | 0) : 0) {
                if (!d2)
                  n2 = 0;
                else {
                  c[5637] = (c[5637] | 0) + 1;
                  n2 = qG((d2 << 3 | 3) + 16 | 0) | 0;
                  if (!n2)
                    n2 = 0;
                  else {
                    c[(n2 + 4 + 15 & -16) + -4 >> 2] = n2;
                    n2 = n2 + 4 + 15 & -16;
                  }
                  o2 = c[b2 + 108 >> 2] | 0;
                }
                q2 = c[b2 + 116 >> 2] | 0;
                if ((o2 | 0) <= 0)
                  if (!q2)
                    o2 = b2 + 120 | 0;
                  else
                    X2 = 118;
                else {
                  p2 = 0;
                  do {
                    c[n2 + (p2 << 2) >> 2] = c[q2 + (p2 << 2) >> 2];
                    p2 = p2 + 1 | 0;
                  } while ((p2 | 0) != (o2 | 0));
                  X2 = 118;
                }
                if ((X2 | 0) == 118) {
                  if (a[b2 + 120 >> 0] | 0) {
                    c[5638] = (c[5638] | 0) + 1;
                    rG(c[q2 + -4 >> 2] | 0);
                  }
                  c[b2 + 116 >> 2] = 0;
                  o2 = b2 + 120 | 0;
                }
                a[o2 >> 0] = 1;
                c[b2 + 116 >> 2] = n2;
                c[b2 + 112 >> 2] = d2 << 1;
              }
              c[b2 + 108 >> 2] = d2 << 1;
            }
            o2 = c[b2 + 148 >> 2] | 0;
            if ((o2 | 0) < (e2 | 0) ? (c[b2 + 152 >> 2] | 0) < (e2 | 0) : 0) {
              if (!e2)
                n2 = 0;
              else {
                c[5637] = (c[5637] | 0) + 1;
                n2 = qG((e2 << 2 | 3) + 16 | 0) | 0;
                if (!n2)
                  n2 = 0;
                else {
                  c[(n2 + 4 + 15 & -16) + -4 >> 2] = n2;
                  n2 = n2 + 4 + 15 & -16;
                }
                o2 = c[b2 + 148 >> 2] | 0;
              }
              q2 = c[b2 + 156 >> 2] | 0;
              if ((o2 | 0) <= 0)
                if (!q2)
                  o2 = b2 + 160 | 0;
                else
                  X2 = 148;
              else {
                p2 = 0;
                do {
                  c[n2 + (p2 << 2) >> 2] = c[q2 + (p2 << 2) >> 2];
                  p2 = p2 + 1 | 0;
                } while ((p2 | 0) != (o2 | 0));
                X2 = 148;
              }
              if ((X2 | 0) == 148) {
                if (a[b2 + 160 >> 0] | 0) {
                  c[5638] = (c[5638] | 0) + 1;
                  rG(c[q2 + -4 >> 2] | 0);
                }
                c[b2 + 156 >> 2] = 0;
                o2 = b2 + 160 | 0;
              }
              a[o2 >> 0] = 1;
              c[b2 + 156 >> 2] = n2;
              c[b2 + 152 >> 2] = e2;
            }
            c[b2 + 148 >> 2] = e2;
            if ((s2 | 0) > 0) {
              n2 = c[b2 + 136 >> 2] | 0;
              o2 = 0;
              do {
                c[n2 + (o2 << 2) >> 2] = o2;
                o2 = o2 + 1 | 0;
              } while ((o2 | 0) != (s2 | 0));
            }
            if ((d2 | 0) > 0) {
              n2 = c[b2 + 116 >> 2] | 0;
              o2 = 0;
              do {
                c[n2 + (o2 << 2) >> 2] = o2;
                o2 = o2 + 1 | 0;
              } while ((o2 | 0) != (d2 | 0));
            }
            if ((e2 | 0) > 0) {
              n2 = c[b2 + 156 >> 2] | 0;
              o2 = 0;
              do {
                c[n2 + (o2 << 2) >> 2] = o2;
                o2 = o2 + 1 | 0;
              } while ((o2 | 0) != (e2 | 0));
            }
            n2 = c[2006] | 0;
            b2 = (c[n2 + 16 >> 2] | 0) + -1 | 0;
            c[n2 + 16 >> 2] = b2;
            if (b2 | 0) {
              i = Y2;
              return 0;
            }
            do
              if (c[n2 + 4 >> 2] | 0) {
                kb(Y2 + 248 | 0, 0) | 0;
                b2 = c[5649] | 0;
                g[n2 + 8 >> 2] = +g[n2 + 8 >> 2] + +(((c[Y2 + 248 + 4 >> 2] | 0) - (c[b2 + 4 >> 2] | 0) + (((c[Y2 + 248 >> 2] | 0) - (c[b2 >> 2] | 0) | 0) * 1e6 | 0) - (c[n2 + 12 >> 2] | 0) | 0) >>> 0) / 1e3;
                if (!(c[n2 + 16 >> 2] | 0)) {
                  n2 = c[2006] | 0;
                  break;
                } else {
                  i = Y2;
                  return 0;
                }
              }
            while (0);
            c[2006] = c[n2 + 20 >> 2];
            i = Y2;
            return 0;
          }
          function oq(a2, b2, d2, e2, f2, h2, j2, k2, l2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            h2 = h2 | 0;
            j2 = j2 | 0;
            k2 = k2 | 0;
            l2 = l2 | 0;
            var m2 = 0, n2 = 0, o2 = 0;
            o2 = i;
            i = i + 16 | 0;
            fs(15561);
            Mb[c[(c[a2 >> 2] | 0) + 32 >> 2] & 1](a2, b2, d2, e2, f2, h2, j2, k2, l2);
            n2 = c[a2 + 184 >> 2] | 0;
            m2 = c[k2 + 20 >> 2] | 0;
            m2 = (n2 | 0) > (m2 | 0) ? n2 : m2;
            if ((m2 | 0) > 0) {
              n2 = 0;
              do {
                +Qb[c[(c[a2 >> 2] | 0) + 40 >> 2] & 3](a2, n2, b2, d2, e2, f2, h2, j2, k2, l2);
                n2 = n2 + 1 | 0;
              } while ((n2 | 0) < (m2 | 0));
            }
            m2 = c[2006] | 0;
            a2 = (c[m2 + 16 >> 2] | 0) + -1 | 0;
            c[m2 + 16 >> 2] = a2;
            if (a2 | 0) {
              i = o2;
              return 0;
            }
            do
              if (c[m2 + 4 >> 2] | 0) {
                kb(o2 | 0, 0) | 0;
                a2 = c[5649] | 0;
                g[m2 + 8 >> 2] = +g[m2 + 8 >> 2] + +(((c[o2 + 4 >> 2] | 0) - (c[a2 + 4 >> 2] | 0) + (((c[o2 >> 2] | 0) - (c[a2 >> 2] | 0) | 0) * 1e6 | 0) - (c[m2 + 12 >> 2] | 0) | 0) >>> 0) / 1e3;
                if (!(c[m2 + 16 >> 2] | 0)) {
                  m2 = c[2006] | 0;
                  break;
                } else {
                  i = o2;
                  return 0;
                }
              }
            while (0);
            c[2006] = c[m2 + 20 >> 2];
            i = o2;
            return 0;
          }
          function pq(a2) {
            a2 = a2 | 0;
            c[a2 >> 2] = 7188;
            if (!a2)
              return;
            c[5638] = (c[5638] | 0) + 1;
            rG(c[a2 + -4 >> 2] | 0);
            return;
          }
          function qq(b2, d2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0, l2 = 0, m2 = 0;
            if (a[b2 + 48 >> 0] | 0) {
              c[d2 >> 2] = 0;
              c[d2 + 4 >> 2] = 0;
              return;
            }
            c[d2 >> 2] = 4;
            c[d2 + 4 >> 2] = 2;
            rq(b2, (c[b2 + 28 >> 2] | 0) + 4 | 0, (c[b2 + 32 >> 2] | 0) + 4 | 0);
            g[b2 + 1088 >> 2] = 0;
            a[b2 + 297 >> 0] = 0;
            f2 = +g[b2 + 192 >> 2];
            h2 = +g[b2 + 196 >> 2];
            do
              if (f2 <= h2) {
                m2 = +g[b2 + 892 >> 2];
                l2 = +g[b2 + 908 >> 2];
                i2 = +g[b2 + 924 >> 2];
                i2 = +ap(+W(+(+g[b2 + 832 >> 2] * m2 + +g[b2 + 848 >> 2] * l2 + +g[b2 + 864 >> 2] * i2), +(+g[b2 + 828 >> 2] * m2 + +g[b2 + 844 >> 2] * l2 + +g[b2 + 860 >> 2] * i2)), f2, h2);
                g[b2 + 1084 >> 2] = i2;
                if (i2 < f2) {
                  g[b2 + 1088 >> 2] = i2 - f2;
                  a[b2 + 297 >> 0] = 1;
                  j2 = 1;
                  break;
                }
                if (i2 > h2) {
                  g[b2 + 1088 >> 2] = i2 - h2;
                  a[b2 + 297 >> 0] = 1;
                  j2 = 1;
                } else
                  j2 = 0;
              } else
                j2 = 0;
            while (0);
            a[b2 + 296 >> 0] = 0;
            e2 = c[b2 + 1032 >> 2] | 0;
            c[b2 + 1080 >> 2] = e2;
            f2 = +g[b2 + 184 >> 2];
            h2 = +g[b2 + 188 >> 2];
            i2 = (c[k >> 2] = e2, +g[k >> 2]);
            do
              if (f2 <= h2) {
                if (i2 > h2) {
                  g[b2 + 1032 >> 2] = i2 - h2;
                  a[b2 + 296 >> 0] = 1;
                  e2 = 14;
                  break;
                }
                if (i2 < f2) {
                  g[b2 + 1032 >> 2] = i2 - f2;
                  a[b2 + 296 >> 0] = 1;
                  e2 = 14;
                } else
                  e2 = 13;
              } else
                e2 = 13;
            while (0);
            if ((e2 | 0) == 13 ? (g[b2 + 1032 >> 2] = 0, a[b2 + 1096 >> 0] | 0) : 0)
              e2 = 14;
            if ((e2 | 0) == 14) {
              c[d2 >> 2] = (c[d2 >> 2] | 0) + 1;
              c[d2 + 4 >> 2] = (c[d2 + 4 >> 2] | 0) + -1;
            }
            if (j2 << 24 >> 24 == 0 ? (a[b2 + 1112 >> 0] | 0) == 0 : 0)
              return;
            c[d2 >> 2] = (c[d2 >> 2] | 0) + 1;
            c[d2 + 4 >> 2] = (c[d2 + 4 >> 2] | 0) + -1;
            return;
          }
          function rq(b2, d2, e2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, h2 = 0, i2 = 0, j2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0;
            if ((a[b2 + 180 >> 0] | 0) == 0 ? (a[b2 + 48 >> 0] | 0) != 0 : 0) {
              w2 = +g[b2 + 116 >> 2];
              i2 = +g[e2 >> 2];
              x2 = +g[b2 + 132 >> 2];
              C2 = +g[e2 + 4 >> 2];
              y2 = +g[b2 + 148 >> 2];
              D2 = +g[e2 + 8 >> 2];
              l2 = +g[b2 + 120 >> 2];
              n2 = +g[b2 + 136 >> 2];
              p2 = +g[b2 + 152 >> 2];
              q2 = +g[b2 + 124 >> 2];
              s2 = +g[b2 + 140 >> 2];
              t2 = +g[b2 + 156 >> 2];
              j2 = +g[e2 + 16 >> 2];
              m2 = +g[e2 + 20 >> 2];
              o2 = +g[e2 + 24 >> 2];
              r2 = +g[e2 + 32 >> 2];
              z2 = +g[e2 + 36 >> 2];
              A2 = +g[e2 + 40 >> 2];
              h2 = +g[b2 + 164 >> 2];
              f2 = +g[b2 + 168 >> 2];
              v2 = +g[b2 + 172 >> 2];
              u2 = +g[e2 + 48 >> 2] + (i2 * h2 + C2 * f2 + D2 * v2);
              B2 = j2 * h2 + m2 * f2 + o2 * v2 + +g[e2 + 52 >> 2];
              v2 = r2 * h2 + z2 * f2 + A2 * v2 + +g[e2 + 56 >> 2];
              g[b2 + 824 >> 2] = w2 * i2 + x2 * C2 + y2 * D2;
              g[b2 + 828 >> 2] = i2 * l2 + C2 * n2 + D2 * p2;
              g[b2 + 832 >> 2] = i2 * q2 + C2 * s2 + D2 * t2;
              g[b2 + 836 >> 2] = 0;
              g[b2 + 840 >> 2] = w2 * j2 + x2 * m2 + y2 * o2;
              g[b2 + 844 >> 2] = l2 * j2 + n2 * m2 + p2 * o2;
              g[b2 + 848 >> 2] = q2 * j2 + s2 * m2 + t2 * o2;
              g[b2 + 852 >> 2] = 0;
              g[b2 + 856 >> 2] = w2 * r2 + x2 * z2 + y2 * A2;
              g[b2 + 860 >> 2] = l2 * r2 + n2 * z2 + p2 * A2;
              g[b2 + 864 >> 2] = q2 * r2 + s2 * z2 + t2 * A2;
              g[b2 + 868 >> 2] = 0;
              g[b2 + 872 >> 2] = u2;
              g[b2 + 876 >> 2] = B2;
              g[b2 + 880 >> 2] = v2;
              g[b2 + 884 >> 2] = 0;
              v2 = +g[b2 + 52 >> 2];
              B2 = +g[d2 >> 2];
              u2 = +g[b2 + 68 >> 2];
              A2 = +g[d2 + 4 >> 2];
              t2 = +g[b2 + 84 >> 2];
              z2 = +g[d2 + 8 >> 2];
              s2 = +g[b2 + 56 >> 2];
              r2 = +g[b2 + 72 >> 2];
              q2 = +g[b2 + 88 >> 2];
              p2 = +g[b2 + 60 >> 2];
              n2 = +g[b2 + 76 >> 2];
              l2 = +g[b2 + 92 >> 2];
              y2 = +g[d2 + 16 >> 2];
              x2 = +g[d2 + 20 >> 2];
              w2 = +g[d2 + 24 >> 2];
              o2 = +g[d2 + 32 >> 2];
              m2 = +g[d2 + 36 >> 2];
              j2 = +g[d2 + 40 >> 2];
              D2 = +g[b2 + 100 >> 2];
              C2 = +g[b2 + 104 >> 2];
              i2 = +g[b2 + 108 >> 2];
              f2 = +g[d2 + 48 >> 2] + (B2 * D2 + A2 * C2 + z2 * i2);
              h2 = y2 * D2 + x2 * C2 + w2 * i2 + +g[d2 + 52 >> 2];
              i2 = o2 * D2 + m2 * C2 + j2 * i2 + +g[d2 + 56 >> 2];
              g[b2 + 888 >> 2] = v2 * B2 + u2 * A2 + t2 * z2;
              g[b2 + 892 >> 2] = B2 * s2 + A2 * r2 + z2 * q2;
              g[b2 + 896 >> 2] = B2 * p2 + A2 * n2 + z2 * l2;
              g[b2 + 900 >> 2] = 0;
              g[b2 + 904 >> 2] = v2 * y2 + u2 * x2 + t2 * w2;
              g[b2 + 908 >> 2] = s2 * y2 + r2 * x2 + q2 * w2;
              g[b2 + 912 >> 2] = p2 * y2 + n2 * x2 + l2 * w2;
              g[b2 + 916 >> 2] = 0;
              g[b2 + 920 >> 2] = v2 * o2 + u2 * m2 + t2 * j2;
              g[b2 + 924 >> 2] = s2 * o2 + r2 * m2 + q2 * j2;
              g[b2 + 928 >> 2] = p2 * o2 + n2 * m2 + l2 * j2;
              g[b2 + 932 >> 2] = 0;
              g[b2 + 936 >> 2] = f2;
              g[b2 + 940 >> 2] = h2;
              g[b2 + 944 >> 2] = i2;
              g[b2 + 948 >> 2] = 0;
              d2 = b2 + 856 | 0;
              e2 = b2 + 840 | 0;
            } else {
              o2 = +g[b2 + 52 >> 2];
              D2 = +g[d2 >> 2];
              n2 = +g[b2 + 68 >> 2];
              h2 = +g[d2 + 4 >> 2];
              m2 = +g[b2 + 84 >> 2];
              f2 = +g[d2 + 8 >> 2];
              z2 = +g[b2 + 56 >> 2];
              x2 = +g[b2 + 72 >> 2];
              v2 = +g[b2 + 88 >> 2];
              u2 = +g[b2 + 60 >> 2];
              s2 = +g[b2 + 76 >> 2];
              r2 = +g[b2 + 92 >> 2];
              A2 = +g[d2 + 16 >> 2];
              y2 = +g[d2 + 20 >> 2];
              w2 = +g[d2 + 24 >> 2];
              t2 = +g[d2 + 32 >> 2];
              l2 = +g[d2 + 36 >> 2];
              j2 = +g[d2 + 40 >> 2];
              C2 = +g[b2 + 100 >> 2];
              B2 = +g[b2 + 104 >> 2];
              p2 = +g[b2 + 108 >> 2];
              q2 = +g[d2 + 48 >> 2] + (D2 * C2 + h2 * B2 + f2 * p2);
              i2 = A2 * C2 + y2 * B2 + w2 * p2 + +g[d2 + 52 >> 2];
              p2 = t2 * C2 + l2 * B2 + j2 * p2 + +g[d2 + 56 >> 2];
              g[b2 + 824 >> 2] = o2 * D2 + n2 * h2 + m2 * f2;
              g[b2 + 828 >> 2] = D2 * z2 + h2 * x2 + f2 * v2;
              g[b2 + 832 >> 2] = D2 * u2 + h2 * s2 + f2 * r2;
              g[b2 + 836 >> 2] = 0;
              g[b2 + 840 >> 2] = o2 * A2 + n2 * y2 + m2 * w2;
              g[b2 + 844 >> 2] = z2 * A2 + x2 * y2 + v2 * w2;
              g[b2 + 848 >> 2] = u2 * A2 + s2 * y2 + r2 * w2;
              g[b2 + 852 >> 2] = 0;
              g[b2 + 856 >> 2] = o2 * t2 + n2 * l2 + m2 * j2;
              g[b2 + 860 >> 2] = z2 * t2 + x2 * l2 + v2 * j2;
              g[b2 + 864 >> 2] = u2 * t2 + s2 * l2 + r2 * j2;
              g[b2 + 868 >> 2] = 0;
              g[b2 + 872 >> 2] = q2;
              g[b2 + 876 >> 2] = i2;
              g[b2 + 880 >> 2] = p2;
              g[b2 + 884 >> 2] = 0;
              p2 = +g[b2 + 116 >> 2];
              i2 = +g[e2 >> 2];
              q2 = +g[b2 + 132 >> 2];
              j2 = +g[e2 + 4 >> 2];
              r2 = +g[b2 + 148 >> 2];
              l2 = +g[e2 + 8 >> 2];
              s2 = +g[b2 + 120 >> 2];
              t2 = +g[b2 + 136 >> 2];
              u2 = +g[b2 + 152 >> 2];
              v2 = +g[b2 + 124 >> 2];
              x2 = +g[b2 + 140 >> 2];
              z2 = +g[b2 + 156 >> 2];
              m2 = +g[e2 + 16 >> 2];
              n2 = +g[e2 + 20 >> 2];
              o2 = +g[e2 + 24 >> 2];
              w2 = +g[e2 + 32 >> 2];
              y2 = +g[e2 + 36 >> 2];
              A2 = +g[e2 + 40 >> 2];
              f2 = +g[b2 + 164 >> 2];
              h2 = +g[b2 + 168 >> 2];
              D2 = +g[b2 + 172 >> 2];
              B2 = +g[e2 + 48 >> 2] + (i2 * f2 + j2 * h2 + l2 * D2);
              C2 = m2 * f2 + n2 * h2 + o2 * D2 + +g[e2 + 52 >> 2];
              D2 = w2 * f2 + y2 * h2 + A2 * D2 + +g[e2 + 56 >> 2];
              g[b2 + 888 >> 2] = p2 * i2 + q2 * j2 + r2 * l2;
              g[b2 + 892 >> 2] = i2 * s2 + j2 * t2 + l2 * u2;
              g[b2 + 896 >> 2] = i2 * v2 + j2 * x2 + l2 * z2;
              g[b2 + 900 >> 2] = 0;
              g[b2 + 904 >> 2] = p2 * m2 + q2 * n2 + r2 * o2;
              g[b2 + 908 >> 2] = s2 * m2 + t2 * n2 + u2 * o2;
              g[b2 + 912 >> 2] = v2 * m2 + x2 * n2 + z2 * o2;
              g[b2 + 916 >> 2] = 0;
              g[b2 + 920 >> 2] = p2 * w2 + q2 * y2 + r2 * A2;
              g[b2 + 924 >> 2] = s2 * w2 + t2 * y2 + u2 * A2;
              g[b2 + 928 >> 2] = v2 * w2 + x2 * y2 + z2 * A2;
              g[b2 + 932 >> 2] = 0;
              g[b2 + 936 >> 2] = B2;
              g[b2 + 940 >> 2] = C2;
              g[b2 + 944 >> 2] = D2;
              g[b2 + 948 >> 2] = 0;
              d2 = b2 + 856 | 0;
              e2 = b2 + 840 | 0;
            }
            c[b2 + 968 >> 2] = c[b2 + 872 >> 2];
            c[b2 + 968 + 4 >> 2] = c[b2 + 872 + 4 >> 2];
            c[b2 + 968 + 8 >> 2] = c[b2 + 872 + 8 >> 2];
            c[b2 + 968 + 12 >> 2] = c[b2 + 872 + 12 >> 2];
            c[b2 + 984 >> 2] = c[b2 + 936 >> 2];
            c[b2 + 984 + 4 >> 2] = c[b2 + 936 + 4 >> 2];
            c[b2 + 984 + 8 >> 2] = c[b2 + 936 + 8 >> 2];
            c[b2 + 984 + 12 >> 2] = c[b2 + 936 + 12 >> 2];
            F2 = c[b2 + 824 >> 2] | 0;
            E2 = c[e2 >> 2] | 0;
            e2 = c[d2 >> 2] | 0;
            c[b2 + 952 >> 2] = F2;
            c[b2 + 956 >> 2] = E2;
            c[b2 + 960 >> 2] = e2;
            g[b2 + 964 >> 2] = 0;
            f2 = (c[k >> 2] = F2, +g[k >> 2]);
            h2 = (c[k >> 2] = E2, +g[k >> 2]);
            i2 = (c[k >> 2] = e2, +g[k >> 2]);
            if ((a[b2 + 180 >> 0] | 0) == 0 ? (a[b2 + 48 >> 0] | 0) == 0 : 0) {
              u2 = +g[b2 + 968 >> 2];
              A2 = u2 - +g[b2 + 984 >> 2];
              v2 = +g[b2 + 972 >> 2];
              C2 = v2 - +g[b2 + 988 >> 2];
              w2 = +g[b2 + 976 >> 2];
              D2 = w2 - +g[b2 + 992 >> 2];
              g[b2 + 1016 >> 2] = A2;
              g[b2 + 1020 >> 2] = C2;
              g[b2 + 1024 >> 2] = D2;
              g[b2 + 1028 >> 2] = 0;
              B2 = f2 * A2;
              x2 = h2 * C2;
              x2 = B2 + x2;
              B2 = i2 * D2;
              B2 = x2 + B2;
              x2 = f2 * B2;
              y2 = h2 * B2;
              z2 = i2 * B2;
              x2 = u2 + x2;
              y2 = v2 + y2;
              z2 = w2 + z2;
              F2 = b2 + 1e3 | 0;
              g[F2 >> 2] = x2;
              F2 = b2 + 1004 | 0;
              g[F2 >> 2] = y2;
              F2 = b2 + 1008 | 0;
              g[F2 >> 2] = z2;
              F2 = b2 + 1012 | 0;
              g[F2 >> 2] = 0;
              F2 = b2 + 1032 | 0;
              g[F2 >> 2] = B2;
              F2 = b2 + 828 | 0;
              E2 = b2 + 844 | 0;
              e2 = b2 + 860 | 0;
              B2 = +g[F2 >> 2];
              z2 = +g[E2 >> 2];
              y2 = +g[e2 >> 2];
              B2 = B2 * A2;
              z2 = z2 * C2;
              z2 = B2 + z2;
              y2 = y2 * D2;
              y2 = z2 + y2;
              e2 = b2 + 1036 | 0;
              g[e2 >> 2] = y2;
              e2 = b2 + 832 | 0;
              E2 = b2 + 848 | 0;
              F2 = b2 + 864 | 0;
              y2 = +g[e2 >> 2];
              z2 = +g[E2 >> 2];
              B2 = +g[F2 >> 2];
              A2 = y2 * A2;
              C2 = z2 * C2;
              C2 = A2 + C2;
              D2 = B2 * D2;
              D2 = C2 + D2;
              F2 = b2 + 1040 | 0;
              g[F2 >> 2] = D2;
              return;
            }
            u2 = +g[b2 + 968 >> 2];
            A2 = +g[b2 + 984 >> 2] - u2;
            v2 = +g[b2 + 972 >> 2];
            C2 = +g[b2 + 988 >> 2] - v2;
            w2 = +g[b2 + 976 >> 2];
            D2 = +g[b2 + 992 >> 2] - w2;
            g[b2 + 1016 >> 2] = A2;
            g[b2 + 1020 >> 2] = C2;
            g[b2 + 1024 >> 2] = D2;
            g[b2 + 1028 >> 2] = 0;
            B2 = f2 * A2;
            x2 = h2 * C2;
            x2 = B2 + x2;
            B2 = i2 * D2;
            B2 = x2 + B2;
            x2 = f2 * B2;
            y2 = h2 * B2;
            z2 = i2 * B2;
            x2 = u2 + x2;
            y2 = v2 + y2;
            z2 = w2 + z2;
            F2 = b2 + 1e3 | 0;
            g[F2 >> 2] = x2;
            F2 = b2 + 1004 | 0;
            g[F2 >> 2] = y2;
            F2 = b2 + 1008 | 0;
            g[F2 >> 2] = z2;
            F2 = b2 + 1012 | 0;
            g[F2 >> 2] = 0;
            F2 = b2 + 1032 | 0;
            g[F2 >> 2] = B2;
            F2 = b2 + 828 | 0;
            E2 = b2 + 844 | 0;
            e2 = b2 + 860 | 0;
            B2 = +g[F2 >> 2];
            z2 = +g[E2 >> 2];
            y2 = +g[e2 >> 2];
            B2 = B2 * A2;
            z2 = z2 * C2;
            z2 = B2 + z2;
            y2 = y2 * D2;
            y2 = z2 + y2;
            e2 = b2 + 1036 | 0;
            g[e2 >> 2] = y2;
            e2 = b2 + 832 | 0;
            E2 = b2 + 848 | 0;
            F2 = b2 + 864 | 0;
            y2 = +g[e2 >> 2];
            z2 = +g[E2 >> 2];
            B2 = +g[F2 >> 2];
            A2 = y2 * A2;
            C2 = z2 * C2;
            C2 = A2 + C2;
            D2 = B2 * D2;
            D2 = C2 + D2;
            F2 = b2 + 1040 | 0;
            g[F2 >> 2] = D2;
            return;
          }
          function sq(d2, e2) {
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, h2 = 0, j2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0, P2 = 0, Q2 = 0, R2 = 0, S2 = 0, T2 = 0, U2 = 0, V2 = 0, W2 = 0, X2 = 0, Y2 = 0, Z2 = 0, $2 = 0, aa2 = 0, ba2 = 0, ca2 = 0, da2 = 0, ea2 = 0, fa2 = 0, ga2 = 0, ha2 = 0, ia2 = 0;
            ga2 = i;
            i = i + 16 | 0;
            da2 = c[d2 + 28 >> 2] | 0;
            fa2 = c[d2 + 32 >> 2] | 0;
            $2 = +g[da2 + 368 >> 2];
            aa2 = +g[fa2 + 368 >> 2];
            Z2 = c[e2 + 24 >> 2] | 0;
            ea2 = a[d2 + 180 >> 0] | 0 ? 1 : -1;
            W2 = +g[d2 + 936 >> 2] - +g[d2 + 872 >> 2];
            X2 = +g[d2 + 940 >> 2] - +g[d2 + 876 >> 2];
            Y2 = +g[d2 + 944 >> 2] - +g[d2 + 880 >> 2];
            ba2 = $2 + aa2 > 0 ? aa2 / ($2 + aa2) : 0.5;
            H2 = c[d2 + 824 >> 2] | 0;
            J2 = c[d2 + 840 >> 2] | 0;
            K2 = c[d2 + 856 >> 2] | 0;
            L2 = c[d2 + 888 >> 2] | 0;
            M2 = c[d2 + 904 >> 2] | 0;
            P2 = c[d2 + 920 >> 2] | 0;
            Q2 = (a[d2 + 49 >> 0] | 0) == 0;
            if (Q2) {
              y2 = c[d2 + 828 >> 2] | 0;
              l2 = c[d2 + 844 >> 2] | 0;
              t2 = c[d2 + 860 >> 2] | 0;
              c[ga2 + 4 >> 2] = l2;
              x2 = c[d2 + 832 >> 2] | 0;
              D2 = c[d2 + 848 >> 2] | 0;
              ca2 = c[d2 + 864 >> 2] | 0;
              c[ga2 >> 2] = x2;
              w2 = (c[k >> 2] = t2, +g[k >> 2]);
              v2 = (c[k >> 2] = x2, +g[k >> 2]);
              q2 = (c[k >> 2] = D2, +g[k >> 2]);
              E2 = ca2;
              u2 = (c[k >> 2] = ca2, +g[k >> 2]);
              ca2 = H2;
              z2 = J2;
              A2 = K2;
            } else {
              f2 = ba2 * (c[k >> 2] = H2, +g[k >> 2]);
              n2 = ba2 * (c[k >> 2] = J2, +g[k >> 2]);
              m2 = ba2 * (c[k >> 2] = K2, +g[k >> 2]);
              j2 = (1 - ba2) * (c[k >> 2] = L2, +g[k >> 2]);
              o2 = (1 - ba2) * (c[k >> 2] = M2, +g[k >> 2]);
              m2 = m2 + (1 - ba2) * (c[k >> 2] = P2, +g[k >> 2]);
              p2 = 1 / +O(+((f2 + j2) * (f2 + j2) + (n2 + o2) * (n2 + o2) + m2 * m2));
              y2 = (g[k >> 2] = (f2 + j2) * p2, c[k >> 2] | 0);
              z2 = (g[k >> 2] = (n2 + o2) * p2, c[k >> 2] | 0);
              A2 = (g[k >> 2] = m2 * p2, c[k >> 2] | 0);
              if (+N(+(m2 * p2)) > 0.7071067690849304) {
                I2 = 1 / +O(+(m2 * p2 * (m2 * p2) + (n2 + o2) * p2 * ((n2 + o2) * p2)));
                g[ga2 + 4 >> 2] = -(m2 * p2 * I2);
                q2 = -((f2 + j2) * p2 * ((n2 + o2) * p2 * I2));
                r2 = (f2 + j2) * p2 * -(m2 * p2 * I2);
                j2 = (m2 * p2 * (m2 * p2) + (n2 + o2) * p2 * ((n2 + o2) * p2)) * I2;
                f2 = (n2 + o2) * p2 * I2;
                h2 = 0;
              } else {
                r2 = (f2 + j2) * p2 * ((f2 + j2) * p2) + (n2 + o2) * p2 * ((n2 + o2) * p2);
                I2 = 1 / +O(+r2);
                h2 = (g[k >> 2] = -((n2 + o2) * p2 * I2), c[k >> 2] | 0);
                g[ga2 + 4 >> 2] = (f2 + j2) * p2 * I2;
                q2 = m2 * p2 * -((n2 + o2) * p2 * I2);
                r2 = r2 * I2;
                j2 = -(m2 * p2 * ((f2 + j2) * p2 * I2));
                f2 = 0;
              }
              t2 = (g[k >> 2] = f2, c[k >> 2] | 0);
              x2 = (g[k >> 2] = j2, c[k >> 2] | 0);
              g[ga2 >> 2] = j2;
              D2 = (g[k >> 2] = q2, c[k >> 2] | 0);
              l2 = c[ga2 + 4 >> 2] | 0;
              E2 = (g[k >> 2] = r2, c[k >> 2] | 0);
              w2 = f2;
              v2 = j2;
              u2 = r2;
              ca2 = y2;
              y2 = h2;
            }
            h2 = c[e2 + 12 >> 2] | 0;
            c[h2 >> 2] = y2;
            c[h2 + 4 >> 2] = l2;
            c[h2 + 8 >> 2] = t2;
            c[h2 + (Z2 << 2) >> 2] = x2;
            c[h2 + (Z2 + 1 << 2) >> 2] = D2;
            c[h2 + (Z2 + 2 << 2) >> 2] = E2;
            r2 = (c[k >> 2] = y2, +g[k >> 2]);
            h2 = c[e2 + 20 >> 2] | 0;
            g[h2 >> 2] = -r2;
            s2 = +g[ga2 + 4 >> 2];
            g[h2 + 4 >> 2] = -s2;
            g[h2 + 8 >> 2] = -w2;
            g[h2 + (Z2 << 2) >> 2] = -v2;
            g[h2 + (Z2 + 1 << 2) >> 2] = -q2;
            g[h2 + (Z2 + 2 << 2) >> 2] = -u2;
            h2 = c[d2 + 300 >> 2] | 0;
            f2 = +g[d2 + 280 >> 2];
            if (!(h2 & 128))
              f2 = f2 * +g[e2 + 4 >> 2];
            o2 = f2 * +g[e2 >> 2];
            G2 = (c[k >> 2] = J2, +g[k >> 2]);
            B2 = (c[k >> 2] = P2, +g[k >> 2]);
            p2 = (c[k >> 2] = K2, +g[k >> 2]);
            F2 = (c[k >> 2] = M2, +g[k >> 2]);
            I2 = (c[k >> 2] = L2, +g[k >> 2]);
            C2 = (c[k >> 2] = H2, +g[k >> 2]);
            V2 = c[e2 + 28 >> 2] | 0;
            g[V2 >> 2] = o2 * ((G2 * B2 - p2 * F2) * r2 + (p2 * I2 - C2 * B2) * s2 + (C2 * F2 - G2 * I2) * w2);
            g[V2 + (Z2 << 2) >> 2] = o2 * ((G2 * B2 - p2 * F2) * v2 + (p2 * I2 - C2 * B2) * q2 + (C2 * F2 - G2 * I2) * u2);
            if (h2 & 64 | 0) {
              V2 = c[e2 + 32 >> 2] | 0;
              c[V2 >> 2] = c[d2 + 292 >> 2];
              c[V2 + (Z2 << 2) >> 2] = c[d2 + 292 >> 2];
            }
            n2 = +g[da2 + 52 >> 2];
            o2 = +g[da2 + 56 >> 2];
            p2 = +g[da2 + 60 >> 2];
            f2 = +g[fa2 + 52 >> 2];
            j2 = +g[fa2 + 56 >> 2];
            m2 = +g[fa2 + 60 >> 2];
            if (Q2) {
              S2 = (g[k >> 2] = j2 - o2, c[k >> 2] | 0);
              G2 = (j2 - o2) * w2 - (m2 - p2) * s2;
              I2 = (m2 - p2) * r2 - (f2 - n2) * w2;
              Q2 = c[e2 + 12 >> 2] | 0;
              g[Q2 + (Z2 << 1 << 2) >> 2] = ba2 * G2;
              g[Q2 + ((Z2 << 1 | 1) << 2) >> 2] = ba2 * I2;
              g[Q2 + ((Z2 << 1) + 2 << 2) >> 2] = ba2 * ((f2 - n2) * s2 - (j2 - o2) * r2);
              Q2 = (g[k >> 2] = f2 - n2, c[k >> 2] | 0);
              R2 = (g[k >> 2] = m2 - p2, c[k >> 2] | 0);
              T2 = c[e2 + 20 >> 2] | 0;
              g[T2 + (Z2 << 1 << 2) >> 2] = (1 - ba2) * G2;
              g[T2 + ((Z2 << 1 | 1) << 2) >> 2] = (1 - ba2) * I2;
              g[T2 + ((Z2 << 1) + 2 << 2) >> 2] = (1 - ba2) * ((f2 - n2) * s2 - (j2 - o2) * r2);
              I2 = (j2 - o2) * u2 - (m2 - p2) * q2;
              m2 = (m2 - p2) * v2 - (f2 - n2) * u2;
              p2 = (f2 - n2) * q2 - (j2 - o2) * v2;
              T2 = c[e2 + 12 >> 2] | 0;
              g[T2 + (Z2 * 3 << 2) >> 2] = ba2 * I2;
              g[T2 + ((Z2 * 3 | 0) + 1 << 2) >> 2] = ba2 * m2;
              g[T2 + ((Z2 * 3 | 0) + 2 << 2) >> 2] = ba2 * p2;
              T2 = c[e2 + 20 >> 2] | 0;
              g[T2 + (Z2 * 3 << 2) >> 2] = (1 - ba2) * I2;
              g[T2 + ((Z2 * 3 | 0) + 1 << 2) >> 2] = (1 - ba2) * m2;
              g[T2 + ((Z2 * 3 | 0) + 2 << 2) >> 2] = (1 - ba2) * p2;
              J2 = c[e2 + 8 >> 2] | 0;
              c[J2 + (Z2 << 1 << 2) >> 2] = y2;
              g[J2 + ((Z2 << 1 | 1) << 2) >> 2] = s2;
              g[J2 + ((Z2 << 1) + 2 << 2) >> 2] = w2;
              J2 = c[e2 + 8 >> 2] | 0;
              M2 = c[ga2 >> 2] | 0;
              c[J2 + (Z2 * 3 << 2) >> 2] = M2;
              c[J2 + ((Z2 * 3 | 0) + 1 << 2) >> 2] = D2;
              c[J2 + ((Z2 * 3 | 0) + 2 << 2) >> 2] = E2;
              P2 = c[e2 + 16 >> 2] | 0;
              g[P2 + (Z2 << 1 << 2) >> 2] = -r2;
              p2 = +g[ga2 + 4 >> 2];
              g[P2 + ((Z2 << 1 | 1) << 2) >> 2] = -p2;
              g[P2 + ((Z2 << 1) + 2 << 2) >> 2] = -w2;
              P2 = c[e2 + 16 >> 2] | 0;
              n2 = (c[k >> 2] = M2, +g[k >> 2]);
              g[P2 + (Z2 * 3 << 2) >> 2] = -n2;
              m2 = (c[k >> 2] = D2, +g[k >> 2]);
              g[P2 + ((Z2 * 3 | 0) + 1 << 2) >> 2] = -m2;
              j2 = (c[k >> 2] = E2, +g[k >> 2]);
              g[P2 + ((Z2 * 3 | 0) + 2 << 2) >> 2] = -j2;
              o2 = w2;
              M2 = 0;
              L2 = 0;
              K2 = 0;
              t2 = 0;
              l2 = 0;
              h2 = 0;
            } else {
              ia2 = +g[d2 + 936 >> 2] - f2;
              ha2 = +g[d2 + 940 >> 2] - j2;
              F2 = +g[d2 + 944 >> 2] - m2;
              r2 = (c[k >> 2] = ca2, +g[k >> 2]);
              s2 = (c[k >> 2] = z2, +g[k >> 2]);
              q2 = (c[k >> 2] = A2, +g[k >> 2]);
              G2 = +g[d2 + 872 >> 2] - n2;
              I2 = +g[d2 + 876 >> 2] - o2;
              m2 = +g[d2 + 880 >> 2] - p2;
              o2 = +g[d2 + 1080 >> 2] - +g[d2 + 1032 >> 2];
              u2 = r2 * (r2 * G2 + s2 * I2 + q2 * m2) + r2 * o2 - r2 * (r2 * ia2 + s2 * ha2 + q2 * F2);
              v2 = s2 * (r2 * G2 + s2 * I2 + q2 * m2) + s2 * o2 - s2 * (r2 * ia2 + s2 * ha2 + q2 * F2);
              o2 = q2 * (r2 * G2 + s2 * I2 + q2 * m2) + q2 * o2 - q2 * (r2 * ia2 + s2 * ha2 + q2 * F2);
              B2 = G2 - r2 * (r2 * G2 + s2 * I2 + q2 * m2) + ba2 * u2;
              w2 = I2 - s2 * (r2 * G2 + s2 * I2 + q2 * m2) + ba2 * v2;
              C2 = m2 - q2 * (r2 * G2 + s2 * I2 + q2 * m2) + ba2 * o2;
              M2 = (g[k >> 2] = B2, c[k >> 2] | 0);
              L2 = (g[k >> 2] = w2, c[k >> 2] | 0);
              K2 = (g[k >> 2] = C2, c[k >> 2] | 0);
              u2 = ia2 - r2 * (r2 * ia2 + s2 * ha2 + q2 * F2) - (1 - ba2) * u2;
              v2 = ha2 - s2 * (r2 * ia2 + s2 * ha2 + q2 * F2) - (1 - ba2) * v2;
              o2 = F2 - q2 * (r2 * ia2 + s2 * ha2 + q2 * F2) - (1 - ba2) * o2;
              t2 = (g[k >> 2] = u2, c[k >> 2] | 0);
              x2 = (g[k >> 2] = v2, c[k >> 2] | 0);
              y2 = (g[k >> 2] = o2, c[k >> 2] | 0);
              j2 = ba2 * (ia2 - r2 * (r2 * ia2 + s2 * ha2 + q2 * F2)) + (1 - ba2) * (G2 - r2 * (r2 * G2 + s2 * I2 + q2 * m2));
              f2 = ba2 * (ha2 - s2 * (r2 * ia2 + s2 * ha2 + q2 * F2)) + (1 - ba2) * (I2 - s2 * (r2 * G2 + s2 * I2 + q2 * m2));
              m2 = ba2 * (F2 - q2 * (r2 * ia2 + s2 * ha2 + q2 * F2)) + (1 - ba2) * (m2 - q2 * (r2 * G2 + s2 * I2 + q2 * m2));
              g[ga2 + 4 >> 2] = f2;
              if (m2 * m2 + (j2 * j2 + f2 * f2) > 11920928955078125e-23) {
                ia2 = 1 / +O(+(m2 * m2 + (j2 * j2 + f2 * f2)));
                l2 = (g[k >> 2] = j2 * ia2, c[k >> 2] | 0);
                g[ga2 + 4 >> 2] = ia2 * f2;
                I2 = ia2 * m2;
                n2 = ia2 * f2;
                f2 = j2 * ia2;
                h2 = (g[k >> 2] = ia2 * m2, c[k >> 2] | 0);
              } else {
                l2 = c[d2 + 828 >> 2] | 0;
                V2 = c[d2 + 844 >> 2] | 0;
                h2 = c[d2 + 860 >> 2] | 0;
                c[ga2 + 4 >> 2] = V2;
                I2 = (c[k >> 2] = h2, +g[k >> 2]);
                n2 = (c[k >> 2] = V2, +g[k >> 2]);
                f2 = (c[k >> 2] = l2, +g[k >> 2]);
              }
              F2 = s2 * I2 - q2 * n2;
              G2 = q2 * f2 - r2 * I2;
              q2 = r2 * n2 - s2 * f2;
              g[ga2 >> 2] = F2;
              V2 = (c[e2 + 12 >> 2] | 0) + (Z2 << 1 << 2) | 0;
              g[V2 >> 2] = w2 * I2 - C2 * n2;
              g[V2 + 4 >> 2] = C2 * f2 - B2 * I2;
              g[V2 + 8 >> 2] = B2 * n2 - w2 * f2;
              V2 = c[e2 + 20 >> 2] | 0;
              g[V2 + (Z2 << 1 << 2) >> 2] = -(v2 * I2 - o2 * n2);
              g[V2 + ((Z2 << 1 | 1) << 2) >> 2] = -(o2 * f2 - u2 * I2);
              g[V2 + ((Z2 << 1) + 2 << 2) >> 2] = -(u2 * n2 - v2 * f2);
              if ($2 < 11920928955078125e-23 | aa2 < 11920928955078125e-23 ? (a[d2 + 297 >> 0] | 0) != 0 : 0) {
                p2 = (1 - ba2) * (v2 * q2 - o2 * G2);
                o2 = (1 - ba2) * (o2 * F2 - u2 * q2);
                m2 = (1 - ba2) * (u2 * G2 - v2 * F2);
                n2 = ba2 * (w2 * q2 - C2 * G2);
                j2 = ba2 * (B2 * G2 - w2 * F2);
                f2 = ba2 * (C2 * F2 - B2 * q2);
              } else {
                p2 = v2 * q2 - o2 * G2;
                o2 = o2 * F2 - u2 * q2;
                m2 = u2 * G2 - v2 * F2;
                n2 = w2 * q2 - C2 * G2;
                j2 = B2 * G2 - w2 * F2;
                f2 = C2 * F2 - B2 * q2;
              }
              T2 = (c[e2 + 12 >> 2] | 0) + (Z2 * 3 << 2) | 0;
              g[T2 >> 2] = n2;
              g[T2 + 4 >> 2] = f2;
              g[T2 + 8 >> 2] = j2;
              T2 = c[e2 + 20 >> 2] | 0;
              g[T2 + (Z2 * 3 << 2) >> 2] = -p2;
              g[T2 + ((Z2 * 3 | 0) + 1 << 2) >> 2] = -o2;
              g[T2 + ((Z2 * 3 | 0) + 2 << 2) >> 2] = -m2;
              J2 = c[e2 + 8 >> 2] | 0;
              c[J2 + (Z2 << 1 << 2) >> 2] = l2;
              c[J2 + ((Z2 << 1 | 1) << 2) >> 2] = c[ga2 + 4 >> 2];
              c[J2 + ((Z2 << 1) + 2 << 2) >> 2] = h2;
              J2 = c[e2 + 8 >> 2] | 0;
              g[J2 + (Z2 * 3 << 2) >> 2] = F2;
              g[J2 + ((Z2 * 3 | 0) + 1 << 2) >> 2] = G2;
              g[J2 + ((Z2 * 3 | 0) + 2 << 2) >> 2] = q2;
              P2 = c[e2 + 16 >> 2] | 0;
              r2 = (c[k >> 2] = l2, +g[k >> 2]);
              g[P2 + (Z2 << 1 << 2) >> 2] = -r2;
              p2 = +g[ga2 + 4 >> 2];
              g[P2 + ((Z2 << 1 | 1) << 2) >> 2] = -p2;
              g[P2 + ((Z2 << 1) + 2 << 2) >> 2] = -I2;
              P2 = c[e2 + 16 >> 2] | 0;
              g[P2 + (Z2 * 3 << 2) >> 2] = -F2;
              g[P2 + ((Z2 * 3 | 0) + 1 << 2) >> 2] = -G2;
              g[P2 + ((Z2 * 3 | 0) + 2 << 2) >> 2] = -q2;
              o2 = I2;
              n2 = F2;
              m2 = G2;
              j2 = q2;
              Q2 = 0;
              R2 = 0;
              S2 = 0;
              l2 = x2;
              h2 = y2;
            }
            U2 = c[d2 + 300 >> 2] | 0;
            f2 = +g[d2 + 264 >> 2];
            if (!(U2 & 32))
              f2 = f2 * +g[e2 + 4 >> 2];
            ia2 = f2 * +g[e2 >> 2];
            V2 = c[e2 + 28 >> 2] | 0;
            g[V2 + (Z2 << 1 << 2) >> 2] = ia2 * (W2 * r2 + X2 * p2 + Y2 * o2);
            g[V2 + (Z2 * 3 << 2) >> 2] = ia2 * (W2 * n2 + X2 * m2 + Y2 * j2);
            if (U2 & 16 | 0) {
              H2 = c[e2 + 32 >> 2] | 0;
              c[H2 + (Z2 << 1 << 2) >> 2] = c[d2 + 276 >> 2];
              c[H2 + (Z2 * 3 << 2) >> 2] = c[d2 + 276 >> 2];
            }
            H2 = b[d2 + 296 >> 1] | 0;
            if (!((H2 & 255) << 24 >> 24)) {
              E2 = 0;
              u2 = 0;
            } else {
              u2 = ea2 * +g[d2 + 1032 >> 2];
              E2 = u2 > 0 ? 2 : 1;
            }
            x2 = a[d2 + 1096 >> 0] | 0;
            y2 = (E2 | 0) != 0;
            if (x2 & 255 | E2) {
              D2 = c[e2 + 24 >> 2] << 2;
              c[J2 + (D2 << 2) >> 2] = ca2;
              c[J2 + ((D2 | 1) << 2) >> 2] = z2;
              c[J2 + ((D2 | 2) << 2) >> 2] = A2;
              q2 = (c[k >> 2] = ca2, +g[k >> 2]);
              g[P2 + (D2 << 2) >> 2] = -q2;
              r2 = (c[k >> 2] = z2, +g[k >> 2]);
              g[P2 + ((D2 | 1) << 2) >> 2] = -r2;
              s2 = (c[k >> 2] = A2, +g[k >> 2]);
              g[P2 + ((D2 | 2) << 2) >> 2] = -s2;
              if (a[d2 + 49 >> 0] | 0) {
                if (!($2 < 11920928955078125e-23 | aa2 < 11920928955078125e-23)) {
                  aa2 = (c[k >> 2] = L2, +g[k >> 2]);
                  Y2 = (c[k >> 2] = K2, +g[k >> 2]);
                  $2 = (c[k >> 2] = M2, +g[k >> 2]);
                  ia2 = (c[k >> 2] = l2, +g[k >> 2]);
                  ba2 = (c[k >> 2] = h2, +g[k >> 2]);
                  ha2 = (c[k >> 2] = t2, +g[k >> 2]);
                  Z2 = c[e2 + 12 >> 2] | 0;
                  g[Z2 + (D2 << 2) >> 2] = s2 * aa2 - r2 * Y2;
                  g[Z2 + ((D2 | 1) << 2) >> 2] = q2 * Y2 - s2 * $2;
                  g[Z2 + ((D2 | 2) << 2) >> 2] = r2 * $2 - q2 * aa2;
                  g[T2 + (D2 << 2) >> 2] = -(s2 * ia2 - r2 * ba2);
                  g[T2 + ((D2 | 1) << 2) >> 2] = -(q2 * ba2 - s2 * ha2);
                  g[T2 + ((D2 | 2) << 2) >> 2] = -(r2 * ha2 - q2 * ia2);
                }
              } else {
                ia2 = (c[k >> 2] = S2, +g[k >> 2]);
                aa2 = (c[k >> 2] = R2, +g[k >> 2]);
                ha2 = (c[k >> 2] = Q2, +g[k >> 2]);
                Z2 = c[e2 + 12 >> 2] | 0;
                g[Z2 + (D2 << 2) >> 2] = ba2 * (s2 * ia2 - r2 * aa2);
                g[Z2 + ((D2 | 1) << 2) >> 2] = ba2 * (q2 * aa2 - s2 * ha2);
                g[Z2 + ((D2 | 2) << 2) >> 2] = ba2 * (r2 * ha2 - q2 * ia2);
                g[T2 + (D2 << 2) >> 2] = (1 - ba2) * (s2 * ia2 - r2 * aa2);
                g[T2 + ((D2 | 1) << 2) >> 2] = (1 - ba2) * (q2 * aa2 - s2 * ha2);
                g[T2 + ((D2 | 2) << 2) >> 2] = (1 - ba2) * (r2 * ha2 - q2 * ia2);
              }
              h2 = +g[d2 + 184 >> 2] == +g[d2 + 188 >> 2];
              g[V2 + (D2 << 2) >> 2] = 0;
              l2 = (c[e2 + 36 >> 2] | 0) + (D2 << 2) | 0;
              g[l2 >> 2] = 0;
              t2 = (c[e2 + 40 >> 2] | 0) + (D2 << 2) | 0;
              g[t2 >> 2] = 0;
              p2 = +g[((U2 & 512 | 0) == 0 ? e2 + 4 | 0 : d2 + 232 | 0) >> 2];
              if (!(x2 << 24 >> 24 == 0 | y2 & h2)) {
                if (U2 & 1 | 0)
                  c[(c[e2 + 32 >> 2] | 0) + (D2 << 2) >> 2] = c[d2 + 212 >> 2];
                o2 = +g[d2 + 1100 >> 2];
                f2 = +g[d2 + 1080 >> 2];
                j2 = +g[d2 + 184 >> 2];
                m2 = +g[d2 + 188 >> 2];
                n2 = p2 * +g[e2 >> 2];
                do
                  if (!(j2 > m2))
                    if (!(j2 == m2)) {
                      if (o2 / n2 < 0)
                        if (f2 >= j2 ? j2 - o2 / n2 > f2 : 0) {
                          f2 = (j2 - f2) / (o2 / n2);
                          break;
                        } else {
                          f2 = f2 < j2 ? 0 : 1;
                          break;
                        }
                      if (o2 / n2 > 0)
                        if (f2 <= m2 ? m2 - o2 / n2 < f2 : 0) {
                          f2 = (m2 - f2) / (o2 / n2);
                          break;
                        } else {
                          f2 = f2 > m2 ? 0 : 1;
                          break;
                        }
                      else
                        f2 = 0;
                    } else
                      f2 = 0;
                  else
                    f2 = 1;
                while (0);
                g[V2 + (D2 << 2) >> 2] = +g[V2 + (D2 << 2) >> 2] - ea2 * f2 * o2;
                g[l2 >> 2] = -+g[d2 + 1104 >> 2] / +g[e2 >> 2] + +g[l2 >> 2];
                g[t2 >> 2] = +g[d2 + 1104 >> 2] / +g[e2 >> 2] + +g[t2 >> 2];
              }
              if (y2) {
                g[V2 + (D2 << 2) >> 2] = +g[V2 + (D2 << 2) >> 2] + u2 * (p2 * +g[e2 >> 2]);
                if (U2 & 256 | 0)
                  c[(c[e2 + 32 >> 2] | 0) + (D2 << 2) >> 2] = c[d2 + 244 >> 2];
                do
                  if (!h2)
                    if ((E2 | 0) == 1) {
                      g[l2 >> 2] = -34028234663852886e22;
                      g[t2 >> 2] = 0;
                      break;
                    } else {
                      g[l2 >> 2] = 0;
                      g[t2 >> 2] = 34028234663852886e22;
                      break;
                    }
                  else {
                    g[l2 >> 2] = -34028234663852886e22;
                    g[t2 >> 2] = 34028234663852886e22;
                  }
                while (0);
                ia2 = 1 - +g[d2 + 240 >> 2];
                j2 = +N(+ia2);
                do
                  if (!(ia2 != ia2 | false | ia2 == 0)) {
                    f2 = ea2 * (q2 * +g[da2 + 336 >> 2] + r2 * +g[da2 + 340 >> 2] + s2 * +g[da2 + 344 >> 2] - (q2 * +g[fa2 + 336 >> 2] + r2 * +g[fa2 + 340 >> 2] + s2 * +g[fa2 + 344 >> 2]));
                    if ((E2 | 0) == 1) {
                      if (!(f2 < 0))
                        break;
                      if (!(+g[V2 + (D2 << 2) >> 2] < -(j2 * f2)))
                        break;
                      g[V2 + (D2 << 2) >> 2] = -(j2 * f2);
                      break;
                    } else {
                      if (!(f2 > 0))
                        break;
                      if (!(+g[V2 + (D2 << 2) >> 2] > -(j2 * f2)))
                        break;
                      g[V2 + (D2 << 2) >> 2] = -(j2 * f2);
                      break;
                    }
                  }
                while (0);
                g[V2 + (D2 << 2) >> 2] = +g[d2 + 232 >> 2] * +g[V2 + (D2 << 2) >> 2];
                h2 = 5;
              } else
                h2 = 5;
            } else
              h2 = 4;
            if ((H2 & 65535) < 256) {
              y2 = 0;
              v2 = 0;
            } else {
              v2 = +g[d2 + 1088 >> 2];
              y2 = v2 > 0 ? 1 : 2;
            }
            l2 = a[d2 + 1112 >> 0] | 0;
            t2 = (y2 | 0) != 0;
            if (!(l2 & 255 | y2)) {
              i = ga2;
              return;
            }
            x2 = _(c[e2 + 24 >> 2] | 0, h2) | 0;
            fa2 = c[e2 + 12 >> 2] | 0;
            c[fa2 + (x2 << 2) >> 2] = ca2;
            c[fa2 + (x2 + 1 << 2) >> 2] = z2;
            c[fa2 + (x2 + 2 << 2) >> 2] = A2;
            w2 = (c[k >> 2] = ca2, +g[k >> 2]);
            g[T2 + (x2 << 2) >> 2] = -w2;
            u2 = (c[k >> 2] = z2, +g[k >> 2]);
            g[T2 + (x2 + 1 << 2) >> 2] = -u2;
            s2 = (c[k >> 2] = A2, +g[k >> 2]);
            g[T2 + (x2 + 2 << 2) >> 2] = -s2;
            p2 = +g[d2 + 192 >> 2];
            q2 = +g[d2 + 196 >> 2];
            r2 = +g[((U2 & 2048 | 0) == 0 ? e2 + 4 | 0 : d2 + 248 | 0) >> 2];
            if (!(l2 << 24 >> 24 == 0 | t2 & p2 == q2)) {
              if (!(U2 & 4)) {
                m2 = p2;
                n2 = q2;
              } else {
                c[(c[e2 + 32 >> 2] | 0) + (x2 << 2) >> 2] = c[d2 + 228 >> 2];
                m2 = +g[d2 + 192 >> 2];
                n2 = +g[d2 + 196 >> 2];
              }
              f2 = +g[d2 + 1084 >> 2];
              o2 = +g[d2 + 1116 >> 2];
              j2 = r2 * +g[e2 >> 2];
              do
                if (!(m2 > n2))
                  if (!(m2 == n2)) {
                    if (o2 / j2 < 0)
                      if (f2 >= m2 ? m2 - o2 / j2 > f2 : 0) {
                        f2 = (m2 - f2) / (o2 / j2);
                        break;
                      } else {
                        f2 = f2 < m2 ? 0 : 1;
                        break;
                      }
                    if (o2 / j2 > 0)
                      if (f2 <= n2 ? n2 - o2 / j2 < f2 : 0) {
                        f2 = (n2 - f2) / (o2 / j2);
                        break;
                      } else {
                        f2 = f2 > n2 ? 0 : 1;
                        break;
                      }
                    else
                      f2 = 0;
                  } else
                    f2 = 0;
                else
                  f2 = 1;
              while (0);
              g[V2 + (x2 << 2) >> 2] = f2 * o2;
              g[(c[e2 + 36 >> 2] | 0) + (x2 << 2) >> 2] = -+g[d2 + 1120 >> 2] / +g[e2 >> 2];
              g[(c[e2 + 40 >> 2] | 0) + (x2 << 2) >> 2] = +g[d2 + 1120 >> 2] / +g[e2 >> 2];
            }
            if (!t2) {
              i = ga2;
              return;
            }
            g[V2 + (x2 << 2) >> 2] = +g[V2 + (x2 << 2) >> 2] + v2 * (r2 * +g[e2 >> 2]);
            if (U2 & 1024 | 0)
              c[(c[e2 + 32 >> 2] | 0) + (x2 << 2) >> 2] = c[d2 + 260 >> 2];
            do
              if (!(p2 == q2)) {
                l2 = (c[e2 + 36 >> 2] | 0) + (x2 << 2) | 0;
                h2 = c[e2 + 40 >> 2] | 0;
                if ((y2 | 0) == 1) {
                  g[l2 >> 2] = 0;
                  g[h2 + (x2 << 2) >> 2] = 34028234663852886e22;
                  break;
                } else {
                  g[l2 >> 2] = -34028234663852886e22;
                  g[h2 + (x2 << 2) >> 2] = 0;
                  break;
                }
              } else {
                g[(c[e2 + 36 >> 2] | 0) + (x2 << 2) >> 2] = -34028234663852886e22;
                g[(c[e2 + 40 >> 2] | 0) + (x2 << 2) >> 2] = 34028234663852886e22;
              }
            while (0);
            ia2 = 1 - +g[d2 + 256 >> 2];
            j2 = +N(+ia2);
            do
              if (!(ia2 != ia2 | false | ia2 == 0)) {
                fa2 = c[d2 + 28 >> 2] | 0;
                e2 = c[d2 + 32 >> 2] | 0;
                f2 = w2 * +g[fa2 + 352 >> 2] + u2 * +g[fa2 + 356 >> 2] + s2 * +g[fa2 + 360 >> 2] - (w2 * +g[e2 + 352 >> 2] + u2 * +g[e2 + 356 >> 2] + s2 * +g[e2 + 360 >> 2]);
                if ((y2 | 0) == 1) {
                  if (!(f2 < 0))
                    break;
                  if (!(+g[V2 + (x2 << 2) >> 2] < -(j2 * f2)))
                    break;
                  g[V2 + (x2 << 2) >> 2] = -(j2 * f2);
                  break;
                } else {
                  if (!(f2 > 0))
                    break;
                  if (!(+g[V2 + (x2 << 2) >> 2] > -(j2 * f2)))
                    break;
                  g[V2 + (x2 << 2) >> 2] = -(j2 * f2);
                  break;
                }
              }
            while (0);
            g[V2 + (x2 << 2) >> 2] = +g[d2 + 248 >> 2] * +g[V2 + (x2 << 2) >> 2];
            i = ga2;
            return;
          }
          function tq(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = +d2;
            e2 = e2 | 0;
            switch (b2 | 0) {
              case 2: {
                if ((e2 | 0) < 1) {
                  g[a2 + 232 >> 2] = d2;
                  c[a2 + 300 >> 2] = c[a2 + 300 >> 2] | 512;
                  return;
                }
                if ((e2 | 0) < 3) {
                  g[a2 + 264 >> 2] = d2;
                  c[a2 + 300 >> 2] = c[a2 + 300 >> 2] | 32;
                  return;
                }
                if ((e2 | 0) == 3) {
                  g[a2 + 248 >> 2] = d2;
                  c[a2 + 300 >> 2] = c[a2 + 300 >> 2] | 2048;
                  return;
                }
                if ((e2 | 0) >= 6)
                  return;
                g[a2 + 280 >> 2] = d2;
                c[a2 + 300 >> 2] = c[a2 + 300 >> 2] | 128;
                return;
              }
              case 3: {
                if ((e2 | 0) < 1) {
                  g[a2 + 212 >> 2] = d2;
                  c[a2 + 300 >> 2] = c[a2 + 300 >> 2] | 1;
                  return;
                }
                if ((e2 | 0) != 3)
                  return;
                g[a2 + 228 >> 2] = d2;
                c[a2 + 300 >> 2] = c[a2 + 300 >> 2] | 4;
                return;
              }
              case 4: {
                if ((e2 | 0) < 1) {
                  g[a2 + 244 >> 2] = d2;
                  c[a2 + 300 >> 2] = c[a2 + 300 >> 2] | 256;
                  return;
                }
                if ((e2 | 0) < 3) {
                  g[a2 + 276 >> 2] = d2;
                  c[a2 + 300 >> 2] = c[a2 + 300 >> 2] | 16;
                  return;
                }
                if ((e2 | 0) == 3) {
                  g[a2 + 260 >> 2] = d2;
                  c[a2 + 300 >> 2] = c[a2 + 300 >> 2] | 1024;
                  return;
                }
                if ((e2 | 0) >= 6)
                  return;
                g[a2 + 292 >> 2] = d2;
                c[a2 + 300 >> 2] = c[a2 + 300 >> 2] | 64;
                return;
              }
              default:
                return;
            }
          }
          function uq(a2, b2, c2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            var d2 = 0;
            a:
              do
                switch (b2 | 0) {
                  case 2: {
                    if ((c2 | 0) < 1) {
                      d2 = +g[a2 + 232 >> 2];
                      break a;
                    }
                    if ((c2 | 0) < 3) {
                      d2 = +g[a2 + 264 >> 2];
                      break a;
                    }
                    if ((c2 | 0) == 3) {
                      d2 = +g[a2 + 248 >> 2];
                      break a;
                    }
                    if ((c2 | 0) < 6)
                      d2 = +g[a2 + 280 >> 2];
                    else
                      d2 = 34028234663852886e22;
                    break;
                  }
                  case 3: {
                    if ((c2 | 0) < 1) {
                      d2 = +g[a2 + 212 >> 2];
                      break a;
                    }
                    if ((c2 | 0) == 3)
                      d2 = +g[a2 + 228 >> 2];
                    else
                      d2 = 34028234663852886e22;
                    break;
                  }
                  case 4: {
                    if ((c2 | 0) < 1) {
                      d2 = +g[a2 + 244 >> 2];
                      break a;
                    }
                    if ((c2 | 0) < 3) {
                      d2 = +g[a2 + 276 >> 2];
                      break a;
                    }
                    if ((c2 | 0) == 3) {
                      d2 = +g[a2 + 260 >> 2];
                      break a;
                    }
                    if ((c2 | 0) < 6)
                      d2 = +g[a2 + 292 >> 2];
                    else
                      d2 = 34028234663852886e22;
                    break;
                  }
                  default:
                    d2 = 34028234663852886e22;
                }
              while (0);
            return +d2;
          }
          function vq(a2) {
            a2 = a2 | 0;
            return 204;
          }
          function wq(a2, b2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            e2 = e2 | 0;
            Aq(a2, b2, e2) | 0;
            c[b2 + 52 >> 2] = c[a2 + 52 >> 2];
            c[b2 + 56 >> 2] = c[a2 + 56 >> 2];
            c[b2 + 60 >> 2] = c[a2 + 60 >> 2];
            c[b2 + 64 >> 2] = c[a2 + 64 >> 2];
            c[b2 + 68 >> 2] = c[a2 + 68 >> 2];
            c[b2 + 72 >> 2] = c[a2 + 72 >> 2];
            c[b2 + 76 >> 2] = c[a2 + 76 >> 2];
            c[b2 + 80 >> 2] = c[a2 + 80 >> 2];
            c[b2 + 84 >> 2] = c[a2 + 84 >> 2];
            c[b2 + 88 >> 2] = c[a2 + 88 >> 2];
            c[b2 + 92 >> 2] = c[a2 + 92 >> 2];
            c[b2 + 96 >> 2] = c[a2 + 96 >> 2];
            c[b2 + 100 >> 2] = c[a2 + 100 >> 2];
            c[b2 + 104 >> 2] = c[a2 + 104 >> 2];
            c[b2 + 108 >> 2] = c[a2 + 108 >> 2];
            c[b2 + 112 >> 2] = c[a2 + 112 >> 2];
            c[b2 + 116 >> 2] = c[a2 + 116 >> 2];
            c[b2 + 120 >> 2] = c[a2 + 120 >> 2];
            c[b2 + 124 >> 2] = c[a2 + 124 >> 2];
            c[b2 + 128 >> 2] = c[a2 + 128 >> 2];
            c[b2 + 132 >> 2] = c[a2 + 132 >> 2];
            c[b2 + 136 >> 2] = c[a2 + 136 >> 2];
            c[b2 + 140 >> 2] = c[a2 + 140 >> 2];
            c[b2 + 144 >> 2] = c[a2 + 144 >> 2];
            c[b2 + 148 >> 2] = c[a2 + 148 >> 2];
            c[b2 + 152 >> 2] = c[a2 + 152 >> 2];
            c[b2 + 156 >> 2] = c[a2 + 156 >> 2];
            c[b2 + 160 >> 2] = c[a2 + 160 >> 2];
            c[b2 + 164 >> 2] = c[a2 + 164 >> 2];
            c[b2 + 168 >> 2] = c[a2 + 168 >> 2];
            c[b2 + 172 >> 2] = c[a2 + 172 >> 2];
            c[b2 + 176 >> 2] = c[a2 + 176 >> 2];
            c[b2 + 180 >> 2] = c[a2 + 188 >> 2];
            c[b2 + 184 >> 2] = c[a2 + 184 >> 2];
            c[b2 + 188 >> 2] = c[a2 + 196 >> 2];
            c[b2 + 192 >> 2] = c[a2 + 192 >> 2];
            c[b2 + 196 >> 2] = d[a2 + 180 >> 0];
            c[b2 + 200 >> 2] = d[a2 + 49 >> 0];
            return 15616;
          }
          function xq(a2) {
            a2 = a2 | 0;
            return c[a2 + 300 >> 2] | 0;
          }
          function yq(b2, d2, e2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, h2 = 0, j2 = 0;
            f2 = i;
            i = i + 16 | 0;
            c[b2 + 4 >> 2] = d2;
            c[b2 >> 2] = 7188;
            c[b2 + 8 >> 2] = -1;
            c[b2 + 12 >> 2] = -1;
            g[b2 + 16 >> 2] = 34028234663852886e22;
            a[b2 + 20 >> 0] = 1;
            a[b2 + 21 >> 0] = 0;
            c[b2 + 24 >> 2] = -1;
            c[b2 + 28 >> 2] = e2;
            if (!(a[19880] | 0)) {
              a[19880] = 1;
              c[f2 >> 2] = 0;
              c[f2 + 4 >> 2] = 0;
              c[f2 + 8 >> 2] = 0;
              c[f2 + 12 >> 2] = 0;
              Cr(21260, 0, 0, 0, f2);
            }
            c[5366] = c[5366] | 1;
            g[5407] = 0;
            h2 = +g[5417] * 0;
            j2 = +g[5418] * 0;
            g[5412] = +g[5416] * 0;
            g[5413] = h2;
            g[5414] = j2;
            g[5415] = 0;
            c[5420] = 0;
            c[5421] = 0;
            c[5422] = 0;
            c[5423] = 0;
            j2 = +g[5409] * 0;
            h2 = +g[5410] * 0;
            g[5461] = +g[5408] * 0;
            g[5462] = j2;
            g[5463] = h2;
            g[5464] = 0;
            c[b2 + 32 >> 2] = 21260;
            g[b2 + 36 >> 2] = 0;
            g[b2 + 40 >> 2] = 0.30000001192092896;
            c[b2 + 44 >> 2] = 0;
            i = f2;
            return;
          }
          function zq(b2) {
            b2 = b2 | 0;
            var d2 = 0;
            c[b2 >> 2] = 7916;
            d2 = c[b2 + 520 >> 2] | 0;
            if (d2 | 0) {
              if (a[b2 + 524 >> 0] | 0) {
                c[5638] = (c[5638] | 0) + 1;
                rG(c[d2 + -4 >> 2] | 0);
              }
              c[b2 + 520 >> 2] = 0;
            }
            a[b2 + 524 >> 0] = 1;
            c[b2 + 520 >> 2] = 0;
            c[b2 + 512 >> 2] = 0;
            c[b2 + 516 >> 2] = 0;
            c[b2 >> 2] = 3156;
            d2 = c[b2 + 276 >> 2] | 0;
            if (!d2) {
              a[b2 + 280 >> 0] = 1;
              c[b2 + 276 >> 2] = 0;
              c[b2 + 268 >> 2] = 0;
              b2 = b2 + 272 | 0;
              c[b2 >> 2] = 0;
              return;
            }
            if (a[b2 + 280 >> 0] | 0) {
              c[5638] = (c[5638] | 0) + 1;
              rG(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 276 >> 2] = 0;
            a[b2 + 280 >> 0] = 1;
            c[b2 + 276 >> 2] = 0;
            c[b2 + 268 >> 2] = 0;
            b2 = b2 + 272 | 0;
            c[b2 >> 2] = 0;
            return;
          }
          function Aq(a2, b2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            e2 = e2 | 0;
            var f2 = 0, g2 = 0;
            c[b2 >> 2] = Ob[c[(c[e2 >> 2] | 0) + 28 >> 2] & 31](e2, c[a2 + 28 >> 2] | 0) | 0;
            c[b2 + 4 >> 2] = Ob[c[(c[e2 >> 2] | 0) + 28 >> 2] & 31](e2, c[a2 + 32 >> 2] | 0) | 0;
            f2 = Ob[c[(c[e2 >> 2] | 0) + 40 >> 2] & 31](e2, a2) | 0;
            g2 = Ob[c[(c[e2 >> 2] | 0) + 28 >> 2] & 31](e2, f2) | 0;
            c[b2 + 8 >> 2] = g2;
            if (g2 | 0)
              tb[c[(c[e2 >> 2] | 0) + 48 >> 2] & 127](e2, f2);
            c[b2 + 12 >> 2] = c[a2 + 4 >> 2];
            c[b2 + 24 >> 2] = d[a2 + 21 >> 0];
            c[b2 + 40 >> 2] = c[a2 + 24 >> 2];
            c[b2 + 44 >> 2] = c[a2 + 16 >> 2];
            c[b2 + 48 >> 2] = d[a2 + 20 >> 0];
            c[b2 + 20 >> 2] = c[a2 + 12 >> 2];
            c[b2 + 16 >> 2] = c[a2 + 8 >> 2];
            c[b2 + 28 >> 2] = c[a2 + 36 >> 2];
            c[b2 + 32 >> 2] = c[a2 + 40 >> 2];
            c[b2 + 36 >> 2] = 0;
            f2 = c[a2 + 28 >> 2] | 0;
            if ((c[f2 + 512 >> 2] | 0) > 0) {
              e2 = 0;
              do {
                if ((c[(c[f2 + 520 >> 2] | 0) + (e2 << 2) >> 2] | 0) == (a2 | 0)) {
                  c[b2 + 36 >> 2] = 1;
                  f2 = c[a2 + 28 >> 2] | 0;
                }
                e2 = e2 + 1 | 0;
              } while ((e2 | 0) < (c[f2 + 512 >> 2] | 0));
            }
            f2 = c[a2 + 32 >> 2] | 0;
            if ((c[f2 + 512 >> 2] | 0) > 0)
              e2 = 0;
            else
              return 15639;
            do {
              if ((c[(c[f2 + 520 >> 2] | 0) + (e2 << 2) >> 2] | 0) == (a2 | 0)) {
                c[b2 + 36 >> 2] = 1;
                f2 = c[a2 + 32 >> 2] | 0;
              }
              e2 = e2 + 1 | 0;
            } while ((e2 | 0) < (c[f2 + 512 >> 2] | 0));
            return 15639;
          }
          function Bq(b2) {
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0;
            c[b2 >> 2] = 7656;
            if (a[b2 + 272 >> 0] | 0 ? (d2 = c[b2 + 204 >> 2] | 0, rb[c[c[d2 >> 2] >> 2] & 255](d2), d2 = c[b2 + 204 >> 2] | 0, d2 | 0) : 0) {
              c[5638] = (c[5638] | 0) + 1;
              rG(c[d2 + -4 >> 2] | 0);
            }
            d2 = c[b2 + 196 >> 2] | 0;
            if (d2 | 0 ? (rb[c[c[d2 >> 2] >> 2] & 255](d2), e2 = c[b2 + 196 >> 2] | 0, e2 | 0) : 0) {
              c[5638] = (c[5638] | 0) + 1;
              rG(c[e2 + -4 >> 2] | 0);
            }
            if (a[b2 + 273 >> 0] | 0 ? (f2 = c[b2 + 200 >> 2] | 0, rb[c[c[f2 >> 2] >> 2] & 255](f2), f2 = c[b2 + 200 >> 2] | 0, f2 | 0) : 0) {
              c[5638] = (c[5638] | 0) + 1;
              rG(c[f2 + -4 >> 2] | 0);
            }
            d2 = c[b2 + 316 >> 2] | 0;
            if (d2 | 0) {
              if (a[b2 + 320 >> 0] | 0) {
                c[5638] = (c[5638] | 0) + 1;
                rG(c[d2 + -4 >> 2] | 0);
              }
              c[b2 + 316 >> 2] = 0;
            }
            a[b2 + 320 >> 0] = 1;
            c[b2 + 316 >> 2] = 0;
            c[b2 + 308 >> 2] = 0;
            c[b2 + 312 >> 2] = 0;
            d2 = c[b2 + 288 >> 2] | 0;
            if (d2 | 0) {
              if (a[b2 + 292 >> 0] | 0) {
                c[5638] = (c[5638] | 0) + 1;
                rG(c[d2 + -4 >> 2] | 0);
              }
              c[b2 + 288 >> 2] = 0;
            }
            a[b2 + 292 >> 0] = 1;
            c[b2 + 288 >> 2] = 0;
            c[b2 + 280 >> 2] = 0;
            c[b2 + 284 >> 2] = 0;
            d2 = c[b2 + 240 >> 2] | 0;
            if (d2 | 0) {
              if (a[b2 + 244 >> 0] | 0) {
                c[5638] = (c[5638] | 0) + 1;
                rG(c[d2 + -4 >> 2] | 0);
              }
              c[b2 + 240 >> 2] = 0;
            }
            a[b2 + 244 >> 0] = 1;
            c[b2 + 240 >> 2] = 0;
            c[b2 + 232 >> 2] = 0;
            c[b2 + 236 >> 2] = 0;
            d2 = c[b2 + 220 >> 2] | 0;
            if (d2 | 0) {
              if (a[b2 + 224 >> 0] | 0) {
                c[5638] = (c[5638] | 0) + 1;
                rG(c[d2 + -4 >> 2] | 0);
              }
              c[b2 + 220 >> 2] = 0;
            }
            a[b2 + 224 >> 0] = 1;
            c[b2 + 220 >> 2] = 0;
            c[b2 + 212 >> 2] = 0;
            c[b2 + 216 >> 2] = 0;
            d2 = c[b2 + 188 >> 2] | 0;
            if (!d2) {
              a[b2 + 192 >> 0] = 1;
              c[b2 + 188 >> 2] = 0;
              c[b2 + 180 >> 2] = 0;
              f2 = b2 + 184 | 0;
              c[f2 >> 2] = 0;
              Ze(b2);
              return;
            }
            if (a[b2 + 192 >> 0] | 0) {
              c[5638] = (c[5638] | 0) + 1;
              rG(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 188 >> 2] = 0;
            a[b2 + 192 >> 0] = 1;
            c[b2 + 188 >> 2] = 0;
            c[b2 + 180 >> 2] = 0;
            f2 = b2 + 184 | 0;
            c[f2 >> 2] = 0;
            Ze(b2);
            return;
          }
          function Cq(a2) {
            a2 = a2 | 0;
            Bq(a2);
            if (!a2)
              return;
            c[5638] = (c[5638] | 0) + 1;
            rG(c[a2 + -4 >> 2] | 0);
            return;
          }
          function Dq(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0, e2 = 0;
            e2 = i;
            i = i + 16 | 0;
            fs(15710);
            df(a2);
            a:
              do
                if (vb[c[(c[a2 >> 2] | 0) + 20 >> 2] & 127](a2) | 0 ? (d2 = vb[c[(c[a2 >> 2] | 0) + 20 >> 2] & 127](a2) | 0, (vb[c[(c[d2 >> 2] | 0) + 56 >> 2] & 127](d2) | 0) & 6144 | 0) : 0) {
                  d2 = vb[c[(c[a2 >> 2] | 0) + 104 >> 2] & 127](a2) | 0;
                  while (1) {
                    b2 = d2 + -1 | 0;
                    if ((d2 | 0) <= 0)
                      break a;
                    d2 = Ob[c[(c[a2 >> 2] | 0) + 108 >> 2] & 31](a2, b2) | 0;
                    tb[c[(c[a2 >> 2] | 0) + 168 >> 2] & 127](a2, d2);
                    d2 = b2;
                  }
                }
              while (0);
            if ((((vb[c[(c[a2 >> 2] | 0) + 20 >> 2] & 127](a2) | 0 ? (d2 = vb[c[(c[a2 >> 2] | 0) + 20 >> 2] & 127](a2) | 0, (vb[c[(c[d2 >> 2] | 0) + 56 >> 2] & 127](d2) | 0) & 16387 | 0) : 0) ? vb[c[(c[a2 >> 2] | 0) + 20 >> 2] & 127](a2) | 0 : 0) ? (d2 = vb[c[(c[a2 >> 2] | 0) + 20 >> 2] & 127](a2) | 0, vb[c[(c[d2 >> 2] | 0) + 56 >> 2] & 127](d2) | 0) : 0) ? (c[a2 + 280 >> 2] | 0) > 0 : 0) {
              b2 = 0;
              do {
                d2 = c[(c[a2 + 288 >> 2] | 0) + (b2 << 2) >> 2] | 0;
                tb[c[(c[d2 >> 2] | 0) + 12 >> 2] & 127](d2, c[a2 + 72 >> 2] | 0);
                b2 = b2 + 1 | 0;
              } while ((b2 | 0) < (c[a2 + 280 >> 2] | 0));
            }
            if (vb[c[(c[a2 >> 2] | 0) + 20 >> 2] & 127](a2) | 0) {
              a2 = vb[c[(c[a2 >> 2] | 0) + 20 >> 2] & 127](a2) | 0;
              rb[c[(c[a2 >> 2] | 0) + 100 >> 2] & 255](a2);
            }
            b2 = c[2006] | 0;
            a2 = (c[b2 + 16 >> 2] | 0) + -1 | 0;
            c[b2 + 16 >> 2] = a2;
            if (a2 | 0) {
              i = e2;
              return;
            }
            do
              if (c[b2 + 4 >> 2] | 0) {
                kb(e2 | 0, 0) | 0;
                a2 = c[5649] | 0;
                g[b2 + 8 >> 2] = +g[b2 + 8 >> 2] + +(((c[e2 + 4 >> 2] | 0) - (c[a2 + 4 >> 2] | 0) + (((c[e2 >> 2] | 0) - (c[a2 >> 2] | 0) | 0) * 1e6 | 0) - (c[b2 + 12 >> 2] | 0) | 0) >>> 0) / 1e3;
                if (!(c[b2 + 16 >> 2] | 0)) {
                  b2 = c[2006] | 0;
                  break;
                } else {
                  i = e2;
                  return;
                }
              }
            while (0);
            c[2006] = c[b2 + 20 >> 2];
            i = e2;
            return;
          }
          function Eq(a2, b2, c2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = d2 | 0;
            Jf(a2, b2, c2, d2);
            return;
          }
          function Fq(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            if ((b2 | 0) == 0 ? 1 : (c[b2 + 236 >> 2] & 2 | 0) == 0) {
              Kf(a2, b2);
              return;
            } else {
              tb[c[(c[a2 >> 2] | 0) + 92 >> 2] & 127](a2, b2);
              return;
            }
          }
          function Gq(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, g2 = 0;
            rb[c[(c[b2 >> 2] | 0) + 32 >> 2] & 255](b2);
            d2 = Eb[c[(c[b2 >> 2] | 0) + 16 >> 2] & 63](b2, 104, 1) | 0;
            e2 = c[d2 + 8 >> 2] | 0;
            f2 = e2;
            g2 = f2 + 104 | 0;
            do {
              c[f2 >> 2] = 0;
              f2 = f2 + 4 | 0;
            } while ((f2 | 0) < (g2 | 0));
            c[e2 + 88 >> 2] = c[a2 + 248 >> 2];
            c[e2 + 92 >> 2] = c[a2 + 252 >> 2];
            c[e2 + 96 >> 2] = c[a2 + 256 >> 2];
            c[e2 + 100 >> 2] = c[a2 + 260 >> 2];
            c[e2 >> 2] = c[a2 + 92 >> 2];
            c[e2 + 4 >> 2] = c[a2 + 96 >> 2];
            c[e2 + 8 >> 2] = c[a2 + 100 >> 2];
            c[e2 + 12 >> 2] = c[a2 + 104 >> 2];
            c[e2 + 16 >> 2] = c[a2 + 108 >> 2];
            c[e2 + 20 >> 2] = c[a2 + 116 >> 2];
            c[e2 + 24 >> 2] = c[a2 + 120 >> 2];
            c[e2 + 28 >> 2] = c[a2 + 124 >> 2];
            c[e2 + 32 >> 2] = c[a2 + 128 >> 2];
            c[e2 + 36 >> 2] = c[a2 + 132 >> 2];
            c[e2 + 40 >> 2] = c[a2 + 140 >> 2];
            c[e2 + 44 >> 2] = c[a2 + 144 >> 2];
            c[e2 + 48 >> 2] = c[a2 + 148 >> 2];
            c[e2 + 52 >> 2] = c[a2 + 152 >> 2];
            c[e2 + 56 >> 2] = c[a2 + 168 >> 2];
            c[e2 + 60 >> 2] = c[a2 + 172 >> 2];
            c[e2 + 64 >> 2] = c[a2 + 112 >> 2];
            c[e2 + 68 >> 2] = c[a2 + 156 >> 2];
            c[e2 + 72 >> 2] = c[a2 + 160 >> 2];
            c[e2 + 76 >> 2] = c[a2 + 164 >> 2];
            c[e2 + 80 >> 2] = c[a2 + 136 >> 2];
            pb[c[(c[b2 >> 2] | 0) + 20 >> 2] & 31](b2, d2, 15725, 1145853764, e2);
            Nf(a2, b2);
            Hq(a2, b2);
            rb[c[(c[b2 >> 2] | 0) + 36 >> 2] & 255](b2);
            return;
          }
          function Hq(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, g2 = 0;
            d2 = c[a2 + 8 >> 2] | 0;
            if ((d2 | 0) > 0) {
              f2 = 0;
              do {
                e2 = c[(c[a2 + 16 >> 2] | 0) + (f2 << 2) >> 2] | 0;
                if (c[e2 + 236 >> 2] & 2) {
                  g2 = vb[c[(c[e2 >> 2] | 0) + 16 >> 2] & 127](e2) | 0;
                  g2 = Eb[c[(c[b2 >> 2] | 0) + 16 >> 2] & 63](b2, g2, 1) | 0;
                  d2 = Eb[c[(c[e2 >> 2] | 0) + 20 >> 2] & 63](e2, c[g2 + 8 >> 2] | 0, b2) | 0;
                  pb[c[(c[b2 >> 2] | 0) + 20 >> 2] & 31](b2, g2, d2, 1497645650, e2);
                  d2 = c[a2 + 8 >> 2] | 0;
                }
                f2 = f2 + 1 | 0;
              } while ((f2 | 0) < (d2 | 0));
            }
            if ((c[a2 + 212 >> 2] | 0) <= 0)
              return;
            d2 = 0;
            do {
              g2 = c[(c[a2 + 220 >> 2] | 0) + (d2 << 2) >> 2] | 0;
              e2 = vb[c[(c[g2 >> 2] | 0) + 36 >> 2] & 127](g2) | 0;
              e2 = Eb[c[(c[b2 >> 2] | 0) + 16 >> 2] & 63](b2, e2, 1) | 0;
              f2 = Eb[c[(c[g2 >> 2] | 0) + 40 >> 2] & 63](g2, c[e2 + 8 >> 2] | 0, b2) | 0;
              pb[c[(c[b2 >> 2] | 0) + 20 >> 2] & 31](b2, e2, f2, 1397641027, g2);
              d2 = d2 + 1 | 0;
            } while ((d2 | 0) < (c[a2 + 212 >> 2] | 0));
            return;
          }
          function Iq(b2, d2, e2, f2) {
            b2 = b2 | 0;
            d2 = +d2;
            e2 = e2 | 0;
            f2 = +f2;
            var h2 = 0, j2 = 0, k2 = 0, l2 = 0;
            l2 = i;
            i = i + 16 | 0;
            kb(c[5649] | 0, 0) | 0;
            es(22556);
            c[5640] = (c[5640] | 0) + 1;
            k2 = c[5643] | 0;
            c[5643] = k2 + 1;
            if (!k2) {
              kb(l2 | 0, 0) | 0;
              k2 = c[5649] | 0;
              c[5642] = (c[l2 + 4 >> 2] | 0) - (c[k2 + 4 >> 2] | 0) + (((c[l2 >> 2] | 0) - (c[k2 >> 2] | 0) | 0) * 1e6 | 0);
            }
            c[5648] = 0;
            kb(l2 | 0, 0) | 0;
            fs(15750);
            if (e2) {
              g[b2 + 268 >> 2] = f2;
              j2 = +g[b2 + 264 >> 2] + d2;
              g[b2 + 264 >> 2] = j2;
              if (!(j2 >= f2)) {
                d2 = f2;
                k2 = 0;
              } else {
                g[b2 + 264 >> 2] = j2 - +(~~(j2 / f2) | 0) * f2;
                d2 = f2;
                k2 = ~~(j2 / f2);
              }
            } else {
              g[b2 + 264 >> 2] = a[b2 + 300 >> 0] | 0 ? 0 : d2;
              g[b2 + 268 >> 2] = 0;
              k2 = !(+N(+d2) < 11920928955078125e-23) & 1;
              e2 = k2;
            }
            if (vb[c[(c[b2 >> 2] | 0) + 20 >> 2] & 127](b2) | 0) {
              h2 = vb[c[(c[b2 >> 2] | 0) + 20 >> 2] & 127](b2) | 0;
              a[23328] = (vb[c[(c[h2 >> 2] | 0) + 56 >> 2] & 127](h2) | 0) >>> 4 & 1;
            }
            if (k2) {
              e2 = (k2 | 0) > (e2 | 0) ? e2 : k2;
              qb[c[(c[b2 >> 2] | 0) + 164 >> 2] & 31](b2, d2 * +(e2 | 0));
              rb[c[(c[b2 >> 2] | 0) + 172 >> 2] & 255](b2);
              if ((e2 | 0) > 0) {
                h2 = 0;
                do {
                  qb[c[(c[b2 >> 2] | 0) + 160 >> 2] & 31](b2, d2);
                  rb[c[(c[b2 >> 2] | 0) + 80 >> 2] & 255](b2);
                  h2 = h2 + 1 | 0;
                } while ((h2 | 0) < (e2 | 0));
                e2 = b2;
              } else
                e2 = b2;
            } else {
              rb[c[(c[b2 >> 2] | 0) + 80 >> 2] & 255](b2);
              e2 = b2;
            }
            rb[c[(c[e2 >> 2] | 0) + 120 >> 2] & 255](b2);
            c[5648] = (c[5648] | 0) + 1;
            e2 = c[2006] | 0;
            b2 = (c[e2 + 16 >> 2] | 0) + -1 | 0;
            c[e2 + 16 >> 2] = b2;
            if (b2 | 0) {
              i = l2;
              return k2 | 0;
            }
            do
              if (c[e2 + 4 >> 2] | 0) {
                kb(l2 | 0, 0) | 0;
                b2 = c[5649] | 0;
                g[e2 + 8 >> 2] = +g[e2 + 8 >> 2] + +(((c[l2 + 4 >> 2] | 0) - (c[b2 + 4 >> 2] | 0) + (((c[l2 >> 2] | 0) - (c[b2 >> 2] | 0) | 0) * 1e6 | 0) - (c[e2 + 12 >> 2] | 0) | 0) >>> 0) / 1e3;
                if (!(c[e2 + 16 >> 2] | 0)) {
                  e2 = c[2006] | 0;
                  break;
                } else {
                  i = l2;
                  return k2 | 0;
                }
              }
            while (0);
            c[2006] = c[e2 + 20 >> 2];
            i = l2;
            return k2 | 0;
          }
          function Jq(b2, d2, e2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, g2 = 0, h2 = 0, i2 = 0;
            f2 = c[b2 + 212 >> 2] | 0;
            if ((f2 | 0) == (c[b2 + 216 >> 2] | 0) ? (i2 = f2 | 0 ? f2 << 1 : 1, (f2 | 0) < (i2 | 0)) : 0) {
              if (!i2)
                h2 = 0;
              else {
                c[5637] = (c[5637] | 0) + 1;
                f2 = qG((i2 << 2 | 3) + 16 | 0) | 0;
                if (!f2)
                  f2 = 0;
                else {
                  c[(f2 + 4 + 15 & -16) + -4 >> 2] = f2;
                  f2 = f2 + 4 + 15 & -16;
                }
                h2 = f2;
                f2 = c[b2 + 212 >> 2] | 0;
              }
              if ((f2 | 0) > 0) {
                g2 = 0;
                do {
                  c[h2 + (g2 << 2) >> 2] = c[(c[b2 + 220 >> 2] | 0) + (g2 << 2) >> 2];
                  g2 = g2 + 1 | 0;
                } while ((g2 | 0) != (f2 | 0));
              }
              g2 = c[b2 + 220 >> 2] | 0;
              if (g2) {
                if (a[b2 + 224 >> 0] | 0) {
                  c[5638] = (c[5638] | 0) + 1;
                  rG(c[g2 + -4 >> 2] | 0);
                  f2 = c[b2 + 212 >> 2] | 0;
                }
                c[b2 + 220 >> 2] = 0;
              }
              a[b2 + 224 >> 0] = 1;
              c[b2 + 220 >> 2] = h2;
              c[b2 + 216 >> 2] = i2;
            }
            c[(c[b2 + 220 >> 2] | 0) + (f2 << 2) >> 2] = d2;
            c[b2 + 212 >> 2] = f2 + 1;
            if (!e2)
              return;
            Fr(c[d2 + 28 >> 2] | 0, d2);
            Fr(c[d2 + 32 >> 2] | 0, d2);
            return;
          }
          function Kq(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, g2 = 0;
            f2 = c[a2 + 212 >> 2] | 0;
            a:
              do
                if ((f2 | 0) > 0) {
                  g2 = c[a2 + 220 >> 2] | 0;
                  d2 = 0;
                  while (1) {
                    e2 = g2 + (d2 << 2) | 0;
                    if ((c[e2 >> 2] | 0) == (b2 | 0))
                      break;
                    d2 = d2 + 1 | 0;
                    if ((d2 | 0) >= (f2 | 0))
                      break a;
                  }
                  if ((d2 | 0) < (f2 | 0)) {
                    c[e2 >> 2] = c[g2 + (f2 + -1 << 2) >> 2];
                    c[(c[a2 + 220 >> 2] | 0) + (f2 + -1 << 2) >> 2] = b2;
                    c[a2 + 212 >> 2] = f2 + -1;
                  }
                }
              while (0);
            Gr(c[b2 + 28 >> 2] | 0, b2);
            Gr(c[b2 + 32 >> 2] | 0, b2);
            return;
          }
          function Lq(b2, d2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0;
            e2 = c[b2 + 280 >> 2] | 0;
            if ((e2 | 0) == (c[b2 + 284 >> 2] | 0) ? (h2 = e2 | 0 ? e2 << 1 : 1, (e2 | 0) < (h2 | 0)) : 0) {
              if (!h2)
                g2 = 0;
              else {
                c[5637] = (c[5637] | 0) + 1;
                e2 = qG((h2 << 2 | 3) + 16 | 0) | 0;
                if (!e2)
                  e2 = 0;
                else {
                  c[(e2 + 4 + 15 & -16) + -4 >> 2] = e2;
                  e2 = e2 + 4 + 15 & -16;
                }
                g2 = e2;
                e2 = c[b2 + 280 >> 2] | 0;
              }
              if ((e2 | 0) > 0) {
                f2 = 0;
                do {
                  c[g2 + (f2 << 2) >> 2] = c[(c[b2 + 288 >> 2] | 0) + (f2 << 2) >> 2];
                  f2 = f2 + 1 | 0;
                } while ((f2 | 0) != (e2 | 0));
              }
              f2 = c[b2 + 288 >> 2] | 0;
              if (f2) {
                if (a[b2 + 292 >> 0] | 0) {
                  c[5638] = (c[5638] | 0) + 1;
                  rG(c[f2 + -4 >> 2] | 0);
                  e2 = c[b2 + 280 >> 2] | 0;
                }
                c[b2 + 288 >> 2] = 0;
              }
              a[b2 + 292 >> 0] = 1;
              c[b2 + 288 >> 2] = g2;
              c[b2 + 284 >> 2] = h2;
            }
            c[(c[b2 + 288 >> 2] | 0) + (e2 << 2) >> 2] = d2;
            c[b2 + 280 >> 2] = e2 + 1;
            return;
          }
          function Mq(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0;
            f2 = c[a2 + 280 >> 2] | 0;
            if ((f2 | 0) <= 0)
              return;
            g2 = c[a2 + 288 >> 2] | 0;
            d2 = 0;
            while (1) {
              e2 = g2 + (d2 << 2) | 0;
              if ((c[e2 >> 2] | 0) == (b2 | 0))
                break;
              d2 = d2 + 1 | 0;
              if ((d2 | 0) >= (f2 | 0)) {
                h2 = 7;
                break;
              }
            }
            if ((h2 | 0) == 7)
              return;
            if ((d2 | 0) >= (f2 | 0))
              return;
            c[e2 >> 2] = c[g2 + (f2 + -1 << 2) >> 2];
            c[(c[a2 + 288 >> 2] | 0) + (f2 + -1 << 2) >> 2] = b2;
            c[a2 + 280 >> 2] = f2 + -1;
            return;
          }
          function Nq(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0;
            c[a2 + 248 >> 2] = c[b2 >> 2];
            c[a2 + 248 + 4 >> 2] = c[b2 + 4 >> 2];
            c[a2 + 248 + 8 >> 2] = c[b2 + 8 >> 2];
            c[a2 + 248 + 12 >> 2] = c[b2 + 12 >> 2];
            d2 = c[a2 + 232 >> 2] | 0;
            if ((d2 | 0) <= 0)
              return;
            h2 = 0;
            do {
              f2 = c[(c[a2 + 240 >> 2] | 0) + (h2 << 2) >> 2] | 0;
              switch (c[f2 + 216 >> 2] | 0) {
                case 2:
                case 5:
                  break;
                default:
                  if (!(c[f2 + 528 >> 2] & 1)) {
                    e2 = +g[f2 + 368 >> 2];
                    if (e2 != 0) {
                      j2 = 1 / e2 * +g[b2 + 4 >> 2];
                      i2 = 1 / e2 * +g[b2 + 8 >> 2];
                      g[f2 + 388 >> 2] = 1 / e2 * +g[b2 >> 2];
                      g[f2 + 392 >> 2] = j2;
                      g[f2 + 396 >> 2] = i2;
                      g[f2 + 400 >> 2] = 0;
                    }
                    c[f2 + 404 >> 2] = c[b2 >> 2];
                    c[f2 + 404 + 4 >> 2] = c[b2 + 4 >> 2];
                    c[f2 + 404 + 8 >> 2] = c[b2 + 8 >> 2];
                    c[f2 + 404 + 12 >> 2] = c[b2 + 12 >> 2];
                    d2 = c[a2 + 232 >> 2] | 0;
                  }
              }
              h2 = h2 + 1 | 0;
            } while ((h2 | 0) < (d2 | 0));
            return;
          }
          function Oq(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c[a2 >> 2] = c[b2 + 248 >> 2];
            c[a2 + 4 >> 2] = c[b2 + 248 + 4 >> 2];
            c[a2 + 8 >> 2] = c[b2 + 248 + 8 >> 2];
            c[a2 + 12 >> 2] = c[b2 + 248 + 12 >> 2];
            return;
          }
          function Pq(b2) {
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0;
            l2 = i;
            i = i + 64 | 0;
            fs(15765);
            a:
              do
                if (!(a[b2 + 274 >> 0] | 0)) {
                  d2 = c[b2 + 232 >> 2] | 0;
                  if ((d2 | 0) > 0) {
                    h2 = 0;
                    while (1) {
                      f2 = c[(c[b2 + 240 >> 2] | 0) + (h2 << 2) >> 2] | 0;
                      switch (c[f2 + 216 >> 2] | 0) {
                        case 2:
                        case 5:
                          break;
                        default:
                          if ((c[f2 + 504 >> 2] | 0) != 0 ? (c[f2 + 204 >> 2] & 3 | 0) == 0 : 0) {
                            if ((a[b2 + 300 >> 0] | 0) != 0 ? (k2 = +g[b2 + 268 >> 2], k2 != 0) : 0)
                              e2 = +g[b2 + 264 >> 2] - k2;
                            else
                              e2 = +g[b2 + 264 >> 2] * +g[f2 + 248 >> 2];
                            xn(f2 + 68 | 0, +g[f2 + 132 >> 2], +g[f2 + 136 >> 2], +g[f2 + 140 >> 2], f2 + 148 | 0, e2, l2);
                            d2 = c[f2 + 504 >> 2] | 0;
                            tb[c[(c[d2 >> 2] | 0) + 12 >> 2] & 127](d2, l2);
                            d2 = c[b2 + 232 >> 2] | 0;
                          }
                      }
                      h2 = h2 + 1 | 0;
                      if ((h2 | 0) >= (d2 | 0))
                        break a;
                    }
                  }
                } else {
                  d2 = c[b2 + 8 >> 2] | 0;
                  if ((d2 | 0) > 0) {
                    h2 = 0;
                    do {
                      f2 = c[(c[b2 + 16 >> 2] | 0) + (h2 << 2) >> 2] | 0;
                      if ((!((f2 | 0) == 0 ? 1 : (c[f2 + 236 >> 2] & 2 | 0) == 0) ? (c[f2 + 504 >> 2] | 0) != 0 : 0) ? (c[f2 + 204 >> 2] & 3 | 0) == 0 : 0) {
                        if ((a[b2 + 300 >> 0] | 0) != 0 ? (j2 = +g[b2 + 268 >> 2], j2 != 0) : 0)
                          e2 = +g[b2 + 264 >> 2] - j2;
                        else
                          e2 = +g[b2 + 264 >> 2] * +g[f2 + 248 >> 2];
                        xn(f2 + 68 | 0, +g[f2 + 132 >> 2], +g[f2 + 136 >> 2], +g[f2 + 140 >> 2], f2 + 148 | 0, e2, l2);
                        d2 = c[f2 + 504 >> 2] | 0;
                        tb[c[(c[d2 >> 2] | 0) + 12 >> 2] & 127](d2, l2);
                        d2 = c[b2 + 8 >> 2] | 0;
                      }
                      h2 = h2 + 1 | 0;
                    } while ((h2 | 0) < (d2 | 0));
                  }
                }
              while (0);
            d2 = c[2006] | 0;
            b2 = (c[d2 + 16 >> 2] | 0) + -1 | 0;
            c[d2 + 16 >> 2] = b2;
            if (b2 | 0) {
              i = l2;
              return;
            }
            do
              if (c[d2 + 4 >> 2] | 0) {
                kb(l2 | 0, 0) | 0;
                b2 = c[5649] | 0;
                g[d2 + 8 >> 2] = +g[d2 + 8 >> 2] + +(((c[l2 + 4 >> 2] | 0) - (c[b2 + 4 >> 2] | 0) + (((c[l2 >> 2] | 0) - (c[b2 >> 2] | 0) | 0) * 1e6 | 0) - (c[d2 + 12 >> 2] | 0) | 0) >>> 0) / 1e3;
                if (!(c[d2 + 16 >> 2] | 0)) {
                  d2 = c[2006] | 0;
                  break;
                } else {
                  i = l2;
                  return;
                }
              }
            while (0);
            c[2006] = c[d2 + 20 >> 2];
            i = l2;
            return;
          }
          function Qq(b2, d2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0;
            e2 = c[d2 + 204 >> 2] | 0;
            if ((e2 & 3 | 0) == 0 ? (c[d2 + 528 >> 2] & 1 | 0) == 0 : 0) {
              h2 = +g[d2 + 368 >> 2];
              if (h2 != 0) {
                l2 = 1 / h2 * +g[b2 + 252 >> 2];
                k2 = 1 / h2 * +g[b2 + 256 >> 2];
                g[d2 + 388 >> 2] = 1 / h2 * +g[b2 + 248 >> 2];
                g[d2 + 392 >> 2] = l2;
                g[d2 + 396 >> 2] = k2;
                g[d2 + 400 >> 2] = 0;
              }
              c[d2 + 404 >> 2] = c[b2 + 248 >> 2];
              c[d2 + 404 + 4 >> 2] = c[b2 + 248 + 4 >> 2];
              c[d2 + 404 + 8 >> 2] = c[b2 + 248 + 8 >> 2];
              c[d2 + 404 + 12 >> 2] = c[b2 + 248 + 12 >> 2];
            }
            if (!(c[d2 + 192 >> 2] | 0))
              return;
            if (e2 & 1) {
              if ((c[d2 + 216 >> 2] & -2 | 0) != 4)
                c[d2 + 216 >> 2] = 2;
            } else {
              f2 = c[b2 + 232 >> 2] | 0;
              if ((f2 | 0) == (c[b2 + 236 >> 2] | 0) ? (j2 = f2 | 0 ? f2 << 1 : 1, (f2 | 0) < (j2 | 0)) : 0) {
                if (!j2)
                  e2 = 0;
                else {
                  c[5637] = (c[5637] | 0) + 1;
                  e2 = qG((j2 << 2 | 3) + 16 | 0) | 0;
                  if (!e2)
                    e2 = 0;
                  else {
                    c[(e2 + 4 + 15 & -16) + -4 >> 2] = e2;
                    e2 = e2 + 4 + 15 & -16;
                  }
                  f2 = c[b2 + 232 >> 2] | 0;
                }
                if ((f2 | 0) > 0) {
                  i2 = 0;
                  do {
                    c[e2 + (i2 << 2) >> 2] = c[(c[b2 + 240 >> 2] | 0) + (i2 << 2) >> 2];
                    i2 = i2 + 1 | 0;
                  } while ((i2 | 0) != (f2 | 0));
                }
                i2 = c[b2 + 240 >> 2] | 0;
                if (i2) {
                  if (a[b2 + 244 >> 0] | 0) {
                    c[5638] = (c[5638] | 0) + 1;
                    rG(c[i2 + -4 >> 2] | 0);
                    f2 = c[b2 + 232 >> 2] | 0;
                  }
                  c[b2 + 240 >> 2] = 0;
                }
                a[b2 + 244 >> 0] = 1;
                c[b2 + 240 >> 2] = e2;
                c[b2 + 236 >> 2] = j2;
                e2 = c[d2 + 204 >> 2] | 0;
              }
              c[(c[b2 + 240 >> 2] | 0) + (f2 << 2) >> 2] = d2;
              c[b2 + 232 >> 2] = f2 + 1;
            }
            j2 = (e2 & 3 | 0) == 0;
            bc[c[(c[b2 >> 2] | 0) + 36 >> 2] & 127](b2, d2, j2 ? 1 : 2, j2 ? -1 : -3);
            return;
          }
          function Rq(b2, d2, e2, f2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            var h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0;
            h2 = c[d2 + 204 >> 2] | 0;
            if ((h2 & 3 | 0) == 0 ? (c[d2 + 528 >> 2] & 1 | 0) == 0 : 0) {
              i2 = +g[d2 + 368 >> 2];
              if (i2 != 0) {
                n2 = 1 / i2 * +g[b2 + 252 >> 2];
                m2 = 1 / i2 * +g[b2 + 256 >> 2];
                g[d2 + 388 >> 2] = 1 / i2 * +g[b2 + 248 >> 2];
                g[d2 + 392 >> 2] = n2;
                g[d2 + 396 >> 2] = m2;
                g[d2 + 400 >> 2] = 0;
              }
              c[d2 + 404 >> 2] = c[b2 + 248 >> 2];
              c[d2 + 404 + 4 >> 2] = c[b2 + 248 + 4 >> 2];
              c[d2 + 404 + 8 >> 2] = c[b2 + 248 + 8 >> 2];
              c[d2 + 404 + 12 >> 2] = c[b2 + 248 + 12 >> 2];
            }
            if (!(c[d2 + 192 >> 2] | 0))
              return;
            if (h2 & 1) {
              if ((c[d2 + 216 >> 2] & -2 | 0) != 4)
                c[d2 + 216 >> 2] = 2;
            } else {
              h2 = c[b2 + 232 >> 2] | 0;
              if ((h2 | 0) == (c[b2 + 236 >> 2] | 0) ? (l2 = h2 | 0 ? h2 << 1 : 1, (h2 | 0) < (l2 | 0)) : 0) {
                if (!l2)
                  k2 = 0;
                else {
                  c[5637] = (c[5637] | 0) + 1;
                  h2 = qG((l2 << 2 | 3) + 16 | 0) | 0;
                  if (!h2)
                    h2 = 0;
                  else {
                    c[(h2 + 4 + 15 & -16) + -4 >> 2] = h2;
                    h2 = h2 + 4 + 15 & -16;
                  }
                  k2 = h2;
                  h2 = c[b2 + 232 >> 2] | 0;
                }
                if ((h2 | 0) > 0) {
                  j2 = 0;
                  do {
                    c[k2 + (j2 << 2) >> 2] = c[(c[b2 + 240 >> 2] | 0) + (j2 << 2) >> 2];
                    j2 = j2 + 1 | 0;
                  } while ((j2 | 0) != (h2 | 0));
                }
                j2 = c[b2 + 240 >> 2] | 0;
                if (j2) {
                  if (a[b2 + 244 >> 0] | 0) {
                    c[5638] = (c[5638] | 0) + 1;
                    rG(c[j2 + -4 >> 2] | 0);
                    h2 = c[b2 + 232 >> 2] | 0;
                  }
                  c[b2 + 240 >> 2] = 0;
                }
                a[b2 + 244 >> 0] = 1;
                c[b2 + 240 >> 2] = k2;
                c[b2 + 236 >> 2] = l2;
              }
              c[(c[b2 + 240 >> 2] | 0) + (h2 << 2) >> 2] = d2;
              c[b2 + 232 >> 2] = h2 + 1;
            }
            bc[c[(c[b2 >> 2] | 0) + 36 >> 2] & 127](b2, d2, e2, f2);
            return;
          }
          function Sq(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0;
            f2 = c[a2 + 232 >> 2] | 0;
            a:
              do
                if ((f2 | 0) > 0) {
                  g2 = c[a2 + 240 >> 2] | 0;
                  d2 = 0;
                  while (1) {
                    e2 = g2 + (d2 << 2) | 0;
                    if ((c[e2 >> 2] | 0) == (b2 | 0))
                      break;
                    d2 = d2 + 1 | 0;
                    if ((d2 | 0) >= (f2 | 0))
                      break a;
                  }
                  if ((d2 | 0) < (f2 | 0)) {
                    c[e2 >> 2] = c[g2 + (f2 + -1 << 2) >> 2];
                    c[(c[a2 + 240 >> 2] | 0) + (f2 + -1 << 2) >> 2] = b2;
                    c[a2 + 232 >> 2] = f2 + -1;
                  }
                }
              while (0);
            d2 = c[b2 + 188 >> 2] | 0;
            if (d2 | 0) {
              g2 = c[a2 + 68 >> 2] | 0;
              g2 = vb[c[(c[g2 >> 2] | 0) + 36 >> 2] & 127](g2) | 0;
              Zb[c[(c[g2 >> 2] | 0) + 40 >> 2] & 127](g2, d2, c[a2 + 24 >> 2] | 0);
              g2 = c[a2 + 68 >> 2] | 0;
              Zb[c[(c[g2 >> 2] | 0) + 12 >> 2] & 127](g2, d2, c[a2 + 24 >> 2] | 0);
              c[b2 + 188 >> 2] = 0;
            }
            f2 = c[a2 + 8 >> 2] | 0;
            if ((f2 | 0) <= 0)
              return;
            g2 = c[a2 + 16 >> 2] | 0;
            d2 = 0;
            while (1) {
              e2 = g2 + (d2 << 2) | 0;
              if ((c[e2 >> 2] | 0) == (b2 | 0))
                break;
              d2 = d2 + 1 | 0;
              if ((d2 | 0) >= (f2 | 0)) {
                h2 = 15;
                break;
              }
            }
            if ((h2 | 0) == 15)
              return;
            if ((d2 | 0) >= (f2 | 0))
              return;
            c[e2 >> 2] = c[g2 + (f2 + -1 << 2) >> 2];
            c[(c[a2 + 16 >> 2] | 0) + (f2 + -1 << 2) >> 2] = b2;
            c[a2 + 8 >> 2] = f2 + -1;
            return;
          }
          function Tq(b2, d2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0;
            if (a[b2 + 273 >> 0] | 0 ? (e2 = c[b2 + 200 >> 2] | 0, e2 | 0) : 0) {
              c[5638] = (c[5638] | 0) + 1;
              rG(c[e2 + -4 >> 2] | 0);
            }
            a[b2 + 273 >> 0] = 0;
            c[b2 + 200 >> 2] = d2;
            c[(c[b2 + 196 >> 2] | 0) + 8 >> 2] = d2;
            return;
          }
          function Uq(a2) {
            a2 = a2 | 0;
            return c[a2 + 200 >> 2] | 0;
          }
          function Vq(a2) {
            a2 = a2 | 0;
            return c[a2 + 212 >> 2] | 0;
          }
          function Wq(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            return c[(c[a2 + 220 >> 2] | 0) + (b2 << 2) >> 2] | 0;
          }
          function Xq(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            return c[(c[a2 + 220 >> 2] | 0) + (b2 << 2) >> 2] | 0;
          }
          function Yq(a2) {
            a2 = a2 | 0;
            return 2;
          }
          function Zq(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0;
            if ((c[a2 + 232 >> 2] | 0) <= 0)
              return;
            b2 = 0;
            do {
              d2 = (c[(c[a2 + 240 >> 2] | 0) + (b2 << 2) >> 2] | 0) + 436 | 0;
              c[d2 >> 2] = 0;
              c[d2 + 4 >> 2] = 0;
              c[d2 + 8 >> 2] = 0;
              c[d2 + 12 >> 2] = 0;
              c[d2 + 16 >> 2] = 0;
              c[d2 + 20 >> 2] = 0;
              c[d2 + 24 >> 2] = 0;
              c[d2 + 28 >> 2] = 0;
              b2 = b2 + 1 | 0;
            } while ((b2 | 0) < (c[a2 + 232 >> 2] | 0));
            return;
          }
          function _q(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            tb[c[(c[a2 >> 2] | 0) + 64 >> 2] & 127](a2, b2);
            return;
          }
          function $q(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            tb[c[(c[a2 >> 2] | 0) + 68 >> 2] & 127](a2, b2);
            return;
          }
          function ar(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            tb[c[(c[a2 >> 2] | 0) + 64 >> 2] & 127](a2, b2);
            return;
          }
          function br(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            tb[c[(c[a2 >> 2] | 0) + 68 >> 2] & 127](a2, b2);
            return;
          }
          function cr(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            var d2 = 0, e2 = 0, f2 = 0, h2 = 0;
            h2 = i;
            i = i + 16 | 0;
            fs(15789);
            d2 = c[a2 + 232 >> 2] | 0;
            if ((d2 | 0) > 0) {
              f2 = 0;
              do {
                e2 = c[(c[a2 + 240 >> 2] | 0) + (f2 << 2) >> 2] | 0;
                if (!(c[e2 + 204 >> 2] & 3)) {
                  Dr(e2, b2);
                  xn(e2 + 4 | 0, +g[e2 + 336 >> 2], +g[e2 + 340 >> 2], +g[e2 + 344 >> 2], e2 + 352 | 0, b2, e2 + 68 | 0);
                  d2 = c[a2 + 232 >> 2] | 0;
                }
                f2 = f2 + 1 | 0;
              } while ((f2 | 0) < (d2 | 0));
            }
            d2 = c[2006] | 0;
            a2 = (c[d2 + 16 >> 2] | 0) + -1 | 0;
            c[d2 + 16 >> 2] = a2;
            if (a2 | 0) {
              i = h2;
              return;
            }
            do
              if (c[d2 + 4 >> 2] | 0) {
                kb(h2 | 0, 0) | 0;
                a2 = c[5649] | 0;
                g[d2 + 8 >> 2] = +g[d2 + 8 >> 2] + +(((c[h2 + 4 >> 2] | 0) - (c[a2 + 4 >> 2] | 0) + (((c[h2 >> 2] | 0) - (c[a2 >> 2] | 0) | 0) * 1e6 | 0) - (c[d2 + 12 >> 2] | 0) | 0) >>> 0) / 1e3;
                if (!(c[d2 + 16 >> 2] | 0)) {
                  d2 = c[2006] | 0;
                  break;
                } else {
                  i = h2;
                  return;
                }
              }
            while (0);
            c[2006] = c[d2 + 20 >> 2];
            i = h2;
            return;
          }
          function dr(d2, e2) {
            d2 = d2 | 0;
            e2 = +e2;
            var f2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0;
            s2 = i;
            i = i + 304 | 0;
            fs(15815);
            a:
              do
                if ((c[d2 + 232 >> 2] | 0) > 0) {
                  n2 = s2 + 136 + 48 | 0;
                  o2 = 0;
                  while (1) {
                    m2 = c[(c[d2 + 240 >> 2] | 0) + (o2 << 2) >> 2] | 0;
                    g[m2 + 248 >> 2] = 1;
                    b:
                      do
                        switch (c[m2 + 216 >> 2] | 0) {
                          case 2:
                          case 5:
                            break;
                          default:
                            if (!(c[m2 + 204 >> 2] & 3)) {
                              xn(m2 + 4 | 0, +g[m2 + 336 >> 2], +g[m2 + 340 >> 2], +g[m2 + 344 >> 2], m2 + 352 | 0, e2, s2 + 136 | 0);
                              h2 = +g[n2 >> 2] - +g[m2 + 52 >> 2];
                              k2 = +g[s2 + 136 + 52 >> 2] - +g[m2 + 56 >> 2];
                              l2 = +g[s2 + 136 + 56 >> 2] - +g[m2 + 60 >> 2];
                              if (a[d2 + 44 >> 0] | 0 ? (t2 = +g[m2 + 256 >> 2], t2 * t2 != 0 ? t2 * t2 < h2 * h2 + k2 * k2 + l2 * l2 : 0) : 0) {
                                fs(15835);
                                if ((c[(c[m2 + 192 >> 2] | 0) + 4 >> 2] | 0) < 20) {
                                  c[5475] = (c[5475] | 0) + 1;
                                  f2 = c[d2 + 68 >> 2] | 0;
                                  f2 = vb[c[(c[f2 >> 2] | 0) + 36 >> 2] & 127](f2) | 0;
                                  j2 = c[d2 + 24 >> 2] | 0;
                                  g[s2 + 200 + 4 >> 2] = 1;
                                  b[s2 + 200 + 8 >> 1] = 1;
                                  b[s2 + 200 + 10 >> 1] = -1;
                                  c[s2 + 200 >> 2] = 7848;
                                  c[s2 + 200 + 12 >> 2] = c[m2 + 52 >> 2];
                                  c[s2 + 200 + 12 + 4 >> 2] = c[m2 + 52 + 4 >> 2];
                                  c[s2 + 200 + 12 + 8 >> 2] = c[m2 + 52 + 8 >> 2];
                                  c[s2 + 200 + 12 + 12 >> 2] = c[m2 + 52 + 12 >> 2];
                                  c[s2 + 200 + 28 >> 2] = c[n2 >> 2];
                                  c[s2 + 200 + 28 + 4 >> 2] = c[n2 + 4 >> 2];
                                  c[s2 + 200 + 28 + 8 >> 2] = c[n2 + 8 >> 2];
                                  c[s2 + 200 + 28 + 12 >> 2] = c[n2 + 12 >> 2];
                                  c[s2 + 200 + 76 >> 2] = 0;
                                  c[s2 + 200 >> 2] = 7872;
                                  c[s2 + 200 + 80 >> 2] = m2;
                                  c[s2 + 200 + 88 >> 2] = f2;
                                  c[s2 + 200 + 92 >> 2] = j2;
                                  j2 = c[m2 + 252 >> 2] | 0;
                                  c[s2 + 64 + 8 >> 2] = 0;
                                  c[s2 + 64 + 12 >> 2] = -1;
                                  c[s2 + 64 + 16 >> 2] = 1065353216;
                                  c[s2 + 64 + 20 >> 2] = 1065353216;
                                  c[s2 + 64 + 24 >> 2] = 1065353216;
                                  g[s2 + 64 + 28 >> 2] = 0;
                                  c[s2 + 64 >> 2] = 6380;
                                  c[s2 + 64 + 4 >> 2] = 8;
                                  c[s2 + 64 + 32 >> 2] = j2;
                                  c[s2 + 64 + 48 >> 2] = j2;
                                  c[s2 + 200 + 84 >> 2] = c[d2 + 56 >> 2];
                                  j2 = c[(c[m2 + 188 >> 2] | 0) + 4 >> 2] | 0;
                                  b[s2 + 200 + 8 >> 1] = j2;
                                  b[s2 + 200 + 10 >> 1] = j2 >>> 16;
                                  c[s2 + 48 >> 2] = c[n2 >> 2];
                                  c[s2 + 48 + 4 >> 2] = c[n2 + 4 >> 2];
                                  c[s2 + 48 + 8 >> 2] = c[n2 + 8 >> 2];
                                  c[s2 + 48 + 12 >> 2] = c[n2 + 12 >> 2];
                                  c[s2 >> 2] = c[m2 + 4 >> 2];
                                  c[s2 + 4 >> 2] = c[m2 + 4 + 4 >> 2];
                                  c[s2 + 8 >> 2] = c[m2 + 4 + 8 >> 2];
                                  c[s2 + 12 >> 2] = c[m2 + 4 + 12 >> 2];
                                  c[s2 + 16 >> 2] = c[m2 + 20 >> 2];
                                  c[s2 + 16 + 4 >> 2] = c[m2 + 20 + 4 >> 2];
                                  c[s2 + 16 + 8 >> 2] = c[m2 + 20 + 8 >> 2];
                                  c[s2 + 16 + 12 >> 2] = c[m2 + 20 + 12 >> 2];
                                  c[s2 + 32 >> 2] = c[m2 + 36 >> 2];
                                  c[s2 + 32 + 4 >> 2] = c[m2 + 36 + 4 >> 2];
                                  c[s2 + 32 + 8 >> 2] = c[m2 + 36 + 8 >> 2];
                                  c[s2 + 32 + 12 >> 2] = c[m2 + 36 + 12 >> 2];
                                  Yf(d2, s2 + 64 | 0, m2 + 4 | 0, s2, s2 + 200 | 0, 0);
                                  h2 = +g[s2 + 200 + 4 >> 2];
                                  if (h2 < 1) {
                                    g[m2 + 248 >> 2] = h2;
                                    xn(m2 + 4 | 0, +g[m2 + 336 >> 2], +g[m2 + 340 >> 2], +g[m2 + 344 >> 2], m2 + 352 | 0, h2 * e2, s2 + 136 | 0);
                                    g[m2 + 248 >> 2] = 0;
                                    Er(m2, s2 + 136 | 0);
                                    f2 = 4;
                                  } else
                                    f2 = 0;
                                  if (!f2)
                                    p2 = 12;
                                } else
                                  p2 = 12;
                                if ((p2 | 0) == 12) {
                                  p2 = 0;
                                  f2 = 0;
                                }
                                j2 = c[2006] | 0;
                                u2 = (c[j2 + 16 >> 2] | 0) + -1 | 0;
                                c[j2 + 16 >> 2] = u2;
                                do
                                  if (!u2) {
                                    if (c[j2 + 4 >> 2] | 0) {
                                      kb(s2 + 200 | 0, 0) | 0;
                                      u2 = c[5649] | 0;
                                      g[j2 + 8 >> 2] = +g[j2 + 8 >> 2] + +(((c[s2 + 200 + 4 >> 2] | 0) - (c[u2 + 4 >> 2] | 0) + (((c[s2 + 200 >> 2] | 0) - (c[u2 >> 2] | 0) | 0) * 1e6 | 0) - (c[j2 + 12 >> 2] | 0) | 0) >>> 0) / 1e3;
                                      if (c[j2 + 16 >> 2] | 0)
                                        break;
                                      j2 = c[2006] | 0;
                                    }
                                    c[2006] = c[j2 + 20 >> 2];
                                  }
                                while (0);
                                if (f2 | 0)
                                  break b;
                              }
                              Er(m2, s2 + 136 | 0);
                            }
                        }
                      while (0);
                    o2 = o2 + 1 | 0;
                    if ((o2 | 0) >= (c[d2 + 232 >> 2] | 0))
                      break a;
                  }
                }
              while (0);
            do
              if (a[d2 + 275 >> 0] | 0) {
                fs(15892);
                if ((c[d2 + 308 >> 2] | 0) > 0) {
                  p2 = 0;
                  do {
                    o2 = c[(c[d2 + 316 >> 2] | 0) + (p2 << 2) >> 2] | 0;
                    m2 = c[o2 + 740 >> 2] | 0;
                    m2 = (c[m2 + 236 >> 2] & 2 | 0) == 0 ? 0 : m2;
                    n2 = c[o2 + 744 >> 2] | 0;
                    n2 = (c[n2 + 236 >> 2] & 2 | 0) == 0 ? 0 : n2;
                    f2 = c[o2 + 748 >> 2] | 0;
                    if ((f2 | 0) > 0)
                      if (!m2) {
                        j2 = 0;
                        do {
                          h2 = +g[57] * +g[n2 + 228 >> 2];
                          if (h2 > 0 ? (q2 = +g[o2 + 4 + (j2 * 184 | 0) + 120 >> 2], q2 != 0) : 0) {
                            l2 = h2 * (+g[o2 + 4 + (j2 * 184 | 0) + 64 >> 2] * q2);
                            e2 = h2 * (+g[o2 + 4 + (j2 * 184 | 0) + 68 >> 2] * q2);
                            t2 = h2 * (+g[o2 + 4 + (j2 * 184 | 0) + 72 >> 2] * q2);
                            h2 = +g[o2 + 4 + (j2 * 184 | 0) + 36 >> 2] - +g[n2 + 56 >> 2];
                            k2 = +g[o2 + 4 + (j2 * 184 | 0) + 40 >> 2] - +g[n2 + 60 >> 2];
                            g[s2 >> 2] = +g[o2 + 4 + (j2 * 184 | 0) + 32 >> 2] - +g[n2 + 52 >> 2];
                            g[s2 + 4 >> 2] = h2;
                            g[s2 + 8 >> 2] = k2;
                            g[s2 + 12 >> 2] = 0;
                            g[s2 + 120 >> 2] = l2;
                            g[s2 + 120 + 4 >> 2] = e2;
                            g[s2 + 120 + 8 >> 2] = t2;
                            g[s2 + 120 + 12 >> 2] = 0;
                            Uo(n2, s2 + 120 | 0, s2);
                            f2 = c[o2 + 748 >> 2] | 0;
                          }
                          j2 = j2 + 1 | 0;
                        } while ((j2 | 0) < (f2 | 0));
                      } else {
                        j2 = 0;
                        do {
                          h2 = +g[m2 + 228 >> 2] * +g[n2 + 228 >> 2];
                          if (h2 > 0 ? (r2 = +g[o2 + 4 + (j2 * 184 | 0) + 120 >> 2], r2 != 0) : 0) {
                            l2 = h2 * (+g[o2 + 4 + (j2 * 184 | 0) + 64 >> 2] * r2);
                            e2 = h2 * (+g[o2 + 4 + (j2 * 184 | 0) + 68 >> 2] * r2);
                            t2 = h2 * (+g[o2 + 4 + (j2 * 184 | 0) + 72 >> 2] * r2);
                            g[s2 + 200 >> 2] = -l2;
                            g[s2 + 200 + 4 >> 2] = -e2;
                            g[s2 + 200 + 8 >> 2] = -t2;
                            g[s2 + 200 + 12 >> 2] = 0;
                            k2 = +g[o2 + 4 + (j2 * 184 | 0) + 52 >> 2] - +g[m2 + 56 >> 2];
                            h2 = +g[o2 + 4 + (j2 * 184 | 0) + 56 >> 2] - +g[m2 + 60 >> 2];
                            g[s2 + 64 >> 2] = +g[o2 + 4 + (j2 * 184 | 0) + 48 >> 2] - +g[m2 + 52 >> 2];
                            g[s2 + 64 + 4 >> 2] = k2;
                            g[s2 + 64 + 8 >> 2] = h2;
                            g[s2 + 64 + 12 >> 2] = 0;
                            h2 = +g[o2 + 4 + (j2 * 184 | 0) + 36 >> 2] - +g[n2 + 56 >> 2];
                            k2 = +g[o2 + 4 + (j2 * 184 | 0) + 40 >> 2] - +g[n2 + 60 >> 2];
                            g[s2 >> 2] = +g[o2 + 4 + (j2 * 184 | 0) + 32 >> 2] - +g[n2 + 52 >> 2];
                            g[s2 + 4 >> 2] = h2;
                            g[s2 + 8 >> 2] = k2;
                            g[s2 + 12 >> 2] = 0;
                            Uo(m2, s2 + 200 | 0, s2 + 64 | 0);
                            g[s2 + 120 >> 2] = l2;
                            g[s2 + 120 + 4 >> 2] = e2;
                            g[s2 + 120 + 8 >> 2] = t2;
                            g[s2 + 120 + 12 >> 2] = 0;
                            Uo(n2, s2 + 120 | 0, s2);
                            f2 = c[o2 + 748 >> 2] | 0;
                          }
                          j2 = j2 + 1 | 0;
                        } while ((j2 | 0) < (f2 | 0));
                      }
                    p2 = p2 + 1 | 0;
                  } while ((p2 | 0) < (c[d2 + 308 >> 2] | 0));
                }
                f2 = c[2006] | 0;
                u2 = (c[f2 + 16 >> 2] | 0) + -1 | 0;
                c[f2 + 16 >> 2] = u2;
                if (!u2) {
                  if (c[f2 + 4 >> 2] | 0) {
                    kb(s2 + 200 | 0, 0) | 0;
                    u2 = c[5649] | 0;
                    g[f2 + 8 >> 2] = +g[f2 + 8 >> 2] + +(((c[s2 + 200 + 4 >> 2] | 0) - (c[u2 + 4 >> 2] | 0) + (((c[s2 + 200 >> 2] | 0) - (c[u2 >> 2] | 0) | 0) * 1e6 | 0) - (c[f2 + 12 >> 2] | 0) | 0) >>> 0) / 1e3;
                    if (c[f2 + 16 >> 2] | 0)
                      break;
                    f2 = c[2006] | 0;
                  }
                  c[2006] = c[f2 + 20 >> 2];
                }
              }
            while (0);
            f2 = c[2006] | 0;
            u2 = (c[f2 + 16 >> 2] | 0) + -1 | 0;
            c[f2 + 16 >> 2] = u2;
            if (u2 | 0) {
              i = s2;
              return;
            }
            do
              if (c[f2 + 4 >> 2] | 0) {
                kb(s2 + 200 | 0, 0) | 0;
                u2 = c[5649] | 0;
                g[f2 + 8 >> 2] = +g[f2 + 8 >> 2] + +(((c[s2 + 200 + 4 >> 2] | 0) - (c[u2 + 4 >> 2] | 0) + (((c[s2 + 200 >> 2] | 0) - (c[u2 >> 2] | 0) | 0) * 1e6 | 0) - (c[f2 + 12 >> 2] | 0) | 0) >>> 0) / 1e3;
                if (!(c[f2 + 16 >> 2] | 0)) {
                  f2 = c[2006] | 0;
                  break;
                } else {
                  i = s2;
                  return;
                }
              }
            while (0);
            c[2006] = c[f2 + 20 >> 2];
            i = s2;
            return;
          }
          function er(a2) {
            a2 = a2 | 0;
            rG(a2);
            return;
          }
          function fr(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0;
            c[a2 + 4 >> 2] = c[b2 + 40 >> 2];
            e2 = c[b2 >> 2] | 0;
            c[a2 + 76 >> 2] = e2;
            if (d2) {
              c[a2 + 44 >> 2] = c[b2 + 8 >> 2];
              c[a2 + 44 + 4 >> 2] = c[b2 + 8 + 4 >> 2];
              c[a2 + 44 + 8 >> 2] = c[b2 + 8 + 8 >> 2];
              c[a2 + 44 + 12 >> 2] = c[b2 + 8 + 12 >> 2];
              a2 = a2 + 60 | 0;
              d2 = b2 + 24 | 0;
              c[a2 >> 2] = c[d2 >> 2];
              c[a2 + 4 >> 2] = c[d2 + 4 >> 2];
              c[a2 + 8 >> 2] = c[d2 + 8 >> 2];
              c[a2 + 12 >> 2] = c[d2 + 12 >> 2];
              f2 = +g[b2 + 40 >> 2];
              return +f2;
            } else {
              k2 = +g[b2 + 8 >> 2];
              j2 = +g[b2 + 12 >> 2];
              i2 = +g[b2 + 16 >> 2];
              h2 = k2 * +g[e2 + 20 >> 2] + j2 * +g[e2 + 24 >> 2] + i2 * +g[e2 + 28 >> 2];
              f2 = k2 * +g[e2 + 36 >> 2] + j2 * +g[e2 + 40 >> 2] + i2 * +g[e2 + 44 >> 2];
              g[a2 + 44 >> 2] = +g[e2 + 4 >> 2] * k2 + +g[e2 + 8 >> 2] * j2 + +g[e2 + 12 >> 2] * i2;
              g[a2 + 48 >> 2] = h2;
              g[a2 + 52 >> 2] = f2;
              g[a2 + 56 >> 2] = 0;
              a2 = a2 + 60 | 0;
              d2 = b2 + 24 | 0;
              c[a2 >> 2] = c[d2 >> 2];
              c[a2 + 4 >> 2] = c[d2 + 4 >> 2];
              c[a2 + 8 >> 2] = c[d2 + 8 >> 2];
              c[a2 + 12 >> 2] = c[d2 + 12 >> 2];
              f2 = +g[b2 + 40 >> 2];
              return +f2;
            }
            return 0;
          }
          function gr(a2) {
            a2 = a2 | 0;
            rG(a2);
            return;
          }
          function hr(a2, d2) {
            a2 = a2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0;
            e2 = c[d2 >> 2] | 0;
            f2 = c[a2 + 80 >> 2] | 0;
            if ((e2 | 0) == (f2 | 0)) {
              a2 = 0;
              return a2 | 0;
            }
            d2 = c[d2 + 4 >> 2] | 0;
            if (!((b[a2 + 10 >> 1] & (d2 & 65535)) << 16 >> 16)) {
              a2 = 0;
              return a2 | 0;
            }
            if (!((b[a2 + 8 >> 1] & (d2 >>> 16 & 65535)) << 16 >> 16)) {
              a2 = 0;
              return a2 | 0;
            }
            a2 = c[a2 + 92 >> 2] | 0;
            a2 = Eb[c[(c[a2 >> 2] | 0) + 28 >> 2] & 63](a2, f2, e2) | 0;
            return a2 | 0;
          }
          function ir(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0;
            e2 = c[b2 >> 2] | 0;
            if ((e2 | 0) == (c[a2 + 80 >> 2] | 0)) {
              f2 = 1;
              return +f2;
            }
            if (c[e2 + 204 >> 2] & 4 | 0) {
              f2 = 1;
              return +f2;
            }
            if ((+g[a2 + 28 >> 2] - +g[a2 + 12 >> 2]) * +g[b2 + 8 >> 2] + (+g[a2 + 32 >> 2] - +g[a2 + 16 >> 2]) * +g[b2 + 12 >> 2] + (+g[a2 + 36 >> 2] - +g[a2 + 20 >> 2]) * +g[b2 + 16 >> 2] >= -+g[a2 + 84 >> 2]) {
              f2 = 1;
              return +f2;
            }
            c[a2 + 4 >> 2] = c[b2 + 40 >> 2];
            c[a2 + 76 >> 2] = e2;
            if (d2) {
              c[a2 + 44 >> 2] = c[b2 + 8 >> 2];
              c[a2 + 44 + 4 >> 2] = c[b2 + 8 + 4 >> 2];
              c[a2 + 44 + 8 >> 2] = c[b2 + 8 + 8 >> 2];
              c[a2 + 44 + 12 >> 2] = c[b2 + 8 + 12 >> 2];
            } else {
              k2 = +g[b2 + 8 >> 2];
              j2 = +g[b2 + 12 >> 2];
              i2 = +g[b2 + 16 >> 2];
              h2 = k2 * +g[e2 + 20 >> 2] + j2 * +g[e2 + 24 >> 2] + i2 * +g[e2 + 28 >> 2];
              f2 = k2 * +g[e2 + 36 >> 2] + j2 * +g[e2 + 40 >> 2] + i2 * +g[e2 + 44 >> 2];
              g[a2 + 44 >> 2] = +g[e2 + 4 >> 2] * k2 + +g[e2 + 8 >> 2] * j2 + +g[e2 + 12 >> 2] * i2;
              g[a2 + 48 >> 2] = h2;
              g[a2 + 52 >> 2] = f2;
              g[a2 + 56 >> 2] = 0;
            }
            c[a2 + 60 >> 2] = c[b2 + 24 >> 2];
            c[a2 + 60 + 4 >> 2] = c[b2 + 24 + 4 >> 2];
            c[a2 + 60 + 8 >> 2] = c[b2 + 24 + 8 >> 2];
            c[a2 + 60 + 12 >> 2] = c[b2 + 24 + 12 >> 2];
            k2 = +g[b2 + 40 >> 2];
            return +k2;
          }
          function jr(b2) {
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0;
            p2 = i;
            i = i + 16 | 0;
            fs(16195);
            l2 = c[b2 + 204 >> 2] | 0;
            Zb[c[(c[l2 >> 2] | 0) + 8 >> 2] & 127](l2, b2, c[b2 + 24 >> 2] | 0);
            l2 = c[b2 + 308 >> 2] | 0;
            if ((l2 | 0) > 0) {
              k2 = c[b2 + 316 >> 2] | 0;
              m2 = 0;
              do {
                e2 = c[k2 + (m2 << 2) >> 2] | 0;
                d2 = c[e2 + 740 >> 2] | 0;
                e2 = c[e2 + 744 >> 2] | 0;
                if ((d2 | 0 ? e2 | 0 ? (c[d2 + 204 >> 2] & 3 | 0) == 0 : 0 : 0) ? (c[e2 + 204 >> 2] & 3 | 0) == 0 : 0) {
                  h2 = c[d2 + 208 >> 2] | 0;
                  d2 = c[e2 + 208 >> 2] | 0;
                  j2 = c[(c[b2 + 204 >> 2] | 0) + 16 >> 2] | 0;
                  e2 = c[j2 + (h2 << 3) >> 2] | 0;
                  if ((e2 | 0) != (h2 | 0)) {
                    f2 = j2 + (h2 << 3) | 0;
                    do {
                      h2 = j2 + (e2 << 3) | 0;
                      c[f2 >> 2] = c[h2 >> 2];
                      h2 = c[h2 >> 2] | 0;
                      f2 = j2 + (h2 << 3) | 0;
                      e2 = c[f2 >> 2] | 0;
                    } while ((h2 | 0) != (e2 | 0));
                  }
                  e2 = c[j2 + (d2 << 3) >> 2] | 0;
                  if ((e2 | 0) != (d2 | 0)) {
                    f2 = j2 + (d2 << 3) | 0;
                    do {
                      d2 = j2 + (e2 << 3) | 0;
                      c[f2 >> 2] = c[d2 >> 2];
                      d2 = c[d2 >> 2] | 0;
                      f2 = j2 + (d2 << 3) | 0;
                      e2 = c[f2 >> 2] | 0;
                    } while ((d2 | 0) != (e2 | 0));
                  }
                  if ((h2 | 0) != (d2 | 0)) {
                    c[j2 + (h2 << 3) >> 2] = d2;
                    f2 = j2 + (d2 << 3) + 4 | 0;
                    c[f2 >> 2] = (c[f2 >> 2] | 0) + (c[j2 + (h2 << 3) + 4 >> 2] | 0);
                  }
                }
                m2 = m2 + 1 | 0;
              } while ((m2 | 0) != (l2 | 0));
            }
            l2 = c[b2 + 212 >> 2] | 0;
            if ((l2 | 0) > 0) {
              k2 = c[b2 + 220 >> 2] | 0;
              m2 = 0;
              do {
                d2 = c[k2 + (m2 << 2) >> 2] | 0;
                if ((a[d2 + 20 >> 0] | 0 ? (n2 = c[d2 + 28 >> 2] | 0, (c[n2 + 204 >> 2] & 3 | 0) == 0) : 0) ? (o2 = c[d2 + 32 >> 2] | 0, (c[o2 + 204 >> 2] & 3 | 0) == 0) : 0) {
                  f2 = c[n2 + 208 >> 2] | 0;
                  d2 = c[o2 + 208 >> 2] | 0;
                  j2 = c[(c[b2 + 204 >> 2] | 0) + 16 >> 2] | 0;
                  e2 = c[j2 + (f2 << 3) >> 2] | 0;
                  if ((e2 | 0) == (f2 | 0))
                    h2 = f2;
                  else {
                    f2 = j2 + (f2 << 3) | 0;
                    do {
                      h2 = j2 + (e2 << 3) | 0;
                      c[f2 >> 2] = c[h2 >> 2];
                      h2 = c[h2 >> 2] | 0;
                      f2 = j2 + (h2 << 3) | 0;
                      e2 = c[f2 >> 2] | 0;
                    } while ((h2 | 0) != (e2 | 0));
                  }
                  e2 = c[j2 + (d2 << 3) >> 2] | 0;
                  if ((e2 | 0) != (d2 | 0)) {
                    f2 = j2 + (d2 << 3) | 0;
                    do {
                      d2 = j2 + (e2 << 3) | 0;
                      c[f2 >> 2] = c[d2 >> 2];
                      d2 = c[d2 >> 2] | 0;
                      f2 = j2 + (d2 << 3) | 0;
                      e2 = c[f2 >> 2] | 0;
                    } while ((d2 | 0) != (e2 | 0));
                  }
                  if ((h2 | 0) != (d2 | 0)) {
                    c[j2 + (h2 << 3) >> 2] = d2;
                    f2 = j2 + (d2 << 3) + 4 | 0;
                    c[f2 >> 2] = (c[f2 >> 2] | 0) + (c[j2 + (h2 << 3) + 4 >> 2] | 0);
                  }
                }
                m2 = m2 + 1 | 0;
              } while ((m2 | 0) != (l2 | 0));
            }
            d2 = c[b2 + 204 >> 2] | 0;
            tb[c[(c[d2 >> 2] | 0) + 12 >> 2] & 127](d2, b2);
            d2 = c[2006] | 0;
            b2 = (c[d2 + 16 >> 2] | 0) + -1 | 0;
            c[d2 + 16 >> 2] = b2;
            if (b2 | 0) {
              i = p2;
              return;
            }
            do
              if (c[d2 + 4 >> 2] | 0) {
                kb(p2 | 0, 0) | 0;
                b2 = c[5649] | 0;
                g[d2 + 8 >> 2] = +g[d2 + 8 >> 2] + +(((c[p2 + 4 >> 2] | 0) - (c[b2 + 4 >> 2] | 0) + (((c[p2 >> 2] | 0) - (c[b2 >> 2] | 0) | 0) * 1e6 | 0) - (c[d2 + 12 >> 2] | 0) | 0) >>> 0) / 1e3;
                if (!(c[d2 + 16 >> 2] | 0)) {
                  d2 = c[2006] | 0;
                  break;
                } else {
                  i = p2;
                  return;
                }
              }
            while (0);
            c[2006] = c[d2 + 20 >> 2];
            i = p2;
            return;
          }
          function kr(b2, d2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0;
            l2 = i;
            i = i + 16 | 0;
            fs(16222);
            k2 = c[b2 + 212 >> 2] | 0;
            j2 = c[b2 + 180 >> 2] | 0;
            if ((j2 | 0) < (k2 | 0)) {
              if ((c[b2 + 184 >> 2] | 0) < (k2 | 0)) {
                if (!k2) {
                  e2 = 0;
                  f2 = j2;
                } else {
                  c[5637] = (c[5637] | 0) + 1;
                  e2 = qG((k2 << 2 | 3) + 16 | 0) | 0;
                  if (!e2)
                    e2 = 0;
                  else {
                    c[(e2 + 4 + 15 & -16) + -4 >> 2] = e2;
                    e2 = e2 + 4 + 15 & -16;
                  }
                  f2 = c[b2 + 180 >> 2] | 0;
                }
                if ((f2 | 0) > 0) {
                  h2 = 0;
                  do {
                    c[e2 + (h2 << 2) >> 2] = c[(c[b2 + 188 >> 2] | 0) + (h2 << 2) >> 2];
                    h2 = h2 + 1 | 0;
                  } while ((h2 | 0) != (f2 | 0));
                }
                f2 = c[b2 + 188 >> 2] | 0;
                if (f2 | 0) {
                  if (a[b2 + 192 >> 0] | 0) {
                    c[5638] = (c[5638] | 0) + 1;
                    rG(c[f2 + -4 >> 2] | 0);
                  }
                  c[b2 + 188 >> 2] = 0;
                }
                a[b2 + 192 >> 0] = 1;
                c[b2 + 188 >> 2] = e2;
                c[b2 + 184 >> 2] = k2;
                f2 = b2 + 188 | 0;
              } else
                f2 = b2 + 188 | 0;
              e2 = j2;
              do {
                c[(c[f2 >> 2] | 0) + (e2 << 2) >> 2] = 0;
                e2 = e2 + 1 | 0;
              } while ((e2 | 0) != (k2 | 0));
            } else
              f2 = b2 + 188 | 0;
            c[b2 + 180 >> 2] = k2;
            e2 = 0;
            while (1) {
              if ((e2 | 0) >= (vb[c[(c[b2 >> 2] | 0) + 104 >> 2] & 127](b2) | 0))
                break;
              c[(c[f2 >> 2] | 0) + (e2 << 2) >> 2] = c[(c[b2 + 220 >> 2] | 0) + (e2 << 2) >> 2];
              e2 = e2 + 1 | 0;
            }
            e2 = c[b2 + 180 >> 2] | 0;
            if ((e2 | 0) > 1)
              lr(b2 + 176 | 0, 0, e2 + -1 | 0);
            if (!(vb[c[(c[b2 >> 2] | 0) + 104 >> 2] & 127](b2) | 0))
              e2 = 0;
            else
              e2 = c[f2 >> 2] | 0;
            h2 = c[b2 + 196 >> 2] | 0;
            j2 = c[b2 + 180 >> 2] | 0;
            k2 = vb[c[(c[b2 >> 2] | 0) + 20 >> 2] & 127](b2) | 0;
            c[h2 + 4 >> 2] = d2;
            c[h2 + 12 >> 2] = e2;
            c[h2 + 16 >> 2] = j2;
            c[h2 + 20 >> 2] = k2;
            e2 = c[h2 + 32 >> 2] | 0;
            if ((e2 | 0) < 0) {
              if ((c[h2 + 36 >> 2] | 0) < 0) {
                f2 = c[h2 + 40 >> 2] | 0;
                if (f2 | 0) {
                  if (a[h2 + 44 >> 0] | 0) {
                    c[5638] = (c[5638] | 0) + 1;
                    rG(c[f2 + -4 >> 2] | 0);
                  }
                  c[h2 + 40 >> 2] = 0;
                }
                a[h2 + 44 >> 0] = 1;
                c[h2 + 40 >> 2] = 0;
                c[h2 + 36 >> 2] = 0;
              }
              do {
                c[(c[h2 + 40 >> 2] | 0) + (e2 << 2) >> 2] = 0;
                e2 = e2 + 1 | 0;
              } while ((e2 | 0) != 0);
            }
            c[h2 + 32 >> 2] = 0;
            e2 = c[h2 + 52 >> 2] | 0;
            if ((e2 | 0) < 0) {
              if ((c[h2 + 56 >> 2] | 0) < 0) {
                f2 = c[h2 + 60 >> 2] | 0;
                if (f2 | 0) {
                  if (a[h2 + 64 >> 0] | 0) {
                    c[5638] = (c[5638] | 0) + 1;
                    rG(c[f2 + -4 >> 2] | 0);
                  }
                  c[h2 + 60 >> 2] = 0;
                }
                a[h2 + 64 >> 0] = 1;
                c[h2 + 60 >> 2] = 0;
                c[h2 + 56 >> 2] = 0;
              }
              do {
                c[(c[h2 + 60 >> 2] | 0) + (e2 << 2) >> 2] = 0;
                e2 = e2 + 1 | 0;
              } while ((e2 | 0) != 0);
            }
            c[h2 + 52 >> 2] = 0;
            e2 = c[h2 + 72 >> 2] | 0;
            if ((e2 | 0) < 0) {
              if ((c[h2 + 76 >> 2] | 0) < 0) {
                f2 = c[h2 + 80 >> 2] | 0;
                if (f2 | 0) {
                  if (a[h2 + 84 >> 0] | 0) {
                    c[5638] = (c[5638] | 0) + 1;
                    rG(c[f2 + -4 >> 2] | 0);
                  }
                  c[h2 + 80 >> 2] = 0;
                }
                a[h2 + 84 >> 0] = 1;
                c[h2 + 80 >> 2] = 0;
                c[h2 + 76 >> 2] = 0;
              }
              do {
                c[(c[h2 + 80 >> 2] | 0) + (e2 << 2) >> 2] = 0;
                e2 = e2 + 1 | 0;
              } while ((e2 | 0) != 0);
            }
            c[h2 + 72 >> 2] = 0;
            j2 = c[b2 + 200 >> 2] | 0;
            h2 = c[(c[j2 >> 2] | 0) + 8 >> 2] | 0;
            k2 = c[b2 + 8 >> 2] | 0;
            e2 = c[b2 + 24 >> 2] | 0;
            e2 = vb[c[(c[e2 >> 2] | 0) + 36 >> 2] & 127](e2) | 0;
            Zb[h2 & 127](j2, k2, e2);
            Di(c[b2 + 204 >> 2] | 0, c[b2 + 24 >> 2] | 0, b2, c[b2 + 196 >> 2] | 0);
            mr(c[b2 + 196 >> 2] | 0);
            e2 = c[b2 + 200 >> 2] | 0;
            Zb[c[(c[e2 >> 2] | 0) + 16 >> 2] & 127](e2, d2, c[b2 + 72 >> 2] | 0);
            e2 = c[2006] | 0;
            b2 = (c[e2 + 16 >> 2] | 0) + -1 | 0;
            c[e2 + 16 >> 2] = b2;
            if (b2 | 0) {
              i = l2;
              return;
            }
            do
              if (c[e2 + 4 >> 2] | 0) {
                kb(l2 | 0, 0) | 0;
                b2 = c[5649] | 0;
                g[e2 + 8 >> 2] = +g[e2 + 8 >> 2] + +(((c[l2 + 4 >> 2] | 0) - (c[b2 + 4 >> 2] | 0) + (((c[l2 >> 2] | 0) - (c[b2 >> 2] | 0) | 0) * 1e6 | 0) - (c[e2 + 12 >> 2] | 0) | 0) >>> 0) / 1e3;
                if (!(c[e2 + 16 >> 2] | 0)) {
                  e2 = c[2006] | 0;
                  break;
                } else {
                  i = l2;
                  return;
                }
              }
            while (0);
            c[2006] = c[e2 + 20 >> 2];
            i = l2;
            return;
          }
          function lr(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0;
            while (1) {
              k2 = c[a2 + 12 >> 2] | 0;
              l2 = c[k2 + (((b2 + d2 | 0) / 2 | 0) << 2) >> 2] | 0;
              e2 = b2;
              f2 = d2;
              while (1) {
                j2 = c[(c[l2 + 28 >> 2] | 0) + 208 >> 2] | 0;
                if ((j2 | 0) > -1)
                  while (1) {
                    h2 = c[k2 + (e2 << 2) >> 2] | 0;
                    g2 = c[(c[h2 + 28 >> 2] | 0) + 208 >> 2] | 0;
                    if ((g2 | 0) <= -1)
                      g2 = c[(c[h2 + 32 >> 2] | 0) + 208 >> 2] | 0;
                    if ((g2 | 0) < (j2 | 0))
                      e2 = e2 + 1 | 0;
                    else
                      break;
                  }
                else {
                  i2 = c[(c[l2 + 32 >> 2] | 0) + 208 >> 2] | 0;
                  while (1) {
                    h2 = c[k2 + (e2 << 2) >> 2] | 0;
                    g2 = c[(c[h2 + 28 >> 2] | 0) + 208 >> 2] | 0;
                    if ((g2 | 0) <= -1)
                      g2 = c[(c[h2 + 32 >> 2] | 0) + 208 >> 2] | 0;
                    if ((g2 | 0) < (i2 | 0))
                      e2 = e2 + 1 | 0;
                    else
                      break;
                  }
                }
                if ((j2 | 0) > -1)
                  while (1) {
                    h2 = c[k2 + (f2 << 2) >> 2] | 0;
                    g2 = c[(c[h2 + 28 >> 2] | 0) + 208 >> 2] | 0;
                    if ((g2 | 0) <= -1)
                      g2 = c[(c[h2 + 32 >> 2] | 0) + 208 >> 2] | 0;
                    if ((j2 | 0) < (g2 | 0))
                      f2 = f2 + -1 | 0;
                    else
                      break;
                  }
                else {
                  i2 = c[(c[l2 + 32 >> 2] | 0) + 208 >> 2] | 0;
                  while (1) {
                    h2 = c[k2 + (f2 << 2) >> 2] | 0;
                    g2 = c[(c[h2 + 28 >> 2] | 0) + 208 >> 2] | 0;
                    if ((g2 | 0) <= -1)
                      g2 = c[(c[h2 + 32 >> 2] | 0) + 208 >> 2] | 0;
                    if ((i2 | 0) < (g2 | 0))
                      f2 = f2 + -1 | 0;
                    else
                      break;
                  }
                }
                if ((e2 | 0) <= (f2 | 0)) {
                  i2 = k2 + (e2 << 2) | 0;
                  j2 = c[i2 >> 2] | 0;
                  c[i2 >> 2] = c[k2 + (f2 << 2) >> 2];
                  c[(c[a2 + 12 >> 2] | 0) + (f2 << 2) >> 2] = j2;
                  e2 = e2 + 1 | 0;
                  f2 = f2 + -1 | 0;
                }
                if ((e2 | 0) > (f2 | 0))
                  break;
                k2 = c[a2 + 12 >> 2] | 0;
              }
              if ((f2 | 0) > (b2 | 0))
                lr(a2, b2, f2);
              if ((e2 | 0) < (d2 | 0))
                b2 = e2;
              else
                break;
            }
            return;
          }
          function mr(b2) {
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0, i2 = 0, j2 = 0;
            d2 = c[b2 + 32 >> 2] | 0;
            if (!d2)
              f2 = 0;
            else
              f2 = c[b2 + 40 >> 2] | 0;
            i2 = c[b2 + 52 >> 2] | 0;
            if (!i2)
              g2 = 0;
            else
              g2 = c[b2 + 60 >> 2] | 0;
            e2 = c[b2 + 72 >> 2] | 0;
            if (!e2)
              h2 = 0;
            else
              h2 = c[b2 + 80 >> 2] | 0;
            j2 = c[b2 + 8 >> 2] | 0;
            +Qb[c[(c[j2 >> 2] | 0) + 12 >> 2] & 3](j2, f2, d2, g2, i2, h2, e2, c[b2 + 4 >> 2] | 0, c[b2 + 20 >> 2] | 0, c[b2 + 24 >> 2] | 0);
            d2 = c[b2 + 32 >> 2] | 0;
            if ((d2 | 0) < 0) {
              if ((c[b2 + 36 >> 2] | 0) < 0) {
                e2 = c[b2 + 40 >> 2] | 0;
                if (e2 | 0) {
                  if (a[b2 + 44 >> 0] | 0) {
                    c[5638] = (c[5638] | 0) + 1;
                    rG(c[e2 + -4 >> 2] | 0);
                  }
                  c[b2 + 40 >> 2] = 0;
                }
                a[b2 + 44 >> 0] = 1;
                c[b2 + 40 >> 2] = 0;
                c[b2 + 36 >> 2] = 0;
              }
              do {
                c[(c[b2 + 40 >> 2] | 0) + (d2 << 2) >> 2] = 0;
                d2 = d2 + 1 | 0;
              } while ((d2 | 0) != 0);
            }
            c[b2 + 32 >> 2] = 0;
            d2 = c[b2 + 52 >> 2] | 0;
            if ((d2 | 0) < 0) {
              if ((c[b2 + 56 >> 2] | 0) < 0) {
                e2 = c[b2 + 60 >> 2] | 0;
                if (e2 | 0) {
                  if (a[b2 + 64 >> 0] | 0) {
                    c[5638] = (c[5638] | 0) + 1;
                    rG(c[e2 + -4 >> 2] | 0);
                  }
                  c[b2 + 60 >> 2] = 0;
                }
                a[b2 + 64 >> 0] = 1;
                c[b2 + 60 >> 2] = 0;
                c[b2 + 56 >> 2] = 0;
              }
              do {
                c[(c[b2 + 60 >> 2] | 0) + (d2 << 2) >> 2] = 0;
                d2 = d2 + 1 | 0;
              } while ((d2 | 0) != 0);
            }
            c[b2 + 52 >> 2] = 0;
            d2 = c[b2 + 72 >> 2] | 0;
            if ((d2 | 0) >= 0) {
              c[b2 + 72 >> 2] = 0;
              return;
            }
            if ((c[b2 + 76 >> 2] | 0) < 0) {
              e2 = c[b2 + 80 >> 2] | 0;
              if (e2 | 0) {
                if (a[b2 + 84 >> 0] | 0) {
                  c[5638] = (c[5638] | 0) + 1;
                  rG(c[e2 + -4 >> 2] | 0);
                }
                c[b2 + 80 >> 2] = 0;
              }
              a[b2 + 84 >> 0] = 1;
              c[b2 + 80 >> 2] = 0;
              c[b2 + 76 >> 2] = 0;
            }
            do {
              c[(c[b2 + 80 >> 2] | 0) + (d2 << 2) >> 2] = 0;
              d2 = d2 + 1 | 0;
            } while ((d2 | 0) != 0);
            c[b2 + 72 >> 2] = 0;
            return;
          }
          function nr(b2, d2) {
            b2 = b2 | 0;
            d2 = +d2;
            var e2 = 0, f2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0;
            m2 = i;
            i = i + 16 | 0;
            fs(15930);
            e2 = c[b2 + 232 >> 2] | 0;
            if ((e2 | 0) > 0) {
              l2 = (a[23328] | 0) == 0;
              k2 = 0;
              do {
                j2 = c[(c[b2 + 240 >> 2] | 0) + (k2 << 2) >> 2] | 0;
                a:
                  do
                    if (j2) {
                      f2 = c[j2 + 216 >> 2] | 0;
                      b:
                        do
                          switch (f2 | 0) {
                            case 4:
                            case 2: {
                              if ((f2 | 0) == 4)
                                break a;
                              break;
                            }
                            default: {
                              q2 = +g[j2 + 336 >> 2];
                              p2 = +g[j2 + 340 >> 2];
                              o2 = +g[j2 + 344 >> 2];
                              n2 = +g[j2 + 496 >> 2];
                              if (q2 * q2 + p2 * p2 + o2 * o2 < n2 * n2 ? (n2 = +g[j2 + 352 >> 2], o2 = +g[j2 + 356 >> 2], p2 = +g[j2 + 360 >> 2], q2 = +g[j2 + 500 >> 2], n2 * n2 + o2 * o2 + p2 * p2 < q2 * q2) : 0) {
                                g[j2 + 220 >> 2] = +g[j2 + 220 >> 2] + d2;
                                break b;
                              }
                              g[j2 + 220 >> 2] = 0;
                              if ((f2 & -2 | 0) != 4) {
                                c[j2 + 216 >> 2] = 0;
                                f2 = 0;
                              }
                            }
                          }
                        while (0);
                      h2 = f2 & -2;
                      do
                        if (l2) {
                          if ((h2 | 0) != 2 ? !(+g[j2 + 220 >> 2] > 2) : 0)
                            break;
                          if (c[j2 + 204 >> 2] & 3 | 0) {
                            if ((h2 | 0) == 4)
                              break a;
                            c[j2 + 216 >> 2] = 2;
                            break a;
                          }
                          if ((f2 | 0) == 1) {
                            if ((h2 | 0) == 4)
                              break a;
                            c[j2 + 216 >> 2] = 3;
                            break a;
                          } else {
                            if ((f2 | 0) != 2)
                              break a;
                            e2 = (c[j2 + 284 >> 2] | 0) + 2 | 0;
                            c[j2 + 352 >> 2] = 0;
                            c[j2 + 352 + 4 >> 2] = 0;
                            c[j2 + 352 + 8 >> 2] = 0;
                            c[j2 + 352 + 12 >> 2] = 0;
                            c[j2 + 284 >> 2] = e2;
                            c[j2 + 336 >> 2] = 0;
                            c[j2 + 336 + 4 >> 2] = 0;
                            c[j2 + 336 + 8 >> 2] = 0;
                            c[j2 + 336 + 12 >> 2] = 0;
                            e2 = c[b2 + 232 >> 2] | 0;
                            break a;
                          }
                        }
                      while (0);
                      if ((h2 | 0) != 4)
                        c[j2 + 216 >> 2] = 1;
                    }
                  while (0);
                k2 = k2 + 1 | 0;
              } while ((k2 | 0) < (e2 | 0));
            }
            e2 = c[2006] | 0;
            b2 = (c[e2 + 16 >> 2] | 0) + -1 | 0;
            c[e2 + 16 >> 2] = b2;
            if (b2 | 0) {
              i = m2;
              return;
            }
            do
              if (c[e2 + 4 >> 2] | 0) {
                kb(m2 | 0, 0) | 0;
                b2 = c[5649] | 0;
                g[e2 + 8 >> 2] = +g[e2 + 8 >> 2] + +(((c[m2 + 4 >> 2] | 0) - (c[b2 + 4 >> 2] | 0) + (((c[m2 >> 2] | 0) - (c[b2 >> 2] | 0) | 0) * 1e6 | 0) - (c[e2 + 12 >> 2] | 0) | 0) >>> 0) / 1e3;
                if (!(c[e2 + 16 >> 2] | 0)) {
                  e2 = c[2006] | 0;
                  break;
                } else {
                  i = m2;
                  return;
                }
              }
            while (0);
            c[2006] = c[e2 + 20 >> 2];
            i = m2;
            return;
          }
          function or(d2, e2) {
            d2 = d2 | 0;
            e2 = +e2;
            var f2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0, N2 = 0;
            B2 = i;
            i = i + 464 | 0;
            fs(15952);
            f2 = c[d2 + 84 >> 2] | 0;
            if (f2 | 0)
              qb[f2 & 31](d2, e2);
            qb[c[(c[d2 >> 2] | 0) + 140 >> 2] & 31](d2, e2);
            g[d2 + 28 >> 2] = e2;
            c[d2 + 32 >> 2] = 0;
            c[d2 + 48 >> 2] = vb[c[(c[d2 >> 2] | 0) + 20 >> 2] & 127](d2) | 0;
            fs(15981);
            fs(16006);
            f2 = c[d2 + 316 >> 2] | 0;
            if ((c[d2 + 308 >> 2] | 0) > 0) {
              h2 = 0;
              do {
                s2 = c[d2 + 24 >> 2] | 0;
                tb[c[(c[s2 >> 2] | 0) + 16 >> 2] & 127](s2, c[f2 + (h2 << 2) >> 2] | 0);
                h2 = h2 + 1 | 0;
                f2 = c[d2 + 316 >> 2] | 0;
              } while ((h2 | 0) < (c[d2 + 308 >> 2] | 0));
            }
            if (f2 | 0) {
              if (a[d2 + 320 >> 0] | 0) {
                c[5638] = (c[5638] | 0) + 1;
                rG(c[f2 + -4 >> 2] | 0);
              }
              c[d2 + 316 >> 2] = 0;
            }
            a[d2 + 320 >> 0] = 1;
            c[d2 + 316 >> 2] = 0;
            c[d2 + 308 >> 2] = 0;
            c[d2 + 312 >> 2] = 0;
            f2 = c[2006] | 0;
            s2 = (c[f2 + 16 >> 2] | 0) + -1 | 0;
            c[f2 + 16 >> 2] = s2;
            do
              if (!s2) {
                if (c[f2 + 4 >> 2] | 0) {
                  kb(B2 + 368 | 0, 0) | 0;
                  s2 = c[5649] | 0;
                  g[f2 + 8 >> 2] = +g[f2 + 8 >> 2] + +(((c[B2 + 368 + 4 >> 2] | 0) - (c[s2 + 4 >> 2] | 0) + (((c[B2 + 368 >> 2] | 0) - (c[s2 >> 2] | 0) | 0) * 1e6 | 0) - (c[f2 + 12 >> 2] | 0) | 0) >>> 0) / 1e3;
                  if (c[f2 + 16 >> 2] | 0)
                    break;
                  f2 = c[2006] | 0;
                }
                c[2006] = c[f2 + 20 >> 2];
              }
            while (0);
            a:
              do
                if ((c[d2 + 232 >> 2] | 0) > 0) {
                  q2 = B2 + 304 + 48 | 0;
                  r2 = B2 + 368 + 44 | 0;
                  s2 = 0;
                  while (1) {
                    k2 = c[(c[d2 + 240 >> 2] | 0) + (s2 << 2) >> 2] | 0;
                    g[k2 + 248 >> 2] = 1;
                    b:
                      do
                        switch (c[k2 + 216 >> 2] | 0) {
                          case 2:
                          case 5:
                            break;
                          default:
                            if (((c[k2 + 204 >> 2] & 3 | 0) == 0 ? (xn(k2 + 4 | 0, +g[k2 + 336 >> 2], +g[k2 + 340 >> 2], +g[k2 + 344 >> 2], k2 + 352 | 0, e2, B2 + 304 | 0), t2 = +g[q2 >> 2], u2 = t2 - +g[k2 + 52 >> 2], v2 = +g[B2 + 304 + 52 >> 2], w2 = v2 - +g[k2 + 56 >> 2], x2 = +g[B2 + 304 + 56 >> 2], y2 = x2 - +g[k2 + 60 >> 2], a[d2 + 44 >> 0] | 0) : 0) ? (o2 = +g[k2 + 256 >> 2], o2 * o2 != 0 ? o2 * o2 < u2 * u2 + w2 * w2 + y2 * y2 : 0) : 0) {
                              fs(16043);
                              if ((c[(c[k2 + 192 >> 2] | 0) + 4 >> 2] | 0) < 20 ? (c[5475] = (c[5475] | 0) + 1, j2 = c[d2 + 68 >> 2] | 0, j2 = vb[c[(c[j2 >> 2] | 0) + 36 >> 2] & 127](j2) | 0, p2 = c[d2 + 24 >> 2] | 0, g[B2 + 368 + 4 >> 2] = 1, b[B2 + 368 + 8 >> 1] = 1, b[B2 + 368 + 10 >> 1] = -1, c[B2 + 368 >> 2] = 7848, c[B2 + 368 + 12 >> 2] = c[k2 + 52 >> 2], c[B2 + 368 + 12 + 4 >> 2] = c[k2 + 52 + 4 >> 2], c[B2 + 368 + 12 + 8 >> 2] = c[k2 + 52 + 8 >> 2], c[B2 + 368 + 12 + 12 >> 2] = c[k2 + 52 + 12 >> 2], c[B2 + 368 + 28 >> 2] = c[q2 >> 2], c[B2 + 368 + 28 + 4 >> 2] = c[q2 + 4 >> 2], c[B2 + 368 + 28 + 8 >> 2] = c[q2 + 8 >> 2], c[B2 + 368 + 28 + 12 >> 2] = c[q2 + 12 >> 2], c[B2 + 368 + 76 >> 2] = 0, c[B2 + 368 >> 2] = 7872, c[B2 + 368 + 80 >> 2] = k2, c[B2 + 368 + 88 >> 2] = j2, c[B2 + 368 + 92 >> 2] = p2, p2 = c[k2 + 252 >> 2] | 0, c[B2 + 248 + 8 >> 2] = 0, c[B2 + 248 + 12 >> 2] = -1, c[B2 + 248 + 16 >> 2] = 1065353216, c[B2 + 248 + 20 >> 2] = 1065353216, c[B2 + 248 + 24 >> 2] = 1065353216, g[B2 + 248 + 28 >> 2] = 0, c[B2 + 248 >> 2] = 6380, c[B2 + 248 + 4 >> 2] = 8, c[B2 + 248 + 32 >> 2] = p2, c[B2 + 248 + 48 >> 2] = p2, c[B2 + 368 + 84 >> 2] = c[d2 + 56 >> 2], p2 = c[(c[k2 + 188 >> 2] | 0) + 4 >> 2] | 0, b[B2 + 368 + 8 >> 1] = p2, b[B2 + 368 + 10 >> 1] = p2 >>> 16, c[B2 + 184 + 48 >> 2] = c[q2 >> 2], c[B2 + 184 + 48 + 4 >> 2] = c[q2 + 4 >> 2], c[B2 + 184 + 48 + 8 >> 2] = c[q2 + 8 >> 2], c[B2 + 184 + 48 + 12 >> 2] = c[q2 + 12 >> 2], c[B2 + 184 >> 2] = c[k2 + 4 >> 2], c[B2 + 184 + 4 >> 2] = c[k2 + 4 + 4 >> 2], c[B2 + 184 + 8 >> 2] = c[k2 + 4 + 8 >> 2], c[B2 + 184 + 12 >> 2] = c[k2 + 4 + 12 >> 2], c[B2 + 184 + 16 >> 2] = c[k2 + 20 >> 2], c[B2 + 184 + 16 + 4 >> 2] = c[k2 + 20 + 4 >> 2], c[B2 + 184 + 16 + 8 >> 2] = c[k2 + 20 + 8 >> 2], c[B2 + 184 + 16 + 12 >> 2] = c[k2 + 20 + 12 >> 2], c[B2 + 184 + 32 >> 2] = c[k2 + 36 >> 2], c[B2 + 184 + 32 + 4 >> 2] = c[k2 + 36 + 4 >> 2], c[B2 + 184 + 32 + 8 >> 2] = c[k2 + 36 + 8 >> 2], c[B2 + 184 + 32 + 12 >> 2] = c[k2 + 36 + 12 >> 2], Yf(d2, B2 + 248 | 0, k2 + 4 | 0, B2 + 184 | 0, B2 + 368 | 0, 0), z2 = +g[B2 + 368 + 4 >> 2], z2 < 1) : 0) {
                                l2 = z2 * (t2 - +g[k2 + 52 >> 2]);
                                m2 = z2 * (v2 - +g[k2 + 56 >> 2]);
                                n2 = z2 * (x2 - +g[k2 + 60 >> 2]);
                                o2 = -(m2 * +g[B2 + 368 + 48 >> 2]) - l2 * +g[r2 >> 2] - n2 * +g[B2 + 368 + 52 >> 2];
                                p2 = c[d2 + 24 >> 2] | 0;
                                p2 = Eb[c[(c[p2 >> 2] | 0) + 12 >> 2] & 63](p2, k2, c[B2 + 368 + 76 >> 2] | 0) | 0;
                                f2 = c[d2 + 308 >> 2] | 0;
                                if ((f2 | 0) == (c[d2 + 312 >> 2] | 0) ? (A2 = f2 | 0 ? f2 << 1 : 1, (f2 | 0) < (A2 | 0)) : 0) {
                                  if (!A2)
                                    j2 = 0;
                                  else {
                                    c[5637] = (c[5637] | 0) + 1;
                                    f2 = qG((A2 << 2 | 3) + 16 | 0) | 0;
                                    if (!f2)
                                      f2 = 0;
                                    else {
                                      c[(f2 + 4 + 15 & -16) + -4 >> 2] = f2;
                                      f2 = f2 + 4 + 15 & -16;
                                    }
                                    j2 = f2;
                                    f2 = c[d2 + 308 >> 2] | 0;
                                  }
                                  if ((f2 | 0) > 0) {
                                    h2 = 0;
                                    do {
                                      c[j2 + (h2 << 2) >> 2] = c[(c[d2 + 316 >> 2] | 0) + (h2 << 2) >> 2];
                                      h2 = h2 + 1 | 0;
                                    } while ((h2 | 0) != (f2 | 0));
                                  }
                                  h2 = c[d2 + 316 >> 2] | 0;
                                  if (h2) {
                                    if (a[d2 + 320 >> 0] | 0) {
                                      c[5638] = (c[5638] | 0) + 1;
                                      rG(c[h2 + -4 >> 2] | 0);
                                      f2 = c[d2 + 308 >> 2] | 0;
                                    }
                                    c[d2 + 316 >> 2] = 0;
                                  }
                                  a[d2 + 320 >> 0] = 1;
                                  c[d2 + 316 >> 2] = j2;
                                  c[d2 + 312 >> 2] = A2;
                                }
                                c[(c[d2 + 316 >> 2] | 0) + (f2 << 2) >> 2] = p2;
                                c[d2 + 308 >> 2] = f2 + 1;
                                l2 = l2 + +g[k2 + 52 >> 2];
                                m2 = m2 + +g[k2 + 56 >> 2];
                                n2 = n2 + +g[k2 + 60 >> 2];
                                j2 = c[B2 + 368 + 76 >> 2] | 0;
                                N2 = +g[j2 + 4 >> 2];
                                M2 = +g[j2 + 20 >> 2];
                                L2 = +g[j2 + 36 >> 2];
                                K2 = +g[j2 + 8 >> 2];
                                J2 = +g[j2 + 24 >> 2];
                                I2 = +g[j2 + 40 >> 2];
                                H2 = +g[j2 + 12 >> 2];
                                F2 = +g[j2 + 28 >> 2];
                                D2 = +g[j2 + 44 >> 2];
                                G2 = -+g[j2 + 52 >> 2];
                                E2 = -+g[j2 + 56 >> 2];
                                C2 = -+g[j2 + 60 >> 2];
                                c[B2 >> 2] = 0;
                                c[B2 + 4 >> 2] = 0;
                                c[B2 + 8 >> 2] = 0;
                                c[B2 + 12 >> 2] = 0;
                                g[B2 + 16 >> 2] = l2 * N2 + m2 * M2 + n2 * L2 + (N2 * G2 + M2 * E2 + L2 * C2);
                                g[B2 + 20 >> 2] = l2 * K2 + m2 * J2 + n2 * I2 + (K2 * G2 + J2 * E2 + I2 * C2);
                                g[B2 + 24 >> 2] = l2 * H2 + m2 * F2 + n2 * D2 + (H2 * G2 + F2 * E2 + D2 * C2);
                                g[B2 + 28 >> 2] = 0;
                                c[B2 + 64 >> 2] = c[r2 >> 2];
                                c[B2 + 64 + 4 >> 2] = c[r2 + 4 >> 2];
                                c[B2 + 64 + 8 >> 2] = c[r2 + 8 >> 2];
                                c[B2 + 64 + 12 >> 2] = c[r2 + 12 >> 2];
                                g[B2 + 80 >> 2] = o2;
                                g[B2 + 84 >> 2] = 0;
                                g[B2 + 88 >> 2] = 0;
                                g[B2 + 92 >> 2] = 0;
                                c[B2 + 112 >> 2] = 0;
                                a[B2 + 116 >> 0] = 0;
                                c[B2 + 120 >> 2] = 0;
                                c[B2 + 120 + 4 >> 2] = 0;
                                c[B2 + 120 + 8 >> 2] = 0;
                                c[B2 + 120 + 12 >> 2] = 0;
                                c[B2 + 120 + 16 >> 2] = 0;
                                c[B2 + 120 + 20 >> 2] = 0;
                                c[B2 + 120 + 24 >> 2] = 0;
                                c[B2 + 120 + 28 >> 2] = 0;
                                j2 = Wn(p2, B2) | 0;
                                g[p2 + 4 + (j2 * 184 | 0) + 92 >> 2] = 0;
                                o2 = +g[k2 + 224 >> 2] * +g[(c[B2 + 368 + 76 >> 2] | 0) + 224 >> 2];
                                o2 = o2 < -10 ? -10 : o2;
                                g[p2 + 4 + (j2 * 184 | 0) + 84 >> 2] = o2 > 10 ? 10 : o2;
                                c[p2 + 4 + (j2 * 184 | 0) + 48 >> 2] = c[k2 + 52 >> 2];
                                c[p2 + 4 + (j2 * 184 | 0) + 48 + 4 >> 2] = c[k2 + 52 + 4 >> 2];
                                c[p2 + 4 + (j2 * 184 | 0) + 48 + 8 >> 2] = c[k2 + 52 + 8 >> 2];
                                c[p2 + 4 + (j2 * 184 | 0) + 48 + 12 >> 2] = c[k2 + 52 + 12 >> 2];
                                g[p2 + 4 + (j2 * 184 | 0) + 32 >> 2] = l2;
                                g[p2 + 4 + (j2 * 184 | 0) + 36 >> 2] = m2;
                                g[p2 + 4 + (j2 * 184 | 0) + 40 >> 2] = n2;
                                g[p2 + 4 + (j2 * 184 | 0) + 44 >> 2] = 0;
                              }
                              f2 = c[2006] | 0;
                              p2 = (c[f2 + 16 >> 2] | 0) + -1 | 0;
                              c[f2 + 16 >> 2] = p2;
                              if (!p2) {
                                if (c[f2 + 4 >> 2] | 0) {
                                  kb(B2 + 368 | 0, 0) | 0;
                                  p2 = c[5649] | 0;
                                  g[f2 + 8 >> 2] = +g[f2 + 8 >> 2] + +(((c[B2 + 368 + 4 >> 2] | 0) - (c[p2 + 4 >> 2] | 0) + (((c[B2 + 368 >> 2] | 0) - (c[p2 >> 2] | 0) | 0) * 1e6 | 0) - (c[f2 + 12 >> 2] | 0) | 0) >>> 0) / 1e3;
                                  if (c[f2 + 16 >> 2] | 0)
                                    break b;
                                  f2 = c[2006] | 0;
                                }
                                c[2006] = c[f2 + 20 >> 2];
                              }
                            }
                        }
                      while (0);
                    s2 = s2 + 1 | 0;
                    if ((s2 | 0) >= (c[d2 + 232 >> 2] | 0))
                      break a;
                  }
                }
              while (0);
            f2 = c[2006] | 0;
            A2 = (c[f2 + 16 >> 2] | 0) + -1 | 0;
            c[f2 + 16 >> 2] = A2;
            do
              if (!A2) {
                if (c[f2 + 4 >> 2] | 0) {
                  kb(B2 + 368 | 0, 0) | 0;
                  A2 = c[5649] | 0;
                  g[f2 + 8 >> 2] = +g[f2 + 8 >> 2] + +(((c[B2 + 368 + 4 >> 2] | 0) - (c[A2 + 4 >> 2] | 0) + (((c[B2 + 368 >> 2] | 0) - (c[A2 >> 2] | 0) | 0) * 1e6 | 0) - (c[f2 + 12 >> 2] | 0) | 0) >>> 0) / 1e3;
                  if (c[f2 + 16 >> 2] | 0)
                    break;
                  f2 = c[2006] | 0;
                }
                c[2006] = c[f2 + 20 >> 2];
              }
            while (0);
            rb[c[(c[d2 >> 2] | 0) + 44 >> 2] & 255](d2);
            rb[c[(c[d2 >> 2] | 0) + 148 >> 2] & 255](d2);
            g[d2 + 104 >> 2] = e2;
            tb[c[(c[d2 >> 2] | 0) + 152 >> 2] & 127](d2, d2 + 92 | 0);
            qb[c[(c[d2 >> 2] | 0) + 144 >> 2] & 31](d2, e2);
            fs(16070);
            if ((c[d2 + 280 >> 2] | 0) > 0) {
              f2 = 0;
              do {
                A2 = c[(c[d2 + 288 >> 2] | 0) + (f2 << 2) >> 2] | 0;
                $b[c[(c[A2 >> 2] | 0) + 8 >> 2] & 7](A2, d2, e2);
                f2 = f2 + 1 | 0;
              } while ((f2 | 0) < (c[d2 + 280 >> 2] | 0));
            }
            f2 = c[2006] | 0;
            A2 = (c[f2 + 16 >> 2] | 0) + -1 | 0;
            c[f2 + 16 >> 2] = A2;
            do
              if (!A2) {
                if (c[f2 + 4 >> 2] | 0) {
                  kb(B2 + 368 | 0, 0) | 0;
                  A2 = c[5649] | 0;
                  g[f2 + 8 >> 2] = +g[f2 + 8 >> 2] + +(((c[B2 + 368 + 4 >> 2] | 0) - (c[A2 + 4 >> 2] | 0) + (((c[B2 + 368 >> 2] | 0) - (c[A2 >> 2] | 0) | 0) * 1e6 | 0) - (c[f2 + 12 >> 2] | 0) | 0) >>> 0) / 1e3;
                  if (c[f2 + 16 >> 2] | 0)
                    break;
                  f2 = c[2006] | 0;
                }
                c[2006] = c[f2 + 20 >> 2];
              }
            while (0);
            qb[c[(c[d2 >> 2] | 0) + 156 >> 2] & 31](d2, e2);
            f2 = c[d2 + 80 >> 2] | 0;
            if (f2 | 0)
              qb[f2 & 31](d2, e2);
            f2 = c[2006] | 0;
            d2 = (c[f2 + 16 >> 2] | 0) + -1 | 0;
            c[f2 + 16 >> 2] = d2;
            if (d2 | 0) {
              i = B2;
              return;
            }
            do
              if (c[f2 + 4 >> 2] | 0) {
                kb(B2 + 368 | 0, 0) | 0;
                d2 = c[5649] | 0;
                g[f2 + 8 >> 2] = +g[f2 + 8 >> 2] + +(((c[B2 + 368 + 4 >> 2] | 0) - (c[d2 + 4 >> 2] | 0) + (((c[B2 + 368 >> 2] | 0) - (c[d2 >> 2] | 0) | 0) * 1e6 | 0) - (c[f2 + 12 >> 2] | 0) | 0) >>> 0) / 1e3;
                if (!(c[f2 + 16 >> 2] | 0)) {
                  f2 = c[2006] | 0;
                  break;
                } else {
                  i = B2;
                  return;
                }
              }
            while (0);
            c[2006] = c[f2 + 20 >> 2];
            i = B2;
            return;
          }
          function pr(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            var d2 = 0, e2 = 0, f2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0;
            h2 = i;
            i = i + 32 | 0;
            d2 = c[a2 + 8 >> 2] | 0;
            if ((d2 | 0) <= 0) {
              i = h2;
              return;
            }
            f2 = 0;
            do {
              e2 = c[(c[a2 + 16 >> 2] | 0) + (f2 << 2) >> 2] | 0;
              if ((!((e2 | 0) == 0 ? 1 : (c[e2 + 236 >> 2] & 2 | 0) == 0) ? (c[e2 + 216 >> 2] | 0) != 2 : 0) ? !(b2 == 0 ? 1 : (c[e2 + 204 >> 2] & 2 | 0) == 0) : 0) {
                d2 = c[e2 + 504 >> 2] | 0;
                if (!d2)
                  d2 = e2 + 4 | 0;
                else {
                  tb[c[(c[d2 >> 2] | 0) + 8 >> 2] & 127](d2, e2 + 4 | 0);
                  d2 = e2 + 4 | 0;
                }
                k2 = 1 / b2 * (+g[e2 + 56 >> 2] - +g[e2 + 120 >> 2]);
                l2 = 1 / b2 * (+g[e2 + 60 >> 2] - +g[e2 + 124 >> 2]);
                g[e2 + 336 >> 2] = 1 / b2 * (+g[e2 + 52 >> 2] - +g[e2 + 116 >> 2]);
                g[e2 + 340 >> 2] = k2;
                g[e2 + 344 >> 2] = l2;
                g[e2 + 348 >> 2] = 0;
                Zf(e2 + 68 | 0, d2, h2 + 8 | 0, h2);
                l2 = +g[h2 >> 2];
                k2 = 1 / b2 * (l2 * +g[h2 + 8 + 4 >> 2]);
                j2 = 1 / b2 * (l2 * +g[h2 + 8 + 8 >> 2]);
                g[e2 + 352 >> 2] = 1 / b2 * (+g[h2 + 8 >> 2] * l2);
                g[e2 + 356 >> 2] = k2;
                g[e2 + 360 >> 2] = j2;
                g[e2 + 364 >> 2] = 0;
                c[e2 + 132 >> 2] = c[e2 + 336 >> 2];
                c[e2 + 132 + 4 >> 2] = c[e2 + 336 + 4 >> 2];
                c[e2 + 132 + 8 >> 2] = c[e2 + 336 + 8 >> 2];
                c[e2 + 132 + 12 >> 2] = c[e2 + 336 + 12 >> 2];
                c[e2 + 148 >> 2] = c[e2 + 352 >> 2];
                c[e2 + 148 + 4 >> 2] = c[e2 + 352 + 4 >> 2];
                c[e2 + 148 + 8 >> 2] = c[e2 + 352 + 8 >> 2];
                c[e2 + 148 + 12 >> 2] = c[e2 + 352 + 12 >> 2];
                c[e2 + 68 >> 2] = c[d2 >> 2];
                c[e2 + 68 + 4 >> 2] = c[d2 + 4 >> 2];
                c[e2 + 68 + 8 >> 2] = c[d2 + 8 >> 2];
                c[e2 + 68 + 12 >> 2] = c[d2 + 12 >> 2];
                c[e2 + 84 >> 2] = c[e2 + 20 >> 2];
                c[e2 + 84 + 4 >> 2] = c[e2 + 20 + 4 >> 2];
                c[e2 + 84 + 8 >> 2] = c[e2 + 20 + 8 >> 2];
                c[e2 + 84 + 12 >> 2] = c[e2 + 20 + 12 >> 2];
                c[e2 + 100 >> 2] = c[e2 + 36 >> 2];
                c[e2 + 100 + 4 >> 2] = c[e2 + 36 + 4 >> 2];
                c[e2 + 100 + 8 >> 2] = c[e2 + 36 + 8 >> 2];
                c[e2 + 100 + 12 >> 2] = c[e2 + 36 + 12 >> 2];
                c[e2 + 116 >> 2] = c[e2 + 52 >> 2];
                c[e2 + 116 + 4 >> 2] = c[e2 + 52 + 4 >> 2];
                c[e2 + 116 + 8 >> 2] = c[e2 + 52 + 8 >> 2];
                c[e2 + 116 + 12 >> 2] = c[e2 + 52 + 12 >> 2];
                d2 = c[a2 + 8 >> 2] | 0;
              }
              f2 = f2 + 1 | 0;
            } while ((f2 | 0) < (d2 | 0));
            i = h2;
            return;
          }
          function qr(b2, d2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, h2 = 0, j2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0, N2 = 0, O2 = 0, P2 = 0, S2 = 0, T2 = 0, U2 = 0, V2 = 0, W2 = 0, X2 = 0, Y2 = 0;
            L2 = i;
            i = i + 384 | 0;
            C2 = vb[c[(c[b2 >> 2] | 0) + 20 >> 2] & 127](b2) | 0;
            C2 = (vb[c[(c[C2 >> 2] | 0) + 56 >> 2] & 127](C2) | 0) >>> 11;
            J2 = vb[c[(c[b2 >> 2] | 0) + 20 >> 2] & 127](b2) | 0;
            J2 = (vb[c[(c[J2 >> 2] | 0) + 56 >> 2] & 127](J2) | 0) >>> 12;
            K2 = +g[d2 + 40 >> 2];
            if (K2 <= 0) {
              i = L2;
              return;
            }
            switch (c[d2 + 4 >> 2] | 0) {
              case 3: {
                c[L2 + 320 >> 2] = 1065353216;
                c[L2 + 320 + 4 >> 2] = 0;
                c[L2 + 320 + 4 + 4 >> 2] = 0;
                c[L2 + 320 + 4 + 8 >> 2] = 0;
                c[L2 + 320 + 4 + 12 >> 2] = 0;
                c[L2 + 320 + 20 >> 2] = 1065353216;
                c[L2 + 320 + 24 >> 2] = 0;
                c[L2 + 320 + 24 + 4 >> 2] = 0;
                c[L2 + 320 + 24 + 8 >> 2] = 0;
                c[L2 + 320 + 24 + 12 >> 2] = 0;
                c[L2 + 320 + 40 >> 2] = 1065353216;
                J2 = L2 + 320 + 44 | 0;
                c[J2 >> 2] = 0;
                c[J2 + 4 >> 2] = 0;
                c[J2 + 8 >> 2] = 0;
                c[J2 + 12 >> 2] = 0;
                c[J2 + 16 >> 2] = 0;
                B2 = +g[d2 + 300 >> 2];
                A2 = +g[d2 + 304 >> 2];
                z2 = +g[d2 + 308 >> 2];
                J2 = c[d2 + 28 >> 2] | 0;
                y2 = B2 * +g[J2 + 20 >> 2] + A2 * +g[J2 + 24 >> 2] + z2 * +g[J2 + 28 >> 2] + +g[J2 + 56 >> 2];
                x2 = B2 * +g[J2 + 36 >> 2] + A2 * +g[J2 + 40 >> 2] + z2 * +g[J2 + 44 >> 2] + +g[J2 + 60 >> 2];
                g[L2 + 320 + 48 >> 2] = B2 * +g[J2 + 4 >> 2] + A2 * +g[J2 + 8 >> 2] + z2 * +g[J2 + 12 >> 2] + +g[J2 + 52 >> 2];
                g[L2 + 320 + 52 >> 2] = y2;
                g[L2 + 320 + 56 >> 2] = x2;
                g[L2 + 320 + 60 >> 2] = 0;
                J2 = vb[c[(c[b2 >> 2] | 0) + 20 >> 2] & 127](b2) | 0;
                $b[c[(c[J2 >> 2] | 0) + 64 >> 2] & 7](J2, L2 + 320 | 0, K2);
                x2 = +g[d2 + 316 >> 2];
                y2 = +g[d2 + 320 >> 2];
                z2 = +g[d2 + 324 >> 2];
                d2 = c[d2 + 32 >> 2] | 0;
                A2 = x2 * +g[d2 + 20 >> 2] + y2 * +g[d2 + 24 >> 2] + z2 * +g[d2 + 28 >> 2] + +g[d2 + 56 >> 2];
                B2 = x2 * +g[d2 + 36 >> 2] + y2 * +g[d2 + 40 >> 2] + z2 * +g[d2 + 44 >> 2] + +g[d2 + 60 >> 2];
                g[L2 + 320 + 48 >> 2] = x2 * +g[d2 + 4 >> 2] + y2 * +g[d2 + 8 >> 2] + z2 * +g[d2 + 12 >> 2] + +g[d2 + 52 >> 2];
                g[L2 + 320 + 52 >> 2] = A2;
                g[L2 + 320 + 56 >> 2] = B2;
                g[L2 + 320 + 60 >> 2] = 0;
                if (C2 & 1 | 0) {
                  b2 = vb[c[(c[b2 >> 2] | 0) + 20 >> 2] & 127](b2) | 0;
                  $b[c[(c[b2 >> 2] | 0) + 64 >> 2] & 7](b2, L2 + 320 | 0, K2);
                }
                i = L2;
                return;
              }
              case 4: {
                I2 = c[d2 + 28 >> 2] | 0;
                M2 = +g[d2 + 552 >> 2];
                U2 = +g[I2 + 4 >> 2];
                e2 = +g[d2 + 552 + 16 >> 2];
                T2 = +g[I2 + 8 >> 2];
                f2 = +g[d2 + 552 + 32 >> 2];
                S2 = +g[I2 + 12 >> 2];
                m2 = +g[d2 + 552 + 4 >> 2];
                n2 = +g[d2 + 552 + 20 >> 2];
                s2 = +g[d2 + 552 + 36 >> 2];
                t2 = +g[d2 + 552 + 8 >> 2];
                v2 = +g[d2 + 552 + 24 >> 2];
                x2 = +g[d2 + 552 + 40 >> 2];
                P2 = +g[I2 + 20 >> 2];
                O2 = +g[I2 + 24 >> 2];
                N2 = +g[I2 + 28 >> 2];
                u2 = +g[I2 + 36 >> 2];
                w2 = +g[I2 + 40 >> 2];
                y2 = +g[I2 + 44 >> 2];
                W2 = +g[d2 + 552 + 48 >> 2];
                V2 = +g[d2 + 552 + 52 >> 2];
                B2 = +g[d2 + 552 + 56 >> 2];
                z2 = +g[I2 + 52 >> 2] + (U2 * W2 + T2 * V2 + S2 * B2);
                A2 = P2 * W2 + O2 * V2 + N2 * B2 + +g[I2 + 56 >> 2];
                B2 = u2 * W2 + w2 * V2 + y2 * B2 + +g[I2 + 60 >> 2];
                g[L2 + 320 >> 2] = M2 * U2 + e2 * T2 + f2 * S2;
                g[L2 + 320 + 4 >> 2] = U2 * m2 + T2 * n2 + S2 * s2;
                g[L2 + 320 + 8 >> 2] = U2 * t2 + T2 * v2 + S2 * x2;
                g[L2 + 320 + 12 >> 2] = 0;
                g[L2 + 320 + 16 >> 2] = M2 * P2 + e2 * O2 + f2 * N2;
                g[L2 + 320 + 20 >> 2] = m2 * P2 + n2 * O2 + s2 * N2;
                g[L2 + 320 + 24 >> 2] = t2 * P2 + v2 * O2 + x2 * N2;
                g[L2 + 320 + 28 >> 2] = 0;
                g[L2 + 320 + 32 >> 2] = M2 * u2 + e2 * w2 + f2 * y2;
                g[L2 + 320 + 36 >> 2] = m2 * u2 + n2 * w2 + s2 * y2;
                g[L2 + 320 + 40 >> 2] = t2 * u2 + v2 * w2 + x2 * y2;
                g[L2 + 320 + 44 >> 2] = 0;
                g[L2 + 320 + 48 >> 2] = z2;
                g[L2 + 320 + 52 >> 2] = A2;
                g[L2 + 320 + 56 >> 2] = B2;
                g[L2 + 320 + 60 >> 2] = 0;
                if (!(C2 & 1)) {
                  I2 = c[d2 + 32 >> 2] | 0;
                  w2 = +g[d2 + 616 >> 2];
                  m2 = +g[I2 + 4 >> 2];
                  x2 = +g[d2 + 616 + 16 >> 2];
                  n2 = +g[I2 + 8 >> 2];
                  y2 = +g[d2 + 616 + 32 >> 2];
                  s2 = +g[I2 + 12 >> 2];
                  z2 = +g[d2 + 616 + 4 >> 2];
                  A2 = +g[d2 + 616 + 20 >> 2];
                  B2 = +g[d2 + 616 + 36 >> 2];
                  M2 = +g[d2 + 616 + 8 >> 2];
                  O2 = +g[d2 + 616 + 24 >> 2];
                  S2 = +g[d2 + 616 + 40 >> 2];
                  t2 = +g[I2 + 20 >> 2];
                  u2 = +g[I2 + 24 >> 2];
                  v2 = +g[I2 + 28 >> 2];
                  N2 = +g[I2 + 36 >> 2];
                  P2 = +g[I2 + 40 >> 2];
                  T2 = +g[I2 + 44 >> 2];
                  e2 = +g[d2 + 616 + 48 >> 2];
                  f2 = +g[d2 + 616 + 52 >> 2];
                  W2 = +g[d2 + 616 + 56 >> 2];
                  U2 = +g[I2 + 52 >> 2] + (m2 * e2 + n2 * f2 + s2 * W2);
                  V2 = t2 * e2 + u2 * f2 + v2 * W2 + +g[I2 + 56 >> 2];
                  W2 = N2 * e2 + P2 * f2 + T2 * W2 + +g[I2 + 60 >> 2];
                  g[L2 + 320 >> 2] = w2 * m2 + x2 * n2 + y2 * s2;
                  g[L2 + 320 + 4 >> 2] = m2 * z2 + n2 * A2 + s2 * B2;
                  g[L2 + 320 + 8 >> 2] = m2 * M2 + n2 * O2 + s2 * S2;
                  g[L2 + 320 + 12 >> 2] = 0;
                  g[L2 + 320 + 16 >> 2] = w2 * t2 + x2 * u2 + y2 * v2;
                  g[L2 + 320 + 20 >> 2] = z2 * t2 + A2 * u2 + B2 * v2;
                  g[L2 + 320 + 24 >> 2] = M2 * t2 + O2 * u2 + S2 * v2;
                  g[L2 + 320 + 28 >> 2] = 0;
                  g[L2 + 320 + 32 >> 2] = w2 * N2 + x2 * P2 + y2 * T2;
                  g[L2 + 320 + 36 >> 2] = z2 * N2 + A2 * P2 + B2 * T2;
                  g[L2 + 320 + 40 >> 2] = M2 * N2 + O2 * P2 + S2 * T2;
                  g[L2 + 320 + 44 >> 2] = 0;
                  g[L2 + 320 + 48 >> 2] = U2;
                  g[L2 + 320 + 52 >> 2] = V2;
                  g[L2 + 320 + 56 >> 2] = W2;
                  g[L2 + 320 + 60 >> 2] = 0;
                } else {
                  I2 = vb[c[(c[b2 >> 2] | 0) + 20 >> 2] & 127](b2) | 0;
                  $b[c[(c[I2 >> 2] | 0) + 64 >> 2] & 7](I2, L2 + 320 | 0, K2);
                  I2 = c[d2 + 32 >> 2] | 0;
                  w2 = +g[d2 + 616 >> 2];
                  m2 = +g[I2 + 4 >> 2];
                  x2 = +g[d2 + 616 + 16 >> 2];
                  n2 = +g[I2 + 8 >> 2];
                  y2 = +g[d2 + 616 + 32 >> 2];
                  s2 = +g[I2 + 12 >> 2];
                  z2 = +g[d2 + 616 + 4 >> 2];
                  A2 = +g[d2 + 616 + 20 >> 2];
                  B2 = +g[d2 + 616 + 36 >> 2];
                  M2 = +g[d2 + 616 + 8 >> 2];
                  O2 = +g[d2 + 616 + 24 >> 2];
                  S2 = +g[d2 + 616 + 40 >> 2];
                  t2 = +g[I2 + 20 >> 2];
                  u2 = +g[I2 + 24 >> 2];
                  v2 = +g[I2 + 28 >> 2];
                  N2 = +g[I2 + 36 >> 2];
                  P2 = +g[I2 + 40 >> 2];
                  T2 = +g[I2 + 44 >> 2];
                  e2 = +g[d2 + 616 + 48 >> 2];
                  f2 = +g[d2 + 616 + 52 >> 2];
                  W2 = +g[d2 + 616 + 56 >> 2];
                  U2 = +g[I2 + 52 >> 2] + (m2 * e2 + n2 * f2 + s2 * W2);
                  V2 = t2 * e2 + u2 * f2 + v2 * W2 + +g[I2 + 56 >> 2];
                  W2 = N2 * e2 + P2 * f2 + T2 * W2 + +g[I2 + 60 >> 2];
                  g[L2 + 320 >> 2] = w2 * m2 + x2 * n2 + y2 * s2;
                  g[L2 + 320 + 4 >> 2] = m2 * z2 + n2 * A2 + s2 * B2;
                  g[L2 + 320 + 8 >> 2] = m2 * M2 + n2 * O2 + s2 * S2;
                  g[L2 + 320 + 12 >> 2] = 0;
                  g[L2 + 320 + 16 >> 2] = w2 * t2 + x2 * u2 + y2 * v2;
                  g[L2 + 320 + 20 >> 2] = z2 * t2 + A2 * u2 + B2 * v2;
                  g[L2 + 320 + 24 >> 2] = M2 * t2 + O2 * u2 + S2 * v2;
                  g[L2 + 320 + 28 >> 2] = 0;
                  g[L2 + 320 + 32 >> 2] = w2 * N2 + x2 * P2 + y2 * T2;
                  g[L2 + 320 + 36 >> 2] = z2 * N2 + A2 * P2 + B2 * T2;
                  g[L2 + 320 + 40 >> 2] = M2 * N2 + O2 * P2 + S2 * T2;
                  g[L2 + 320 + 44 >> 2] = 0;
                  g[L2 + 320 + 48 >> 2] = U2;
                  g[L2 + 320 + 52 >> 2] = V2;
                  g[L2 + 320 + 56 >> 2] = W2;
                  g[L2 + 320 + 60 >> 2] = 0;
                  I2 = vb[c[(c[b2 >> 2] | 0) + 20 >> 2] & 127](b2) | 0;
                  $b[c[(c[I2 >> 2] | 0) + 64 >> 2] & 7](I2, L2 + 320 | 0, K2);
                }
                m2 = +g[d2 + 688 >> 2];
                n2 = +g[d2 + 688 + 4 >> 2];
                e2 = +oG(m2 - n2);
                if (!(e2 < -3.1415927410125732))
                  if (e2 > 3.1415927410125732)
                    f2 = e2 + -6.2831854820251465;
                  else
                    f2 = e2;
                else
                  f2 = e2 + 6.2831854820251465;
                e2 = +oG(m2 + n2);
                if (!(e2 < -3.1415927410125732)) {
                  if (e2 > 3.1415927410125732)
                    e2 = e2 + -6.2831854820251465;
                } else
                  e2 = e2 + 6.2831854820251465;
                if (!(f2 == e2) ? J2 & 1 | 0 : 0) {
                  c[L2 + 304 >> 2] = c[L2 + 320 + 8 >> 2];
                  c[L2 + 304 + 4 >> 2] = c[L2 + 320 + 24 >> 2];
                  c[L2 + 304 + 8 >> 2] = c[L2 + 320 + 40 >> 2];
                  g[L2 + 304 + 12 >> 2] = 0;
                  c[L2 + 272 >> 2] = c[L2 + 320 >> 2];
                  c[L2 + 272 + 4 >> 2] = c[L2 + 320 + 16 >> 2];
                  c[L2 + 272 + 8 >> 2] = c[L2 + 320 + 32 >> 2];
                  g[L2 + 272 + 12 >> 2] = 0;
                  b2 = vb[c[(c[b2 >> 2] | 0) + 20 >> 2] & 127](b2) | 0;
                  d2 = c[(c[b2 >> 2] | 0) + 68 >> 2] | 0;
                  c[L2 + 288 >> 2] = 0;
                  c[L2 + 288 + 4 >> 2] = 0;
                  c[L2 + 288 + 8 >> 2] = 0;
                  c[L2 + 288 + 12 >> 2] = 0;
                  Cb[d2 & 0](b2, L2 + 320 + 48 | 0, L2 + 304 | 0, L2 + 272 | 0, K2, K2, n2 > 0 ? f2 : 0, n2 > 0 ? e2 : 6.2831854820251465, L2 + 288 | 0, n2 > 0, 10);
                }
                i = L2;
                return;
              }
              case 5: {
                l2 = c[d2 + 28 >> 2] | 0;
                w2 = +g[d2 + 300 >> 2];
                m2 = +g[l2 + 4 >> 2];
                x2 = +g[d2 + 300 + 16 >> 2];
                n2 = +g[l2 + 8 >> 2];
                y2 = +g[d2 + 300 + 32 >> 2];
                s2 = +g[l2 + 12 >> 2];
                z2 = +g[d2 + 300 + 4 >> 2];
                A2 = +g[d2 + 300 + 20 >> 2];
                B2 = +g[d2 + 300 + 36 >> 2];
                M2 = +g[d2 + 300 + 8 >> 2];
                O2 = +g[d2 + 300 + 24 >> 2];
                S2 = +g[d2 + 300 + 40 >> 2];
                t2 = +g[l2 + 20 >> 2];
                u2 = +g[l2 + 24 >> 2];
                v2 = +g[l2 + 28 >> 2];
                N2 = +g[l2 + 36 >> 2];
                P2 = +g[l2 + 40 >> 2];
                T2 = +g[l2 + 44 >> 2];
                e2 = +g[d2 + 300 + 48 >> 2];
                f2 = +g[d2 + 300 + 52 >> 2];
                W2 = +g[d2 + 300 + 56 >> 2];
                U2 = +g[l2 + 52 >> 2] + (m2 * e2 + n2 * f2 + s2 * W2);
                V2 = t2 * e2 + u2 * f2 + v2 * W2 + +g[l2 + 56 >> 2];
                W2 = N2 * e2 + P2 * f2 + T2 * W2 + +g[l2 + 60 >> 2];
                g[L2 + 320 >> 2] = w2 * m2 + x2 * n2 + y2 * s2;
                l2 = L2 + 320 + 4 | 0;
                g[l2 >> 2] = m2 * z2 + n2 * A2 + s2 * B2;
                o2 = L2 + 320 + 8 | 0;
                g[o2 >> 2] = m2 * M2 + n2 * O2 + s2 * S2;
                g[L2 + 320 + 12 >> 2] = 0;
                p2 = L2 + 320 + 16 | 0;
                g[p2 >> 2] = w2 * t2 + x2 * u2 + y2 * v2;
                q2 = L2 + 320 + 20 | 0;
                g[q2 >> 2] = z2 * t2 + A2 * u2 + B2 * v2;
                r2 = L2 + 320 + 24 | 0;
                g[r2 >> 2] = M2 * t2 + O2 * u2 + S2 * v2;
                g[L2 + 320 + 28 >> 2] = 0;
                D2 = L2 + 320 + 32 | 0;
                g[D2 >> 2] = w2 * N2 + x2 * P2 + y2 * T2;
                E2 = L2 + 320 + 36 | 0;
                g[E2 >> 2] = z2 * N2 + A2 * P2 + B2 * T2;
                F2 = L2 + 320 + 40 | 0;
                g[F2 >> 2] = M2 * N2 + O2 * P2 + S2 * T2;
                g[L2 + 320 + 44 >> 2] = 0;
                G2 = L2 + 320 + 48 | 0;
                g[G2 >> 2] = U2;
                H2 = L2 + 320 + 52 | 0;
                g[H2 >> 2] = V2;
                I2 = L2 + 320 + 56 | 0;
                g[I2 >> 2] = W2;
                g[L2 + 320 + 60 >> 2] = 0;
                if (!(C2 & 1)) {
                  C2 = c[d2 + 32 >> 2] | 0;
                  w2 = +g[d2 + 364 >> 2];
                  m2 = +g[C2 + 4 >> 2];
                  x2 = +g[d2 + 364 + 16 >> 2];
                  n2 = +g[C2 + 8 >> 2];
                  y2 = +g[d2 + 364 + 32 >> 2];
                  s2 = +g[C2 + 12 >> 2];
                  z2 = +g[d2 + 364 + 4 >> 2];
                  A2 = +g[d2 + 364 + 20 >> 2];
                  B2 = +g[d2 + 364 + 36 >> 2];
                  M2 = +g[d2 + 364 + 8 >> 2];
                  O2 = +g[d2 + 364 + 24 >> 2];
                  S2 = +g[d2 + 364 + 40 >> 2];
                  t2 = +g[C2 + 20 >> 2];
                  u2 = +g[C2 + 24 >> 2];
                  v2 = +g[C2 + 28 >> 2];
                  N2 = +g[C2 + 36 >> 2];
                  P2 = +g[C2 + 40 >> 2];
                  T2 = +g[C2 + 44 >> 2];
                  e2 = +g[d2 + 364 + 48 >> 2];
                  f2 = +g[d2 + 364 + 52 >> 2];
                  W2 = +g[d2 + 364 + 56 >> 2];
                  U2 = +g[C2 + 52 >> 2] + (m2 * e2 + n2 * f2 + s2 * W2);
                  V2 = t2 * e2 + u2 * f2 + v2 * W2 + +g[C2 + 56 >> 2];
                  W2 = N2 * e2 + P2 * f2 + T2 * W2 + +g[C2 + 60 >> 2];
                  g[L2 + 320 >> 2] = w2 * m2 + x2 * n2 + y2 * s2;
                  g[l2 >> 2] = m2 * z2 + n2 * A2 + s2 * B2;
                  g[o2 >> 2] = m2 * M2 + n2 * O2 + s2 * S2;
                  g[L2 + 320 + 12 >> 2] = 0;
                  g[p2 >> 2] = w2 * t2 + x2 * u2 + y2 * v2;
                  g[q2 >> 2] = z2 * t2 + A2 * u2 + B2 * v2;
                  g[r2 >> 2] = M2 * t2 + O2 * u2 + S2 * v2;
                  g[L2 + 320 + 28 >> 2] = 0;
                  g[D2 >> 2] = w2 * N2 + x2 * P2 + y2 * T2;
                  g[E2 >> 2] = z2 * N2 + A2 * P2 + B2 * T2;
                  g[F2 >> 2] = M2 * N2 + O2 * P2 + S2 * T2;
                  g[L2 + 320 + 44 >> 2] = 0;
                  g[G2 >> 2] = U2;
                  g[H2 >> 2] = V2;
                  g[I2 >> 2] = W2;
                  g[L2 + 320 + 60 >> 2] = 0;
                } else {
                  C2 = vb[c[(c[b2 >> 2] | 0) + 20 >> 2] & 127](b2) | 0;
                  $b[c[(c[C2 >> 2] | 0) + 64 >> 2] & 7](C2, L2 + 320 | 0, K2);
                  C2 = c[d2 + 32 >> 2] | 0;
                  w2 = +g[d2 + 364 >> 2];
                  m2 = +g[C2 + 4 >> 2];
                  x2 = +g[d2 + 364 + 16 >> 2];
                  n2 = +g[C2 + 8 >> 2];
                  y2 = +g[d2 + 364 + 32 >> 2];
                  s2 = +g[C2 + 12 >> 2];
                  z2 = +g[d2 + 364 + 4 >> 2];
                  A2 = +g[d2 + 364 + 20 >> 2];
                  B2 = +g[d2 + 364 + 36 >> 2];
                  M2 = +g[d2 + 364 + 8 >> 2];
                  O2 = +g[d2 + 364 + 24 >> 2];
                  S2 = +g[d2 + 364 + 40 >> 2];
                  t2 = +g[C2 + 20 >> 2];
                  u2 = +g[C2 + 24 >> 2];
                  v2 = +g[C2 + 28 >> 2];
                  N2 = +g[C2 + 36 >> 2];
                  P2 = +g[C2 + 40 >> 2];
                  T2 = +g[C2 + 44 >> 2];
                  e2 = +g[d2 + 364 + 48 >> 2];
                  f2 = +g[d2 + 364 + 52 >> 2];
                  W2 = +g[d2 + 364 + 56 >> 2];
                  U2 = +g[C2 + 52 >> 2] + (m2 * e2 + n2 * f2 + s2 * W2);
                  V2 = t2 * e2 + u2 * f2 + v2 * W2 + +g[C2 + 56 >> 2];
                  W2 = N2 * e2 + P2 * f2 + T2 * W2 + +g[C2 + 60 >> 2];
                  g[L2 + 320 >> 2] = w2 * m2 + x2 * n2 + y2 * s2;
                  g[l2 >> 2] = m2 * z2 + n2 * A2 + s2 * B2;
                  g[o2 >> 2] = m2 * M2 + n2 * O2 + s2 * S2;
                  g[L2 + 320 + 12 >> 2] = 0;
                  g[p2 >> 2] = w2 * t2 + x2 * u2 + y2 * v2;
                  g[q2 >> 2] = z2 * t2 + A2 * u2 + B2 * v2;
                  g[r2 >> 2] = M2 * t2 + O2 * u2 + S2 * v2;
                  g[L2 + 320 + 28 >> 2] = 0;
                  g[D2 >> 2] = w2 * N2 + x2 * P2 + y2 * T2;
                  g[E2 >> 2] = z2 * N2 + A2 * P2 + B2 * T2;
                  g[F2 >> 2] = M2 * N2 + O2 * P2 + S2 * T2;
                  g[L2 + 320 + 44 >> 2] = 0;
                  g[G2 >> 2] = U2;
                  g[H2 >> 2] = V2;
                  g[I2 >> 2] = W2;
                  g[L2 + 320 + 60 >> 2] = 0;
                  C2 = vb[c[(c[b2 >> 2] | 0) + 20 >> 2] & 127](b2) | 0;
                  $b[c[(c[C2 >> 2] | 0) + 64 >> 2] & 7](C2, L2 + 320 | 0, K2);
                }
                if (J2 & 1 | 0) {
                  So(L2 + 304 | 0, d2, 6.0868353843688965, K2);
                  S2 = +g[L2 + 304 >> 2];
                  T2 = +g[L2 + 304 + 4 >> 2];
                  U2 = +g[L2 + 304 + 8 >> 2];
                  V2 = S2 * +g[p2 >> 2] + T2 * +g[q2 >> 2] + U2 * +g[r2 >> 2] + +g[H2 >> 2];
                  W2 = S2 * +g[D2 >> 2] + T2 * +g[E2 >> 2] + U2 * +g[F2 >> 2] + +g[I2 >> 2];
                  g[L2 + 304 >> 2] = S2 * +g[L2 + 320 >> 2] + T2 * +g[l2 >> 2] + U2 * +g[o2 >> 2] + +g[G2 >> 2];
                  g[L2 + 304 + 4 >> 2] = V2;
                  g[L2 + 304 + 8 >> 2] = W2;
                  g[L2 + 304 + 12 >> 2] = 0;
                  j2 = L2 + 320 + 48 | 0;
                  h2 = 0;
                  do {
                    So(L2 + 272 | 0, d2, +(h2 | 0) * 6.283185005187988 * 0.03125, K2);
                    S2 = +g[L2 + 272 >> 2];
                    T2 = +g[L2 + 272 + 4 >> 2];
                    U2 = +g[L2 + 272 + 8 >> 2];
                    V2 = S2 * +g[p2 >> 2] + T2 * +g[q2 >> 2] + U2 * +g[r2 >> 2] + +g[H2 >> 2];
                    W2 = S2 * +g[D2 >> 2] + T2 * +g[E2 >> 2] + U2 * +g[F2 >> 2] + +g[I2 >> 2];
                    g[L2 + 272 >> 2] = S2 * +g[L2 + 320 >> 2] + T2 * +g[l2 >> 2] + U2 * +g[o2 >> 2] + +g[G2 >> 2];
                    g[L2 + 272 + 4 >> 2] = V2;
                    g[L2 + 272 + 8 >> 2] = W2;
                    g[L2 + 272 + 12 >> 2] = 0;
                    J2 = vb[c[(c[b2 >> 2] | 0) + 20 >> 2] & 127](b2) | 0;
                    C2 = c[(c[J2 >> 2] | 0) + 16 >> 2] | 0;
                    c[L2 + 256 >> 2] = 0;
                    c[L2 + 256 + 4 >> 2] = 0;
                    c[L2 + 256 + 8 >> 2] = 0;
                    c[L2 + 256 + 12 >> 2] = 0;
                    bc[C2 & 127](J2, L2 + 304 | 0, L2 + 272 | 0, L2 + 256 | 0);
                    if (!(h2 & 3)) {
                      J2 = vb[c[(c[b2 >> 2] | 0) + 20 >> 2] & 127](b2) | 0;
                      C2 = c[(c[J2 >> 2] | 0) + 16 >> 2] | 0;
                      c[L2 + 240 >> 2] = 0;
                      c[L2 + 240 + 4 >> 2] = 0;
                      c[L2 + 240 + 8 >> 2] = 0;
                      c[L2 + 240 + 12 >> 2] = 0;
                      bc[C2 & 127](J2, j2, L2 + 272 | 0, L2 + 240 | 0);
                    }
                    ;
                    c[L2 + 304 >> 2] = c[L2 + 272 >> 2];
                    c[L2 + 304 + 4 >> 2] = c[L2 + 272 + 4 >> 2];
                    c[L2 + 304 + 8 >> 2] = c[L2 + 272 + 8 >> 2];
                    c[L2 + 304 + 12 >> 2] = c[L2 + 272 + 12 >> 2];
                    h2 = h2 + 1 | 0;
                  } while ((h2 | 0) != 32);
                  A2 = +g[d2 + 452 >> 2];
                  B2 = +g[d2 + 512 >> 2];
                  h2 = c[d2 + 32 >> 2] | 0;
                  if (+g[h2 + 368 >> 2] > 0) {
                    S2 = +g[d2 + 364 >> 2];
                    T2 = +g[h2 + 4 >> 2];
                    U2 = +g[d2 + 364 + 16 >> 2];
                    V2 = +g[h2 + 8 >> 2];
                    W2 = +g[d2 + 364 + 32 >> 2];
                    x2 = +g[h2 + 12 >> 2];
                    O2 = +g[d2 + 364 + 4 >> 2];
                    P2 = +g[d2 + 364 + 20 >> 2];
                    w2 = +g[d2 + 364 + 36 >> 2];
                    M2 = +g[d2 + 364 + 8 >> 2];
                    N2 = +g[d2 + 364 + 24 >> 2];
                    v2 = +g[d2 + 364 + 40 >> 2];
                    Y2 = +g[h2 + 20 >> 2];
                    X2 = +g[h2 + 24 >> 2];
                    u2 = +g[h2 + 28 >> 2];
                    t2 = +g[h2 + 36 >> 2];
                    s2 = +g[h2 + 40 >> 2];
                    n2 = +g[h2 + 44 >> 2];
                    m2 = +g[d2 + 364 + 48 >> 2];
                    f2 = +g[d2 + 364 + 52 >> 2];
                    e2 = +g[d2 + 364 + 56 >> 2];
                    y2 = t2 * m2 + s2 * f2 + n2 * e2 + +g[h2 + 60 >> 2];
                    z2 = Y2 * m2 + X2 * f2 + u2 * e2 + +g[h2 + 56 >> 2];
                    e2 = +g[h2 + 52 >> 2] + (T2 * m2 + V2 * f2 + x2 * e2);
                    f2 = M2 * t2 + N2 * s2 + v2 * n2;
                    m2 = O2 * t2 + P2 * s2 + w2 * n2;
                    n2 = S2 * t2 + U2 * s2 + W2 * n2;
                    s2 = M2 * Y2 + N2 * X2 + v2 * u2;
                    t2 = O2 * Y2 + P2 * X2 + w2 * u2;
                    u2 = S2 * Y2 + U2 * X2 + W2 * u2;
                    v2 = T2 * M2 + V2 * N2 + x2 * v2;
                    w2 = T2 * O2 + V2 * P2 + x2 * w2;
                    x2 = S2 * T2 + U2 * V2 + W2 * x2;
                  } else {
                    J2 = c[d2 + 28 >> 2] | 0;
                    U2 = +g[d2 + 300 >> 2];
                    V2 = +g[J2 + 4 >> 2];
                    W2 = +g[d2 + 300 + 16 >> 2];
                    X2 = +g[J2 + 8 >> 2];
                    Y2 = +g[d2 + 300 + 32 >> 2];
                    x2 = +g[J2 + 12 >> 2];
                    S2 = +g[d2 + 300 + 4 >> 2];
                    T2 = +g[d2 + 300 + 20 >> 2];
                    w2 = +g[d2 + 300 + 36 >> 2];
                    O2 = +g[d2 + 300 + 8 >> 2];
                    P2 = +g[d2 + 300 + 24 >> 2];
                    v2 = +g[d2 + 300 + 40 >> 2];
                    M2 = +g[J2 + 20 >> 2];
                    N2 = +g[J2 + 24 >> 2];
                    u2 = +g[J2 + 28 >> 2];
                    t2 = +g[J2 + 36 >> 2];
                    s2 = +g[J2 + 40 >> 2];
                    n2 = +g[J2 + 44 >> 2];
                    m2 = +g[d2 + 300 + 48 >> 2];
                    f2 = +g[d2 + 300 + 52 >> 2];
                    e2 = +g[d2 + 300 + 56 >> 2];
                    y2 = t2 * m2 + s2 * f2 + n2 * e2 + +g[J2 + 60 >> 2];
                    z2 = M2 * m2 + N2 * f2 + u2 * e2 + +g[J2 + 56 >> 2];
                    e2 = +g[J2 + 52 >> 2] + (V2 * m2 + X2 * f2 + x2 * e2);
                    f2 = O2 * t2 + P2 * s2 + v2 * n2;
                    m2 = S2 * t2 + T2 * s2 + w2 * n2;
                    n2 = U2 * t2 + W2 * s2 + Y2 * n2;
                    s2 = O2 * M2 + P2 * N2 + v2 * u2;
                    t2 = S2 * M2 + T2 * N2 + w2 * u2;
                    u2 = U2 * M2 + W2 * N2 + Y2 * u2;
                    v2 = V2 * O2 + X2 * P2 + x2 * v2;
                    w2 = V2 * S2 + X2 * T2 + x2 * w2;
                    x2 = U2 * V2 + W2 * X2 + Y2 * x2;
                  }
                  g[L2 + 320 >> 2] = x2;
                  g[l2 >> 2] = w2;
                  g[o2 >> 2] = v2;
                  g[L2 + 320 + 12 >> 2] = 0;
                  g[p2 >> 2] = u2;
                  g[q2 >> 2] = t2;
                  g[r2 >> 2] = s2;
                  g[L2 + 320 + 28 >> 2] = 0;
                  g[D2 >> 2] = n2;
                  g[E2 >> 2] = m2;
                  g[F2 >> 2] = f2;
                  g[L2 + 320 + 44 >> 2] = 0;
                  g[G2 >> 2] = e2;
                  g[H2 >> 2] = z2;
                  g[I2 >> 2] = y2;
                  g[L2 + 320 + 60 >> 2] = 0;
                  c[L2 + 272 >> 2] = c[j2 >> 2];
                  c[L2 + 272 + 4 >> 2] = c[j2 + 4 >> 2];
                  c[L2 + 272 + 8 >> 2] = c[j2 + 8 >> 2];
                  c[L2 + 272 + 12 >> 2] = c[j2 + 12 >> 2];
                  g[L2 + 208 >> 2] = x2;
                  g[L2 + 208 + 4 >> 2] = u2;
                  g[L2 + 208 + 8 >> 2] = n2;
                  g[L2 + 208 + 12 >> 2] = 0;
                  g[L2 + 176 >> 2] = w2;
                  g[L2 + 176 + 4 >> 2] = t2;
                  g[L2 + 176 + 8 >> 2] = m2;
                  g[L2 + 176 + 12 >> 2] = 0;
                  b2 = vb[c[(c[b2 >> 2] | 0) + 20 >> 2] & 127](b2) | 0;
                  d2 = c[(c[b2 >> 2] | 0) + 68 >> 2] | 0;
                  c[L2 + 224 >> 2] = 0;
                  c[L2 + 224 + 4 >> 2] = 0;
                  c[L2 + 224 + 8 >> 2] = 0;
                  c[L2 + 224 + 12 >> 2] = 0;
                  Cb[d2 & 0](b2, L2 + 272 | 0, L2 + 208 | 0, L2 + 176 | 0, K2, K2, -B2 - A2, A2 - B2, L2 + 224 | 0, 1, 10);
                }
                i = L2;
                return;
              }
              case 6:
              case 9: {
                c[L2 + 320 >> 2] = c[d2 + 1064 >> 2];
                c[L2 + 320 + 4 >> 2] = c[d2 + 1064 + 4 >> 2];
                c[L2 + 320 + 8 >> 2] = c[d2 + 1064 + 8 >> 2];
                c[L2 + 320 + 12 >> 2] = c[d2 + 1064 + 12 >> 2];
                j2 = L2 + 320 + 16 | 0;
                l2 = d2 + 1064 + 16 | 0;
                c[j2 >> 2] = c[l2 >> 2];
                c[j2 + 4 >> 2] = c[l2 + 4 >> 2];
                c[j2 + 8 >> 2] = c[l2 + 8 >> 2];
                c[j2 + 12 >> 2] = c[l2 + 12 >> 2];
                o2 = L2 + 320 + 32 | 0;
                p2 = d2 + 1064 + 32 | 0;
                c[o2 >> 2] = c[p2 >> 2];
                c[o2 + 4 >> 2] = c[p2 + 4 >> 2];
                c[o2 + 8 >> 2] = c[p2 + 8 >> 2];
                c[o2 + 12 >> 2] = c[p2 + 12 >> 2];
                q2 = L2 + 320 + 48 | 0;
                r2 = d2 + 1064 + 48 | 0;
                c[q2 >> 2] = c[r2 >> 2];
                c[q2 + 4 >> 2] = c[r2 + 4 >> 2];
                c[q2 + 8 >> 2] = c[r2 + 8 >> 2];
                c[q2 + 12 >> 2] = c[r2 + 12 >> 2];
                if (!(C2 & 1)) {
                  c[L2 + 320 >> 2] = c[d2 + 1128 >> 2];
                  c[L2 + 320 + 4 >> 2] = c[d2 + 1128 + 4 >> 2];
                  c[L2 + 320 + 8 >> 2] = c[d2 + 1128 + 8 >> 2];
                  c[L2 + 320 + 12 >> 2] = c[d2 + 1128 + 12 >> 2];
                  c[j2 >> 2] = c[d2 + 1128 + 16 >> 2];
                  c[j2 + 4 >> 2] = c[d2 + 1128 + 16 + 4 >> 2];
                  c[j2 + 8 >> 2] = c[d2 + 1128 + 16 + 8 >> 2];
                  c[j2 + 12 >> 2] = c[d2 + 1128 + 16 + 12 >> 2];
                  c[o2 >> 2] = c[d2 + 1128 + 32 >> 2];
                  c[o2 + 4 >> 2] = c[d2 + 1128 + 32 + 4 >> 2];
                  c[o2 + 8 >> 2] = c[d2 + 1128 + 32 + 8 >> 2];
                  c[o2 + 12 >> 2] = c[d2 + 1128 + 32 + 12 >> 2];
                  c[q2 >> 2] = c[d2 + 1128 + 48 >> 2];
                  c[q2 + 4 >> 2] = c[d2 + 1128 + 48 + 4 >> 2];
                  c[q2 + 8 >> 2] = c[d2 + 1128 + 48 + 8 >> 2];
                  c[q2 + 12 >> 2] = c[d2 + 1128 + 48 + 12 >> 2];
                } else {
                  I2 = vb[c[(c[b2 >> 2] | 0) + 20 >> 2] & 127](b2) | 0;
                  $b[c[(c[I2 >> 2] | 0) + 64 >> 2] & 7](I2, L2 + 320 | 0, K2);
                  c[L2 + 320 >> 2] = c[d2 + 1128 >> 2];
                  c[L2 + 320 + 4 >> 2] = c[d2 + 1128 + 4 >> 2];
                  c[L2 + 320 + 8 >> 2] = c[d2 + 1128 + 8 >> 2];
                  c[L2 + 320 + 12 >> 2] = c[d2 + 1128 + 12 >> 2];
                  c[j2 >> 2] = c[d2 + 1128 + 16 >> 2];
                  c[j2 + 4 >> 2] = c[d2 + 1128 + 16 + 4 >> 2];
                  c[j2 + 8 >> 2] = c[d2 + 1128 + 16 + 8 >> 2];
                  c[j2 + 12 >> 2] = c[d2 + 1128 + 16 + 12 >> 2];
                  c[o2 >> 2] = c[d2 + 1128 + 32 >> 2];
                  c[o2 + 4 >> 2] = c[d2 + 1128 + 32 + 4 >> 2];
                  c[o2 + 8 >> 2] = c[d2 + 1128 + 32 + 8 >> 2];
                  c[o2 + 12 >> 2] = c[d2 + 1128 + 32 + 12 >> 2];
                  c[q2 >> 2] = c[d2 + 1128 + 48 >> 2];
                  c[q2 + 4 >> 2] = c[d2 + 1128 + 48 + 4 >> 2];
                  c[q2 + 8 >> 2] = c[d2 + 1128 + 48 + 8 >> 2];
                  c[q2 + 12 >> 2] = c[d2 + 1128 + 48 + 12 >> 2];
                  I2 = vb[c[(c[b2 >> 2] | 0) + 20 >> 2] & 127](b2) | 0;
                  $b[c[(c[I2 >> 2] | 0) + 64 >> 2] & 7](I2, L2 + 320 | 0, K2);
                }
                if (J2 & 1 | 0) {
                  c[L2 + 320 >> 2] = c[d2 + 1064 >> 2];
                  c[L2 + 320 + 4 >> 2] = c[d2 + 1064 + 4 >> 2];
                  c[L2 + 320 + 8 >> 2] = c[d2 + 1064 + 8 >> 2];
                  c[L2 + 320 + 12 >> 2] = c[d2 + 1064 + 12 >> 2];
                  c[j2 >> 2] = c[l2 >> 2];
                  c[j2 + 4 >> 2] = c[l2 + 4 >> 2];
                  c[j2 + 8 >> 2] = c[l2 + 8 >> 2];
                  c[j2 + 12 >> 2] = c[l2 + 12 >> 2];
                  c[o2 >> 2] = c[p2 >> 2];
                  c[o2 + 4 >> 2] = c[p2 + 4 >> 2];
                  c[o2 + 8 >> 2] = c[p2 + 8 >> 2];
                  c[o2 + 12 >> 2] = c[p2 + 12 >> 2];
                  c[q2 >> 2] = c[r2 >> 2];
                  c[q2 + 4 >> 2] = c[r2 + 4 >> 2];
                  c[q2 + 8 >> 2] = c[r2 + 8 >> 2];
                  c[q2 + 12 >> 2] = c[r2 + 12 >> 2];
                  h2 = d2 + 1128 + 48 | 0;
                  c[L2 + 304 >> 2] = c[L2 + 320 + 8 >> 2];
                  c[L2 + 304 + 4 >> 2] = c[L2 + 320 + 24 >> 2];
                  c[L2 + 304 + 8 >> 2] = c[L2 + 320 + 40 >> 2];
                  g[L2 + 304 + 12 >> 2] = 0;
                  c[L2 + 272 >> 2] = c[L2 + 320 >> 2];
                  c[L2 + 272 + 4 >> 2] = c[L2 + 320 + 16 >> 2];
                  c[L2 + 272 + 8 >> 2] = c[L2 + 320 + 32 >> 2];
                  g[L2 + 272 + 12 >> 2] = 0;
                  U2 = +g[d2 + 932 >> 2];
                  e2 = +g[d2 + 932 + 4 >> 2];
                  X2 = +g[d2 + 996 >> 2];
                  W2 = +g[d2 + 996 + 4 >> 2];
                  H2 = vb[c[(c[b2 >> 2] | 0) + 20 >> 2] & 127](b2) | 0;
                  I2 = c[(c[H2 >> 2] | 0) + 72 >> 2] | 0;
                  c[L2 + 192 >> 2] = 0;
                  c[L2 + 192 + 4 >> 2] = 0;
                  c[L2 + 192 + 8 >> 2] = 0;
                  c[L2 + 192 + 12 >> 2] = 0;
                  Ub[I2 & 0](H2, h2, L2 + 304 | 0, L2 + 272 | 0, K2 * 0.8999999761581421, U2, e2, X2, W2, L2 + 192 | 0, 10, 1);
                  H2 = c[L2 + 320 + 4 >> 2] | 0;
                  I2 = c[L2 + 320 + 20 >> 2] | 0;
                  J2 = c[L2 + 320 + 36 >> 2] | 0;
                  c[L2 + 272 >> 2] = H2;
                  c[L2 + 272 + 4 >> 2] = I2;
                  c[L2 + 272 + 8 >> 2] = J2;
                  g[L2 + 272 + 12 >> 2] = 0;
                  W2 = +g[d2 + 1196 >> 2];
                  X2 = +g[d2 + 1200 >> 2];
                  e2 = +Q(+W2);
                  W2 = +R(+W2);
                  U2 = +Q(+X2);
                  X2 = +R(+X2);
                  V2 = (c[k >> 2] = H2, +g[k >> 2]);
                  Y2 = (c[k >> 2] = I2, +g[k >> 2]);
                  f2 = (c[k >> 2] = J2, +g[k >> 2]);
                  g[L2 + 208 >> 2] = e2 * U2 * V2 + e2 * X2 * Y2 - W2 * f2;
                  g[L2 + 208 + 4 >> 2] = U2 * Y2 - X2 * V2;
                  g[L2 + 208 + 8 >> 2] = W2 * U2 * V2 + W2 * X2 * Y2 + e2 * f2;
                  c[L2 + 320 >> 2] = c[d2 + 1128 >> 2];
                  c[L2 + 320 + 4 >> 2] = c[d2 + 1128 + 4 >> 2];
                  c[L2 + 320 + 8 >> 2] = c[d2 + 1128 + 8 >> 2];
                  c[L2 + 320 + 12 >> 2] = c[d2 + 1128 + 12 >> 2];
                  c[j2 >> 2] = c[d2 + 1128 + 16 >> 2];
                  c[j2 + 4 >> 2] = c[d2 + 1128 + 16 + 4 >> 2];
                  c[j2 + 8 >> 2] = c[d2 + 1128 + 16 + 8 >> 2];
                  c[j2 + 12 >> 2] = c[d2 + 1128 + 16 + 12 >> 2];
                  c[o2 >> 2] = c[d2 + 1128 + 32 >> 2];
                  c[o2 + 4 >> 2] = c[d2 + 1128 + 32 + 4 >> 2];
                  c[o2 + 8 >> 2] = c[d2 + 1128 + 32 + 8 >> 2];
                  c[o2 + 12 >> 2] = c[d2 + 1128 + 32 + 12 >> 2];
                  c[q2 >> 2] = c[h2 >> 2];
                  c[q2 + 4 >> 2] = c[h2 + 4 >> 2];
                  c[q2 + 8 >> 2] = c[h2 + 8 >> 2];
                  c[q2 + 12 >> 2] = c[h2 + 12 >> 2];
                  f2 = -+g[L2 + 320 + 16 >> 2];
                  e2 = -+g[L2 + 320 + 32 >> 2];
                  g[L2 + 176 >> 2] = -+g[L2 + 320 >> 2];
                  g[L2 + 176 + 4 >> 2] = f2;
                  g[L2 + 176 + 8 >> 2] = e2;
                  g[L2 + 176 + 12 >> 2] = 0;
                  e2 = +g[d2 + 868 >> 2];
                  f2 = +g[d2 + 868 + 4 >> 2];
                  if (!(e2 > f2)) {
                    if (e2 < f2) {
                      J2 = vb[c[(c[b2 >> 2] | 0) + 20 >> 2] & 127](b2) | 0;
                      I2 = c[(c[J2 >> 2] | 0) + 68 >> 2] | 0;
                      c[L2 + 144 >> 2] = 0;
                      c[L2 + 144 + 4 >> 2] = 0;
                      c[L2 + 144 + 8 >> 2] = 0;
                      c[L2 + 144 + 12 >> 2] = 0;
                      Cb[I2 & 0](J2, h2, L2 + 176 | 0, L2 + 208 | 0, K2, K2, e2, f2, L2 + 144 | 0, 1, 10);
                    }
                  } else {
                    J2 = vb[c[(c[b2 >> 2] | 0) + 20 >> 2] & 127](b2) | 0;
                    I2 = c[(c[J2 >> 2] | 0) + 68 >> 2] | 0;
                    c[L2 + 160 >> 2] = 0;
                    c[L2 + 160 + 4 >> 2] = 0;
                    c[L2 + 160 + 8 >> 2] = 0;
                    c[L2 + 160 + 12 >> 2] = 0;
                    Cb[I2 & 0](J2, h2, L2 + 176 | 0, L2 + 208 | 0, K2, K2, -3.1415927410125732, 3.1415927410125732, L2 + 160 | 0, 0, 10);
                  }
                  ;
                  c[L2 + 320 >> 2] = c[d2 + 1064 >> 2];
                  c[L2 + 320 + 4 >> 2] = c[d2 + 1064 + 4 >> 2];
                  c[L2 + 320 + 8 >> 2] = c[d2 + 1064 + 8 >> 2];
                  c[L2 + 320 + 12 >> 2] = c[d2 + 1064 + 12 >> 2];
                  c[j2 >> 2] = c[l2 >> 2];
                  c[j2 + 4 >> 2] = c[l2 + 4 >> 2];
                  c[j2 + 8 >> 2] = c[l2 + 8 >> 2];
                  c[j2 + 12 >> 2] = c[l2 + 12 >> 2];
                  c[o2 >> 2] = c[p2 >> 2];
                  c[o2 + 4 >> 2] = c[p2 + 4 >> 2];
                  c[o2 + 8 >> 2] = c[p2 + 8 >> 2];
                  c[o2 + 12 >> 2] = c[p2 + 12 >> 2];
                  c[q2 >> 2] = c[r2 >> 2];
                  c[q2 + 4 >> 2] = c[r2 + 4 >> 2];
                  c[q2 + 8 >> 2] = c[r2 + 8 >> 2];
                  c[q2 + 12 >> 2] = c[r2 + 12 >> 2];
                  c[L2 + 96 >> 2] = c[d2 + 680 >> 2];
                  c[L2 + 96 + 4 >> 2] = c[d2 + 680 + 4 >> 2];
                  c[L2 + 96 + 8 >> 2] = c[d2 + 680 + 8 >> 2];
                  c[L2 + 96 + 12 >> 2] = c[d2 + 680 + 12 >> 2];
                  c[L2 + 64 >> 2] = c[d2 + 680 + 16 >> 2];
                  c[L2 + 64 + 4 >> 2] = c[d2 + 680 + 16 + 4 >> 2];
                  c[L2 + 64 + 8 >> 2] = c[d2 + 680 + 16 + 8 >> 2];
                  c[L2 + 64 + 12 >> 2] = c[d2 + 680 + 16 + 12 >> 2];
                  b2 = vb[c[(c[b2 >> 2] | 0) + 20 >> 2] & 127](b2) | 0;
                  d2 = c[(c[b2 >> 2] | 0) + 80 >> 2] | 0;
                  c[L2 + 128 >> 2] = 0;
                  c[L2 + 128 + 4 >> 2] = 0;
                  c[L2 + 128 + 8 >> 2] = 0;
                  c[L2 + 128 + 12 >> 2] = 0;
                  pb[d2 & 31](b2, L2 + 96 | 0, L2 + 64 | 0, L2 + 320 | 0, L2 + 128 | 0);
                }
                i = L2;
                return;
              }
              case 12: {
                c[L2 + 320 >> 2] = c[d2 + 1236 >> 2];
                c[L2 + 320 + 4 >> 2] = c[d2 + 1236 + 4 >> 2];
                c[L2 + 320 + 8 >> 2] = c[d2 + 1236 + 8 >> 2];
                c[L2 + 320 + 12 >> 2] = c[d2 + 1236 + 12 >> 2];
                j2 = L2 + 320 + 16 | 0;
                l2 = d2 + 1236 + 16 | 0;
                c[j2 >> 2] = c[l2 >> 2];
                c[j2 + 4 >> 2] = c[l2 + 4 >> 2];
                c[j2 + 8 >> 2] = c[l2 + 8 >> 2];
                c[j2 + 12 >> 2] = c[l2 + 12 >> 2];
                o2 = L2 + 320 + 32 | 0;
                p2 = d2 + 1236 + 32 | 0;
                c[o2 >> 2] = c[p2 >> 2];
                c[o2 + 4 >> 2] = c[p2 + 4 >> 2];
                c[o2 + 8 >> 2] = c[p2 + 8 >> 2];
                c[o2 + 12 >> 2] = c[p2 + 12 >> 2];
                q2 = L2 + 320 + 48 | 0;
                r2 = d2 + 1236 + 48 | 0;
                c[q2 >> 2] = c[r2 >> 2];
                c[q2 + 4 >> 2] = c[r2 + 4 >> 2];
                c[q2 + 8 >> 2] = c[r2 + 8 >> 2];
                c[q2 + 12 >> 2] = c[r2 + 12 >> 2];
                if (!(C2 & 1)) {
                  c[L2 + 320 >> 2] = c[d2 + 1300 >> 2];
                  c[L2 + 320 + 4 >> 2] = c[d2 + 1300 + 4 >> 2];
                  c[L2 + 320 + 8 >> 2] = c[d2 + 1300 + 8 >> 2];
                  c[L2 + 320 + 12 >> 2] = c[d2 + 1300 + 12 >> 2];
                  c[j2 >> 2] = c[d2 + 1300 + 16 >> 2];
                  c[j2 + 4 >> 2] = c[d2 + 1300 + 16 + 4 >> 2];
                  c[j2 + 8 >> 2] = c[d2 + 1300 + 16 + 8 >> 2];
                  c[j2 + 12 >> 2] = c[d2 + 1300 + 16 + 12 >> 2];
                  c[o2 >> 2] = c[d2 + 1300 + 32 >> 2];
                  c[o2 + 4 >> 2] = c[d2 + 1300 + 32 + 4 >> 2];
                  c[o2 + 8 >> 2] = c[d2 + 1300 + 32 + 8 >> 2];
                  c[o2 + 12 >> 2] = c[d2 + 1300 + 32 + 12 >> 2];
                  c[q2 >> 2] = c[d2 + 1300 + 48 >> 2];
                  c[q2 + 4 >> 2] = c[d2 + 1300 + 48 + 4 >> 2];
                  c[q2 + 8 >> 2] = c[d2 + 1300 + 48 + 8 >> 2];
                  c[q2 + 12 >> 2] = c[d2 + 1300 + 48 + 12 >> 2];
                } else {
                  I2 = vb[c[(c[b2 >> 2] | 0) + 20 >> 2] & 127](b2) | 0;
                  $b[c[(c[I2 >> 2] | 0) + 64 >> 2] & 7](I2, L2 + 320 | 0, K2);
                  c[L2 + 320 >> 2] = c[d2 + 1300 >> 2];
                  c[L2 + 320 + 4 >> 2] = c[d2 + 1300 + 4 >> 2];
                  c[L2 + 320 + 8 >> 2] = c[d2 + 1300 + 8 >> 2];
                  c[L2 + 320 + 12 >> 2] = c[d2 + 1300 + 12 >> 2];
                  c[j2 >> 2] = c[d2 + 1300 + 16 >> 2];
                  c[j2 + 4 >> 2] = c[d2 + 1300 + 16 + 4 >> 2];
                  c[j2 + 8 >> 2] = c[d2 + 1300 + 16 + 8 >> 2];
                  c[j2 + 12 >> 2] = c[d2 + 1300 + 16 + 12 >> 2];
                  c[o2 >> 2] = c[d2 + 1300 + 32 >> 2];
                  c[o2 + 4 >> 2] = c[d2 + 1300 + 32 + 4 >> 2];
                  c[o2 + 8 >> 2] = c[d2 + 1300 + 32 + 8 >> 2];
                  c[o2 + 12 >> 2] = c[d2 + 1300 + 32 + 12 >> 2];
                  c[q2 >> 2] = c[d2 + 1300 + 48 >> 2];
                  c[q2 + 4 >> 2] = c[d2 + 1300 + 48 + 4 >> 2];
                  c[q2 + 8 >> 2] = c[d2 + 1300 + 48 + 8 >> 2];
                  c[q2 + 12 >> 2] = c[d2 + 1300 + 48 + 12 >> 2];
                  I2 = vb[c[(c[b2 >> 2] | 0) + 20 >> 2] & 127](b2) | 0;
                  $b[c[(c[I2 >> 2] | 0) + 64 >> 2] & 7](I2, L2 + 320 | 0, K2);
                }
                if (J2 & 1 | 0) {
                  c[L2 + 320 >> 2] = c[d2 + 1236 >> 2];
                  c[L2 + 320 + 4 >> 2] = c[d2 + 1236 + 4 >> 2];
                  c[L2 + 320 + 8 >> 2] = c[d2 + 1236 + 8 >> 2];
                  c[L2 + 320 + 12 >> 2] = c[d2 + 1236 + 12 >> 2];
                  c[j2 >> 2] = c[l2 >> 2];
                  c[j2 + 4 >> 2] = c[l2 + 4 >> 2];
                  c[j2 + 8 >> 2] = c[l2 + 8 >> 2];
                  c[j2 + 12 >> 2] = c[l2 + 12 >> 2];
                  c[o2 >> 2] = c[p2 >> 2];
                  c[o2 + 4 >> 2] = c[p2 + 4 >> 2];
                  c[o2 + 8 >> 2] = c[p2 + 8 >> 2];
                  c[o2 + 12 >> 2] = c[p2 + 12 >> 2];
                  c[q2 >> 2] = c[r2 >> 2];
                  c[q2 + 4 >> 2] = c[r2 + 4 >> 2];
                  c[q2 + 8 >> 2] = c[r2 + 8 >> 2];
                  c[q2 + 12 >> 2] = c[r2 + 12 >> 2];
                  h2 = d2 + 1300 + 48 | 0;
                  c[L2 + 304 >> 2] = c[L2 + 320 + 8 >> 2];
                  c[L2 + 304 + 4 >> 2] = c[L2 + 320 + 24 >> 2];
                  c[L2 + 304 + 8 >> 2] = c[L2 + 320 + 40 >> 2];
                  g[L2 + 304 + 12 >> 2] = 0;
                  c[L2 + 272 >> 2] = c[L2 + 320 >> 2];
                  c[L2 + 272 + 4 >> 2] = c[L2 + 320 + 16 >> 2];
                  c[L2 + 272 + 8 >> 2] = c[L2 + 320 + 32 >> 2];
                  g[L2 + 272 + 12 >> 2] = 0;
                  U2 = +g[d2 + 1056 >> 2];
                  e2 = +g[d2 + 1060 >> 2];
                  X2 = +g[d2 + 1144 >> 2];
                  W2 = +g[d2 + 1144 + 4 >> 2];
                  H2 = vb[c[(c[b2 >> 2] | 0) + 20 >> 2] & 127](b2) | 0;
                  I2 = c[(c[H2 >> 2] | 0) + 72 >> 2] | 0;
                  c[L2 + 112 >> 2] = 0;
                  c[L2 + 112 + 4 >> 2] = 0;
                  c[L2 + 112 + 8 >> 2] = 0;
                  c[L2 + 112 + 12 >> 2] = 0;
                  Ub[I2 & 0](H2, h2, L2 + 304 | 0, L2 + 272 | 0, K2 * 0.8999999761581421, U2, e2, X2, W2, L2 + 112 | 0, 10, 1);
                  H2 = c[L2 + 320 + 4 >> 2] | 0;
                  I2 = c[L2 + 320 + 20 >> 2] | 0;
                  J2 = c[L2 + 320 + 36 >> 2] | 0;
                  c[L2 + 272 >> 2] = H2;
                  c[L2 + 272 + 4 >> 2] = I2;
                  c[L2 + 272 + 8 >> 2] = J2;
                  g[L2 + 272 + 12 >> 2] = 0;
                  W2 = +g[d2 + 1368 >> 2];
                  X2 = +g[d2 + 1372 >> 2];
                  e2 = +Q(+W2);
                  W2 = +R(+W2);
                  U2 = +Q(+X2);
                  X2 = +R(+X2);
                  V2 = (c[k >> 2] = H2, +g[k >> 2]);
                  Y2 = (c[k >> 2] = I2, +g[k >> 2]);
                  f2 = (c[k >> 2] = J2, +g[k >> 2]);
                  g[L2 + 208 >> 2] = e2 * U2 * V2 + e2 * X2 * Y2 - W2 * f2;
                  g[L2 + 208 + 4 >> 2] = U2 * Y2 - X2 * V2;
                  g[L2 + 208 + 8 >> 2] = W2 * U2 * V2 + W2 * X2 * Y2 + e2 * f2;
                  c[L2 + 320 >> 2] = c[d2 + 1300 >> 2];
                  c[L2 + 320 + 4 >> 2] = c[d2 + 1300 + 4 >> 2];
                  c[L2 + 320 + 8 >> 2] = c[d2 + 1300 + 8 >> 2];
                  c[L2 + 320 + 12 >> 2] = c[d2 + 1300 + 12 >> 2];
                  c[j2 >> 2] = c[d2 + 1300 + 16 >> 2];
                  c[j2 + 4 >> 2] = c[d2 + 1300 + 16 + 4 >> 2];
                  c[j2 + 8 >> 2] = c[d2 + 1300 + 16 + 8 >> 2];
                  c[j2 + 12 >> 2] = c[d2 + 1300 + 16 + 12 >> 2];
                  c[o2 >> 2] = c[d2 + 1300 + 32 >> 2];
                  c[o2 + 4 >> 2] = c[d2 + 1300 + 32 + 4 >> 2];
                  c[o2 + 8 >> 2] = c[d2 + 1300 + 32 + 8 >> 2];
                  c[o2 + 12 >> 2] = c[d2 + 1300 + 32 + 12 >> 2];
                  c[q2 >> 2] = c[h2 >> 2];
                  c[q2 + 4 >> 2] = c[h2 + 4 >> 2];
                  c[q2 + 8 >> 2] = c[h2 + 8 >> 2];
                  c[q2 + 12 >> 2] = c[h2 + 12 >> 2];
                  f2 = -+g[L2 + 320 + 16 >> 2];
                  e2 = -+g[L2 + 320 + 32 >> 2];
                  g[L2 + 176 >> 2] = -+g[L2 + 320 >> 2];
                  g[L2 + 176 + 4 >> 2] = f2;
                  g[L2 + 176 + 8 >> 2] = e2;
                  g[L2 + 176 + 12 >> 2] = 0;
                  e2 = +g[d2 + 968 >> 2];
                  f2 = +g[d2 + 968 + 4 >> 2];
                  if (!(e2 > f2)) {
                    if (e2 < f2) {
                      J2 = vb[c[(c[b2 >> 2] | 0) + 20 >> 2] & 127](b2) | 0;
                      I2 = c[(c[J2 >> 2] | 0) + 68 >> 2] | 0;
                      c[L2 + 48 >> 2] = 0;
                      c[L2 + 48 + 4 >> 2] = 0;
                      c[L2 + 48 + 8 >> 2] = 0;
                      c[L2 + 48 + 12 >> 2] = 0;
                      Cb[I2 & 0](J2, h2, L2 + 176 | 0, L2 + 208 | 0, K2, K2, e2, f2, L2 + 48 | 0, 1, 10);
                    }
                  } else {
                    J2 = vb[c[(c[b2 >> 2] | 0) + 20 >> 2] & 127](b2) | 0;
                    I2 = c[(c[J2 >> 2] | 0) + 68 >> 2] | 0;
                    c[L2 + 80 >> 2] = 0;
                    c[L2 + 80 + 4 >> 2] = 0;
                    c[L2 + 80 + 8 >> 2] = 0;
                    c[L2 + 80 + 12 >> 2] = 0;
                    Cb[I2 & 0](J2, h2, L2 + 176 | 0, L2 + 208 | 0, K2, K2, -3.1415927410125732, 3.1415927410125732, L2 + 80 | 0, 0, 10);
                  }
                  ;
                  c[L2 + 320 >> 2] = c[d2 + 1236 >> 2];
                  c[L2 + 320 + 4 >> 2] = c[d2 + 1236 + 4 >> 2];
                  c[L2 + 320 + 8 >> 2] = c[d2 + 1236 + 8 >> 2];
                  c[L2 + 320 + 12 >> 2] = c[d2 + 1236 + 12 >> 2];
                  c[j2 >> 2] = c[l2 >> 2];
                  c[j2 + 4 >> 2] = c[l2 + 4 >> 2];
                  c[j2 + 8 >> 2] = c[l2 + 8 >> 2];
                  c[j2 + 12 >> 2] = c[l2 + 12 >> 2];
                  c[o2 >> 2] = c[p2 >> 2];
                  c[o2 + 4 >> 2] = c[p2 + 4 >> 2];
                  c[o2 + 8 >> 2] = c[p2 + 8 >> 2];
                  c[o2 + 12 >> 2] = c[p2 + 12 >> 2];
                  c[q2 >> 2] = c[r2 >> 2];
                  c[q2 + 4 >> 2] = c[r2 + 4 >> 2];
                  c[q2 + 8 >> 2] = c[r2 + 8 >> 2];
                  c[q2 + 12 >> 2] = c[r2 + 12 >> 2];
                  c[L2 + 96 >> 2] = c[d2 + 680 >> 2];
                  c[L2 + 96 + 4 >> 2] = c[d2 + 680 + 4 >> 2];
                  c[L2 + 96 + 8 >> 2] = c[d2 + 680 + 8 >> 2];
                  c[L2 + 96 + 12 >> 2] = c[d2 + 680 + 12 >> 2];
                  c[L2 + 64 >> 2] = c[d2 + 680 + 16 >> 2];
                  c[L2 + 64 + 4 >> 2] = c[d2 + 680 + 16 + 4 >> 2];
                  c[L2 + 64 + 8 >> 2] = c[d2 + 680 + 16 + 8 >> 2];
                  c[L2 + 64 + 12 >> 2] = c[d2 + 680 + 16 + 12 >> 2];
                  b2 = vb[c[(c[b2 >> 2] | 0) + 20 >> 2] & 127](b2) | 0;
                  d2 = c[(c[b2 >> 2] | 0) + 80 >> 2] | 0;
                  c[L2 + 32 >> 2] = 0;
                  c[L2 + 32 + 4 >> 2] = 0;
                  c[L2 + 32 + 8 >> 2] = 0;
                  c[L2 + 32 + 12 >> 2] = 0;
                  pb[d2 & 31](b2, L2 + 96 | 0, L2 + 64 | 0, L2 + 320 | 0, L2 + 32 | 0);
                }
                i = L2;
                return;
              }
              case 7: {
                c[L2 + 320 >> 2] = c[d2 + 824 >> 2];
                c[L2 + 320 + 4 >> 2] = c[d2 + 824 + 4 >> 2];
                c[L2 + 320 + 8 >> 2] = c[d2 + 824 + 8 >> 2];
                c[L2 + 320 + 12 >> 2] = c[d2 + 824 + 12 >> 2];
                h2 = L2 + 320 + 16 | 0;
                c[h2 >> 2] = c[d2 + 824 + 16 >> 2];
                c[h2 + 4 >> 2] = c[d2 + 824 + 16 + 4 >> 2];
                c[h2 + 8 >> 2] = c[d2 + 824 + 16 + 8 >> 2];
                c[h2 + 12 >> 2] = c[d2 + 824 + 16 + 12 >> 2];
                j2 = L2 + 320 + 32 | 0;
                c[j2 >> 2] = c[d2 + 824 + 32 >> 2];
                c[j2 + 4 >> 2] = c[d2 + 824 + 32 + 4 >> 2];
                c[j2 + 8 >> 2] = c[d2 + 824 + 32 + 8 >> 2];
                c[j2 + 12 >> 2] = c[d2 + 824 + 32 + 12 >> 2];
                l2 = L2 + 320 + 48 | 0;
                c[l2 >> 2] = c[d2 + 824 + 48 >> 2];
                c[l2 + 4 >> 2] = c[d2 + 824 + 48 + 4 >> 2];
                c[l2 + 8 >> 2] = c[d2 + 824 + 48 + 8 >> 2];
                c[l2 + 12 >> 2] = c[d2 + 824 + 48 + 12 >> 2];
                if (!(C2 & 1)) {
                  c[L2 + 320 >> 2] = c[d2 + 888 >> 2];
                  c[L2 + 320 + 4 >> 2] = c[d2 + 888 + 4 >> 2];
                  c[L2 + 320 + 8 >> 2] = c[d2 + 888 + 8 >> 2];
                  c[L2 + 320 + 12 >> 2] = c[d2 + 888 + 12 >> 2];
                  c[h2 >> 2] = c[d2 + 888 + 16 >> 2];
                  c[h2 + 4 >> 2] = c[d2 + 888 + 16 + 4 >> 2];
                  c[h2 + 8 >> 2] = c[d2 + 888 + 16 + 8 >> 2];
                  c[h2 + 12 >> 2] = c[d2 + 888 + 16 + 12 >> 2];
                  c[j2 >> 2] = c[d2 + 888 + 32 >> 2];
                  c[j2 + 4 >> 2] = c[d2 + 888 + 32 + 4 >> 2];
                  c[j2 + 8 >> 2] = c[d2 + 888 + 32 + 8 >> 2];
                  c[j2 + 12 >> 2] = c[d2 + 888 + 32 + 12 >> 2];
                  c[l2 >> 2] = c[d2 + 888 + 48 >> 2];
                  c[l2 + 4 >> 2] = c[d2 + 888 + 48 + 4 >> 2];
                  c[l2 + 8 >> 2] = c[d2 + 888 + 48 + 8 >> 2];
                  c[l2 + 12 >> 2] = c[d2 + 888 + 48 + 12 >> 2];
                } else {
                  I2 = vb[c[(c[b2 >> 2] | 0) + 20 >> 2] & 127](b2) | 0;
                  $b[c[(c[I2 >> 2] | 0) + 64 >> 2] & 7](I2, L2 + 320 | 0, K2);
                  c[L2 + 320 >> 2] = c[d2 + 888 >> 2];
                  c[L2 + 320 + 4 >> 2] = c[d2 + 888 + 4 >> 2];
                  c[L2 + 320 + 8 >> 2] = c[d2 + 888 + 8 >> 2];
                  c[L2 + 320 + 12 >> 2] = c[d2 + 888 + 12 >> 2];
                  c[h2 >> 2] = c[d2 + 888 + 16 >> 2];
                  c[h2 + 4 >> 2] = c[d2 + 888 + 16 + 4 >> 2];
                  c[h2 + 8 >> 2] = c[d2 + 888 + 16 + 8 >> 2];
                  c[h2 + 12 >> 2] = c[d2 + 888 + 16 + 12 >> 2];
                  c[j2 >> 2] = c[d2 + 888 + 32 >> 2];
                  c[j2 + 4 >> 2] = c[d2 + 888 + 32 + 4 >> 2];
                  c[j2 + 8 >> 2] = c[d2 + 888 + 32 + 8 >> 2];
                  c[j2 + 12 >> 2] = c[d2 + 888 + 32 + 12 >> 2];
                  c[l2 >> 2] = c[d2 + 888 + 48 >> 2];
                  c[l2 + 4 >> 2] = c[d2 + 888 + 48 + 4 >> 2];
                  c[l2 + 8 >> 2] = c[d2 + 888 + 48 + 8 >> 2];
                  c[l2 + 12 >> 2] = c[d2 + 888 + 48 + 12 >> 2];
                  I2 = vb[c[(c[b2 >> 2] | 0) + 20 >> 2] & 127](b2) | 0;
                  $b[c[(c[I2 >> 2] | 0) + 64 >> 2] & 7](I2, L2 + 320 | 0, K2);
                }
                if (J2 & 1 | 0) {
                  D2 = a[d2 + 180 >> 0] | 0 ? d2 + 824 | 0 : d2 + 888 | 0;
                  E2 = c[D2 >> 2] | 0;
                  H2 = c[D2 + 4 >> 2] | 0;
                  F2 = c[D2 + 16 >> 2] | 0;
                  I2 = c[D2 + 20 >> 2] | 0;
                  G2 = c[D2 + 32 >> 2] | 0;
                  J2 = c[D2 + 36 >> 2] | 0;
                  A2 = +g[D2 + 48 >> 2];
                  O2 = +g[D2 + 52 >> 2];
                  U2 = +g[D2 + 56 >> 2];
                  X2 = +g[d2 + 184 >> 2];
                  N2 = (c[k >> 2] = E2, +g[k >> 2]);
                  M2 = (c[k >> 2] = H2, +g[k >> 2]) * 0;
                  B2 = +g[D2 + 8 >> 2] * 0;
                  T2 = (c[k >> 2] = F2, +g[k >> 2]);
                  S2 = (c[k >> 2] = I2, +g[k >> 2]) * 0;
                  P2 = +g[D2 + 24 >> 2] * 0;
                  Y2 = (c[k >> 2] = G2, +g[k >> 2]);
                  W2 = (c[k >> 2] = J2, +g[k >> 2]) * 0;
                  V2 = +g[D2 + 40 >> 2] * 0;
                  g[L2 + 304 >> 2] = A2 + (B2 + (M2 + N2 * X2));
                  g[L2 + 304 + 4 >> 2] = O2 + (P2 + (S2 + T2 * X2));
                  g[L2 + 304 + 8 >> 2] = U2 + (V2 + (W2 + Y2 * X2));
                  g[L2 + 304 + 12 >> 2] = 0;
                  X2 = +g[d2 + 188 >> 2];
                  g[L2 + 272 >> 2] = A2 + (B2 + (M2 + N2 * X2));
                  g[L2 + 272 + 4 >> 2] = O2 + (P2 + (S2 + T2 * X2));
                  g[L2 + 272 + 8 >> 2] = U2 + (V2 + (W2 + Y2 * X2));
                  g[L2 + 272 + 12 >> 2] = 0;
                  D2 = vb[c[(c[b2 >> 2] | 0) + 20 >> 2] & 127](b2) | 0;
                  C2 = c[(c[D2 >> 2] | 0) + 16 >> 2] | 0;
                  c[L2 + 16 >> 2] = 0;
                  c[L2 + 16 + 4 >> 2] = 0;
                  c[L2 + 16 + 8 >> 2] = 0;
                  c[L2 + 16 + 12 >> 2] = 0;
                  bc[C2 & 127](D2, L2 + 304 | 0, L2 + 272 | 0, L2 + 16 | 0);
                  c[L2 + 208 >> 2] = E2;
                  c[L2 + 208 + 4 >> 2] = F2;
                  c[L2 + 208 + 8 >> 2] = G2;
                  g[L2 + 208 + 12 >> 2] = 0;
                  c[L2 + 176 >> 2] = H2;
                  c[L2 + 176 + 4 >> 2] = I2;
                  c[L2 + 176 + 8 >> 2] = J2;
                  g[L2 + 176 + 12 >> 2] = 0;
                  X2 = +g[d2 + 192 >> 2];
                  Y2 = +g[d2 + 196 >> 2];
                  b2 = vb[c[(c[b2 >> 2] | 0) + 20 >> 2] & 127](b2) | 0;
                  J2 = c[(c[b2 >> 2] | 0) + 68 >> 2] | 0;
                  c[L2 >> 2] = 0;
                  c[L2 + 4 >> 2] = 0;
                  c[L2 + 8 >> 2] = 0;
                  c[L2 + 12 >> 2] = 0;
                  Cb[J2 & 0](b2, d2 + 888 + 48 | 0, L2 + 208 | 0, L2 + 176 | 0, K2, K2, X2, Y2, L2, 1, 10);
                }
                i = L2;
                return;
              }
              default: {
                i = L2;
                return;
              }
            }
          }
          function rr(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0, e2 = 0, f2 = 0, h2 = 0;
            e2 = c[a2 + 232 >> 2] | 0;
            if ((e2 | 0) <= 0)
              return;
            a2 = c[a2 + 240 >> 2] | 0;
            d2 = 0;
            do {
              b2 = c[a2 + (d2 << 2) >> 2] | 0;
              switch (c[b2 + 216 >> 2] | 0) {
                case 2:
                case 5:
                  break;
                default:
                  if (!(c[b2 + 204 >> 2] & 3)) {
                    h2 = +g[b2 + 392 >> 2] * +g[b2 + 376 >> 2];
                    f2 = +g[b2 + 396 >> 2] * +g[b2 + 380 >> 2];
                    g[b2 + 436 >> 2] = +g[b2 + 388 >> 2] * +g[b2 + 372 >> 2] + +g[b2 + 436 >> 2];
                    g[b2 + 440 >> 2] = h2 + +g[b2 + 440 >> 2];
                    g[b2 + 444 >> 2] = f2 + +g[b2 + 444 >> 2];
                  }
              }
              d2 = d2 + 1 | 0;
            } while ((d2 | 0) != (e2 | 0));
            return;
          }
          function sr(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            return;
          }
          function tr(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            var d2 = 0, e2 = 0, f2 = 0;
            e2 = i;
            i = i + 16 | 0;
            fs(16070);
            if ((c[a2 + 280 >> 2] | 0) > 0) {
              d2 = 0;
              do {
                f2 = c[(c[a2 + 288 >> 2] | 0) + (d2 << 2) >> 2] | 0;
                $b[c[(c[f2 >> 2] | 0) + 8 >> 2] & 7](f2, a2, b2);
                d2 = d2 + 1 | 0;
              } while ((d2 | 0) < (c[a2 + 280 >> 2] | 0));
            }
            d2 = c[2006] | 0;
            f2 = (c[d2 + 16 >> 2] | 0) + -1 | 0;
            c[d2 + 16 >> 2] = f2;
            if (f2 | 0) {
              i = e2;
              return;
            }
            do
              if (c[d2 + 4 >> 2] | 0) {
                kb(e2 | 0, 0) | 0;
                f2 = c[5649] | 0;
                g[d2 + 8 >> 2] = +g[d2 + 8 >> 2] + +(((c[e2 + 4 >> 2] | 0) - (c[f2 + 4 >> 2] | 0) + (((c[e2 >> 2] | 0) - (c[f2 >> 2] | 0) | 0) * 1e6 | 0) - (c[d2 + 12 >> 2] | 0) | 0) >>> 0) / 1e3;
                if (!(c[d2 + 16 >> 2] | 0)) {
                  d2 = c[2006] | 0;
                  break;
                } else {
                  i = e2;
                  return;
                }
              }
            while (0);
            c[2006] = c[d2 + 20 >> 2];
            i = e2;
            return;
          }
          function ur(b2) {
            b2 = b2 | 0;
            var d2 = 0;
            c[b2 >> 2] = 7896;
            d2 = c[b2 + 80 >> 2] | 0;
            if (d2 | 0) {
              if (a[b2 + 84 >> 0] | 0) {
                c[5638] = (c[5638] | 0) + 1;
                rG(c[d2 + -4 >> 2] | 0);
              }
              c[b2 + 80 >> 2] = 0;
            }
            a[b2 + 84 >> 0] = 1;
            c[b2 + 80 >> 2] = 0;
            c[b2 + 72 >> 2] = 0;
            c[b2 + 76 >> 2] = 0;
            d2 = c[b2 + 60 >> 2] | 0;
            if (d2 | 0) {
              if (a[b2 + 64 >> 0] | 0) {
                c[5638] = (c[5638] | 0) + 1;
                rG(c[d2 + -4 >> 2] | 0);
              }
              c[b2 + 60 >> 2] = 0;
            }
            a[b2 + 64 >> 0] = 1;
            c[b2 + 60 >> 2] = 0;
            c[b2 + 52 >> 2] = 0;
            c[b2 + 56 >> 2] = 0;
            d2 = c[b2 + 40 >> 2] | 0;
            if (!d2) {
              a[b2 + 44 >> 0] = 1;
              c[b2 + 40 >> 2] = 0;
              c[b2 + 32 >> 2] = 0;
              b2 = b2 + 36 | 0;
              c[b2 >> 2] = 0;
              return;
            }
            if (a[b2 + 44 >> 0] | 0) {
              c[5638] = (c[5638] | 0) + 1;
              rG(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 40 >> 2] = 0;
            a[b2 + 44 >> 0] = 1;
            c[b2 + 40 >> 2] = 0;
            c[b2 + 32 >> 2] = 0;
            b2 = b2 + 36 | 0;
            c[b2 >> 2] = 0;
            return;
          }
          function vr(a2) {
            a2 = a2 | 0;
            ur(a2);
            rG(a2);
            return;
          }
          function wr(b2, d2, e2, f2, g2, h2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            g2 = g2 | 0;
            h2 = h2 | 0;
            var i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0;
            if ((h2 | 0) < 0) {
              o2 = c[b2 + 8 >> 2] | 0;
              +Qb[c[(c[o2 >> 2] | 0) + 12 >> 2] & 3](o2, d2, e2, f2, g2, c[b2 + 12 >> 2] | 0, c[b2 + 16 >> 2] | 0, c[b2 + 4 >> 2] | 0, c[b2 + 20 >> 2] | 0, c[b2 + 24 >> 2] | 0);
              return;
            }
            n2 = c[b2 + 16 >> 2] | 0;
            a:
              do
                if ((n2 | 0) > 0) {
                  m2 = c[b2 + 12 >> 2] | 0;
                  i2 = 0;
                  while (1) {
                    l2 = m2 + (i2 << 2) | 0;
                    k2 = c[l2 >> 2] | 0;
                    j2 = c[(c[k2 + 28 >> 2] | 0) + 208 >> 2] | 0;
                    if ((j2 | 0) <= -1)
                      j2 = c[(c[k2 + 32 >> 2] | 0) + 208 >> 2] | 0;
                    if ((j2 | 0) == (h2 | 0)) {
                      o2 = l2;
                      break a;
                    }
                    i2 = i2 + 1 | 0;
                    if ((i2 | 0) >= (n2 | 0)) {
                      o2 = 0;
                      break;
                    }
                  }
                } else {
                  i2 = 0;
                  o2 = 0;
                }
              while (0);
            if ((i2 | 0) < (n2 | 0)) {
              m2 = c[b2 + 12 >> 2] | 0;
              j2 = 0;
              do {
                l2 = c[m2 + (i2 << 2) >> 2] | 0;
                k2 = c[(c[l2 + 28 >> 2] | 0) + 208 >> 2] | 0;
                if ((k2 | 0) <= -1)
                  k2 = c[(c[l2 + 32 >> 2] | 0) + 208 >> 2] | 0;
                j2 = ((k2 | 0) == (h2 | 0) & 1) + j2 | 0;
                i2 = i2 + 1 | 0;
              } while ((i2 | 0) != (n2 | 0));
              h2 = j2;
            } else
              h2 = 0;
            i2 = c[b2 + 4 >> 2] | 0;
            if ((c[i2 + 72 >> 2] | 0) < 2) {
              n2 = c[b2 + 8 >> 2] | 0;
              +Qb[c[(c[n2 >> 2] | 0) + 12 >> 2] & 3](n2, d2, e2, f2, g2, o2, h2, i2, c[b2 + 20 >> 2] | 0, c[b2 + 24 >> 2] | 0);
              return;
            }
            if ((e2 | 0) > 0) {
              i2 = c[b2 + 32 >> 2] | 0;
              j2 = c[b2 + 36 >> 2] | 0;
              n2 = 0;
              do {
                m2 = d2 + (n2 << 2) | 0;
                if ((i2 | 0) == (j2 | 0)) {
                  l2 = j2 | 0 ? j2 << 1 : 1;
                  if ((j2 | 0) < (l2 | 0)) {
                    if (!l2)
                      i2 = 0;
                    else {
                      c[5637] = (c[5637] | 0) + 1;
                      i2 = qG((l2 << 2 | 3) + 16 | 0) | 0;
                      if (!i2)
                        i2 = 0;
                      else {
                        c[(i2 + 4 + 15 & -16) + -4 >> 2] = i2;
                        i2 = i2 + 4 + 15 & -16;
                      }
                      j2 = c[b2 + 32 >> 2] | 0;
                    }
                    if ((j2 | 0) > 0) {
                      k2 = 0;
                      do {
                        c[i2 + (k2 << 2) >> 2] = c[(c[b2 + 40 >> 2] | 0) + (k2 << 2) >> 2];
                        k2 = k2 + 1 | 0;
                      } while ((k2 | 0) != (j2 | 0));
                    }
                    k2 = c[b2 + 40 >> 2] | 0;
                    if (k2) {
                      if (a[b2 + 44 >> 0] | 0) {
                        c[5638] = (c[5638] | 0) + 1;
                        rG(c[k2 + -4 >> 2] | 0);
                        j2 = c[b2 + 32 >> 2] | 0;
                      }
                      c[b2 + 40 >> 2] = 0;
                    }
                    a[b2 + 44 >> 0] = 1;
                    c[b2 + 40 >> 2] = i2;
                    c[b2 + 36 >> 2] = l2;
                    i2 = j2;
                    j2 = l2;
                  } else
                    i2 = j2;
                }
                c[(c[b2 + 40 >> 2] | 0) + (i2 << 2) >> 2] = c[m2 >> 2];
                i2 = i2 + 1 | 0;
                c[b2 + 32 >> 2] = i2;
                n2 = n2 + 1 | 0;
              } while ((n2 | 0) != (e2 | 0));
            }
            if ((g2 | 0) > 0) {
              i2 = c[b2 + 52 >> 2] | 0;
              j2 = c[b2 + 56 >> 2] | 0;
              n2 = 0;
              do {
                m2 = f2 + (n2 << 2) | 0;
                if ((i2 | 0) == (j2 | 0)) {
                  l2 = j2 | 0 ? j2 << 1 : 1;
                  if ((j2 | 0) < (l2 | 0)) {
                    if (!l2)
                      i2 = 0;
                    else {
                      c[5637] = (c[5637] | 0) + 1;
                      i2 = qG((l2 << 2 | 3) + 16 | 0) | 0;
                      if (!i2)
                        i2 = 0;
                      else {
                        c[(i2 + 4 + 15 & -16) + -4 >> 2] = i2;
                        i2 = i2 + 4 + 15 & -16;
                      }
                      j2 = c[b2 + 52 >> 2] | 0;
                    }
                    if ((j2 | 0) > 0) {
                      k2 = 0;
                      do {
                        c[i2 + (k2 << 2) >> 2] = c[(c[b2 + 60 >> 2] | 0) + (k2 << 2) >> 2];
                        k2 = k2 + 1 | 0;
                      } while ((k2 | 0) != (j2 | 0));
                    }
                    k2 = c[b2 + 60 >> 2] | 0;
                    if (k2) {
                      if (a[b2 + 64 >> 0] | 0) {
                        c[5638] = (c[5638] | 0) + 1;
                        rG(c[k2 + -4 >> 2] | 0);
                        j2 = c[b2 + 52 >> 2] | 0;
                      }
                      c[b2 + 60 >> 2] = 0;
                    }
                    a[b2 + 64 >> 0] = 1;
                    c[b2 + 60 >> 2] = i2;
                    c[b2 + 56 >> 2] = l2;
                    i2 = j2;
                    j2 = l2;
                  } else
                    i2 = j2;
                }
                c[(c[b2 + 60 >> 2] | 0) + (i2 << 2) >> 2] = c[m2 >> 2];
                i2 = i2 + 1 | 0;
                c[b2 + 52 >> 2] = i2;
                n2 = n2 + 1 | 0;
              } while ((n2 | 0) != (g2 | 0));
            }
            if ((h2 | 0) > 0) {
              i2 = c[b2 + 72 >> 2] | 0;
              j2 = c[b2 + 76 >> 2] | 0;
              n2 = 0;
              do {
                m2 = o2 + (n2 << 2) | 0;
                if ((i2 | 0) == (j2 | 0)) {
                  l2 = j2 | 0 ? j2 << 1 : 1;
                  if ((j2 | 0) < (l2 | 0)) {
                    if (!l2) {
                      k2 = 0;
                      i2 = j2;
                    } else {
                      c[5637] = (c[5637] | 0) + 1;
                      i2 = qG((l2 << 2 | 3) + 16 | 0) | 0;
                      if (!i2)
                        i2 = 0;
                      else {
                        c[(i2 + 4 + 15 & -16) + -4 >> 2] = i2;
                        i2 = i2 + 4 + 15 & -16;
                      }
                      k2 = i2;
                      i2 = c[b2 + 72 >> 2] | 0;
                    }
                    if ((i2 | 0) > 0) {
                      j2 = 0;
                      do {
                        c[k2 + (j2 << 2) >> 2] = c[(c[b2 + 80 >> 2] | 0) + (j2 << 2) >> 2];
                        j2 = j2 + 1 | 0;
                      } while ((j2 | 0) != (i2 | 0));
                    }
                    j2 = c[b2 + 80 >> 2] | 0;
                    if (j2) {
                      if (a[b2 + 84 >> 0] | 0) {
                        c[5638] = (c[5638] | 0) + 1;
                        rG(c[j2 + -4 >> 2] | 0);
                        i2 = c[b2 + 72 >> 2] | 0;
                      }
                      c[b2 + 80 >> 2] = 0;
                    }
                    a[b2 + 84 >> 0] = 1;
                    c[b2 + 80 >> 2] = k2;
                    c[b2 + 76 >> 2] = l2;
                    j2 = l2;
                  } else
                    i2 = j2;
                }
                c[(c[b2 + 80 >> 2] | 0) + (i2 << 2) >> 2] = c[m2 >> 2];
                i2 = i2 + 1 | 0;
                c[b2 + 72 >> 2] = i2;
                n2 = n2 + 1 | 0;
              } while ((n2 | 0) != (h2 | 0));
            } else
              i2 = c[b2 + 72 >> 2] | 0;
            if (((c[b2 + 52 >> 2] | 0) + i2 | 0) <= (c[(c[b2 + 4 >> 2] | 0) + 72 >> 2] | 0))
              return;
            mr(b2);
            return;
          }
          function xr(b2) {
            b2 = b2 | 0;
            var d2 = 0;
            c[b2 >> 2] = 7916;
            d2 = c[b2 + 520 >> 2] | 0;
            if (d2 | 0) {
              if (a[b2 + 524 >> 0] | 0) {
                c[5638] = (c[5638] | 0) + 1;
                rG(c[d2 + -4 >> 2] | 0);
              }
              c[b2 + 520 >> 2] = 0;
            }
            a[b2 + 524 >> 0] = 1;
            c[b2 + 520 >> 2] = 0;
            c[b2 + 512 >> 2] = 0;
            c[b2 + 516 >> 2] = 0;
            c[b2 >> 2] = 3156;
            d2 = c[b2 + 276 >> 2] | 0;
            if (d2 | 0) {
              if (a[b2 + 280 >> 0] | 0) {
                c[5638] = (c[5638] | 0) + 1;
                rG(c[d2 + -4 >> 2] | 0);
              }
              c[b2 + 276 >> 2] = 0;
            }
            a[b2 + 280 >> 0] = 1;
            c[b2 + 276 >> 2] = 0;
            c[b2 + 268 >> 2] = 0;
            c[b2 + 272 >> 2] = 0;
            c[5638] = (c[5638] | 0) + 1;
            rG(c[b2 + -4 >> 2] | 0);
            return;
          }
          function yr(a2) {
            a2 = a2 | 0;
            return 488;
          }
          function zr(a2, b2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            e2 = e2 | 0;
            Xe(a2, b2, e2) | 0;
            c[b2 + 256 >> 2] = c[a2 + 288 >> 2];
            c[b2 + 260 >> 2] = c[a2 + 292 >> 2];
            c[b2 + 264 >> 2] = c[a2 + 296 >> 2];
            c[b2 + 268 >> 2] = c[a2 + 300 >> 2];
            c[b2 + 272 >> 2] = c[a2 + 304 >> 2];
            c[b2 + 276 >> 2] = c[a2 + 308 >> 2];
            c[b2 + 280 >> 2] = c[a2 + 312 >> 2];
            c[b2 + 284 >> 2] = c[a2 + 316 >> 2];
            c[b2 + 288 >> 2] = c[a2 + 320 >> 2];
            c[b2 + 292 >> 2] = c[a2 + 324 >> 2];
            c[b2 + 296 >> 2] = c[a2 + 328 >> 2];
            c[b2 + 300 >> 2] = c[a2 + 332 >> 2];
            c[b2 + 304 >> 2] = c[a2 + 336 >> 2];
            c[b2 + 308 >> 2] = c[a2 + 340 >> 2];
            c[b2 + 312 >> 2] = c[a2 + 344 >> 2];
            c[b2 + 316 >> 2] = c[a2 + 348 >> 2];
            c[b2 + 320 >> 2] = c[a2 + 352 >> 2];
            c[b2 + 324 >> 2] = c[a2 + 356 >> 2];
            c[b2 + 328 >> 2] = c[a2 + 360 >> 2];
            c[b2 + 332 >> 2] = c[a2 + 364 >> 2];
            c[b2 + 448 >> 2] = c[a2 + 368 >> 2];
            c[b2 + 336 >> 2] = c[a2 + 568 >> 2];
            c[b2 + 340 >> 2] = c[a2 + 572 >> 2];
            c[b2 + 344 >> 2] = c[a2 + 576 >> 2];
            c[b2 + 348 >> 2] = c[a2 + 580 >> 2];
            c[b2 + 352 >> 2] = c[a2 + 372 >> 2];
            c[b2 + 356 >> 2] = c[a2 + 376 >> 2];
            c[b2 + 360 >> 2] = c[a2 + 380 >> 2];
            c[b2 + 364 >> 2] = c[a2 + 384 >> 2];
            c[b2 + 368 >> 2] = c[a2 + 388 >> 2];
            c[b2 + 372 >> 2] = c[a2 + 392 >> 2];
            c[b2 + 376 >> 2] = c[a2 + 396 >> 2];
            c[b2 + 380 >> 2] = c[a2 + 400 >> 2];
            c[b2 + 384 >> 2] = c[a2 + 404 >> 2];
            c[b2 + 388 >> 2] = c[a2 + 408 >> 2];
            c[b2 + 392 >> 2] = c[a2 + 412 >> 2];
            c[b2 + 396 >> 2] = c[a2 + 416 >> 2];
            c[b2 + 400 >> 2] = c[a2 + 420 >> 2];
            c[b2 + 404 >> 2] = c[a2 + 424 >> 2];
            c[b2 + 408 >> 2] = c[a2 + 428 >> 2];
            c[b2 + 412 >> 2] = c[a2 + 432 >> 2];
            c[b2 + 416 >> 2] = c[a2 + 436 >> 2];
            c[b2 + 420 >> 2] = c[a2 + 440 >> 2];
            c[b2 + 424 >> 2] = c[a2 + 444 >> 2];
            c[b2 + 428 >> 2] = c[a2 + 448 >> 2];
            c[b2 + 432 >> 2] = c[a2 + 452 >> 2];
            c[b2 + 436 >> 2] = c[a2 + 456 >> 2];
            c[b2 + 440 >> 2] = c[a2 + 460 >> 2];
            c[b2 + 444 >> 2] = c[a2 + 464 >> 2];
            c[b2 + 452 >> 2] = c[a2 + 468 >> 2];
            c[b2 + 456 >> 2] = c[a2 + 472 >> 2];
            c[b2 + 484 >> 2] = d[a2 + 476 >> 0];
            c[b2 + 460 >> 2] = c[a2 + 480 >> 2];
            c[b2 + 464 >> 2] = c[a2 + 484 >> 2];
            c[b2 + 468 >> 2] = c[a2 + 488 >> 2];
            c[b2 + 472 >> 2] = c[a2 + 492 >> 2];
            c[b2 + 476 >> 2] = c[a2 + 496 >> 2];
            c[b2 + 480 >> 2] = c[a2 + 500 >> 2];
            return 16174;
          }
          function Ar(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0;
            d2 = c[(c[b2 >> 2] | 0) + 16 >> 2] | 0;
            e2 = vb[c[(c[a2 >> 2] | 0) + 16 >> 2] & 127](a2) | 0;
            e2 = Eb[d2 & 63](b2, e2, 1) | 0;
            d2 = Eb[c[(c[a2 >> 2] | 0) + 20 >> 2] & 63](a2, c[e2 + 8 >> 2] | 0, b2) | 0;
            pb[c[(c[b2 >> 2] | 0) + 20 >> 2] & 31](b2, e2, d2, 1497645650, a2);
            return;
          }
          function Br(b2, d2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, h2 = 0, j2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0;
            n2 = i;
            i = i + 32 | 0;
            c[b2 + 236 >> 2] = 2;
            c[b2 + 336 >> 2] = 0;
            c[b2 + 336 + 4 >> 2] = 0;
            c[b2 + 336 + 8 >> 2] = 0;
            c[b2 + 336 + 12 >> 2] = 0;
            c[b2 + 336 + 16 >> 2] = 0;
            c[b2 + 336 + 20 >> 2] = 0;
            c[b2 + 336 + 24 >> 2] = 0;
            c[b2 + 336 + 28 >> 2] = 0;
            c[b2 + 568 >> 2] = 1065353216;
            c[b2 + 572 >> 2] = 1065353216;
            c[b2 + 576 >> 2] = 1065353216;
            g[b2 + 580 >> 2] = 0;
            c[b2 + 372 >> 2] = 1065353216;
            c[b2 + 376 >> 2] = 1065353216;
            c[b2 + 380 >> 2] = 1065353216;
            e2 = b2 + 384 | 0;
            h2 = e2 + 36 | 0;
            do {
              c[e2 >> 2] = 0;
              e2 = e2 + 4 | 0;
            } while ((e2 | 0) < (h2 | 0));
            c[b2 + 436 >> 2] = 0;
            c[b2 + 436 + 4 >> 2] = 0;
            c[b2 + 436 + 8 >> 2] = 0;
            c[b2 + 436 + 12 >> 2] = 0;
            c[b2 + 436 + 16 >> 2] = 0;
            c[b2 + 436 + 20 >> 2] = 0;
            c[b2 + 436 + 24 >> 2] = 0;
            c[b2 + 436 + 28 >> 2] = 0;
            f2 = +g[d2 + 92 >> 2];
            m2 = +g[d2 + 96 >> 2];
            g[n2 + 20 >> 2] = f2;
            g[n2 + 16 >> 2] = m2;
            g[n2 + 12 >> 2] = 0;
            g[n2 + 8 >> 2] = 1;
            c[b2 + 468 >> 2] = c[(f2 < 0 ? n2 + 12 | 0 : f2 > 1 ? n2 + 8 | 0 : n2 + 20 | 0) >> 2];
            g[n2 + 4 >> 2] = 0;
            g[n2 >> 2] = 1;
            c[b2 + 472 >> 2] = c[(m2 < 0 ? n2 + 4 | 0 : m2 > 1 ? n2 : n2 + 16 | 0) >> 2];
            c[b2 + 496 >> 2] = c[d2 + 112 >> 2];
            c[b2 + 500 >> 2] = c[d2 + 116 >> 2];
            e2 = c[d2 + 4 >> 2] | 0;
            c[b2 + 504 >> 2] = e2;
            c[b2 + 632 >> 2] = 0;
            c[b2 + 636 >> 2] = 0;
            a[b2 + 476 >> 0] = a[d2 + 120 >> 0] | 0;
            c[b2 + 480 >> 2] = c[d2 + 124 >> 2];
            c[b2 + 484 >> 2] = c[d2 + 128 >> 2];
            c[b2 + 488 >> 2] = c[d2 + 132 >> 2];
            c[b2 + 492 >> 2] = c[d2 + 136 >> 2];
            if (!e2) {
              c[b2 + 4 >> 2] = c[d2 + 8 >> 2];
              c[b2 + 4 + 4 >> 2] = c[d2 + 8 + 4 >> 2];
              c[b2 + 4 + 8 >> 2] = c[d2 + 8 + 8 >> 2];
              c[b2 + 4 + 12 >> 2] = c[d2 + 8 + 12 >> 2];
              c[b2 + 20 >> 2] = c[d2 + 24 >> 2];
              c[b2 + 20 + 4 >> 2] = c[d2 + 24 + 4 >> 2];
              c[b2 + 20 + 8 >> 2] = c[d2 + 24 + 8 >> 2];
              c[b2 + 20 + 12 >> 2] = c[d2 + 24 + 12 >> 2];
              c[b2 + 36 >> 2] = c[d2 + 40 >> 2];
              c[b2 + 36 + 4 >> 2] = c[d2 + 40 + 4 >> 2];
              c[b2 + 36 + 8 >> 2] = c[d2 + 40 + 8 >> 2];
              c[b2 + 36 + 12 >> 2] = c[d2 + 40 + 12 >> 2];
              c[b2 + 52 >> 2] = c[d2 + 56 >> 2];
              c[b2 + 52 + 4 >> 2] = c[d2 + 56 + 4 >> 2];
              c[b2 + 52 + 8 >> 2] = c[d2 + 56 + 8 >> 2];
              c[b2 + 52 + 12 >> 2] = c[d2 + 56 + 12 >> 2];
              e2 = b2 + 4 | 0;
              h2 = b2 + 20 | 0;
              j2 = b2 + 36 | 0;
              l2 = b2 + 52 | 0;
            } else {
              tb[c[(c[e2 >> 2] | 0) + 8 >> 2] & 127](e2, b2 + 4 | 0);
              e2 = b2 + 4 | 0;
              h2 = b2 + 20 | 0;
              j2 = b2 + 36 | 0;
              l2 = b2 + 52 | 0;
            }
            c[b2 + 68 >> 2] = c[e2 >> 2];
            c[b2 + 68 + 4 >> 2] = c[e2 + 4 >> 2];
            c[b2 + 68 + 8 >> 2] = c[e2 + 8 >> 2];
            c[b2 + 68 + 12 >> 2] = c[e2 + 12 >> 2];
            c[b2 + 84 >> 2] = c[h2 >> 2];
            c[b2 + 84 + 4 >> 2] = c[h2 + 4 >> 2];
            c[b2 + 84 + 8 >> 2] = c[h2 + 8 >> 2];
            c[b2 + 84 + 12 >> 2] = c[h2 + 12 >> 2];
            c[b2 + 100 >> 2] = c[j2 >> 2];
            c[b2 + 100 + 4 >> 2] = c[j2 + 4 >> 2];
            c[b2 + 100 + 8 >> 2] = c[j2 + 8 >> 2];
            c[b2 + 100 + 12 >> 2] = c[j2 + 12 >> 2];
            c[b2 + 116 >> 2] = c[l2 >> 2];
            c[b2 + 116 + 4 >> 2] = c[l2 + 4 >> 2];
            c[b2 + 116 + 8 >> 2] = c[l2 + 8 >> 2];
            c[b2 + 116 + 12 >> 2] = c[l2 + 12 >> 2];
            c[b2 + 132 >> 2] = 0;
            c[b2 + 132 + 4 >> 2] = 0;
            c[b2 + 132 + 8 >> 2] = 0;
            c[b2 + 132 + 12 >> 2] = 0;
            c[b2 + 132 + 16 >> 2] = 0;
            c[b2 + 132 + 20 >> 2] = 0;
            c[b2 + 132 + 24 >> 2] = 0;
            c[b2 + 132 + 28 >> 2] = 0;
            c[b2 + 224 >> 2] = c[d2 + 100 >> 2];
            c[b2 + 232 >> 2] = c[d2 + 104 >> 2];
            c[b2 + 228 >> 2] = c[d2 + 108 >> 2];
            tb[c[(c[b2 >> 2] | 0) + 8 >> 2] & 127](b2, c[d2 + 72 >> 2] | 0);
            e2 = c[5476] | 0;
            c[5476] = e2 + 1;
            c[b2 + 532 >> 2] = e2;
            f2 = +g[d2 >> 2];
            e2 = c[b2 + 204 >> 2] | 0;
            if (f2 == 0) {
              c[b2 + 204 >> 2] = e2 | 1;
              m2 = 0;
            } else {
              c[b2 + 204 >> 2] = e2 & -2;
              m2 = 1 / f2;
            }
            g[b2 + 368 >> 2] = m2;
            p2 = f2 * +g[b2 + 408 >> 2];
            o2 = f2 * +g[b2 + 412 >> 2];
            g[b2 + 388 >> 2] = f2 * +g[b2 + 404 >> 2];
            g[b2 + 392 >> 2] = p2;
            g[b2 + 396 >> 2] = o2;
            g[b2 + 400 >> 2] = 0;
            f2 = +g[d2 + 76 >> 2];
            h2 = f2 != 0 ? (g[k >> 2] = 1 / f2, c[k >> 2] | 0) : 0;
            f2 = +g[d2 + 80 >> 2];
            e2 = f2 != 0 ? (g[k >> 2] = 1 / f2, c[k >> 2] | 0) : 0;
            f2 = +g[d2 + 84 >> 2];
            d2 = f2 != 0 ? (g[k >> 2] = 1 / f2, c[k >> 2] | 0) : 0;
            c[b2 + 420 >> 2] = h2;
            c[b2 + 424 >> 2] = e2;
            c[b2 + 428 >> 2] = d2;
            g[b2 + 432 >> 2] = 0;
            r2 = m2 * +g[b2 + 376 >> 2];
            x2 = m2 * +g[b2 + 380 >> 2];
            g[b2 + 584 >> 2] = m2 * +g[b2 + 372 >> 2];
            g[b2 + 588 >> 2] = r2;
            g[b2 + 592 >> 2] = x2;
            g[b2 + 596 >> 2] = 0;
            x2 = +g[b2 + 4 >> 2];
            r2 = (c[k >> 2] = h2, +g[k >> 2]);
            w2 = +g[b2 + 8 >> 2];
            f2 = (c[k >> 2] = e2, +g[k >> 2]);
            v2 = +g[b2 + 12 >> 2];
            o2 = (c[k >> 2] = d2, +g[k >> 2]);
            u2 = +g[b2 + 20 >> 2];
            t2 = +g[b2 + 24 >> 2];
            s2 = +g[b2 + 28 >> 2];
            q2 = +g[b2 + 36 >> 2];
            p2 = +g[b2 + 40 >> 2];
            m2 = +g[b2 + 44 >> 2];
            g[b2 + 288 >> 2] = x2 * (x2 * r2) + w2 * (w2 * f2) + v2 * (v2 * o2);
            g[b2 + 292 >> 2] = x2 * r2 * u2 + w2 * f2 * t2 + v2 * o2 * s2;
            g[b2 + 296 >> 2] = x2 * r2 * q2 + w2 * f2 * p2 + v2 * o2 * m2;
            g[b2 + 300 >> 2] = 0;
            g[b2 + 304 >> 2] = x2 * (r2 * u2) + w2 * (f2 * t2) + v2 * (o2 * s2);
            g[b2 + 308 >> 2] = u2 * (r2 * u2) + t2 * (f2 * t2) + s2 * (o2 * s2);
            g[b2 + 312 >> 2] = r2 * u2 * q2 + f2 * t2 * p2 + o2 * s2 * m2;
            g[b2 + 316 >> 2] = 0;
            g[b2 + 320 >> 2] = x2 * (r2 * q2) + w2 * (f2 * p2) + v2 * (o2 * m2);
            g[b2 + 324 >> 2] = u2 * (r2 * q2) + t2 * (f2 * p2) + s2 * (o2 * m2);
            g[b2 + 328 >> 2] = q2 * (r2 * q2) + p2 * (f2 * p2) + m2 * (o2 * m2);
            g[b2 + 332 >> 2] = 0;
            c[b2 + 528 >> 2] = 8;
            c[b2 + 536 >> 2] = 0;
            c[b2 + 536 + 4 >> 2] = 0;
            c[b2 + 536 + 8 >> 2] = 0;
            c[b2 + 536 + 12 >> 2] = 0;
            c[b2 + 536 + 16 >> 2] = 0;
            c[b2 + 536 + 20 >> 2] = 0;
            c[b2 + 536 + 24 >> 2] = 0;
            c[b2 + 536 + 28 >> 2] = 0;
            m2 = +g[b2 + 368 >> 2];
            o2 = m2 * +g[b2 + 376 >> 2];
            p2 = m2 * +g[b2 + 380 >> 2];
            g[b2 + 584 >> 2] = +g[b2 + 372 >> 2] * m2;
            g[b2 + 588 >> 2] = o2;
            g[b2 + 592 >> 2] = p2;
            e2 = b2 + 596 | 0;
            h2 = e2 + 36 | 0;
            do {
              c[e2 >> 2] = 0;
              e2 = e2 + 4 | 0;
            } while ((e2 | 0) < (h2 | 0));
            i = n2;
            return;
          }
          function Cr(b2, d2, e2, f2, h2) {
            b2 = b2 | 0;
            d2 = +d2;
            e2 = e2 | 0;
            f2 = f2 | 0;
            h2 = h2 | 0;
            var j2 = 0;
            j2 = i;
            i = i + 144 | 0;
            c[b2 + 164 >> 2] = 1065353216;
            c[b2 + 168 >> 2] = 1065353216;
            c[b2 + 172 >> 2] = 1065353216;
            g[b2 + 176 >> 2] = 0;
            c[b2 + 180 >> 2] = 0;
            g[b2 + 184 >> 2] = 999999984306749400;
            c[b2 + 188 >> 2] = 0;
            c[b2 + 188 + 4 >> 2] = 0;
            c[b2 + 188 + 8 >> 2] = 0;
            c[b2 + 188 + 12 >> 2] = 0;
            c[b2 + 204 >> 2] = 1;
            c[b2 + 208 >> 2] = -1;
            c[b2 + 212 >> 2] = -1;
            c[b2 + 216 >> 2] = 1;
            g[b2 + 220 >> 2] = 0;
            g[b2 + 224 >> 2] = 0.5;
            g[b2 + 228 >> 2] = 0;
            g[b2 + 232 >> 2] = 0;
            c[b2 + 236 >> 2] = 1;
            c[b2 + 240 >> 2] = 0;
            c[b2 + 244 >> 2] = -1;
            g[b2 + 248 >> 2] = 1;
            g[b2 + 252 >> 2] = 0;
            g[b2 + 256 >> 2] = 0;
            c[b2 + 260 >> 2] = 0;
            a[b2 + 280 >> 0] = 1;
            c[b2 + 276 >> 2] = 0;
            c[b2 + 268 >> 2] = 0;
            c[b2 + 272 >> 2] = 0;
            c[b2 + 284 >> 2] = 0;
            c[b2 + 4 >> 2] = 1065353216;
            c[b2 + 8 >> 2] = 0;
            c[b2 + 8 + 4 >> 2] = 0;
            c[b2 + 8 + 8 >> 2] = 0;
            c[b2 + 8 + 12 >> 2] = 0;
            c[b2 + 24 >> 2] = 1065353216;
            c[b2 + 28 >> 2] = 0;
            c[b2 + 28 + 4 >> 2] = 0;
            c[b2 + 28 + 8 >> 2] = 0;
            c[b2 + 28 + 12 >> 2] = 0;
            c[b2 + 44 >> 2] = 1065353216;
            c[b2 + 48 >> 2] = 0;
            c[b2 + 48 + 4 >> 2] = 0;
            c[b2 + 48 + 8 >> 2] = 0;
            c[b2 + 48 + 12 >> 2] = 0;
            c[b2 + 48 + 16 >> 2] = 0;
            c[b2 >> 2] = 7916;
            a[b2 + 524 >> 0] = 1;
            c[b2 + 520 >> 2] = 0;
            c[b2 + 512 >> 2] = 0;
            c[b2 + 516 >> 2] = 0;
            g[j2 >> 2] = d2;
            c[j2 + 4 >> 2] = e2;
            c[j2 + 72 >> 2] = f2;
            c[j2 + 76 >> 2] = c[h2 >> 2];
            c[j2 + 76 + 4 >> 2] = c[h2 + 4 >> 2];
            c[j2 + 76 + 8 >> 2] = c[h2 + 8 >> 2];
            c[j2 + 76 + 12 >> 2] = c[h2 + 12 >> 2];
            g[j2 + 92 >> 2] = 0;
            g[j2 + 96 >> 2] = 0;
            g[j2 + 100 >> 2] = 0.5;
            g[j2 + 104 >> 2] = 0;
            g[j2 + 108 >> 2] = 0;
            g[j2 + 112 >> 2] = 0.800000011920929;
            g[j2 + 116 >> 2] = 1;
            a[j2 + 120 >> 0] = 0;
            g[j2 + 124 >> 2] = 0.004999999888241291;
            g[j2 + 128 >> 2] = 0.009999999776482582;
            g[j2 + 132 >> 2] = 0.009999999776482582;
            g[j2 + 136 >> 2] = 0.009999999776482582;
            c[j2 + 8 >> 2] = 1065353216;
            c[j2 + 12 >> 2] = 0;
            c[j2 + 12 + 4 >> 2] = 0;
            c[j2 + 12 + 8 >> 2] = 0;
            c[j2 + 12 + 12 >> 2] = 0;
            c[j2 + 28 >> 2] = 1065353216;
            c[j2 + 32 >> 2] = 0;
            c[j2 + 32 + 4 >> 2] = 0;
            c[j2 + 32 + 8 >> 2] = 0;
            c[j2 + 32 + 12 >> 2] = 0;
            c[j2 + 48 >> 2] = 1065353216;
            c[j2 + 52 >> 2] = 0;
            c[j2 + 52 + 4 >> 2] = 0;
            c[j2 + 52 + 8 >> 2] = 0;
            c[j2 + 52 + 12 >> 2] = 0;
            c[j2 + 52 + 16 >> 2] = 0;
            Br(b2, j2);
            i = j2;
            return;
          }
          function Dr(b2, d2) {
            b2 = b2 | 0;
            d2 = +d2;
            var e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0;
            l2 = +g[b2 + 468 >> 2];
            i2 = +P(+(1 - l2), +d2);
            e2 = i2 * +g[b2 + 336 >> 2];
            g[b2 + 336 >> 2] = e2;
            h2 = i2 * +g[b2 + 340 >> 2];
            g[b2 + 340 >> 2] = h2;
            i2 = i2 * +g[b2 + 344 >> 2];
            g[b2 + 344 >> 2] = i2;
            m2 = +g[b2 + 472 >> 2];
            f2 = +P(+(1 - m2), +d2);
            d2 = f2 * +g[b2 + 352 >> 2];
            g[b2 + 352 >> 2] = d2;
            j2 = f2 * +g[b2 + 356 >> 2];
            g[b2 + 356 >> 2] = j2;
            f2 = f2 * +g[b2 + 360 >> 2];
            g[b2 + 360 >> 2] = f2;
            if (!(a[b2 + 476 >> 0] | 0))
              return;
            if (f2 * f2 + (d2 * d2 + j2 * j2) < +g[b2 + 488 >> 2] ? e2 * e2 + h2 * h2 + i2 * i2 < +g[b2 + 484 >> 2] : 0) {
              n2 = +g[b2 + 480 >> 2];
              g[b2 + 352 >> 2] = d2 * n2;
              g[b2 + 356 >> 2] = n2 * j2;
              g[b2 + 360 >> 2] = n2 * f2;
              g[b2 + 336 >> 2] = n2 * e2;
              g[b2 + 340 >> 2] = n2 * h2;
              g[b2 + 344 >> 2] = n2 * i2;
              e2 = n2 * e2;
              h2 = n2 * h2;
              i2 = n2 * i2;
              k2 = d2 * n2;
              j2 = n2 * j2;
              f2 = n2 * f2;
            } else
              k2 = d2;
            d2 = +O(+(e2 * e2 + h2 * h2 + i2 * i2));
            do
              if (d2 < l2)
                if (d2 > 0.004999999888241291) {
                  g[b2 + 336 >> 2] = e2 - e2 * (1 / d2) * 0.004999999888241291;
                  g[b2 + 340 >> 2] = h2 - h2 * (1 / d2) * 0.004999999888241291;
                  g[b2 + 344 >> 2] = i2 - i2 * (1 / d2) * 0.004999999888241291;
                  break;
                } else {
                  c[b2 + 336 >> 2] = 0;
                  c[b2 + 336 + 4 >> 2] = 0;
                  c[b2 + 336 + 8 >> 2] = 0;
                  c[b2 + 336 + 12 >> 2] = 0;
                  break;
                }
            while (0);
            d2 = +O(+(k2 * k2 + j2 * j2 + f2 * f2));
            if (!(d2 < m2))
              return;
            if (d2 > 0.004999999888241291) {
              g[b2 + 352 >> 2] = k2 - k2 * (1 / d2) * 0.004999999888241291;
              g[b2 + 356 >> 2] = j2 - j2 * (1 / d2) * 0.004999999888241291;
              g[b2 + 360 >> 2] = f2 - f2 * (1 / d2) * 0.004999999888241291;
              return;
            } else {
              c[b2 + 352 >> 2] = 0;
              c[b2 + 352 + 4 >> 2] = 0;
              c[b2 + 352 + 8 >> 2] = 0;
              c[b2 + 352 + 12 >> 2] = 0;
              return;
            }
          }
          function Er(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0;
            if (!(c[a2 + 204 >> 2] & 2)) {
              c[a2 + 68 >> 2] = c[b2 >> 2];
              c[a2 + 68 + 4 >> 2] = c[b2 + 4 >> 2];
              c[a2 + 68 + 8 >> 2] = c[b2 + 8 >> 2];
              c[a2 + 68 + 12 >> 2] = c[b2 + 12 >> 2];
              c[a2 + 84 >> 2] = c[b2 + 16 >> 2];
              c[a2 + 84 + 4 >> 2] = c[b2 + 16 + 4 >> 2];
              c[a2 + 84 + 8 >> 2] = c[b2 + 16 + 8 >> 2];
              c[a2 + 84 + 12 >> 2] = c[b2 + 16 + 12 >> 2];
              c[a2 + 100 >> 2] = c[b2 + 32 >> 2];
              c[a2 + 100 + 4 >> 2] = c[b2 + 32 + 4 >> 2];
              c[a2 + 100 + 8 >> 2] = c[b2 + 32 + 8 >> 2];
              c[a2 + 100 + 12 >> 2] = c[b2 + 32 + 12 >> 2];
              c[a2 + 116 >> 2] = c[b2 + 48 >> 2];
              c[a2 + 116 + 4 >> 2] = c[b2 + 48 + 4 >> 2];
              c[a2 + 116 + 8 >> 2] = c[b2 + 48 + 8 >> 2];
              c[a2 + 116 + 12 >> 2] = c[b2 + 48 + 12 >> 2];
              d2 = a2 + 20 | 0;
              e2 = b2 + 16 | 0;
              f2 = a2 + 36 | 0;
              h2 = b2 + 32 | 0;
              i2 = a2 + 52 | 0;
              j2 = b2 + 48 | 0;
              k2 = a2 + 4 | 0;
            } else {
              c[a2 + 68 >> 2] = c[a2 + 4 >> 2];
              c[a2 + 68 + 4 >> 2] = c[a2 + 4 + 4 >> 2];
              c[a2 + 68 + 8 >> 2] = c[a2 + 4 + 8 >> 2];
              c[a2 + 68 + 12 >> 2] = c[a2 + 4 + 12 >> 2];
              c[a2 + 84 >> 2] = c[a2 + 20 >> 2];
              c[a2 + 84 + 4 >> 2] = c[a2 + 20 + 4 >> 2];
              c[a2 + 84 + 8 >> 2] = c[a2 + 20 + 8 >> 2];
              c[a2 + 84 + 12 >> 2] = c[a2 + 20 + 12 >> 2];
              c[a2 + 100 >> 2] = c[a2 + 36 >> 2];
              c[a2 + 100 + 4 >> 2] = c[a2 + 36 + 4 >> 2];
              c[a2 + 100 + 8 >> 2] = c[a2 + 36 + 8 >> 2];
              c[a2 + 100 + 12 >> 2] = c[a2 + 36 + 12 >> 2];
              c[a2 + 116 >> 2] = c[a2 + 52 >> 2];
              c[a2 + 116 + 4 >> 2] = c[a2 + 52 + 4 >> 2];
              c[a2 + 116 + 8 >> 2] = c[a2 + 52 + 8 >> 2];
              c[a2 + 116 + 12 >> 2] = c[a2 + 52 + 12 >> 2];
              d2 = a2 + 20 | 0;
              e2 = b2 + 16 | 0;
              f2 = a2 + 36 | 0;
              h2 = b2 + 32 | 0;
              i2 = a2 + 52 | 0;
              j2 = b2 + 48 | 0;
              k2 = a2 + 4 | 0;
            }
            c[a2 + 132 >> 2] = c[a2 + 336 >> 2];
            c[a2 + 132 + 4 >> 2] = c[a2 + 336 + 4 >> 2];
            c[a2 + 132 + 8 >> 2] = c[a2 + 336 + 8 >> 2];
            c[a2 + 132 + 12 >> 2] = c[a2 + 336 + 12 >> 2];
            c[a2 + 148 >> 2] = c[a2 + 352 >> 2];
            c[a2 + 148 + 4 >> 2] = c[a2 + 352 + 4 >> 2];
            c[a2 + 148 + 8 >> 2] = c[a2 + 352 + 8 >> 2];
            c[a2 + 148 + 12 >> 2] = c[a2 + 352 + 12 >> 2];
            c[k2 >> 2] = c[b2 >> 2];
            c[k2 + 4 >> 2] = c[b2 + 4 >> 2];
            c[k2 + 8 >> 2] = c[b2 + 8 >> 2];
            c[k2 + 12 >> 2] = c[b2 + 12 >> 2];
            c[d2 >> 2] = c[e2 >> 2];
            c[d2 + 4 >> 2] = c[e2 + 4 >> 2];
            c[d2 + 8 >> 2] = c[e2 + 8 >> 2];
            c[d2 + 12 >> 2] = c[e2 + 12 >> 2];
            c[f2 >> 2] = c[h2 >> 2];
            c[f2 + 4 >> 2] = c[h2 + 4 >> 2];
            c[f2 + 8 >> 2] = c[h2 + 8 >> 2];
            c[f2 + 12 >> 2] = c[h2 + 12 >> 2];
            c[i2 >> 2] = c[j2 >> 2];
            c[i2 + 4 >> 2] = c[j2 + 4 >> 2];
            c[i2 + 8 >> 2] = c[j2 + 8 >> 2];
            c[i2 + 12 >> 2] = c[j2 + 12 >> 2];
            w2 = +g[a2 + 4 >> 2];
            q2 = +g[a2 + 420 >> 2];
            v2 = +g[a2 + 8 >> 2];
            o2 = +g[a2 + 424 >> 2];
            u2 = +g[a2 + 12 >> 2];
            m2 = +g[a2 + 428 >> 2];
            t2 = +g[a2 + 20 >> 2];
            s2 = +g[a2 + 24 >> 2];
            r2 = +g[a2 + 28 >> 2];
            p2 = +g[a2 + 36 >> 2];
            n2 = +g[a2 + 40 >> 2];
            l2 = +g[a2 + 44 >> 2];
            g[a2 + 288 >> 2] = w2 * (w2 * q2) + v2 * (v2 * o2) + u2 * (u2 * m2);
            g[a2 + 292 >> 2] = w2 * q2 * t2 + v2 * o2 * s2 + u2 * m2 * r2;
            g[a2 + 296 >> 2] = w2 * q2 * p2 + v2 * o2 * n2 + u2 * m2 * l2;
            g[a2 + 300 >> 2] = 0;
            g[a2 + 304 >> 2] = w2 * (q2 * t2) + v2 * (o2 * s2) + u2 * (m2 * r2);
            g[a2 + 308 >> 2] = t2 * (q2 * t2) + s2 * (o2 * s2) + r2 * (m2 * r2);
            g[a2 + 312 >> 2] = q2 * t2 * p2 + o2 * s2 * n2 + m2 * r2 * l2;
            g[a2 + 316 >> 2] = 0;
            g[a2 + 320 >> 2] = w2 * (q2 * p2) + v2 * (o2 * n2) + u2 * (m2 * l2);
            g[a2 + 324 >> 2] = t2 * (q2 * p2) + s2 * (o2 * n2) + r2 * (m2 * l2);
            g[a2 + 328 >> 2] = p2 * (q2 * p2) + n2 * (o2 * n2) + l2 * (m2 * l2);
            g[a2 + 332 >> 2] = 0;
            return;
          }
          function Fr(b2, d2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0, i2 = 0, j2 = 0;
            e2 = c[b2 + 512 >> 2] | 0;
            a:
              do
                if ((e2 | 0) > 0) {
                  g2 = c[b2 + 520 >> 2] | 0;
                  f2 = 0;
                  while (1) {
                    if ((c[g2 + (f2 << 2) >> 2] | 0) == (d2 | 0))
                      break;
                    f2 = f2 + 1 | 0;
                    if ((f2 | 0) >= (e2 | 0))
                      break a;
                  }
                  if ((f2 | 0) != (e2 | 0))
                    return;
                }
              while (0);
            if ((e2 | 0) == (c[b2 + 516 >> 2] | 0) ? (h2 = e2 | 0 ? e2 << 1 : 1, (e2 | 0) < (h2 | 0)) : 0) {
              if (!h2)
                g2 = 0;
              else {
                c[5637] = (c[5637] | 0) + 1;
                e2 = qG((h2 << 2 | 3) + 16 | 0) | 0;
                if (!e2)
                  e2 = 0;
                else {
                  c[(e2 + 4 + 15 & -16) + -4 >> 2] = e2;
                  e2 = e2 + 4 + 15 & -16;
                }
                g2 = e2;
                e2 = c[b2 + 512 >> 2] | 0;
              }
              if ((e2 | 0) > 0) {
                f2 = 0;
                do {
                  c[g2 + (f2 << 2) >> 2] = c[(c[b2 + 520 >> 2] | 0) + (f2 << 2) >> 2];
                  f2 = f2 + 1 | 0;
                } while ((f2 | 0) != (e2 | 0));
              }
              f2 = c[b2 + 520 >> 2] | 0;
              if (f2) {
                if (a[b2 + 524 >> 0] | 0) {
                  c[5638] = (c[5638] | 0) + 1;
                  rG(c[f2 + -4 >> 2] | 0);
                  e2 = c[b2 + 512 >> 2] | 0;
                }
                c[b2 + 520 >> 2] = 0;
              }
              a[b2 + 524 >> 0] = 1;
              c[b2 + 520 >> 2] = g2;
              c[b2 + 516 >> 2] = h2;
            }
            c[(c[b2 + 520 >> 2] | 0) + (e2 << 2) >> 2] = d2;
            c[b2 + 512 >> 2] = e2 + 1;
            h2 = c[d2 + 28 >> 2] | 0;
            d2 = c[d2 + 32 >> 2] | 0;
            if ((h2 | 0) == (b2 | 0)) {
              e2 = c[b2 + 268 >> 2] | 0;
              if ((e2 | 0) == (c[b2 + 272 >> 2] | 0) ? (j2 = e2 | 0 ? e2 << 1 : 1, (e2 | 0) < (j2 | 0)) : 0) {
                if (!j2)
                  g2 = 0;
                else {
                  c[5637] = (c[5637] | 0) + 1;
                  e2 = qG((j2 << 2 | 3) + 16 | 0) | 0;
                  if (!e2)
                    e2 = 0;
                  else {
                    c[(e2 + 4 + 15 & -16) + -4 >> 2] = e2;
                    e2 = e2 + 4 + 15 & -16;
                  }
                  g2 = e2;
                  e2 = c[b2 + 268 >> 2] | 0;
                }
                if ((e2 | 0) > 0) {
                  f2 = 0;
                  do {
                    c[g2 + (f2 << 2) >> 2] = c[(c[b2 + 276 >> 2] | 0) + (f2 << 2) >> 2];
                    f2 = f2 + 1 | 0;
                  } while ((f2 | 0) != (e2 | 0));
                }
                f2 = c[b2 + 276 >> 2] | 0;
                if (f2) {
                  if (a[b2 + 280 >> 0] | 0) {
                    c[5638] = (c[5638] | 0) + 1;
                    rG(c[f2 + -4 >> 2] | 0);
                    e2 = c[b2 + 268 >> 2] | 0;
                  }
                  c[b2 + 276 >> 2] = 0;
                }
                a[b2 + 280 >> 0] = 1;
                c[b2 + 276 >> 2] = g2;
                c[b2 + 272 >> 2] = j2;
              }
              c[(c[b2 + 276 >> 2] | 0) + (e2 << 2) >> 2] = d2;
              c[b2 + 268 >> 2] = e2 + 1;
              c[b2 + 260 >> 2] = e2 >>> 31 ^ 1;
              return;
            } else {
              e2 = c[d2 + 268 >> 2] | 0;
              if ((e2 | 0) == (c[d2 + 272 >> 2] | 0) ? (i2 = e2 | 0 ? e2 << 1 : 1, (e2 | 0) < (i2 | 0)) : 0) {
                if (!i2)
                  g2 = 0;
                else {
                  c[5637] = (c[5637] | 0) + 1;
                  e2 = qG((i2 << 2 | 3) + 16 | 0) | 0;
                  if (!e2)
                    e2 = 0;
                  else {
                    c[(e2 + 4 + 15 & -16) + -4 >> 2] = e2;
                    e2 = e2 + 4 + 15 & -16;
                  }
                  g2 = e2;
                  e2 = c[d2 + 268 >> 2] | 0;
                }
                if ((e2 | 0) > 0) {
                  f2 = 0;
                  do {
                    c[g2 + (f2 << 2) >> 2] = c[(c[d2 + 276 >> 2] | 0) + (f2 << 2) >> 2];
                    f2 = f2 + 1 | 0;
                  } while ((f2 | 0) != (e2 | 0));
                }
                f2 = c[d2 + 276 >> 2] | 0;
                if (f2) {
                  if (a[d2 + 280 >> 0] | 0) {
                    c[5638] = (c[5638] | 0) + 1;
                    rG(c[f2 + -4 >> 2] | 0);
                    e2 = c[d2 + 268 >> 2] | 0;
                  }
                  c[d2 + 276 >> 2] = 0;
                }
                a[d2 + 280 >> 0] = 1;
                c[d2 + 276 >> 2] = g2;
                c[d2 + 272 >> 2] = i2;
              }
              c[(c[d2 + 276 >> 2] | 0) + (e2 << 2) >> 2] = h2;
              c[d2 + 268 >> 2] = e2 + 1;
              c[d2 + 260 >> 2] = e2 >>> 31 ^ 1;
              return;
            }
          }
          function Gr(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0, i2 = 0;
            g2 = c[a2 + 512 >> 2] | 0;
            if ((g2 | 0) <= 0)
              return;
            h2 = c[a2 + 520 >> 2] | 0;
            d2 = 0;
            while (1) {
              if ((c[h2 + (d2 << 2) >> 2] | 0) == (b2 | 0))
                break;
              d2 = d2 + 1 | 0;
              if ((d2 | 0) >= (g2 | 0)) {
                i2 = 25;
                break;
              }
            }
            if ((i2 | 0) == 25)
              return;
            if ((d2 | 0) < (g2 | 0))
              f2 = 0;
            else
              return;
            while (1) {
              d2 = h2 + (f2 << 2) | 0;
              if ((c[d2 >> 2] | 0) == (b2 | 0)) {
                i2 = 8;
                break;
              }
              e2 = f2 + 1 | 0;
              if ((e2 | 0) < (g2 | 0))
                f2 = e2;
              else
                break;
            }
            if ((i2 | 0) == 8 ? (f2 | 0) < (g2 | 0) : 0) {
              c[d2 >> 2] = c[h2 + (g2 + -1 << 2) >> 2];
              c[(c[a2 + 520 >> 2] | 0) + (g2 + -1 << 2) >> 2] = b2;
              c[a2 + 512 >> 2] = g2 + -1;
            }
            h2 = c[b2 + 28 >> 2] | 0;
            i2 = c[b2 + 32 >> 2] | 0;
            if ((h2 | 0) == (a2 | 0)) {
              d2 = c[a2 + 268 >> 2] | 0;
              a:
                do
                  if ((d2 | 0) > 0) {
                    g2 = c[a2 + 276 >> 2] | 0;
                    e2 = 0;
                    while (1) {
                      f2 = g2 + (e2 << 2) | 0;
                      if ((c[f2 >> 2] | 0) == (i2 | 0))
                        break;
                      e2 = e2 + 1 | 0;
                      if ((e2 | 0) >= (d2 | 0))
                        break a;
                    }
                    if ((e2 | 0) < (d2 | 0)) {
                      c[f2 >> 2] = c[g2 + (d2 + -1 << 2) >> 2];
                      c[(c[a2 + 276 >> 2] | 0) + (d2 + -1 << 2) >> 2] = i2;
                      c[a2 + 268 >> 2] = d2 + -1;
                      d2 = d2 + -1 | 0;
                    }
                  }
                while (0);
              c[a2 + 260 >> 2] = (d2 | 0) > 0 & 1;
              return;
            } else {
              d2 = c[i2 + 268 >> 2] | 0;
              b:
                do
                  if ((d2 | 0) > 0) {
                    g2 = c[i2 + 276 >> 2] | 0;
                    e2 = 0;
                    while (1) {
                      f2 = g2 + (e2 << 2) | 0;
                      if ((c[f2 >> 2] | 0) == (h2 | 0))
                        break;
                      e2 = e2 + 1 | 0;
                      if ((e2 | 0) >= (d2 | 0))
                        break b;
                    }
                    if ((e2 | 0) < (d2 | 0)) {
                      c[f2 >> 2] = c[g2 + (d2 + -1 << 2) >> 2];
                      c[(c[i2 + 276 >> 2] | 0) + (d2 + -1 << 2) >> 2] = h2;
                      c[i2 + 268 >> 2] = d2 + -1;
                      d2 = d2 + -1 | 0;
                    }
                  }
                while (0);
              c[i2 + 260 >> 2] = (d2 | 0) > 0 & 1;
              return;
            }
          }
          function Hr(b2) {
            b2 = b2 | 0;
            var d2 = 0;
            c[b2 >> 2] = 7952;
            d2 = c[b2 + 136 >> 2] | 0;
            if (d2 | 0) {
              if (a[b2 + 140 >> 0] | 0) {
                c[5638] = (c[5638] | 0) + 1;
                rG(c[d2 + -4 >> 2] | 0);
              }
              c[b2 + 136 >> 2] = 0;
            }
            a[b2 + 140 >> 0] = 1;
            c[b2 + 136 >> 2] = 0;
            c[b2 + 128 >> 2] = 0;
            c[b2 + 132 >> 2] = 0;
            d2 = c[b2 + 76 >> 2] | 0;
            if (d2 | 0) {
              if (a[b2 + 80 >> 0] | 0) {
                c[5638] = (c[5638] | 0) + 1;
                rG(c[d2 + -4 >> 2] | 0);
              }
              c[b2 + 76 >> 2] = 0;
            }
            a[b2 + 80 >> 0] = 1;
            c[b2 + 76 >> 2] = 0;
            c[b2 + 68 >> 2] = 0;
            c[b2 + 72 >> 2] = 0;
            d2 = c[b2 + 56 >> 2] | 0;
            if (d2 | 0) {
              if (a[b2 + 60 >> 0] | 0) {
                c[5638] = (c[5638] | 0) + 1;
                rG(c[d2 + -4 >> 2] | 0);
              }
              c[b2 + 56 >> 2] = 0;
            }
            a[b2 + 60 >> 0] = 1;
            c[b2 + 56 >> 2] = 0;
            c[b2 + 48 >> 2] = 0;
            c[b2 + 52 >> 2] = 0;
            d2 = c[b2 + 36 >> 2] | 0;
            if (d2 | 0) {
              if (a[b2 + 40 >> 0] | 0) {
                c[5638] = (c[5638] | 0) + 1;
                rG(c[d2 + -4 >> 2] | 0);
              }
              c[b2 + 36 >> 2] = 0;
            }
            a[b2 + 40 >> 0] = 1;
            c[b2 + 36 >> 2] = 0;
            c[b2 + 28 >> 2] = 0;
            c[b2 + 32 >> 2] = 0;
            d2 = c[b2 + 16 >> 2] | 0;
            if (!d2) {
              a[b2 + 20 >> 0] = 1;
              c[b2 + 16 >> 2] = 0;
              c[b2 + 8 >> 2] = 0;
              b2 = b2 + 12 | 0;
              c[b2 >> 2] = 0;
              return;
            }
            if (a[b2 + 20 >> 0] | 0) {
              c[5638] = (c[5638] | 0) + 1;
              rG(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 16 >> 2] = 0;
            a[b2 + 20 >> 0] = 1;
            c[b2 + 16 >> 2] = 0;
            c[b2 + 8 >> 2] = 0;
            b2 = b2 + 12 | 0;
            c[b2 >> 2] = 0;
            return;
          }
          function Ir(a2) {
            a2 = a2 | 0;
            Hr(a2);
            rG(a2);
            return;
          }
          function Jr(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = +d2;
            qb[c[(c[a2 >> 2] | 0) + 16 >> 2] & 31](a2, d2);
            return;
          }
          function Kr(b2, d2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0;
            f2 = i;
            i = i + 48 | 0;
            if ((c[b2 + 128 >> 2] | 0) <= 0) {
              i = f2;
              return;
            }
            e2 = 0;
            do {
              m2 = c[b2 + 136 >> 2] | 0;
              c[f2 + 32 >> 2] = (a[m2 + (e2 * 284 | 0) + 84 >> 0] | 0) == 0 ? 1065353216 : 0;
              c[f2 + 32 + 4 >> 2] = 0;
              c[f2 + 32 + 8 >> 2] = 1065353216;
              g[f2 + 32 + 12 >> 2] = 0;
              l2 = m2 + (e2 * 284 | 0) + 140 | 0;
              c[f2 + 16 >> 2] = c[l2 >> 2];
              c[f2 + 16 + 4 >> 2] = c[l2 + 4 >> 2];
              c[f2 + 16 + 8 >> 2] = c[l2 + 8 >> 2];
              c[f2 + 16 + 12 >> 2] = c[l2 + 12 >> 2];
              l2 = c[b2 + 112 >> 2] | 0;
              h2 = c[(c[d2 >> 2] | 0) + 16 >> 2] | 0;
              k2 = +g[m2 + (e2 * 284 | 0) + 108 + (l2 << 2) >> 2] + +g[f2 + 16 + 4 >> 2];
              j2 = +g[m2 + (e2 * 284 | 0) + 124 + (l2 << 2) >> 2] + +g[f2 + 16 + 8 >> 2];
              g[f2 >> 2] = +g[m2 + (e2 * 284 | 0) + 92 + (l2 << 2) >> 2] + +g[f2 + 16 >> 2];
              g[f2 + 4 >> 2] = k2;
              g[f2 + 8 >> 2] = j2;
              g[f2 + 12 >> 2] = 0;
              bc[h2 & 127](d2, f2 + 16 | 0, f2, f2 + 32 | 0);
              bc[c[(c[d2 >> 2] | 0) + 16 >> 2] & 127](d2, f2 + 16 | 0, (c[b2 + 136 >> 2] | 0) + (e2 * 284 | 0) + 16 | 0, f2 + 32 | 0);
              e2 = e2 + 1 | 0;
            } while ((e2 | 0) < (c[b2 + 128 >> 2] | 0));
            i = f2;
            return;
          }
          function Gm(a2, b2, f2, j2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            f2 = f2 | 0;
            j2 = j2 | 0;
            var k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0;
            o2 = i;
            i = i + 80 | 0;
            f2 = vb[c[(c[a2 >> 2] | 0) + 28 >> 2] & 127](a2) | 0;
            k2 = +g[a2 + 4 >> 2];
            l2 = +g[a2 + 8 >> 2];
            m2 = +g[a2 + 12 >> 2];
            if ((f2 | 0) <= 0) {
              i = o2;
              return;
            }
            n2 = 0;
            do {
              Nb[c[(c[a2 >> 2] | 0) + 16 >> 2] & 3](a2, o2 + 76 | 0, o2 + 52 | 0, o2 + 64 | 0, o2 + 56 | 0, o2 + 72 | 0, o2 + 68 | 0, o2 + 48 | 0, o2 + 60 | 0, n2);
              a:
                do
                  switch (c[o2 + 64 >> 2] | 0) {
                    case 0: {
                      switch (c[o2 + 60 >> 2] | 0) {
                        case 2: {
                          if ((c[o2 + 48 >> 2] | 0) > 0)
                            j2 = 0;
                          else
                            break a;
                          do {
                            r2 = (c[o2 + 72 >> 2] | 0) + (_(c[o2 + 68 >> 2] | 0, j2) | 0) | 0;
                            t2 = c[o2 + 76 >> 2] | 0;
                            s2 = c[o2 + 56 >> 2] | 0;
                            u2 = t2 + (_(s2, c[r2 >> 2] | 0) | 0) | 0;
                            q2 = l2 * +g[u2 + 4 >> 2];
                            p2 = m2 * +g[u2 + 8 >> 2];
                            g[o2 >> 2] = k2 * +g[u2 >> 2];
                            g[o2 + 4 >> 2] = q2;
                            g[o2 + 8 >> 2] = p2;
                            g[o2 + 12 >> 2] = 0;
                            u2 = t2 + (_(s2, c[r2 + 4 >> 2] | 0) | 0) | 0;
                            p2 = l2 * +g[u2 + 4 >> 2];
                            q2 = m2 * +g[u2 + 8 >> 2];
                            g[o2 + 16 >> 2] = k2 * +g[u2 >> 2];
                            g[o2 + 20 >> 2] = p2;
                            g[o2 + 24 >> 2] = q2;
                            g[o2 + 28 >> 2] = 0;
                            r2 = t2 + (_(s2, c[r2 + 8 >> 2] | 0) | 0) | 0;
                            q2 = l2 * +g[r2 + 4 >> 2];
                            p2 = m2 * +g[r2 + 8 >> 2];
                            g[o2 + 32 >> 2] = k2 * +g[r2 >> 2];
                            g[o2 + 36 >> 2] = q2;
                            g[o2 + 40 >> 2] = p2;
                            g[o2 + 44 >> 2] = 0;
                            bc[c[(c[b2 >> 2] | 0) + 8 >> 2] & 127](b2, o2, n2, j2);
                            j2 = j2 + 1 | 0;
                          } while ((j2 | 0) < (c[o2 + 48 >> 2] | 0));
                          break;
                        }
                        case 3: {
                          if ((c[o2 + 48 >> 2] | 0) > 0)
                            j2 = 0;
                          else
                            break a;
                          do {
                            t2 = (c[o2 + 72 >> 2] | 0) + (_(c[o2 + 68 >> 2] | 0, j2) | 0) | 0;
                            s2 = c[o2 + 76 >> 2] | 0;
                            u2 = c[o2 + 56 >> 2] | 0;
                            r2 = s2 + (_(e[t2 >> 1] | 0, u2) | 0) | 0;
                            p2 = l2 * +g[r2 + 4 >> 2];
                            q2 = m2 * +g[r2 + 8 >> 2];
                            g[o2 >> 2] = k2 * +g[r2 >> 2];
                            g[o2 + 4 >> 2] = p2;
                            g[o2 + 8 >> 2] = q2;
                            g[o2 + 12 >> 2] = 0;
                            r2 = s2 + (_(e[t2 + 2 >> 1] | 0, u2) | 0) | 0;
                            q2 = l2 * +g[r2 + 4 >> 2];
                            p2 = m2 * +g[r2 + 8 >> 2];
                            g[o2 + 16 >> 2] = k2 * +g[r2 >> 2];
                            g[o2 + 20 >> 2] = q2;
                            g[o2 + 24 >> 2] = p2;
                            g[o2 + 28 >> 2] = 0;
                            u2 = s2 + (_(e[t2 + 4 >> 1] | 0, u2) | 0) | 0;
                            p2 = l2 * +g[u2 + 4 >> 2];
                            q2 = m2 * +g[u2 + 8 >> 2];
                            g[o2 + 32 >> 2] = k2 * +g[u2 >> 2];
                            g[o2 + 36 >> 2] = p2;
                            g[o2 + 40 >> 2] = q2;
                            g[o2 + 44 >> 2] = 0;
                            bc[c[(c[b2 >> 2] | 0) + 8 >> 2] & 127](b2, o2, n2, j2);
                            j2 = j2 + 1 | 0;
                          } while ((j2 | 0) < (c[o2 + 48 >> 2] | 0));
                          break;
                        }
                        case 5: {
                          if ((c[o2 + 48 >> 2] | 0) > 0)
                            j2 = 0;
                          else
                            break a;
                          do {
                            t2 = (c[o2 + 72 >> 2] | 0) + (_(c[o2 + 68 >> 2] | 0, j2) | 0) | 0;
                            s2 = c[o2 + 76 >> 2] | 0;
                            u2 = c[o2 + 56 >> 2] | 0;
                            r2 = s2 + (_(d[t2 >> 0] | 0, u2) | 0) | 0;
                            p2 = l2 * +g[r2 + 4 >> 2];
                            q2 = m2 * +g[r2 + 8 >> 2];
                            g[o2 >> 2] = k2 * +g[r2 >> 2];
                            g[o2 + 4 >> 2] = p2;
                            g[o2 + 8 >> 2] = q2;
                            g[o2 + 12 >> 2] = 0;
                            r2 = s2 + (_(d[t2 + 1 >> 0] | 0, u2) | 0) | 0;
                            q2 = l2 * +g[r2 + 4 >> 2];
                            p2 = m2 * +g[r2 + 8 >> 2];
                            g[o2 + 16 >> 2] = k2 * +g[r2 >> 2];
                            g[o2 + 20 >> 2] = q2;
                            g[o2 + 24 >> 2] = p2;
                            g[o2 + 28 >> 2] = 0;
                            u2 = s2 + (_(d[t2 + 2 >> 0] | 0, u2) | 0) | 0;
                            p2 = l2 * +g[u2 + 4 >> 2];
                            q2 = m2 * +g[u2 + 8 >> 2];
                            g[o2 + 32 >> 2] = k2 * +g[u2 >> 2];
                            g[o2 + 36 >> 2] = p2;
                            g[o2 + 40 >> 2] = q2;
                            g[o2 + 44 >> 2] = 0;
                            bc[c[(c[b2 >> 2] | 0) + 8 >> 2] & 127](b2, o2, n2, j2);
                            j2 = j2 + 1 | 0;
                          } while ((j2 | 0) < (c[o2 + 48 >> 2] | 0));
                          break;
                        }
                        default:
                          break a;
                      }
                      break;
                    }
                    case 1: {
                      switch (c[o2 + 60 >> 2] | 0) {
                        case 2: {
                          if ((c[o2 + 48 >> 2] | 0) > 0)
                            j2 = 0;
                          else
                            break a;
                          do {
                            u2 = (c[o2 + 72 >> 2] | 0) + (_(c[o2 + 68 >> 2] | 0, j2) | 0) | 0;
                            s2 = c[o2 + 76 >> 2] | 0;
                            t2 = c[o2 + 56 >> 2] | 0;
                            r2 = s2 + (_(t2, c[u2 >> 2] | 0) | 0) | 0;
                            p2 = l2 * +h[r2 + 8 >> 3];
                            q2 = m2 * +h[r2 + 16 >> 3];
                            g[o2 >> 2] = k2 * +h[r2 >> 3];
                            g[o2 + 4 >> 2] = p2;
                            g[o2 + 8 >> 2] = q2;
                            g[o2 + 12 >> 2] = 0;
                            r2 = s2 + (_(t2, c[u2 + 4 >> 2] | 0) | 0) | 0;
                            q2 = l2 * +h[r2 + 8 >> 3];
                            p2 = m2 * +h[r2 + 16 >> 3];
                            g[o2 + 16 >> 2] = k2 * +h[r2 >> 3];
                            g[o2 + 20 >> 2] = q2;
                            g[o2 + 24 >> 2] = p2;
                            g[o2 + 28 >> 2] = 0;
                            u2 = s2 + (_(t2, c[u2 + 8 >> 2] | 0) | 0) | 0;
                            p2 = l2 * +h[u2 + 8 >> 3];
                            q2 = m2 * +h[u2 + 16 >> 3];
                            g[o2 + 32 >> 2] = k2 * +h[u2 >> 3];
                            g[o2 + 36 >> 2] = p2;
                            g[o2 + 40 >> 2] = q2;
                            g[o2 + 44 >> 2] = 0;
                            bc[c[(c[b2 >> 2] | 0) + 8 >> 2] & 127](b2, o2, n2, j2);
                            j2 = j2 + 1 | 0;
                          } while ((j2 | 0) < (c[o2 + 48 >> 2] | 0));
                          break;
                        }
                        case 3: {
                          if ((c[o2 + 48 >> 2] | 0) > 0)
                            j2 = 0;
                          else
                            break a;
                          do {
                            t2 = (c[o2 + 72 >> 2] | 0) + (_(c[o2 + 68 >> 2] | 0, j2) | 0) | 0;
                            s2 = c[o2 + 76 >> 2] | 0;
                            u2 = c[o2 + 56 >> 2] | 0;
                            r2 = s2 + (_(e[t2 >> 1] | 0, u2) | 0) | 0;
                            p2 = l2 * +h[r2 + 8 >> 3];
                            q2 = m2 * +h[r2 + 16 >> 3];
                            g[o2 >> 2] = k2 * +h[r2 >> 3];
                            g[o2 + 4 >> 2] = p2;
                            g[o2 + 8 >> 2] = q2;
                            g[o2 + 12 >> 2] = 0;
                            r2 = s2 + (_(e[t2 + 2 >> 1] | 0, u2) | 0) | 0;
                            q2 = l2 * +h[r2 + 8 >> 3];
                            p2 = m2 * +h[r2 + 16 >> 3];
                            g[o2 + 16 >> 2] = k2 * +h[r2 >> 3];
                            g[o2 + 20 >> 2] = q2;
                            g[o2 + 24 >> 2] = p2;
                            g[o2 + 28 >> 2] = 0;
                            u2 = s2 + (_(e[t2 + 4 >> 1] | 0, u2) | 0) | 0;
                            p2 = l2 * +h[u2 + 8 >> 3];
                            q2 = m2 * +h[u2 + 16 >> 3];
                            g[o2 + 32 >> 2] = k2 * +h[u2 >> 3];
                            g[o2 + 36 >> 2] = p2;
                            g[o2 + 40 >> 2] = q2;
                            g[o2 + 44 >> 2] = 0;
                            bc[c[(c[b2 >> 2] | 0) + 8 >> 2] & 127](b2, o2, n2, j2);
                            j2 = j2 + 1 | 0;
                          } while ((j2 | 0) < (c[o2 + 48 >> 2] | 0));
                          break;
                        }
                        case 5: {
                          if ((c[o2 + 48 >> 2] | 0) > 0)
                            j2 = 0;
                          else
                            break a;
                          do {
                            t2 = (c[o2 + 72 >> 2] | 0) + (_(c[o2 + 68 >> 2] | 0, j2) | 0) | 0;
                            s2 = c[o2 + 76 >> 2] | 0;
                            u2 = c[o2 + 56 >> 2] | 0;
                            r2 = s2 + (_(d[t2 >> 0] | 0, u2) | 0) | 0;
                            p2 = l2 * +h[r2 + 8 >> 3];
                            q2 = m2 * +h[r2 + 16 >> 3];
                            g[o2 >> 2] = k2 * +h[r2 >> 3];
                            g[o2 + 4 >> 2] = p2;
                            g[o2 + 8 >> 2] = q2;
                            g[o2 + 12 >> 2] = 0;
                            r2 = s2 + (_(d[t2 + 1 >> 0] | 0, u2) | 0) | 0;
                            q2 = l2 * +h[r2 + 8 >> 3];
                            p2 = m2 * +h[r2 + 16 >> 3];
                            g[o2 + 16 >> 2] = k2 * +h[r2 >> 3];
                            g[o2 + 20 >> 2] = q2;
                            g[o2 + 24 >> 2] = p2;
                            g[o2 + 28 >> 2] = 0;
                            u2 = s2 + (_(d[t2 + 2 >> 0] | 0, u2) | 0) | 0;
                            p2 = l2 * +h[u2 + 8 >> 3];
                            q2 = m2 * +h[u2 + 16 >> 3];
                            g[o2 + 32 >> 2] = k2 * +h[u2 >> 3];
                            g[o2 + 36 >> 2] = p2;
                            g[o2 + 40 >> 2] = q2;
                            g[o2 + 44 >> 2] = 0;
                            bc[c[(c[b2 >> 2] | 0) + 8 >> 2] & 127](b2, o2, n2, j2);
                            j2 = j2 + 1 | 0;
                          } while ((j2 | 0) < (c[o2 + 48 >> 2] | 0));
                          break;
                        }
                        default:
                          break a;
                      }
                      break;
                    }
                    default: {
                    }
                  }
                while (0);
              tb[c[(c[a2 >> 2] | 0) + 24 >> 2] & 127](a2, n2);
              n2 = n2 + 1 | 0;
            } while ((n2 | 0) != (f2 | 0));
            i = o2;
            return;
          }
          function Hm(a2) {
            a2 = a2 | 0;
            return 28;
          }
          function Im(d2, e2, f2) {
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            var g2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0;
            t2 = i;
            i = i + 32 | 0;
            g2 = vb[c[(c[d2 >> 2] | 0) + 28 >> 2] & 127](d2) | 0;
            c[e2 + 20 >> 2] = g2;
            c[e2 >> 2] = 0;
            if (!g2) {
              s2 = d2 + 4 | 0;
              f2 = e2 + 4 | 0;
              s2 = c[s2 >> 2] | 0;
              c[f2 >> 2] = s2;
              f2 = d2 + 8 | 0;
              f2 = c[f2 >> 2] | 0;
              s2 = e2 + 8 | 0;
              c[s2 >> 2] = f2;
              s2 = d2 + 12 | 0;
              s2 = c[s2 >> 2] | 0;
              f2 = e2 + 12 | 0;
              c[f2 >> 2] = s2;
              f2 = d2 + 16 | 0;
              f2 = c[f2 >> 2] | 0;
              d2 = e2 + 16 | 0;
              c[d2 >> 2] = f2;
              i = t2;
              return 14151;
            }
            s2 = Eb[c[(c[f2 >> 2] | 0) + 16 >> 2] & 63](f2, 32, g2) | 0;
            g2 = c[s2 + 8 >> 2] | 0;
            c[e2 >> 2] = Ob[c[(c[f2 >> 2] | 0) + 28 >> 2] & 31](f2, g2) | 0;
            r2 = vb[c[(c[d2 >> 2] | 0) + 28 >> 2] & 127](d2) | 0;
            a:
              do
                if ((r2 | 0) > 0) {
                  q2 = 0;
                  while (1) {
                    Nb[c[(c[d2 >> 2] | 0) + 16 >> 2] & 3](d2, t2 + 28 | 0, t2 + 4 | 0, t2 + 16 | 0, t2 + 8 | 0, t2 + 24 | 0, t2 + 20 | 0, t2, t2 + 12 | 0, q2);
                    c[g2 + 24 >> 2] = c[t2 >> 2];
                    c[g2 + 28 >> 2] = c[t2 + 4 >> 2];
                    k2 = g2 + 12 | 0;
                    m2 = g2 + 16 | 0;
                    p2 = g2 + 4 | 0;
                    c[g2 >> 2] = 0;
                    c[g2 + 4 >> 2] = 0;
                    c[g2 + 8 >> 2] = 0;
                    c[g2 + 12 >> 2] = 0;
                    c[g2 + 16 >> 2] = 0;
                    c[g2 + 20 >> 2] = 0;
                    switch (c[t2 + 12 >> 2] | 0) {
                      case 2: {
                        j2 = c[t2 >> 2] | 0;
                        if (j2 | 0) {
                          j2 = Eb[c[(c[f2 >> 2] | 0) + 16 >> 2] & 63](f2, 4, j2 * 3 | 0) | 0;
                          k2 = c[j2 + 8 >> 2] | 0;
                          c[g2 + 8 >> 2] = Ob[c[(c[f2 >> 2] | 0) + 28 >> 2] & 31](f2, k2) | 0;
                          if ((c[t2 >> 2] | 0) > 0) {
                            l2 = c[t2 + 24 >> 2] | 0;
                            m2 = 0;
                            do {
                              n2 = l2 + (_(c[t2 + 20 >> 2] | 0, m2) | 0) | 0;
                              o2 = m2 * 3 | 0;
                              c[k2 + (o2 << 2) >> 2] = c[n2 >> 2];
                              c[k2 + (o2 + 1 << 2) >> 2] = c[n2 + 4 >> 2];
                              c[k2 + (o2 + 2 << 2) >> 2] = c[n2 + 8 >> 2];
                              m2 = m2 + 1 | 0;
                            } while ((m2 | 0) < (c[t2 >> 2] | 0));
                          }
                          pb[c[(c[f2 >> 2] | 0) + 20 >> 2] & 31](f2, j2, 14051, 1497453121, c[j2 + 8 >> 2] | 0);
                        }
                        break;
                      }
                      case 3: {
                        j2 = c[t2 >> 2] | 0;
                        if (j2 | 0) {
                          n2 = Eb[c[(c[f2 >> 2] | 0) + 16 >> 2] & 63](f2, 8, j2) | 0;
                          o2 = c[n2 + 8 >> 2] | 0;
                          c[k2 >> 2] = Ob[c[(c[f2 >> 2] | 0) + 28 >> 2] & 31](f2, o2) | 0;
                          j2 = c[t2 >> 2] | 0;
                          if ((j2 | 0) > 0) {
                            k2 = c[t2 + 24 >> 2] | 0;
                            l2 = c[t2 + 20 >> 2] | 0;
                            m2 = 0;
                            do {
                              u2 = k2 + (_(l2, m2) | 0) | 0;
                              b[o2 + (m2 << 3) >> 1] = b[u2 >> 1] | 0;
                              b[o2 + (m2 << 3) + 2 >> 1] = b[u2 + 2 >> 1] | 0;
                              b[o2 + (m2 << 3) + 4 >> 1] = b[u2 + 4 >> 1] | 0;
                              m2 = m2 + 1 | 0;
                            } while ((m2 | 0) != (j2 | 0));
                          }
                          pb[c[(c[f2 >> 2] | 0) + 20 >> 2] & 31](f2, n2, 14066, 1497453121, c[n2 + 8 >> 2] | 0);
                        }
                        break;
                      }
                      case 5: {
                        j2 = c[t2 >> 2] | 0;
                        if (j2 | 0) {
                          k2 = Eb[c[(c[f2 >> 2] | 0) + 16 >> 2] & 63](f2, 4, j2) | 0;
                          l2 = c[k2 + 8 >> 2] | 0;
                          c[m2 >> 2] = Ob[c[(c[f2 >> 2] | 0) + 28 >> 2] & 31](f2, l2) | 0;
                          if ((c[t2 >> 2] | 0) > 0) {
                            j2 = 0;
                            do {
                              u2 = (c[t2 + 24 >> 2] | 0) + (_(c[t2 + 20 >> 2] | 0, j2) | 0) | 0;
                              a[l2 + (j2 << 2) >> 0] = a[u2 >> 0] | 0;
                              a[l2 + (j2 << 2) + 1 >> 0] = a[u2 + 1 >> 0] | 0;
                              a[l2 + (j2 << 2) + 2 >> 0] = a[u2 + 2 >> 0] | 0;
                              j2 = j2 + 1 | 0;
                            } while ((j2 | 0) < (c[t2 >> 2] | 0));
                          }
                          pb[c[(c[f2 >> 2] | 0) + 20 >> 2] & 31](f2, k2, 14093, 1497453121, c[k2 + 8 >> 2] | 0);
                        }
                        break;
                      }
                      default: {
                      }
                    }
                    switch (c[t2 + 16 >> 2] | 0) {
                      case 0: {
                        j2 = c[t2 + 4 >> 2] | 0;
                        if (j2 | 0) {
                          j2 = Eb[c[(c[f2 >> 2] | 0) + 16 >> 2] & 63](f2, 16, j2) | 0;
                          k2 = c[j2 + 8 >> 2] | 0;
                          c[g2 >> 2] = Ob[c[(c[f2 >> 2] | 0) + 28 >> 2] & 31](f2, k2) | 0;
                          l2 = c[t2 + 4 >> 2] | 0;
                          if ((l2 | 0) > 0) {
                            m2 = c[t2 + 28 >> 2] | 0;
                            n2 = c[t2 + 8 >> 2] | 0;
                            o2 = 0;
                            do {
                              u2 = m2 + (_(n2, o2) | 0) | 0;
                              c[k2 + (o2 << 4) >> 2] = c[u2 >> 2];
                              c[k2 + (o2 << 4) + 4 >> 2] = c[u2 + 4 >> 2];
                              c[k2 + (o2 << 4) + 8 >> 2] = c[u2 + 8 >> 2];
                              o2 = o2 + 1 | 0;
                            } while ((o2 | 0) != (l2 | 0));
                          }
                          pb[c[(c[f2 >> 2] | 0) + 20 >> 2] & 31](f2, j2, 16354, 1497453121, c[j2 + 8 >> 2] | 0);
                        }
                        break;
                      }
                      case 1: {
                        j2 = c[t2 + 4 >> 2] | 0;
                        if (j2 | 0) {
                          n2 = Eb[c[(c[f2 >> 2] | 0) + 16 >> 2] & 63](f2, 32, j2) | 0;
                          o2 = c[n2 + 8 >> 2] | 0;
                          c[p2 >> 2] = Ob[c[(c[f2 >> 2] | 0) + 28 >> 2] & 31](f2, o2) | 0;
                          j2 = c[t2 + 4 >> 2] | 0;
                          if ((j2 | 0) > 0) {
                            k2 = c[t2 + 28 >> 2] | 0;
                            l2 = c[t2 + 8 >> 2] | 0;
                            m2 = 0;
                            do {
                              u2 = k2 + (_(l2, m2) | 0) | 0;
                              h[o2 + (m2 << 5) >> 3] = +h[u2 >> 3];
                              h[o2 + (m2 << 5) + 8 >> 3] = +h[u2 + 8 >> 3];
                              h[o2 + (m2 << 5) + 16 >> 3] = +h[u2 + 16 >> 3];
                              m2 = m2 + 1 | 0;
                            } while ((m2 | 0) != (j2 | 0));
                          }
                          pb[c[(c[f2 >> 2] | 0) + 20 >> 2] & 31](f2, n2, 14116, 1497453121, c[n2 + 8 >> 2] | 0);
                        }
                        break;
                      }
                      default: {
                      }
                    }
                    tb[c[(c[d2 >> 2] | 0) + 24 >> 2] & 127](d2, q2);
                    q2 = q2 + 1 | 0;
                    if ((q2 | 0) == (r2 | 0)) {
                      g2 = f2;
                      break a;
                    } else
                      g2 = g2 + 32 | 0;
                  }
                } else
                  g2 = f2;
              while (0);
            pb[c[(c[g2 >> 2] | 0) + 20 >> 2] & 31](f2, s2, 14136, 1497453121, c[s2 + 8 >> 2] | 0);
            f2 = d2 + 4 | 0;
            u2 = e2 + 4 | 0;
            f2 = c[f2 >> 2] | 0;
            c[u2 >> 2] = f2;
            u2 = d2 + 8 | 0;
            u2 = c[u2 >> 2] | 0;
            f2 = e2 + 8 | 0;
            c[f2 >> 2] = u2;
            f2 = d2 + 12 | 0;
            f2 = c[f2 >> 2] | 0;
            u2 = e2 + 12 | 0;
            c[u2 >> 2] = f2;
            d2 = d2 + 16 | 0;
            d2 = c[d2 >> 2] | 0;
            u2 = e2 + 16 | 0;
            c[u2 >> 2] = d2;
            i = t2;
            return 14151;
          }
          function Jm(a2) {
            a2 = a2 | 0;
            return;
          }
          function Km(a2) {
            a2 = a2 | 0;
            return;
          }
          function Lm(b2) {
            b2 = b2 | 0;
            var d2 = 0;
            c[b2 >> 2] = 6556;
            d2 = c[b2 + 32 >> 2] | 0;
            if (d2 | 0) {
              if (a[b2 + 36 >> 0] | 0) {
                c[5638] = (c[5638] | 0) + 1;
                rG(c[d2 + -4 >> 2] | 0);
              }
              c[b2 + 32 >> 2] = 0;
            }
            a[b2 + 36 >> 0] = 1;
            c[b2 + 32 >> 2] = 0;
            c[b2 + 24 >> 2] = 0;
            c[b2 + 28 >> 2] = 0;
            return;
          }
          function Mm(b2) {
            b2 = b2 | 0;
            var d2 = 0;
            c[b2 >> 2] = 6556;
            d2 = c[b2 + 32 >> 2] | 0;
            if (d2 | 0) {
              if (a[b2 + 36 >> 0] | 0) {
                c[5638] = (c[5638] | 0) + 1;
                rG(c[d2 + -4 >> 2] | 0);
              }
              c[b2 + 32 >> 2] = 0;
            }
            a[b2 + 36 >> 0] = 1;
            c[b2 + 32 >> 2] = 0;
            c[b2 + 24 >> 2] = 0;
            c[b2 + 28 >> 2] = 0;
            c[5638] = (c[5638] | 0) + 1;
            rG(c[b2 + -4 >> 2] | 0);
            return;
          }
          function Nm(a2, b2, d2, e2, f2, g2, h2, i2, j2, k2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            g2 = g2 | 0;
            h2 = h2 | 0;
            i2 = i2 | 0;
            j2 = j2 | 0;
            k2 = k2 | 0;
            a2 = c[a2 + 32 >> 2] | 0;
            c[d2 >> 2] = c[a2 + (k2 << 5) + 12 >> 2];
            c[b2 >> 2] = c[a2 + (k2 << 5) + 16 >> 2];
            c[e2 >> 2] = c[a2 + (k2 << 5) + 28 >> 2];
            c[f2 >> 2] = c[a2 + (k2 << 5) + 20 >> 2];
            c[i2 >> 2] = c[a2 + (k2 << 5) >> 2];
            c[g2 >> 2] = c[a2 + (k2 << 5) + 4 >> 2];
            c[h2 >> 2] = c[a2 + (k2 << 5) + 8 >> 2];
            c[j2 >> 2] = c[a2 + (k2 << 5) + 24 >> 2];
            return;
          }
          function Om(a2, b2, d2, e2, f2, g2, h2, i2, j2, k2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            g2 = g2 | 0;
            h2 = h2 | 0;
            i2 = i2 | 0;
            j2 = j2 | 0;
            k2 = k2 | 0;
            a2 = c[a2 + 32 >> 2] | 0;
            c[d2 >> 2] = c[a2 + (k2 << 5) + 12 >> 2];
            c[b2 >> 2] = c[a2 + (k2 << 5) + 16 >> 2];
            c[e2 >> 2] = c[a2 + (k2 << 5) + 28 >> 2];
            c[f2 >> 2] = c[a2 + (k2 << 5) + 20 >> 2];
            c[i2 >> 2] = c[a2 + (k2 << 5) >> 2];
            c[g2 >> 2] = c[a2 + (k2 << 5) + 4 >> 2];
            c[h2 >> 2] = c[a2 + (k2 << 5) + 8 >> 2];
            c[j2 >> 2] = c[a2 + (k2 << 5) + 24 >> 2];
            return;
          }
          function Pm(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            return;
          }
          function Qm(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            return;
          }
          function Rm(a2) {
            a2 = a2 | 0;
            return c[a2 + 24 >> 2] | 0;
          }
          function Sm(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            return;
          }
          function Tm(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            return;
          }
          function Um(a2) {
            a2 = a2 | 0;
            return (c[a2 + 48 >> 2] | 0) == 1 | 0;
          }
          function Vm(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            c[a2 + 52 >> 2] = c[b2 >> 2];
            c[a2 + 52 + 4 >> 2] = c[b2 + 4 >> 2];
            c[a2 + 52 + 8 >> 2] = c[b2 + 8 >> 2];
            c[a2 + 52 + 12 >> 2] = c[b2 + 12 >> 2];
            c[a2 + 68 >> 2] = c[d2 >> 2];
            c[a2 + 68 + 4 >> 2] = c[d2 + 4 >> 2];
            c[a2 + 68 + 8 >> 2] = c[d2 + 8 >> 2];
            c[a2 + 68 + 12 >> 2] = c[d2 + 12 >> 2];
            c[a2 + 48 >> 2] = 1;
            return;
          }
          function Wm(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            c[b2 >> 2] = c[a2 + 52 >> 2];
            c[b2 + 4 >> 2] = c[a2 + 52 + 4 >> 2];
            c[b2 + 8 >> 2] = c[a2 + 52 + 8 >> 2];
            c[b2 + 12 >> 2] = c[a2 + 52 + 12 >> 2];
            c[d2 >> 2] = c[a2 + 68 >> 2];
            c[d2 + 4 >> 2] = c[a2 + 68 + 4 >> 2];
            c[d2 + 8 >> 2] = c[a2 + 68 + 8 >> 2];
            c[d2 + 12 >> 2] = c[a2 + 68 + 12 >> 2];
            return;
          }
          function Xm(b2) {
            b2 = b2 | 0;
            var d2 = 0;
            c[b2 >> 2] = 6624;
            d2 = c[b2 + 156 >> 2] | 0;
            if (d2 | 0) {
              if (a[b2 + 160 >> 0] | 0) {
                c[5638] = (c[5638] | 0) + 1;
                rG(c[d2 + -4 >> 2] | 0);
              }
              c[b2 + 156 >> 2] = 0;
            }
            a[b2 + 160 >> 0] = 1;
            c[b2 + 156 >> 2] = 0;
            c[b2 + 148 >> 2] = 0;
            c[b2 + 152 >> 2] = 0;
            d2 = c[b2 + 136 >> 2] | 0;
            if (d2 | 0) {
              if (a[b2 + 140 >> 0] | 0) {
                c[5638] = (c[5638] | 0) + 1;
                rG(c[d2 + -4 >> 2] | 0);
              }
              c[b2 + 136 >> 2] = 0;
            }
            a[b2 + 140 >> 0] = 1;
            c[b2 + 136 >> 2] = 0;
            c[b2 + 128 >> 2] = 0;
            c[b2 + 132 >> 2] = 0;
            d2 = c[b2 + 116 >> 2] | 0;
            if (d2 | 0) {
              if (a[b2 + 120 >> 0] | 0) {
                c[5638] = (c[5638] | 0) + 1;
                rG(c[d2 + -4 >> 2] | 0);
              }
              c[b2 + 116 >> 2] = 0;
            }
            a[b2 + 120 >> 0] = 1;
            c[b2 + 116 >> 2] = 0;
            c[b2 + 108 >> 2] = 0;
            c[b2 + 112 >> 2] = 0;
            d2 = c[b2 + 96 >> 2] | 0;
            if (d2 | 0) {
              if (a[b2 + 100 >> 0] | 0) {
                c[5638] = (c[5638] | 0) + 1;
                rG(c[d2 + -4 >> 2] | 0);
              }
              c[b2 + 96 >> 2] = 0;
            }
            a[b2 + 100 >> 0] = 1;
            c[b2 + 96 >> 2] = 0;
            c[b2 + 88 >> 2] = 0;
            c[b2 + 92 >> 2] = 0;
            c[b2 >> 2] = 6556;
            d2 = c[b2 + 32 >> 2] | 0;
            if (!d2) {
              a[b2 + 36 >> 0] = 1;
              c[b2 + 32 >> 2] = 0;
              c[b2 + 24 >> 2] = 0;
              b2 = b2 + 28 | 0;
              c[b2 >> 2] = 0;
              return;
            }
            if (a[b2 + 36 >> 0] | 0) {
              c[5638] = (c[5638] | 0) + 1;
              rG(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 32 >> 2] = 0;
            a[b2 + 36 >> 0] = 1;
            c[b2 + 32 >> 2] = 0;
            c[b2 + 24 >> 2] = 0;
            b2 = b2 + 28 | 0;
            c[b2 >> 2] = 0;
            return;
          }
          function Ym(a2) {
            a2 = a2 | 0;
            Xm(a2);
            if (!a2)
              return;
            c[5638] = (c[5638] | 0) + 1;
            rG(c[a2 + -4 >> 2] | 0);
            return;
          }
          function Zm(b2, d2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0, i2 = 0;
            if (a[b2 + 165 >> 0] | 0) {
              if ((c[b2 + 92 >> 2] | 0) >= (d2 | 0))
                return;
              if ((d2 | 0) != 0 ? (c[5637] = (c[5637] | 0) + 1, e2 = qG((d2 << 4 | 3) + 16 | 0) | 0, (e2 | 0) != 0) : 0) {
                c[(e2 + 4 + 15 & -16) + -4 >> 2] = e2;
                g2 = e2 + 4 + 15 & -16;
              } else
                g2 = 0;
              e2 = c[b2 + 88 >> 2] | 0;
              if ((e2 | 0) > 0) {
                f2 = 0;
                do {
                  i2 = g2 + (f2 << 4) | 0;
                  h2 = (c[b2 + 96 >> 2] | 0) + (f2 << 4) | 0;
                  c[i2 >> 2] = c[h2 >> 2];
                  c[i2 + 4 >> 2] = c[h2 + 4 >> 2];
                  c[i2 + 8 >> 2] = c[h2 + 8 >> 2];
                  c[i2 + 12 >> 2] = c[h2 + 12 >> 2];
                  f2 = f2 + 1 | 0;
                } while ((f2 | 0) != (e2 | 0));
              }
              e2 = c[b2 + 96 >> 2] | 0;
              if (e2 | 0) {
                if (a[b2 + 100 >> 0] | 0) {
                  c[5638] = (c[5638] | 0) + 1;
                  rG(c[e2 + -4 >> 2] | 0);
                }
                c[b2 + 96 >> 2] = 0;
              }
              a[b2 + 100 >> 0] = 1;
              c[b2 + 96 >> 2] = g2;
              c[b2 + 92 >> 2] = d2;
              return;
            }
            if ((c[b2 + 112 >> 2] | 0) >= (d2 | 0))
              return;
            if ((d2 | 0) != 0 ? (c[5637] = (c[5637] | 0) + 1, f2 = qG((d2 << 2 | 3) + 16 | 0) | 0, (f2 | 0) != 0) : 0) {
              c[(f2 + 4 + 15 & -16) + -4 >> 2] = f2;
              h2 = f2 + 4 + 15 & -16;
            } else
              h2 = 0;
            f2 = c[b2 + 108 >> 2] | 0;
            g2 = c[b2 + 116 >> 2] | 0;
            if ((f2 | 0) <= 0)
              if (!g2)
                e2 = b2 + 120 | 0;
              else
                i2 = 21;
            else {
              e2 = 0;
              do {
                c[h2 + (e2 << 2) >> 2] = c[g2 + (e2 << 2) >> 2];
                e2 = e2 + 1 | 0;
              } while ((e2 | 0) != (f2 | 0));
              i2 = 21;
            }
            if ((i2 | 0) == 21) {
              if (a[b2 + 120 >> 0] | 0) {
                c[5638] = (c[5638] | 0) + 1;
                rG(c[g2 + -4 >> 2] | 0);
              }
              c[b2 + 116 >> 2] = 0;
              e2 = b2 + 120 | 0;
            }
            a[e2 >> 0] = 1;
            c[b2 + 116 >> 2] = h2;
            c[b2 + 112 >> 2] = d2;
            return;
          }
          function _m(d2, e2) {
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, g2 = 0, h2 = 0, i2 = 0, j2 = 0;
            if (!(a[d2 + 164 >> 0] | 0)) {
              if ((c[d2 + 152 >> 2] | 0) >= (e2 | 0))
                return;
              if ((e2 | 0) != 0 ? (c[5637] = (c[5637] | 0) + 1, g2 = qG((e2 << 1) + 19 | 0) | 0, (g2 | 0) != 0) : 0) {
                c[(g2 + 4 + 15 & -16) + -4 >> 2] = g2;
                i2 = g2 + 4 + 15 & -16;
              } else
                i2 = 0;
              g2 = c[d2 + 148 >> 2] | 0;
              h2 = c[d2 + 156 >> 2] | 0;
              if ((g2 | 0) <= 0)
                if (!h2)
                  f2 = d2 + 160 | 0;
                else
                  j2 = 22;
              else {
                f2 = 0;
                do {
                  b[i2 + (f2 << 1) >> 1] = b[h2 + (f2 << 1) >> 1] | 0;
                  f2 = f2 + 1 | 0;
                } while ((f2 | 0) != (g2 | 0));
                j2 = 22;
              }
              if ((j2 | 0) == 22) {
                if (a[d2 + 160 >> 0] | 0) {
                  c[5638] = (c[5638] | 0) + 1;
                  rG(c[h2 + -4 >> 2] | 0);
                }
                c[d2 + 156 >> 2] = 0;
                f2 = d2 + 160 | 0;
              }
              a[f2 >> 0] = 1;
              c[d2 + 156 >> 2] = i2;
              c[d2 + 152 >> 2] = e2;
              return;
            } else {
              if ((c[d2 + 132 >> 2] | 0) >= (e2 | 0))
                return;
              if ((e2 | 0) != 0 ? (c[5637] = (c[5637] | 0) + 1, f2 = qG((e2 << 2 | 3) + 16 | 0) | 0, (f2 | 0) != 0) : 0) {
                c[(f2 + 4 + 15 & -16) + -4 >> 2] = f2;
                i2 = f2 + 4 + 15 & -16;
              } else
                i2 = 0;
              g2 = c[d2 + 128 >> 2] | 0;
              h2 = c[d2 + 136 >> 2] | 0;
              if ((g2 | 0) <= 0)
                if (!h2)
                  f2 = d2 + 140 | 0;
                else
                  j2 = 10;
              else {
                f2 = 0;
                do {
                  c[i2 + (f2 << 2) >> 2] = c[h2 + (f2 << 2) >> 2];
                  f2 = f2 + 1 | 0;
                } while ((f2 | 0) != (g2 | 0));
                j2 = 10;
              }
              if ((j2 | 0) == 10) {
                if (a[d2 + 140 >> 0] | 0) {
                  c[5638] = (c[5638] | 0) + 1;
                  rG(c[h2 + -4 >> 2] | 0);
                }
                c[d2 + 136 >> 2] = 0;
                f2 = d2 + 140 | 0;
              }
              a[f2 >> 0] = 1;
              c[d2 + 136 >> 2] = i2;
              c[d2 + 132 >> 2] = e2;
              return;
            }
          }
          function $m(d2, e2, f2) {
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            var h2 = 0, i2 = 0, j2 = 0;
            c[d2 + 4 >> 2] = 1065353216;
            c[d2 + 8 >> 2] = 1065353216;
            c[d2 + 12 >> 2] = 1065353216;
            g[d2 + 16 >> 2] = 0;
            a[d2 + 36 >> 0] = 1;
            c[d2 + 32 >> 2] = 0;
            c[d2 + 24 >> 2] = 0;
            c[d2 + 28 >> 2] = 0;
            c[d2 + 48 >> 2] = 0;
            c[d2 >> 2] = 6624;
            a[d2 + 100 >> 0] = 1;
            c[d2 + 96 >> 2] = 0;
            c[d2 + 88 >> 2] = 0;
            c[d2 + 92 >> 2] = 0;
            a[d2 + 120 >> 0] = 1;
            c[d2 + 116 >> 2] = 0;
            c[d2 + 108 >> 2] = 0;
            c[d2 + 112 >> 2] = 0;
            a[d2 + 140 >> 0] = 1;
            c[d2 + 136 >> 2] = 0;
            c[d2 + 128 >> 2] = 0;
            c[d2 + 132 >> 2] = 0;
            a[d2 + 160 >> 0] = 1;
            c[d2 + 156 >> 2] = 0;
            c[d2 + 148 >> 2] = 0;
            c[d2 + 152 >> 2] = 0;
            a[d2 + 164 >> 0] = e2 & 1;
            a[d2 + 165 >> 0] = f2 & 1;
            g[d2 + 168 >> 2] = 0;
            c[5637] = (c[5637] | 0) + 1;
            e2 = qG(51) | 0;
            if (!e2)
              h2 = 0;
            else {
              c[(e2 + 4 + 15 & -16) + -4 >> 2] = e2;
              h2 = e2 + 4 + 15 & -16;
            }
            e2 = c[d2 + 24 >> 2] | 0;
            if ((e2 | 0) > 0) {
              f2 = 0;
              do {
                i2 = h2 + (f2 << 5) | 0;
                j2 = (c[d2 + 32 >> 2] | 0) + (f2 << 5) | 0;
                c[i2 >> 2] = c[j2 >> 2];
                c[i2 + 4 >> 2] = c[j2 + 4 >> 2];
                c[i2 + 8 >> 2] = c[j2 + 8 >> 2];
                c[i2 + 12 >> 2] = c[j2 + 12 >> 2];
                c[i2 + 16 >> 2] = c[j2 + 16 >> 2];
                c[i2 + 20 >> 2] = c[j2 + 20 >> 2];
                c[i2 + 24 >> 2] = c[j2 + 24 >> 2];
                c[i2 + 28 >> 2] = c[j2 + 28 >> 2];
                f2 = f2 + 1 | 0;
              } while ((f2 | 0) != (e2 | 0));
            }
            e2 = c[d2 + 32 >> 2] | 0;
            if (e2 | 0) {
              if (a[d2 + 36 >> 0] | 0) {
                c[5638] = (c[5638] | 0) + 1;
                rG(c[e2 + -4 >> 2] | 0);
              }
              c[d2 + 32 >> 2] = 0;
            }
            a[d2 + 36 >> 0] = 1;
            c[d2 + 32 >> 2] = h2;
            c[d2 + 28 >> 2] = 1;
            e2 = c[d2 + 24 >> 2] | 0;
            c[h2 + (e2 << 5) >> 2] = 0;
            c[h2 + (e2 << 5) + 4 >> 2] = 0;
            c[h2 + (e2 << 5) + 8 >> 2] = 12;
            c[h2 + (e2 << 5) + 12 >> 2] = 0;
            c[h2 + (e2 << 5) + 16 >> 2] = 0;
            c[h2 + (e2 << 5) + 20 >> 2] = 16;
            c[h2 + (e2 << 5) + 24 >> 2] = 2;
            c[h2 + (e2 << 5) + 28 >> 2] = 0;
            c[d2 + 24 >> 2] = (c[d2 + 24 >> 2] | 0) + 1;
            e2 = b[d2 + 164 >> 1] | 0;
            if (!((e2 & 255) << 24 >> 24)) {
              f2 = c[d2 + 32 >> 2] | 0;
              c[f2 >> 2] = (c[d2 + 148 >> 2] | 0) / 3 | 0;
              c[f2 + 4 >> 2] = 0;
              c[f2 + 24 >> 2] = 3;
              c[f2 + 8 >> 2] = 6;
            } else {
              f2 = c[d2 + 32 >> 2] | 0;
              c[f2 >> 2] = (c[d2 + 128 >> 2] | 0) / 3 | 0;
              c[f2 + 4 >> 2] = 0;
              c[f2 + 24 >> 2] = 2;
              c[f2 + 8 >> 2] = 12;
            }
            if ((e2 & 65535) < 256) {
              i2 = 12;
              d2 = (c[d2 + 108 >> 2] | 0) / 3 | 0;
              j2 = f2 + 12 | 0;
              c[j2 >> 2] = d2;
              j2 = f2 + 16 | 0;
              c[j2 >> 2] = 0;
              j2 = f2 + 20 | 0;
              c[j2 >> 2] = i2;
              return;
            } else {
              i2 = 16;
              d2 = c[d2 + 88 >> 2] | 0;
              j2 = f2 + 12 | 0;
              c[j2 >> 2] = d2;
              j2 = f2 + 16 | 0;
              c[j2 >> 2] = 0;
              j2 = f2 + 20 | 0;
              c[j2 >> 2] = i2;
              return;
            }
          }
          function an(d2, e2) {
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, g2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0;
            if (!(a[d2 + 164 >> 0] | 0)) {
              f2 = c[d2 + 148 >> 2] | 0;
              if ((f2 | 0) == (c[d2 + 152 >> 2] | 0) ? (k2 = f2 | 0 ? f2 << 1 : 1, (f2 | 0) < (k2 | 0)) : 0) {
                if (!k2)
                  i2 = 0;
                else {
                  c[5637] = (c[5637] | 0) + 1;
                  f2 = qG((k2 << 1) + 19 | 0) | 0;
                  if (!f2)
                    f2 = 0;
                  else {
                    c[(f2 + 4 + 15 & -16) + -4 >> 2] = f2;
                    f2 = f2 + 4 + 15 & -16;
                  }
                  i2 = f2;
                  f2 = c[d2 + 148 >> 2] | 0;
                }
                h2 = c[d2 + 156 >> 2] | 0;
                if ((f2 | 0) <= 0)
                  if (!h2)
                    f2 = d2 + 160 | 0;
                  else
                    g2 = 27;
                else {
                  g2 = 0;
                  do {
                    b[i2 + (g2 << 1) >> 1] = b[h2 + (g2 << 1) >> 1] | 0;
                    g2 = g2 + 1 | 0;
                  } while ((g2 | 0) != (f2 | 0));
                  g2 = 27;
                }
                if ((g2 | 0) == 27) {
                  if (a[d2 + 160 >> 0] | 0) {
                    c[5638] = (c[5638] | 0) + 1;
                    rG(c[h2 + -4 >> 2] | 0);
                  }
                  c[d2 + 156 >> 2] = 0;
                  f2 = d2 + 160 | 0;
                }
                a[f2 >> 0] = 1;
                c[d2 + 156 >> 2] = i2;
                c[d2 + 152 >> 2] = k2;
                f2 = c[d2 + 148 >> 2] | 0;
              }
              k2 = c[d2 + 156 >> 2] | 0;
              b[k2 + (f2 << 1) >> 1] = e2;
              c[d2 + 148 >> 2] = f2 + 1;
              c[(c[d2 + 32 >> 2] | 0) + 4 >> 2] = k2;
              return;
            } else {
              f2 = c[d2 + 128 >> 2] | 0;
              if ((f2 | 0) == (c[d2 + 132 >> 2] | 0) ? (j2 = f2 | 0 ? f2 << 1 : 1, (f2 | 0) < (j2 | 0)) : 0) {
                if (!j2)
                  i2 = 0;
                else {
                  c[5637] = (c[5637] | 0) + 1;
                  f2 = qG((j2 << 2 | 3) + 16 | 0) | 0;
                  if (!f2)
                    f2 = 0;
                  else {
                    c[(f2 + 4 + 15 & -16) + -4 >> 2] = f2;
                    f2 = f2 + 4 + 15 & -16;
                  }
                  i2 = f2;
                  f2 = c[d2 + 128 >> 2] | 0;
                }
                h2 = c[d2 + 136 >> 2] | 0;
                if ((f2 | 0) <= 0)
                  if (!h2)
                    f2 = d2 + 140 | 0;
                  else
                    g2 = 12;
                else {
                  g2 = 0;
                  do {
                    c[i2 + (g2 << 2) >> 2] = c[h2 + (g2 << 2) >> 2];
                    g2 = g2 + 1 | 0;
                  } while ((g2 | 0) != (f2 | 0));
                  g2 = 12;
                }
                if ((g2 | 0) == 12) {
                  if (a[d2 + 140 >> 0] | 0) {
                    c[5638] = (c[5638] | 0) + 1;
                    rG(c[h2 + -4 >> 2] | 0);
                  }
                  c[d2 + 136 >> 2] = 0;
                  f2 = d2 + 140 | 0;
                }
                a[f2 >> 0] = 1;
                c[d2 + 136 >> 2] = i2;
                c[d2 + 132 >> 2] = j2;
                f2 = c[d2 + 128 >> 2] | 0;
              }
              k2 = c[d2 + 136 >> 2] | 0;
              c[k2 + (f2 << 2) >> 2] = e2;
              c[d2 + 128 >> 2] = (c[d2 + 128 >> 2] | 0) + 1;
              c[(c[d2 + 32 >> 2] | 0) + 4 >> 2] = k2;
              return;
            }
          }
          function bn(b2, d2, e2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0;
            if (a[b2 + 165 >> 0] | 0) {
              f2 = c[b2 + 88 >> 2] | 0;
              a:
                do
                  if ((f2 | 0) > 0 & e2) {
                    h2 = c[b2 + 96 >> 2] | 0;
                    m2 = +g[d2 >> 2];
                    j2 = +g[d2 + 4 >> 2];
                    k2 = +g[d2 + 8 >> 2];
                    l2 = +g[b2 + 168 >> 2];
                    e2 = 0;
                    while (1) {
                      r2 = +g[h2 + (e2 << 4) >> 2] - m2;
                      q2 = +g[h2 + (e2 << 4) + 4 >> 2] - j2;
                      p2 = +g[h2 + (e2 << 4) + 8 >> 2] - k2;
                      if (r2 * r2 + q2 * q2 + p2 * p2 <= l2)
                        break;
                      e2 = e2 + 1 | 0;
                      if ((e2 | 0) >= (f2 | 0))
                        break a;
                    }
                    return e2 | 0;
                  }
                while (0);
              o2 = (c[b2 + 32 >> 2] | 0) + 12 | 0;
              c[o2 >> 2] = (c[o2 >> 2] | 0) + 1;
              if ((f2 | 0) == (c[b2 + 92 >> 2] | 0) ? (i2 = f2 | 0 ? f2 << 1 : 1, (f2 | 0) < (i2 | 0)) : 0) {
                if (!i2)
                  e2 = 0;
                else {
                  c[5637] = (c[5637] | 0) + 1;
                  e2 = qG((i2 << 4 | 3) + 16 | 0) | 0;
                  if (!e2)
                    e2 = 0;
                  else {
                    c[(e2 + 4 + 15 & -16) + -4 >> 2] = e2;
                    e2 = e2 + 4 + 15 & -16;
                  }
                  f2 = c[b2 + 88 >> 2] | 0;
                }
                if ((f2 | 0) > 0) {
                  h2 = 0;
                  do {
                    o2 = e2 + (h2 << 4) | 0;
                    n2 = (c[b2 + 96 >> 2] | 0) + (h2 << 4) | 0;
                    c[o2 >> 2] = c[n2 >> 2];
                    c[o2 + 4 >> 2] = c[n2 + 4 >> 2];
                    c[o2 + 8 >> 2] = c[n2 + 8 >> 2];
                    c[o2 + 12 >> 2] = c[n2 + 12 >> 2];
                    h2 = h2 + 1 | 0;
                  } while ((h2 | 0) != (f2 | 0));
                }
                f2 = c[b2 + 96 >> 2] | 0;
                if (f2 | 0) {
                  if (a[b2 + 100 >> 0] | 0) {
                    c[5638] = (c[5638] | 0) + 1;
                    rG(c[f2 + -4 >> 2] | 0);
                  }
                  c[b2 + 96 >> 2] = 0;
                }
                a[b2 + 100 >> 0] = 1;
                c[b2 + 96 >> 2] = e2;
                c[b2 + 92 >> 2] = i2;
                e2 = c[b2 + 88 >> 2] | 0;
              } else
                e2 = f2;
              o2 = (c[b2 + 96 >> 2] | 0) + (e2 << 4) | 0;
              c[o2 >> 2] = c[d2 >> 2];
              c[o2 + 4 >> 2] = c[d2 + 4 >> 2];
              c[o2 + 8 >> 2] = c[d2 + 8 >> 2];
              c[o2 + 12 >> 2] = c[d2 + 12 >> 2];
              d2 = c[b2 + 88 >> 2] | 0;
              c[b2 + 88 >> 2] = d2 + 1;
              c[(c[b2 + 32 >> 2] | 0) + 16 >> 2] = c[b2 + 96 >> 2];
              return d2 | 0;
            }
            h2 = c[b2 + 108 >> 2] | 0;
            b:
              do
                if ((h2 | 0) > 0 & e2) {
                  e2 = c[b2 + 116 >> 2] | 0;
                  j2 = +g[d2 >> 2];
                  k2 = +g[d2 + 4 >> 2];
                  l2 = +g[d2 + 8 >> 2];
                  m2 = +g[b2 + 168 >> 2];
                  i2 = 0;
                  while (1) {
                    p2 = +g[e2 + (i2 << 2) >> 2] - j2;
                    q2 = +g[e2 + (i2 + 1 << 2) >> 2] - k2;
                    r2 = +g[e2 + (i2 + 2 << 2) >> 2] - l2;
                    f2 = i2 + 3 | 0;
                    if (p2 * p2 + q2 * q2 + r2 * r2 <= m2)
                      break;
                    if ((f2 | 0) < (h2 | 0))
                      i2 = f2;
                    else
                      break b;
                  }
                  d2 = (i2 | 0) / 3 | 0;
                  return d2 | 0;
                }
              while (0);
            e2 = c[b2 + 112 >> 2] | 0;
            if ((h2 | 0) == (e2 | 0)) {
              n2 = h2 | 0 ? h2 << 1 : 1;
              if ((h2 | 0) < (n2 | 0)) {
                if (!n2)
                  e2 = 0;
                else {
                  c[5637] = (c[5637] | 0) + 1;
                  e2 = qG((n2 << 2 | 3) + 16 | 0) | 0;
                  if (!e2)
                    e2 = 0;
                  else {
                    c[(e2 + 4 + 15 & -16) + -4 >> 2] = e2;
                    e2 = e2 + 4 + 15 & -16;
                  }
                  h2 = c[b2 + 108 >> 2] | 0;
                }
                i2 = c[b2 + 116 >> 2] | 0;
                if ((h2 | 0) <= 0)
                  if (!i2)
                    f2 = b2 + 120 | 0;
                  else
                    o2 = 34;
                else {
                  f2 = 0;
                  do {
                    c[e2 + (f2 << 2) >> 2] = c[i2 + (f2 << 2) >> 2];
                    f2 = f2 + 1 | 0;
                  } while ((f2 | 0) != (h2 | 0));
                  o2 = 34;
                }
                if ((o2 | 0) == 34) {
                  if (a[b2 + 120 >> 0] | 0) {
                    c[5638] = (c[5638] | 0) + 1;
                    rG(c[i2 + -4 >> 2] | 0);
                  }
                  c[b2 + 116 >> 2] = 0;
                  f2 = b2 + 120 | 0;
                }
                a[f2 >> 0] = 1;
                c[b2 + 116 >> 2] = e2;
                c[b2 + 112 >> 2] = n2;
                f2 = c[b2 + 108 >> 2] | 0;
                h2 = n2;
              } else
                f2 = h2;
            } else {
              f2 = h2;
              h2 = e2;
            }
            c[(c[b2 + 116 >> 2] | 0) + (f2 << 2) >> 2] = c[d2 >> 2];
            e2 = f2 + 1 | 0;
            c[b2 + 108 >> 2] = e2;
            if ((e2 | 0) == (h2 | 0)) {
              n2 = h2 | 0 ? h2 << 1 : 1;
              if ((h2 | 0) < (n2 | 0)) {
                if (!n2)
                  e2 = 0;
                else {
                  c[5637] = (c[5637] | 0) + 1;
                  e2 = qG((n2 << 2 | 3) + 16 | 0) | 0;
                  if (!e2)
                    e2 = 0;
                  else {
                    c[(e2 + 4 + 15 & -16) + -4 >> 2] = e2;
                    e2 = e2 + 4 + 15 & -16;
                  }
                  h2 = c[b2 + 108 >> 2] | 0;
                }
                i2 = c[b2 + 116 >> 2] | 0;
                if ((h2 | 0) <= 0)
                  if (!i2)
                    f2 = b2 + 120 | 0;
                  else
                    o2 = 48;
                else {
                  f2 = 0;
                  do {
                    c[e2 + (f2 << 2) >> 2] = c[i2 + (f2 << 2) >> 2];
                    f2 = f2 + 1 | 0;
                  } while ((f2 | 0) != (h2 | 0));
                  o2 = 48;
                }
                if ((o2 | 0) == 48) {
                  if (a[b2 + 120 >> 0] | 0) {
                    c[5638] = (c[5638] | 0) + 1;
                    rG(c[i2 + -4 >> 2] | 0);
                  }
                  c[b2 + 116 >> 2] = 0;
                  f2 = b2 + 120 | 0;
                }
                a[f2 >> 0] = 1;
                c[b2 + 116 >> 2] = e2;
                c[b2 + 112 >> 2] = n2;
                e2 = c[b2 + 108 >> 2] | 0;
                h2 = n2;
              } else
                e2 = h2;
            }
            c[(c[b2 + 116 >> 2] | 0) + (e2 << 2) >> 2] = c[d2 + 4 >> 2];
            e2 = e2 + 1 | 0;
            c[b2 + 108 >> 2] = e2;
            if ((e2 | 0) == (h2 | 0)) {
              n2 = h2 | 0 ? h2 << 1 : 1;
              if ((h2 | 0) < (n2 | 0)) {
                if (!n2)
                  e2 = 0;
                else {
                  c[5637] = (c[5637] | 0) + 1;
                  e2 = qG((n2 << 2 | 3) + 16 | 0) | 0;
                  if (!e2)
                    e2 = 0;
                  else {
                    c[(e2 + 4 + 15 & -16) + -4 >> 2] = e2;
                    e2 = e2 + 4 + 15 & -16;
                  }
                  h2 = c[b2 + 108 >> 2] | 0;
                }
                i2 = c[b2 + 116 >> 2] | 0;
                if ((h2 | 0) <= 0)
                  if (!i2)
                    f2 = b2 + 120 | 0;
                  else
                    o2 = 62;
                else {
                  f2 = 0;
                  do {
                    c[e2 + (f2 << 2) >> 2] = c[i2 + (f2 << 2) >> 2];
                    f2 = f2 + 1 | 0;
                  } while ((f2 | 0) != (h2 | 0));
                  o2 = 62;
                }
                if ((o2 | 0) == 62) {
                  if (a[b2 + 120 >> 0] | 0) {
                    c[5638] = (c[5638] | 0) + 1;
                    rG(c[i2 + -4 >> 2] | 0);
                  }
                  c[b2 + 116 >> 2] = 0;
                  f2 = b2 + 120 | 0;
                }
                a[f2 >> 0] = 1;
                c[b2 + 116 >> 2] = e2;
                c[b2 + 112 >> 2] = n2;
                e2 = c[b2 + 108 >> 2] | 0;
              } else
                e2 = h2;
            }
            o2 = c[b2 + 116 >> 2] | 0;
            c[o2 + (e2 << 2) >> 2] = c[d2 + 8 >> 2];
            d2 = e2 + 1 | 0;
            c[b2 + 108 >> 2] = d2;
            b2 = c[b2 + 32 >> 2] | 0;
            c[b2 + 12 >> 2] = (c[b2 + 12 >> 2] | 0) + 1;
            c[b2 + 16 >> 2] = o2;
            d2 = ((d2 | 0) / 3 | 0) + -1 | 0;
            return d2 | 0;
          }
          function cn(a2) {
            a2 = a2 | 0;
            return;
          }
          function dn(a2) {
            a2 = a2 | 0;
            if (!a2)
              return;
            c[5638] = (c[5638] | 0) + 1;
            rG(c[a2 + -4 >> 2] | 0);
            return;
          }
          function en(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0;
            o2 = (+g[a2 + 36 >> 2] - +g[a2 + 20 >> 2]) * 0.5;
            l2 = (+g[a2 + 40 >> 2] - +g[a2 + 24 >> 2]) * 0.5;
            i2 = (+g[a2 + 44 >> 2] - +g[a2 + 28 >> 2]) * 0.5;
            n2 = +Hb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
            k2 = +Hb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
            i2 = i2 + +Hb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
            B2 = (+g[a2 + 36 >> 2] + +g[a2 + 20 >> 2]) * 0.5;
            z2 = (+g[a2 + 40 >> 2] + +g[a2 + 24 >> 2]) * 0.5;
            x2 = (+g[a2 + 44 >> 2] + +g[a2 + 28 >> 2]) * 0.5;
            F2 = +g[b2 >> 2];
            w2 = +N(+F2);
            E2 = +g[b2 + 4 >> 2];
            v2 = +N(+E2);
            t2 = +g[b2 + 8 >> 2];
            u2 = +N(+t2);
            D2 = +g[b2 + 16 >> 2];
            s2 = +N(+D2);
            C2 = +g[b2 + 20 >> 2];
            r2 = +N(+C2);
            p2 = +g[b2 + 24 >> 2];
            q2 = +N(+p2);
            A2 = +g[b2 + 32 >> 2];
            m2 = +N(+A2);
            y2 = +g[b2 + 36 >> 2];
            j2 = +N(+y2);
            f2 = +g[b2 + 40 >> 2];
            h2 = +N(+f2);
            t2 = B2 * F2 + z2 * E2 + x2 * t2 + +g[b2 + 48 >> 2];
            p2 = B2 * D2 + z2 * C2 + x2 * p2 + +g[b2 + 52 >> 2];
            f2 = B2 * A2 + z2 * y2 + x2 * f2 + +g[b2 + 56 >> 2];
            g[d2 >> 2] = t2 - ((o2 + n2) * w2 + (l2 + k2) * v2 + i2 * u2);
            g[d2 + 4 >> 2] = p2 - ((o2 + n2) * s2 + (l2 + k2) * r2 + i2 * q2);
            g[d2 + 8 >> 2] = f2 - ((o2 + n2) * m2 + (l2 + k2) * j2 + i2 * h2);
            g[d2 + 12 >> 2] = 0;
            g[e2 >> 2] = (o2 + n2) * w2 + (l2 + k2) * v2 + i2 * u2 + t2;
            g[e2 + 4 >> 2] = (o2 + n2) * s2 + (l2 + k2) * r2 + i2 * q2 + p2;
            g[e2 + 8 >> 2] = (o2 + n2) * m2 + (l2 + k2) * j2 + i2 * h2 + f2;
            g[e2 + 12 >> 2] = 0;
            return;
          }
          function fn(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0;
            d2 = i;
            i = i + 48 | 0;
            e2 = (c[a2 + 52 >> 2] | 0) + 4 | 0;
            c[e2 >> 2] = c[b2 >> 2];
            c[e2 + 4 >> 2] = c[b2 + 4 >> 2];
            c[e2 + 8 >> 2] = c[b2 + 8 >> 2];
            c[e2 + 12 >> 2] = c[b2 + 12 >> 2];
            c[d2 + 32 >> 2] = 0;
            c[d2 + 32 + 4 >> 2] = 0;
            c[d2 + 32 + 8 >> 2] = 0;
            c[d2 + 32 + 12 >> 2] = 0;
            g[d2 + 32 >> 2] = 1;
            Zb[c[(c[a2 >> 2] | 0) + 68 >> 2] & 127](d2 + 16 | 0, a2, d2 + 32 | 0);
            g[a2 + 36 >> 2] = +g[d2 + 16 >> 2] + +g[a2 + 16 >> 2];
            g[d2 + 32 >> 2] = -1;
            Zb[c[(c[a2 >> 2] | 0) + 68 >> 2] & 127](d2, a2, d2 + 32 | 0);
            c[d2 + 16 >> 2] = c[d2 >> 2];
            c[d2 + 16 + 4 >> 2] = c[d2 + 4 >> 2];
            c[d2 + 16 + 8 >> 2] = c[d2 + 8 >> 2];
            c[d2 + 16 + 12 >> 2] = c[d2 + 12 >> 2];
            g[a2 + 20 >> 2] = +g[d2 + 16 >> 2] - +g[a2 + 16 >> 2];
            c[d2 + 32 >> 2] = 0;
            c[d2 + 32 + 4 >> 2] = 0;
            c[d2 + 32 + 8 >> 2] = 0;
            c[d2 + 32 + 12 >> 2] = 0;
            g[d2 + 32 + 4 >> 2] = 1;
            Zb[c[(c[a2 >> 2] | 0) + 68 >> 2] & 127](d2 + 16 | 0, a2, d2 + 32 | 0);
            g[a2 + 40 >> 2] = +g[d2 + 16 + 4 >> 2] + +g[a2 + 16 >> 2];
            g[d2 + 32 + 4 >> 2] = -1;
            Zb[c[(c[a2 >> 2] | 0) + 68 >> 2] & 127](d2, a2, d2 + 32 | 0);
            c[d2 + 16 >> 2] = c[d2 >> 2];
            c[d2 + 16 + 4 >> 2] = c[d2 + 4 >> 2];
            c[d2 + 16 + 8 >> 2] = c[d2 + 8 >> 2];
            c[d2 + 16 + 12 >> 2] = c[d2 + 12 >> 2];
            g[a2 + 24 >> 2] = +g[d2 + 16 + 4 >> 2] - +g[a2 + 16 >> 2];
            c[d2 + 32 >> 2] = 0;
            c[d2 + 32 + 4 >> 2] = 0;
            c[d2 + 32 + 8 >> 2] = 0;
            c[d2 + 32 + 12 >> 2] = 0;
            g[d2 + 32 + 8 >> 2] = 1;
            Zb[c[(c[a2 >> 2] | 0) + 68 >> 2] & 127](d2 + 16 | 0, a2, d2 + 32 | 0);
            g[a2 + 44 >> 2] = +g[d2 + 16 + 8 >> 2] + +g[a2 + 16 >> 2];
            g[d2 + 32 + 8 >> 2] = -1;
            Zb[c[(c[a2 >> 2] | 0) + 68 >> 2] & 127](d2, a2, d2 + 32 | 0);
            c[d2 + 16 >> 2] = c[d2 >> 2];
            c[d2 + 16 + 4 >> 2] = c[d2 + 4 >> 2];
            c[d2 + 16 + 8 >> 2] = c[d2 + 8 >> 2];
            c[d2 + 16 + 12 >> 2] = c[d2 + 12 >> 2];
            g[a2 + 28 >> 2] = +g[d2 + 16 + 8 >> 2] - +g[a2 + 16 >> 2];
            i = d2;
            return;
          }
          function gn(a2) {
            a2 = a2 | 0;
            return (c[a2 + 52 >> 2] | 0) + 4 | 0;
          }
          function hn(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = +b2;
            d2 = d2 | 0;
            c[d2 >> 2] = 0;
            c[d2 + 4 >> 2] = 0;
            c[d2 + 8 >> 2] = 0;
            c[d2 + 12 >> 2] = 0;
            return;
          }
          function jn(a2) {
            a2 = a2 | 0;
            return 14302;
          }
          function kn(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0;
            f2 = i;
            i = i + 48 | 0;
            c[f2 >> 2] = 6776;
            c[f2 + 4 >> 2] = b2;
            c[f2 + 8 >> 2] = c[d2 >> 2];
            c[f2 + 8 + 4 >> 2] = c[d2 + 4 >> 2];
            c[f2 + 8 + 8 >> 2] = c[d2 + 8 >> 2];
            c[f2 + 8 + 12 >> 2] = c[d2 + 12 >> 2];
            c[f2 + 24 >> 2] = c[e2 >> 2];
            c[f2 + 24 + 4 >> 2] = c[e2 + 4 >> 2];
            c[f2 + 24 + 8 >> 2] = c[e2 + 8 >> 2];
            c[f2 + 24 + 12 >> 2] = c[e2 + 12 >> 2];
            a2 = c[a2 + 52 >> 2] | 0;
            bc[c[(c[a2 >> 2] | 0) + 8 >> 2] & 127](a2, f2, d2, e2);
            i = f2;
            return;
          }
          function ln(a2) {
            a2 = a2 | 0;
            rG(a2);
            return;
          }
          function mn(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0;
            f2 = +g[b2 >> 2];
            h2 = +g[b2 + 16 >> 2];
            j2 = f2 < h2 ? f2 : h2;
            i2 = +g[b2 + 32 >> 2];
            if ((j2 < i2 ? j2 : i2) > +g[a2 + 24 >> 2])
              return;
            k2 = f2 > h2 ? b2 : b2 + 16 | 0;
            if (+g[(+g[k2 >> 2] > i2 ? k2 : b2 + 32 | 0) >> 2] < +g[a2 + 8 >> 2])
              return;
            f2 = +g[b2 + 8 >> 2];
            h2 = +g[b2 + 24 >> 2];
            j2 = f2 < h2 ? f2 : h2;
            i2 = +g[b2 + 40 >> 2];
            if ((j2 < i2 ? j2 : i2) > +g[a2 + 32 >> 2])
              return;
            k2 = f2 > h2 ? b2 + 8 | 0 : b2 + 24 | 0;
            if (+g[(+g[k2 >> 2] > i2 ? k2 : b2 + 40 | 0) >> 2] < +g[a2 + 16 >> 2])
              return;
            f2 = +g[b2 + 4 >> 2];
            h2 = +g[b2 + 20 >> 2];
            j2 = f2 < h2 ? f2 : h2;
            i2 = +g[b2 + 36 >> 2];
            if ((j2 < i2 ? j2 : i2) > +g[a2 + 28 >> 2])
              return;
            k2 = f2 > h2 ? b2 + 4 | 0 : b2 + 20 | 0;
            if (+g[(+g[k2 >> 2] > i2 ? k2 : b2 + 36 | 0) >> 2] < +g[a2 + 12 >> 2])
              return;
            k2 = c[a2 + 4 >> 2] | 0;
            bc[c[(c[k2 >> 2] | 0) + 8 >> 2] & 127](k2, b2, d2, e2);
            return;
          }
          function nn(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, h2 = 0, j2 = 0, k2 = 0;
            e2 = i;
            i = i + 160 | 0;
            c[e2 + 136 >> 2] = 0;
            c[e2 + 136 + 4 >> 2] = 0;
            c[e2 + 136 + 8 >> 2] = 0;
            c[e2 + 136 + 12 >> 2] = 0;
            c[e2 + 136 + 16 >> 2] = 0;
            c[e2 + 32 >> 2] = 6796;
            f2 = e2 + 32 + 4 | 0;
            c[f2 >> 2] = 0;
            c[f2 + 4 >> 2] = 0;
            c[f2 + 8 >> 2] = 0;
            c[f2 + 12 >> 2] = 0;
            c[e2 + 32 + 20 >> 2] = 1065353216;
            c[e2 + 32 + 24 >> 2] = 0;
            c[e2 + 32 + 24 + 4 >> 2] = 0;
            c[e2 + 32 + 24 + 8 >> 2] = 0;
            c[e2 + 32 + 24 + 12 >> 2] = 0;
            c[e2 + 32 + 40 >> 2] = 1065353216;
            c[e2 + 32 + 44 >> 2] = 0;
            c[e2 + 32 + 44 + 4 >> 2] = 0;
            c[e2 + 32 + 44 + 8 >> 2] = 0;
            c[e2 + 32 + 44 + 12 >> 2] = 0;
            c[e2 + 32 + 60 >> 2] = 1065353216;
            c[e2 + 32 + 64 >> 2] = 0;
            c[e2 + 32 + 68 >> 2] = c[e2 + 136 + 4 >> 2];
            c[e2 + 32 + 68 + 4 >> 2] = c[e2 + 136 + 4 + 4 >> 2];
            c[e2 + 32 + 68 + 8 >> 2] = c[e2 + 136 + 4 + 8 >> 2];
            c[e2 + 32 + 68 + 12 >> 2] = c[e2 + 136 + 4 + 12 >> 2];
            g[e2 + 32 + 84 >> 2] = -999999984306749400;
            k2 = +g[d2 >> 2];
            j2 = +g[d2 + 4 >> 2];
            h2 = +g[d2 + 8 >> 2];
            g[e2 + 32 + 88 >> 2] = k2 + j2 * 0 + h2 * 0;
            g[e2 + 32 + 92 >> 2] = k2 * 0 + j2 + h2 * 0;
            g[e2 + 32 + 96 >> 2] = k2 * 0 + j2 * 0 + h2;
            g[e2 + 32 + 100 >> 2] = 0;
            c[e2 + 16 >> 2] = 1566444395;
            c[e2 + 16 + 4 >> 2] = 1566444395;
            c[e2 + 16 + 8 >> 2] = 1566444395;
            g[e2 + 16 + 12 >> 2] = 0;
            d2 = c[(c[b2 >> 2] | 0) + 64 >> 2] | 0;
            g[e2 >> 2] = -999999984306749400;
            g[e2 + 4 >> 2] = -999999984306749400;
            g[e2 + 8 >> 2] = -999999984306749400;
            g[e2 + 12 >> 2] = 0;
            bc[d2 & 127](b2, e2 + 32 | 0, e2, e2 + 16 | 0);
            c[a2 >> 2] = c[f2 >> 2];
            c[a2 + 4 >> 2] = c[f2 + 4 >> 2];
            c[a2 + 8 >> 2] = c[f2 + 8 >> 2];
            c[a2 + 12 >> 2] = c[f2 + 12 >> 2];
            i = e2;
            return;
          }
          function on(a2) {
            a2 = a2 | 0;
            rG(a2);
            return;
          }
          function pn(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0;
            j2 = +g[a2 + 88 >> 2];
            k2 = +g[a2 + 92 >> 2];
            i2 = +g[a2 + 96 >> 2];
            f2 = j2 * +g[b2 >> 2] + k2 * +g[b2 + 4 >> 2] + i2 * +g[b2 + 8 >> 2];
            h2 = +g[a2 + 84 >> 2];
            if (f2 > h2) {
              g[a2 + 84 >> 2] = f2;
              c[a2 + 4 >> 2] = c[b2 >> 2];
              c[a2 + 4 + 4 >> 2] = c[b2 + 4 >> 2];
              c[a2 + 4 + 8 >> 2] = c[b2 + 8 >> 2];
              c[a2 + 4 + 12 >> 2] = c[b2 + 12 >> 2];
            } else
              f2 = h2;
            h2 = j2 * +g[b2 + 16 >> 2] + k2 * +g[b2 + 20 >> 2] + i2 * +g[b2 + 24 >> 2];
            if (h2 > f2) {
              g[a2 + 84 >> 2] = h2;
              c[a2 + 4 >> 2] = c[b2 + 16 >> 2];
              c[a2 + 4 + 4 >> 2] = c[b2 + 16 + 4 >> 2];
              c[a2 + 4 + 8 >> 2] = c[b2 + 16 + 8 >> 2];
              c[a2 + 4 + 12 >> 2] = c[b2 + 16 + 12 >> 2];
            } else
              h2 = f2;
            f2 = j2 * +g[b2 + 32 >> 2] + k2 * +g[b2 + 36 >> 2] + i2 * +g[b2 + 40 >> 2];
            if (!(f2 > h2))
              return;
            g[a2 + 84 >> 2] = f2;
            c[a2 + 4 >> 2] = c[b2 + 32 >> 2];
            c[a2 + 4 + 4 >> 2] = c[b2 + 32 + 4 >> 2];
            c[a2 + 4 + 8 >> 2] = c[b2 + 32 + 8 >> 2];
            c[a2 + 4 + 12 >> 2] = c[b2 + 32 + 12 >> 2];
            return;
          }
          function qn(a2) {
            a2 = a2 | 0;
            rG(a2);
            return;
          }
          function rn(b2, d2, e2, f2, h2, j2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            h2 = h2 | 0;
            j2 = j2 | 0;
            var l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0;
            C2 = i;
            i = i + 304 | 0;
            B2 = +g[e2 + 48 >> 2] - +g[d2 + 48 >> 2];
            z2 = +g[e2 + 52 >> 2] - +g[d2 + 52 >> 2];
            A2 = +g[e2 + 56 >> 2] - +g[d2 + 56 >> 2];
            Zf(d2, e2, C2 + 288 | 0, C2 + 240 | 0);
            v2 = +g[C2 + 240 >> 2];
            t2 = +g[C2 + 288 >> 2] * v2;
            u2 = v2 * +g[C2 + 288 + 4 >> 2];
            v2 = v2 * +g[C2 + 288 + 8 >> 2];
            g[C2 + 224 >> 2] = t2;
            g[C2 + 224 + 4 >> 2] = u2;
            g[C2 + 224 + 8 >> 2] = v2;
            g[C2 + 224 + 12 >> 2] = 0;
            w2 = +g[h2 + 48 >> 2] - +g[f2 + 48 >> 2];
            x2 = +g[h2 + 52 >> 2] - +g[f2 + 52 >> 2];
            y2 = +g[h2 + 56 >> 2] - +g[f2 + 56 >> 2];
            Zf(f2, h2, C2 + 288 | 0, C2 + 240 | 0);
            r2 = +g[C2 + 240 >> 2];
            p2 = +g[C2 + 288 >> 2] * r2;
            q2 = r2 * +g[C2 + 288 + 4 >> 2];
            r2 = r2 * +g[C2 + 288 + 8 >> 2];
            g[C2 + 192 >> 2] = p2;
            g[C2 + 192 + 4 >> 2] = q2;
            g[C2 + 192 + 8 >> 2] = r2;
            g[C2 + 192 + 12 >> 2] = 0;
            e2 = c[b2 + 12 >> 2] | 0;
            s2 = +Hb[c[(c[e2 >> 2] | 0) + 16 >> 2] & 15](e2);
            e2 = c[b2 + 16 >> 2] | 0;
            if (!e2)
              m2 = 0;
            else
              m2 = +Hb[c[(c[e2 >> 2] | 0) + 16 >> 2] & 15](e2);
            s2 = s2 * +O(+(t2 * t2 + u2 * u2 + v2 * v2)) + m2 * +O(+(p2 * p2 + q2 * q2 + r2 * r2));
            if (s2 + +O(+((w2 - B2) * (w2 - B2) + (x2 - z2) * (x2 - z2) + (y2 - A2) * (y2 - A2))) == 0) {
              j2 = 0;
              i = C2;
              return j2 | 0;
            }
            c[C2 + 240 >> 2] = 6836;
            g[C2 + 240 + 36 >> 2] = 999999984306749400;
            a[C2 + 240 + 40 >> 0] = 0;
            wn(b2, d2, f2, C2 + 240 | 0);
            h2 = (a[C2 + 240 + 40 >> 0] | 0) == 0;
            c[C2 + 288 >> 2] = c[C2 + 240 + 20 >> 2];
            c[C2 + 288 + 4 >> 2] = c[C2 + 240 + 20 + 4 >> 2];
            c[C2 + 288 + 8 >> 2] = c[C2 + 240 + 20 + 8 >> 2];
            c[C2 + 288 + 12 >> 2] = c[C2 + 240 + 20 + 12 >> 2];
            a:
              do
                if (!h2 ? (o2 = c[C2 + 240 + 4 >> 2] | 0, l2 = c[C2 + 240 + 8 >> 2] | 0, n2 = c[C2 + 240 + 12 >> 2] | 0, v2 = (w2 - B2) * (c[k >> 2] = o2, +g[k >> 2]), v2 = v2 + (x2 - z2) * (c[k >> 2] = l2, +g[k >> 2]), !(s2 + (v2 + (y2 - A2) * (c[k >> 2] = n2, +g[k >> 2])) <= 11920928955078125e-23)) : 0) {
                  m2 = +g[C2 + 240 + 16 >> 2];
                  p2 = +g[C2 + 240 + 36 >> 2] + +g[j2 + 172 >> 2];
                  b:
                    do
                      if (p2 > 0.0010000000474974513) {
                        q2 = p2;
                        r2 = 0;
                        h2 = 0;
                        while (1) {
                          e2 = c[j2 + 168 >> 2] | 0;
                          if (e2 | 0) {
                            D2 = c[(c[e2 >> 2] | 0) + 28 >> 2] | 0;
                            c[C2 + 208 >> 2] = 1065353216;
                            c[C2 + 208 + 4 >> 2] = 1065353216;
                            c[C2 + 208 + 8 >> 2] = 1065353216;
                            g[C2 + 208 + 12 >> 2] = 0;
                            wb[D2 & 7](e2, C2 + 288 | 0, 0.20000000298023224, C2 + 208 | 0);
                          }
                          m2 = (w2 - B2) * (c[k >> 2] = o2, +g[k >> 2]);
                          m2 = m2 + (x2 - z2) * (c[k >> 2] = l2, +g[k >> 2]);
                          m2 = s2 + (m2 + (y2 - A2) * (c[k >> 2] = n2, +g[k >> 2]));
                          if (m2 <= 11920928955078125e-23) {
                            l2 = 0;
                            break a;
                          }
                          p2 = r2 + q2 / m2;
                          if (!(!(p2 <= r2) & (!(p2 < 0) & !(p2 > 1)))) {
                            l2 = 0;
                            break a;
                          }
                          xn(d2, B2, z2, A2, C2 + 224 | 0, p2, C2 + 112 | 0);
                          xn(f2, w2, x2, y2, C2 + 192 | 0, p2, C2 + 48 | 0);
                          l2 = c[j2 + 168 >> 2] | 0;
                          if (l2 | 0) {
                            D2 = c[(c[l2 >> 2] | 0) + 28 >> 2] | 0;
                            c[C2 + 176 >> 2] = 1065353216;
                            c[C2 + 176 + 4 >> 2] = 0;
                            c[C2 + 176 + 8 >> 2] = 0;
                            g[C2 + 176 + 12 >> 2] = 0;
                            wb[D2 & 7](l2, C2 + 112 + 48 | 0, 0.20000000298023224, C2 + 176 | 0);
                          }
                          qb[c[c[j2 >> 2] >> 2] & 31](j2, p2);
                          c[C2 >> 2] = 6836;
                          g[C2 + 36 >> 2] = 999999984306749400;
                          a[C2 + 40 >> 0] = 0;
                          wn(b2, C2 + 112 | 0, C2 + 48 | 0, C2);
                          if (!(a[C2 + 40 >> 0] | 0)) {
                            l2 = 15;
                            break;
                          }
                          m2 = +g[C2 + 36 >> 2];
                          q2 = +g[j2 + 172 >> 2];
                          c[C2 + 288 >> 2] = c[C2 + 20 >> 2];
                          c[C2 + 288 + 4 >> 2] = c[C2 + 20 + 4 >> 2];
                          c[C2 + 288 + 8 >> 2] = c[C2 + 20 + 8 >> 2];
                          c[C2 + 288 + 12 >> 2] = c[C2 + 20 + 12 >> 2];
                          e2 = h2 + 1 | 0;
                          if ((h2 | 0) > 63) {
                            l2 = 16;
                            break;
                          }
                          n2 = c[C2 + 12 >> 2] | 0;
                          l2 = c[C2 + 8 >> 2] | 0;
                          o2 = c[C2 + 4 >> 2] | 0;
                          q2 = m2 + q2;
                          if (!(q2 > 0.0010000000474974513)) {
                            m2 = +g[C2 + 16 >> 2];
                            break b;
                          } else {
                            r2 = p2;
                            h2 = e2;
                          }
                        }
                        if ((l2 | 0) == 15)
                          Zb[c[(c[j2 >> 2] | 0) + 8 >> 2] & 127](j2, -1, h2);
                        else if ((l2 | 0) == 16)
                          Zb[c[(c[j2 >> 2] | 0) + 8 >> 2] & 127](j2, -2, e2);
                        l2 = 0;
                        break a;
                      } else
                        p2 = 0;
                    while (0);
                  g[j2 + 164 >> 2] = p2;
                  c[j2 + 132 >> 2] = o2;
                  c[j2 + 136 >> 2] = l2;
                  c[j2 + 140 >> 2] = n2;
                  g[j2 + 144 >> 2] = m2;
                  c[j2 + 148 >> 2] = c[C2 + 288 >> 2];
                  c[j2 + 148 + 4 >> 2] = c[C2 + 288 + 4 >> 2];
                  c[j2 + 148 + 8 >> 2] = c[C2 + 288 + 8 >> 2];
                  c[j2 + 148 + 12 >> 2] = c[C2 + 288 + 12 >> 2];
                  l2 = 1;
                } else
                  l2 = 0;
              while (0);
            D2 = l2;
            i = C2;
            return D2 | 0;
          }
          function sn(a2) {
            a2 = a2 | 0;
            rG(a2);
            return;
          }
          function tn(a2, b2, c2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            return;
          }
          function un(a2, b2, c2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            return;
          }
          function vn(b2, d2, e2, f2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = +f2;
            if (!(+g[b2 + 36 >> 2] > f2))
              return;
            a[b2 + 40 >> 0] = 1;
            c[b2 + 4 >> 2] = c[d2 >> 2];
            c[b2 + 4 + 4 >> 2] = c[d2 + 4 >> 2];
            c[b2 + 4 + 8 >> 2] = c[d2 + 8 >> 2];
            c[b2 + 4 + 12 >> 2] = c[d2 + 12 >> 2];
            c[b2 + 20 >> 2] = c[e2 >> 2];
            c[b2 + 20 + 4 >> 2] = c[e2 + 4 >> 2];
            c[b2 + 20 + 8 >> 2] = c[e2 + 8 >> 2];
            c[b2 + 20 + 12 >> 2] = c[e2 + 12 >> 2];
            g[b2 + 36 >> 2] = f2;
            return;
          }
          function wn(b2, d2, e2, f2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            var h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0, N2 = 0, O2 = 0;
            h2 = i;
            i = i + 256 | 0;
            if (!(c[b2 + 16 >> 2] | 0)) {
              K2 = c[b2 + 12 >> 2] | 0;
              b2 = c[b2 + 20 >> 2] | 0;
              n2 = +g[d2 >> 2];
              q2 = +g[d2 + 4 >> 2];
              u2 = +g[d2 + 8 >> 2];
              k2 = +g[d2 + 16 >> 2];
              r2 = +g[d2 + 20 >> 2];
              j2 = +g[d2 + 24 >> 2];
              m2 = +g[d2 + 32 >> 2];
              s2 = +g[d2 + 36 >> 2];
              l2 = +g[d2 + 40 >> 2];
              F2 = +g[d2 + 48 >> 2];
              E2 = +g[d2 + 52 >> 2];
              D2 = +g[d2 + 56 >> 2];
              J2 = +g[e2 >> 2];
              I2 = +g[e2 + 16 >> 2];
              y2 = +g[e2 + 32 >> 2];
              H2 = +g[e2 + 4 >> 2];
              G2 = +g[e2 + 20 >> 2];
              w2 = +g[e2 + 36 >> 2];
              v2 = +g[e2 + 8 >> 2];
              z2 = +g[e2 + 24 >> 2];
              x2 = +g[e2 + 40 >> 2];
              C2 = -+g[e2 + 48 >> 2];
              B2 = -+g[e2 + 52 >> 2];
              p2 = -+g[e2 + 56 >> 2];
              d2 = c[(c[K2 >> 2] | 0) + 64 >> 2] | 0;
              A2 = -+g[b2 + 52 >> 2];
              t2 = -+g[b2 + 56 >> 2];
              o2 = -+g[b2 + 60 >> 2];
              g[h2 + 16 >> 2] = (n2 * J2 + k2 * I2 + m2 * y2) * A2 + (n2 * H2 + k2 * G2 + m2 * w2) * t2 + (n2 * v2 + k2 * z2 + m2 * x2) * o2;
              g[h2 + 16 + 4 >> 2] = (q2 * J2 + r2 * I2 + s2 * y2) * A2 + (q2 * H2 + r2 * G2 + s2 * w2) * t2 + (q2 * v2 + r2 * z2 + s2 * x2) * o2;
              g[h2 + 16 + 8 >> 2] = (u2 * J2 + j2 * I2 + l2 * y2) * A2 + (u2 * H2 + j2 * G2 + l2 * w2) * t2 + (u2 * v2 + j2 * z2 + l2 * x2) * o2;
              g[h2 + 16 + 12 >> 2] = 0;
              Zb[d2 & 127](h2 + 168 | 0, K2, h2 + 16 | 0);
              o2 = +g[h2 + 168 >> 2];
              t2 = +g[h2 + 168 + 4 >> 2];
              A2 = +g[h2 + 168 + 8 >> 2];
              y2 = F2 * J2 + E2 * I2 + D2 * y2 + (J2 * C2 + I2 * B2 + y2 * p2) + ((n2 * J2 + k2 * I2 + m2 * y2) * o2 + (q2 * J2 + r2 * I2 + s2 * y2) * t2 + (u2 * J2 + j2 * I2 + l2 * y2) * A2);
              w2 = F2 * H2 + E2 * G2 + D2 * w2 + (H2 * C2 + G2 * B2 + w2 * p2) + ((n2 * H2 + k2 * G2 + m2 * w2) * o2 + (q2 * H2 + r2 * G2 + s2 * w2) * t2 + (u2 * H2 + j2 * G2 + l2 * w2) * A2);
              A2 = F2 * v2 + E2 * z2 + D2 * x2 + (v2 * C2 + z2 * B2 + x2 * p2) + ((n2 * v2 + k2 * z2 + m2 * x2) * o2 + (q2 * v2 + r2 * z2 + s2 * x2) * t2 + (u2 * v2 + j2 * z2 + l2 * x2) * A2);
              x2 = +g[b2 + 52 >> 2];
              l2 = +g[b2 + 56 >> 2];
              z2 = +g[b2 + 60 >> 2];
              j2 = z2 * A2 + (x2 * y2 + l2 * w2) - +g[b2 + 68 >> 2];
              v2 = +g[e2 >> 2];
              u2 = +g[e2 + 4 >> 2];
              t2 = +g[e2 + 8 >> 2];
              s2 = +g[e2 + 16 >> 2];
              r2 = +g[e2 + 20 >> 2];
              q2 = +g[e2 + 24 >> 2];
              o2 = +g[e2 + 32 >> 2];
              m2 = +g[e2 + 36 >> 2];
              k2 = +g[e2 + 40 >> 2];
              n2 = (y2 - x2 * j2) * s2 + (w2 - l2 * j2) * r2 + (A2 - z2 * j2) * q2 + +g[e2 + 52 >> 2];
              p2 = (y2 - x2 * j2) * o2 + (w2 - l2 * j2) * m2 + (A2 - z2 * j2) * k2 + +g[e2 + 56 >> 2];
              g[h2 + 32 >> 2] = t2 * (A2 - z2 * j2) + (v2 * (y2 - x2 * j2) + u2 * (w2 - l2 * j2)) + +g[e2 + 48 >> 2];
              g[h2 + 32 + 4 >> 2] = n2;
              g[h2 + 32 + 8 >> 2] = p2;
              g[h2 + 32 + 12 >> 2] = 0;
              p2 = +g[b2 + 52 >> 2];
              n2 = +g[b2 + 56 >> 2];
              l2 = +g[b2 + 60 >> 2];
              g[h2 >> 2] = v2 * p2 + u2 * n2 + t2 * l2;
              g[h2 + 4 >> 2] = p2 * s2 + n2 * r2 + l2 * q2;
              g[h2 + 8 >> 2] = p2 * o2 + n2 * m2 + l2 * k2;
              g[h2 + 12 >> 2] = 0;
              Yb[c[(c[f2 >> 2] | 0) + 16 >> 2] & 15](f2, h2, h2 + 32 | 0, j2);
              i = h2;
              return;
            } else {
              N2 = c[b2 + 4 >> 2] | 0;
              a[N2 + 312 >> 0] = 0;
              c[N2 >> 2] = 0;
              a[N2 + 356 >> 0] = 1;
              c[N2 + 292 >> 2] = 1566444395;
              c[N2 + 296 >> 2] = 1566444395;
              c[N2 + 300 >> 2] = 1566444395;
              g[N2 + 304 >> 2] = 0;
              c[N2 + 336 >> 2] = 0;
              c[N2 + 336 + 4 >> 2] = 0;
              c[N2 + 336 + 8 >> 2] = 0;
              c[N2 + 336 + 12 >> 2] = 0;
              a[N2 + 336 + 16 >> 0] = 0;
              a[N2 + 332 >> 0] = a[N2 + 332 >> 0] & -16;
              N2 = c[b2 + 12 >> 2] | 0;
              M2 = c[b2 + 16 >> 2] | 0;
              L2 = c[N2 + 4 >> 2] | 0;
              K2 = c[M2 + 4 >> 2] | 0;
              I2 = +Hb[c[(c[N2 >> 2] | 0) + 48 >> 2] & 15](N2);
              O2 = c[b2 + 16 >> 2] | 0;
              J2 = +Hb[c[(c[O2 >> 2] | 0) + 48 >> 2] & 15](O2);
              O2 = c[b2 + 4 >> 2] | 0;
              b2 = c[b2 + 8 >> 2] | 0;
              c[h2 + 168 >> 2] = 6928;
              c[h2 + 168 + 4 >> 2] = 0;
              c[h2 + 168 + 8 >> 2] = 1065353216;
              c[h2 + 168 + 12 >> 2] = 0;
              g[h2 + 168 + 16 >> 2] = 0;
              c[h2 + 168 + 20 >> 2] = b2;
              c[h2 + 168 + 24 >> 2] = O2;
              c[h2 + 168 + 28 >> 2] = N2;
              c[h2 + 168 + 32 >> 2] = M2;
              c[h2 + 168 + 36 >> 2] = L2;
              c[h2 + 168 + 40 >> 2] = K2;
              g[h2 + 168 + 44 >> 2] = I2;
              g[h2 + 168 + 48 >> 2] = J2;
              a[h2 + 168 + 52 >> 0] = 0;
              c[h2 + 168 + 60 >> 2] = -1;
              c[h2 + 168 + 72 >> 2] = 1;
              c[h2 + 168 + 76 >> 2] = 1;
              g[h2 + 32 + 128 >> 2] = 999999984306749400;
              c[h2 + 32 >> 2] = c[d2 >> 2];
              c[h2 + 32 + 4 >> 2] = c[d2 + 4 >> 2];
              c[h2 + 32 + 8 >> 2] = c[d2 + 8 >> 2];
              c[h2 + 32 + 12 >> 2] = c[d2 + 12 >> 2];
              c[h2 + 32 + 16 >> 2] = c[d2 + 16 >> 2];
              c[h2 + 32 + 16 + 4 >> 2] = c[d2 + 16 + 4 >> 2];
              c[h2 + 32 + 16 + 8 >> 2] = c[d2 + 16 + 8 >> 2];
              c[h2 + 32 + 16 + 12 >> 2] = c[d2 + 16 + 12 >> 2];
              c[h2 + 32 + 32 >> 2] = c[d2 + 32 >> 2];
              c[h2 + 32 + 32 + 4 >> 2] = c[d2 + 32 + 4 >> 2];
              c[h2 + 32 + 32 + 8 >> 2] = c[d2 + 32 + 8 >> 2];
              c[h2 + 32 + 32 + 12 >> 2] = c[d2 + 32 + 12 >> 2];
              c[h2 + 32 + 48 >> 2] = c[d2 + 48 >> 2];
              c[h2 + 32 + 48 + 4 >> 2] = c[d2 + 48 + 4 >> 2];
              c[h2 + 32 + 48 + 8 >> 2] = c[d2 + 48 + 8 >> 2];
              c[h2 + 32 + 48 + 12 >> 2] = c[d2 + 48 + 12 >> 2];
              c[h2 + 32 + 64 >> 2] = c[e2 >> 2];
              c[h2 + 32 + 64 + 4 >> 2] = c[e2 + 4 >> 2];
              c[h2 + 32 + 64 + 8 >> 2] = c[e2 + 8 >> 2];
              c[h2 + 32 + 64 + 12 >> 2] = c[e2 + 12 >> 2];
              c[h2 + 32 + 80 >> 2] = c[e2 + 16 >> 2];
              c[h2 + 32 + 80 + 4 >> 2] = c[e2 + 16 + 4 >> 2];
              c[h2 + 32 + 80 + 8 >> 2] = c[e2 + 16 + 8 >> 2];
              c[h2 + 32 + 80 + 12 >> 2] = c[e2 + 16 + 12 >> 2];
              c[h2 + 32 + 96 >> 2] = c[e2 + 32 >> 2];
              c[h2 + 32 + 96 + 4 >> 2] = c[e2 + 32 + 4 >> 2];
              c[h2 + 32 + 96 + 8 >> 2] = c[e2 + 32 + 8 >> 2];
              c[h2 + 32 + 96 + 12 >> 2] = c[e2 + 32 + 12 >> 2];
              c[h2 + 32 + 112 >> 2] = c[e2 + 48 >> 2];
              c[h2 + 32 + 112 + 4 >> 2] = c[e2 + 48 + 4 >> 2];
              c[h2 + 32 + 112 + 8 >> 2] = c[e2 + 48 + 8 >> 2];
              c[h2 + 32 + 112 + 12 >> 2] = c[e2 + 48 + 12 >> 2];
              On(h2 + 168 | 0, h2 + 32 | 0, f2, 0, 0);
              i = h2;
              return;
            }
          }
          function xn(a2, b2, c2, d2, e2, f2, h2) {
            a2 = a2 | 0;
            b2 = +b2;
            c2 = +c2;
            d2 = +d2;
            e2 = e2 | 0;
            f2 = +f2;
            h2 = h2 | 0;
            var j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0;
            l2 = i;
            i = i + 16 | 0;
            k2 = c2 * f2 + +g[a2 + 52 >> 2];
            j2 = d2 * f2 + +g[a2 + 56 >> 2];
            g[h2 + 48 >> 2] = b2 * f2 + +g[a2 + 48 >> 2];
            g[h2 + 52 >> 2] = k2;
            g[h2 + 56 >> 2] = j2;
            g[h2 + 60 >> 2] = 0;
            j2 = +g[e2 >> 2];
            k2 = +g[e2 + 4 >> 2];
            c2 = +g[e2 + 8 >> 2];
            d2 = +O(+(j2 * j2 + k2 * k2 + c2 * c2));
            d2 = d2 * f2 > 0.7853981852531433 ? 0.7853981852531433 / f2 : d2;
            if (d2 < 0.0010000000474974513)
              b2 = f2 * 0.5 - d2 * (f2 * f2 * f2 * 0.02083333395421505 * d2);
            else
              b2 = +R(+(d2 * 0.5 * f2)) / d2;
            o2 = j2 * b2;
            n2 = k2 * b2;
            j2 = c2 * b2;
            q2 = +Q(+(d2 * f2 * 0.5));
            _f(a2, l2);
            b2 = +g[l2 >> 2];
            p2 = +g[l2 + 12 >> 2];
            c2 = +g[l2 + 8 >> 2];
            f2 = +g[l2 + 4 >> 2];
            r2 = 1 / +O(+((q2 * p2 - o2 * b2 - n2 * f2 - j2 * c2) * (q2 * p2 - o2 * b2 - n2 * f2 - j2 * c2) + ((j2 * p2 + q2 * c2 + o2 * f2 - n2 * b2) * (j2 * p2 + q2 * c2 + o2 * f2 - n2 * b2) + ((q2 * b2 + o2 * p2 + n2 * c2 - j2 * f2) * (q2 * b2 + o2 * p2 + n2 * c2 - j2 * f2) + (j2 * b2 + (n2 * p2 + q2 * f2) - o2 * c2) * (j2 * b2 + (n2 * p2 + q2 * f2) - o2 * c2)))));
            d2 = (q2 * b2 + o2 * p2 + n2 * c2 - j2 * f2) * r2;
            k2 = r2 * (j2 * b2 + (n2 * p2 + q2 * f2) - o2 * c2);
            m2 = r2 * (j2 * p2 + q2 * c2 + o2 * f2 - n2 * b2);
            c2 = r2 * (q2 * p2 - o2 * b2 - n2 * f2 - j2 * c2);
            j2 = d2 * (2 / (c2 * c2 + (m2 * m2 + (d2 * d2 + k2 * k2))));
            f2 = k2 * (2 / (c2 * c2 + (m2 * m2 + (d2 * d2 + k2 * k2))));
            b2 = m2 * (2 / (c2 * c2 + (m2 * m2 + (d2 * d2 + k2 * k2))));
            g[h2 >> 2] = 1 - (k2 * f2 + m2 * b2);
            g[h2 + 4 >> 2] = d2 * f2 - c2 * b2;
            g[h2 + 8 >> 2] = d2 * b2 + c2 * f2;
            g[h2 + 12 >> 2] = 0;
            g[h2 + 16 >> 2] = d2 * f2 + c2 * b2;
            g[h2 + 20 >> 2] = 1 - (d2 * j2 + m2 * b2);
            g[h2 + 24 >> 2] = k2 * b2 - c2 * j2;
            g[h2 + 28 >> 2] = 0;
            g[h2 + 32 >> 2] = d2 * b2 - c2 * f2;
            g[h2 + 36 >> 2] = k2 * b2 + c2 * j2;
            g[h2 + 40 >> 2] = 1 - (d2 * j2 + k2 * f2);
            g[h2 + 44 >> 2] = 0;
            i = l2;
            return;
          }
          function yn(a2) {
            a2 = a2 | 0;
            return;
          }
          function zn(a2) {
            a2 = a2 | 0;
            rG(a2);
            return;
          }
          function An(b2, d2, e2, f2, h2, j2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            h2 = h2 | 0;
            j2 = j2 | 0;
            var l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0;
            u2 = i;
            i = i + 288 | 0;
            q2 = c[b2 + 4 >> 2] | 0;
            a[q2 + 312 >> 0] = 0;
            c[q2 >> 2] = 0;
            a[q2 + 356 >> 0] = 1;
            c[q2 + 292 >> 2] = 1566444395;
            c[q2 + 296 >> 2] = 1566444395;
            c[q2 + 300 >> 2] = 1566444395;
            g[q2 + 304 >> 2] = 0;
            c[q2 + 336 >> 2] = 0;
            c[q2 + 336 + 4 >> 2] = 0;
            c[q2 + 336 + 8 >> 2] = 0;
            c[q2 + 336 + 12 >> 2] = 0;
            a[q2 + 336 + 16 >> 0] = 0;
            a[q2 + 332 >> 0] = a[q2 + 332 >> 0] & -16;
            r2 = +g[e2 + 48 >> 2] - +g[d2 + 48 >> 2] - (+g[h2 + 48 >> 2] - +g[f2 + 48 >> 2]);
            s2 = +g[e2 + 52 >> 2] - +g[d2 + 52 >> 2] - (+g[h2 + 52 >> 2] - +g[f2 + 52 >> 2]);
            t2 = +g[e2 + 56 >> 2] - +g[d2 + 56 >> 2] - (+g[h2 + 56 >> 2] - +g[f2 + 56 >> 2]);
            c[u2 + 216 >> 2] = 6836;
            g[u2 + 216 + 36 >> 2] = 999999984306749400;
            a[u2 + 216 + 40 >> 0] = 0;
            q2 = c[b2 + 8 >> 2] | 0;
            p2 = c[b2 + 12 >> 2] | 0;
            o2 = c[b2 + 4 >> 2] | 0;
            c[u2 + 136 >> 2] = 6928;
            c[u2 + 136 + 4 >> 2] = 0;
            c[u2 + 136 + 8 >> 2] = 1065353216;
            c[u2 + 136 + 12 >> 2] = 0;
            g[u2 + 136 + 16 >> 2] = 0;
            c[u2 + 136 + 20 >> 2] = 0;
            c[u2 + 136 + 24 >> 2] = o2;
            c[u2 + 136 + 28 >> 2] = q2;
            c[u2 + 136 + 32 >> 2] = p2;
            c[u2 + 136 + 36 >> 2] = c[q2 + 4 >> 2];
            c[u2 + 136 + 40 >> 2] = c[p2 + 4 >> 2];
            g[u2 + 136 + 44 >> 2] = +Hb[c[(c[q2 >> 2] | 0) + 48 >> 2] & 15](q2);
            g[u2 + 136 + 48 >> 2] = +Hb[c[(c[p2 >> 2] | 0) + 48 >> 2] & 15](p2);
            a[u2 + 136 + 52 >> 0] = 0;
            c[u2 + 136 + 60 >> 2] = -1;
            c[u2 + 136 + 72 >> 2] = 1;
            c[u2 + 136 + 76 >> 2] = 1;
            g[u2 + 128 >> 2] = 999999984306749400;
            c[u2 >> 2] = c[d2 >> 2];
            c[u2 + 4 >> 2] = c[d2 + 4 >> 2];
            c[u2 + 8 >> 2] = c[d2 + 8 >> 2];
            c[u2 + 12 >> 2] = c[d2 + 12 >> 2];
            c[u2 + 16 >> 2] = c[d2 + 16 >> 2];
            c[u2 + 16 + 4 >> 2] = c[d2 + 16 + 4 >> 2];
            c[u2 + 16 + 8 >> 2] = c[d2 + 16 + 8 >> 2];
            c[u2 + 16 + 12 >> 2] = c[d2 + 16 + 12 >> 2];
            c[u2 + 32 >> 2] = c[d2 + 32 >> 2];
            c[u2 + 32 + 4 >> 2] = c[d2 + 32 + 4 >> 2];
            c[u2 + 32 + 8 >> 2] = c[d2 + 32 + 8 >> 2];
            c[u2 + 32 + 12 >> 2] = c[d2 + 32 + 12 >> 2];
            c[u2 + 48 >> 2] = c[d2 + 48 >> 2];
            c[u2 + 48 + 4 >> 2] = c[d2 + 48 + 4 >> 2];
            c[u2 + 48 + 8 >> 2] = c[d2 + 48 + 8 >> 2];
            c[u2 + 48 + 12 >> 2] = c[d2 + 48 + 12 >> 2];
            c[u2 + 64 >> 2] = c[f2 >> 2];
            c[u2 + 64 + 4 >> 2] = c[f2 + 4 >> 2];
            c[u2 + 64 + 8 >> 2] = c[f2 + 8 >> 2];
            c[u2 + 64 + 12 >> 2] = c[f2 + 12 >> 2];
            c[u2 + 80 >> 2] = c[f2 + 16 >> 2];
            c[u2 + 80 + 4 >> 2] = c[f2 + 16 + 4 >> 2];
            c[u2 + 80 + 8 >> 2] = c[f2 + 16 + 8 >> 2];
            c[u2 + 80 + 12 >> 2] = c[f2 + 16 + 12 >> 2];
            c[u2 + 96 >> 2] = c[f2 + 32 >> 2];
            c[u2 + 96 + 4 >> 2] = c[f2 + 32 + 4 >> 2];
            c[u2 + 96 + 8 >> 2] = c[f2 + 32 + 8 >> 2];
            c[u2 + 96 + 12 >> 2] = c[f2 + 32 + 12 >> 2];
            c[u2 + 112 >> 2] = c[f2 + 48 >> 2];
            c[u2 + 112 + 4 >> 2] = c[f2 + 48 + 4 >> 2];
            c[u2 + 112 + 8 >> 2] = c[f2 + 48 + 8 >> 2];
            c[u2 + 112 + 12 >> 2] = c[f2 + 48 + 12 >> 2];
            On(u2 + 136 | 0, u2, u2 + 216 | 0, 0, 0);
            p2 = (a[u2 + 216 + 40 >> 0] | 0) == 0;
            q2 = u2 + 216 + 20 | 0;
            c[u2 + 264 >> 2] = c[q2 >> 2];
            c[u2 + 264 + 4 >> 2] = c[q2 + 4 >> 2];
            c[u2 + 264 + 8 >> 2] = c[q2 + 8 >> 2];
            c[u2 + 264 + 12 >> 2] = c[q2 + 12 >> 2];
            if (p2) {
              j2 = 0;
              i = u2;
              return j2 | 0;
            }
            n2 = +g[u2 + 216 + 36 >> 2];
            l2 = +g[u2 + 216 + 16 >> 2];
            b2 = c[u2 + 216 + 12 >> 2] | 0;
            m2 = c[u2 + 216 + 8 >> 2] | 0;
            o2 = c[u2 + 216 + 4 >> 2] | 0;
            do
              if (n2 > 0.0010000000474974513) {
                l2 = 0;
                p2 = 0;
                while (1) {
                  if ((p2 | 0) > 31) {
                    b2 = 0;
                    p2 = 13;
                    break;
                  }
                  w2 = r2 * (c[k >> 2] = o2, +g[k >> 2]);
                  w2 = s2 * (c[k >> 2] = m2, +g[k >> 2]) + w2;
                  v2 = l2;
                  l2 = l2 - n2 / (t2 * (c[k >> 2] = b2, +g[k >> 2]) + w2);
                  if (!(!(l2 <= v2) & (!(l2 < 0) & !(l2 > 1)))) {
                    b2 = 0;
                    p2 = 13;
                    break;
                  }
                  qb[c[c[j2 >> 2] >> 2] & 31](j2, l2);
                  w2 = 1 - l2;
                  g[u2 + 48 >> 2] = w2 * +g[d2 + 48 >> 2] + l2 * +g[e2 + 48 >> 2];
                  g[u2 + 52 >> 2] = w2 * +g[d2 + 52 >> 2] + l2 * +g[e2 + 52 >> 2];
                  g[u2 + 56 >> 2] = w2 * +g[d2 + 56 >> 2] + l2 * +g[e2 + 56 >> 2];
                  g[u2 + 112 >> 2] = w2 * +g[f2 + 48 >> 2] + l2 * +g[h2 + 48 >> 2];
                  g[u2 + 116 >> 2] = w2 * +g[f2 + 52 >> 2] + l2 * +g[h2 + 52 >> 2];
                  g[u2 + 120 >> 2] = w2 * +g[f2 + 56 >> 2] + l2 * +g[h2 + 56 >> 2];
                  On(u2 + 136 | 0, u2, u2 + 216 | 0, 0, 0);
                  if (!(a[u2 + 216 + 40 >> 0] | 0)) {
                    b2 = 0;
                    p2 = 13;
                    break;
                  }
                  n2 = +g[u2 + 216 + 36 >> 2];
                  if (n2 < 0) {
                    p2 = 8;
                    break;
                  }
                  ;
                  c[u2 + 264 >> 2] = c[q2 >> 2];
                  c[u2 + 264 + 4 >> 2] = c[q2 + 4 >> 2];
                  c[u2 + 264 + 8 >> 2] = c[q2 + 8 >> 2];
                  c[u2 + 264 + 12 >> 2] = c[q2 + 12 >> 2];
                  b2 = c[u2 + 216 + 12 >> 2] | 0;
                  m2 = c[u2 + 216 + 8 >> 2] | 0;
                  o2 = c[u2 + 216 + 4 >> 2] | 0;
                  if (!(n2 > 0.0010000000474974513)) {
                    p2 = 10;
                    break;
                  } else
                    p2 = p2 + 1 | 0;
                }
                if ((p2 | 0) == 8) {
                  g[j2 + 164 >> 2] = l2;
                  f2 = c[u2 + 216 + 8 >> 2] | 0;
                  e2 = c[u2 + 216 + 12 >> 2] | 0;
                  h2 = c[u2 + 216 + 16 >> 2] | 0;
                  c[j2 + 132 >> 2] = c[u2 + 216 + 4 >> 2];
                  c[j2 + 136 >> 2] = f2;
                  c[j2 + 140 >> 2] = e2;
                  c[j2 + 144 >> 2] = h2;
                  c[j2 + 148 >> 2] = c[q2 >> 2];
                  c[j2 + 148 + 4 >> 2] = c[q2 + 4 >> 2];
                  c[j2 + 148 + 8 >> 2] = c[q2 + 8 >> 2];
                  c[j2 + 148 + 12 >> 2] = c[q2 + 12 >> 2];
                  j2 = 1;
                  i = u2;
                  return j2 | 0;
                } else if ((p2 | 0) == 10) {
                  n2 = l2;
                  l2 = +g[u2 + 216 + 16 >> 2];
                  break;
                } else if ((p2 | 0) == 13) {
                  i = u2;
                  return b2 | 0;
                }
              } else
                n2 = 0;
            while (0);
            w2 = r2 * (c[k >> 2] = o2, +g[k >> 2]);
            w2 = s2 * (c[k >> 2] = m2, +g[k >> 2]) + w2;
            if (t2 * (c[k >> 2] = b2, +g[k >> 2]) + w2 >= -+g[j2 + 172 >> 2]) {
              j2 = 0;
              i = u2;
              return j2 | 0;
            }
            g[j2 + 164 >> 2] = n2;
            c[j2 + 132 >> 2] = o2;
            c[j2 + 136 >> 2] = m2;
            c[j2 + 140 >> 2] = b2;
            g[j2 + 144 >> 2] = l2;
            c[j2 + 148 >> 2] = c[u2 + 264 >> 2];
            c[j2 + 148 + 4 >> 2] = c[u2 + 264 + 4 >> 2];
            c[j2 + 148 + 8 >> 2] = c[u2 + 264 + 8 >> 2];
            c[j2 + 148 + 12 >> 2] = c[u2 + 264 + 12 >> 2];
            j2 = 1;
            i = u2;
            return j2 | 0;
          }
          function Bn(a2, b2, d2, e2, f2, h2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            h2 = h2 | 0;
            var j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0;
            v2 = i;
            i = i + 560 | 0;
            k2 = h2;
            l2 = k2 + 36 | 0;
            do {
              c[k2 >> 2] = 0;
              k2 = k2 + 4 | 0;
            } while ((k2 | 0) < (l2 | 0));
            c[v2 + 400 >> 2] = a2;
            c[v2 + 400 + 4 >> 2] = d2;
            o2 = +g[e2 >> 2];
            E2 = +g[b2 >> 2];
            n2 = +g[e2 + 16 >> 2];
            j2 = +g[b2 + 16 >> 2];
            m2 = +g[e2 + 32 >> 2];
            F2 = +g[b2 + 32 >> 2];
            w2 = +g[b2 + 4 >> 2];
            G2 = +g[b2 + 20 >> 2];
            x2 = +g[b2 + 36 >> 2];
            t2 = +g[b2 + 8 >> 2];
            r2 = +g[b2 + 24 >> 2];
            p2 = +g[b2 + 40 >> 2];
            D2 = +g[e2 + 4 >> 2];
            C2 = +g[e2 + 20 >> 2];
            B2 = +g[e2 + 36 >> 2];
            A2 = +g[e2 + 8 >> 2];
            z2 = +g[e2 + 24 >> 2];
            y2 = +g[e2 + 40 >> 2];
            g[v2 + 400 + 8 >> 2] = o2 * E2 + n2 * j2 + m2 * F2;
            g[v2 + 400 + 12 >> 2] = o2 * w2 + n2 * G2 + m2 * x2;
            g[v2 + 400 + 16 >> 2] = o2 * t2 + n2 * r2 + m2 * p2;
            g[v2 + 400 + 20 >> 2] = 0;
            g[v2 + 400 + 24 >> 2] = E2 * D2 + j2 * C2 + F2 * B2;
            g[v2 + 400 + 28 >> 2] = w2 * D2 + G2 * C2 + x2 * B2;
            g[v2 + 400 + 32 >> 2] = t2 * D2 + r2 * C2 + p2 * B2;
            g[v2 + 400 + 36 >> 2] = 0;
            g[v2 + 400 + 40 >> 2] = E2 * A2 + j2 * z2 + F2 * y2;
            g[v2 + 400 + 44 >> 2] = w2 * A2 + G2 * z2 + x2 * y2;
            g[v2 + 400 + 48 >> 2] = t2 * A2 + r2 * z2 + p2 * y2;
            g[v2 + 400 + 52 >> 2] = 0;
            p2 = +g[e2 + 48 >> 2] - +g[b2 + 48 >> 2];
            r2 = +g[e2 + 52 >> 2] - +g[b2 + 52 >> 2];
            t2 = +g[e2 + 56 >> 2] - +g[b2 + 56 >> 2];
            x2 = +g[b2 >> 2];
            G2 = +g[e2 >> 2];
            w2 = +g[b2 + 16 >> 2];
            F2 = +g[e2 + 16 >> 2];
            j2 = +g[b2 + 32 >> 2];
            E2 = +g[e2 + 32 >> 2];
            m2 = +g[b2 + 4 >> 2];
            n2 = +g[b2 + 20 >> 2];
            o2 = +g[b2 + 36 >> 2];
            q2 = +g[b2 + 8 >> 2];
            s2 = +g[b2 + 24 >> 2];
            u2 = +g[b2 + 40 >> 2];
            g[v2 + 400 + 56 >> 2] = x2 * G2 + w2 * F2 + j2 * E2;
            g[v2 + 400 + 60 >> 2] = x2 * D2 + w2 * C2 + j2 * B2;
            g[v2 + 400 + 64 >> 2] = x2 * A2 + w2 * z2 + j2 * y2;
            g[v2 + 400 + 68 >> 2] = 0;
            g[v2 + 400 + 72 >> 2] = G2 * m2 + F2 * n2 + E2 * o2;
            g[v2 + 400 + 76 >> 2] = D2 * m2 + C2 * n2 + B2 * o2;
            g[v2 + 400 + 80 >> 2] = A2 * m2 + z2 * n2 + y2 * o2;
            g[v2 + 400 + 84 >> 2] = 0;
            g[v2 + 400 + 88 >> 2] = G2 * q2 + F2 * s2 + E2 * u2;
            g[v2 + 400 + 92 >> 2] = D2 * q2 + C2 * s2 + B2 * u2;
            g[v2 + 400 + 96 >> 2] = A2 * q2 + z2 * s2 + y2 * u2;
            g[v2 + 400 + 100 >> 2] = 0;
            g[v2 + 400 + 104 >> 2] = p2 * x2 + r2 * w2 + t2 * j2;
            g[v2 + 400 + 108 >> 2] = p2 * m2 + r2 * n2 + t2 * o2;
            g[v2 + 400 + 112 >> 2] = p2 * q2 + r2 * s2 + t2 * u2;
            g[v2 + 400 + 116 >> 2] = 0;
            c[v2 + 400 + 120 >> 2] = 71;
            c[v2 + 400 + 124 >> 2] = 0;
            c[v2 + 16 + 364 >> 2] = 0;
            c[v2 + 16 + 128 >> 2] = 0;
            c[v2 + 16 + 128 + 4 >> 2] = 0;
            c[v2 + 16 + 128 + 8 >> 2] = 0;
            c[v2 + 16 + 128 + 12 >> 2] = 0;
            c[v2 + 16 + 376 >> 2] = 2;
            c[v2 + 16 + 368 >> 2] = 0;
            g[v2 + 16 + 144 >> 2] = 0;
            f2 = Cn(v2 + 16 | 0, v2 + 400 | 0, f2) | 0;
            if (f2 | 0) {
              c[h2 >> 2] = (f2 | 0) == 1 ? 1 : 2;
              b2 = 0;
              i = v2;
              return b2 | 0;
            }
            f2 = c[v2 + 16 + 372 >> 2] | 0;
            if (!(c[f2 + 32 >> 2] | 0)) {
              q2 = 0;
              p2 = 0;
              o2 = 0;
              n2 = 0;
              m2 = 0;
              j2 = 0;
            } else {
              e2 = 0;
              q2 = 0;
              p2 = 0;
              o2 = 0;
              n2 = 0;
              m2 = 0;
              j2 = 0;
              do {
                u2 = +g[f2 + 16 + (e2 << 2) >> 2];
                a2 = c[v2 + 400 + 120 >> 2] | 0;
                l2 = c[v2 + 400 + 124 >> 2] | 0;
                d2 = (c[v2 + 400 >> 2] | 0) + (l2 >> 1) | 0;
                if (l2 & 1)
                  a2 = c[(c[d2 >> 2] | 0) + a2 >> 2] | 0;
                Zb[a2 & 127](v2, d2, c[f2 + (e2 << 2) >> 2] | 0);
                q2 = q2 + u2 * +g[v2 >> 2];
                o2 = o2 + u2 * +g[v2 + 4 >> 2];
                p2 = p2 + u2 * +g[v2 + 8 >> 2];
                f2 = c[(c[v2 + 16 + 372 >> 2] | 0) + (e2 << 2) >> 2] | 0;
                r2 = -+g[f2 >> 2];
                s2 = -+g[f2 + 4 >> 2];
                t2 = -+g[f2 + 8 >> 2];
                f2 = c[v2 + 400 + 120 >> 2] | 0;
                l2 = c[v2 + 400 + 124 >> 2] | 0;
                a2 = (c[v2 + 400 + 4 >> 2] | 0) + (l2 >> 1) | 0;
                if (l2 & 1)
                  f2 = c[(c[a2 >> 2] | 0) + f2 >> 2] | 0;
                F2 = +g[v2 + 400 + 24 >> 2] * r2 + +g[v2 + 400 + 28 >> 2] * s2 + +g[v2 + 400 + 32 >> 2] * t2;
                E2 = +g[v2 + 400 + 40 >> 2] * r2 + +g[v2 + 400 + 44 >> 2] * s2 + +g[v2 + 400 + 48 >> 2] * t2;
                g[v2 + 528 >> 2] = +g[v2 + 400 + 8 >> 2] * r2 + +g[v2 + 400 + 12 >> 2] * s2 + +g[v2 + 400 + 16 >> 2] * t2;
                g[v2 + 528 + 4 >> 2] = F2;
                g[v2 + 528 + 8 >> 2] = E2;
                g[v2 + 528 + 12 >> 2] = 0;
                Zb[f2 & 127](v2 + 544 | 0, a2, v2 + 528 | 0);
                E2 = +g[v2 + 544 >> 2];
                F2 = +g[v2 + 544 + 4 >> 2];
                G2 = +g[v2 + 544 + 8 >> 2];
                n2 = n2 + u2 * (E2 * +g[v2 + 400 + 56 >> 2] + F2 * +g[v2 + 400 + 60 >> 2] + G2 * +g[v2 + 400 + 64 >> 2] + +g[v2 + 400 + 104 >> 2]);
                j2 = j2 + u2 * (E2 * +g[v2 + 400 + 72 >> 2] + F2 * +g[v2 + 400 + 76 >> 2] + G2 * +g[v2 + 400 + 80 >> 2] + +g[v2 + 400 + 108 >> 2]);
                m2 = m2 + u2 * (E2 * +g[v2 + 400 + 88 >> 2] + F2 * +g[v2 + 400 + 92 >> 2] + G2 * +g[v2 + 400 + 96 >> 2] + +g[v2 + 400 + 112 >> 2]);
                e2 = e2 + 1 | 0;
                f2 = c[v2 + 16 + 372 >> 2] | 0;
              } while (e2 >>> 0 < (c[f2 + 32 >> 2] | 0) >>> 0);
            }
            D2 = q2 * +g[b2 + 16 >> 2] + o2 * +g[b2 + 20 >> 2] + p2 * +g[b2 + 24 >> 2] + +g[b2 + 52 >> 2];
            E2 = q2 * +g[b2 + 32 >> 2] + o2 * +g[b2 + 36 >> 2] + p2 * +g[b2 + 40 >> 2] + +g[b2 + 56 >> 2];
            g[h2 + 4 >> 2] = q2 * +g[b2 >> 2] + o2 * +g[b2 + 4 >> 2] + p2 * +g[b2 + 8 >> 2] + +g[b2 + 48 >> 2];
            g[h2 + 8 >> 2] = D2;
            g[h2 + 12 >> 2] = E2;
            g[h2 + 16 >> 2] = 0;
            E2 = n2 * +g[b2 + 16 >> 2] + j2 * +g[b2 + 20 >> 2] + m2 * +g[b2 + 24 >> 2] + +g[b2 + 52 >> 2];
            D2 = n2 * +g[b2 + 32 >> 2] + j2 * +g[b2 + 36 >> 2] + m2 * +g[b2 + 40 >> 2] + +g[b2 + 56 >> 2];
            g[h2 + 20 >> 2] = n2 * +g[b2 >> 2] + j2 * +g[b2 + 4 >> 2] + m2 * +g[b2 + 8 >> 2] + +g[b2 + 48 >> 2];
            g[h2 + 24 >> 2] = E2;
            g[h2 + 28 >> 2] = D2;
            g[h2 + 32 >> 2] = 0;
            D2 = q2 - n2;
            E2 = o2 - j2;
            G2 = p2 - m2;
            g[h2 + 48 >> 2] = 0;
            F2 = +O(+(D2 * D2 + E2 * E2 + G2 * G2));
            g[h2 + 52 >> 2] = F2;
            F2 = F2 > 9999999747378752e-20 ? 1 / F2 : 1;
            g[h2 + 36 >> 2] = F2 * D2;
            g[h2 + 40 >> 2] = F2 * E2;
            g[h2 + 44 >> 2] = F2 * G2;
            b2 = 1;
            i = v2;
            return b2 | 0;
          }
          function Cn(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, h2 = 0, j2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0;
            A2 = i;
            i = i + 176 | 0;
            c[a2 + 348 >> 2] = a2 + 220;
            c[a2 + 352 >> 2] = a2 + 252;
            c[a2 + 356 >> 2] = a2 + 284;
            c[a2 + 360 >> 2] = a2 + 316;
            c[a2 + 364 >> 2] = 4;
            c[a2 + 368 >> 2] = 0;
            c[a2 + 376 >> 2] = 0;
            x2 = c[b2 + 4 >> 2] | 0;
            c[a2 >> 2] = c[b2 >> 2];
            c[a2 + 4 >> 2] = x2;
            c[a2 + 8 >> 2] = c[b2 + 8 >> 2];
            c[a2 + 8 + 4 >> 2] = c[b2 + 8 + 4 >> 2];
            c[a2 + 8 + 8 >> 2] = c[b2 + 8 + 8 >> 2];
            c[a2 + 8 + 12 >> 2] = c[b2 + 8 + 12 >> 2];
            c[a2 + 24 >> 2] = c[b2 + 24 >> 2];
            c[a2 + 24 + 4 >> 2] = c[b2 + 24 + 4 >> 2];
            c[a2 + 24 + 8 >> 2] = c[b2 + 24 + 8 >> 2];
            c[a2 + 24 + 12 >> 2] = c[b2 + 24 + 12 >> 2];
            c[a2 + 40 >> 2] = c[b2 + 40 >> 2];
            c[a2 + 40 + 4 >> 2] = c[b2 + 40 + 4 >> 2];
            c[a2 + 40 + 8 >> 2] = c[b2 + 40 + 8 >> 2];
            c[a2 + 40 + 12 >> 2] = c[b2 + 40 + 12 >> 2];
            c[a2 + 56 >> 2] = c[b2 + 56 >> 2];
            c[a2 + 56 + 4 >> 2] = c[b2 + 56 + 4 >> 2];
            c[a2 + 56 + 8 >> 2] = c[b2 + 56 + 8 >> 2];
            c[a2 + 56 + 12 >> 2] = c[b2 + 56 + 12 >> 2];
            c[a2 + 72 >> 2] = c[b2 + 72 >> 2];
            c[a2 + 72 + 4 >> 2] = c[b2 + 72 + 4 >> 2];
            c[a2 + 72 + 8 >> 2] = c[b2 + 72 + 8 >> 2];
            c[a2 + 72 + 12 >> 2] = c[b2 + 72 + 12 >> 2];
            c[a2 + 88 >> 2] = c[b2 + 88 >> 2];
            c[a2 + 88 + 4 >> 2] = c[b2 + 88 + 4 >> 2];
            c[a2 + 88 + 8 >> 2] = c[b2 + 88 + 8 >> 2];
            c[a2 + 88 + 12 >> 2] = c[b2 + 88 + 12 >> 2];
            c[a2 + 104 >> 2] = c[b2 + 104 >> 2];
            c[a2 + 104 + 4 >> 2] = c[b2 + 104 + 4 >> 2];
            c[a2 + 104 + 8 >> 2] = c[b2 + 104 + 8 >> 2];
            c[a2 + 104 + 12 >> 2] = c[b2 + 104 + 12 >> 2];
            x2 = c[b2 + 124 >> 2] | 0;
            c[a2 + 120 >> 2] = c[b2 + 120 >> 2];
            c[a2 + 124 >> 2] = x2;
            g[a2 + 144 >> 2] = 0;
            c[a2 + 180 >> 2] = 0;
            c[a2 + 128 >> 2] = c[d2 >> 2];
            c[a2 + 128 + 4 >> 2] = c[d2 + 4 >> 2];
            c[a2 + 128 + 8 >> 2] = c[d2 + 8 >> 2];
            c[a2 + 128 + 12 >> 2] = c[d2 + 12 >> 2];
            e2 = +g[a2 + 128 >> 2];
            h2 = +g[a2 + 132 >> 2];
            j2 = +g[a2 + 136 >> 2];
            if (e2 * e2 + h2 * h2 + j2 * j2 > 0) {
              d2 = (g[k >> 2] = -e2, c[k >> 2] | 0);
              b2 = (g[k >> 2] = -h2, c[k >> 2] | 0);
              f2 = (g[k >> 2] = -j2, c[k >> 2] | 0);
            } else {
              d2 = 1065353216;
              b2 = 0;
              f2 = 0;
            }
            g[a2 + 164 >> 2] = 0;
            c[a2 + 364 >> 2] = 3;
            c[a2 + 148 >> 2] = a2 + 316;
            c[a2 + 180 >> 2] = 1;
            t2 = (c[k >> 2] = d2, +g[k >> 2]);
            v2 = (c[k >> 2] = b2, +g[k >> 2]);
            Dn(a2, t2, v2, (c[k >> 2] = f2, +g[k >> 2]), a2 + 316 | 0);
            g[a2 + 164 >> 2] = 1;
            w2 = (c[a2 + 148 >> 2] | 0) + 16 | 0;
            c[a2 + 128 >> 2] = c[w2 >> 2];
            c[a2 + 128 + 4 >> 2] = c[w2 + 4 >> 2];
            c[a2 + 128 + 8 >> 2] = c[w2 + 8 >> 2];
            c[a2 + 128 + 12 >> 2] = c[w2 + 12 >> 2];
            c[A2 + 24 + 48 >> 2] = c[w2 >> 2];
            c[A2 + 24 + 48 + 4 >> 2] = c[w2 + 4 >> 2];
            c[A2 + 24 + 48 + 8 >> 2] = c[w2 + 8 >> 2];
            c[A2 + 24 + 48 + 12 >> 2] = c[w2 + 12 >> 2];
            c[A2 + 24 + 32 >> 2] = c[w2 >> 2];
            c[A2 + 24 + 32 + 4 >> 2] = c[w2 + 4 >> 2];
            c[A2 + 24 + 32 + 8 >> 2] = c[w2 + 8 >> 2];
            c[A2 + 24 + 32 + 12 >> 2] = c[w2 + 12 >> 2];
            c[A2 + 24 + 16 >> 2] = c[w2 >> 2];
            c[A2 + 24 + 16 + 4 >> 2] = c[w2 + 4 >> 2];
            c[A2 + 24 + 16 + 8 >> 2] = c[w2 + 8 >> 2];
            c[A2 + 24 + 16 + 12 >> 2] = c[w2 + 12 >> 2];
            c[A2 + 24 >> 2] = c[w2 >> 2];
            c[A2 + 24 + 4 >> 2] = c[w2 + 4 >> 2];
            c[A2 + 24 + 8 >> 2] = c[w2 + 8 >> 2];
            c[A2 + 24 + 12 >> 2] = c[w2 + 12 >> 2];
            v2 = 0;
            w2 = 0;
            x2 = 0;
            e2 = e2 * e2 + h2 * h2 + j2 * j2;
            a:
              do {
                u2 = c[a2 + 368 >> 2] | 0;
                l2 = +g[a2 + 128 >> 2];
                h2 = +g[a2 + 132 >> 2];
                j2 = +g[a2 + 136 >> 2];
                o2 = +O(+(l2 * l2 + h2 * h2 + j2 * j2));
                if (o2 < 9999999747378752e-20) {
                  z2 = 5;
                  break;
                }
                g[a2 + 148 + (u2 * 36 | 0) + 16 + (c[a2 + 148 + (u2 * 36 | 0) + 32 >> 2] << 2) >> 2] = 0;
                d2 = (c[a2 + 364 >> 2] | 0) + -1 | 0;
                c[a2 + 364 >> 2] = d2;
                c[a2 + 148 + (u2 * 36 | 0) + (c[a2 + 148 + (u2 * 36 | 0) + 32 >> 2] << 2) >> 2] = c[a2 + 348 + (d2 << 2) >> 2];
                d2 = c[a2 + 148 + (u2 * 36 | 0) + 32 >> 2] | 0;
                c[a2 + 148 + (u2 * 36 | 0) + 32 >> 2] = d2 + 1;
                Dn(a2, -l2, -h2, -j2, c[a2 + 148 + (u2 * 36 | 0) + (d2 << 2) >> 2] | 0);
                d2 = c[a2 + 148 + (u2 * 36 | 0) + 32 >> 2] | 0;
                b2 = c[a2 + 148 + (u2 * 36 | 0) + (d2 + -1 << 2) >> 2] | 0;
                h2 = +g[b2 + 16 >> 2];
                j2 = +g[b2 + 20 >> 2];
                l2 = +g[b2 + 24 >> 2];
                q2 = h2 - +g[A2 + 24 >> 2];
                r2 = j2 - +g[A2 + 24 + 4 >> 2];
                t2 = l2 - +g[A2 + 24 + 8 >> 2];
                if (q2 * q2 + r2 * r2 + t2 * t2 < 9999999747378752e-20) {
                  z2 = 8;
                  break;
                }
                q2 = h2 - +g[A2 + 24 + 16 >> 2];
                r2 = j2 - +g[A2 + 24 + 20 >> 2];
                t2 = l2 - +g[A2 + 24 + 24 >> 2];
                if (q2 * q2 + r2 * r2 + t2 * t2 < 9999999747378752e-20) {
                  z2 = 8;
                  break;
                }
                q2 = h2 - +g[A2 + 24 + 32 >> 2];
                r2 = j2 - +g[A2 + 24 + 36 >> 2];
                t2 = l2 - +g[A2 + 24 + 40 >> 2];
                if (q2 * q2 + r2 * r2 + t2 * t2 < 9999999747378752e-20) {
                  z2 = 8;
                  break;
                }
                q2 = h2 - +g[A2 + 24 + 48 >> 2];
                r2 = j2 - +g[A2 + 24 + 52 >> 2];
                t2 = l2 - +g[A2 + 24 + 56 >> 2];
                if (q2 * q2 + r2 * r2 + t2 * t2 < 9999999747378752e-20) {
                  z2 = 8;
                  break;
                }
                w2 = w2 + 1 & 3;
                s2 = A2 + 24 + (w2 << 4) | 0;
                c[s2 >> 2] = c[b2 + 16 >> 2];
                c[s2 + 4 >> 2] = c[b2 + 16 + 4 >> 2];
                c[s2 + 8 >> 2] = c[b2 + 16 + 8 >> 2];
                c[s2 + 12 >> 2] = c[b2 + 16 + 12 >> 2];
                t2 = (+g[a2 + 128 >> 2] * h2 + +g[a2 + 132 >> 2] * j2 + +g[a2 + 136 >> 2] * l2) / o2;
                v2 = t2 > v2 ? t2 : v2;
                if (o2 - v2 - o2 * 9999999747378752e-20 <= 0) {
                  z2 = 9;
                  break;
                }
                c[A2 >> 2] = 0;
                b:
                  do
                    switch (d2 | 0) {
                      case 2: {
                        s2 = c[a2 + 148 + (u2 * 36 | 0) >> 2] | 0;
                        n2 = c[a2 + 148 + (u2 * 36 | 0) + 4 >> 2] | 0;
                        e2 = +g[n2 + 16 >> 2];
                        h2 = +g[s2 + 16 >> 2];
                        j2 = +g[n2 + 20 >> 2];
                        l2 = +g[s2 + 20 >> 2];
                        o2 = +g[n2 + 24 >> 2];
                        p2 = +g[s2 + 24 >> 2];
                        if (!((e2 - h2) * (e2 - h2) + (j2 - l2) * (j2 - l2) + (o2 - p2) * (o2 - p2) > 0)) {
                          z2 = 39;
                          break a;
                        }
                        q2 = -(h2 * (e2 - h2) + l2 * (j2 - l2) + p2 * (o2 - p2)) / ((e2 - h2) * (e2 - h2) + (j2 - l2) * (j2 - l2) + (o2 - p2) * (o2 - p2));
                        if (q2 >= 1) {
                          g[A2 + 8 >> 2] = 0;
                          g[A2 + 8 + 4 >> 2] = 1;
                          c[A2 >> 2] = 2;
                          e2 = e2 * e2 + j2 * j2 + o2 * o2;
                          break b;
                        }
                        if (!(q2 <= 0)) {
                          g[A2 + 8 + 4 >> 2] = q2;
                          g[A2 + 8 >> 2] = 1 - q2;
                          c[A2 >> 2] = 3;
                          e2 = ((e2 - h2) * q2 + h2) * ((e2 - h2) * q2 + h2) + ((j2 - l2) * q2 + l2) * ((j2 - l2) * q2 + l2) + ((o2 - p2) * q2 + p2) * ((o2 - p2) * q2 + p2);
                          break b;
                        } else {
                          g[A2 + 8 >> 2] = 1;
                          g[A2 + 8 + 4 >> 2] = 0;
                          c[A2 >> 2] = 1;
                          e2 = h2 * h2 + l2 * l2 + p2 * p2;
                          break b;
                        }
                      }
                      case 3: {
                        e2 = +En((c[a2 + 148 + (u2 * 36 | 0) >> 2] | 0) + 16 | 0, (c[a2 + 148 + (u2 * 36 | 0) + 4 >> 2] | 0) + 16 | 0, (c[a2 + 148 + (u2 * 36 | 0) + 8 >> 2] | 0) + 16 | 0, A2 + 8 | 0, A2);
                        break;
                      }
                      case 4: {
                        f2 = c[a2 + 148 + (u2 * 36 | 0) >> 2] | 0;
                        m2 = c[a2 + 148 + (u2 * 36 | 0) + 4 >> 2] | 0;
                        n2 = c[a2 + 148 + (u2 * 36 | 0) + 8 >> 2] | 0;
                        s2 = c[a2 + 148 + (u2 * 36 | 0) + 12 >> 2] | 0;
                        c[A2 + 152 >> 2] = f2 + 16;
                        c[A2 + 152 + 4 >> 2] = m2 + 16;
                        c[A2 + 152 + 8 >> 2] = n2 + 16;
                        c[A2 + 152 + 12 >> 2] = s2 + 16;
                        j2 = +g[f2 + 16 >> 2];
                        l2 = +g[s2 + 16 >> 2];
                        e2 = +g[f2 + 20 >> 2];
                        o2 = +g[s2 + 20 >> 2];
                        h2 = +g[f2 + 24 >> 2];
                        p2 = +g[s2 + 24 >> 2];
                        g[A2 + 104 >> 2] = j2 - l2;
                        g[A2 + 104 + 4 >> 2] = e2 - o2;
                        g[A2 + 104 + 8 >> 2] = h2 - p2;
                        g[A2 + 104 + 12 >> 2] = 0;
                        B2 = +g[m2 + 16 >> 2];
                        D2 = +g[m2 + 20 >> 2];
                        r2 = +g[m2 + 24 >> 2];
                        g[A2 + 104 + 16 >> 2] = B2 - l2;
                        g[A2 + 104 + 20 >> 2] = D2 - o2;
                        g[A2 + 104 + 24 >> 2] = r2 - p2;
                        g[A2 + 104 + 28 >> 2] = 0;
                        q2 = +g[n2 + 16 >> 2];
                        E2 = +g[n2 + 20 >> 2];
                        C2 = +g[n2 + 24 >> 2];
                        g[A2 + 104 + 32 >> 2] = q2 - l2;
                        g[A2 + 104 + 36 >> 2] = E2 - o2;
                        g[A2 + 104 + 40 >> 2] = C2 - p2;
                        g[A2 + 104 + 44 >> 2] = 0;
                        t2 = (e2 - o2) * (r2 - p2) * (q2 - l2) + (h2 - p2) * (B2 - l2) * (E2 - o2) - (E2 - o2) * ((r2 - p2) * (j2 - l2)) - (e2 - o2) * (B2 - l2) * (C2 - p2) + (C2 - p2) * ((j2 - l2) * (D2 - o2)) - (q2 - l2) * ((h2 - p2) * (D2 - o2));
                        if (t2 != t2 | false | t2 == 0 | !(t2 * (h2 * ((B2 - q2) * (e2 - D2) - (D2 - E2) * (j2 - B2)) + (j2 * ((D2 - E2) * (h2 - r2) - (r2 - C2) * (e2 - D2)) + e2 * ((r2 - C2) * (j2 - B2) - (B2 - q2) * (h2 - r2)))) <= 0))
                          e2 = -1;
                        else {
                          c[A2 + 92 >> 2] = 0;
                          c[A2 + 92 + 4 >> 2] = 0;
                          c[A2 + 92 + 8 >> 2] = 0;
                          c[A2 + 88 >> 2] = 0;
                          r2 = e2 - o2;
                          q2 = h2 - p2;
                          h2 = j2 - l2;
                          d2 = 0;
                          e2 = -1;
                          while (1) {
                            b2 = c[6876 + (d2 << 2) >> 2] | 0;
                            C2 = +g[A2 + 104 + (b2 << 4) + 8 >> 2];
                            D2 = +g[A2 + 104 + (b2 << 4) + 4 >> 2];
                            E2 = +g[A2 + 104 + (b2 << 4) >> 2];
                            if (t2 * ((r2 * C2 - q2 * D2) * l2 + o2 * (q2 * E2 - C2 * h2) + (D2 * h2 - r2 * E2) * p2) > 0 ? (y2 = +En(c[A2 + 152 + (d2 << 2) >> 2] | 0, c[A2 + 152 + (b2 << 2) >> 2] | 0, s2 + 16 | 0, A2 + 92 | 0, A2 + 88 | 0), e2 < 0 | y2 < e2) : 0) {
                              F2 = c[A2 + 88 >> 2] | 0;
                              c[A2 >> 2] = (F2 & 2 | 0 ? 1 << b2 : 0) + (F2 << 1 & 8) + (F2 & 1 | 0 ? 1 << d2 : 0);
                              c[A2 + 8 + (d2 << 2) >> 2] = c[A2 + 92 >> 2];
                              c[A2 + 8 + (b2 << 2) >> 2] = c[A2 + 92 + 4 >> 2];
                              g[A2 + 8 + (c[6876 + (b2 << 2) >> 2] << 2) >> 2] = 0;
                              c[A2 + 8 + 12 >> 2] = c[A2 + 92 + 8 >> 2];
                              e2 = y2;
                            }
                            d2 = d2 + 1 | 0;
                            if ((d2 | 0) == 3)
                              break;
                            r2 = +g[A2 + 104 + (d2 << 4) + 4 >> 2];
                            q2 = +g[A2 + 104 + (d2 << 4) + 8 >> 2];
                            h2 = +g[A2 + 104 + (d2 << 4) >> 2];
                            l2 = +g[s2 + 16 >> 2];
                            o2 = +g[s2 + 20 >> 2];
                            p2 = +g[s2 + 24 >> 2];
                          }
                          if (e2 < 0) {
                            c[A2 >> 2] = 15;
                            l2 = +g[n2 + 20 >> 2];
                            E2 = +g[m2 + 24 >> 2];
                            D2 = +g[s2 + 16 >> 2];
                            h2 = +g[n2 + 24 >> 2];
                            C2 = +g[m2 + 16 >> 2];
                            o2 = +g[s2 + 20 >> 2];
                            j2 = +g[n2 + 16 >> 2];
                            B2 = +g[s2 + 24 >> 2];
                            q2 = +g[m2 + 20 >> 2];
                            g[A2 + 8 >> 2] = (l2 * E2 * D2 + h2 * C2 * o2 - o2 * (E2 * j2) - l2 * C2 * B2 + B2 * (j2 * q2) - D2 * (h2 * q2)) / t2;
                            e2 = +g[f2 + 20 >> 2];
                            p2 = +g[f2 + 24 >> 2];
                            r2 = +g[f2 + 16 >> 2];
                            g[A2 + 8 + 4 >> 2] = (e2 * h2 * D2 + p2 * j2 * o2 - o2 * (h2 * r2) - e2 * j2 * B2 + B2 * (r2 * l2) - D2 * (p2 * l2)) / t2;
                            g[A2 + 8 + 8 >> 2] = (q2 * p2 * D2 + E2 * r2 * o2 - o2 * (p2 * C2) - q2 * r2 * B2 + B2 * (C2 * e2) - D2 * (E2 * e2)) / t2;
                            g[A2 + 8 + 12 >> 2] = 1 - ((l2 * E2 * D2 + h2 * C2 * o2 - o2 * (E2 * j2) - l2 * C2 * B2 + B2 * (j2 * q2) - D2 * (h2 * q2)) / t2 + (e2 * h2 * D2 + p2 * j2 * o2 - o2 * (h2 * r2) - e2 * j2 * B2 + B2 * (r2 * l2) - D2 * (p2 * l2)) / t2 + (q2 * p2 * D2 + E2 * r2 * o2 - o2 * (p2 * C2) - q2 * r2 * B2 + B2 * (C2 * e2) - D2 * (E2 * e2)) / t2);
                            e2 = 0;
                          }
                        }
                        break;
                      }
                      default: {
                      }
                    }
                  while (0);
                if (!(e2 >= 0)) {
                  z2 = 39;
                  break;
                }
                c[a2 + 148 + ((1 - u2 | 0) * 36 | 0) + 32 >> 2] = 0;
                c[a2 + 128 >> 2] = 0;
                c[a2 + 128 + 4 >> 2] = 0;
                c[a2 + 128 + 8 >> 2] = 0;
                c[a2 + 128 + 12 >> 2] = 0;
                c[a2 + 368 >> 2] = 1 - u2;
                d2 = c[a2 + 148 + (u2 * 36 | 0) + 32 >> 2] | 0;
                b2 = c[A2 >> 2] | 0;
                if (d2 | 0) {
                  n2 = 0;
                  do {
                    f2 = a2 + 148 + (u2 * 36 | 0) + (n2 << 2) | 0;
                    m2 = c[f2 >> 2] | 0;
                    if (!(b2 & 1 << n2)) {
                      F2 = c[a2 + 364 >> 2] | 0;
                      c[a2 + 364 >> 2] = F2 + 1;
                      c[a2 + 348 + (F2 << 2) >> 2] = m2;
                    } else {
                      c[a2 + 148 + ((1 - u2 | 0) * 36 | 0) + (c[a2 + 148 + ((1 - u2 | 0) * 36 | 0) + 32 >> 2] << 2) >> 2] = m2;
                      s2 = c[A2 + 8 + (n2 << 2) >> 2] | 0;
                      F2 = c[a2 + 148 + ((1 - u2 | 0) * 36 | 0) + 32 >> 2] | 0;
                      c[a2 + 148 + ((1 - u2 | 0) * 36 | 0) + 32 >> 2] = F2 + 1;
                      c[a2 + 148 + ((1 - u2 | 0) * 36 | 0) + 16 + (F2 << 2) >> 2] = s2;
                      F2 = c[f2 >> 2] | 0;
                      C2 = (c[k >> 2] = s2, +g[k >> 2]);
                      D2 = C2 * +g[F2 + 20 >> 2];
                      E2 = C2 * +g[F2 + 24 >> 2];
                      g[a2 + 128 >> 2] = +g[F2 + 16 >> 2] * C2 + +g[a2 + 128 >> 2];
                      g[a2 + 132 >> 2] = D2 + +g[a2 + 132 >> 2];
                      g[a2 + 136 >> 2] = E2 + +g[a2 + 136 >> 2];
                    }
                    n2 = n2 + 1 | 0;
                  } while ((n2 | 0) != (d2 | 0));
                }
                if ((b2 | 0) == 15)
                  c[a2 + 376 >> 2] = 1;
                x2 = x2 + 1 | 0;
                if (x2 >>> 0 >= 128) {
                  z2 = 38;
                  break;
                }
              } while (!(c[a2 + 376 >> 2] | 0));
            if ((z2 | 0) == 5)
              c[a2 + 376 >> 2] = 1;
            else if ((z2 | 0) == 8) {
              F2 = c[a2 + 368 >> 2] | 0;
              z2 = (c[a2 + 148 + (F2 * 36 | 0) + 32 >> 2] | 0) + -1 | 0;
              c[a2 + 148 + (F2 * 36 | 0) + 32 >> 2] = z2;
              z2 = c[a2 + 148 + (F2 * 36 | 0) + (z2 << 2) >> 2] | 0;
              F2 = c[a2 + 364 >> 2] | 0;
              c[a2 + 364 >> 2] = F2 + 1;
              c[a2 + 348 + (F2 << 2) >> 2] = z2;
            } else if ((z2 | 0) == 9) {
              F2 = c[a2 + 368 >> 2] | 0;
              z2 = (c[a2 + 148 + (F2 * 36 | 0) + 32 >> 2] | 0) + -1 | 0;
              c[a2 + 148 + (F2 * 36 | 0) + 32 >> 2] = z2;
              z2 = c[a2 + 148 + (F2 * 36 | 0) + (z2 << 2) >> 2] | 0;
              F2 = c[a2 + 364 >> 2] | 0;
              c[a2 + 364 >> 2] = F2 + 1;
              c[a2 + 348 + (F2 << 2) >> 2] = z2;
            } else if ((z2 | 0) == 38)
              c[a2 + 376 >> 2] = 2;
            else if ((z2 | 0) == 39) {
              F2 = c[a2 + 368 >> 2] | 0;
              z2 = (c[a2 + 148 + (F2 * 36 | 0) + 32 >> 2] | 0) + -1 | 0;
              c[a2 + 148 + (F2 * 36 | 0) + 32 >> 2] = z2;
              z2 = c[a2 + 148 + (F2 * 36 | 0) + (z2 << 2) >> 2] | 0;
              F2 = c[a2 + 364 >> 2] | 0;
              c[a2 + 364 >> 2] = F2 + 1;
              c[a2 + 348 + (F2 << 2) >> 2] = z2;
            }
            c[a2 + 372 >> 2] = a2 + 148 + ((c[a2 + 368 >> 2] | 0) * 36 | 0);
            d2 = c[a2 + 376 >> 2] | 0;
            switch (d2 | 0) {
              case 0: {
                C2 = +g[a2 + 128 >> 2];
                D2 = +g[a2 + 132 >> 2];
                E2 = +g[a2 + 136 >> 2];
                g[a2 + 144 >> 2] = +O(+(C2 * C2 + D2 * D2 + E2 * E2));
                i = A2;
                return d2 | 0;
              }
              case 1: {
                g[a2 + 144 >> 2] = 0;
                i = A2;
                return d2 | 0;
              }
              default: {
                i = A2;
                return d2 | 0;
              }
            }
            return 0;
          }
          function Dn(a2, b2, d2, e2, f2) {
            a2 = a2 | 0;
            b2 = +b2;
            d2 = +d2;
            e2 = +e2;
            f2 = f2 | 0;
            var h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0;
            k2 = i;
            i = i + 48 | 0;
            m2 = 1 / +O(+(b2 * b2 + d2 * d2 + e2 * e2));
            g[f2 >> 2] = m2 * b2;
            g[f2 + 4 >> 2] = m2 * d2;
            g[f2 + 8 >> 2] = m2 * e2;
            g[f2 + 12 >> 2] = 0;
            h2 = c[a2 + 120 >> 2] | 0;
            l2 = c[a2 + 124 >> 2] | 0;
            j2 = (c[a2 >> 2] | 0) + (l2 >> 1) | 0;
            if (l2 & 1)
              h2 = c[(c[j2 >> 2] | 0) + h2 >> 2] | 0;
            Zb[h2 & 127](k2, j2, f2);
            b2 = -+g[f2 >> 2];
            d2 = -+g[f2 + 4 >> 2];
            e2 = -+g[f2 + 8 >> 2];
            h2 = c[a2 + 120 >> 2] | 0;
            l2 = c[a2 + 124 >> 2] | 0;
            j2 = (c[a2 + 4 >> 2] | 0) + (l2 >> 1) | 0;
            if (l2 & 1)
              h2 = c[(c[j2 >> 2] | 0) + h2 >> 2] | 0;
            m2 = +g[a2 + 24 >> 2] * b2 + +g[a2 + 28 >> 2] * d2 + +g[a2 + 32 >> 2] * e2;
            n2 = +g[a2 + 40 >> 2] * b2 + +g[a2 + 44 >> 2] * d2 + +g[a2 + 48 >> 2] * e2;
            g[k2 + 16 >> 2] = +g[a2 + 8 >> 2] * b2 + +g[a2 + 12 >> 2] * d2 + +g[a2 + 16 >> 2] * e2;
            g[k2 + 16 + 4 >> 2] = m2;
            g[k2 + 16 + 8 >> 2] = n2;
            g[k2 + 16 + 12 >> 2] = 0;
            Zb[h2 & 127](k2 + 32 | 0, j2, k2 + 16 | 0);
            n2 = +g[k2 + 32 >> 2];
            b2 = +g[k2 + 32 + 4 >> 2];
            d2 = +g[k2 + 32 + 8 >> 2];
            e2 = +g[k2 + 4 >> 2] - (n2 * +g[a2 + 72 >> 2] + b2 * +g[a2 + 76 >> 2] + d2 * +g[a2 + 80 >> 2] + +g[a2 + 108 >> 2]);
            m2 = +g[k2 + 8 >> 2] - (n2 * +g[a2 + 88 >> 2] + b2 * +g[a2 + 92 >> 2] + d2 * +g[a2 + 96 >> 2] + +g[a2 + 112 >> 2]);
            g[f2 + 16 >> 2] = +g[k2 >> 2] - (n2 * +g[a2 + 56 >> 2] + b2 * +g[a2 + 60 >> 2] + d2 * +g[a2 + 64 >> 2] + +g[a2 + 104 >> 2]);
            g[f2 + 20 >> 2] = e2;
            g[f2 + 24 >> 2] = m2;
            g[f2 + 28 >> 2] = 0;
            i = k2;
            return;
          }
          function En(a2, b2, d2, e2, f2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            var h2 = 0, j2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0;
            L2 = i;
            i = i + 64 | 0;
            c[L2 + 48 >> 2] = a2;
            c[L2 + 48 + 4 >> 2] = b2;
            c[L2 + 48 + 8 >> 2] = d2;
            C2 = +g[a2 >> 2];
            F2 = +g[b2 >> 2];
            J2 = +g[a2 + 4 >> 2];
            K2 = +g[b2 + 4 >> 2];
            z2 = +g[a2 + 8 >> 2];
            A2 = +g[b2 + 8 >> 2];
            g[L2 >> 2] = C2 - F2;
            g[L2 + 4 >> 2] = J2 - K2;
            g[L2 + 8 >> 2] = z2 - A2;
            g[L2 + 12 >> 2] = 0;
            B2 = +g[d2 >> 2];
            D2 = +g[d2 + 4 >> 2];
            E2 = +g[d2 + 8 >> 2];
            g[L2 + 16 >> 2] = F2 - B2;
            g[L2 + 20 >> 2] = K2 - D2;
            g[L2 + 24 >> 2] = A2 - E2;
            g[L2 + 28 >> 2] = 0;
            g[L2 + 32 >> 2] = B2 - C2;
            g[L2 + 36 >> 2] = D2 - J2;
            g[L2 + 40 >> 2] = E2 - z2;
            g[L2 + 44 >> 2] = 0;
            G2 = (J2 - K2) * (A2 - E2) - (z2 - A2) * (K2 - D2);
            H2 = (z2 - A2) * (F2 - B2) - (A2 - E2) * (C2 - F2);
            I2 = (K2 - D2) * (C2 - F2) - (J2 - K2) * (F2 - B2);
            if (I2 * I2 + (G2 * G2 + H2 * H2) > 0) {
              o2 = J2 - K2;
              p2 = z2 - A2;
              q2 = C2 - F2;
              v2 = C2;
              w2 = J2;
              x2 = z2;
              m2 = 0;
              y2 = -1;
              n2 = 0;
              h2 = 0;
              j2 = 0;
            } else {
              K2 = -1;
              i = L2;
              return +K2;
            }
            while (1) {
              if (v2 * (I2 * o2 - H2 * p2) + w2 * (G2 * p2 - I2 * q2) + (H2 * q2 - G2 * o2) * x2 > 0) {
                u2 = c[6876 + (m2 << 2) >> 2] | 0;
                M2 = c[L2 + 48 + (u2 << 2) >> 2] | 0;
                l2 = +g[M2 >> 2];
                p2 = l2 - v2;
                q2 = +g[M2 + 4 >> 2];
                r2 = q2 - w2;
                s2 = +g[M2 + 8 >> 2];
                t2 = s2 - x2;
                do
                  if (p2 * p2 + r2 * r2 + t2 * t2 > 0) {
                    o2 = -(v2 * p2 + w2 * r2 + x2 * t2) / (p2 * p2 + r2 * r2 + t2 * t2);
                    if (o2 >= 1) {
                      l2 = l2 * l2 + q2 * q2 + s2 * s2;
                      n2 = 2;
                      h2 = 0;
                      j2 = 1065353216;
                      break;
                    }
                    if (!(o2 <= 0)) {
                      j2 = (g[k >> 2] = o2, c[k >> 2] | 0);
                      v2 = v2 + p2 * o2;
                      l2 = w2 + r2 * o2;
                      x2 = x2 + t2 * o2;
                      l2 = x2 * x2 + (v2 * v2 + l2 * l2);
                      n2 = 3;
                      h2 = (g[k >> 2] = 1 - o2, c[k >> 2] | 0);
                      break;
                    } else {
                      l2 = v2 * v2 + w2 * w2 + x2 * x2;
                      n2 = 1;
                      h2 = 1065353216;
                      j2 = 0;
                      break;
                    }
                  } else
                    l2 = -1;
                while (0);
                if (y2 < 0 | l2 < y2) {
                  c[f2 >> 2] = (n2 & 1 | 0 ? 1 << m2 : 0) + (n2 & 2 | 0 ? 1 << u2 : 0);
                  c[e2 + (m2 << 2) >> 2] = h2;
                  c[e2 + (u2 << 2) >> 2] = j2;
                  g[e2 + (c[6876 + (u2 << 2) >> 2] << 2) >> 2] = 0;
                } else
                  l2 = y2;
              } else
                l2 = y2;
              m2 = m2 + 1 | 0;
              if ((m2 | 0) == 3)
                break;
              M2 = c[L2 + 48 + (m2 << 2) >> 2] | 0;
              o2 = +g[L2 + (m2 << 4) + 4 >> 2];
              p2 = +g[L2 + (m2 << 4) + 8 >> 2];
              q2 = +g[L2 + (m2 << 4) >> 2];
              v2 = +g[M2 >> 2];
              w2 = +g[M2 + 4 >> 2];
              x2 = +g[M2 + 8 >> 2];
              y2 = l2;
            }
            if (!(l2 < 0)) {
              K2 = l2;
              i = L2;
              return +K2;
            }
            x2 = +O(+(I2 * I2 + (G2 * G2 + H2 * H2)));
            y2 = (G2 * +g[a2 >> 2] + H2 * +g[a2 + 4 >> 2] + I2 * +g[a2 + 8 >> 2]) / (I2 * I2 + (G2 * G2 + H2 * H2));
            c[f2 >> 2] = 7;
            v2 = +g[b2 >> 2] - G2 * y2;
            t2 = +g[b2 + 4 >> 2] - H2 * y2;
            w2 = +g[b2 + 8 >> 2] - I2 * y2;
            K2 = +O(+((t2 * (F2 - B2) - v2 * (K2 - D2)) * (t2 * (F2 - B2) - v2 * (K2 - D2)) + (((K2 - D2) * w2 - t2 * (A2 - E2)) * ((K2 - D2) * w2 - t2 * (A2 - E2)) + (v2 * (A2 - E2) - w2 * (F2 - B2)) * (v2 * (A2 - E2) - w2 * (F2 - B2))))) / x2;
            g[e2 >> 2] = K2;
            A2 = +g[d2 >> 2] - G2 * y2;
            w2 = +g[d2 + 4 >> 2] - H2 * y2;
            F2 = +g[d2 + 8 >> 2] - I2 * y2;
            J2 = +O(+((w2 * (B2 - C2) - A2 * (D2 - J2)) * (w2 * (B2 - C2) - A2 * (D2 - J2)) + (((D2 - J2) * F2 - w2 * (E2 - z2)) * ((D2 - J2) * F2 - w2 * (E2 - z2)) + (A2 * (E2 - z2) - F2 * (B2 - C2)) * (A2 * (E2 - z2) - F2 * (B2 - C2))))) / x2;
            g[e2 + 4 >> 2] = J2;
            g[e2 + 8 >> 2] = 1 - (J2 + K2);
            K2 = I2 * y2 * (I2 * y2) + (G2 * y2 * (G2 * y2) + H2 * y2 * (H2 * y2));
            i = L2;
            return +K2;
          }
          function Fn(b2, e2, f2, h2, j2, l2, m2) {
            b2 = b2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            h2 = h2 | 0;
            j2 = j2 | 0;
            l2 = l2 | 0;
            m2 = m2 | 0;
            var n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0, N2 = 0, P2 = 0, Q2 = 0, R2 = 0, S2 = 0, T2 = 0, U2 = 0;
            B2 = i;
            i = i + 9856 | 0;
            q2 = l2;
            r2 = q2 + 36 | 0;
            do {
              c[q2 >> 2] = 0;
              q2 = q2 + 4 | 0;
            } while ((q2 | 0) < (r2 | 0));
            c[B2 + 9712 >> 2] = b2;
            c[B2 + 9712 + 4 >> 2] = f2;
            E2 = +g[h2 >> 2];
            R2 = +g[e2 >> 2];
            F2 = +g[h2 + 16 >> 2];
            H2 = +g[e2 + 16 >> 2];
            G2 = +g[h2 + 32 >> 2];
            S2 = +g[e2 + 32 >> 2];
            I2 = +g[e2 + 4 >> 2];
            T2 = +g[e2 + 20 >> 2];
            J2 = +g[e2 + 36 >> 2];
            s2 = +g[e2 + 8 >> 2];
            n2 = +g[e2 + 24 >> 2];
            D2 = +g[e2 + 40 >> 2];
            Q2 = +g[h2 + 4 >> 2];
            P2 = +g[h2 + 20 >> 2];
            N2 = +g[h2 + 36 >> 2];
            M2 = +g[h2 + 8 >> 2];
            L2 = +g[h2 + 24 >> 2];
            K2 = +g[h2 + 40 >> 2];
            g[B2 + 9712 + 8 >> 2] = E2 * R2 + F2 * H2 + G2 * S2;
            g[B2 + 9712 + 12 >> 2] = E2 * I2 + F2 * T2 + G2 * J2;
            g[B2 + 9712 + 16 >> 2] = E2 * s2 + F2 * n2 + G2 * D2;
            g[B2 + 9712 + 20 >> 2] = 0;
            g[B2 + 9712 + 24 >> 2] = R2 * Q2 + H2 * P2 + S2 * N2;
            g[B2 + 9712 + 28 >> 2] = I2 * Q2 + T2 * P2 + J2 * N2;
            g[B2 + 9712 + 32 >> 2] = s2 * Q2 + n2 * P2 + D2 * N2;
            g[B2 + 9712 + 36 >> 2] = 0;
            g[B2 + 9712 + 40 >> 2] = R2 * M2 + H2 * L2 + S2 * K2;
            g[B2 + 9712 + 44 >> 2] = I2 * M2 + T2 * L2 + J2 * K2;
            g[B2 + 9712 + 48 >> 2] = s2 * M2 + n2 * L2 + D2 * K2;
            g[B2 + 9712 + 52 >> 2] = 0;
            D2 = +g[h2 + 48 >> 2] - +g[e2 + 48 >> 2];
            n2 = +g[h2 + 52 >> 2] - +g[e2 + 52 >> 2];
            s2 = +g[h2 + 56 >> 2] - +g[e2 + 56 >> 2];
            J2 = +g[e2 >> 2];
            T2 = +g[h2 >> 2];
            I2 = +g[e2 + 16 >> 2];
            S2 = +g[h2 + 16 >> 2];
            H2 = +g[e2 + 32 >> 2];
            R2 = +g[h2 + 32 >> 2];
            G2 = +g[e2 + 4 >> 2];
            F2 = +g[e2 + 20 >> 2];
            E2 = +g[e2 + 36 >> 2];
            C2 = +g[e2 + 8 >> 2];
            o2 = +g[e2 + 24 >> 2];
            p2 = +g[e2 + 40 >> 2];
            g[B2 + 9712 + 56 >> 2] = J2 * T2 + I2 * S2 + H2 * R2;
            g[B2 + 9712 + 60 >> 2] = J2 * Q2 + I2 * P2 + H2 * N2;
            g[B2 + 9712 + 64 >> 2] = J2 * M2 + I2 * L2 + H2 * K2;
            g[B2 + 9712 + 68 >> 2] = 0;
            g[B2 + 9712 + 72 >> 2] = T2 * G2 + S2 * F2 + R2 * E2;
            g[B2 + 9712 + 76 >> 2] = Q2 * G2 + P2 * F2 + N2 * E2;
            g[B2 + 9712 + 80 >> 2] = M2 * G2 + L2 * F2 + K2 * E2;
            g[B2 + 9712 + 84 >> 2] = 0;
            g[B2 + 9712 + 88 >> 2] = T2 * C2 + S2 * o2 + R2 * p2;
            g[B2 + 9712 + 92 >> 2] = Q2 * C2 + P2 * o2 + N2 * p2;
            g[B2 + 9712 + 96 >> 2] = M2 * C2 + L2 * o2 + K2 * p2;
            g[B2 + 9712 + 100 >> 2] = 0;
            g[B2 + 9712 + 104 >> 2] = D2 * J2 + n2 * I2 + s2 * H2;
            g[B2 + 9712 + 108 >> 2] = D2 * G2 + n2 * F2 + s2 * E2;
            g[B2 + 9712 + 112 >> 2] = D2 * C2 + n2 * o2 + s2 * p2;
            g[B2 + 9712 + 116 >> 2] = 0;
            c[B2 + 9712 + 120 >> 2] = m2 ? 72 : 71;
            c[B2 + 9712 + 124 >> 2] = 0;
            c[B2 + 9328 + 364 >> 2] = 0;
            c[B2 + 9328 + 128 >> 2] = 0;
            c[B2 + 9328 + 128 + 4 >> 2] = 0;
            c[B2 + 9328 + 128 + 8 >> 2] = 0;
            c[B2 + 9328 + 128 + 12 >> 2] = 0;
            c[B2 + 9328 + 376 >> 2] = 2;
            c[B2 + 9328 + 368 >> 2] = 0;
            g[B2 + 9328 + 144 >> 2] = 0;
            p2 = -+g[j2 + 4 >> 2];
            s2 = -+g[j2 + 8 >> 2];
            g[B2 + 16 >> 2] = -+g[j2 >> 2];
            g[B2 + 16 + 4 >> 2] = p2;
            g[B2 + 16 + 8 >> 2] = s2;
            g[B2 + 16 + 12 >> 2] = 0;
            switch (Cn(B2 + 9328 | 0, B2 + 9712 | 0, B2 + 16 | 0) | 0) {
              case 1: {
                w2 = B2 + 32 + 9280 | 0;
                x2 = B2 + 32 + 9288 | 0;
                y2 = B2 + 32 + 9292 | 0;
                c[w2 >> 2] = 0;
                c[w2 + 4 >> 2] = 0;
                c[w2 + 8 >> 2] = 0;
                c[w2 + 12 >> 2] = 0;
                c[B2 + 32 >> 2] = 9;
                A2 = B2 + 32 + 40 | 0;
                c[B2 + 32 + 9276 >> 2] = 0;
                c[A2 >> 2] = 0;
                c[A2 + 4 >> 2] = 0;
                c[A2 + 8 >> 2] = 0;
                c[A2 + 12 >> 2] = 0;
                c[A2 + 16 >> 2] = 0;
                m2 = 0;
                do {
                  b2 = 128 - m2 + -1 | 0;
                  c[B2 + 32 + 2108 + (b2 * 56 | 0) + 44 >> 2] = 0;
                  f2 = c[x2 >> 2] | 0;
                  c[B2 + 32 + 2108 + (b2 * 56 | 0) + 48 >> 2] = f2;
                  if (f2 | 0)
                    c[f2 + 44 >> 2] = B2 + 32 + 2108 + (b2 * 56 | 0);
                  c[x2 >> 2] = B2 + 32 + 2108 + (b2 * 56 | 0);
                  c[y2 >> 2] = (c[y2 >> 2] | 0) + 1;
                  m2 = m2 + 1 | 0;
                } while ((m2 | 0) != 128);
                p2 = +g[j2 >> 2];
                s2 = +g[j2 + 4 >> 2];
                o2 = +g[j2 + 8 >> 2];
                t2 = c[B2 + 9328 + 372 >> 2] | 0;
                do
                  if ((c[t2 + 32 >> 2] | 0) >>> 0 > 1 ? Gn(B2 + 9328 | 0) | 0 : 0) {
                    v2 = B2 + 32 + 9280 | 0;
                    b2 = c[v2 >> 2] | 0;
                    if (b2 | 0) {
                      q2 = c[B2 + 32 + 9284 >> 2] | 0;
                      r2 = c[y2 >> 2] | 0;
                      do {
                        f2 = b2 + 44 | 0;
                        h2 = b2 + 48 | 0;
                        m2 = c[h2 >> 2] | 0;
                        if (m2 | 0)
                          c[m2 + 44 >> 2] = c[f2 >> 2];
                        f2 = c[f2 >> 2] | 0;
                        if (f2 | 0)
                          c[f2 + 48 >> 2] = c[h2 >> 2];
                        if ((c[v2 >> 2] | 0) == (b2 | 0))
                          c[v2 >> 2] = c[h2 >> 2];
                        q2 = q2 + -1 | 0;
                        c[b2 + 44 >> 2] = 0;
                        c[h2 >> 2] = c[x2 >> 2];
                        f2 = c[x2 >> 2] | 0;
                        if (f2 | 0)
                          c[f2 + 44 >> 2] = b2;
                        c[x2 >> 2] = b2;
                        r2 = r2 + 1 | 0;
                        b2 = c[v2 >> 2] | 0;
                      } while ((b2 | 0) != 0);
                      c[B2 + 32 + 9284 >> 2] = q2;
                      c[y2 >> 2] = r2;
                    }
                    c[B2 + 32 >> 2] = 0;
                    c[B2 + 32 + 9276 >> 2] = 0;
                    b2 = c[t2 >> 2] | 0;
                    f2 = c[t2 + 12 >> 2] | 0;
                    T2 = +g[f2 + 16 >> 2];
                    K2 = +g[b2 + 16 >> 2] - T2;
                    M2 = +g[f2 + 20 >> 2];
                    N2 = +g[b2 + 20 >> 2] - M2;
                    Q2 = +g[f2 + 24 >> 2];
                    R2 = +g[b2 + 24 >> 2] - Q2;
                    f2 = c[t2 + 4 >> 2] | 0;
                    P2 = +g[f2 + 16 >> 2] - T2;
                    S2 = +g[f2 + 20 >> 2] - M2;
                    L2 = +g[f2 + 24 >> 2] - Q2;
                    m2 = c[t2 + 8 >> 2] | 0;
                    T2 = +g[m2 + 16 >> 2] - T2;
                    M2 = +g[m2 + 20 >> 2] - M2;
                    Q2 = +g[m2 + 24 >> 2] - Q2;
                    if (K2 * S2 * Q2 + (N2 * L2 * T2 + R2 * P2 * M2 - K2 * L2 * M2 - N2 * P2 * Q2) - R2 * S2 * T2 < 0) {
                      c[t2 >> 2] = f2;
                      c[t2 + 4 >> 2] = b2;
                      h2 = c[t2 + 16 >> 2] | 0;
                      c[t2 + 16 >> 2] = c[t2 + 20 >> 2];
                      c[t2 + 20 >> 2] = h2;
                      h2 = f2;
                    } else {
                      h2 = b2;
                      b2 = f2;
                    }
                    h2 = Hn(B2 + 32 | 0, h2, b2, m2, 1) | 0;
                    q2 = Hn(B2 + 32 | 0, c[t2 + 4 >> 2] | 0, c[t2 >> 2] | 0, c[t2 + 12 >> 2] | 0, 1) | 0;
                    r2 = Hn(B2 + 32 | 0, c[t2 + 8 >> 2] | 0, c[t2 + 4 >> 2] | 0, c[t2 + 12 >> 2] | 0, 1) | 0;
                    j2 = Hn(B2 + 32 | 0, c[t2 >> 2] | 0, c[t2 + 8 >> 2] | 0, c[t2 + 12 >> 2] | 0, 1) | 0;
                    if ((c[B2 + 32 + 9284 >> 2] | 0) == 4) {
                      b2 = c[w2 >> 2] | 0;
                      n2 = +g[b2 + 16 >> 2];
                      f2 = c[b2 + 48 >> 2] | 0;
                      if (f2) {
                        o2 = n2 * n2;
                        while (1) {
                          n2 = +g[f2 + 16 >> 2];
                          m2 = n2 * n2 < o2;
                          b2 = m2 ? f2 : b2;
                          f2 = c[f2 + 48 >> 2] | 0;
                          if (!f2)
                            break;
                          else
                            o2 = m2 ? n2 * n2 : o2;
                        }
                      }
                      s2 = +g[b2 >> 2];
                      p2 = +g[b2 + 4 >> 2];
                      o2 = +g[b2 + 8 >> 2];
                      n2 = +g[b2 + 12 >> 2];
                      u2 = c[b2 + 16 >> 2] | 0;
                      U2 = c[b2 + 20 >> 2] | 0;
                      f2 = c[b2 + 24 >> 2] | 0;
                      m2 = c[b2 + 28 >> 2] | 0;
                      a[h2 + 52 >> 0] = 0;
                      c[h2 + 32 >> 2] = q2;
                      a[q2 + 52 >> 0] = 0;
                      c[q2 + 32 >> 2] = h2;
                      a[h2 + 53 >> 0] = 0;
                      c[h2 + 36 >> 2] = r2;
                      a[r2 + 52 >> 0] = 1;
                      c[r2 + 32 >> 2] = h2;
                      a[h2 + 54 >> 0] = 0;
                      c[h2 + 40 >> 2] = j2;
                      a[j2 + 52 >> 0] = 2;
                      c[j2 + 32 >> 2] = h2;
                      a[q2 + 53 >> 0] = 2;
                      c[q2 + 36 >> 2] = j2;
                      a[j2 + 54 >> 0] = 1;
                      c[j2 + 40 >> 2] = q2;
                      a[q2 + 54 >> 0] = 1;
                      c[q2 + 40 >> 2] = r2;
                      a[r2 + 53 >> 0] = 2;
                      c[r2 + 36 >> 2] = q2;
                      a[r2 + 54 >> 0] = 1;
                      c[r2 + 40 >> 2] = j2;
                      a[j2 + 53 >> 0] = 2;
                      c[j2 + 36 >> 2] = r2;
                      c[B2 + 32 >> 2] = 0;
                      t2 = b2;
                      r2 = U2;
                      j2 = f2;
                      q2 = m2;
                      b2 = u2;
                      u2 = 0;
                      while (1) {
                        f2 = c[B2 + 32 + 9276 >> 2] | 0;
                        if (f2 >>> 0 >= 64) {
                          z2 = 43;
                          break;
                        }
                        c[B2 + 9840 >> 2] = 0;
                        c[B2 + 9840 + 4 >> 2] = 0;
                        c[B2 + 9840 + 8 >> 2] = 0;
                        c[B2 + 32 + 9276 >> 2] = f2 + 1;
                        u2 = u2 + 1 | 0;
                        a[t2 + 55 >> 0] = u2;
                        h2 = t2 + 4 | 0;
                        U2 = t2 + 8 | 0;
                        Dn(B2 + 9328 | 0, +g[t2 >> 2], +g[h2 >> 2], +g[U2 >> 2], B2 + 32 + 60 + (f2 << 5) | 0);
                        if (+g[t2 >> 2] * +g[B2 + 32 + 60 + (f2 << 5) + 16 >> 2] + +g[h2 >> 2] * +g[B2 + 32 + 60 + (f2 << 5) + 20 >> 2] + +g[U2 >> 2] * +g[B2 + 32 + 60 + (f2 << 5) + 24 >> 2] - +g[t2 + 16 >> 2] > 9999999747378752e-20)
                          h2 = 0;
                        else {
                          f2 = 7;
                          z2 = 42;
                          break;
                        }
                        do {
                          m2 = Jn(B2 + 32 | 0, u2, B2 + 32 + 60 + (f2 << 5) | 0, c[t2 + 32 + (h2 << 2) >> 2] | 0, d[t2 + 52 + h2 >> 0] | 0, B2 + 9840 | 0) | 0;
                          h2 = h2 + 1 | 0;
                        } while (m2 & h2 >>> 0 < 3);
                        if (!(m2 & (c[B2 + 9840 + 8 >> 2] | 0) >>> 0 > 2)) {
                          f2 = 4;
                          z2 = 42;
                          break;
                        }
                        m2 = c[B2 + 9840 >> 2] | 0;
                        b2 = c[B2 + 9840 + 4 >> 2] | 0;
                        a[m2 + 53 >> 0] = 2;
                        c[m2 + 36 >> 2] = b2;
                        a[b2 + 54 >> 0] = 1;
                        c[b2 + 40 >> 2] = m2;
                        b2 = t2 + 44 | 0;
                        m2 = t2 + 48 | 0;
                        f2 = c[m2 >> 2] | 0;
                        if (f2 | 0)
                          c[f2 + 44 >> 2] = c[b2 >> 2];
                        b2 = c[b2 >> 2] | 0;
                        if (b2 | 0)
                          c[b2 + 48 >> 2] = c[m2 >> 2];
                        if ((c[v2 >> 2] | 0) == (t2 | 0))
                          c[v2 >> 2] = c[m2 >> 2];
                        c[B2 + 32 + 9284 >> 2] = (c[B2 + 32 + 9284 >> 2] | 0) + -1;
                        c[t2 + 44 >> 2] = 0;
                        c[m2 >> 2] = c[x2 >> 2];
                        b2 = c[x2 >> 2] | 0;
                        if (b2 | 0)
                          c[b2 + 44 >> 2] = t2;
                        c[x2 >> 2] = t2;
                        c[y2 >> 2] = (c[y2 >> 2] | 0) + 1;
                        f2 = c[w2 >> 2] | 0;
                        n2 = +g[f2 + 16 >> 2];
                        b2 = c[f2 + 48 >> 2] | 0;
                        if (b2) {
                          o2 = n2 * n2;
                          while (1) {
                            n2 = +g[b2 + 16 >> 2];
                            m2 = n2 * n2 < o2;
                            f2 = m2 ? b2 : f2;
                            b2 = c[b2 + 48 >> 2] | 0;
                            if (!b2)
                              break;
                            else
                              o2 = m2 ? n2 * n2 : o2;
                          }
                        }
                        s2 = +g[f2 >> 2];
                        p2 = +g[f2 + 4 >> 2];
                        o2 = +g[f2 + 8 >> 2];
                        n2 = +g[f2 + 12 >> 2];
                        b2 = c[f2 + 16 >> 2] | 0;
                        m2 = c[f2 + 20 >> 2] | 0;
                        h2 = c[f2 + 24 >> 2] | 0;
                        q2 = c[f2 + 28 >> 2] | 0;
                        if (u2 >>> 0 >= 255) {
                          f2 = q2;
                          break;
                        } else {
                          t2 = f2;
                          r2 = m2;
                          j2 = h2;
                        }
                      }
                      if ((z2 | 0) == 42) {
                        c[B2 + 32 >> 2] = f2;
                        m2 = r2;
                        h2 = j2;
                        f2 = q2;
                      } else if ((z2 | 0) == 43) {
                        c[B2 + 32 >> 2] = 6;
                        m2 = r2;
                        h2 = j2;
                        f2 = q2;
                      }
                      R2 = (c[k >> 2] = b2, +g[k >> 2]);
                      P2 = s2 * R2;
                      M2 = p2 * R2;
                      R2 = o2 * R2;
                      g[B2 + 32 + 40 >> 2] = s2;
                      g[B2 + 32 + 44 >> 2] = p2;
                      g[B2 + 32 + 48 >> 2] = o2;
                      g[B2 + 32 + 52 >> 2] = n2;
                      c[B2 + 32 + 56 >> 2] = b2;
                      c[B2 + 32 + 36 >> 2] = 3;
                      c[B2 + 32 + 4 >> 2] = m2;
                      c[B2 + 32 + 8 >> 2] = h2;
                      c[B2 + 32 + 12 >> 2] = f2;
                      U2 = h2;
                      Q2 = +g[U2 + 16 >> 2] - P2;
                      K2 = +g[U2 + 20 >> 2] - M2;
                      N2 = +g[U2 + 24 >> 2] - R2;
                      y2 = f2;
                      J2 = +g[y2 + 16 >> 2] - P2;
                      L2 = +g[y2 + 20 >> 2] - M2;
                      S2 = +g[y2 + 24 >> 2] - R2;
                      S2 = +O(+((Q2 * L2 - K2 * J2) * (Q2 * L2 - K2 * J2) + ((K2 * S2 - N2 * L2) * (K2 * S2 - N2 * L2) + (N2 * J2 - Q2 * S2) * (N2 * J2 - Q2 * S2))));
                      g[B2 + 32 + 20 >> 2] = S2;
                      Q2 = +g[y2 + 16 >> 2] - P2;
                      J2 = +g[y2 + 20 >> 2] - M2;
                      N2 = +g[y2 + 24 >> 2] - R2;
                      y2 = m2;
                      L2 = +g[y2 + 16 >> 2] - P2;
                      K2 = +g[y2 + 20 >> 2] - M2;
                      T2 = +g[y2 + 24 >> 2] - R2;
                      T2 = +O(+((Q2 * K2 - J2 * L2) * (Q2 * K2 - J2 * L2) + ((J2 * T2 - N2 * K2) * (J2 * T2 - N2 * K2) + (N2 * L2 - Q2 * T2) * (N2 * L2 - Q2 * T2))));
                      g[B2 + 32 + 24 >> 2] = T2;
                      Q2 = +g[y2 + 16 >> 2] - P2;
                      L2 = +g[y2 + 20 >> 2] - M2;
                      N2 = +g[y2 + 24 >> 2] - R2;
                      P2 = +g[U2 + 16 >> 2] - P2;
                      M2 = +g[U2 + 20 >> 2] - M2;
                      R2 = +g[U2 + 24 >> 2] - R2;
                      R2 = +O(+((Q2 * M2 - L2 * P2) * (Q2 * M2 - L2 * P2) + ((L2 * R2 - N2 * M2) * (L2 * R2 - N2 * M2) + (N2 * P2 - Q2 * R2) * (N2 * P2 - Q2 * R2))));
                      g[B2 + 32 + 20 >> 2] = S2 / (R2 + (S2 + T2));
                      g[B2 + 32 + 24 >> 2] = T2 / (R2 + (S2 + T2));
                      g[B2 + 32 + 28 >> 2] = R2 / (R2 + (S2 + T2));
                      if ((c[B2 + 32 >> 2] | 0) != 9)
                        if (!(c[B2 + 32 + 36 >> 2] | 0)) {
                          p2 = 0;
                          o2 = 0;
                          n2 = 0;
                          break;
                        } else {
                          h2 = B2 + 32 + 36 | 0;
                          z2 = 51;
                          break;
                        }
                      c[l2 >> 2] = 3;
                      U2 = 0;
                      i = B2;
                      return U2 | 0;
                    } else
                      z2 = 45;
                  } else
                    z2 = 45;
                while (0);
                if ((z2 | 0) == 45) {
                  c[B2 + 32 >> 2] = 8;
                  g[B2 + 32 + 40 >> 2] = p2;
                  g[B2 + 32 + 44 >> 2] = s2;
                  g[B2 + 32 + 48 >> 2] = o2;
                  g[B2 + 32 + 52 >> 2] = 0;
                  n2 = +O(+(p2 * p2 + s2 * s2 + o2 * o2));
                  if (n2 > 0) {
                    g[B2 + 32 + 40 >> 2] = 1 / n2 * p2;
                    g[B2 + 32 + 44 >> 2] = 1 / n2 * s2;
                    g[B2 + 32 + 48 >> 2] = 1 / n2 * o2;
                  } else {
                    c[A2 >> 2] = 1065353216;
                    c[B2 + 32 + 44 >> 2] = 0;
                    c[B2 + 32 + 48 >> 2] = 0;
                  }
                  g[B2 + 32 + 52 >> 2] = 0;
                  g[B2 + 32 + 56 >> 2] = 0;
                  c[B2 + 32 + 36 >> 2] = 1;
                  c[B2 + 32 + 4 >> 2] = c[t2 >> 2];
                  g[B2 + 32 + 20 >> 2] = 1;
                  h2 = B2 + 32 + 36 | 0;
                  z2 = 51;
                }
                if ((z2 | 0) == 51) {
                  m2 = 0;
                  p2 = 0;
                  o2 = 0;
                  n2 = 0;
                  do {
                    b2 = c[B2 + 9712 + 120 >> 2] | 0;
                    U2 = c[B2 + 9712 + 124 >> 2] | 0;
                    f2 = (c[B2 + 9712 >> 2] | 0) + (U2 >> 1) | 0;
                    if (U2 & 1)
                      b2 = c[(c[f2 >> 2] | 0) + b2 >> 2] | 0;
                    Zb[b2 & 127](B2, f2, c[B2 + 32 + 4 + (m2 << 2) >> 2] | 0);
                    T2 = +g[B2 + 32 + 20 + (m2 << 2) >> 2];
                    p2 = p2 + +g[B2 >> 2] * T2;
                    n2 = n2 + T2 * +g[B2 + 4 >> 2];
                    o2 = o2 + T2 * +g[B2 + 8 >> 2];
                    m2 = m2 + 1 | 0;
                  } while (m2 >>> 0 < (c[h2 >> 2] | 0) >>> 0);
                }
                c[l2 >> 2] = 1;
                T2 = p2 * +g[e2 + 16 >> 2] + n2 * +g[e2 + 20 >> 2] + o2 * +g[e2 + 24 >> 2] + +g[e2 + 52 >> 2];
                Q2 = p2 * +g[e2 + 32 >> 2] + n2 * +g[e2 + 36 >> 2] + o2 * +g[e2 + 40 >> 2] + +g[e2 + 56 >> 2];
                g[l2 + 4 >> 2] = p2 * +g[e2 >> 2] + n2 * +g[e2 + 4 >> 2] + o2 * +g[e2 + 8 >> 2] + +g[e2 + 48 >> 2];
                g[l2 + 8 >> 2] = T2;
                g[l2 + 12 >> 2] = Q2;
                g[l2 + 16 >> 2] = 0;
                Q2 = +g[A2 >> 2];
                T2 = +g[B2 + 32 + 56 >> 2];
                R2 = +g[B2 + 32 + 44 >> 2];
                S2 = +g[B2 + 32 + 48 >> 2];
                K2 = p2 - Q2 * T2;
                L2 = n2 - T2 * R2;
                M2 = o2 - T2 * S2;
                N2 = K2 * +g[e2 + 16 >> 2] + L2 * +g[e2 + 20 >> 2] + M2 * +g[e2 + 24 >> 2] + +g[e2 + 52 >> 2];
                P2 = K2 * +g[e2 + 32 >> 2] + L2 * +g[e2 + 36 >> 2] + M2 * +g[e2 + 40 >> 2] + +g[e2 + 56 >> 2];
                g[l2 + 20 >> 2] = K2 * +g[e2 >> 2] + L2 * +g[e2 + 4 >> 2] + M2 * +g[e2 + 8 >> 2] + +g[e2 + 48 >> 2];
                g[l2 + 24 >> 2] = N2;
                g[l2 + 28 >> 2] = P2;
                g[l2 + 32 >> 2] = 0;
                g[l2 + 36 >> 2] = -Q2;
                g[l2 + 40 >> 2] = -R2;
                g[l2 + 44 >> 2] = -S2;
                g[l2 + 48 >> 2] = 0;
                g[l2 + 52 >> 2] = -T2;
                U2 = 1;
                i = B2;
                return U2 | 0;
              }
              case 2: {
                c[l2 >> 2] = 2;
                U2 = 0;
                i = B2;
                return U2 | 0;
              }
              default: {
                U2 = 0;
                i = B2;
                return U2 | 0;
              }
            }
            return 0;
          }
          function Gn(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0, e2 = 0, f2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0;
            n2 = i;
            i = i + 16 | 0;
            m2 = c[a2 + 372 >> 2] | 0;
            a:
              do
                switch (c[m2 + 32 >> 2] | 0) {
                  case 1: {
                    d2 = 1;
                    b2 = 0;
                    while (1) {
                      c[n2 >> 2] = 0;
                      c[n2 + 4 >> 2] = 0;
                      c[n2 + 8 >> 2] = 0;
                      c[n2 + 12 >> 2] = 0;
                      g[n2 + (b2 << 2) >> 2] = 1;
                      o2 = m2 + 32 | 0;
                      g[m2 + 16 + (d2 << 2) >> 2] = 0;
                      d2 = (c[a2 + 364 >> 2] | 0) + -1 | 0;
                      c[a2 + 364 >> 2] = d2;
                      c[m2 + (c[o2 >> 2] << 2) >> 2] = c[a2 + 348 + (d2 << 2) >> 2];
                      d2 = c[o2 >> 2] | 0;
                      c[o2 >> 2] = d2 + 1;
                      e2 = +g[n2 >> 2];
                      f2 = +g[n2 + 4 >> 2];
                      h2 = +g[n2 + 8 >> 2];
                      Dn(a2, e2, f2, h2, c[m2 + (d2 << 2) >> 2] | 0);
                      if (Gn(a2) | 0)
                        break;
                      m2 = c[a2 + 372 >> 2] | 0;
                      o2 = (c[m2 + 32 >> 2] | 0) + -1 | 0;
                      c[m2 + 32 >> 2] = o2;
                      o2 = c[m2 + (o2 << 2) >> 2] | 0;
                      m2 = c[a2 + 364 >> 2] | 0;
                      c[a2 + 364 >> 2] = m2 + 1;
                      c[a2 + 348 + (m2 << 2) >> 2] = o2;
                      m2 = c[a2 + 372 >> 2] | 0;
                      g[m2 + 16 + (c[m2 + 32 >> 2] << 2) >> 2] = 0;
                      o2 = (c[a2 + 364 >> 2] | 0) + -1 | 0;
                      c[a2 + 364 >> 2] = o2;
                      c[m2 + (c[m2 + 32 >> 2] << 2) >> 2] = c[a2 + 348 + (o2 << 2) >> 2];
                      o2 = c[m2 + 32 >> 2] | 0;
                      c[m2 + 32 >> 2] = o2 + 1;
                      Dn(a2, -e2, -f2, -h2, c[m2 + (o2 << 2) >> 2] | 0);
                      if (Gn(a2) | 0)
                        break;
                      o2 = c[a2 + 372 >> 2] | 0;
                      m2 = (c[o2 + 32 >> 2] | 0) + -1 | 0;
                      c[o2 + 32 >> 2] = m2;
                      m2 = c[o2 + (m2 << 2) >> 2] | 0;
                      o2 = c[a2 + 364 >> 2] | 0;
                      c[a2 + 364 >> 2] = o2 + 1;
                      c[a2 + 348 + (o2 << 2) >> 2] = m2;
                      b2 = b2 + 1 | 0;
                      if (b2 >>> 0 >= 3)
                        break a;
                      m2 = c[a2 + 372 >> 2] | 0;
                      d2 = c[m2 + 32 >> 2] | 0;
                    }
                    o2 = 1;
                    i = n2;
                    return o2 | 0;
                  }
                  case 2: {
                    o2 = c[m2 + 4 >> 2] | 0;
                    b2 = c[m2 >> 2] | 0;
                    e2 = +g[o2 + 16 >> 2] - +g[b2 + 16 >> 2];
                    f2 = +g[o2 + 20 >> 2] - +g[b2 + 20 >> 2];
                    h2 = +g[o2 + 24 >> 2] - +g[b2 + 24 >> 2];
                    b2 = 0;
                    while (1) {
                      c[n2 >> 2] = 0;
                      c[n2 + 4 >> 2] = 0;
                      c[n2 + 8 >> 2] = 0;
                      c[n2 + 12 >> 2] = 0;
                      g[n2 + (b2 << 2) >> 2] = 1;
                      j2 = +g[n2 + 8 >> 2];
                      k2 = +g[n2 + 4 >> 2];
                      l2 = +g[n2 >> 2];
                      if ((f2 * j2 - h2 * k2) * (f2 * j2 - h2 * k2) + (h2 * l2 - e2 * j2) * (h2 * l2 - e2 * j2) + (e2 * k2 - f2 * l2) * (e2 * k2 - f2 * l2) > 0) {
                        m2 = c[a2 + 372 >> 2] | 0;
                        g[m2 + 16 + (c[m2 + 32 >> 2] << 2) >> 2] = 0;
                        o2 = (c[a2 + 364 >> 2] | 0) + -1 | 0;
                        c[a2 + 364 >> 2] = o2;
                        c[m2 + (c[m2 + 32 >> 2] << 2) >> 2] = c[a2 + 348 + (o2 << 2) >> 2];
                        o2 = c[m2 + 32 >> 2] | 0;
                        c[m2 + 32 >> 2] = o2 + 1;
                        Dn(a2, f2 * j2 - h2 * k2, h2 * l2 - e2 * j2, e2 * k2 - f2 * l2, c[m2 + (o2 << 2) >> 2] | 0);
                        if (Gn(a2) | 0)
                          break;
                        m2 = c[a2 + 372 >> 2] | 0;
                        o2 = (c[m2 + 32 >> 2] | 0) + -1 | 0;
                        c[m2 + 32 >> 2] = o2;
                        o2 = c[m2 + (o2 << 2) >> 2] | 0;
                        m2 = c[a2 + 364 >> 2] | 0;
                        c[a2 + 364 >> 2] = m2 + 1;
                        c[a2 + 348 + (m2 << 2) >> 2] = o2;
                        m2 = c[a2 + 372 >> 2] | 0;
                        g[m2 + 16 + (c[m2 + 32 >> 2] << 2) >> 2] = 0;
                        o2 = (c[a2 + 364 >> 2] | 0) + -1 | 0;
                        c[a2 + 364 >> 2] = o2;
                        c[m2 + (c[m2 + 32 >> 2] << 2) >> 2] = c[a2 + 348 + (o2 << 2) >> 2];
                        o2 = c[m2 + 32 >> 2] | 0;
                        c[m2 + 32 >> 2] = o2 + 1;
                        Dn(a2, -(f2 * j2 - h2 * k2), -(h2 * l2 - e2 * j2), -(e2 * k2 - f2 * l2), c[m2 + (o2 << 2) >> 2] | 0);
                        if (Gn(a2) | 0)
                          break;
                        o2 = c[a2 + 372 >> 2] | 0;
                        m2 = (c[o2 + 32 >> 2] | 0) + -1 | 0;
                        c[o2 + 32 >> 2] = m2;
                        m2 = c[o2 + (m2 << 2) >> 2] | 0;
                        o2 = c[a2 + 364 >> 2] | 0;
                        c[a2 + 364 >> 2] = o2 + 1;
                        c[a2 + 348 + (o2 << 2) >> 2] = m2;
                      }
                      b2 = b2 + 1 | 0;
                      if (b2 >>> 0 >= 3)
                        break a;
                    }
                    o2 = 1;
                    i = n2;
                    return o2 | 0;
                  }
                  case 3: {
                    o2 = c[m2 + 4 >> 2] | 0;
                    d2 = c[m2 >> 2] | 0;
                    j2 = +g[d2 + 16 >> 2];
                    e2 = +g[o2 + 16 >> 2] - j2;
                    k2 = +g[d2 + 20 >> 2];
                    f2 = +g[o2 + 20 >> 2] - k2;
                    l2 = +g[d2 + 24 >> 2];
                    h2 = +g[o2 + 24 >> 2] - l2;
                    o2 = c[m2 + 8 >> 2] | 0;
                    j2 = +g[o2 + 16 >> 2] - j2;
                    k2 = +g[o2 + 20 >> 2] - k2;
                    l2 = +g[o2 + 24 >> 2] - l2;
                    if ((f2 * l2 - h2 * k2) * (f2 * l2 - h2 * k2) + (h2 * j2 - e2 * l2) * (h2 * j2 - e2 * l2) + (e2 * k2 - f2 * j2) * (e2 * k2 - f2 * j2) > 0) {
                      g[m2 + 28 >> 2] = 0;
                      o2 = (c[a2 + 364 >> 2] | 0) + -1 | 0;
                      c[a2 + 364 >> 2] = o2;
                      c[m2 + 12 >> 2] = c[a2 + 348 + (o2 << 2) >> 2];
                      o2 = c[m2 + 32 >> 2] | 0;
                      c[m2 + 32 >> 2] = o2 + 1;
                      Dn(a2, f2 * l2 - h2 * k2, h2 * j2 - e2 * l2, e2 * k2 - f2 * j2, c[m2 + (o2 << 2) >> 2] | 0);
                      if (Gn(a2) | 0) {
                        o2 = 1;
                        i = n2;
                        return o2 | 0;
                      }
                      m2 = c[a2 + 372 >> 2] | 0;
                      o2 = (c[m2 + 32 >> 2] | 0) + -1 | 0;
                      c[m2 + 32 >> 2] = o2;
                      o2 = c[m2 + (o2 << 2) >> 2] | 0;
                      m2 = c[a2 + 364 >> 2] | 0;
                      c[a2 + 364 >> 2] = m2 + 1;
                      c[a2 + 348 + (m2 << 2) >> 2] = o2;
                      m2 = c[a2 + 372 >> 2] | 0;
                      g[m2 + 16 + (c[m2 + 32 >> 2] << 2) >> 2] = 0;
                      o2 = (c[a2 + 364 >> 2] | 0) + -1 | 0;
                      c[a2 + 364 >> 2] = o2;
                      c[m2 + (c[m2 + 32 >> 2] << 2) >> 2] = c[a2 + 348 + (o2 << 2) >> 2];
                      o2 = c[m2 + 32 >> 2] | 0;
                      c[m2 + 32 >> 2] = o2 + 1;
                      Dn(a2, -(f2 * l2 - h2 * k2), -(h2 * j2 - e2 * l2), -(e2 * k2 - f2 * j2), c[m2 + (o2 << 2) >> 2] | 0);
                      if (Gn(a2) | 0) {
                        o2 = 1;
                        i = n2;
                        return o2 | 0;
                      } else {
                        o2 = c[a2 + 372 >> 2] | 0;
                        m2 = (c[o2 + 32 >> 2] | 0) + -1 | 0;
                        c[o2 + 32 >> 2] = m2;
                        m2 = c[o2 + (m2 << 2) >> 2] | 0;
                        o2 = c[a2 + 364 >> 2] | 0;
                        c[a2 + 364 >> 2] = o2 + 1;
                        c[a2 + 348 + (o2 << 2) >> 2] = m2;
                        break a;
                      }
                    }
                    break;
                  }
                  case 4: {
                    o2 = c[m2 >> 2] | 0;
                    a2 = c[m2 + 12 >> 2] | 0;
                    l2 = +g[a2 + 16 >> 2];
                    r2 = +g[o2 + 16 >> 2] - l2;
                    p2 = +g[a2 + 20 >> 2];
                    e2 = +g[o2 + 20 >> 2] - p2;
                    h2 = +g[a2 + 24 >> 2];
                    j2 = +g[o2 + 24 >> 2] - h2;
                    o2 = c[m2 + 4 >> 2] | 0;
                    f2 = +g[o2 + 16 >> 2] - l2;
                    k2 = +g[o2 + 20 >> 2] - p2;
                    q2 = +g[o2 + 24 >> 2] - h2;
                    o2 = c[m2 + 8 >> 2] | 0;
                    l2 = +g[o2 + 16 >> 2] - l2;
                    p2 = +g[o2 + 20 >> 2] - p2;
                    h2 = +g[o2 + 24 >> 2] - h2;
                    if (!((false ? 1 : r2 * k2 * h2 + (e2 * q2 * l2 + j2 * f2 * p2 - r2 * q2 * p2 - e2 * f2 * h2) - j2 * k2 * l2 != r2 * k2 * h2 + (e2 * q2 * l2 + j2 * f2 * p2 - r2 * q2 * p2 - e2 * f2 * h2) - j2 * k2 * l2) | r2 * k2 * h2 + (e2 * q2 * l2 + j2 * f2 * p2 - r2 * q2 * p2 - e2 * f2 * h2) - j2 * k2 * l2 == 0)) {
                      o2 = 1;
                      i = n2;
                      return o2 | 0;
                    }
                    break;
                  }
                  default: {
                  }
                }
              while (0);
            o2 = 0;
            i = n2;
            return o2 | 0;
          }
          function Hn(b2, d2, e2, f2, h2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            h2 = h2 | 0;
            var i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0;
            q2 = c[b2 + 9288 >> 2] | 0;
            if (!q2) {
              c[b2 >> 2] = 5;
              b2 = 0;
              return b2 | 0;
            }
            i2 = c[q2 + 48 >> 2] | 0;
            if (i2 | 0)
              c[i2 + 44 >> 2] = c[q2 + 44 >> 2];
            i2 = c[q2 + 44 >> 2] | 0;
            if (i2 | 0)
              c[i2 + 48 >> 2] = c[q2 + 48 >> 2];
            if ((c[b2 + 9288 >> 2] | 0) == (q2 | 0))
              c[b2 + 9288 >> 2] = c[q2 + 48 >> 2];
            c[b2 + 9292 >> 2] = (c[b2 + 9292 >> 2] | 0) + -1;
            c[q2 + 44 >> 2] = 0;
            c[q2 + 48 >> 2] = c[b2 + 9280 >> 2];
            i2 = c[b2 + 9280 >> 2] | 0;
            if (i2 | 0)
              c[i2 + 44 >> 2] = q2;
            c[b2 + 9280 >> 2] = q2;
            c[b2 + 9284 >> 2] = (c[b2 + 9284 >> 2] | 0) + 1;
            a[q2 + 55 >> 0] = 0;
            c[q2 + 20 >> 2] = d2;
            c[q2 + 24 >> 2] = e2;
            c[q2 + 28 >> 2] = f2;
            m2 = +g[d2 + 16 >> 2];
            j2 = +g[e2 + 16 >> 2] - m2;
            n2 = +g[d2 + 20 >> 2];
            k2 = +g[e2 + 20 >> 2] - n2;
            o2 = +g[d2 + 24 >> 2];
            l2 = +g[e2 + 24 >> 2] - o2;
            m2 = +g[f2 + 16 >> 2] - m2;
            n2 = +g[f2 + 20 >> 2] - n2;
            o2 = +g[f2 + 24 >> 2] - o2;
            g[q2 >> 2] = k2 * o2 - l2 * n2;
            g[q2 + 4 >> 2] = l2 * m2 - j2 * o2;
            g[q2 + 8 >> 2] = j2 * n2 - k2 * m2;
            g[q2 + 12 >> 2] = 0;
            p2 = +O(+((k2 * o2 - l2 * n2) * (k2 * o2 - l2 * n2) + (l2 * m2 - j2 * o2) * (l2 * m2 - j2 * o2) + (j2 * n2 - k2 * m2) * (j2 * n2 - k2 * m2)));
            do
              if (p2 > 9999999747378752e-20) {
                if ((!(In(k2 * o2 - l2 * n2, l2 * m2 - j2 * o2, j2 * n2 - k2 * m2, +g[d2 + 16 >> 2], +g[d2 + 20 >> 2], +g[d2 + 24 >> 2], +g[e2 + 16 >> 2], +g[e2 + 20 >> 2], +g[e2 + 24 >> 2], q2 + 16 | 0) | 0) ? !(In(+g[q2 >> 2], +g[q2 + 4 >> 2], +g[q2 + 8 >> 2], +g[e2 + 16 >> 2], +g[e2 + 20 >> 2], +g[e2 + 24 >> 2], +g[f2 + 16 >> 2], +g[f2 + 20 >> 2], +g[f2 + 24 >> 2], q2 + 16 | 0) | 0) : 0) ? !(In(+g[q2 >> 2], +g[q2 + 4 >> 2], +g[q2 + 8 >> 2], +g[f2 + 16 >> 2], +g[f2 + 20 >> 2], +g[f2 + 24 >> 2], +g[d2 + 16 >> 2], +g[d2 + 20 >> 2], +g[d2 + 24 >> 2], q2 + 16 | 0) | 0) : 0)
                  g[q2 + 16 >> 2] = (+g[d2 + 16 >> 2] * +g[q2 >> 2] + +g[d2 + 20 >> 2] * +g[q2 + 4 >> 2] + +g[d2 + 24 >> 2] * +g[q2 + 8 >> 2]) / p2;
                g[q2 >> 2] = 1 / p2 * +g[q2 >> 2];
                g[q2 + 4 >> 2] = 1 / p2 * +g[q2 + 4 >> 2];
                g[q2 + 8 >> 2] = 1 / p2 * +g[q2 + 8 >> 2];
                if (h2) {
                  b2 = q2;
                  return b2 | 0;
                }
                if (!(+g[q2 + 16 >> 2] >= -9999999747378752e-21)) {
                  c[b2 >> 2] = 3;
                  break;
                } else {
                  b2 = q2;
                  return b2 | 0;
                }
              } else
                c[b2 >> 2] = 2;
            while (0);
            i2 = c[q2 + 48 >> 2] | 0;
            if (i2 | 0)
              c[i2 + 44 >> 2] = c[q2 + 44 >> 2];
            i2 = c[q2 + 44 >> 2] | 0;
            if (i2 | 0)
              c[i2 + 48 >> 2] = c[q2 + 48 >> 2];
            if ((c[b2 + 9280 >> 2] | 0) == (q2 | 0))
              c[b2 + 9280 >> 2] = c[q2 + 48 >> 2];
            c[b2 + 9284 >> 2] = (c[b2 + 9284 >> 2] | 0) + -1;
            c[q2 + 44 >> 2] = 0;
            c[q2 + 48 >> 2] = c[b2 + 9288 >> 2];
            i2 = c[b2 + 9288 >> 2] | 0;
            if (i2 | 0)
              c[i2 + 44 >> 2] = q2;
            c[b2 + 9288 >> 2] = q2;
            c[b2 + 9292 >> 2] = (c[b2 + 9292 >> 2] | 0) + 1;
            b2 = 0;
            return b2 | 0;
          }
          function In(a2, b2, c2, d2, e2, f2, h2, i2, j2, k2) {
            a2 = +a2;
            b2 = +b2;
            c2 = +c2;
            d2 = +d2;
            e2 = +e2;
            f2 = +f2;
            h2 = +h2;
            i2 = +i2;
            j2 = +j2;
            k2 = k2 | 0;
            if (!(((h2 - d2) * b2 - (i2 - e2) * a2) * f2 + (((i2 - e2) * c2 - (j2 - f2) * b2) * d2 + ((j2 - f2) * a2 - (h2 - d2) * c2) * e2) < 0)) {
              k2 = 0;
              return k2 | 0;
            }
            if ((h2 - d2) * d2 + (i2 - e2) * e2 + (j2 - f2) * f2 > 0) {
              g[k2 >> 2] = +O(+(d2 * d2 + e2 * e2 + f2 * f2));
              k2 = 1;
              return k2 | 0;
            }
            if ((h2 - d2) * h2 + (i2 - e2) * i2 + (j2 - f2) * j2 < 0) {
              g[k2 >> 2] = +O(+(h2 * h2 + i2 * i2 + j2 * j2));
              k2 = 1;
              return k2 | 0;
            } else {
              c2 = ((h2 * h2 + i2 * i2 + j2 * j2) * (d2 * d2 + e2 * e2 + f2 * f2) - (h2 * d2 + i2 * e2 + j2 * f2) * (h2 * d2 + i2 * e2 + j2 * f2)) / ((h2 - d2) * (h2 - d2) + (i2 - e2) * (i2 - e2) + (j2 - f2) * (j2 - f2));
              g[k2 >> 2] = +O(+(c2 > 0 ? c2 : 0));
              k2 = 1;
              return k2 | 0;
            }
            return 0;
          }
          function Jn(b2, e2, f2, h2, i2, j2) {
            b2 = b2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            h2 = h2 | 0;
            i2 = i2 | 0;
            j2 = j2 | 0;
            var k2 = 0;
            if ((d[h2 + 55 >> 0] | 0 | 0) == (e2 | 0)) {
              h2 = 0;
              return h2 | 0;
            }
            k2 = c[6876 + (i2 << 2) >> 2] | 0;
            if (+g[h2 >> 2] * +g[f2 + 16 >> 2] + +g[h2 + 4 >> 2] * +g[f2 + 20 >> 2] + +g[h2 + 8 >> 2] * +g[f2 + 24 >> 2] - +g[h2 + 16 >> 2] < -9999999747378752e-21) {
              k2 = Hn(b2, c[h2 + 20 + (k2 << 2) >> 2] | 0, c[h2 + 20 + (i2 << 2) >> 2] | 0, f2, 0) | 0;
              if (!k2) {
                h2 = 0;
                return h2 | 0;
              }
              a[k2 + 52 >> 0] = i2;
              c[k2 + 32 >> 2] = h2;
              a[h2 + 52 + i2 >> 0] = 0;
              c[h2 + 32 + (i2 << 2) >> 2] = k2;
              i2 = c[j2 >> 2] | 0;
              if (!i2)
                c[j2 + 4 >> 2] = k2;
              else {
                a[i2 + 53 >> 0] = 2;
                c[i2 + 36 >> 2] = k2;
                a[k2 + 54 >> 0] = 1;
                c[k2 + 40 >> 2] = i2;
              }
              c[j2 >> 2] = k2;
              c[j2 + 8 >> 2] = (c[j2 + 8 >> 2] | 0) + 1;
              h2 = 1;
              return h2 | 0;
            }
            i2 = c[6888 + (i2 << 2) >> 2] | 0;
            a[h2 + 55 >> 0] = e2;
            if (!(Jn(b2, e2, f2, c[h2 + 32 + (k2 << 2) >> 2] | 0, d[h2 + 52 + k2 >> 0] | 0, j2) | 0)) {
              h2 = 0;
              return h2 | 0;
            }
            if (!(Jn(b2, e2, f2, c[h2 + 32 + (i2 << 2) >> 2] | 0, d[h2 + 52 + i2 >> 0] | 0, j2) | 0)) {
              h2 = 0;
              return h2 | 0;
            }
            i2 = c[h2 + 48 >> 2] | 0;
            if (i2 | 0)
              c[i2 + 44 >> 2] = c[h2 + 44 >> 2];
            i2 = c[h2 + 44 >> 2] | 0;
            if (i2 | 0)
              c[i2 + 48 >> 2] = c[h2 + 48 >> 2];
            if ((c[b2 + 9280 >> 2] | 0) == (h2 | 0))
              c[b2 + 9280 >> 2] = c[h2 + 48 >> 2];
            c[b2 + 9284 >> 2] = (c[b2 + 9284 >> 2] | 0) + -1;
            c[h2 + 44 >> 2] = 0;
            c[h2 + 48 >> 2] = c[b2 + 9288 >> 2];
            i2 = c[b2 + 9288 >> 2] | 0;
            if (i2 | 0)
              c[i2 + 44 >> 2] = h2;
            c[b2 + 9288 >> 2] = h2;
            c[b2 + 9292 >> 2] = (c[b2 + 9292 >> 2] | 0) + 1;
            h2 = 1;
            return h2 | 0;
          }
          function Kn(a2) {
            a2 = a2 | 0;
            return;
          }
          function Ln(a2) {
            a2 = a2 | 0;
            rG(a2);
            return;
          }
          function Mn(a2, b2, d2, e2, f2, h2, j2, k2, l2, m2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            h2 = h2 | 0;
            j2 = j2 | 0;
            k2 = k2 | 0;
            l2 = l2 | 0;
            m2 = m2 | 0;
            var n2 = 0, o2 = 0;
            m2 = i;
            i = i + 80 | 0;
            o2 = +g[h2 + 52 >> 2] - +g[f2 + 52 >> 2];
            n2 = +g[h2 + 56 >> 2] - +g[f2 + 56 >> 2];
            g[m2 + 56 >> 2] = +g[h2 + 48 >> 2] - +g[f2 + 48 >> 2];
            g[m2 + 56 + 4 >> 2] = o2;
            g[m2 + 56 + 8 >> 2] = n2;
            g[m2 + 56 + 12 >> 2] = 0;
            if (Fn(d2, f2, e2, h2, m2 + 56 | 0, m2, 1) | 0) {
              c[k2 >> 2] = c[m2 + 4 >> 2];
              c[k2 + 4 >> 2] = c[m2 + 4 + 4 >> 2];
              c[k2 + 8 >> 2] = c[m2 + 4 + 8 >> 2];
              c[k2 + 12 >> 2] = c[m2 + 4 + 12 >> 2];
              c[l2 >> 2] = c[m2 + 20 >> 2];
              c[l2 + 4 >> 2] = c[m2 + 20 + 4 >> 2];
              c[l2 + 8 >> 2] = c[m2 + 20 + 8 >> 2];
              c[l2 + 12 >> 2] = c[m2 + 20 + 12 >> 2];
              c[j2 >> 2] = c[m2 + 36 >> 2];
              c[j2 + 4 >> 2] = c[m2 + 36 + 4 >> 2];
              c[j2 + 8 >> 2] = c[m2 + 36 + 8 >> 2];
              c[j2 + 12 >> 2] = c[m2 + 36 + 12 >> 2];
              l2 = 1;
              i = m2;
              return l2 | 0;
            }
            if (!(Bn(d2, f2, e2, h2, m2 + 56 | 0, m2) | 0)) {
              l2 = 0;
              i = m2;
              return l2 | 0;
            }
            c[k2 >> 2] = c[m2 + 4 >> 2];
            c[k2 + 4 >> 2] = c[m2 + 4 + 4 >> 2];
            c[k2 + 8 >> 2] = c[m2 + 4 + 8 >> 2];
            c[k2 + 12 >> 2] = c[m2 + 4 + 12 >> 2];
            c[l2 >> 2] = c[m2 + 20 >> 2];
            c[l2 + 4 >> 2] = c[m2 + 20 + 4 >> 2];
            c[l2 + 8 >> 2] = c[m2 + 20 + 8 >> 2];
            c[l2 + 12 >> 2] = c[m2 + 20 + 12 >> 2];
            c[j2 >> 2] = c[m2 + 36 >> 2];
            c[j2 + 4 >> 2] = c[m2 + 36 + 4 >> 2];
            c[j2 + 8 >> 2] = c[m2 + 36 + 8 >> 2];
            c[j2 + 12 >> 2] = c[m2 + 36 + 12 >> 2];
            l2 = 0;
            i = m2;
            return l2 | 0;
          }
          function Nn(a2) {
            a2 = a2 | 0;
            rG(a2);
            return;
          }
          function On(b2, d2, e2, f2, h2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            h2 = h2 | 0;
            var j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0, N2 = 0, P2 = 0, Q2 = 0, R2 = 0, S2 = 0;
            R2 = i;
            i = i + 256 | 0;
            g[b2 + 56 >> 2] = 0;
            I2 = R2 + 240 + 4 | 0;
            J2 = R2 + 240 + 8 | 0;
            c[R2 + 240 >> 2] = 0;
            c[R2 + 240 + 4 >> 2] = 0;
            c[R2 + 240 + 8 >> 2] = 0;
            c[R2 + 240 + 12 >> 2] = 0;
            c[R2 + 176 >> 2] = c[d2 >> 2];
            c[R2 + 176 + 4 >> 2] = c[d2 + 4 >> 2];
            c[R2 + 176 + 8 >> 2] = c[d2 + 8 >> 2];
            c[R2 + 176 + 12 >> 2] = c[d2 + 12 >> 2];
            c[R2 + 176 + 16 >> 2] = c[d2 + 16 >> 2];
            c[R2 + 176 + 16 + 4 >> 2] = c[d2 + 16 + 4 >> 2];
            c[R2 + 176 + 16 + 8 >> 2] = c[d2 + 16 + 8 >> 2];
            c[R2 + 176 + 16 + 12 >> 2] = c[d2 + 16 + 12 >> 2];
            c[R2 + 176 + 32 >> 2] = c[d2 + 32 >> 2];
            c[R2 + 176 + 32 + 4 >> 2] = c[d2 + 32 + 4 >> 2];
            c[R2 + 176 + 32 + 8 >> 2] = c[d2 + 32 + 8 >> 2];
            c[R2 + 176 + 32 + 12 >> 2] = c[d2 + 32 + 12 >> 2];
            z2 = R2 + 176 + 48 | 0;
            c[z2 >> 2] = c[d2 + 48 >> 2];
            c[z2 + 4 >> 2] = c[d2 + 48 + 4 >> 2];
            c[z2 + 8 >> 2] = c[d2 + 48 + 8 >> 2];
            c[z2 + 12 >> 2] = c[d2 + 48 + 12 >> 2];
            c[R2 + 112 >> 2] = c[d2 + 64 >> 2];
            c[R2 + 112 + 4 >> 2] = c[d2 + 64 + 4 >> 2];
            c[R2 + 112 + 8 >> 2] = c[d2 + 64 + 8 >> 2];
            c[R2 + 112 + 12 >> 2] = c[d2 + 64 + 12 >> 2];
            c[R2 + 112 + 16 >> 2] = c[d2 + 80 >> 2];
            c[R2 + 112 + 16 + 4 >> 2] = c[d2 + 80 + 4 >> 2];
            c[R2 + 112 + 16 + 8 >> 2] = c[d2 + 80 + 8 >> 2];
            c[R2 + 112 + 16 + 12 >> 2] = c[d2 + 80 + 12 >> 2];
            c[R2 + 112 + 32 >> 2] = c[d2 + 96 >> 2];
            c[R2 + 112 + 32 + 4 >> 2] = c[d2 + 96 + 4 >> 2];
            c[R2 + 112 + 32 + 8 >> 2] = c[d2 + 96 + 8 >> 2];
            c[R2 + 112 + 32 + 12 >> 2] = c[d2 + 96 + 12 >> 2];
            A2 = R2 + 112 + 48 | 0;
            c[A2 >> 2] = c[d2 + 112 >> 2];
            c[A2 + 4 >> 2] = c[d2 + 112 + 4 >> 2];
            c[A2 + 8 >> 2] = c[d2 + 112 + 8 >> 2];
            c[A2 + 12 >> 2] = c[d2 + 112 + 12 >> 2];
            K2 = +g[z2 >> 2];
            L2 = +g[A2 >> 2];
            E2 = R2 + 176 + 52 | 0;
            M2 = +g[E2 >> 2];
            F2 = R2 + 112 + 52 | 0;
            N2 = +g[F2 >> 2];
            G2 = R2 + 176 + 56 | 0;
            P2 = +g[G2 >> 2];
            H2 = R2 + 112 + 56 | 0;
            Q2 = +g[H2 >> 2];
            g[z2 >> 2] = K2 - (K2 + L2) * 0.5;
            g[E2 >> 2] = M2 - (M2 + N2) * 0.5;
            g[G2 >> 2] = P2 - (P2 + Q2) * 0.5;
            g[A2 >> 2] = L2 - (K2 + L2) * 0.5;
            g[F2 >> 2] = N2 - (M2 + N2) * 0.5;
            g[H2 >> 2] = Q2 - (P2 + Q2) * 0.5;
            if (((c[(c[b2 + 28 >> 2] | 0) + 4 >> 2] | 0) + -17 | 0) >>> 0 < 2)
              z2 = ((c[(c[b2 + 32 >> 2] | 0) + 4 >> 2] | 0) + -17 | 0) >>> 0 < 2;
            else
              z2 = 0;
            v2 = +g[b2 + 44 >> 2];
            u2 = +g[b2 + 48 >> 2];
            c[5046] = (c[5046] | 0) + 1;
            A2 = a[b2 + 52 >> 0] | 0;
            c[b2 + 64 >> 2] = 0;
            c[b2 + 4 >> 2] = 0;
            c[b2 + 8 >> 2] = 1065353216;
            c[b2 + 12 >> 2] = 0;
            g[b2 + 16 >> 2] = 0;
            c[b2 + 68 >> 2] = 0;
            c[b2 + 60 >> 2] = -1;
            s2 = c[b2 + 24 >> 2] | 0;
            a[s2 + 312 >> 0] = 0;
            c[s2 >> 2] = 0;
            a[s2 + 356 >> 0] = 1;
            c[s2 + 292 >> 2] = 1566444395;
            c[s2 + 296 >> 2] = 1566444395;
            c[s2 + 300 >> 2] = 1566444395;
            g[s2 + 304 >> 2] = 0;
            c[s2 + 336 >> 2] = 0;
            c[s2 + 336 + 4 >> 2] = 0;
            c[s2 + 336 + 8 >> 2] = 0;
            c[s2 + 336 + 12 >> 2] = 0;
            a[s2 + 336 + 16 >> 0] = 0;
            a[s2 + 332 >> 0] = a[s2 + 332 >> 0] & -16;
            s2 = 0;
            m2 = 999999984306749400;
            do {
              p2 = +g[b2 + 4 >> 2];
              o2 = +g[b2 + 8 >> 2];
              k2 = +g[b2 + 12 >> 2];
              l2 = +g[d2 + 4 >> 2] * -p2 + +g[d2 + 20 >> 2] * -o2 + +g[d2 + 36 >> 2] * -k2;
              n2 = +g[d2 + 8 >> 2] * -p2 + +g[d2 + 24 >> 2] * -o2 + +g[d2 + 40 >> 2] * -k2;
              g[R2 + 96 >> 2] = +g[d2 >> 2] * -p2 + +g[d2 + 16 >> 2] * -o2 + +g[d2 + 32 >> 2] * -k2;
              g[R2 + 96 + 4 >> 2] = l2;
              g[R2 + 96 + 8 >> 2] = n2;
              g[R2 + 96 + 12 >> 2] = 0;
              n2 = p2 * +g[d2 + 68 >> 2] + o2 * +g[d2 + 84 >> 2] + k2 * +g[d2 + 100 >> 2];
              l2 = p2 * +g[d2 + 72 >> 2] + o2 * +g[d2 + 88 >> 2] + k2 * +g[d2 + 104 >> 2];
              g[R2 + 80 >> 2] = +g[d2 + 64 >> 2] * p2 + +g[d2 + 80 >> 2] * o2 + +g[d2 + 96 >> 2] * k2;
              g[R2 + 80 + 4 >> 2] = n2;
              g[R2 + 80 + 8 >> 2] = l2;
              g[R2 + 80 + 12 >> 2] = 0;
              fl(R2 + 64 | 0, c[b2 + 28 >> 2] | 0, R2 + 96 | 0);
              fl(R2 + 48 | 0, c[b2 + 32 >> 2] | 0, R2 + 80 | 0);
              l2 = +g[R2 + 64 >> 2];
              n2 = +g[R2 + 64 + 4 >> 2];
              k2 = +g[R2 + 64 + 8 >> 2];
              o2 = l2 * +g[R2 + 176 >> 2] + n2 * +g[R2 + 176 + 4 >> 2] + k2 * +g[R2 + 176 + 8 >> 2] + +g[R2 + 176 + 48 >> 2];
              p2 = l2 * +g[R2 + 176 + 16 >> 2] + n2 * +g[R2 + 176 + 20 >> 2] + k2 * +g[R2 + 176 + 24 >> 2] + +g[E2 >> 2];
              k2 = l2 * +g[R2 + 176 + 32 >> 2] + n2 * +g[R2 + 176 + 36 >> 2] + k2 * +g[R2 + 176 + 40 >> 2] + +g[G2 >> 2];
              n2 = +g[R2 + 48 >> 2];
              l2 = +g[R2 + 48 + 4 >> 2];
              t2 = +g[R2 + 48 + 8 >> 2];
              q2 = n2 * +g[R2 + 112 >> 2] + l2 * +g[R2 + 112 + 4 >> 2] + t2 * +g[R2 + 112 + 8 >> 2] + +g[R2 + 112 + 48 >> 2];
              r2 = n2 * +g[R2 + 112 + 16 >> 2] + l2 * +g[R2 + 112 + 20 >> 2] + t2 * +g[R2 + 112 + 24 >> 2] + +g[F2 >> 2];
              t2 = n2 * +g[R2 + 112 + 32 >> 2] + l2 * +g[R2 + 112 + 36 >> 2] + t2 * +g[R2 + 112 + 40 >> 2] + +g[H2 >> 2];
              l2 = z2 ? 0 : t2;
              n2 = z2 ? 0 : k2;
              t2 = (z2 ? 0 : k2) - (z2 ? 0 : t2);
              k2 = +g[b2 + 4 >> 2] * (o2 - q2) + +g[b2 + 8 >> 2] * (p2 - r2) + +g[b2 + 12 >> 2] * t2;
              if (k2 > 0 ? k2 * k2 > m2 * +g[d2 + 128 >> 2] : 0) {
                c[b2 + 68 >> 2] = 10;
                h2 = 0;
                s2 = 1;
              } else
                S2 = 7;
              do
                if ((S2 | 0) == 7) {
                  S2 = 0;
                  w2 = c[b2 + 24 >> 2] | 0;
                  x2 = c[w2 >> 2] | 0;
                  a:
                    do
                      if ((x2 | 0) > 0) {
                        j2 = +g[w2 + 308 >> 2];
                        h2 = 0;
                        while (1) {
                          y2 = o2 - q2 - +g[w2 + 4 + (h2 << 4) >> 2];
                          B2 = p2 - r2 - +g[w2 + 4 + (h2 << 4) + 4 >> 2];
                          C2 = t2 - +g[w2 + 4 + (h2 << 4) + 8 >> 2];
                          h2 = h2 + 1 | 0;
                          if (y2 * y2 + B2 * B2 + C2 * C2 <= j2) {
                            h2 = 1;
                            break a;
                          }
                          if ((h2 | 0) >= (x2 | 0)) {
                            h2 = 0;
                            break;
                          }
                        }
                      } else
                        h2 = 0;
                    while (0);
                  if ((+g[w2 + 304 >> 2] == 0 ? t2 == +g[w2 + 300 >> 2] : 0) ? p2 - r2 == +g[w2 + 296 >> 2] : 0) {
                    if (o2 - q2 == +g[w2 + 292 >> 2] | h2)
                      S2 = 16;
                  } else
                    S2 = 15;
                  if ((S2 | 0) == 15 ? (S2 = 0, h2) : 0)
                    S2 = 16;
                  if ((S2 | 0) == 16) {
                    S2 = 0;
                    c[b2 + 68 >> 2] = 1;
                    h2 = 0;
                    s2 = 1;
                    break;
                  }
                  j2 = m2 - k2;
                  if (j2 <= m2 * 9999999974752427e-22) {
                    c[b2 + 68 >> 2] = !(j2 <= 0) ? 11 : 2;
                    h2 = 0;
                    s2 = 1;
                    break;
                  }
                  g[w2 + 292 >> 2] = o2 - q2;
                  g[w2 + 296 >> 2] = p2 - r2;
                  g[w2 + 300 >> 2] = t2;
                  g[w2 + 304 >> 2] = 0;
                  a[w2 + 356 >> 0] = 1;
                  g[w2 + 4 + (x2 << 4) >> 2] = o2 - q2;
                  g[w2 + 4 + (x2 << 4) + 4 >> 2] = p2 - r2;
                  g[w2 + 4 + (x2 << 4) + 8 >> 2] = t2;
                  g[w2 + 4 + (x2 << 4) + 12 >> 2] = 0;
                  h2 = c[w2 >> 2] | 0;
                  g[w2 + 84 + (h2 << 4) >> 2] = o2;
                  g[w2 + 84 + (h2 << 4) + 4 >> 2] = p2;
                  g[w2 + 84 + (h2 << 4) + 8 >> 2] = n2;
                  g[w2 + 84 + (h2 << 4) + 12 >> 2] = 0;
                  h2 = c[w2 >> 2] | 0;
                  g[w2 + 164 + (h2 << 4) >> 2] = q2;
                  g[w2 + 164 + (h2 << 4) + 4 >> 2] = r2;
                  g[w2 + 164 + (h2 << 4) + 8 >> 2] = l2;
                  g[w2 + 164 + (h2 << 4) + 12 >> 2] = 0;
                  c[w2 >> 2] = (c[w2 >> 2] | 0) + 1;
                  h2 = c[b2 + 24 >> 2] | 0;
                  x2 = eo(h2) | 0;
                  j2 = +g[h2 + 276 >> 2];
                  k2 = +g[h2 + 280 >> 2];
                  l2 = +g[h2 + 284 >> 2];
                  h2 = c[h2 + 288 >> 2] | 0;
                  if (!x2) {
                    c[b2 + 68 >> 2] = 3;
                    h2 = 0;
                    s2 = 1;
                    break;
                  }
                  if (j2 * j2 + k2 * k2 + l2 * l2 < 9999999974752427e-22) {
                    g[b2 + 4 >> 2] = j2;
                    g[b2 + 8 >> 2] = k2;
                    g[b2 + 12 >> 2] = l2;
                    c[b2 + 16 >> 2] = h2;
                    c[b2 + 68 >> 2] = 6;
                    h2 = 0;
                    s2 = 1;
                    break;
                  }
                  if (m2 - (j2 * j2 + k2 * k2 + l2 * l2) <= m2 * 11920928955078125e-23) {
                    c[b2 + 68 >> 2] = 12;
                    h2 = 0;
                    s2 = 1;
                    m2 = j2 * j2 + k2 * k2 + l2 * l2;
                    break;
                  }
                  g[b2 + 4 >> 2] = j2;
                  g[b2 + 8 >> 2] = k2;
                  g[b2 + 12 >> 2] = l2;
                  c[b2 + 16 >> 2] = h2;
                  x2 = c[b2 + 64 >> 2] | 0;
                  c[b2 + 64 >> 2] = x2 + 1;
                  if ((x2 | 0) <= 1e3)
                    if ((c[c[b2 + 24 >> 2] >> 2] | 0) == 4) {
                      c[b2 + 68 >> 2] = 13;
                      h2 = 0;
                      m2 = j2 * j2 + k2 * k2 + l2 * l2;
                    } else {
                      h2 = 1;
                      m2 = j2 * j2 + k2 * k2 + l2 * l2;
                    }
                  else {
                    h2 = 0;
                    m2 = j2 * j2 + k2 * k2 + l2 * l2;
                  }
                }
              while (0);
            } while (h2);
            u2 = A2 << 24 >> 24 == 0 ? u2 : 0;
            t2 = (A2 << 24 >> 24 == 0 ? v2 : 0) + u2;
            do
              if (s2) {
                A2 = c[b2 + 24 >> 2] | 0;
                eo(A2) | 0;
                l2 = +g[A2 + 260 >> 2];
                k2 = +g[A2 + 264 >> 2];
                o2 = +g[A2 + 268 >> 2];
                c[R2 + 240 >> 2] = c[b2 + 4 >> 2];
                c[R2 + 240 + 4 >> 2] = c[b2 + 4 + 4 >> 2];
                c[R2 + 240 + 8 >> 2] = c[b2 + 4 + 8 >> 2];
                c[R2 + 240 + 12 >> 2] = c[b2 + 4 + 12 >> 2];
                j2 = +g[b2 + 4 >> 2];
                n2 = +g[b2 + 8 >> 2];
                p2 = +g[b2 + 12 >> 2];
                if (j2 * j2 + n2 * n2 + p2 * p2 < 1e-4)
                  c[b2 + 68 >> 2] = 5;
                if (j2 * j2 + n2 * n2 + p2 * p2 > 14210854715202004e-30) {
                  C2 = 1 / +O(+(j2 * j2 + n2 * n2 + p2 * p2));
                  g[R2 + 240 >> 2] = C2 * +g[R2 + 240 >> 2];
                  g[I2 >> 2] = C2 * +g[I2 >> 2];
                  g[J2 >> 2] = C2 * +g[J2 >> 2];
                  B2 = u2 / +O(+m2);
                  c[b2 + 60 >> 2] = 1;
                  m2 = 1 / C2 - t2;
                  w2 = 1;
                  l2 = B2 * j2 + l2;
                  C2 = B2 * n2 + k2;
                  B2 = B2 * p2 + o2;
                  break;
                } else {
                  c[b2 + 60 >> 2] = 2;
                  m2 = 0;
                  w2 = 0;
                  C2 = k2;
                  B2 = o2;
                  break;
                }
              } else {
                m2 = 0;
                w2 = 0;
                l2 = 0;
                C2 = 0;
                B2 = 0;
              }
            while (0);
            if (((c[b2 + 72 >> 2] | 0) != 0 ? (c[b2 + 20 >> 2] | 0) != 0 : 0) ? (c[b2 + 68 >> 2] | 0) != 0 : 0)
              h2 = t2 + m2 < 0.01;
            else
              h2 = 0;
            s2 = w2 ^ 1;
            do
              if (h2 | s2 ? (D2 = c[b2 + 20 >> 2] | 0, (D2 | 0) != 0) : 0) {
                c[5045] = (c[5045] | 0) + 1;
                c[b2 + 4 >> 2] = 0;
                c[b2 + 4 + 4 >> 2] = 0;
                c[b2 + 4 + 8 >> 2] = 0;
                c[b2 + 4 + 12 >> 2] = 0;
                if (!(ub[c[(c[D2 >> 2] | 0) + 8 >> 2] & 3](D2, c[b2 + 24 >> 2] | 0, c[b2 + 28 >> 2] | 0, c[b2 + 32 >> 2] | 0, R2 + 176 | 0, R2 + 112 | 0, b2 + 4 | 0, R2 + 96 | 0, R2 + 80 | 0, f2) | 0)) {
                  k2 = +g[b2 + 4 >> 2];
                  o2 = +g[b2 + 8 >> 2];
                  q2 = +g[b2 + 12 >> 2];
                  if (!(k2 * k2 + o2 * o2 + q2 * q2 > 0)) {
                    if (w2) {
                      k2 = C2;
                      j2 = B2;
                      break;
                    }
                    i = R2;
                    return;
                  }
                  n2 = +g[R2 + 80 >> 2];
                  v2 = +g[R2 + 96 >> 2] - n2;
                  p2 = +g[R2 + 80 + 4 >> 2];
                  y2 = +g[R2 + 96 + 4 >> 2] - p2;
                  r2 = +g[R2 + 80 + 8 >> 2];
                  j2 = +g[R2 + 96 + 8 >> 2] - r2;
                  j2 = +O(+(v2 * v2 + y2 * y2 + j2 * j2)) - t2;
                  if (j2 < m2 | s2) {
                    c[R2 + 240 >> 2] = c[b2 + 4 >> 2];
                    c[R2 + 240 + 4 >> 2] = c[b2 + 4 + 4 >> 2];
                    c[R2 + 240 + 8 >> 2] = c[b2 + 4 + 8 >> 2];
                    c[R2 + 240 + 12 >> 2] = c[b2 + 4 + 12 >> 2];
                    B2 = +g[R2 + 240 >> 2];
                    C2 = +g[I2 >> 2];
                    l2 = +g[J2 >> 2];
                    m2 = 1 / +O(+(B2 * B2 + C2 * C2 + l2 * l2));
                    g[R2 + 240 >> 2] = B2 * m2;
                    g[I2 >> 2] = C2 * m2;
                    g[J2 >> 2] = l2 * m2;
                    c[b2 + 60 >> 2] = 6;
                    m2 = j2;
                    l2 = u2 * k2 + n2;
                    k2 = u2 * o2 + p2;
                    j2 = u2 * q2 + r2;
                    break;
                  }
                  c[b2 + 60 >> 2] = 5;
                  if (w2) {
                    k2 = C2;
                    j2 = B2;
                    break;
                  }
                  i = R2;
                  return;
                }
                y2 = +g[R2 + 80 >> 2];
                o2 = +g[R2 + 96 >> 2];
                k2 = +g[R2 + 80 + 4 >> 2];
                p2 = +g[R2 + 96 + 4 >> 2];
                j2 = +g[R2 + 80 + 8 >> 2];
                q2 = +g[R2 + 96 + 8 >> 2];
                if (!((y2 - o2) * (y2 - o2) + (k2 - p2) * (k2 - p2) + (j2 - q2) * (j2 - q2) <= 14210854715202004e-30)) {
                  n2 = (y2 - o2) * (y2 - o2) + (k2 - p2) * (k2 - p2) + (j2 - q2) * (j2 - q2);
                  r2 = y2 - o2;
                  t2 = j2 - q2;
                  u2 = 0;
                  v2 = k2 - p2;
                } else {
                  r2 = +g[b2 + 4 >> 2];
                  v2 = +g[b2 + 8 >> 2];
                  t2 = +g[b2 + 12 >> 2];
                  n2 = r2 * r2 + v2 * v2 + t2 * t2;
                  u2 = +g[b2 + 16 >> 2];
                }
                if (!(n2 > 14210854715202004e-30)) {
                  c[b2 + 60 >> 2] = 9;
                  if (w2) {
                    k2 = C2;
                    j2 = B2;
                    break;
                  }
                  i = R2;
                  return;
                }
                n2 = 1 / +O(+n2);
                o2 = -+O(+((o2 - y2) * (o2 - y2) + (p2 - k2) * (p2 - k2) + (q2 - j2) * (q2 - j2)));
                c[b2 + 60 >> 2] = 3;
                if (!(m2 > o2 | s2)) {
                  c[b2 + 60 >> 2] = 8;
                  if (w2) {
                    k2 = C2;
                    j2 = B2;
                    break;
                  }
                  i = R2;
                  return;
                }
                C2 = t2 * n2;
                t2 = v2 * n2;
                r2 = r2 * n2;
                g[R2 + 240 >> 2] = r2;
                g[I2 >> 2] = t2;
                g[J2 >> 2] = C2;
                g[R2 + 240 + 12 >> 2] = u2;
                m2 = r2 * +g[d2 + 4 >> 2] + t2 * +g[d2 + 20 >> 2] + C2 * +g[d2 + 36 >> 2];
                l2 = r2 * +g[d2 + 8 >> 2] + t2 * +g[d2 + 24 >> 2] + C2 * +g[d2 + 40 >> 2];
                g[R2 + 64 >> 2] = +g[d2 >> 2] * r2 + +g[d2 + 16 >> 2] * t2 + +g[d2 + 32 >> 2] * C2;
                g[R2 + 64 + 4 >> 2] = m2;
                g[R2 + 64 + 8 >> 2] = l2;
                g[R2 + 64 + 12 >> 2] = 0;
                l2 = +g[d2 + 68 >> 2] * -r2 + +g[d2 + 84 >> 2] * -t2 + +g[d2 + 100 >> 2] * -C2;
                m2 = +g[d2 + 72 >> 2] * -r2 + +g[d2 + 88 >> 2] * -t2 + +g[d2 + 104 >> 2] * -C2;
                g[R2 + 48 >> 2] = +g[d2 + 64 >> 2] * -r2 + +g[d2 + 80 >> 2] * -t2 + +g[d2 + 96 >> 2] * -C2;
                g[R2 + 48 + 4 >> 2] = l2;
                g[R2 + 48 + 8 >> 2] = m2;
                g[R2 + 48 + 12 >> 2] = 0;
                fl(R2 + 32 | 0, c[b2 + 28 >> 2] | 0, R2 + 64 | 0);
                fl(R2 + 16 | 0, c[b2 + 32 >> 2] | 0, R2 + 48 | 0);
                m2 = +g[R2 + 32 >> 2];
                l2 = +g[R2 + 32 + 4 >> 2];
                C2 = +g[R2 + 32 + 8 >> 2];
                t2 = +g[R2 + 16 >> 2];
                r2 = +g[R2 + 16 + 4 >> 2];
                q2 = +g[R2 + 16 + 8 >> 2];
                B2 = +g[R2 + 240 >> 2];
                v2 = +g[I2 >> 2];
                u2 = +g[J2 >> 2];
                q2 = -((m2 * +g[R2 + 176 + 16 >> 2] + l2 * +g[R2 + 176 + 20 >> 2] + C2 * +g[R2 + 176 + 24 >> 2] + +g[E2 >> 2] - (t2 * +g[R2 + 112 + 16 >> 2] + r2 * +g[R2 + 112 + 20 >> 2] + q2 * +g[R2 + 112 + 24 >> 2] + +g[F2 >> 2])) * v2) - (m2 * +g[R2 + 176 >> 2] + l2 * +g[R2 + 176 + 4 >> 2] + C2 * +g[R2 + 176 + 8 >> 2] + +g[R2 + 176 + 48 >> 2] - (t2 * +g[R2 + 112 >> 2] + r2 * +g[R2 + 112 + 4 >> 2] + q2 * +g[R2 + 112 + 8 >> 2] + +g[R2 + 112 + 48 >> 2])) * B2 - (m2 * +g[R2 + 176 + 32 >> 2] + l2 * +g[R2 + 176 + 36 >> 2] + C2 * +g[R2 + 176 + 40 >> 2] + +g[G2 >> 2] - (t2 * +g[R2 + 112 + 32 >> 2] + r2 * +g[R2 + 112 + 36 >> 2] + q2 * +g[R2 + 112 + 40 >> 2] + +g[H2 >> 2])) * u2;
                r2 = +g[d2 + 4 >> 2] * -B2 + +g[d2 + 20 >> 2] * -v2 + +g[d2 + 36 >> 2] * -u2;
                t2 = +g[d2 + 8 >> 2] * -B2 + +g[d2 + 24 >> 2] * -v2 + +g[d2 + 40 >> 2] * -u2;
                g[R2 + 64 >> 2] = +g[d2 >> 2] * -B2 + +g[d2 + 16 >> 2] * -v2 + +g[d2 + 32 >> 2] * -u2;
                g[R2 + 64 + 4 >> 2] = r2;
                g[R2 + 64 + 8 >> 2] = t2;
                g[R2 + 64 + 12 >> 2] = 0;
                t2 = B2 * +g[d2 + 68 >> 2] + v2 * +g[d2 + 84 >> 2] + u2 * +g[d2 + 100 >> 2];
                r2 = B2 * +g[d2 + 72 >> 2] + v2 * +g[d2 + 88 >> 2] + u2 * +g[d2 + 104 >> 2];
                g[R2 + 48 >> 2] = +g[d2 + 64 >> 2] * B2 + +g[d2 + 80 >> 2] * v2 + +g[d2 + 96 >> 2] * u2;
                g[R2 + 48 + 4 >> 2] = t2;
                g[R2 + 48 + 8 >> 2] = r2;
                g[R2 + 48 + 12 >> 2] = 0;
                fl(R2 + 32 | 0, c[b2 + 28 >> 2] | 0, R2 + 64 | 0);
                fl(R2 + 16 | 0, c[b2 + 32 >> 2] | 0, R2 + 48 | 0);
                r2 = +g[R2 + 32 >> 2];
                t2 = +g[R2 + 32 + 4 >> 2];
                u2 = +g[R2 + 32 + 8 >> 2];
                v2 = +g[R2 + 16 >> 2];
                B2 = +g[R2 + 16 + 4 >> 2];
                C2 = +g[R2 + 16 + 8 >> 2];
                l2 = +g[R2 + 240 >> 2];
                m2 = +g[I2 >> 2];
                n2 = +g[J2 >> 2];
                if (q2 > (r2 * +g[R2 + 176 >> 2] + t2 * +g[R2 + 176 + 4 >> 2] + u2 * +g[R2 + 176 + 8 >> 2] + +g[R2 + 176 + 48 >> 2] - (v2 * +g[R2 + 112 >> 2] + B2 * +g[R2 + 112 + 4 >> 2] + C2 * +g[R2 + 112 + 8 >> 2] + +g[R2 + 112 + 48 >> 2])) * l2 + (r2 * +g[R2 + 176 + 16 >> 2] + t2 * +g[R2 + 176 + 20 >> 2] + u2 * +g[R2 + 176 + 24 >> 2] + +g[E2 >> 2] - (v2 * +g[R2 + 112 + 16 >> 2] + B2 * +g[R2 + 112 + 20 >> 2] + C2 * +g[R2 + 112 + 24 >> 2] + +g[F2 >> 2])) * m2 + (r2 * +g[R2 + 176 + 32 >> 2] + t2 * +g[R2 + 176 + 36 >> 2] + u2 * +g[R2 + 176 + 40 >> 2] + +g[G2 >> 2] - (v2 * +g[R2 + 112 + 32 >> 2] + B2 * +g[R2 + 112 + 36 >> 2] + C2 * +g[R2 + 112 + 40 >> 2] + +g[H2 >> 2])) * n2) {
                  c[b2 + 60 >> 2] = 10;
                  g[R2 + 240 >> 2] = -l2;
                  g[I2 >> 2] = -m2;
                  g[J2 >> 2] = -n2;
                }
                m2 = o2;
                l2 = y2;
              } else
                S2 = 56;
            while (0);
            if ((S2 | 0) == 56)
              if (w2) {
                k2 = C2;
                j2 = B2;
              } else {
                i = R2;
                return;
              }
            if (!(m2 < 0) ? !(m2 * m2 < +g[d2 + 128 >> 2]) : 0) {
              i = R2;
              return;
            }
            ;
            c[b2 + 4 >> 2] = c[R2 + 240 >> 2];
            c[b2 + 4 + 4 >> 2] = c[R2 + 240 + 4 >> 2];
            c[b2 + 4 + 8 >> 2] = c[R2 + 240 + 8 >> 2];
            c[b2 + 4 + 12 >> 2] = c[R2 + 240 + 12 >> 2];
            g[b2 + 56 >> 2] = m2;
            S2 = c[(c[e2 >> 2] | 0) + 16 >> 2] | 0;
            g[R2 >> 2] = (K2 + L2) * 0.5 + l2;
            g[R2 + 4 >> 2] = (M2 + N2) * 0.5 + k2;
            g[R2 + 8 >> 2] = (P2 + Q2) * 0.5 + j2;
            g[R2 + 12 >> 2] = 0;
            Yb[S2 & 15](e2, R2 + 240 | 0, R2, m2);
            i = R2;
            return;
          }
          function Pn(a2) {
            a2 = a2 | 0;
            rG(a2);
            return;
          }
          function Qn(b2, d2, e2, f2, h2, j2, l2, m2, n2, o2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            h2 = h2 | 0;
            j2 = j2 | 0;
            l2 = l2 | 0;
            m2 = m2 | 0;
            n2 = n2 | 0;
            o2 = o2 | 0;
            var p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0;
            B2 = i;
            i = i + 4224 | 0;
            if (((c[e2 + 4 >> 2] | 0) + -17 | 0) >>> 0 < 2)
              A2 = ((c[f2 + 4 >> 2] | 0) + -17 | 0) >>> 0 < 2;
            else
              A2 = 0;
            b2 = 0;
            do {
              Rn();
              t2 = +g[20188 + (b2 << 4) >> 2];
              u2 = +g[20188 + (b2 << 4) + 4 >> 2];
              v2 = +g[20188 + (b2 << 4) + 8 >> 2];
              y2 = +g[h2 + 4 >> 2] * -t2 + +g[h2 + 20 >> 2] * -u2 + +g[h2 + 36 >> 2] * -v2;
              w2 = +g[h2 + 8 >> 2] * -t2 + +g[h2 + 24 >> 2] * -u2 + +g[h2 + 40 >> 2] * -v2;
              g[B2 + 1248 + (b2 << 4) >> 2] = +g[h2 >> 2] * -t2 + +g[h2 + 16 >> 2] * -u2 + +g[h2 + 32 >> 2] * -v2;
              g[B2 + 1248 + (b2 << 4) + 4 >> 2] = y2;
              g[B2 + 1248 + (b2 << 4) + 8 >> 2] = w2;
              g[B2 + 1248 + (b2 << 4) + 12 >> 2] = 0;
              w2 = t2 * +g[j2 + 4 >> 2] + u2 * +g[j2 + 20 >> 2] + v2 * +g[j2 + 36 >> 2];
              y2 = t2 * +g[j2 + 8 >> 2] + u2 * +g[j2 + 24 >> 2] + v2 * +g[j2 + 40 >> 2];
              g[B2 + 256 + (b2 << 4) >> 2] = t2 * +g[j2 >> 2] + u2 * +g[j2 + 16 >> 2] + v2 * +g[j2 + 32 >> 2];
              g[B2 + 256 + (b2 << 4) + 4 >> 2] = w2;
              g[B2 + 256 + (b2 << 4) + 8 >> 2] = y2;
              g[B2 + 256 + (b2 << 4) + 12 >> 2] = 0;
              b2 = b2 + 1 | 0;
            } while ((b2 | 0) != 42);
            b2 = vb[c[(c[e2 >> 2] | 0) + 84 >> 2] & 127](e2) | 0;
            if ((b2 | 0) > 0) {
              q2 = 0;
              r2 = 42;
              while (1) {
                Zb[c[(c[e2 >> 2] | 0) + 88 >> 2] & 127](e2, q2, B2 + 176 | 0);
                w2 = +g[B2 + 176 >> 2];
                y2 = +g[B2 + 176 + 4 >> 2];
                v2 = +g[B2 + 176 + 8 >> 2];
                u2 = w2 * +g[h2 + 16 >> 2] + y2 * +g[h2 + 20 >> 2] + v2 * +g[h2 + 24 >> 2];
                t2 = w2 * +g[h2 + 32 >> 2] + y2 * +g[h2 + 36 >> 2] + v2 * +g[h2 + 40 >> 2];
                g[B2 + 176 >> 2] = +g[h2 >> 2] * w2 + +g[h2 + 4 >> 2] * y2 + +g[h2 + 8 >> 2] * v2;
                g[B2 + 176 + 4 >> 2] = u2;
                g[B2 + 176 + 8 >> 2] = t2;
                g[B2 + 176 + 12 >> 2] = 0;
                Rn();
                z2 = 20188 + (r2 << 4) | 0;
                c[z2 >> 2] = c[B2 + 176 >> 2];
                c[z2 + 4 >> 2] = c[B2 + 176 + 4 >> 2];
                c[z2 + 8 >> 2] = c[B2 + 176 + 8 >> 2];
                c[z2 + 12 >> 2] = c[B2 + 176 + 12 >> 2];
                t2 = +g[B2 + 176 >> 2];
                u2 = +g[B2 + 176 + 4 >> 2];
                v2 = +g[B2 + 176 + 8 >> 2];
                y2 = +g[h2 + 4 >> 2] * -t2 + +g[h2 + 20 >> 2] * -u2 + +g[h2 + 36 >> 2] * -v2;
                w2 = +g[h2 + 8 >> 2] * -t2 + +g[h2 + 24 >> 2] * -u2 + +g[h2 + 40 >> 2] * -v2;
                g[B2 + 1248 + (r2 << 4) >> 2] = +g[h2 >> 2] * -t2 + +g[h2 + 16 >> 2] * -u2 + +g[h2 + 32 >> 2] * -v2;
                g[B2 + 1248 + (r2 << 4) + 4 >> 2] = y2;
                g[B2 + 1248 + (r2 << 4) + 8 >> 2] = w2;
                g[B2 + 1248 + (r2 << 4) + 12 >> 2] = 0;
                w2 = t2 * +g[j2 + 4 >> 2] + u2 * +g[j2 + 20 >> 2] + v2 * +g[j2 + 36 >> 2];
                y2 = t2 * +g[j2 + 8 >> 2] + u2 * +g[j2 + 24 >> 2] + v2 * +g[j2 + 40 >> 2];
                g[B2 + 256 + (r2 << 4) >> 2] = +g[j2 >> 2] * t2 + +g[j2 + 16 >> 2] * u2 + +g[j2 + 32 >> 2] * v2;
                g[B2 + 256 + (r2 << 4) + 4 >> 2] = w2;
                g[B2 + 256 + (r2 << 4) + 8 >> 2] = y2;
                g[B2 + 256 + (r2 << 4) + 12 >> 2] = 0;
                q2 = q2 + 1 | 0;
                if ((q2 | 0) == (b2 | 0))
                  break;
                else
                  r2 = r2 + 1 | 0;
              }
              r2 = b2 + 42 | 0;
            } else
              r2 = 42;
            b2 = vb[c[(c[f2 >> 2] | 0) + 84 >> 2] & 127](f2) | 0;
            if ((b2 | 0) > 0) {
              q2 = 0;
              s2 = r2;
              while (1) {
                Zb[c[(c[f2 >> 2] | 0) + 88 >> 2] & 127](f2, q2, B2 + 176 | 0);
                w2 = +g[B2 + 176 >> 2];
                y2 = +g[B2 + 176 + 4 >> 2];
                v2 = +g[B2 + 176 + 8 >> 2];
                u2 = w2 * +g[j2 + 16 >> 2] + y2 * +g[j2 + 20 >> 2] + v2 * +g[j2 + 24 >> 2];
                t2 = w2 * +g[j2 + 32 >> 2] + y2 * +g[j2 + 36 >> 2] + v2 * +g[j2 + 40 >> 2];
                g[B2 + 176 >> 2] = +g[j2 >> 2] * w2 + +g[j2 + 4 >> 2] * y2 + +g[j2 + 8 >> 2] * v2;
                g[B2 + 176 + 4 >> 2] = u2;
                g[B2 + 176 + 8 >> 2] = t2;
                g[B2 + 176 + 12 >> 2] = 0;
                Rn();
                z2 = 20188 + (s2 << 4) | 0;
                c[z2 >> 2] = c[B2 + 176 >> 2];
                c[z2 + 4 >> 2] = c[B2 + 176 + 4 >> 2];
                c[z2 + 8 >> 2] = c[B2 + 176 + 8 >> 2];
                c[z2 + 12 >> 2] = c[B2 + 176 + 12 >> 2];
                t2 = +g[B2 + 176 >> 2];
                u2 = +g[B2 + 176 + 4 >> 2];
                v2 = +g[B2 + 176 + 8 >> 2];
                y2 = +g[h2 + 4 >> 2] * -t2 + +g[h2 + 20 >> 2] * -u2 + +g[h2 + 36 >> 2] * -v2;
                w2 = +g[h2 + 8 >> 2] * -t2 + +g[h2 + 24 >> 2] * -u2 + +g[h2 + 40 >> 2] * -v2;
                g[B2 + 1248 + (s2 << 4) >> 2] = +g[h2 >> 2] * -t2 + +g[h2 + 16 >> 2] * -u2 + +g[h2 + 32 >> 2] * -v2;
                g[B2 + 1248 + (s2 << 4) + 4 >> 2] = y2;
                g[B2 + 1248 + (s2 << 4) + 8 >> 2] = w2;
                g[B2 + 1248 + (s2 << 4) + 12 >> 2] = 0;
                w2 = t2 * +g[j2 + 4 >> 2] + u2 * +g[j2 + 20 >> 2] + v2 * +g[j2 + 36 >> 2];
                y2 = t2 * +g[j2 + 8 >> 2] + u2 * +g[j2 + 24 >> 2] + v2 * +g[j2 + 40 >> 2];
                g[B2 + 256 + (s2 << 4) >> 2] = +g[j2 >> 2] * t2 + +g[j2 + 16 >> 2] * u2 + +g[j2 + 32 >> 2] * v2;
                g[B2 + 256 + (s2 << 4) + 4 >> 2] = w2;
                g[B2 + 256 + (s2 << 4) + 8 >> 2] = y2;
                g[B2 + 256 + (s2 << 4) + 12 >> 2] = 0;
                q2 = q2 + 1 | 0;
                if ((q2 | 0) == (b2 | 0))
                  break;
                else
                  s2 = s2 + 1 | 0;
              }
              r2 = b2 + r2 | 0;
            }
            bc[c[(c[e2 >> 2] | 0) + 76 >> 2] & 127](e2, B2 + 1248 | 0, B2 + 3232 | 0, r2);
            bc[c[(c[f2 >> 2] | 0) + 76 >> 2] & 127](f2, B2 + 256 | 0, B2 + 2240 | 0, r2);
            if ((r2 | 0) > 0) {
              z2 = 0;
              b2 = 0;
              q2 = 0;
              s2 = 0;
              w2 = 0;
              u2 = 999999984306749400;
              while (1) {
                Rn();
                p2 = +g[20188 + (z2 << 4) >> 2];
                t2 = +g[20188 + (z2 << 4) + 4 >> 2];
                y2 = +g[20188 + (z2 << 4) + 12 >> 2];
                v2 = A2 ? 0 : +g[20188 + (z2 << 4) + 8 >> 2];
                if (p2 * p2 + t2 * t2 + v2 * v2 > 0.01 ? (D2 = +g[B2 + 3232 + (z2 << 4) >> 2], C2 = +g[B2 + 3232 + (z2 << 4) + 4 >> 2], x2 = +g[B2 + 3232 + (z2 << 4) + 8 >> 2], G2 = +g[B2 + 2240 + (z2 << 4) >> 2], F2 = +g[B2 + 2240 + (z2 << 4) + 4 >> 2], E2 = +g[B2 + 2240 + (z2 << 4) + 8 >> 2], x2 = p2 * (G2 * +g[j2 >> 2] + F2 * +g[j2 + 4 >> 2] + E2 * +g[j2 + 8 >> 2] + +g[j2 + 48 >> 2] - (D2 * +g[h2 >> 2] + C2 * +g[h2 + 4 >> 2] + x2 * +g[h2 + 8 >> 2] + +g[h2 + 48 >> 2])) + t2 * (G2 * +g[j2 + 16 >> 2] + F2 * +g[j2 + 20 >> 2] + E2 * +g[j2 + 24 >> 2] + +g[j2 + 52 >> 2] - (D2 * +g[h2 + 16 >> 2] + C2 * +g[h2 + 20 >> 2] + x2 * +g[h2 + 24 >> 2] + +g[h2 + 52 >> 2])) + v2 * ((A2 ? 0 : G2 * +g[j2 + 32 >> 2] + F2 * +g[j2 + 36 >> 2] + E2 * +g[j2 + 40 >> 2] + +g[j2 + 56 >> 2]) - (A2 ? 0 : D2 * +g[h2 + 32 >> 2] + C2 * +g[h2 + 36 >> 2] + x2 * +g[h2 + 40 >> 2] + +g[h2 + 56 >> 2])), x2 < u2) : 0) {
                  b2 = (g[k >> 2] = p2, c[k >> 2] | 0);
                  q2 = (g[k >> 2] = t2, c[k >> 2] | 0);
                  s2 = (g[k >> 2] = v2, c[k >> 2] | 0);
                  u2 = x2;
                } else
                  y2 = w2;
                z2 = z2 + 1 | 0;
                if ((z2 | 0) == (r2 | 0)) {
                  z2 = b2;
                  r2 = s2;
                  break;
                } else
                  w2 = y2;
              }
            } else {
              z2 = 0;
              q2 = 0;
              r2 = 0;
              y2 = 0;
              u2 = 999999984306749400;
            }
            switch (c[e2 + 4 >> 2] | 0) {
              case 4:
              case 5:
              case 10:
              case 11:
              case 13:
              case 1:
              case 0:
              case 8:
                break;
              default:
                +Hb[c[(c[e2 >> 2] | 0) + 48 >> 2] & 15](e2);
            }
            v2 = (c[k >> 2] = z2, +g[k >> 2]);
            w2 = (c[k >> 2] = q2, +g[k >> 2]);
            x2 = (c[k >> 2] = r2, +g[k >> 2]);
            switch (c[f2 + 4 >> 2] | 0) {
              case 4:
              case 5:
              case 10:
              case 11:
              case 13:
              case 1:
              case 0:
              case 8:
                break;
              default:
                +Hb[c[(c[f2 >> 2] | 0) + 48 >> 2] & 15](f2);
            }
            if (u2 < 0) {
              l2 = 0;
              i = B2;
              return l2 | 0;
            }
            switch (c[e2 + 4 >> 2] | 0) {
              case 8: {
                p2 = +g[e2 + 32 >> 2] * +g[e2 + 16 >> 2];
                break;
              }
              case 0: {
                p2 = +g[e2 + 48 >> 2];
                break;
              }
              case 1: {
                p2 = +g[e2 + 48 >> 2];
                break;
              }
              case 13: {
                p2 = +g[e2 + 48 >> 2];
                break;
              }
              case 11: {
                p2 = +g[e2 + 48 >> 2];
                break;
              }
              case 10: {
                p2 = +g[e2 + 48 >> 2];
                break;
              }
              case 4:
              case 5: {
                p2 = +g[e2 + 48 >> 2];
                break;
              }
              default:
                p2 = +Hb[c[(c[e2 >> 2] | 0) + 48 >> 2] & 15](e2);
            }
            b2 = c[f2 + 4 >> 2] | 0;
            switch (b2 | 0) {
              case 8: {
                t2 = +g[f2 + 32 >> 2] * +g[f2 + 16 >> 2];
                b2 = 8;
                break;
              }
              case 0: {
                t2 = +g[f2 + 48 >> 2];
                b2 = 0;
                break;
              }
              case 1: {
                t2 = +g[f2 + 48 >> 2];
                b2 = 1;
                break;
              }
              case 13: {
                t2 = +g[f2 + 48 >> 2];
                b2 = 13;
                break;
              }
              case 11: {
                t2 = +g[f2 + 48 >> 2];
                b2 = 11;
                break;
              }
              case 10: {
                t2 = +g[f2 + 48 >> 2];
                b2 = 10;
                break;
              }
              case 4:
              case 5: {
                t2 = +g[f2 + 48 >> 2];
                break;
              }
              default: {
                t2 = +Hb[c[(c[f2 >> 2] | 0) + 48 >> 2] & 15](f2);
                b2 = c[f2 + 4 >> 2] | 0;
              }
            }
            p2 = u2 + (p2 + t2 + 0.5);
            c[B2 + 176 >> 2] = 6928;
            c[B2 + 176 + 4 >> 2] = 0;
            c[B2 + 176 + 8 >> 2] = 1065353216;
            c[B2 + 176 + 12 >> 2] = 0;
            g[B2 + 176 + 16 >> 2] = 0;
            c[B2 + 176 + 20 >> 2] = 0;
            c[B2 + 176 + 24 >> 2] = d2;
            c[B2 + 176 + 28 >> 2] = e2;
            c[B2 + 176 + 32 >> 2] = f2;
            c[B2 + 176 + 36 >> 2] = c[e2 + 4 >> 2];
            c[B2 + 176 + 40 >> 2] = b2;
            g[B2 + 176 + 44 >> 2] = +Hb[c[(c[e2 >> 2] | 0) + 48 >> 2] & 15](e2);
            g[B2 + 176 + 48 >> 2] = +Hb[c[(c[f2 >> 2] | 0) + 48 >> 2] & 15](f2);
            a[B2 + 176 + 52 >> 0] = 0;
            c[B2 + 176 + 60 >> 2] = -1;
            c[B2 + 176 + 72 >> 2] = 1;
            c[B2 + 176 + 76 >> 2] = 1;
            E2 = v2 * p2 + +g[h2 + 48 >> 2];
            F2 = w2 * p2 + +g[h2 + 52 >> 2];
            G2 = x2 * p2 + +g[h2 + 56 >> 2];
            c[B2 + 44 >> 2] = c[h2 >> 2];
            c[B2 + 44 + 4 >> 2] = c[h2 + 4 >> 2];
            c[B2 + 44 + 8 >> 2] = c[h2 + 8 >> 2];
            c[B2 + 44 + 12 >> 2] = c[h2 + 12 >> 2];
            c[B2 + 44 + 16 >> 2] = c[h2 + 16 >> 2];
            c[B2 + 44 + 16 + 4 >> 2] = c[h2 + 16 + 4 >> 2];
            c[B2 + 44 + 16 + 8 >> 2] = c[h2 + 16 + 8 >> 2];
            c[B2 + 44 + 16 + 12 >> 2] = c[h2 + 16 + 12 >> 2];
            c[B2 + 44 + 32 >> 2] = c[h2 + 32 >> 2];
            c[B2 + 44 + 32 + 4 >> 2] = c[h2 + 32 + 4 >> 2];
            c[B2 + 44 + 32 + 8 >> 2] = c[h2 + 32 + 8 >> 2];
            c[B2 + 44 + 32 + 12 >> 2] = c[h2 + 32 + 12 >> 2];
            g[B2 + 44 + 48 >> 2] = E2;
            g[B2 + 44 + 52 >> 2] = F2;
            g[B2 + 44 + 56 >> 2] = G2;
            g[B2 + 44 + 60 >> 2] = 0;
            c[B2 + 44 + 64 >> 2] = c[j2 >> 2];
            c[B2 + 44 + 64 + 4 >> 2] = c[j2 + 4 >> 2];
            c[B2 + 44 + 64 + 8 >> 2] = c[j2 + 8 >> 2];
            c[B2 + 44 + 64 + 12 >> 2] = c[j2 + 12 >> 2];
            c[B2 + 44 + 80 >> 2] = c[j2 + 16 >> 2];
            c[B2 + 44 + 80 + 4 >> 2] = c[j2 + 16 + 4 >> 2];
            c[B2 + 44 + 80 + 8 >> 2] = c[j2 + 16 + 8 >> 2];
            c[B2 + 44 + 80 + 12 >> 2] = c[j2 + 16 + 12 >> 2];
            c[B2 + 44 + 96 >> 2] = c[j2 + 32 >> 2];
            c[B2 + 44 + 96 + 4 >> 2] = c[j2 + 32 + 4 >> 2];
            c[B2 + 44 + 96 + 8 >> 2] = c[j2 + 32 + 8 >> 2];
            c[B2 + 44 + 96 + 12 >> 2] = c[j2 + 32 + 12 >> 2];
            c[B2 + 44 + 112 >> 2] = c[j2 + 48 >> 2];
            c[B2 + 44 + 112 + 4 >> 2] = c[j2 + 48 + 4 >> 2];
            c[B2 + 44 + 112 + 8 >> 2] = c[j2 + 48 + 8 >> 2];
            c[B2 + 44 + 112 + 12 >> 2] = c[j2 + 48 + 12 >> 2];
            g[B2 + 44 + 128 >> 2] = 999999984306749400;
            c[B2 >> 2] = 6968;
            a[B2 + 40 >> 0] = 0;
            g[B2 + 176 + 4 >> 2] = -v2;
            g[B2 + 176 + 8 >> 2] = -w2;
            g[B2 + 176 + 12 >> 2] = -x2;
            g[B2 + 176 + 16 >> 2] = 0;
            On(B2 + 176 | 0, B2 + 44 | 0, B2, o2, 0);
            p2 = p2 - +g[B2 + 36 >> 2];
            b2 = a[B2 + 40 >> 0] | 0;
            if (b2 << 24 >> 24) {
              F2 = +g[B2 + 24 >> 2] - w2 * p2;
              G2 = +g[B2 + 28 >> 2] - x2 * p2;
              g[m2 >> 2] = +g[B2 + 20 >> 2] - v2 * p2;
              g[m2 + 4 >> 2] = F2;
              g[m2 + 8 >> 2] = G2;
              g[m2 + 12 >> 2] = 0;
              c[n2 >> 2] = c[B2 + 20 >> 2];
              c[n2 + 4 >> 2] = c[B2 + 20 + 4 >> 2];
              c[n2 + 8 >> 2] = c[B2 + 20 + 8 >> 2];
              c[n2 + 12 >> 2] = c[B2 + 20 + 12 >> 2];
              c[l2 >> 2] = z2;
              c[l2 + 4 >> 2] = q2;
              c[l2 + 8 >> 2] = r2;
              g[l2 + 12 >> 2] = y2;
            }
            l2 = b2 << 24 >> 24 != 0;
            i = B2;
            return l2 | 0;
          }
          function Rn() {
            if (a[19864] | 0)
              return;
            a[19864] = 1;
            c[5047] = 0;
            c[5048] = -2147483648;
            c[5049] = -1082130432;
            g[5050] = 0;
            c[5051] = 1060716128;
            c[5052] = -1090087446;
            c[5053] = -1092290076;
            g[5054] = 0;
            c[5055] = -1098022214;
            c[5056] = -1084636126;
            c[5057] = -1092290076;
            g[5058] = 0;
            c[5059] = -1083901670;
            c[5060] = -2147483648;
            c[5061] = -1092290177;
            g[5062] = 0;
            c[5063] = -1098022214;
            c[5064] = 1062847522;
            c[5065] = -1092290043;
            g[5066] = 0;
            c[5067] = 1060716128;
            c[5068] = 1057396202;
            c[5069] = -1092290076;
            g[5070] = 0;
            c[5071] = 1049461434;
            c[5072] = -1084636126;
            c[5073] = 1055193605;
            g[5074] = 0;
            c[5075] = -1086767520;
            c[5076] = -1090087446;
            c[5077] = 1055193572;
            g[5078] = 0;
            c[5079] = -1086767520;
            c[5080] = 1057396202;
            c[5081] = 1055193572;
            g[5082] = 0;
            c[5083] = 1049461434;
            c[5084] = 1062847522;
            c[5085] = 1055193572;
            g[5086] = 0;
            c[5087] = 1063581978;
            c[5088] = 0;
            c[5089] = 1055193471;
            g[5090] = 0;
            c[5091] = -2147483648;
            c[5092] = 0;
            c[5093] = 1065353216;
            g[5094] = 0;
            c[5095] = 1054458864;
            c[5096] = -1096927567;
            c[5097] = -1084636042;
            g[5098] = 0;
            c[5099] = -1104782626;
            c[5100] = -1090519208;
            c[5101] = -1084636042;
            g[5102] = 0;
            c[5103] = 1049007812;
            c[5104] = -1085334679;
            c[5105] = -1090087228;
            g[5106] = 0;
            c[5107] = 1054458864;
            c[5108] = 1050556081;
            c[5109] = -1084636042;
            g[5110] = 0;
            c[5111] = 1062847505;
            c[5112] = -2147483648;
            c[5113] = -1090087262;
            g[5114] = 0;
            c[5115] = -1090087362;
            c[5116] = -2147483648;
            c[5117] = -1084636076;
            g[5118] = 0;
            c[5119] = -1087361736;
            c[5120] = -1090519141;
            c[5121] = -1090087262;
            g[5122] = 0;
            c[5123] = -1104782626;
            c[5124] = 1056964440;
            c[5125] = -1084636042;
            g[5126] = 0;
            c[5127] = -1087361736;
            c[5128] = 1056964507;
            c[5129] = -1090087262;
            g[5130] = 0;
            c[5131] = 1049007812;
            c[5132] = 1062148969;
            c[5133] = -1090087228;
            g[5134] = 0;
            c[5135] = 1064532105;
            c[5136] = 1050556148;
            c[5137] = 0;
            g[5138] = 0;
            c[5139] = 1064532105;
            c[5140] = -1096927500;
            c[5141] = 0;
            g[5142] = 0;
            c[5143] = 1058437413;
            c[5144] = -1085334595;
            c[5145] = 0;
            g[5146] = 0;
            c[5147] = 0;
            c[5148] = -1082130432;
            c[5149] = 0;
            g[5150] = 0;
            c[5151] = -1089046235;
            c[5152] = -1085334595;
            c[5153] = 0;
            g[5154] = 0;
            c[5155] = -1082951543;
            c[5156] = -1096927500;
            c[5157] = -2147483648;
            g[5158] = 0;
            c[5159] = -1082951543;
            c[5160] = 1050556148;
            c[5161] = -2147483648;
            g[5162] = 0;
            c[5163] = -1089046235;
            c[5164] = 1062149053;
            c[5165] = -2147483648;
            g[5166] = 0;
            c[5167] = -2147483648;
            c[5168] = 1065353216;
            c[5169] = -2147483648;
            g[5170] = 0;
            c[5171] = 1058437413;
            c[5172] = 1062149053;
            c[5173] = -2147483648;
            g[5174] = 0;
            c[5175] = 1060121912;
            c[5176] = -1090519141;
            c[5177] = 1057396386;
            g[5178] = 0;
            c[5179] = -1098475836;
            c[5180] = -1085334679;
            c[5181] = 1057396420;
            g[5182] = 0;
            c[5183] = -1084636143;
            c[5184] = 0;
            c[5185] = 1057396386;
            g[5186] = 0;
            c[5187] = -1098475836;
            c[5188] = 1062148969;
            c[5189] = 1057396420;
            g[5190] = 0;
            c[5191] = 1060121912;
            c[5192] = 1056964507;
            c[5193] = 1057396386;
            g[5194] = 0;
            c[5195] = 1057396286;
            c[5196] = 0;
            c[5197] = 1062847572;
            g[5198] = 0;
            c[5199] = 1042701022;
            c[5200] = -1090519208;
            c[5201] = 1062847606;
            g[5202] = 0;
            c[5203] = -1093024784;
            c[5204] = -1096927567;
            c[5205] = 1062847606;
            g[5206] = 0;
            c[5207] = -1093024784;
            c[5208] = 1050556081;
            c[5209] = 1062847606;
            g[5210] = 0;
            c[5211] = 1042701022;
            c[5212] = 1056964440;
            c[5213] = 1062847606;
            g[5214] = 0;
            return;
          }
          function Sn(a2) {
            a2 = a2 | 0;
            rG(a2);
            return;
          }
          function Tn(a2, b2, c2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            return;
          }
          function Un(a2, b2, c2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            return;
          }
          function Vn(b2, d2, e2, f2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = +f2;
            c[b2 + 4 >> 2] = c[d2 >> 2];
            c[b2 + 4 + 4 >> 2] = c[d2 + 4 >> 2];
            c[b2 + 4 + 8 >> 2] = c[d2 + 8 >> 2];
            c[b2 + 4 + 12 >> 2] = c[d2 + 12 >> 2];
            c[b2 + 20 >> 2] = c[e2 >> 2];
            c[b2 + 20 + 4 >> 2] = c[e2 + 4 >> 2];
            c[b2 + 20 + 8 >> 2] = c[e2 + 8 >> 2];
            c[b2 + 20 + 12 >> 2] = c[e2 + 12 >> 2];
            g[b2 + 36 >> 2] = f2;
            a[b2 + 40 >> 0] = 1;
            return;
          }
          function Wn(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0;
            d2 = c[a2 + 748 >> 2] | 0;
            if ((d2 | 0) != 4) {
              c[a2 + 748 >> 2] = d2 + 1;
              x2 = d2;
              w2 = (x2 | 0) < 0;
              x2 = w2 ? 0 : x2;
              a2 = a2 + 4 + (x2 * 184 | 0) | 0;
              bH(a2 | 0, b2 | 0, 184) | 0;
              return x2 | 0;
            }
            y2 = +g[b2 + 80 >> 2];
            v2 = +g[a2 + 84 >> 2];
            u2 = v2 < y2 ? v2 : y2;
            t2 = +g[a2 + 268 >> 2];
            s2 = t2 < u2 ? t2 : u2;
            r2 = +g[a2 + 452 >> 2];
            w2 = +g[a2 + 636 >> 2] < (r2 < s2 ? r2 : s2);
            d2 = w2 ? 3 : r2 < s2 ? 2 : t2 < u2 ? 1 : (v2 < y2 ^ 1) << 31 >> 31;
            y2 = +g[b2 >> 2];
            if (d2) {
              e2 = +g[a2 + 188 >> 2];
              p2 = +g[b2 + 4 >> 2];
              m2 = +g[a2 + 192 >> 2];
              i2 = +g[b2 + 8 >> 2];
              j2 = +g[a2 + 196 >> 2];
              o2 = +g[a2 + 556 >> 2];
              u2 = +g[a2 + 372 >> 2];
              r2 = +g[a2 + 560 >> 2];
              v2 = +g[a2 + 376 >> 2];
              t2 = +g[a2 + 564 >> 2];
              n2 = +g[a2 + 380 >> 2];
              h2 = (g[k >> 2] = ((y2 - e2) * (r2 - v2) - (p2 - m2) * (o2 - u2)) * ((y2 - e2) * (r2 - v2) - (p2 - m2) * (o2 - u2)) + (((p2 - m2) * (t2 - n2) - (i2 - j2) * (r2 - v2)) * ((p2 - m2) * (t2 - n2) - (i2 - j2) * (r2 - v2)) + ((i2 - j2) * (o2 - u2) - (y2 - e2) * (t2 - n2)) * ((i2 - j2) * (o2 - u2) - (y2 - e2) * (t2 - n2))), c[k >> 2] | 0);
              if ((d2 | 0) == 1) {
                l2 = +g[a2 + 8 >> 2];
                q2 = +g[a2 + 12 >> 2];
                s2 = r2;
                r2 = +g[a2 + 4 >> 2];
                f2 = 0;
                x2 = 7;
              } else {
                s2 = r2;
                x2 = 6;
              }
            } else {
              e2 = +g[a2 + 188 >> 2];
              m2 = +g[a2 + 192 >> 2];
              j2 = +g[a2 + 196 >> 2];
              p2 = +g[b2 + 4 >> 2];
              i2 = +g[b2 + 8 >> 2];
              o2 = +g[a2 + 556 >> 2];
              u2 = +g[a2 + 372 >> 2];
              s2 = +g[a2 + 560 >> 2];
              v2 = +g[a2 + 376 >> 2];
              t2 = +g[a2 + 564 >> 2];
              n2 = +g[a2 + 380 >> 2];
              h2 = 0;
              x2 = 6;
            }
            if ((x2 | 0) == 6) {
              r2 = +g[a2 + 4 >> 2];
              l2 = +g[a2 + 8 >> 2];
              D2 = p2 - l2;
              q2 = +g[a2 + 12 >> 2];
              B2 = i2 - q2;
              A2 = o2 - u2;
              C2 = s2 - v2;
              z2 = t2 - n2;
              f2 = (g[k >> 2] = ((y2 - r2) * C2 - D2 * A2) * ((y2 - r2) * C2 - D2 * A2) + ((D2 * z2 - B2 * C2) * (D2 * z2 - B2 * C2) + (B2 * A2 - (y2 - r2) * z2) * (B2 * A2 - (y2 - r2) * z2)), c[k >> 2] | 0);
              if ((d2 | 0) == 2) {
                s2 = u2;
                o2 = v2;
                d2 = 0;
                x2 = 8;
              } else
                x2 = 7;
            }
            if ((x2 | 0) == 7) {
              C2 = y2 - r2;
              E2 = p2 - l2;
              A2 = i2 - q2;
              B2 = o2 - e2;
              z2 = s2 - m2;
              D2 = t2 - j2;
              d2 = (g[k >> 2] = (C2 * z2 - E2 * B2) * (C2 * z2 - E2 * B2) + ((E2 * D2 - A2 * z2) * (E2 * D2 - A2 * z2) + (A2 * B2 - C2 * D2) * (A2 * B2 - C2 * D2)), c[k >> 2] | 0);
              if (w2)
                e2 = 0;
              else {
                s2 = u2;
                o2 = v2;
                x2 = 8;
              }
            }
            if ((x2 | 0) == 8) {
              E2 = y2 - r2;
              A2 = p2 - l2;
              C2 = i2 - q2;
              D2 = s2 - e2;
              B2 = o2 - m2;
              e2 = n2 - j2;
              e2 = (E2 * B2 - A2 * D2) * (E2 * B2 - A2 * D2) + ((A2 * e2 - C2 * B2) * (A2 * e2 - C2 * B2) + (C2 * D2 - E2 * e2) * (C2 * D2 - E2 * e2));
            }
            E2 = +N(+(c[k >> 2] = h2, +g[k >> 2]));
            C2 = +N(+(c[k >> 2] = f2, +g[k >> 2]));
            A2 = +N(+(c[k >> 2] = d2, +g[k >> 2]));
            z2 = +N(+e2);
            D2 = E2 > -999999984306749400 ? E2 : -999999984306749400;
            B2 = C2 > D2 ? C2 : D2;
            x2 = z2 > (A2 > B2 ? A2 : B2) ? 3 : A2 > B2 ? 2 : C2 > D2 ? 1 : (E2 > -999999984306749400 ^ 1) << 31 >> 31;
            w2 = (x2 | 0) < 0;
            x2 = w2 ? 0 : x2;
            a2 = a2 + 4 + (x2 * 184 | 0) | 0;
            bH(a2 | 0, b2 | 0, 184) | 0;
            return x2 | 0;
          }
          function Xn(b2, d2, e2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0;
            f2 = c[b2 + 748 >> 2] | 0;
            if ((f2 | 0) <= 0)
              return;
            do {
              k2 = f2;
              f2 = f2 + -1 | 0;
              p2 = +g[b2 + 4 + (f2 * 184 | 0) >> 2];
              q2 = +g[b2 + 4 + (f2 * 184 | 0) + 4 >> 2];
              h2 = +g[b2 + 4 + (f2 * 184 | 0) + 8 >> 2];
              o2 = p2 * +g[d2 >> 2] + q2 * +g[d2 + 4 >> 2] + h2 * +g[d2 + 8 >> 2] + +g[d2 + 48 >> 2];
              m2 = p2 * +g[d2 + 16 >> 2] + q2 * +g[d2 + 20 >> 2] + h2 * +g[d2 + 24 >> 2] + +g[d2 + 52 >> 2];
              h2 = p2 * +g[d2 + 32 >> 2] + q2 * +g[d2 + 36 >> 2] + h2 * +g[d2 + 40 >> 2] + +g[d2 + 56 >> 2];
              g[b2 + 4 + (f2 * 184 | 0) + 48 >> 2] = o2;
              g[b2 + 4 + (f2 * 184 | 0) + 52 >> 2] = m2;
              g[b2 + 4 + (f2 * 184 | 0) + 56 >> 2] = h2;
              g[b2 + 4 + (f2 * 184 | 0) + 60 >> 2] = 0;
              q2 = +g[b2 + 4 + (f2 * 184 | 0) + 16 >> 2];
              p2 = +g[b2 + 4 + (f2 * 184 | 0) + 20 >> 2];
              i2 = +g[b2 + 4 + (f2 * 184 | 0) + 24 >> 2];
              n2 = q2 * +g[e2 >> 2] + p2 * +g[e2 + 4 >> 2] + i2 * +g[e2 + 8 >> 2] + +g[e2 + 48 >> 2];
              l2 = q2 * +g[e2 + 16 >> 2] + p2 * +g[e2 + 20 >> 2] + i2 * +g[e2 + 24 >> 2] + +g[e2 + 52 >> 2];
              i2 = q2 * +g[e2 + 32 >> 2] + p2 * +g[e2 + 36 >> 2] + i2 * +g[e2 + 40 >> 2] + +g[e2 + 56 >> 2];
              g[b2 + 4 + (f2 * 184 | 0) + 32 >> 2] = n2;
              g[b2 + 4 + (f2 * 184 | 0) + 36 >> 2] = l2;
              g[b2 + 4 + (f2 * 184 | 0) + 40 >> 2] = i2;
              g[b2 + 4 + (f2 * 184 | 0) + 44 >> 2] = 0;
              g[b2 + 4 + (f2 * 184 | 0) + 80 >> 2] = (o2 - n2) * +g[b2 + 4 + (f2 * 184 | 0) + 64 >> 2] + (m2 - l2) * +g[b2 + 4 + (f2 * 184 | 0) + 68 >> 2] + (h2 - i2) * +g[b2 + 4 + (f2 * 184 | 0) + 72 >> 2];
              j2 = b2 + 4 + (f2 * 184 | 0) + 148 | 0;
              c[j2 >> 2] = (c[j2 >> 2] | 0) + 1;
            } while ((k2 | 0) > 1);
            f2 = c[b2 + 748 >> 2] | 0;
            if ((f2 | 0) <= 0)
              return;
            e2 = f2;
            j2 = f2;
            while (1) {
              k2 = j2;
              j2 = j2 + -1 | 0;
              d2 = b2 + 4 + (j2 * 184 | 0) | 0;
              h2 = +g[b2 + 4 + (j2 * 184 | 0) + 80 >> 2];
              i2 = +g[b2 + 752 >> 2];
              if (h2 <= i2) {
                o2 = +g[b2 + 4 + (j2 * 184 | 0) + 32 >> 2] - (+g[b2 + 4 + (j2 * 184 | 0) + 48 >> 2] - +g[b2 + 4 + (j2 * 184 | 0) + 64 >> 2] * h2);
                p2 = +g[b2 + 4 + (j2 * 184 | 0) + 36 >> 2] - (+g[b2 + 4 + (j2 * 184 | 0) + 52 >> 2] - h2 * +g[b2 + 4 + (j2 * 184 | 0) + 68 >> 2]);
                q2 = +g[b2 + 4 + (j2 * 184 | 0) + 40 >> 2] - (+g[b2 + 4 + (j2 * 184 | 0) + 56 >> 2] - h2 * +g[b2 + 4 + (j2 * 184 | 0) + 72 >> 2]);
                if (o2 * o2 + p2 * p2 + q2 * q2 > i2 * i2) {
                  f2 = e2 + -1 | 0;
                  if ((f2 | 0) == (j2 | 0))
                    f2 = e2;
                  else {
                    bH(d2 | 0, b2 + 4 + (f2 * 184 | 0) | 0, 184) | 0;
                    c[b2 + 4 + (f2 * 184 | 0) + 112 >> 2] = 0;
                    g[b2 + 4 + (f2 * 184 | 0) + 120 >> 2] = 0;
                    a[b2 + 4 + (f2 * 184 | 0) + 116 >> 0] = 0;
                    g[b2 + 4 + (f2 * 184 | 0) + 124 >> 2] = 0;
                    g[b2 + 4 + (f2 * 184 | 0) + 128 >> 2] = 0;
                    c[b2 + 4 + (f2 * 184 | 0) + 148 >> 2] = 0;
                    f2 = c[b2 + 748 >> 2] | 0;
                  }
                  f2 = f2 + -1 | 0;
                  c[b2 + 748 >> 2] = f2;
                } else
                  f2 = e2;
              } else {
                f2 = e2 + -1 | 0;
                if ((f2 | 0) == (j2 | 0))
                  f2 = e2;
                else {
                  bH(d2 | 0, b2 + 4 + (f2 * 184 | 0) | 0, 184) | 0;
                  c[b2 + 4 + (f2 * 184 | 0) + 112 >> 2] = 0;
                  g[b2 + 4 + (f2 * 184 | 0) + 120 >> 2] = 0;
                  a[b2 + 4 + (f2 * 184 | 0) + 116 >> 0] = 0;
                  g[b2 + 4 + (f2 * 184 | 0) + 124 >> 2] = 0;
                  g[b2 + 4 + (f2 * 184 | 0) + 128 >> 2] = 0;
                  c[b2 + 4 + (f2 * 184 | 0) + 148 >> 2] = 0;
                  f2 = c[b2 + 748 >> 2] | 0;
                }
                f2 = f2 + -1 | 0;
                c[b2 + 748 >> 2] = f2;
              }
              if ((k2 | 0) <= 1)
                break;
              else
                e2 = f2;
            }
            return;
          }
          function Yn(a2, b2, c2, d2, e2, f2, h2, i2, j2, k2, l2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = +c2;
            d2 = +d2;
            e2 = +e2;
            f2 = +f2;
            h2 = +h2;
            i2 = +i2;
            j2 = j2 | 0;
            k2 = k2 | 0;
            l2 = +l2;
            var m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0;
            x2 = +g[a2 >> 2] * f2 + +g[a2 + 16 >> 2] * h2 + +g[a2 + 32 >> 2] * i2;
            v2 = +g[a2 + 4 >> 2] * f2 + +g[a2 + 20 >> 2] * h2 + +g[a2 + 36 >> 2] * i2;
            t2 = +g[a2 + 8 >> 2] * f2 + +g[a2 + 24 >> 2] * h2 + +g[a2 + 40 >> 2] * i2;
            s2 = +g[b2 >> 2] * f2 + +g[b2 + 16 >> 2] * h2 + +g[b2 + 32 >> 2] * i2;
            q2 = +g[b2 + 4 >> 2] * f2 + +g[b2 + 20 >> 2] * h2 + +g[b2 + 36 >> 2] * i2;
            o2 = +g[b2 + 8 >> 2] * f2 + +g[b2 + 24 >> 2] * h2 + +g[b2 + 40 >> 2] * i2;
            w2 = +g[j2 + 80 >> 2];
            u2 = +g[j2 + 84 >> 2];
            p2 = +g[j2 + 88 >> 2];
            r2 = +g[k2 + 80 >> 2];
            m2 = +g[k2 + 84 >> 2];
            n2 = +g[k2 + 88 >> 2];
            p2 = x2 * (x2 < 0 ? -w2 : w2) + v2 * (v2 < 0 ? -u2 : u2) + t2 * (t2 < 0 ? -p2 : p2);
            n2 = s2 * (s2 < 0 ? -r2 : r2) + q2 * (q2 < 0 ? -m2 : m2) + o2 * (o2 < 0 ? -n2 : n2);
            o2 = +g[j2 + 96 >> 2];
            m2 = +g[k2 + 96 >> 2];
            m2 = (p2 > o2 ? p2 : o2) + (n2 > m2 ? n2 : m2);
            return !((c2 * f2 + d2 * h2 + e2 * i2 + m2 < m2 - (c2 * f2 + d2 * h2 + e2 * i2) ? c2 * f2 + d2 * h2 + e2 * i2 + m2 : m2 - (c2 * f2 + d2 * h2 + e2 * i2)) > l2) | 0;
          }
          function Zn(b2, d2, e2, f2, h2, j2, k2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            h2 = +h2;
            j2 = +j2;
            k2 = k2 | 0;
            var l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0, N2 = 0, O2 = 0, P2 = 0, Q2 = 0, R2 = 0, S2 = 0, T2 = 0, U2 = 0, V2 = 0, W2 = 0, X2 = 0, Y2 = 0, Z2 = 0, _2 = 0, $2 = 0, aa2 = 0, ba2 = 0;
            X2 = i;
            i = i + 64 | 0;
            a[X2 + 32 + 16 >> 0] = 1;
            W2 = X2 + 32 + 12 | 0;
            c[W2 >> 2] = 0;
            c[X2 + 32 + 4 >> 2] = 0;
            c[X2 + 32 + 8 >> 2] = 0;
            q2 = c[f2 + 4 >> 2] | 0;
            if ((q2 | 0) > 0) {
              c[5637] = (c[5637] | 0) + 1;
              l2 = qG((q2 << 4 | 3) + 16 | 0) | 0;
              if (!l2)
                o2 = 0;
              else {
                c[(l2 + 4 + 15 & -16) + -4 >> 2] = l2;
                o2 = l2 + 4 + 15 & -16;
              }
              l2 = c[X2 + 32 + 4 >> 2] | 0;
              if ((l2 | 0) > 0) {
                m2 = 0;
                do {
                  V2 = o2 + (m2 << 4) | 0;
                  U2 = (c[W2 >> 2] | 0) + (m2 << 4) | 0;
                  c[V2 >> 2] = c[U2 >> 2];
                  c[V2 + 4 >> 2] = c[U2 + 4 >> 2];
                  c[V2 + 8 >> 2] = c[U2 + 8 >> 2];
                  c[V2 + 12 >> 2] = c[U2 + 12 >> 2];
                  m2 = m2 + 1 | 0;
                } while ((m2 | 0) != (l2 | 0));
              }
              l2 = c[W2 >> 2] | 0;
              if (l2 | 0) {
                if (a[X2 + 32 + 16 >> 0] | 0) {
                  c[5638] = (c[5638] | 0) + 1;
                  rG(c[l2 + -4 >> 2] | 0);
                }
                c[W2 >> 2] = 0;
              }
              a[X2 + 32 + 16 >> 0] = 1;
              c[W2 >> 2] = o2;
              c[X2 + 32 + 8 >> 2] = q2;
            }
            l2 = c[d2 + 28 >> 2] | 0;
            if ((l2 | 0) > 0) {
              U2 = c[d2 + 36 >> 2] | 0;
              A2 = +g[e2 >> 2];
              B2 = +g[e2 + 4 >> 2];
              E2 = +g[e2 + 8 >> 2];
              F2 = +g[e2 + 16 >> 2];
              G2 = +g[e2 + 20 >> 2];
              s2 = +g[e2 + 24 >> 2];
              r2 = +g[e2 + 32 >> 2];
              p2 = +g[e2 + 36 >> 2];
              n2 = +g[e2 + 40 >> 2];
              t2 = +g[b2 >> 2];
              u2 = +g[b2 + 4 >> 2];
              v2 = +g[b2 + 8 >> 2];
              V2 = -1;
              z2 = 34028234663852886e22;
              o2 = 0;
              while (1) {
                w2 = +g[U2 + (o2 * 36 | 0) + 20 >> 2];
                x2 = +g[U2 + (o2 * 36 | 0) + 24 >> 2];
                y2 = +g[U2 + (o2 * 36 | 0) + 28 >> 2];
                m2 = (w2 * A2 + x2 * B2 + y2 * E2) * t2 + (w2 * F2 + x2 * G2 + y2 * s2) * u2 + (w2 * r2 + x2 * p2 + y2 * n2) * v2 < z2;
                V2 = m2 ? o2 : V2;
                o2 = o2 + 1 | 0;
                if ((o2 | 0) == (l2 | 0))
                  break;
                else
                  z2 = m2 ? (w2 * A2 + x2 * B2 + y2 * E2) * t2 + (w2 * F2 + x2 * G2 + y2 * s2) * u2 + (w2 * r2 + x2 * p2 + y2 * n2) * v2 : z2;
              }
              if ((V2 | 0) >= 0) {
                L2 = c[U2 + (V2 * 36 | 0) + 4 >> 2] | 0;
                if ((L2 | 0) > 0) {
                  M2 = U2 + (V2 * 36 | 0) + 12 | 0;
                  N2 = U2 + (V2 * 36 | 0) + 20 | 0;
                  O2 = U2 + (V2 * 36 | 0) + 24 | 0;
                  P2 = U2 + (V2 * 36 | 0) + 28 | 0;
                  t2 = A2;
                  x2 = B2;
                  w2 = E2;
                  v2 = F2;
                  u2 = G2;
                  K2 = 0;
                  J2 = f2;
                  f2 = X2 + 32 | 0;
                  while (1) {
                    I2 = c[M2 >> 2] | 0;
                    l2 = c[I2 + (K2 << 2) >> 2] | 0;
                    H2 = c[d2 + 16 >> 2] | 0;
                    K2 = K2 + 1 | 0;
                    I2 = c[I2 + (((K2 | 0) == (L2 | 0) ? 0 : K2) << 2) >> 2] | 0;
                    Z2 = +g[H2 + (l2 << 4) >> 2];
                    _2 = Z2 - +g[H2 + (I2 << 4) >> 2];
                    Y2 = +g[H2 + (l2 << 4) + 4 >> 2];
                    $2 = Y2 - +g[H2 + (I2 << 4) + 4 >> 2];
                    y2 = +g[H2 + (l2 << 4) + 8 >> 2];
                    B2 = y2 - +g[H2 + (I2 << 4) + 8 >> 2];
                    z2 = _2 * t2 + $2 * x2 + B2 * w2;
                    A2 = _2 * v2 + $2 * u2 + B2 * s2;
                    B2 = _2 * r2 + $2 * p2 + B2 * n2;
                    $2 = +g[N2 >> 2];
                    _2 = +g[O2 >> 2];
                    G2 = +g[P2 >> 2];
                    E2 = t2 * $2 + x2 * _2 + w2 * G2;
                    F2 = v2 * $2 + u2 * _2 + s2 * G2;
                    G2 = r2 * $2 + p2 * _2 + n2 * G2;
                    u2 = (Z2 * t2 + Y2 * x2 + y2 * w2 + +g[e2 + 48 >> 2]) * -(A2 * G2 - B2 * F2) + (Z2 * v2 + Y2 * u2 + y2 * s2 + +g[e2 + 52 >> 2]) * -(B2 * E2 - z2 * G2) + (Z2 * r2 + Y2 * p2 + y2 * n2 + +g[e2 + 56 >> 2]) * -(z2 * F2 - A2 * E2);
                    I2 = J2;
                    H2 = f2;
                    l2 = c[I2 + 4 >> 2] | 0;
                    if ((l2 | 0) >= 2) {
                      o2 = c[I2 + 12 >> 2] | 0;
                      p2 = +g[o2 + (l2 + -1 << 4) >> 2];
                      r2 = +g[o2 + (l2 + -1 << 4) + 4 >> 2];
                      s2 = +g[o2 + (l2 + -1 << 4) + 8 >> 2];
                      n2 = p2 * -(A2 * G2 - B2 * F2) + r2 * -(B2 * E2 - z2 * G2) + s2 * -(z2 * F2 - A2 * E2) - u2;
                      D2 = 0;
                      while (1) {
                        v2 = +g[o2 + (D2 << 4) >> 2];
                        w2 = +g[o2 + (D2 << 4) + 4 >> 2];
                        x2 = +g[o2 + (D2 << 4) + 8 >> 2];
                        C2 = c[o2 + (D2 << 4) + 12 >> 2] | 0;
                        y2 = v2 * -(A2 * G2 - B2 * F2) + w2 * -(B2 * E2 - z2 * G2) + x2 * -(z2 * F2 - A2 * E2) - u2;
                        do
                          if (n2 < 0)
                            if (y2 < 0) {
                              m2 = c[H2 + 4 >> 2] | 0;
                              if ((m2 | 0) == (c[H2 + 8 >> 2] | 0) ? (Q2 = m2 | 0 ? m2 << 1 : 1, (m2 | 0) < (Q2 | 0)) : 0) {
                                if (!Q2)
                                  q2 = 0;
                                else {
                                  c[5637] = (c[5637] | 0) + 1;
                                  m2 = qG((Q2 << 4 | 3) + 16 | 0) | 0;
                                  if (!m2)
                                    m2 = 0;
                                  else {
                                    c[(m2 + 4 + 15 & -16) + -4 >> 2] = m2;
                                    m2 = m2 + 4 + 15 & -16;
                                  }
                                  q2 = m2;
                                  m2 = c[H2 + 4 >> 2] | 0;
                                }
                                if ((m2 | 0) > 0) {
                                  o2 = 0;
                                  do {
                                    aa2 = q2 + (o2 << 4) | 0;
                                    ba2 = (c[H2 + 12 >> 2] | 0) + (o2 << 4) | 0;
                                    c[aa2 >> 2] = c[ba2 >> 2];
                                    c[aa2 + 4 >> 2] = c[ba2 + 4 >> 2];
                                    c[aa2 + 8 >> 2] = c[ba2 + 8 >> 2];
                                    c[aa2 + 12 >> 2] = c[ba2 + 12 >> 2];
                                    o2 = o2 + 1 | 0;
                                  } while ((o2 | 0) != (m2 | 0));
                                }
                                m2 = c[H2 + 12 >> 2] | 0;
                                if (m2 | 0) {
                                  if (a[H2 + 16 >> 0] | 0) {
                                    c[5638] = (c[5638] | 0) + 1;
                                    rG(c[m2 + -4 >> 2] | 0);
                                  }
                                  c[H2 + 12 >> 2] = 0;
                                }
                                a[H2 + 16 >> 0] = 1;
                                c[H2 + 12 >> 2] = q2;
                                c[H2 + 8 >> 2] = Q2;
                                m2 = c[H2 + 4 >> 2] | 0;
                              }
                              ba2 = c[H2 + 12 >> 2] | 0;
                              g[ba2 + (m2 << 4) >> 2] = v2;
                              g[ba2 + (m2 << 4) + 4 >> 2] = w2;
                              g[ba2 + (m2 << 4) + 8 >> 2] = x2;
                              c[ba2 + (m2 << 4) + 12 >> 2] = C2;
                              c[H2 + 4 >> 2] = (c[H2 + 4 >> 2] | 0) + 1;
                              break;
                            } else {
                              n2 = n2 / (n2 - y2);
                              t2 = p2 + (v2 - p2) * n2;
                              p2 = r2 + (w2 - r2) * n2;
                              n2 = s2 + (x2 - s2) * n2;
                              m2 = c[H2 + 4 >> 2] | 0;
                              if ((m2 | 0) == (c[H2 + 8 >> 2] | 0) ? (R2 = m2 | 0 ? m2 << 1 : 1, (m2 | 0) < (R2 | 0)) : 0) {
                                if (!R2)
                                  q2 = 0;
                                else {
                                  c[5637] = (c[5637] | 0) + 1;
                                  m2 = qG((R2 << 4 | 3) + 16 | 0) | 0;
                                  if (!m2)
                                    m2 = 0;
                                  else {
                                    c[(m2 + 4 + 15 & -16) + -4 >> 2] = m2;
                                    m2 = m2 + 4 + 15 & -16;
                                  }
                                  q2 = m2;
                                  m2 = c[H2 + 4 >> 2] | 0;
                                }
                                if ((m2 | 0) > 0) {
                                  o2 = 0;
                                  do {
                                    ba2 = q2 + (o2 << 4) | 0;
                                    aa2 = (c[H2 + 12 >> 2] | 0) + (o2 << 4) | 0;
                                    c[ba2 >> 2] = c[aa2 >> 2];
                                    c[ba2 + 4 >> 2] = c[aa2 + 4 >> 2];
                                    c[ba2 + 8 >> 2] = c[aa2 + 8 >> 2];
                                    c[ba2 + 12 >> 2] = c[aa2 + 12 >> 2];
                                    o2 = o2 + 1 | 0;
                                  } while ((o2 | 0) != (m2 | 0));
                                }
                                m2 = c[H2 + 12 >> 2] | 0;
                                if (m2 | 0) {
                                  if (a[H2 + 16 >> 0] | 0) {
                                    c[5638] = (c[5638] | 0) + 1;
                                    rG(c[m2 + -4 >> 2] | 0);
                                  }
                                  c[H2 + 12 >> 2] = 0;
                                }
                                a[H2 + 16 >> 0] = 1;
                                c[H2 + 12 >> 2] = q2;
                                c[H2 + 8 >> 2] = R2;
                                m2 = c[H2 + 4 >> 2] | 0;
                              }
                              ba2 = c[H2 + 12 >> 2] | 0;
                              g[ba2 + (m2 << 4) >> 2] = t2;
                              g[ba2 + (m2 << 4) + 4 >> 2] = p2;
                              g[ba2 + (m2 << 4) + 8 >> 2] = n2;
                              g[ba2 + (m2 << 4) + 12 >> 2] = 0;
                              c[H2 + 4 >> 2] = (c[H2 + 4 >> 2] | 0) + 1;
                              break;
                            }
                          else if (y2 < 0) {
                            n2 = n2 / (n2 - y2);
                            t2 = p2 + (v2 - p2) * n2;
                            p2 = r2 + (w2 - r2) * n2;
                            n2 = s2 + (x2 - s2) * n2;
                            m2 = c[H2 + 4 >> 2] | 0;
                            if ((m2 | 0) == (c[H2 + 8 >> 2] | 0) ? (S2 = m2 | 0 ? m2 << 1 : 1, (m2 | 0) < (S2 | 0)) : 0) {
                              if (!S2)
                                q2 = 0;
                              else {
                                c[5637] = (c[5637] | 0) + 1;
                                m2 = qG((S2 << 4 | 3) + 16 | 0) | 0;
                                if (!m2)
                                  m2 = 0;
                                else {
                                  c[(m2 + 4 + 15 & -16) + -4 >> 2] = m2;
                                  m2 = m2 + 4 + 15 & -16;
                                }
                                q2 = m2;
                                m2 = c[H2 + 4 >> 2] | 0;
                              }
                              if ((m2 | 0) > 0) {
                                o2 = 0;
                                do {
                                  ba2 = q2 + (o2 << 4) | 0;
                                  aa2 = (c[H2 + 12 >> 2] | 0) + (o2 << 4) | 0;
                                  c[ba2 >> 2] = c[aa2 >> 2];
                                  c[ba2 + 4 >> 2] = c[aa2 + 4 >> 2];
                                  c[ba2 + 8 >> 2] = c[aa2 + 8 >> 2];
                                  c[ba2 + 12 >> 2] = c[aa2 + 12 >> 2];
                                  o2 = o2 + 1 | 0;
                                } while ((o2 | 0) != (m2 | 0));
                              }
                              m2 = c[H2 + 12 >> 2] | 0;
                              if (m2 | 0) {
                                if (a[H2 + 16 >> 0] | 0) {
                                  c[5638] = (c[5638] | 0) + 1;
                                  rG(c[m2 + -4 >> 2] | 0);
                                }
                                c[H2 + 12 >> 2] = 0;
                              }
                              a[H2 + 16 >> 0] = 1;
                              c[H2 + 12 >> 2] = q2;
                              c[H2 + 8 >> 2] = S2;
                              m2 = c[H2 + 4 >> 2] | 0;
                            }
                            ba2 = c[H2 + 12 >> 2] | 0;
                            g[ba2 + (m2 << 4) >> 2] = t2;
                            g[ba2 + (m2 << 4) + 4 >> 2] = p2;
                            g[ba2 + (m2 << 4) + 8 >> 2] = n2;
                            g[ba2 + (m2 << 4) + 12 >> 2] = 0;
                            m2 = (c[H2 + 4 >> 2] | 0) + 1 | 0;
                            c[H2 + 4 >> 2] = m2;
                            if ((m2 | 0) == (c[H2 + 8 >> 2] | 0) ? (T2 = m2 | 0 ? m2 << 1 : 1, (m2 | 0) < (T2 | 0)) : 0) {
                              if (!T2)
                                q2 = 0;
                              else {
                                c[5637] = (c[5637] | 0) + 1;
                                m2 = qG((T2 << 4 | 3) + 16 | 0) | 0;
                                if (!m2)
                                  m2 = 0;
                                else {
                                  c[(m2 + 4 + 15 & -16) + -4 >> 2] = m2;
                                  m2 = m2 + 4 + 15 & -16;
                                }
                                q2 = m2;
                                m2 = c[H2 + 4 >> 2] | 0;
                              }
                              if ((m2 | 0) > 0) {
                                o2 = 0;
                                do {
                                  ba2 = q2 + (o2 << 4) | 0;
                                  aa2 = (c[H2 + 12 >> 2] | 0) + (o2 << 4) | 0;
                                  c[ba2 >> 2] = c[aa2 >> 2];
                                  c[ba2 + 4 >> 2] = c[aa2 + 4 >> 2];
                                  c[ba2 + 8 >> 2] = c[aa2 + 8 >> 2];
                                  c[ba2 + 12 >> 2] = c[aa2 + 12 >> 2];
                                  o2 = o2 + 1 | 0;
                                } while ((o2 | 0) != (m2 | 0));
                              }
                              m2 = c[H2 + 12 >> 2] | 0;
                              if (m2 | 0) {
                                if (a[H2 + 16 >> 0] | 0) {
                                  c[5638] = (c[5638] | 0) + 1;
                                  rG(c[m2 + -4 >> 2] | 0);
                                }
                                c[H2 + 12 >> 2] = 0;
                              }
                              a[H2 + 16 >> 0] = 1;
                              c[H2 + 12 >> 2] = q2;
                              c[H2 + 8 >> 2] = T2;
                              m2 = c[H2 + 4 >> 2] | 0;
                            }
                            ba2 = c[H2 + 12 >> 2] | 0;
                            g[ba2 + (m2 << 4) >> 2] = v2;
                            g[ba2 + (m2 << 4) + 4 >> 2] = w2;
                            g[ba2 + (m2 << 4) + 8 >> 2] = x2;
                            c[ba2 + (m2 << 4) + 12 >> 2] = C2;
                            c[H2 + 4 >> 2] = (c[H2 + 4 >> 2] | 0) + 1;
                          }
                        while (0);
                        m2 = D2 + 1 | 0;
                        if ((m2 | 0) == (l2 | 0))
                          break;
                        o2 = c[I2 + 12 >> 2] | 0;
                        n2 = y2;
                        p2 = v2;
                        s2 = x2;
                        r2 = w2;
                        D2 = m2;
                      }
                      l2 = c[I2 + 4 >> 2] | 0;
                    }
                    if ((l2 | 0) < 0) {
                      if ((c[I2 + 8 >> 2] | 0) < 0) {
                        m2 = c[I2 + 12 >> 2] | 0;
                        if (m2 | 0) {
                          if (a[I2 + 16 >> 0] | 0) {
                            c[5638] = (c[5638] | 0) + 1;
                            rG(c[m2 + -4 >> 2] | 0);
                          }
                          c[I2 + 12 >> 2] = 0;
                        }
                        a[I2 + 16 >> 0] = 1;
                        c[I2 + 12 >> 2] = 0;
                        c[I2 + 8 >> 2] = 0;
                      }
                      do {
                        ba2 = (c[I2 + 12 >> 2] | 0) + (l2 << 4) | 0;
                        c[ba2 >> 2] = c[X2 >> 2];
                        c[ba2 + 4 >> 2] = c[X2 + 4 >> 2];
                        c[ba2 + 8 >> 2] = c[X2 + 8 >> 2];
                        c[ba2 + 12 >> 2] = c[X2 + 12 >> 2];
                        l2 = l2 + 1 | 0;
                      } while ((l2 | 0) != 0);
                    }
                    c[I2 + 4 >> 2] = 0;
                    t2 = +g[e2 >> 2];
                    x2 = +g[e2 + 4 >> 2];
                    w2 = +g[e2 + 8 >> 2];
                    v2 = +g[e2 + 16 >> 2];
                    u2 = +g[e2 + 20 >> 2];
                    s2 = +g[e2 + 24 >> 2];
                    r2 = +g[e2 + 32 >> 2];
                    p2 = +g[e2 + 36 >> 2];
                    n2 = +g[e2 + 40 >> 2];
                    if ((K2 | 0) >= (L2 | 0)) {
                      o2 = N2;
                      m2 = O2;
                      l2 = P2;
                      C2 = e2 + 48 | 0;
                      D2 = e2 + 52 | 0;
                      q2 = e2 + 56 | 0;
                      break;
                    } else {
                      ba2 = f2;
                      f2 = J2;
                      J2 = ba2;
                    }
                  }
                } else {
                  o2 = U2 + (V2 * 36 | 0) + 20 | 0;
                  m2 = U2 + (V2 * 36 | 0) + 24 | 0;
                  l2 = U2 + (V2 * 36 | 0) + 28 | 0;
                  C2 = e2 + 48 | 0;
                  D2 = e2 + 52 | 0;
                  q2 = e2 + 56 | 0;
                  t2 = A2;
                  x2 = B2;
                  w2 = E2;
                  v2 = F2;
                  u2 = G2;
                }
                Z2 = +g[o2 >> 2];
                _2 = +g[m2 >> 2];
                $2 = +g[l2 >> 2];
                t2 = Z2 * t2 + _2 * x2 + $2 * w2;
                s2 = Z2 * v2 + _2 * u2 + $2 * s2;
                r2 = Z2 * r2 + _2 * p2 + $2 * n2;
                p2 = +g[U2 + (V2 * 36 | 0) + 32 >> 2] - (t2 * +g[C2 >> 2] + s2 * +g[D2 >> 2] + r2 * +g[q2 >> 2]);
                l2 = c[f2 + 4 >> 2] | 0;
                if ((l2 | 0) > 0) {
                  o2 = 0;
                  do {
                    m2 = c[f2 + 12 >> 2] | 0;
                    n2 = p2 + (t2 * +g[m2 + (o2 << 4) >> 2] + s2 * +g[m2 + (o2 << 4) + 4 >> 2] + r2 * +g[m2 + (o2 << 4) + 8 >> 2]);
                    n2 = n2 <= h2 ? h2 : n2;
                    if (n2 <= j2) {
                      l2 = m2 + (o2 << 4) | 0;
                      c[X2 + 16 >> 2] = c[l2 >> 2];
                      c[X2 + 16 + 4 >> 2] = c[l2 + 4 >> 2];
                      c[X2 + 16 + 8 >> 2] = c[l2 + 8 >> 2];
                      c[X2 + 16 + 12 >> 2] = c[l2 + 12 >> 2];
                      Yb[c[(c[k2 >> 2] | 0) + 16 >> 2] & 15](k2, b2, X2 + 16 | 0, n2);
                      l2 = c[f2 + 4 >> 2] | 0;
                    }
                    o2 = o2 + 1 | 0;
                  } while ((o2 | 0) < (l2 | 0));
                }
              }
            }
            l2 = c[W2 >> 2] | 0;
            if (!l2) {
              i = X2;
              return;
            }
            if (a[X2 + 32 + 16 >> 0] | 0) {
              c[5638] = (c[5638] | 0) + 1;
              rG(c[l2 + -4 >> 2] | 0);
            }
            c[W2 >> 2] = 0;
            i = X2;
            return;
          }
          function _n(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0;
            H2 = i;
            i = i + 32 | 0;
            k2 = +g[b2 + 16 >> 2];
            f2 = +g[b2 >> 2];
            l2 = +g[b2 + 20 >> 2];
            h2 = +g[b2 + 4 >> 2];
            n2 = +g[b2 + 24 >> 2];
            j2 = +g[b2 + 8 >> 2];
            r2 = +g[b2 + 32 >> 2];
            v2 = +g[b2 + 36 >> 2];
            w2 = +g[b2 + 40 >> 2];
            B2 = (l2 - h2) * (w2 - j2) - (n2 - j2) * (v2 - h2);
            C2 = (n2 - j2) * (r2 - f2) - (k2 - f2) * (w2 - j2);
            D2 = (k2 - f2) * (v2 - h2) - (l2 - h2) * (r2 - f2);
            g[H2 + 16 >> 2] = B2;
            g[H2 + 16 + 4 >> 2] = C2;
            g[H2 + 16 + 8 >> 2] = D2;
            g[H2 + 16 + 12 >> 2] = 0;
            o2 = +g[a2 + 4 >> 2];
            s2 = +g[a2 + 8 >> 2];
            x2 = +g[a2 + 12 >> 2];
            E2 = B2 * o2 + C2 * s2 + D2 * x2 - (f2 * B2 + h2 * C2 + j2 * D2);
            p2 = +g[a2 + 20 >> 2];
            t2 = +g[a2 + 24 >> 2];
            y2 = +g[a2 + 28 >> 2];
            if (E2 * (B2 * p2 + C2 * t2 + D2 * y2 - (f2 * B2 + h2 * C2 + j2 * D2)) >= 0) {
              i = H2;
              return;
            }
            F2 = c[a2 + 36 >> 2] | 0;
            if (E2 <= 0 & (F2 & 1 | 0) != 0) {
              i = H2;
              return;
            }
            G2 = E2 / (E2 - (B2 * p2 + C2 * t2 + D2 * y2 - (f2 * B2 + h2 * C2 + j2 * D2)));
            if (!(G2 < +g[a2 + 40 >> 2])) {
              i = H2;
              return;
            }
            A2 = (B2 * B2 + C2 * C2 + D2 * D2) * -9999999747378752e-20;
            z2 = f2 - (p2 * G2 + o2 * (1 - G2));
            u2 = h2 - (t2 * G2 + s2 * (1 - G2));
            q2 = j2 - (y2 * G2 + x2 * (1 - G2));
            m2 = k2 - (p2 * G2 + o2 * (1 - G2));
            l2 = l2 - (t2 * G2 + s2 * (1 - G2));
            k2 = n2 - (y2 * G2 + x2 * (1 - G2));
            if (!(D2 * (z2 * l2 - u2 * m2) + (B2 * (u2 * k2 - q2 * l2) + C2 * (q2 * m2 - z2 * k2)) >= A2)) {
              i = H2;
              return;
            }
            j2 = r2 - (p2 * G2 + o2 * (1 - G2));
            h2 = v2 - (t2 * G2 + s2 * (1 - G2));
            f2 = w2 - (y2 * G2 + x2 * (1 - G2));
            if (!(D2 * (m2 * h2 - l2 * j2) + (B2 * (l2 * f2 - k2 * h2) + C2 * (k2 * j2 - m2 * f2)) >= A2)) {
              i = H2;
              return;
            }
            if (!(D2 * (u2 * j2 - z2 * h2) + (B2 * (q2 * h2 - u2 * f2) + C2 * (z2 * f2 - q2 * j2)) >= A2)) {
              i = H2;
              return;
            }
            f2 = 1 / +O(+(B2 * B2 + C2 * C2 + D2 * D2));
            g[H2 + 16 >> 2] = B2 * f2;
            g[H2 + 16 + 4 >> 2] = C2 * f2;
            g[H2 + 16 + 8 >> 2] = D2 * f2;
            b2 = c[(c[a2 >> 2] | 0) + 12 >> 2] | 0;
            if (E2 <= 0 & (F2 & 2 | 0) == 0) {
              g[H2 >> 2] = -(B2 * f2);
              g[H2 + 4 >> 2] = -(C2 * f2);
              g[H2 + 8 >> 2] = -(D2 * f2);
              g[H2 + 12 >> 2] = 0;
              g[a2 + 40 >> 2] = +Vb[b2 & 3](a2, H2, G2, d2, e2);
              i = H2;
              return;
            } else {
              g[a2 + 40 >> 2] = +Vb[b2 & 3](a2, H2 + 16 | 0, G2, d2, e2);
              i = H2;
              return;
            }
          }
          function $n(a2) {
            a2 = a2 | 0;
            rG(a2);
            return;
          }
          function ao(b2, d2, e2, f2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            var h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0;
            m2 = i;
            i = i + 688 | 0;
            c[m2 + 568 + 8 >> 2] = 0;
            c[m2 + 568 + 12 >> 2] = -1;
            c[m2 + 568 + 16 >> 2] = 1065353216;
            c[m2 + 568 + 20 >> 2] = 1065353216;
            c[m2 + 568 + 24 >> 2] = 1065353216;
            g[m2 + 568 + 28 >> 2] = 0;
            c[m2 + 568 + 56 >> 2] = 0;
            c[m2 + 568 >> 2] = 3768;
            c[m2 + 568 + 4 >> 2] = 1;
            c[m2 + 568 + 60 >> 2] = c[d2 >> 2];
            c[m2 + 568 + 60 + 4 >> 2] = c[d2 + 4 >> 2];
            c[m2 + 568 + 60 + 8 >> 2] = c[d2 + 8 >> 2];
            c[m2 + 568 + 60 + 12 >> 2] = c[d2 + 12 >> 2];
            c[m2 + 568 + 76 >> 2] = c[d2 + 16 >> 2];
            c[m2 + 568 + 76 + 4 >> 2] = c[d2 + 16 + 4 >> 2];
            c[m2 + 568 + 76 + 8 >> 2] = c[d2 + 16 + 8 >> 2];
            c[m2 + 568 + 76 + 12 >> 2] = c[d2 + 16 + 12 >> 2];
            c[m2 + 568 + 92 >> 2] = c[d2 + 32 >> 2];
            c[m2 + 568 + 92 + 4 >> 2] = c[d2 + 32 + 4 >> 2];
            c[m2 + 568 + 92 + 8 >> 2] = c[d2 + 32 + 8 >> 2];
            c[m2 + 568 + 92 + 12 >> 2] = c[d2 + 32 + 12 >> 2];
            c[m2 + 568 + 48 >> 2] = c[b2 + 204 >> 2];
            g[m2 + 208 + 308 >> 2] = 9999999747378752e-20;
            a[m2 + 208 + 332 >> 0] = 0;
            c[m2 + 200 >> 2] = 6908;
            d2 = c[b2 + 4 >> 2] | 0;
            c[m2 + 176 >> 2] = 6816;
            c[m2 + 176 + 4 >> 2] = m2 + 208;
            c[m2 + 176 + 8 >> 2] = m2 + 200;
            c[m2 + 176 + 12 >> 2] = d2;
            c[m2 + 176 + 16 >> 2] = m2 + 568;
            c[m2 + 176 + 20 >> 2] = 0;
            c[m2 >> 2] = 3316;
            c[m2 + 168 >> 2] = 0;
            g[m2 + 164 >> 2] = 1;
            c[m2 + 172 >> 2] = c[b2 + 208 >> 2];
            if ((rn(m2 + 176 | 0, b2 + 8 | 0, b2 + 72 | 0, b2 + 136 | 0, b2 + 136 | 0, m2) | 0 ? (h2 = +g[m2 + 132 >> 2], j2 = +g[m2 + 136 >> 2], k2 = +g[m2 + 140 >> 2], h2 * h2 + j2 * j2 + k2 * k2 > 9999999747378752e-20) : 0) ? (l2 = +g[m2 + 164 >> 2], l2 < +g[b2 + 200 >> 2]) : 0) {
              n2 = 1 / +O(+(h2 * h2 + j2 * j2 + k2 * k2));
              g[m2 + 132 >> 2] = h2 * n2;
              g[m2 + 136 >> 2] = j2 * n2;
              g[m2 + 140 >> 2] = k2 * n2;
              +Jb[c[(c[b2 >> 2] | 0) + 12 >> 2] & 3](b2, m2 + 132 | 0, m2 + 148 | 0, l2, e2, f2);
            }
            c[m2 + 568 >> 2] = 6248;
            e2 = c[m2 + 568 + 56 >> 2] | 0;
            if (!e2) {
              i = m2;
              return;
            }
            rb[c[c[e2 >> 2] >> 2] & 255](e2);
            e2 = c[m2 + 568 + 56 >> 2] | 0;
            if (!e2) {
              i = m2;
              return;
            }
            c[5638] = (c[5638] | 0) + 1;
            rG(c[e2 + -4 >> 2] | 0);
            i = m2;
            return;
          }
          function bo(a2) {
            a2 = a2 | 0;
            rG(a2);
            return;
          }
          function co(b2, d2, e2, f2, h2, j2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            h2 = h2 | 0;
            j2 = j2 | 0;
            var l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0, N2 = 0, P2 = 0, Q2 = 0, R2 = 0, S2 = 0, T2 = 0, U2 = 0, V2 = 0, W2 = 0, X2 = 0, Y2 = 0, Z2 = 0, _2 = 0, $2 = 0, aa2 = 0, ba2 = 0, ca2 = 0, da2 = 0, ea2 = 0, fa2 = 0, ga2 = 0, ha2 = 0;
            ga2 = i;
            i = i + 128 | 0;
            K2 = c[b2 + 4 >> 2] | 0;
            a[K2 + 312 >> 0] = 0;
            c[K2 >> 2] = 0;
            a[K2 + 356 >> 0] = 1;
            c[K2 + 292 >> 2] = 1566444395;
            c[K2 + 296 >> 2] = 1566444395;
            c[K2 + 300 >> 2] = 1566444395;
            g[K2 + 304 >> 2] = 0;
            c[K2 + 336 >> 2] = 0;
            c[K2 + 336 + 4 >> 2] = 0;
            c[K2 + 336 + 8 >> 2] = 0;
            c[K2 + 336 + 12 >> 2] = 0;
            a[K2 + 336 + 16 >> 0] = 0;
            a[K2 + 332 >> 0] = a[K2 + 332 >> 0] & -16;
            m2 = +g[d2 + 48 >> 2];
            n2 = +g[d2 + 52 >> 2];
            o2 = +g[d2 + 56 >> 2];
            p2 = +g[f2 + 48 >> 2];
            t2 = +g[f2 + 52 >> 2];
            u2 = +g[f2 + 56 >> 2];
            L2 = +g[d2 >> 2];
            M2 = +g[d2 + 4 >> 2];
            N2 = +g[d2 + 8 >> 2];
            P2 = +g[d2 + 16 >> 2];
            Q2 = +g[d2 + 20 >> 2];
            R2 = +g[d2 + 24 >> 2];
            S2 = +g[d2 + 32 >> 2];
            T2 = +g[d2 + 36 >> 2];
            U2 = +g[d2 + 40 >> 2];
            V2 = +g[f2 >> 2];
            W2 = +g[f2 + 4 >> 2];
            X2 = +g[f2 + 8 >> 2];
            Y2 = +g[f2 + 16 >> 2];
            Z2 = +g[f2 + 20 >> 2];
            _2 = +g[f2 + 24 >> 2];
            $2 = +g[f2 + 32 >> 2];
            aa2 = +g[f2 + 36 >> 2];
            ba2 = +g[f2 + 40 >> 2];
            da2 = +g[e2 + 48 >> 2] - m2 - (+g[h2 + 48 >> 2] - p2);
            ea2 = +g[e2 + 52 >> 2] - n2 - (+g[h2 + 52 >> 2] - t2);
            fa2 = +g[e2 + 56 >> 2] - o2 - (+g[h2 + 56 >> 2] - u2);
            K2 = c[b2 + 8 >> 2] | 0;
            C2 = c[(c[K2 >> 2] | 0) + 64 >> 2] | 0;
            g[ga2 + 96 >> 2] = L2 * -da2 + P2 * -ea2 + S2 * -fa2;
            g[ga2 + 96 + 4 >> 2] = M2 * -da2 + Q2 * -ea2 + T2 * -fa2;
            g[ga2 + 96 + 8 >> 2] = N2 * -da2 + R2 * -ea2 + U2 * -fa2;
            g[ga2 + 96 + 12 >> 2] = 0;
            Zb[C2 & 127](ga2 + 112 | 0, K2, ga2 + 96 | 0);
            I2 = +g[ga2 + 112 >> 2];
            J2 = +g[ga2 + 112 + 4 >> 2];
            H2 = +g[ga2 + 112 + 8 >> 2];
            v2 = I2 * +g[d2 >> 2] + J2 * +g[d2 + 4 >> 2] + H2 * +g[d2 + 8 >> 2] + +g[d2 + 48 >> 2];
            A2 = I2 * +g[d2 + 16 >> 2] + J2 * +g[d2 + 20 >> 2] + H2 * +g[d2 + 24 >> 2] + +g[d2 + 52 >> 2];
            H2 = I2 * +g[d2 + 32 >> 2] + J2 * +g[d2 + 36 >> 2] + H2 * +g[d2 + 40 >> 2] + +g[d2 + 56 >> 2];
            K2 = c[b2 + 12 >> 2] | 0;
            C2 = c[(c[K2 >> 2] | 0) + 64 >> 2] | 0;
            J2 = da2 * +g[f2 + 4 >> 2] + ea2 * +g[f2 + 20 >> 2] + fa2 * +g[f2 + 36 >> 2];
            I2 = da2 * +g[f2 + 8 >> 2] + ea2 * +g[f2 + 24 >> 2] + fa2 * +g[f2 + 40 >> 2];
            g[ga2 + 64 >> 2] = da2 * +g[f2 >> 2] + ea2 * +g[f2 + 16 >> 2] + fa2 * +g[f2 + 32 >> 2];
            g[ga2 + 64 + 4 >> 2] = J2;
            g[ga2 + 64 + 8 >> 2] = I2;
            g[ga2 + 64 + 12 >> 2] = 0;
            Zb[C2 & 127](ga2 + 80 | 0, K2, ga2 + 64 | 0);
            I2 = +g[ga2 + 80 >> 2];
            J2 = +g[ga2 + 80 + 4 >> 2];
            x2 = +g[ga2 + 80 + 8 >> 2];
            v2 = v2 - (I2 * +g[f2 >> 2] + J2 * +g[f2 + 4 >> 2] + x2 * +g[f2 + 8 >> 2] + +g[f2 + 48 >> 2]);
            A2 = A2 - (I2 * +g[f2 + 16 >> 2] + J2 * +g[f2 + 20 >> 2] + x2 * +g[f2 + 24 >> 2] + +g[f2 + 52 >> 2]);
            x2 = H2 - (I2 * +g[f2 + 32 >> 2] + J2 * +g[f2 + 36 >> 2] + x2 * +g[f2 + 40 >> 2] + +g[f2 + 56 >> 2]);
            a:
              do
                if (v2 * v2 + A2 * A2 + x2 * x2 > 9999999747378752e-20) {
                  J2 = m2;
                  m2 = 0;
                  K2 = 32;
                  r2 = 0;
                  s2 = 0;
                  q2 = 0;
                  l2 = 0;
                  z2 = 0;
                  while (1) {
                    if (!K2)
                      break a;
                    K2 = K2 + -1 | 0;
                    w2 = c[b2 + 8 >> 2] | 0;
                    y2 = c[(c[w2 >> 2] | 0) + 64 >> 2] | 0;
                    F2 = -v2;
                    ha2 = -A2;
                    B2 = -x2;
                    g[ga2 + 32 >> 2] = L2 * F2 + P2 * ha2 + S2 * B2;
                    g[ga2 + 32 + 4 >> 2] = M2 * F2 + Q2 * ha2 + T2 * B2;
                    g[ga2 + 32 + 8 >> 2] = N2 * F2 + R2 * ha2 + U2 * B2;
                    g[ga2 + 32 + 12 >> 2] = 0;
                    Zb[y2 & 127](ga2 + 48 | 0, w2, ga2 + 32 | 0);
                    B2 = +g[ga2 + 48 >> 2];
                    ha2 = +g[ga2 + 48 + 4 >> 2];
                    F2 = +g[ga2 + 48 + 8 >> 2];
                    D2 = J2 + (L2 * B2 + M2 * ha2 + N2 * F2);
                    E2 = n2 + (P2 * B2 + Q2 * ha2 + R2 * F2);
                    F2 = o2 + (S2 * B2 + T2 * ha2 + U2 * F2);
                    w2 = c[b2 + 12 >> 2] | 0;
                    y2 = c[(c[w2 >> 2] | 0) + 64 >> 2] | 0;
                    g[ga2 >> 2] = V2 * v2 + Y2 * A2 + $2 * x2;
                    g[ga2 + 4 >> 2] = W2 * v2 + Z2 * A2 + aa2 * x2;
                    g[ga2 + 8 >> 2] = X2 * v2 + _2 * A2 + ba2 * x2;
                    g[ga2 + 12 >> 2] = 0;
                    Zb[y2 & 127](ga2 + 16 | 0, w2, ga2);
                    ha2 = +g[ga2 + 16 >> 2];
                    B2 = +g[ga2 + 16 + 4 >> 2];
                    I2 = +g[ga2 + 16 + 8 >> 2];
                    G2 = p2 + (V2 * ha2 + W2 * B2 + X2 * I2);
                    H2 = t2 + (Y2 * ha2 + Z2 * B2 + _2 * I2);
                    I2 = u2 + ($2 * ha2 + aa2 * B2 + ba2 * I2);
                    B2 = v2 * (D2 - G2) + A2 * (E2 - H2) + x2 * (F2 - I2);
                    w2 = (g[k >> 2] = v2, c[k >> 2] | 0);
                    y2 = (g[k >> 2] = A2, c[k >> 2] | 0);
                    C2 = (g[k >> 2] = x2, c[k >> 2] | 0);
                    if (m2 > 1) {
                      l2 = 0;
                      ca2 = 25;
                      break;
                    }
                    if (B2 > 0) {
                      n2 = da2 * v2 + ea2 * A2 + fa2 * x2;
                      if (n2 >= -14210854715202004e-30) {
                        l2 = 0;
                        ca2 = 25;
                        break;
                      }
                      m2 = m2 - B2 / n2;
                      B2 = (1 - m2) * +g[d2 + 48 >> 2] + m2 * +g[e2 + 48 >> 2];
                      n2 = (1 - m2) * +g[d2 + 52 >> 2] + m2 * +g[e2 + 52 >> 2];
                      o2 = (1 - m2) * +g[d2 + 56 >> 2] + m2 * +g[e2 + 56 >> 2];
                      p2 = (1 - m2) * +g[f2 + 48 >> 2] + m2 * +g[h2 + 48 >> 2];
                      t2 = (1 - m2) * +g[f2 + 52 >> 2] + m2 * +g[h2 + 52 >> 2];
                      u2 = (1 - m2) * +g[f2 + 56 >> 2] + m2 * +g[h2 + 56 >> 2];
                      r2 = w2;
                      s2 = z2;
                      q2 = y2;
                      l2 = C2;
                    } else
                      B2 = J2;
                    y2 = c[b2 + 4 >> 2] | 0;
                    z2 = c[y2 >> 2] | 0;
                    b:
                      do
                        if ((z2 | 0) > 0) {
                          v2 = +g[y2 + 308 >> 2];
                          w2 = 0;
                          while (1) {
                            A2 = D2 - G2 - +g[y2 + 4 + (w2 << 4) >> 2];
                            J2 = E2 - H2 - +g[y2 + 4 + (w2 << 4) + 4 >> 2];
                            ha2 = F2 - I2 - +g[y2 + 4 + (w2 << 4) + 8 >> 2];
                            w2 = w2 + 1 | 0;
                            if (A2 * A2 + J2 * J2 + ha2 * ha2 <= v2) {
                              w2 = 1;
                              break b;
                            }
                            if ((w2 | 0) >= (z2 | 0)) {
                              w2 = 0;
                              break;
                            }
                          }
                        } else
                          w2 = 0;
                      while (0);
                    if ((+g[y2 + 304 >> 2] == 0 ? F2 - I2 == +g[y2 + 300 >> 2] : 0) ? E2 - H2 == +g[y2 + 296 >> 2] : 0) {
                      if (!(D2 - G2 == +g[y2 + 292 >> 2] | w2))
                        ca2 = 17;
                    } else if (!w2)
                      ca2 = 17;
                    if ((ca2 | 0) == 17) {
                      ca2 = 0;
                      g[y2 + 292 >> 2] = D2 - G2;
                      g[y2 + 296 >> 2] = E2 - H2;
                      g[y2 + 300 >> 2] = F2 - I2;
                      g[y2 + 304 >> 2] = 0;
                      a[y2 + 356 >> 0] = 1;
                      g[y2 + 4 + (z2 << 4) >> 2] = D2 - G2;
                      g[y2 + 4 + (z2 << 4) + 4 >> 2] = E2 - H2;
                      g[y2 + 4 + (z2 << 4) + 8 >> 2] = F2 - I2;
                      g[y2 + 4 + (z2 << 4) + 12 >> 2] = 0;
                      C2 = c[y2 >> 2] | 0;
                      g[y2 + 84 + (C2 << 4) >> 2] = D2;
                      g[y2 + 84 + (C2 << 4) + 4 >> 2] = E2;
                      g[y2 + 84 + (C2 << 4) + 8 >> 2] = F2;
                      g[y2 + 84 + (C2 << 4) + 12 >> 2] = 0;
                      C2 = c[y2 >> 2] | 0;
                      g[y2 + 164 + (C2 << 4) >> 2] = G2;
                      g[y2 + 164 + (C2 << 4) + 4 >> 2] = H2;
                      g[y2 + 164 + (C2 << 4) + 8 >> 2] = I2;
                      g[y2 + 164 + (C2 << 4) + 12 >> 2] = 0;
                      c[y2 >> 2] = (c[y2 >> 2] | 0) + 1;
                      y2 = c[b2 + 4 >> 2] | 0;
                    }
                    C2 = eo(y2) | 0;
                    v2 = +g[y2 + 276 >> 2];
                    A2 = +g[y2 + 280 >> 2];
                    x2 = +g[y2 + 284 >> 2];
                    if (!C2)
                      break a;
                    if (!(v2 * v2 + A2 * A2 + x2 * x2 > 9999999747378752e-20))
                      break a;
                    else {
                      J2 = B2;
                      z2 = c[y2 + 288 >> 2] | 0;
                    }
                  }
                  if ((ca2 | 0) == 25) {
                    i = ga2;
                    return l2 | 0;
                  }
                } else {
                  m2 = 0;
                  r2 = 0;
                  s2 = 0;
                  q2 = 0;
                  l2 = 0;
                }
              while (0);
            g[j2 + 164 >> 2] = m2;
            m2 = (c[k >> 2] = r2, +g[k >> 2]);
            n2 = (c[k >> 2] = q2, +g[k >> 2]);
            p2 = (c[k >> 2] = l2, +g[k >> 2]);
            if (!(m2 * m2 + n2 * n2 + p2 * p2 >= 14210854715202004e-30)) {
              c[j2 + 132 >> 2] = 0;
              c[j2 + 132 + 4 >> 2] = 0;
              c[j2 + 132 + 8 >> 2] = 0;
              c[j2 + 132 + 12 >> 2] = 0;
              o2 = 0;
              n2 = 0;
              m2 = 0;
            } else {
              ha2 = 1 / +O(+(m2 * m2 + n2 * n2 + p2 * p2));
              g[j2 + 132 >> 2] = m2 * ha2;
              g[j2 + 136 >> 2] = n2 * ha2;
              g[j2 + 140 >> 2] = p2 * ha2;
              c[j2 + 144 >> 2] = s2;
              o2 = m2 * ha2;
              n2 = n2 * ha2;
              m2 = p2 * ha2;
            }
            if (da2 * o2 + ea2 * n2 + fa2 * m2 >= -+g[j2 + 172 >> 2]) {
              b2 = 0;
              i = ga2;
              return b2 | 0;
            }
            b2 = c[b2 + 4 >> 2] | 0;
            eo(b2) | 0;
            cH(j2 + 148 | 0, b2 + 260 | 0, 16) | 0;
            b2 = 1;
            i = ga2;
            return b2 | 0;
          }
          function eo(b2) {
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0, N2 = 0, O2 = 0, P2 = 0, Q2 = 0, R2 = 0, S2 = 0, T2 = 0, U2 = 0, V2 = 0, W2 = 0;
            I2 = i;
            i = i + 64 | 0;
            if (!(a[b2 + 356 >> 0] | 0)) {
              b2 = a[b2 + 312 >> 0] | 0;
              b2 = b2 << 24 >> 24 != 0;
              i = I2;
              return b2 | 0;
            }
            c[b2 + 336 >> 2] = 0;
            c[b2 + 336 + 4 >> 2] = 0;
            c[b2 + 336 + 8 >> 2] = 0;
            c[b2 + 336 + 12 >> 2] = 0;
            a[b2 + 336 + 16 >> 0] = 0;
            h2 = a[b2 + 332 >> 0] | 0;
            a[b2 + 332 >> 0] = h2 & -16;
            a[b2 + 356 >> 0] = 0;
            switch (c[b2 >> 2] | 0) {
              case 0: {
                a[b2 + 312 >> 0] = 0;
                b2 = 0;
                b2 = b2 << 24 >> 24 != 0;
                i = I2;
                return b2 | 0;
              }
              case 1: {
                c[b2 + 244 >> 2] = c[b2 + 84 >> 2];
                c[b2 + 244 + 4 >> 2] = c[b2 + 84 + 4 >> 2];
                c[b2 + 244 + 8 >> 2] = c[b2 + 84 + 8 >> 2];
                c[b2 + 244 + 12 >> 2] = c[b2 + 84 + 12 >> 2];
                c[b2 + 260 >> 2] = c[b2 + 164 >> 2];
                c[b2 + 260 + 4 >> 2] = c[b2 + 164 + 4 >> 2];
                c[b2 + 260 + 8 >> 2] = c[b2 + 164 + 8 >> 2];
                c[b2 + 260 + 12 >> 2] = c[b2 + 164 + 12 >> 2];
                E2 = +g[b2 + 248 >> 2] - +g[b2 + 264 >> 2];
                F2 = +g[b2 + 252 >> 2] - +g[b2 + 268 >> 2];
                g[b2 + 276 >> 2] = +g[b2 + 244 >> 2] - +g[b2 + 260 >> 2];
                g[b2 + 280 >> 2] = E2;
                g[b2 + 284 >> 2] = F2;
                g[b2 + 288 >> 2] = 0;
                c[b2 + 336 >> 2] = 0;
                c[b2 + 336 + 4 >> 2] = 0;
                c[b2 + 336 + 8 >> 2] = 0;
                c[b2 + 336 + 12 >> 2] = 0;
                a[b2 + 336 + 16 >> 0] = 0;
                a[b2 + 332 >> 0] = h2 & -16;
                g[b2 + 336 >> 2] = 1;
                g[b2 + 340 >> 2] = 0;
                g[b2 + 344 >> 2] = 0;
                g[b2 + 348 >> 2] = 0;
                a[b2 + 312 >> 0] = 1;
                b2 = 1;
                b2 = b2 << 24 >> 24 != 0;
                i = I2;
                return b2 | 0;
              }
              case 2: {
                e2 = +g[b2 + 4 >> 2];
                f2 = +g[b2 + 8 >> 2];
                j2 = +g[b2 + 12 >> 2];
                k2 = +g[b2 + 20 >> 2] - e2;
                l2 = +g[b2 + 24 >> 2] - f2;
                m2 = +g[b2 + 28 >> 2] - j2;
                do
                  if ((0 - e2) * k2 + (0 - f2) * l2 + (0 - j2) * m2 > 0)
                    if ((0 - e2) * k2 + (0 - f2) * l2 + (0 - j2) * m2 < k2 * k2 + l2 * l2 + m2 * m2) {
                      a[b2 + 332 >> 0] = h2 & -16 | 3;
                      h2 = h2 & -16 | 3;
                      f2 = ((0 - e2) * k2 + (0 - f2) * l2 + (0 - j2) * m2) / (k2 * k2 + l2 * l2 + m2 * m2);
                      break;
                    } else {
                      a[b2 + 332 >> 0] = h2 & -16 | 2;
                      h2 = h2 & -16 | 2;
                      f2 = 1;
                      break;
                    }
                  else {
                    a[b2 + 332 >> 0] = h2 & -16 | 1;
                    h2 = h2 & -16 | 1;
                    f2 = 0;
                  }
                while (0);
                e2 = 1 - f2;
                g[b2 + 336 >> 2] = e2;
                g[b2 + 340 >> 2] = f2;
                g[b2 + 344 >> 2] = 0;
                g[b2 + 348 >> 2] = 0;
                A2 = +g[b2 + 84 >> 2];
                C2 = +g[b2 + 88 >> 2];
                E2 = +g[b2 + 92 >> 2];
                A2 = A2 + f2 * (+g[b2 + 100 >> 2] - A2);
                C2 = C2 + f2 * (+g[b2 + 104 >> 2] - C2);
                E2 = E2 + f2 * (+g[b2 + 108 >> 2] - E2);
                g[b2 + 244 >> 2] = A2;
                g[b2 + 248 >> 2] = C2;
                g[b2 + 252 >> 2] = E2;
                g[b2 + 256 >> 2] = 0;
                B2 = +g[b2 + 164 >> 2];
                D2 = +g[b2 + 168 >> 2];
                F2 = +g[b2 + 172 >> 2];
                B2 = B2 + f2 * (+g[b2 + 180 >> 2] - B2);
                D2 = D2 + f2 * (+g[b2 + 184 >> 2] - D2);
                F2 = F2 + f2 * (+g[b2 + 188 >> 2] - F2);
                g[b2 + 260 >> 2] = B2;
                g[b2 + 264 >> 2] = D2;
                g[b2 + 268 >> 2] = F2;
                g[b2 + 272 >> 2] = 0;
                g[b2 + 276 >> 2] = A2 - B2;
                g[b2 + 280 >> 2] = C2 - D2;
                g[b2 + 284 >> 2] = E2 - F2;
                g[b2 + 288 >> 2] = 0;
                if (!(h2 & 2)) {
                  c[b2 >> 2] = 1;
                  d2 = 0;
                } else
                  d2 = 1;
                if (!(h2 & 1)) {
                  c[b2 >> 2] = d2;
                  H2 = b2 + 4 + (d2 << 4) | 0;
                  c[b2 + 4 >> 2] = c[H2 >> 2];
                  c[b2 + 4 + 4 >> 2] = c[H2 + 4 >> 2];
                  c[b2 + 4 + 8 >> 2] = c[H2 + 8 >> 2];
                  c[b2 + 4 + 12 >> 2] = c[H2 + 12 >> 2];
                  H2 = b2 + 84 + (d2 << 4) | 0;
                  c[b2 + 84 >> 2] = c[H2 >> 2];
                  c[b2 + 84 + 4 >> 2] = c[H2 + 4 >> 2];
                  c[b2 + 84 + 8 >> 2] = c[H2 + 8 >> 2];
                  c[b2 + 84 + 12 >> 2] = c[H2 + 12 >> 2];
                  H2 = b2 + 164 + (d2 << 4) | 0;
                  c[b2 + 164 >> 2] = c[H2 >> 2];
                  c[b2 + 164 + 4 >> 2] = c[H2 + 4 >> 2];
                  c[b2 + 164 + 8 >> 2] = c[H2 + 8 >> 2];
                  c[b2 + 164 + 12 >> 2] = c[H2 + 12 >> 2];
                }
                H2 = (!(e2 >= 0) | !(f2 >= 0)) & 1 ^ 1;
                a[b2 + 312 >> 0] = H2;
                b2 = H2;
                b2 = b2 << 24 >> 24 != 0;
                i = I2;
                return b2 | 0;
              }
              case 3: {
                c[I2 + 16 >> 2] = 0;
                c[I2 + 16 + 4 >> 2] = 0;
                c[I2 + 16 + 8 >> 2] = 0;
                c[I2 + 16 + 12 >> 2] = 0;
                fo(I2 + 16 | 0, b2 + 4 | 0, b2 + 20 | 0, b2 + 36 | 0, b2 + 316 | 0);
                F2 = +g[b2 + 336 >> 2];
                e2 = +g[b2 + 340 >> 2];
                f2 = +g[b2 + 344 >> 2];
                A2 = +g[b2 + 84 >> 2] * F2 + +g[b2 + 100 >> 2] * e2 + +g[b2 + 116 >> 2] * f2;
                C2 = F2 * +g[b2 + 88 >> 2] + e2 * +g[b2 + 104 >> 2] + f2 * +g[b2 + 120 >> 2];
                E2 = F2 * +g[b2 + 92 >> 2] + e2 * +g[b2 + 108 >> 2] + f2 * +g[b2 + 124 >> 2];
                g[b2 + 244 >> 2] = A2;
                g[b2 + 248 >> 2] = C2;
                g[b2 + 252 >> 2] = E2;
                g[b2 + 256 >> 2] = 0;
                B2 = +g[b2 + 164 >> 2] * F2 + +g[b2 + 180 >> 2] * e2 + +g[b2 + 196 >> 2] * f2;
                D2 = F2 * +g[b2 + 168 >> 2] + e2 * +g[b2 + 184 >> 2] + f2 * +g[b2 + 200 >> 2];
                F2 = F2 * +g[b2 + 172 >> 2] + e2 * +g[b2 + 188 >> 2] + f2 * +g[b2 + 204 >> 2];
                g[b2 + 260 >> 2] = B2;
                g[b2 + 264 >> 2] = D2;
                g[b2 + 268 >> 2] = F2;
                g[b2 + 272 >> 2] = 0;
                g[b2 + 276 >> 2] = A2 - B2;
                g[b2 + 280 >> 2] = C2 - D2;
                g[b2 + 284 >> 2] = E2 - F2;
                g[b2 + 288 >> 2] = 0;
                h2 = c[b2 >> 2] | 0;
                do
                  if ((h2 | 0) > 3) {
                    d2 = a[b2 + 332 >> 0] | 0;
                    if (!(d2 & 8)) {
                      c[b2 >> 2] = h2 + -1;
                      H2 = b2 + 4 + (h2 + -1 << 4) | 0;
                      c[b2 + 52 >> 2] = c[H2 >> 2];
                      c[b2 + 52 + 4 >> 2] = c[H2 + 4 >> 2];
                      c[b2 + 52 + 8 >> 2] = c[H2 + 8 >> 2];
                      c[b2 + 52 + 12 >> 2] = c[H2 + 12 >> 2];
                      H2 = b2 + 84 + (h2 + -1 << 4) | 0;
                      c[b2 + 132 >> 2] = c[H2 >> 2];
                      c[b2 + 132 + 4 >> 2] = c[H2 + 4 >> 2];
                      c[b2 + 132 + 8 >> 2] = c[H2 + 8 >> 2];
                      c[b2 + 132 + 12 >> 2] = c[H2 + 12 >> 2];
                      H2 = b2 + 164 + (h2 + -1 << 4) | 0;
                      c[b2 + 212 >> 2] = c[H2 >> 2];
                      c[b2 + 212 + 4 >> 2] = c[H2 + 4 >> 2];
                      c[b2 + 212 + 8 >> 2] = c[H2 + 8 >> 2];
                      c[b2 + 212 + 12 >> 2] = c[H2 + 12 >> 2];
                      h2 = h2 + -1 | 0;
                      H2 = 21;
                    } else
                      H2 = 21;
                  } else {
                    if ((h2 | 0) > 2) {
                      d2 = a[b2 + 332 >> 0] | 0;
                      h2 = 3;
                      H2 = 21;
                      break;
                    }
                    if ((h2 | 0) > 1) {
                      d2 = a[b2 + 332 >> 0] | 0;
                      h2 = 2;
                      H2 = 25;
                      break;
                    }
                    if ((h2 | 0) > 0) {
                      o2 = a[b2 + 332 >> 0] | 0;
                      n2 = 1;
                      H2 = 29;
                    }
                  }
                while (0);
                if ((H2 | 0) == 21)
                  if (!(d2 & 4)) {
                    h2 = h2 + -1 | 0;
                    c[b2 >> 2] = h2;
                    c[b2 + 36 >> 2] = c[b2 + 4 + (h2 << 4) >> 2];
                    c[b2 + 36 + 4 >> 2] = c[b2 + 4 + (h2 << 4) + 4 >> 2];
                    c[b2 + 36 + 8 >> 2] = c[b2 + 4 + (h2 << 4) + 8 >> 2];
                    c[b2 + 36 + 12 >> 2] = c[b2 + 4 + (h2 << 4) + 12 >> 2];
                    c[b2 + 116 >> 2] = c[b2 + 84 + (h2 << 4) >> 2];
                    c[b2 + 116 + 4 >> 2] = c[b2 + 84 + (h2 << 4) + 4 >> 2];
                    c[b2 + 116 + 8 >> 2] = c[b2 + 84 + (h2 << 4) + 8 >> 2];
                    c[b2 + 116 + 12 >> 2] = c[b2 + 84 + (h2 << 4) + 12 >> 2];
                    c[b2 + 196 >> 2] = c[b2 + 164 + (h2 << 4) >> 2];
                    c[b2 + 196 + 4 >> 2] = c[b2 + 164 + (h2 << 4) + 4 >> 2];
                    c[b2 + 196 + 8 >> 2] = c[b2 + 164 + (h2 << 4) + 8 >> 2];
                    c[b2 + 196 + 12 >> 2] = c[b2 + 164 + (h2 << 4) + 12 >> 2];
                    H2 = 25;
                  } else
                    H2 = 25;
                if ((H2 | 0) == 25)
                  if (!(d2 & 2)) {
                    n2 = h2 + -1 | 0;
                    c[b2 >> 2] = n2;
                    c[b2 + 20 >> 2] = c[b2 + 4 + (n2 << 4) >> 2];
                    c[b2 + 20 + 4 >> 2] = c[b2 + 4 + (n2 << 4) + 4 >> 2];
                    c[b2 + 20 + 8 >> 2] = c[b2 + 4 + (n2 << 4) + 8 >> 2];
                    c[b2 + 20 + 12 >> 2] = c[b2 + 4 + (n2 << 4) + 12 >> 2];
                    c[b2 + 100 >> 2] = c[b2 + 84 + (n2 << 4) >> 2];
                    c[b2 + 100 + 4 >> 2] = c[b2 + 84 + (n2 << 4) + 4 >> 2];
                    c[b2 + 100 + 8 >> 2] = c[b2 + 84 + (n2 << 4) + 8 >> 2];
                    c[b2 + 100 + 12 >> 2] = c[b2 + 84 + (n2 << 4) + 12 >> 2];
                    c[b2 + 180 >> 2] = c[b2 + 164 + (n2 << 4) >> 2];
                    c[b2 + 180 + 4 >> 2] = c[b2 + 164 + (n2 << 4) + 4 >> 2];
                    c[b2 + 180 + 8 >> 2] = c[b2 + 164 + (n2 << 4) + 8 >> 2];
                    c[b2 + 180 + 12 >> 2] = c[b2 + 164 + (n2 << 4) + 12 >> 2];
                    o2 = d2;
                    H2 = 29;
                  } else {
                    o2 = d2;
                    n2 = h2;
                    H2 = 29;
                  }
                if ((H2 | 0) == 29 ? (o2 & 1) == 0 : 0) {
                  H2 = n2 + -1 | 0;
                  c[b2 >> 2] = H2;
                  c[b2 + 4 >> 2] = c[b2 + 4 + (H2 << 4) >> 2];
                  c[b2 + 4 + 4 >> 2] = c[b2 + 4 + (H2 << 4) + 4 >> 2];
                  c[b2 + 4 + 8 >> 2] = c[b2 + 4 + (H2 << 4) + 8 >> 2];
                  c[b2 + 4 + 12 >> 2] = c[b2 + 4 + (H2 << 4) + 12 >> 2];
                  c[b2 + 84 >> 2] = c[b2 + 84 + (H2 << 4) >> 2];
                  c[b2 + 84 + 4 >> 2] = c[b2 + 84 + (H2 << 4) + 4 >> 2];
                  c[b2 + 84 + 8 >> 2] = c[b2 + 84 + (H2 << 4) + 8 >> 2];
                  c[b2 + 84 + 12 >> 2] = c[b2 + 84 + (H2 << 4) + 12 >> 2];
                  c[b2 + 164 >> 2] = c[b2 + 164 + (H2 << 4) >> 2];
                  c[b2 + 164 + 4 >> 2] = c[b2 + 164 + (H2 << 4) + 4 >> 2];
                  c[b2 + 164 + 8 >> 2] = c[b2 + 164 + (H2 << 4) + 8 >> 2];
                  c[b2 + 164 + 12 >> 2] = c[b2 + 164 + (H2 << 4) + 12 >> 2];
                }
                if ((e2 >= 0 ? !(+g[b2 + 336 >> 2] >= 0) : 1) | !(f2 >= 0))
                  d2 = 0;
                else
                  d2 = +g[b2 + 348 >> 2] >= 0 & 1;
                a[b2 + 312 >> 0] = d2;
                b2 = d2;
                b2 = b2 << 24 >> 24 != 0;
                i = I2;
                return b2 | 0;
              }
              case 4: {
                c[I2 >> 2] = 0;
                c[I2 + 4 >> 2] = 0;
                c[I2 + 8 >> 2] = 0;
                c[I2 + 12 >> 2] = 0;
                q2 = I2 + 16 + 16 | 0;
                a[q2 >> 0] = 0;
                c[b2 + 316 >> 2] = 0;
                c[b2 + 316 + 4 >> 2] = 0;
                c[b2 + 316 + 8 >> 2] = 0;
                c[b2 + 316 + 12 >> 2] = 0;
                a[b2 + 332 >> 0] = h2 | 15;
                K2 = +g[b2 + 20 >> 2];
                T2 = +g[b2 + 4 >> 2];
                Q2 = +g[b2 + 24 >> 2];
                J2 = +g[b2 + 8 >> 2];
                M2 = +g[b2 + 28 >> 2];
                U2 = +g[b2 + 12 >> 2];
                P2 = +g[b2 + 36 >> 2];
                R2 = +g[b2 + 40 >> 2];
                N2 = +g[b2 + 44 >> 2];
                L2 = +g[b2 + 52 >> 2];
                S2 = +g[b2 + 56 >> 2];
                O2 = +g[b2 + 60 >> 2];
                V2 = ((Q2 - J2) * (N2 - U2) - (M2 - U2) * (R2 - J2)) * (L2 - T2) + ((M2 - U2) * (P2 - T2) - (K2 - T2) * (N2 - U2)) * (S2 - J2) + ((K2 - T2) * (R2 - J2) - (Q2 - J2) * (P2 - T2)) * (O2 - U2);
                h2 = V2 * V2 < 999999905104687e-23 ? -1 : ((0 - T2) * ((Q2 - J2) * (N2 - U2) - (M2 - U2) * (R2 - J2)) + (0 - J2) * ((M2 - U2) * (P2 - T2) - (K2 - T2) * (N2 - U2)) + ((K2 - T2) * (R2 - J2) - (Q2 - J2) * (P2 - T2)) * (0 - U2)) * V2 < 0 & 1;
                V2 = (M2 - U2) * ((P2 - T2) * (S2 - J2) - (R2 - J2) * (L2 - T2)) + ((K2 - T2) * ((R2 - J2) * (O2 - U2) - (N2 - U2) * (S2 - J2)) + (Q2 - J2) * ((N2 - U2) * (L2 - T2) - (P2 - T2) * (O2 - U2)));
                n2 = V2 * V2 < 999999905104687e-23 ? -1 : ((0 - U2) * ((P2 - T2) * (S2 - J2) - (R2 - J2) * (L2 - T2)) + ((0 - T2) * ((R2 - J2) * (O2 - U2) - (N2 - U2) * (S2 - J2)) + (0 - J2) * ((N2 - U2) * (L2 - T2) - (P2 - T2) * (O2 - U2)))) * V2 < 0 & 1;
                V2 = (N2 - U2) * ((Q2 - J2) * (L2 - T2) - (K2 - T2) * (S2 - J2)) + ((P2 - T2) * ((M2 - U2) * (S2 - J2) - (Q2 - J2) * (O2 - U2)) + (R2 - J2) * ((K2 - T2) * (O2 - U2) - (M2 - U2) * (L2 - T2)));
                o2 = V2 * V2 < 999999905104687e-23 ? -1 : ((0 - U2) * ((Q2 - J2) * (L2 - T2) - (K2 - T2) * (S2 - J2)) + ((0 - T2) * ((M2 - U2) * (S2 - J2) - (Q2 - J2) * (O2 - U2)) + (0 - J2) * ((K2 - T2) * (O2 - U2) - (M2 - U2) * (L2 - T2)))) * V2 < 0 & 1;
                J2 = (U2 - M2) * ((R2 - Q2) * (L2 - K2) - (P2 - K2) * (S2 - Q2)) + ((T2 - K2) * ((N2 - M2) * (S2 - Q2) - (R2 - Q2) * (O2 - M2)) + (J2 - Q2) * ((P2 - K2) * (O2 - M2) - (N2 - M2) * (L2 - K2)));
                p2 = J2 * J2 < 999999905104687e-23 ? -1 : ((0 - M2) * ((R2 - Q2) * (L2 - K2) - (P2 - K2) * (S2 - Q2)) + ((0 - K2) * ((N2 - M2) * (S2 - Q2) - (R2 - Q2) * (O2 - M2)) + (0 - Q2) * ((P2 - K2) * (O2 - M2) - (N2 - M2) * (L2 - K2)))) * J2 < 0 & 1;
                do
                  if ((n2 | h2 | o2 | p2 | 0) < 0) {
                    a[b2 + 352 >> 0] = 1;
                    d2 = b2 + 312 | 0;
                    H2 = 70;
                  } else {
                    if (!(n2 | h2 | o2 | p2)) {
                      if (a[b2 + 352 >> 0] | 0) {
                        d2 = b2 + 312 | 0;
                        H2 = 70;
                        break;
                      }
                      a[b2 + 312 >> 0] = 1;
                      c[b2 + 276 >> 2] = 0;
                      c[b2 + 276 + 4 >> 2] = 0;
                      c[b2 + 276 + 8 >> 2] = 0;
                      c[b2 + 276 + 12 >> 2] = 0;
                      d2 = 1;
                      break;
                    }
                    if ((h2 | 0) != 0 ? (fo(I2, b2 + 4 | 0, b2 + 20 | 0, b2 + 36 | 0, I2 + 16 | 0), e2 = +g[I2 + 16 >> 2], f2 = +g[I2 + 16 + 4 >> 2], j2 = +g[I2 + 16 + 8 >> 2], k2 = e2 - +g[I2 >> 2], l2 = f2 - +g[I2 + 4 >> 2], m2 = j2 - +g[I2 + 8 >> 2], k2 * k2 + l2 * l2 + m2 * m2 < 34028234663852886e22) : 0) {
                      W2 = c[I2 + 16 + 12 >> 2] | 0;
                      g[b2 + 316 >> 2] = e2;
                      g[b2 + 320 >> 2] = f2;
                      g[b2 + 324 >> 2] = j2;
                      c[b2 + 328 >> 2] = W2;
                      W2 = a[q2 >> 0] | 0;
                      a[b2 + 332 >> 0] = W2 & 1 | a[b2 + 332 >> 0] & -16 | W2 & 2 | W2 & 4;
                      W2 = c[I2 + 16 + 24 >> 2] | 0;
                      h2 = c[I2 + 16 + 28 >> 2] | 0;
                      c[b2 + 336 >> 2] = c[I2 + 16 + 20 >> 2];
                      c[b2 + 340 >> 2] = W2;
                      c[b2 + 344 >> 2] = h2;
                      g[b2 + 348 >> 2] = 0;
                      e2 = k2 * k2 + l2 * l2 + m2 * m2;
                    } else
                      e2 = 34028234663852886e22;
                    if ((n2 | 0) != 0 ? (fo(I2, b2 + 4 | 0, b2 + 36 | 0, b2 + 52 | 0, I2 + 16 | 0), r2 = +g[I2 + 16 >> 2], s2 = +g[I2 + 16 + 4 >> 2], t2 = +g[I2 + 16 + 8 >> 2], u2 = r2 - +g[I2 >> 2], v2 = s2 - +g[I2 + 4 >> 2], w2 = t2 - +g[I2 + 8 >> 2], u2 * u2 + v2 * v2 + w2 * w2 < e2) : 0) {
                      n2 = c[I2 + 16 + 12 >> 2] | 0;
                      g[b2 + 316 >> 2] = r2;
                      g[b2 + 320 >> 2] = s2;
                      g[b2 + 324 >> 2] = t2;
                      c[b2 + 328 >> 2] = n2;
                      n2 = a[q2 >> 0] | 0;
                      a[b2 + 332 >> 0] = n2 << 1 & 8 | (n2 & 1 | a[b2 + 332 >> 0] & -16 | n2 << 1 & 4);
                      n2 = c[I2 + 16 + 24 >> 2] | 0;
                      W2 = c[I2 + 16 + 28 >> 2] | 0;
                      c[b2 + 336 >> 2] = c[I2 + 16 + 20 >> 2];
                      g[b2 + 340 >> 2] = 0;
                      c[b2 + 344 >> 2] = n2;
                      c[b2 + 348 >> 2] = W2;
                      e2 = u2 * u2 + v2 * v2 + w2 * w2;
                    }
                    if ((o2 | 0) != 0 ? (fo(I2, b2 + 4 | 0, b2 + 52 | 0, b2 + 20 | 0, I2 + 16 | 0), x2 = +g[I2 + 16 >> 2], y2 = +g[I2 + 16 + 4 >> 2], z2 = +g[I2 + 16 + 8 >> 2], A2 = x2 - +g[I2 >> 2], B2 = y2 - +g[I2 + 4 >> 2], C2 = z2 - +g[I2 + 8 >> 2], A2 * A2 + B2 * B2 + C2 * C2 < e2) : 0) {
                      o2 = c[I2 + 16 + 12 >> 2] | 0;
                      g[b2 + 316 >> 2] = x2;
                      g[b2 + 320 >> 2] = y2;
                      g[b2 + 324 >> 2] = z2;
                      c[b2 + 328 >> 2] = o2;
                      o2 = a[q2 >> 0] | 0;
                      a[b2 + 332 >> 0] = o2 << 2 & 8 | (o2 & 1 | a[b2 + 332 >> 0] & -16 | (o2 & 255) >>> 1 & 2);
                      o2 = c[I2 + 16 + 28 >> 2] | 0;
                      W2 = c[I2 + 16 + 24 >> 2] | 0;
                      c[b2 + 336 >> 2] = c[I2 + 16 + 20 >> 2];
                      c[b2 + 340 >> 2] = o2;
                      g[b2 + 344 >> 2] = 0;
                      c[b2 + 348 >> 2] = W2;
                      e2 = A2 * A2 + B2 * B2 + C2 * C2;
                    }
                    if (p2 | 0 ? (fo(I2, b2 + 20 | 0, b2 + 52 | 0, b2 + 36 | 0, I2 + 16 | 0), D2 = +g[I2 + 16 >> 2], E2 = +g[I2 + 16 + 4 >> 2], F2 = +g[I2 + 16 + 8 >> 2], T2 = D2 - +g[I2 >> 2], U2 = E2 - +g[I2 + 4 >> 2], V2 = F2 - +g[I2 + 8 >> 2], T2 * T2 + U2 * U2 + V2 * V2 < e2) : 0) {
                      p2 = c[I2 + 16 + 12 >> 2] | 0;
                      g[b2 + 316 >> 2] = D2;
                      g[b2 + 320 >> 2] = E2;
                      g[b2 + 324 >> 2] = F2;
                      c[b2 + 328 >> 2] = p2;
                      p2 = a[q2 >> 0] | 0;
                      a[b2 + 332 >> 0] = p2 & 4 | a[b2 + 332 >> 0] & -16 | p2 << 1 & 2 | p2 << 2 & 8;
                      p2 = c[I2 + 16 + 20 >> 2] | 0;
                      q2 = c[I2 + 16 + 28 >> 2] | 0;
                      W2 = c[I2 + 16 + 24 >> 2] | 0;
                      g[b2 + 336 >> 2] = 0;
                      c[b2 + 340 >> 2] = p2;
                      c[b2 + 344 >> 2] = q2;
                      c[b2 + 348 >> 2] = W2;
                    }
                    O2 = +g[b2 + 336 >> 2];
                    P2 = +g[b2 + 340 >> 2];
                    V2 = +g[b2 + 344 >> 2];
                    e2 = +g[b2 + 348 >> 2];
                    Q2 = +g[b2 + 84 >> 2] * O2 + +g[b2 + 100 >> 2] * P2 + +g[b2 + 116 >> 2] * V2 + +g[b2 + 132 >> 2] * e2;
                    S2 = O2 * +g[b2 + 88 >> 2] + P2 * +g[b2 + 104 >> 2] + V2 * +g[b2 + 120 >> 2] + e2 * +g[b2 + 136 >> 2];
                    U2 = O2 * +g[b2 + 92 >> 2] + P2 * +g[b2 + 108 >> 2] + V2 * +g[b2 + 124 >> 2] + e2 * +g[b2 + 140 >> 2];
                    g[b2 + 244 >> 2] = Q2;
                    g[b2 + 248 >> 2] = S2;
                    g[b2 + 252 >> 2] = U2;
                    g[b2 + 256 >> 2] = 0;
                    R2 = +g[b2 + 164 >> 2] * O2 + +g[b2 + 180 >> 2] * P2 + +g[b2 + 196 >> 2] * V2 + +g[b2 + 212 >> 2] * e2;
                    T2 = O2 * +g[b2 + 168 >> 2] + P2 * +g[b2 + 184 >> 2] + V2 * +g[b2 + 200 >> 2] + e2 * +g[b2 + 216 >> 2];
                    V2 = O2 * +g[b2 + 172 >> 2] + P2 * +g[b2 + 188 >> 2] + V2 * +g[b2 + 204 >> 2] + e2 * +g[b2 + 220 >> 2];
                    g[b2 + 260 >> 2] = R2;
                    g[b2 + 264 >> 2] = T2;
                    g[b2 + 268 >> 2] = V2;
                    g[b2 + 272 >> 2] = 0;
                    g[b2 + 276 >> 2] = Q2 - R2;
                    g[b2 + 280 >> 2] = S2 - T2;
                    g[b2 + 284 >> 2] = U2 - V2;
                    g[b2 + 288 >> 2] = 0;
                    h2 = c[b2 >> 2] | 0;
                    do
                      if ((h2 | 0) > 3) {
                        d2 = a[b2 + 332 >> 0] | 0;
                        if (!(d2 & 8)) {
                          c[b2 >> 2] = h2 + -1;
                          H2 = b2 + 4 + (h2 + -1 << 4) | 0;
                          c[b2 + 52 >> 2] = c[H2 >> 2];
                          c[b2 + 52 + 4 >> 2] = c[H2 + 4 >> 2];
                          c[b2 + 52 + 8 >> 2] = c[H2 + 8 >> 2];
                          c[b2 + 52 + 12 >> 2] = c[H2 + 12 >> 2];
                          H2 = b2 + 84 + (h2 + -1 << 4) | 0;
                          c[b2 + 132 >> 2] = c[H2 >> 2];
                          c[b2 + 132 + 4 >> 2] = c[H2 + 4 >> 2];
                          c[b2 + 132 + 8 >> 2] = c[H2 + 8 >> 2];
                          c[b2 + 132 + 12 >> 2] = c[H2 + 12 >> 2];
                          H2 = b2 + 164 + (h2 + -1 << 4) | 0;
                          c[b2 + 212 >> 2] = c[H2 >> 2];
                          c[b2 + 212 + 4 >> 2] = c[H2 + 4 >> 2];
                          c[b2 + 212 + 8 >> 2] = c[H2 + 8 >> 2];
                          c[b2 + 212 + 12 >> 2] = c[H2 + 12 >> 2];
                          h2 = h2 + -1 | 0;
                          H2 = 54;
                        } else
                          H2 = 54;
                      } else {
                        if ((h2 | 0) > 2) {
                          d2 = a[b2 + 332 >> 0] | 0;
                          h2 = 3;
                          H2 = 54;
                          break;
                        }
                        if ((h2 | 0) > 1) {
                          d2 = a[b2 + 332 >> 0] | 0;
                          h2 = 2;
                          H2 = 58;
                          break;
                        }
                        if ((h2 | 0) > 0) {
                          d2 = a[b2 + 332 >> 0] | 0;
                          G2 = 1;
                          H2 = 62;
                        }
                      }
                    while (0);
                    if ((H2 | 0) == 54)
                      if (!(d2 & 4)) {
                        h2 = h2 + -1 | 0;
                        c[b2 >> 2] = h2;
                        c[b2 + 36 >> 2] = c[b2 + 4 + (h2 << 4) >> 2];
                        c[b2 + 36 + 4 >> 2] = c[b2 + 4 + (h2 << 4) + 4 >> 2];
                        c[b2 + 36 + 8 >> 2] = c[b2 + 4 + (h2 << 4) + 8 >> 2];
                        c[b2 + 36 + 12 >> 2] = c[b2 + 4 + (h2 << 4) + 12 >> 2];
                        c[b2 + 116 >> 2] = c[b2 + 84 + (h2 << 4) >> 2];
                        c[b2 + 116 + 4 >> 2] = c[b2 + 84 + (h2 << 4) + 4 >> 2];
                        c[b2 + 116 + 8 >> 2] = c[b2 + 84 + (h2 << 4) + 8 >> 2];
                        c[b2 + 116 + 12 >> 2] = c[b2 + 84 + (h2 << 4) + 12 >> 2];
                        c[b2 + 196 >> 2] = c[b2 + 164 + (h2 << 4) >> 2];
                        c[b2 + 196 + 4 >> 2] = c[b2 + 164 + (h2 << 4) + 4 >> 2];
                        c[b2 + 196 + 8 >> 2] = c[b2 + 164 + (h2 << 4) + 8 >> 2];
                        c[b2 + 196 + 12 >> 2] = c[b2 + 164 + (h2 << 4) + 12 >> 2];
                        H2 = 58;
                      } else
                        H2 = 58;
                    if ((H2 | 0) == 58)
                      if (!(d2 & 2)) {
                        G2 = h2 + -1 | 0;
                        c[b2 >> 2] = G2;
                        c[b2 + 20 >> 2] = c[b2 + 4 + (G2 << 4) >> 2];
                        c[b2 + 20 + 4 >> 2] = c[b2 + 4 + (G2 << 4) + 4 >> 2];
                        c[b2 + 20 + 8 >> 2] = c[b2 + 4 + (G2 << 4) + 8 >> 2];
                        c[b2 + 20 + 12 >> 2] = c[b2 + 4 + (G2 << 4) + 12 >> 2];
                        c[b2 + 100 >> 2] = c[b2 + 84 + (G2 << 4) >> 2];
                        c[b2 + 100 + 4 >> 2] = c[b2 + 84 + (G2 << 4) + 4 >> 2];
                        c[b2 + 100 + 8 >> 2] = c[b2 + 84 + (G2 << 4) + 8 >> 2];
                        c[b2 + 100 + 12 >> 2] = c[b2 + 84 + (G2 << 4) + 12 >> 2];
                        c[b2 + 180 >> 2] = c[b2 + 164 + (G2 << 4) >> 2];
                        c[b2 + 180 + 4 >> 2] = c[b2 + 164 + (G2 << 4) + 4 >> 2];
                        c[b2 + 180 + 8 >> 2] = c[b2 + 164 + (G2 << 4) + 8 >> 2];
                        c[b2 + 180 + 12 >> 2] = c[b2 + 164 + (G2 << 4) + 12 >> 2];
                        H2 = 62;
                      } else {
                        G2 = h2;
                        H2 = 62;
                      }
                    if ((H2 | 0) == 62 ? (d2 & 1) == 0 : 0) {
                      W2 = G2 + -1 | 0;
                      c[b2 >> 2] = W2;
                      c[b2 + 4 >> 2] = c[b2 + 4 + (W2 << 4) >> 2];
                      c[b2 + 4 + 4 >> 2] = c[b2 + 4 + (W2 << 4) + 4 >> 2];
                      c[b2 + 4 + 8 >> 2] = c[b2 + 4 + (W2 << 4) + 8 >> 2];
                      c[b2 + 4 + 12 >> 2] = c[b2 + 4 + (W2 << 4) + 12 >> 2];
                      c[b2 + 84 >> 2] = c[b2 + 84 + (W2 << 4) >> 2];
                      c[b2 + 84 + 4 >> 2] = c[b2 + 84 + (W2 << 4) + 4 >> 2];
                      c[b2 + 84 + 8 >> 2] = c[b2 + 84 + (W2 << 4) + 8 >> 2];
                      c[b2 + 84 + 12 >> 2] = c[b2 + 84 + (W2 << 4) + 12 >> 2];
                      c[b2 + 164 >> 2] = c[b2 + 164 + (W2 << 4) >> 2];
                      c[b2 + 164 + 4 >> 2] = c[b2 + 164 + (W2 << 4) + 4 >> 2];
                      c[b2 + 164 + 8 >> 2] = c[b2 + 164 + (W2 << 4) + 8 >> 2];
                      c[b2 + 164 + 12 >> 2] = c[b2 + 164 + (W2 << 4) + 12 >> 2];
                    }
                    if ((+g[b2 + 336 >> 2] >= 0 ? +g[b2 + 340 >> 2] >= 0 : 0) ? +g[b2 + 344 >> 2] >= 0 : 0)
                      d2 = e2 >= 0 & 1;
                    else
                      d2 = 0;
                    a[b2 + 312 >> 0] = d2;
                  }
                while (0);
                if ((H2 | 0) == 70) {
                  a[d2 >> 0] = 0;
                  d2 = 0;
                }
                W2 = d2;
                W2 = W2 << 24 >> 24 != 0;
                i = I2;
                return W2 | 0;
              }
              default: {
                a[b2 + 312 >> 0] = 0;
                W2 = 0;
                W2 = W2 << 24 >> 24 != 0;
                i = I2;
                return W2 | 0;
              }
            }
            return 0;
          }
          function xe(a2, b2, d2, e2, f2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            var h2 = 0, j2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0, P2 = 0, Q2 = 0, R2 = 0, S2 = 0, T2 = 0, U2 = 0, V2 = 0, X2 = 0, Y2 = 0, Z2 = 0, _2 = 0, $2 = 0, aa2 = 0, ba2 = 0, ca2 = 0, da2 = 0, ea2 = 0, fa2 = 0, ga2 = 0, ha2 = 0, ia2 = 0, ja2 = 0, ka2 = 0, la2 = 0, ma2 = 0, na2 = 0, oa2 = 0, pa2 = 0, qa2 = 0, ra2 = 0, sa2 = 0, ta2 = 0, ua2 = 0, va2 = 0, wa2 = 0, xa2 = 0, ya2 = 0, za2 = 0, Aa2 = 0, Ba2 = 0, Ca2 = 0, Da2 = 0, Ea2 = 0, Fa2 = 0;
            Fa2 = i;
            i = i + 592 | 0;
            c[Fa2 + 48 >> 2] = c[b2 >> 2];
            c[Fa2 >> 2] = c[b2 + 64 >> 2];
            E2 = Fa2 + 48 + 4 | 0;
            c[E2 >> 2] = c[b2 + 4 >> 2];
            c[Fa2 + 4 >> 2] = c[b2 + 68 >> 2];
            c[Fa2 + 48 + 8 >> 2] = c[b2 + 8 >> 2];
            c[Fa2 + 8 >> 2] = c[b2 + 72 >> 2];
            c[Fa2 + 48 + 16 >> 2] = c[b2 + 16 >> 2];
            c[Fa2 + 16 >> 2] = c[b2 + 80 >> 2];
            c[Fa2 + 48 + 20 >> 2] = c[b2 + 20 >> 2];
            c[Fa2 + 20 >> 2] = c[b2 + 84 >> 2];
            c[Fa2 + 48 + 24 >> 2] = c[b2 + 24 >> 2];
            c[Fa2 + 24 >> 2] = c[b2 + 88 >> 2];
            c[Fa2 + 48 + 32 >> 2] = c[b2 + 32 >> 2];
            c[Fa2 + 32 >> 2] = c[b2 + 96 >> 2];
            c[Fa2 + 48 + 36 >> 2] = c[b2 + 36 >> 2];
            c[Fa2 + 36 >> 2] = c[b2 + 100 >> 2];
            c[Fa2 + 48 + 40 >> 2] = c[b2 + 40 >> 2];
            c[Fa2 + 40 >> 2] = c[b2 + 104 >> 2];
            Ca2 = c[a2 + 4 >> 2] | 0;
            ia2 = +g[Ca2 + 32 >> 2];
            ja2 = +g[Ca2 + 36 >> 2];
            ma2 = +g[Ca2 + 40 >> 2];
            ka2 = +Hb[c[(c[Ca2 >> 2] | 0) + 48 >> 2] & 15](Ca2);
            la2 = +Hb[c[(c[Ca2 >> 2] | 0) + 48 >> 2] & 15](Ca2);
            ma2 = (ma2 + +Hb[c[(c[Ca2 >> 2] | 0) + 48 >> 2] & 15](Ca2)) * 2;
            Ca2 = c[a2 + 8 >> 2] | 0;
            qa2 = +g[Ca2 + 32 >> 2];
            ra2 = +g[Ca2 + 36 >> 2];
            wa2 = +g[Ca2 + 40 >> 2];
            sa2 = +Hb[c[(c[Ca2 >> 2] | 0) + 48 >> 2] & 15](Ca2);
            pa2 = +Hb[c[(c[Ca2 >> 2] | 0) + 48 >> 2] & 15](Ca2);
            wa2 = (wa2 + +Hb[c[(c[Ca2 >> 2] | 0) + 48 >> 2] & 15](Ca2)) * 2;
            D2 = +g[b2 + 112 >> 2] - +g[b2 + 48 >> 2];
            M2 = +g[b2 + 116 >> 2] - +g[b2 + 52 >> 2];
            P2 = +g[b2 + 120 >> 2] - +g[b2 + 56 >> 2];
            ca2 = +g[Fa2 + 48 >> 2];
            aa2 = +g[Fa2 + 48 + 16 >> 2];
            ba2 = +g[Fa2 + 48 + 32 >> 2];
            $2 = +g[E2 >> 2];
            X2 = +g[Fa2 + 48 + 20 >> 2];
            Z2 = +g[Fa2 + 48 + 36 >> 2];
            fa2 = +g[Fa2 + 48 + 8 >> 2];
            ha2 = +g[Fa2 + 48 + 24 >> 2];
            na2 = +g[Fa2 + 48 + 40 >> 2];
            g[Fa2 + 484 >> 2] = (ia2 + ka2) * 2 * 0.5;
            g[Fa2 + 484 + 4 >> 2] = (ja2 + la2) * 2 * 0.5;
            g[Fa2 + 484 + 8 >> 2] = ma2 * 0.5;
            g[Fa2 + 472 >> 2] = (qa2 + sa2) * 2 * 0.5;
            g[Fa2 + 472 + 4 >> 2] = (ra2 + pa2) * 2 * 0.5;
            g[Fa2 + 472 + 8 >> 2] = wa2 * 0.5;
            za2 = +g[Fa2 >> 2];
            ta2 = +g[Fa2 + 16 >> 2];
            va2 = +g[Fa2 + 32 >> 2];
            ya2 = +g[Fa2 + 4 >> 2];
            oa2 = +g[Fa2 + 20 >> 2];
            ua2 = +g[Fa2 + 36 >> 2];
            xa2 = +g[Fa2 + 8 >> 2];
            Da2 = +g[Fa2 + 24 >> 2];
            Ea2 = +g[Fa2 + 40 >> 2];
            y2 = +N(+(ca2 * za2 + aa2 * ta2 + ba2 * va2));
            A2 = +N(+(ca2 * ya2 + aa2 * oa2 + ba2 * ua2));
            R2 = +N(+(ca2 * xa2 + aa2 * Da2 + ba2 * Ea2));
            z2 = +N(+(za2 * $2 + ta2 * X2 + va2 * Z2));
            B2 = +N(+(ya2 * $2 + oa2 * X2 + ua2 * Z2));
            S2 = +N(+(xa2 * $2 + Da2 * X2 + Ea2 * Z2));
            T2 = +N(+(za2 * fa2 + ta2 * ha2 + va2 * na2));
            U2 = +N(+(ya2 * fa2 + oa2 * ha2 + ua2 * na2));
            C2 = +N(+(xa2 * fa2 + Da2 * ha2 + Ea2 * na2));
            h2 = +N(+(D2 * ca2 + M2 * aa2 + P2 * ba2)) - (wa2 * 0.5 * R2 + ((ia2 + ka2) * 2 * 0.5 + y2 * ((qa2 + sa2) * 2 * 0.5) + A2 * ((ra2 + pa2) * 2 * 0.5)));
            if (h2 > 0) {
              i = Fa2;
              return;
            }
            if (h2 > -34028234663852886e22) {
              n2 = 1;
              l2 = D2 * ca2 + M2 * aa2 + P2 * ba2 < 0 & 1;
              e2 = Fa2 + 48 | 0;
            } else {
              n2 = 0;
              l2 = 0;
              e2 = 0;
              h2 = -34028234663852886e22;
            }
            j2 = +N(+(D2 * $2 + M2 * X2 + P2 * Z2)) - ((ja2 + la2) * 2 * 0.5 + z2 * ((qa2 + sa2) * 2 * 0.5) + B2 * ((ra2 + pa2) * 2 * 0.5) + S2 * (wa2 * 0.5));
            if (j2 > 0) {
              i = Fa2;
              return;
            }
            if (j2 > h2) {
              n2 = 2;
              l2 = D2 * $2 + M2 * X2 + P2 * Z2 < 0 & 1;
              e2 = E2;
              h2 = j2;
            }
            j2 = +N(+(D2 * fa2 + M2 * ha2 + P2 * na2)) - (ma2 * 0.5 + T2 * ((qa2 + sa2) * 2 * 0.5) + U2 * ((ra2 + pa2) * 2 * 0.5) + C2 * (wa2 * 0.5));
            if (j2 > 0) {
              i = Fa2;
              return;
            }
            if (j2 > h2) {
              n2 = 3;
              l2 = D2 * fa2 + M2 * ha2 + P2 * na2 < 0 & 1;
              e2 = Fa2 + 48 + 8 | 0;
              h2 = j2;
            }
            j2 = +N(+(D2 * za2 + M2 * ta2 + P2 * va2)) - ((qa2 + sa2) * 2 * 0.5 + (y2 * ((ia2 + ka2) * 2 * 0.5) + z2 * ((ja2 + la2) * 2 * 0.5) + T2 * (ma2 * 0.5)));
            if (j2 > 0) {
              i = Fa2;
              return;
            }
            if (j2 > h2) {
              n2 = 4;
              l2 = D2 * za2 + M2 * ta2 + P2 * va2 < 0 & 1;
              e2 = Fa2;
              h2 = j2;
            }
            j2 = +N(+(D2 * ya2 + M2 * oa2 + P2 * ua2)) - ((ra2 + pa2) * 2 * 0.5 + (A2 * ((ia2 + ka2) * 2 * 0.5) + B2 * ((ja2 + la2) * 2 * 0.5) + U2 * (ma2 * 0.5)));
            if (j2 > 0) {
              i = Fa2;
              return;
            }
            if (j2 > h2) {
              n2 = 5;
              l2 = D2 * ya2 + M2 * oa2 + P2 * ua2 < 0 & 1;
              e2 = Fa2 + 4 | 0;
            } else
              j2 = h2;
            h2 = +N(+(D2 * xa2 + M2 * Da2 + P2 * Ea2)) - (wa2 * 0.5 + (R2 * ((ia2 + ka2) * 2 * 0.5) + S2 * ((ja2 + la2) * 2 * 0.5) + C2 * (ma2 * 0.5)));
            if (h2 > 0) {
              i = Fa2;
              return;
            }
            if (h2 > j2) {
              n2 = 6;
              l2 = D2 * xa2 + M2 * Da2 + P2 * Ea2 < 0 & 1;
              u2 = Fa2 + 8 | 0;
            } else {
              u2 = e2;
              h2 = j2;
            }
            j2 = (D2 * fa2 + M2 * ha2 + P2 * na2) * (za2 * $2 + ta2 * X2 + va2 * Z2) - (D2 * $2 + M2 * X2 + P2 * Z2) * (za2 * fa2 + ta2 * ha2 + va2 * na2);
            m2 = +N(+j2) - ((T2 + 9999999747378752e-21) * ((ja2 + la2) * 2 * 0.5) + (z2 + 9999999747378752e-21) * (ma2 * 0.5) + (R2 + 9999999747378752e-21) * ((ra2 + pa2) * 2 * 0.5) + (A2 + 9999999747378752e-21) * (wa2 * 0.5));
            if (m2 > 11920928955078125e-23) {
              i = Fa2;
              return;
            }
            p2 = (za2 * fa2 + ta2 * ha2 + va2 * na2) * (za2 * fa2 + ta2 * ha2 + va2 * na2) + 0;
            v2 = (za2 * $2 + ta2 * X2 + va2 * Z2) * (za2 * $2 + ta2 * X2 + va2 * Z2);
            o2 = +O(+(v2 + p2));
            if (o2 > 11920928955078125e-23 ? m2 / o2 * 1.0499999523162842 > h2 : 0) {
              a2 = (g[k >> 2] = 0 / o2, c[k >> 2] | 0);
              f2 = (g[k >> 2] = -(za2 * fa2 + ta2 * ha2 + va2 * na2) / o2, c[k >> 2] | 0);
              n2 = 7;
              l2 = j2 < 0 & 1;
              e2 = (g[k >> 2] = (za2 * $2 + ta2 * X2 + va2 * Z2) / o2, c[k >> 2] | 0);
              u2 = 0;
              h2 = m2 / o2;
            } else {
              a2 = 0;
              f2 = 0;
              e2 = 0;
            }
            j2 = (D2 * fa2 + M2 * ha2 + P2 * na2) * (ya2 * $2 + oa2 * X2 + ua2 * Z2) - (D2 * $2 + M2 * X2 + P2 * Z2) * (ya2 * fa2 + oa2 * ha2 + ua2 * na2);
            m2 = +N(+j2) - ((U2 + 9999999747378752e-21) * ((ja2 + la2) * 2 * 0.5) + (B2 + 9999999747378752e-21) * (ma2 * 0.5) + (R2 + 9999999747378752e-21) * ((qa2 + sa2) * 2 * 0.5) + (y2 + 9999999747378752e-21) * (wa2 * 0.5));
            if (m2 > 11920928955078125e-23) {
              i = Fa2;
              return;
            }
            q2 = (ya2 * fa2 + oa2 * ha2 + ua2 * na2) * (ya2 * fa2 + oa2 * ha2 + ua2 * na2) + 0;
            w2 = (ya2 * $2 + oa2 * X2 + ua2 * Z2) * (ya2 * $2 + oa2 * X2 + ua2 * Z2);
            o2 = +O(+(w2 + q2));
            if (o2 > 11920928955078125e-23 ? m2 / o2 * 1.0499999523162842 > h2 : 0) {
              a2 = (g[k >> 2] = 0 / o2, c[k >> 2] | 0);
              f2 = (g[k >> 2] = -(ya2 * fa2 + oa2 * ha2 + ua2 * na2) / o2, c[k >> 2] | 0);
              n2 = 8;
              l2 = j2 < 0 & 1;
              e2 = (g[k >> 2] = (ya2 * $2 + oa2 * X2 + ua2 * Z2) / o2, c[k >> 2] | 0);
              u2 = 0;
              h2 = m2 / o2;
            }
            j2 = (D2 * fa2 + M2 * ha2 + P2 * na2) * (xa2 * $2 + Da2 * X2 + Ea2 * Z2) - (D2 * $2 + M2 * X2 + P2 * Z2) * (xa2 * fa2 + Da2 * ha2 + Ea2 * na2);
            m2 = +N(+j2) - ((C2 + 9999999747378752e-21) * ((ja2 + la2) * 2 * 0.5) + (S2 + 9999999747378752e-21) * (ma2 * 0.5) + (A2 + 9999999747378752e-21) * ((qa2 + sa2) * 2 * 0.5) + (y2 + 9999999747378752e-21) * ((ra2 + pa2) * 2 * 0.5));
            if (m2 > 11920928955078125e-23) {
              i = Fa2;
              return;
            }
            s2 = (xa2 * fa2 + Da2 * ha2 + Ea2 * na2) * (xa2 * fa2 + Da2 * ha2 + Ea2 * na2) + 0;
            x2 = (xa2 * $2 + Da2 * X2 + Ea2 * Z2) * (xa2 * $2 + Da2 * X2 + Ea2 * Z2);
            o2 = +O(+(x2 + s2));
            if (o2 > 11920928955078125e-23 ? m2 / o2 * 1.0499999523162842 > h2 : 0) {
              a2 = (g[k >> 2] = 0 / o2, c[k >> 2] | 0);
              f2 = (g[k >> 2] = -(xa2 * fa2 + Da2 * ha2 + Ea2 * na2) / o2, c[k >> 2] | 0);
              n2 = 9;
              l2 = j2 < 0 & 1;
              e2 = (g[k >> 2] = (xa2 * $2 + Da2 * X2 + Ea2 * Z2) / o2, c[k >> 2] | 0);
              u2 = 0;
              h2 = m2 / o2;
            }
            j2 = (D2 * ca2 + M2 * aa2 + P2 * ba2) * (za2 * fa2 + ta2 * ha2 + va2 * na2) - (D2 * fa2 + M2 * ha2 + P2 * na2) * (ca2 * za2 + aa2 * ta2 + ba2 * va2);
            o2 = +N(+j2) - ((T2 + 9999999747378752e-21) * ((ia2 + ka2) * 2 * 0.5) + (y2 + 9999999747378752e-21) * (ma2 * 0.5) + (S2 + 9999999747378752e-21) * ((ra2 + pa2) * 2 * 0.5) + (B2 + 9999999747378752e-21) * (wa2 * 0.5));
            if (o2 > 11920928955078125e-23) {
              i = Fa2;
              return;
            }
            t2 = (ca2 * za2 + aa2 * ta2 + ba2 * va2) * (ca2 * za2 + aa2 * ta2 + ba2 * va2);
            m2 = +O(+(t2 + p2));
            do
              if (m2 > 11920928955078125e-23) {
                if (!(o2 / m2 * 1.0499999523162842 > h2))
                  break;
                a2 = (g[k >> 2] = (za2 * fa2 + ta2 * ha2 + va2 * na2) / m2, c[k >> 2] | 0);
                f2 = (g[k >> 2] = 0 / m2, c[k >> 2] | 0);
                n2 = 10;
                l2 = j2 < 0 & 1;
                e2 = (g[k >> 2] = -(ca2 * za2 + aa2 * ta2 + ba2 * va2) / m2, c[k >> 2] | 0);
                u2 = 0;
                h2 = o2 / m2;
              }
            while (0);
            j2 = (D2 * ca2 + M2 * aa2 + P2 * ba2) * (ya2 * fa2 + oa2 * ha2 + ua2 * na2) - (D2 * fa2 + M2 * ha2 + P2 * na2) * (ca2 * ya2 + aa2 * oa2 + ba2 * ua2);
            o2 = +N(+j2) - ((U2 + 9999999747378752e-21) * ((ia2 + ka2) * 2 * 0.5) + (A2 + 9999999747378752e-21) * (ma2 * 0.5) + (S2 + 9999999747378752e-21) * ((qa2 + sa2) * 2 * 0.5) + (z2 + 9999999747378752e-21) * (wa2 * 0.5));
            if (o2 > 11920928955078125e-23) {
              i = Fa2;
              return;
            }
            r2 = (ca2 * ya2 + aa2 * oa2 + ba2 * ua2) * (ca2 * ya2 + aa2 * oa2 + ba2 * ua2);
            m2 = +O(+(r2 + q2));
            do
              if (m2 > 11920928955078125e-23) {
                if (!(o2 / m2 * 1.0499999523162842 > h2))
                  break;
                a2 = (g[k >> 2] = (ya2 * fa2 + oa2 * ha2 + ua2 * na2) / m2, c[k >> 2] | 0);
                f2 = (g[k >> 2] = 0 / m2, c[k >> 2] | 0);
                n2 = 11;
                l2 = j2 < 0 & 1;
                e2 = (g[k >> 2] = -(ca2 * ya2 + aa2 * oa2 + ba2 * ua2) / m2, c[k >> 2] | 0);
                u2 = 0;
                h2 = o2 / m2;
              }
            while (0);
            j2 = (D2 * ca2 + M2 * aa2 + P2 * ba2) * (xa2 * fa2 + Da2 * ha2 + Ea2 * na2) - (D2 * fa2 + M2 * ha2 + P2 * na2) * (ca2 * xa2 + aa2 * Da2 + ba2 * Ea2);
            o2 = +N(+j2) - ((C2 + 9999999747378752e-21) * ((ia2 + ka2) * 2 * 0.5) + (R2 + 9999999747378752e-21) * (ma2 * 0.5) + (B2 + 9999999747378752e-21) * ((qa2 + sa2) * 2 * 0.5) + (z2 + 9999999747378752e-21) * ((ra2 + pa2) * 2 * 0.5));
            if (o2 > 11920928955078125e-23) {
              i = Fa2;
              return;
            }
            p2 = (ca2 * xa2 + aa2 * Da2 + ba2 * Ea2) * (ca2 * xa2 + aa2 * Da2 + ba2 * Ea2);
            m2 = +O(+(p2 + s2));
            do
              if (m2 > 11920928955078125e-23) {
                if (!(o2 / m2 * 1.0499999523162842 > h2))
                  break;
                a2 = (g[k >> 2] = (xa2 * fa2 + Da2 * ha2 + Ea2 * na2) / m2, c[k >> 2] | 0);
                f2 = (g[k >> 2] = 0 / m2, c[k >> 2] | 0);
                n2 = 12;
                l2 = j2 < 0 & 1;
                e2 = (g[k >> 2] = -(ca2 * xa2 + aa2 * Da2 + ba2 * Ea2) / m2, c[k >> 2] | 0);
                u2 = 0;
                h2 = o2 / m2;
              }
            while (0);
            j2 = (D2 * $2 + M2 * X2 + P2 * Z2) * (ca2 * za2 + aa2 * ta2 + ba2 * va2) - (D2 * ca2 + M2 * aa2 + P2 * ba2) * (za2 * $2 + ta2 * X2 + va2 * Z2);
            o2 = +N(+j2) - ((z2 + 9999999747378752e-21) * ((ia2 + ka2) * 2 * 0.5) + (y2 + 9999999747378752e-21) * ((ja2 + la2) * 2 * 0.5) + (C2 + 9999999747378752e-21) * ((ra2 + pa2) * 2 * 0.5) + (U2 + 9999999747378752e-21) * (wa2 * 0.5));
            if (o2 > 11920928955078125e-23) {
              i = Fa2;
              return;
            }
            m2 = +O(+(t2 + v2 + 0));
            do
              if (m2 > 11920928955078125e-23) {
                if (!(o2 / m2 * 1.0499999523162842 > h2))
                  break;
                a2 = (g[k >> 2] = -(za2 * $2 + ta2 * X2 + va2 * Z2) / m2, c[k >> 2] | 0);
                f2 = (g[k >> 2] = (ca2 * za2 + aa2 * ta2 + ba2 * va2) / m2, c[k >> 2] | 0);
                n2 = 13;
                l2 = j2 < 0 & 1;
                e2 = (g[k >> 2] = 0 / m2, c[k >> 2] | 0);
                u2 = 0;
                h2 = o2 / m2;
              }
            while (0);
            j2 = (D2 * $2 + M2 * X2 + P2 * Z2) * (ca2 * ya2 + aa2 * oa2 + ba2 * ua2) - (D2 * ca2 + M2 * aa2 + P2 * ba2) * (ya2 * $2 + oa2 * X2 + ua2 * Z2);
            o2 = +N(+j2) - ((B2 + 9999999747378752e-21) * ((ia2 + ka2) * 2 * 0.5) + (A2 + 9999999747378752e-21) * ((ja2 + la2) * 2 * 0.5) + (C2 + 9999999747378752e-21) * ((qa2 + sa2) * 2 * 0.5) + (T2 + 9999999747378752e-21) * (wa2 * 0.5));
            if (o2 > 11920928955078125e-23) {
              i = Fa2;
              return;
            }
            m2 = +O(+(r2 + w2 + 0));
            do
              if (m2 > 11920928955078125e-23) {
                if (!(o2 / m2 * 1.0499999523162842 > h2))
                  break;
                a2 = (g[k >> 2] = -(ya2 * $2 + oa2 * X2 + ua2 * Z2) / m2, c[k >> 2] | 0);
                f2 = (g[k >> 2] = (ca2 * ya2 + aa2 * oa2 + ba2 * ua2) / m2, c[k >> 2] | 0);
                n2 = 14;
                l2 = j2 < 0 & 1;
                e2 = (g[k >> 2] = 0 / m2, c[k >> 2] | 0);
                u2 = 0;
                h2 = o2 / m2;
              }
            while (0);
            m2 = (D2 * $2 + M2 * X2 + P2 * Z2) * (ca2 * xa2 + aa2 * Da2 + ba2 * Ea2) - (D2 * ca2 + M2 * aa2 + P2 * ba2) * (xa2 * $2 + Da2 * X2 + Ea2 * Z2);
            o2 = +N(+m2) - ((S2 + 9999999747378752e-21) * ((ia2 + ka2) * 2 * 0.5) + (R2 + 9999999747378752e-21) * ((ja2 + la2) * 2 * 0.5) + (U2 + 9999999747378752e-21) * ((qa2 + sa2) * 2 * 0.5) + (T2 + 9999999747378752e-21) * ((ra2 + pa2) * 2 * 0.5));
            if (o2 > 11920928955078125e-23) {
              i = Fa2;
              return;
            }
            j2 = +O(+(p2 + x2 + 0));
            do
              if (j2 > 11920928955078125e-23) {
                if (!(o2 / j2 * 1.0499999523162842 > h2)) {
                  Aa2 = 55;
                  break;
                }
                a2 = (g[k >> 2] = -(xa2 * $2 + Da2 * X2 + Ea2 * Z2) / j2, c[k >> 2] | 0);
                f2 = (g[k >> 2] = (ca2 * xa2 + aa2 * Da2 + ba2 * Ea2) / j2, c[k >> 2] | 0);
                n2 = 15;
                l2 = m2 < 0 & 1;
                e2 = (g[k >> 2] = 0 / j2, c[k >> 2] | 0);
                h2 = o2 / j2;
                Aa2 = 58;
              } else
                Aa2 = 55;
            while (0);
            do
              if ((Aa2 | 0) == 55) {
                if (!n2) {
                  i = Fa2;
                  return;
                }
                if (!u2) {
                  Aa2 = 58;
                  break;
                }
                e2 = c[u2 >> 2] | 0;
                a2 = c[u2 + 16 >> 2] | 0;
                Ca2 = c[u2 + 32 >> 2] | 0;
                j2 = (c[k >> 2] = e2, +g[k >> 2]);
                m2 = (c[k >> 2] = a2, +g[k >> 2]);
                o2 = (c[k >> 2] = Ca2, +g[k >> 2]);
                f2 = l2;
                l2 = Ca2;
                D2 = h2;
              }
            while (0);
            if ((Aa2 | 0) == 58) {
              ca2 = (c[k >> 2] = a2, +g[k >> 2]);
              o2 = (c[k >> 2] = f2, +g[k >> 2]);
              D2 = (c[k >> 2] = e2, +g[k >> 2]);
              j2 = ca2 * +g[Fa2 + 48 >> 2] + o2 * +g[E2 >> 2] + D2 * fa2;
              e2 = (g[k >> 2] = j2, c[k >> 2] | 0);
              m2 = ca2 * +g[Fa2 + 48 + 16 >> 2] + o2 * +g[Fa2 + 48 + 20 >> 2] + D2 * ha2;
              a2 = (g[k >> 2] = m2, c[k >> 2] | 0);
              D2 = ca2 * +g[Fa2 + 48 + 32 >> 2] + o2 * +g[Fa2 + 48 + 36 >> 2] + D2 * na2;
              o2 = D2;
              f2 = l2;
              l2 = (g[k >> 2] = D2, c[k >> 2] | 0);
              D2 = h2;
            }
            if (!f2) {
              Ba2 = a2;
              Ca2 = l2;
            } else {
              e2 = (g[k >> 2] = -j2, c[k >> 2] | 0);
              Ba2 = (g[k >> 2] = -m2, c[k >> 2] | 0);
              Ca2 = (g[k >> 2] = -o2, c[k >> 2] | 0);
            }
            if ((n2 | 0) > 6) {
              C2 = (c[k >> 2] = e2, +g[k >> 2]);
              B2 = (c[k >> 2] = Ba2, +g[k >> 2]);
              A2 = (c[k >> 2] = Ca2, +g[k >> 2]);
              j2 = +g[Fa2 + 48 >> 2];
              t2 = +g[Fa2 + 48 + 16 >> 2];
              w2 = +g[Fa2 + 48 + 32 >> 2];
              v2 = (C2 * j2 + B2 * t2 + A2 * w2 > 0 ? 1 : -1) * ((ia2 + ka2) * 2 * 0.5);
              z2 = +g[E2 >> 2];
              y2 = +g[Fa2 + 48 + 20 >> 2];
              h2 = +g[Fa2 + 48 + 36 >> 2];
              s2 = (C2 * z2 + B2 * y2 + A2 * h2 > 0 ? 1 : -1) * ((ja2 + la2) * 2 * 0.5);
              x2 = (C2 * fa2 + B2 * ha2 + A2 * na2 > 0 ? 1 : -1) * (ma2 * 0.5);
              z2 = +g[b2 + 48 >> 2] + v2 * j2 + s2 * z2 + x2 * fa2;
              y2 = +g[b2 + 52 >> 2] + v2 * t2 + s2 * y2 + x2 * ha2;
              x2 = +g[b2 + 56 >> 2] + v2 * w2 + s2 * h2 + x2 * na2;
              c[Fa2 + 528 >> 2] = c[b2 + 112 >> 2];
              c[Fa2 + 528 + 4 >> 2] = c[b2 + 112 + 4 >> 2];
              c[Fa2 + 528 + 8 >> 2] = c[b2 + 112 + 8 >> 2];
              h2 = (C2 * za2 + B2 * ta2 + A2 * va2 > 0 ? -1 : 1) * ((qa2 + sa2) * 2 * 0.5);
              s2 = (C2 * ya2 + B2 * oa2 + A2 * ua2 > 0 ? -1 : 1) * ((ra2 + pa2) * 2 * 0.5);
              w2 = +g[Fa2 + 528 + 4 >> 2] + h2 * ta2 + s2 * oa2;
              v2 = +g[Fa2 + 528 + 8 >> 2] + h2 * va2 + s2 * ua2;
              t2 = (C2 * xa2 + B2 * Da2 + A2 * Ea2 > 0 ? -1 : 1) * (wa2 * 0.5);
              s2 = +g[Fa2 + 528 >> 2] + h2 * za2 + s2 * ya2 + t2 * xa2;
              g[Fa2 + 528 >> 2] = s2;
              g[Fa2 + 528 + 4 >> 2] = w2 + t2 * Da2;
              g[Fa2 + 528 + 8 >> 2] = v2 + t2 * Ea2;
              Ca2 = n2 + -7 | 0;
              h2 = +g[Fa2 + 48 + (((Ca2 | 0) / 3 | 0) << 2) >> 2];
              j2 = +g[Fa2 + 48 + (((Ca2 | 0) / 3 | 0) + 4 << 2) >> 2];
              m2 = +g[Fa2 + 48 + (((Ca2 | 0) / 3 | 0) + 8 << 2) >> 2];
              p2 = +g[Fa2 + (((Ca2 | 0) % 3 | 0) << 2) >> 2];
              q2 = +g[Fa2 + (((Ca2 | 0) % 3 | 0) + 4 << 2) >> 2];
              r2 = +g[Fa2 + (((Ca2 | 0) % 3 | 0) + 8 << 2) >> 2];
              o2 = 1 - (h2 * p2 + j2 * q2 + m2 * r2) * (h2 * p2 + j2 * q2 + m2 * r2);
              if (!(o2 <= 9999999747378752e-20))
                h2 = (((s2 - z2) * h2 + (w2 + t2 * Da2 - y2) * j2 + (v2 + t2 * Ea2 - x2) * m2) * (h2 * p2 + j2 * q2 + m2 * r2) - ((s2 - z2) * p2 + (w2 + t2 * Da2 - y2) * q2 + (v2 + t2 * Ea2 - x2) * r2)) * (1 / o2);
              else
                h2 = 0;
              g[Fa2 + 528 >> 2] = s2 + h2 * p2;
              g[Fa2 + 528 + 4 >> 2] = w2 + t2 * Da2 + h2 * q2;
              g[Fa2 + 528 + 8 >> 2] = v2 + t2 * Ea2 + h2 * r2;
              Ca2 = c[(c[d2 >> 2] | 0) + 16 >> 2] | 0;
              g[Fa2 + 456 >> 2] = -C2;
              g[Fa2 + 456 + 4 >> 2] = -B2;
              g[Fa2 + 456 + 8 >> 2] = -A2;
              g[Fa2 + 456 + 12 >> 2] = 0;
              Yb[Ca2 & 15](d2, Fa2 + 456 | 0, Fa2 + 528 | 0, D2);
              i = Fa2;
              return;
            }
            da2 = (n2 | 0) < 4;
            fa2 = (c[k >> 2] = e2, +g[k >> 2]);
            if (da2) {
              l2 = Fa2 + 48 | 0;
              _2 = Fa2;
              Q2 = Fa2 + 484 | 0;
              u2 = Fa2 + 472 | 0;
              ca2 = fa2;
              f2 = Ca2;
              e2 = Ba2;
              ga2 = b2 + 48 | 0;
              a2 = b2 + 112 | 0;
            } else {
              e2 = (g[k >> 2] = -(c[k >> 2] = Ba2, +g[k >> 2]), c[k >> 2] | 0);
              l2 = Fa2;
              _2 = Fa2 + 48 | 0;
              Q2 = Fa2 + 472 | 0;
              u2 = Fa2 + 484 | 0;
              ca2 = -fa2;
              f2 = (g[k >> 2] = -(c[k >> 2] = Ca2, +g[k >> 2]), c[k >> 2] | 0);
              ga2 = b2 + 112 | 0;
              a2 = b2 + 48 | 0;
            }
            ba2 = (c[k >> 2] = e2, +g[k >> 2]);
            aa2 = (c[k >> 2] = f2, +g[k >> 2]);
            h2 = ca2 * +g[_2 >> 2] + ba2 * +g[_2 + 16 >> 2] + aa2 * +g[_2 + 32 >> 2];
            g[Fa2 + 440 >> 2] = h2;
            j2 = ca2 * +g[_2 + 4 >> 2] + ba2 * +g[_2 + 20 >> 2] + aa2 * +g[_2 + 36 >> 2];
            g[Fa2 + 440 + 4 >> 2] = j2;
            p2 = ca2 * +g[_2 + 8 >> 2] + ba2 * +g[_2 + 24 >> 2] + aa2 * +g[_2 + 40 >> 2];
            g[Fa2 + 440 + 8 >> 2] = p2;
            h2 = +N(+h2);
            j2 = +N(+j2);
            p2 = +N(+p2);
            e2 = j2 > h2 ? j2 > p2 ? 1 : 2 : h2 > p2 ? 0 : 2;
            V2 = j2 > h2 ? 0 : h2 > p2 & 1;
            Y2 = (j2 > h2 ? j2 > p2 : h2 > p2) ? 2 : 1;
            p2 = +g[u2 + (e2 << 2) >> 2];
            h2 = +g[a2 >> 2] - +g[ga2 >> 2];
            j2 = p2 * +g[_2 + (e2 << 2) >> 2];
            m2 = +g[a2 + 4 >> 2];
            ea2 = ga2 + 4 | 0;
            o2 = +g[ea2 >> 2];
            if (+g[Fa2 + 440 + (e2 << 2) >> 2] < 0) {
              $2 = h2 + j2;
              Z2 = m2 - o2 + p2 * +g[_2 + ((e2 | 4) << 2) >> 2];
              X2 = +g[a2 + 8 >> 2] - +g[ga2 + 8 >> 2] + p2 * +g[_2 + ((e2 | 8) << 2) >> 2];
            } else {
              $2 = h2 - j2;
              Z2 = m2 - o2 - p2 * +g[_2 + ((e2 | 4) << 2) >> 2];
              X2 = +g[a2 + 8 >> 2] - +g[ga2 + 8 >> 2] - p2 * +g[_2 + ((e2 | 8) << 2) >> 2];
            }
            K2 = (da2 ? -1 : -4) + n2 | 0;
            switch (K2 | 0) {
              case 0: {
                e2 = 1;
                f2 = 2;
                break;
              }
              case 1: {
                e2 = 0;
                f2 = 2;
                break;
              }
              default: {
                e2 = 0;
                f2 = 1;
              }
            }
            J2 = l2 + (e2 << 2) | 0;
            T2 = +g[J2 >> 2];
            R2 = +g[J2 + 16 >> 2];
            S2 = +g[J2 + 32 >> 2];
            U2 = $2 * T2 + Z2 * R2 + X2 * S2;
            J2 = l2 + (f2 << 2) | 0;
            M2 = +g[J2 >> 2];
            A2 = +g[J2 + 16 >> 2];
            B2 = +g[J2 + 32 >> 2];
            P2 = $2 * M2 + Z2 * A2 + X2 * B2;
            J2 = _2 + (V2 << 2) | 0;
            D2 = +g[J2 >> 2];
            y2 = +g[J2 + 16 >> 2];
            z2 = +g[J2 + 32 >> 2];
            L2 = _2 + (Y2 << 2) | 0;
            C2 = +g[L2 >> 2];
            w2 = +g[L2 + 16 >> 2];
            x2 = +g[L2 + 32 >> 2];
            Da2 = +g[u2 + (V2 << 2) >> 2];
            Ea2 = +g[u2 + (Y2 << 2) >> 2];
            za2 = (T2 * C2 + R2 * w2 + S2 * x2) * Ea2;
            Ea2 = (M2 * C2 + A2 * w2 + B2 * x2) * Ea2;
            g[Fa2 + 408 >> 2] = U2 - (T2 * D2 + R2 * y2 + S2 * z2) * Da2 - za2;
            g[Fa2 + 408 + 4 >> 2] = P2 - (M2 * D2 + A2 * y2 + B2 * z2) * Da2 - Ea2;
            g[Fa2 + 408 + 8 >> 2] = U2 - (T2 * D2 + R2 * y2 + S2 * z2) * Da2 + za2;
            g[Fa2 + 408 + 12 >> 2] = P2 - (M2 * D2 + A2 * y2 + B2 * z2) * Da2 + Ea2;
            g[Fa2 + 408 + 16 >> 2] = U2 + (T2 * D2 + R2 * y2 + S2 * z2) * Da2 + za2;
            g[Fa2 + 408 + 20 >> 2] = P2 + (M2 * D2 + A2 * y2 + B2 * z2) * Da2 + Ea2;
            g[Fa2 + 408 + 24 >> 2] = U2 + (T2 * D2 + R2 * y2 + S2 * z2) * Da2 - za2;
            g[Fa2 + 408 + 28 >> 2] = P2 + (M2 * D2 + A2 * y2 + B2 * z2) * Da2 - Ea2;
            c[Fa2 + 400 >> 2] = c[Q2 + (e2 << 2) >> 2];
            c[Fa2 + 400 + 4 >> 2] = c[Q2 + (f2 << 2) >> 2];
            I2 = 0;
            f2 = 4;
            b2 = Fa2 + 408 | 0;
            H2 = Fa2 + 336 | 0;
            a:
              while (1) {
                F2 = Fa2 + 400 + (I2 << 2) | 0;
                G2 = 1 - I2 | 0;
                do
                  if ((f2 | 0) > 0) {
                    a2 = 0;
                    E2 = b2;
                    e2 = H2;
                    while (1) {
                      l2 = E2 + (I2 << 2) | 0;
                      h2 = +g[l2 >> 2];
                      j2 = +g[F2 >> 2];
                      if (j2 > -h2) {
                        c[e2 >> 2] = c[E2 >> 2];
                        c[e2 + 4 >> 2] = c[E2 + 4 >> 2];
                        a2 = a2 + 1 | 0;
                        if (a2 & 8 | 0) {
                          f2 = a2;
                          e2 = H2;
                          break a;
                        }
                        h2 = +g[l2 >> 2];
                        j2 = +g[F2 >> 2];
                        n2 = e2 + 8 | 0;
                      } else
                        n2 = e2;
                      u2 = (f2 | 0) > 1;
                      l2 = E2;
                      E2 = E2 + 8 | 0;
                      e2 = u2 ? E2 : b2;
                      m2 = +g[e2 + (I2 << 2) >> 2];
                      if (j2 > -h2 ^ j2 > -m2) {
                        Ea2 = +g[l2 + (G2 << 2) >> 2];
                        g[n2 + (G2 << 2) >> 2] = Ea2 + (-j2 - h2) * ((+g[e2 + (G2 << 2) >> 2] - Ea2) / (m2 - h2));
                        g[n2 + (I2 << 2) >> 2] = -+g[F2 >> 2];
                        e2 = a2 + 1 | 0;
                        if (!(e2 & 8)) {
                          a2 = e2;
                          e2 = n2 + 8 | 0;
                        } else {
                          f2 = e2;
                          e2 = H2;
                          break a;
                        }
                      } else
                        e2 = n2;
                      if (!u2)
                        break;
                      else
                        f2 = f2 + -1 | 0;
                    }
                    e2 = (H2 | 0) == (Fa2 + 336 | 0) ? Fa2 + 528 | 0 : Fa2 + 336 | 0;
                    if ((a2 | 0) <= 0) {
                      f2 = 0;
                      break;
                    }
                    E2 = a2;
                    f2 = 0;
                    b2 = H2;
                    a2 = e2;
                    while (1) {
                      l2 = b2 + (I2 << 2) | 0;
                      h2 = +g[l2 >> 2];
                      j2 = +g[F2 >> 2];
                      if (h2 < j2) {
                        c[a2 >> 2] = c[b2 >> 2];
                        c[a2 + 4 >> 2] = c[b2 + 4 >> 2];
                        f2 = f2 + 1 | 0;
                        if (f2 & 8 | 0)
                          break a;
                        h2 = +g[l2 >> 2];
                        j2 = +g[F2 >> 2];
                        a2 = a2 + 8 | 0;
                      }
                      u2 = (E2 | 0) > 1;
                      n2 = b2;
                      b2 = b2 + 8 | 0;
                      l2 = u2 ? b2 : H2;
                      m2 = +g[l2 + (I2 << 2) >> 2];
                      if (h2 < j2 ^ m2 < j2) {
                        Ea2 = +g[n2 + (G2 << 2) >> 2];
                        g[a2 + (G2 << 2) >> 2] = Ea2 + (j2 - h2) * ((+g[l2 + (G2 << 2) >> 2] - Ea2) / (m2 - h2));
                        c[a2 + (I2 << 2) >> 2] = c[F2 >> 2];
                        f2 = f2 + 1 | 0;
                        if (!(f2 & 8))
                          a2 = a2 + 8 | 0;
                        else
                          break a;
                      }
                      if (!u2)
                        break;
                      else
                        E2 = E2 + -1 | 0;
                    }
                  } else {
                    e2 = (H2 | 0) == (Fa2 + 336 | 0) ? Fa2 + 528 | 0 : Fa2 + 336 | 0;
                    f2 = 0;
                  }
                while (0);
                I2 = I2 + 1 | 0;
                if ((I2 | 0) >= 2)
                  break;
                else {
                  b2 = e2;
                  H2 = (e2 | 0) == (Fa2 + 336 | 0) ? Fa2 + 528 | 0 : Fa2 + 336 | 0;
                }
              }
            if ((e2 | 0) != (Fa2 + 336 | 0))
              bH(Fa2 + 336 | 0, e2 | 0, f2 << 3 | 0) | 0;
            if ((f2 | 0) >= 1) {
              v2 = 1 / ((T2 * D2 + R2 * y2 + S2 * z2) * (M2 * C2 + A2 * w2 + B2 * x2) - (M2 * D2 + A2 * y2 + B2 * z2) * (T2 * C2 + R2 * w2 + S2 * x2));
              t2 = +g[Q2 + (K2 << 2) >> 2];
              s2 = +g[J2 >> 2];
              p2 = +g[L2 >> 2];
              q2 = +g[_2 + ((V2 | 4) << 2) >> 2];
              r2 = +g[_2 + ((Y2 | 4) << 2) >> 2];
              o2 = +g[_2 + ((V2 | 8) << 2) >> 2];
              m2 = +g[_2 + ((Y2 | 8) << 2) >> 2];
              a2 = 0;
              e2 = 0;
              do {
                _2 = e2 << 1;
                h2 = +g[Fa2 + 336 + (_2 << 2) >> 2];
                j2 = +g[Fa2 + 336 + ((_2 | 1) << 2) >> 2];
                ya2 = (M2 * C2 + A2 * w2 + B2 * x2) * v2 * (h2 - U2) - (T2 * C2 + R2 * w2 + S2 * x2) * v2 * (j2 - P2);
                Ea2 = (T2 * D2 + R2 * y2 + S2 * z2) * v2 * (j2 - P2) - (M2 * D2 + A2 * y2 + B2 * z2) * v2 * (h2 - U2);
                _2 = a2 * 3 | 0;
                za2 = $2 + ya2 * s2 + Ea2 * p2;
                g[Fa2 + 240 + (_2 << 2) >> 2] = za2;
                Da2 = Z2 + ya2 * q2 + Ea2 * r2;
                g[Fa2 + 240 + (_2 + 1 << 2) >> 2] = Da2;
                Ea2 = X2 + ya2 * o2 + Ea2 * m2;
                g[Fa2 + 240 + (_2 + 2 << 2) >> 2] = Ea2;
                Ea2 = t2 - (ca2 * za2 + ba2 * Da2 + aa2 * Ea2);
                g[Fa2 + 208 + (a2 << 2) >> 2] = Ea2;
                if (Ea2 >= 0) {
                  _2 = a2 << 1;
                  g[Fa2 + 336 + (_2 << 2) >> 2] = h2;
                  g[Fa2 + 336 + ((_2 | 1) << 2) >> 2] = j2;
                  a2 = a2 + 1 | 0;
                }
                e2 = e2 + 1 | 0;
              } while ((e2 | 0) != (f2 | 0));
              b:
                do
                  if ((a2 | 0) >= 1) {
                    E2 = (a2 | 0) < 4 ? a2 : 4;
                    E2 = (E2 | 0) < 1 ? 1 : E2;
                    if ((a2 | 0) <= (E2 | 0))
                      if (da2) {
                        f2 = ga2 + 8 | 0;
                        j2 = -(c[k >> 2] = Ba2, +g[k >> 2]);
                        h2 = -(c[k >> 2] = Ca2, +g[k >> 2]);
                        e2 = 0;
                        while (1) {
                          Ca2 = e2 * 3 | 0;
                          g[Fa2 + 528 >> 2] = +g[Fa2 + 240 + (Ca2 << 2) >> 2] + +g[ga2 >> 2];
                          g[Fa2 + 528 + 4 >> 2] = +g[Fa2 + 240 + (Ca2 + 1 << 2) >> 2] + +g[ea2 >> 2];
                          g[Fa2 + 528 + 8 >> 2] = +g[Fa2 + 240 + (Ca2 + 2 << 2) >> 2] + +g[f2 >> 2];
                          Ca2 = c[(c[d2 >> 2] | 0) + 16 >> 2] | 0;
                          g[Fa2 + 192 >> 2] = -fa2;
                          g[Fa2 + 192 + 4 >> 2] = j2;
                          g[Fa2 + 192 + 8 >> 2] = h2;
                          g[Fa2 + 192 + 12 >> 2] = 0;
                          Yb[Ca2 & 15](d2, Fa2 + 192 | 0, Fa2 + 528 | 0, -+g[Fa2 + 208 + (e2 << 2) >> 2]);
                          e2 = e2 + 1 | 0;
                          if ((e2 | 0) == (a2 | 0))
                            break b;
                        }
                      } else {
                        f2 = ga2 + 8 | 0;
                        j2 = (c[k >> 2] = Ba2, +g[k >> 2]);
                        h2 = (c[k >> 2] = Ca2, +g[k >> 2]);
                        e2 = 0;
                        while (1) {
                          Ca2 = e2 * 3 | 0;
                          Ea2 = +g[Fa2 + 208 + (e2 << 2) >> 2];
                          g[Fa2 + 528 >> 2] = +g[Fa2 + 240 + (Ca2 << 2) >> 2] + +g[ga2 >> 2] - fa2 * Ea2;
                          g[Fa2 + 528 + 4 >> 2] = +g[Fa2 + 240 + (Ca2 + 1 << 2) >> 2] + +g[ea2 >> 2] - j2 * Ea2;
                          g[Fa2 + 528 + 8 >> 2] = +g[Fa2 + 240 + (Ca2 + 2 << 2) >> 2] + +g[f2 >> 2] - h2 * Ea2;
                          Ca2 = c[(c[d2 >> 2] | 0) + 16 >> 2] | 0;
                          g[Fa2 + 176 >> 2] = -fa2;
                          g[Fa2 + 176 + 4 >> 2] = -j2;
                          g[Fa2 + 176 + 8 >> 2] = -h2;
                          g[Fa2 + 176 + 12 >> 2] = 0;
                          Yb[Ca2 & 15](d2, Fa2 + 176 | 0, Fa2 + 528 | 0, -Ea2);
                          e2 = e2 + 1 | 0;
                          if ((e2 | 0) == (a2 | 0))
                            break b;
                        }
                      }
                    c:
                      do
                        if ((a2 | 0) > 1) {
                          f2 = 1;
                          l2 = 0;
                          j2 = +g[Fa2 + 208 >> 2];
                          while (1) {
                            h2 = +g[Fa2 + 208 + (f2 << 2) >> 2];
                            e2 = h2 > j2;
                            l2 = e2 ? f2 : l2;
                            f2 = f2 + 1 | 0;
                            if ((f2 | 0) == (a2 | 0))
                              break;
                            else
                              j2 = e2 ? h2 : j2;
                          }
                          switch (a2 | 0) {
                            case 1: {
                              e2 = Fa2 + 144 | 0;
                              f2 = Fa2 + 144 | 0;
                              a2 = 1;
                              Aa2 = 111;
                              break c;
                            }
                            case 2: {
                              e2 = Fa2 + 144 | 0;
                              f2 = Fa2 + 144 | 0;
                              a2 = 2;
                              j2 = (+g[Fa2 + 336 >> 2] + +g[Fa2 + 336 + 8 >> 2]) * 0.5;
                              h2 = (+g[Fa2 + 336 + 4 >> 2] + +g[Fa2 + 336 + 12 >> 2]) * 0.5;
                              Aa2 = 116;
                              break c;
                            }
                            default: {
                            }
                          }
                          e2 = a2 + -1 | 0;
                          h2 = 0;
                          j2 = 0;
                          r2 = 0;
                          f2 = 0;
                          do {
                            _2 = f2 << 1;
                            ya2 = +g[Fa2 + 336 + (_2 << 2) >> 2];
                            za2 = +g[Fa2 + 336 + (_2 + 3 << 2) >> 2];
                            Da2 = +g[Fa2 + 336 + (_2 + 2 << 2) >> 2];
                            Ea2 = +g[Fa2 + 336 + ((_2 | 1) << 2) >> 2];
                            h2 = h2 + (ya2 * za2 - Da2 * Ea2);
                            j2 = j2 + (ya2 + Da2) * (ya2 * za2 - Da2 * Ea2);
                            r2 = r2 + (za2 + Ea2) * (ya2 * za2 - Da2 * Ea2);
                            f2 = f2 + 1 | 0;
                          } while ((f2 | 0) != (e2 | 0));
                          _2 = a2 << 1;
                          m2 = +g[Fa2 + 336 + (_2 + -2 << 2) >> 2];
                          o2 = +g[Fa2 + 336 + 4 >> 2];
                          p2 = +g[Fa2 + 336 >> 2];
                          q2 = +g[Fa2 + 336 + (_2 + -1 << 2) >> 2];
                          h2 = h2 + (m2 * o2 - p2 * q2);
                          if (+N(+h2) > 11920928955078125e-23)
                            h2 = 1 / (h2 * 3);
                          else
                            h2 = 999999984306749400;
                          if ((a2 | 0) > 0) {
                            u2 = Fa2 + 144 | 0;
                            f2 = Fa2 + 144 | 0;
                            n2 = Fa2 + 528 | 0;
                            j2 = h2 * (j2 + (m2 * o2 - p2 * q2) * (m2 + p2));
                            h2 = h2 * (r2 + (m2 * o2 - p2 * q2) * (q2 + o2));
                            Aa2 = 119;
                            break;
                          }
                          e2 = Fa2 + 144 | 0;
                          f2 = 0;
                          u2 = a2;
                        } else {
                          e2 = Fa2 + 144 | 0;
                          f2 = Fa2 + 144 | 0;
                          l2 = 0;
                          Aa2 = 111;
                        }
                      while (0);
                    if ((Aa2 | 0) == 111) {
                      j2 = +g[Fa2 + 336 >> 2];
                      h2 = +g[Fa2 + 336 + 4 >> 2];
                      Aa2 = 116;
                    }
                    if ((Aa2 | 0) == 116) {
                      u2 = e2;
                      n2 = Fa2 + 528 | 0;
                      Aa2 = 119;
                    }
                    if ((Aa2 | 0) == 119) {
                      e2 = 0;
                      do {
                        Aa2 = e2 << 1;
                        g[Fa2 + 528 + (e2 << 2) >> 2] = +W(+(+g[Fa2 + 336 + ((Aa2 | 1) << 2) >> 2] - h2), +(+g[Fa2 + 336 + (Aa2 << 2) >> 2] - j2));
                        e2 = e2 + 1 | 0;
                      } while ((e2 | 0) != (a2 | 0));
                      e2 = 0;
                      do {
                        c[Fa2 + 496 + (e2 << 2) >> 2] = 1;
                        e2 = e2 + 1 | 0;
                      } while ((e2 | 0) != (a2 | 0));
                      e2 = u2;
                      f2 = 1;
                      u2 = a2;
                    }
                    a2 = Fa2 + 496 + (l2 << 2) | 0;
                    c[a2 >> 2] = 0;
                    c[e2 >> 2] = l2;
                    d:
                      do
                        if ((E2 | 0) > 1) {
                          o2 = +g[Fa2 + 528 + (l2 << 2) >> 2];
                          if (f2) {
                            f2 = Fa2 + 144 + 4 | 0;
                            n2 = 1;
                          } else {
                            e2 = Fa2 + 144 + 4 | 0;
                            f2 = 1;
                            while (1) {
                              c[e2 >> 2] = l2;
                              c[a2 >> 2] = 0;
                              f2 = f2 + 1 | 0;
                              if ((f2 | 0) == (E2 | 0))
                                break d;
                              else
                                e2 = e2 + 4 | 0;
                            }
                          }
                          while (1) {
                            m2 = 6.2831854820251465 / +(E2 | 0) * +(n2 | 0) + o2;
                            m2 = m2 > 3.1415927410125732 ? m2 + -6.2831854820251465 : m2;
                            c[f2 >> 2] = l2;
                            e2 = l2;
                            a2 = 0;
                            j2 = 1e9;
                            while (1) {
                              do
                                if (!(c[Fa2 + 496 + (a2 << 2) >> 2] | 0))
                                  h2 = j2;
                                else {
                                  h2 = +N(+(+g[Fa2 + 528 + (a2 << 2) >> 2] - m2));
                                  h2 = h2 > 3.1415927410125732 ? 6.2831854820251465 - h2 : h2;
                                  if (!(h2 < j2)) {
                                    h2 = j2;
                                    break;
                                  }
                                  c[f2 >> 2] = a2;
                                  e2 = a2;
                                }
                              while (0);
                              a2 = a2 + 1 | 0;
                              if ((a2 | 0) == (u2 | 0))
                                break;
                              else
                                j2 = h2;
                            }
                            c[Fa2 + 496 + (e2 << 2) >> 2] = 0;
                            n2 = n2 + 1 | 0;
                            if ((n2 | 0) == (E2 | 0))
                              break;
                            else
                              f2 = f2 + 4 | 0;
                          }
                        }
                      while (0);
                    if ((E2 | 0) > 0) {
                      f2 = ga2 + 8 | 0;
                      j2 = (c[k >> 2] = Ba2, +g[k >> 2]);
                      h2 = (c[k >> 2] = Ca2, +g[k >> 2]);
                      if (da2) {
                        e2 = 0;
                        do {
                          Ca2 = c[Fa2 + 144 + (e2 << 2) >> 2] | 0;
                          g[Fa2 + 528 >> 2] = +g[Fa2 + 240 + (Ca2 * 3 << 2) >> 2] + +g[ga2 >> 2];
                          g[Fa2 + 528 + 4 >> 2] = +g[Fa2 + 240 + ((Ca2 * 3 | 0) + 1 << 2) >> 2] + +g[ea2 >> 2];
                          g[Fa2 + 528 + 8 >> 2] = +g[Fa2 + 240 + ((Ca2 * 3 | 0) + 2 << 2) >> 2] + +g[f2 >> 2];
                          Ba2 = c[(c[d2 >> 2] | 0) + 16 >> 2] | 0;
                          g[Fa2 + 128 >> 2] = -fa2;
                          g[Fa2 + 128 + 4 >> 2] = -j2;
                          g[Fa2 + 128 + 8 >> 2] = -h2;
                          g[Fa2 + 128 + 12 >> 2] = 0;
                          Yb[Ba2 & 15](d2, Fa2 + 128 | 0, Fa2 + 528 | 0, -+g[Fa2 + 208 + (Ca2 << 2) >> 2]);
                          e2 = e2 + 1 | 0;
                        } while ((e2 | 0) < (E2 | 0));
                      } else {
                        e2 = 0;
                        do {
                          Ba2 = c[Fa2 + 144 + (e2 << 2) >> 2] | 0;
                          ya2 = +g[Fa2 + 240 + (Ba2 * 3 << 2) >> 2] + +g[ga2 >> 2];
                          g[Fa2 + 528 >> 2] = ya2;
                          za2 = +g[Fa2 + 240 + ((Ba2 * 3 | 0) + 1 << 2) >> 2] + +g[ea2 >> 2];
                          g[Fa2 + 528 + 4 >> 2] = za2;
                          Da2 = +g[Fa2 + 240 + ((Ba2 * 3 | 0) + 2 << 2) >> 2] + +g[f2 >> 2];
                          g[Fa2 + 528 + 8 >> 2] = Da2;
                          Ca2 = c[(c[d2 >> 2] | 0) + 16 >> 2] | 0;
                          g[Fa2 + 112 >> 2] = -fa2;
                          g[Fa2 + 112 + 4 >> 2] = -j2;
                          g[Fa2 + 112 + 8 >> 2] = -h2;
                          g[Fa2 + 112 + 12 >> 2] = 0;
                          Ea2 = +g[Fa2 + 208 + (Ba2 << 2) >> 2];
                          g[Fa2 + 96 >> 2] = ya2 - fa2 * Ea2;
                          g[Fa2 + 96 + 4 >> 2] = za2 - Ea2 * j2;
                          g[Fa2 + 96 + 8 >> 2] = Da2 - Ea2 * h2;
                          g[Fa2 + 96 + 12 >> 2] = 0;
                          Yb[Ca2 & 15](d2, Fa2 + 112 | 0, Fa2 + 96 | 0, -Ea2);
                          e2 = e2 + 1 | 0;
                        } while ((e2 | 0) < (E2 | 0));
                      }
                    }
                  }
                while (0);
            }
            i = Fa2;
            return;
          }
          function ye(b2) {
            b2 = b2 | 0;
            var d2 = 0;
            c[b2 >> 2] = 3064;
            d2 = c[b2 + 20 >> 2] | 0;
            if (d2 | 0) {
              if (a[b2 + 24 >> 0] | 0) {
                c[5638] = (c[5638] | 0) + 1;
                rG(c[d2 + -4 >> 2] | 0);
              }
              c[b2 + 20 >> 2] = 0;
            }
            a[b2 + 24 >> 0] = 1;
            c[b2 + 20 >> 2] = 0;
            c[b2 + 12 >> 2] = 0;
            c[b2 + 16 >> 2] = 0;
            return;
          }
          function ze(b2) {
            b2 = b2 | 0;
            var d2 = 0;
            c[b2 >> 2] = 3064;
            d2 = c[b2 + 20 >> 2] | 0;
            if (!d2) {
              rG(b2);
              return;
            }
            if (!(a[b2 + 24 >> 0] | 0)) {
              rG(b2);
              return;
            }
            c[5638] = (c[5638] | 0) + 1;
            rG(c[d2 + -4 >> 2] | 0);
            rG(b2);
            return;
          }
          function Ae(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0;
            f2 = i;
            i = i + 16 | 0;
            c[f2 >> 2] = a2;
            c[f2 + 4 >> 2] = e2;
            a2 = c[a2 + 72 + ((c[(c[b2 + 4 >> 2] | 0) + 4 >> 2] | 0) * 144 | 0) + (c[(c[d2 + 4 >> 2] | 0) + 4 >> 2] << 2) >> 2] | 0;
            a2 = zb[c[(c[a2 >> 2] | 0) + 8 >> 2] & 31](a2, f2, b2, d2) | 0;
            i = f2;
            return a2 | 0;
          }
          function Be(b2, d2, e2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0;
            n2 = i;
            i = i + 16 | 0;
            c[4989] = (c[4989] | 0) + 1;
            if (!(c[b2 + 4 >> 2] & 2))
              f2 = 6988;
            else {
              f2 = c[d2 + 192 >> 2] | 0;
              o2 = +Tb[c[(c[f2 >> 2] | 0) + 20 >> 2] & 1](f2, 0.019999999552965164);
              g[n2 + 4 >> 2] = o2;
              f2 = c[e2 + 192 >> 2] | 0;
              k2 = +Tb[c[(c[f2 >> 2] | 0) + 20 >> 2] & 1](f2, 0.019999999552965164);
              g[n2 >> 2] = k2;
              f2 = o2 < k2 ? n2 + 4 | 0 : n2;
            }
            j2 = c[f2 >> 2] | 0;
            o2 = +g[d2 + 184 >> 2];
            k2 = +g[e2 + 184 >> 2];
            k2 = o2 < k2 ? o2 : k2;
            f2 = c[b2 + 68 >> 2] | 0;
            h2 = c[f2 + 8 >> 2] | 0;
            if (!h2) {
              if (c[b2 + 4 >> 2] & 4 | 0) {
                b2 = 0;
                i = n2;
                return b2 | 0;
              }
              c[5637] = (c[5637] | 0) + 1;
              f2 = qG(791) | 0;
              if (!f2)
                l2 = 0;
              else {
                c[(f2 + 4 + 15 & -16) + -4 >> 2] = f2;
                l2 = f2 + 4 + 15 & -16;
              }
            } else {
              l2 = c[f2 + 12 >> 2] | 0;
              c[f2 + 12 >> 2] = c[l2 >> 2];
              c[f2 + 8 >> 2] = h2 + -1;
            }
            c[l2 >> 2] = 1025;
            c[l2 + 116 >> 2] = 0;
            a[l2 + 120 >> 0] = 0;
            f2 = l2 + 124 | 0;
            c[f2 >> 2] = 0;
            c[f2 + 4 >> 2] = 0;
            c[f2 + 8 >> 2] = 0;
            c[f2 + 12 >> 2] = 0;
            c[f2 + 16 >> 2] = 0;
            c[f2 + 20 >> 2] = 0;
            c[f2 + 24 >> 2] = 0;
            c[f2 + 28 >> 2] = 0;
            c[l2 + 300 >> 2] = 0;
            a[l2 + 304 >> 0] = 0;
            f2 = l2 + 308 | 0;
            c[f2 >> 2] = 0;
            c[f2 + 4 >> 2] = 0;
            c[f2 + 8 >> 2] = 0;
            c[f2 + 12 >> 2] = 0;
            c[f2 + 16 >> 2] = 0;
            c[f2 + 20 >> 2] = 0;
            c[f2 + 24 >> 2] = 0;
            c[f2 + 28 >> 2] = 0;
            c[l2 + 484 >> 2] = 0;
            a[l2 + 488 >> 0] = 0;
            f2 = l2 + 492 | 0;
            c[f2 >> 2] = 0;
            c[f2 + 4 >> 2] = 0;
            c[f2 + 8 >> 2] = 0;
            c[f2 + 12 >> 2] = 0;
            c[f2 + 16 >> 2] = 0;
            c[f2 + 20 >> 2] = 0;
            c[f2 + 24 >> 2] = 0;
            c[f2 + 28 >> 2] = 0;
            c[l2 + 668 >> 2] = 0;
            a[l2 + 672 >> 0] = 0;
            f2 = l2 + 676 | 0;
            c[f2 >> 2] = 0;
            c[f2 + 4 >> 2] = 0;
            c[f2 + 8 >> 2] = 0;
            c[f2 + 12 >> 2] = 0;
            c[f2 + 16 >> 2] = 0;
            c[f2 + 20 >> 2] = 0;
            c[f2 + 24 >> 2] = 0;
            c[f2 + 28 >> 2] = 0;
            c[l2 + 740 >> 2] = d2;
            c[l2 + 744 >> 2] = e2;
            c[l2 + 748 >> 2] = 0;
            c[l2 + 752 >> 2] = j2;
            g[l2 + 756 >> 2] = k2;
            d2 = l2;
            f2 = c[b2 + 12 >> 2] | 0;
            c[l2 + 768 >> 2] = f2;
            if ((f2 | 0) == (c[b2 + 16 >> 2] | 0) ? (m2 = f2 | 0 ? f2 << 1 : 1, (f2 | 0) < (m2 | 0)) : 0) {
              if (!m2)
                j2 = 0;
              else {
                c[5637] = (c[5637] | 0) + 1;
                f2 = qG((m2 << 2 | 3) + 16 | 0) | 0;
                if (!f2)
                  f2 = 0;
                else {
                  c[(f2 + 4 + 15 & -16) + -4 >> 2] = f2;
                  f2 = f2 + 4 + 15 & -16;
                }
                j2 = f2;
                f2 = c[b2 + 12 >> 2] | 0;
              }
              if ((f2 | 0) > 0) {
                h2 = 0;
                do {
                  c[j2 + (h2 << 2) >> 2] = c[(c[b2 + 20 >> 2] | 0) + (h2 << 2) >> 2];
                  h2 = h2 + 1 | 0;
                } while ((h2 | 0) != (f2 | 0));
              }
              h2 = c[b2 + 20 >> 2] | 0;
              if (h2) {
                if (a[b2 + 24 >> 0] | 0) {
                  c[5638] = (c[5638] | 0) + 1;
                  rG(c[h2 + -4 >> 2] | 0);
                  f2 = c[b2 + 12 >> 2] | 0;
                }
                c[b2 + 20 >> 2] = 0;
              }
              a[b2 + 24 >> 0] = 1;
              c[b2 + 20 >> 2] = j2;
              c[b2 + 16 >> 2] = m2;
            }
            c[(c[b2 + 20 >> 2] | 0) + (f2 << 2) >> 2] = d2;
            c[b2 + 12 >> 2] = f2 + 1;
            b2 = l2;
            i = n2;
            return b2 | 0;
          }
          function Ce(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, g2 = 0;
            c[4989] = (c[4989] | 0) + -1;
            tb[c[(c[a2 >> 2] | 0) + 20 >> 2] & 127](a2, b2);
            e2 = c[b2 + 768 >> 2] | 0;
            d2 = (c[a2 + 12 >> 2] | 0) + -1 | 0;
            g2 = c[a2 + 20 >> 2] | 0;
            f2 = c[g2 + (e2 << 2) >> 2] | 0;
            c[g2 + (e2 << 2) >> 2] = c[g2 + (d2 << 2) >> 2];
            c[(c[a2 + 20 >> 2] | 0) + (d2 << 2) >> 2] = f2;
            c[(c[(c[a2 + 20 >> 2] | 0) + (e2 << 2) >> 2] | 0) + 768 >> 2] = e2;
            c[a2 + 12 >> 2] = d2;
            a2 = c[a2 + 68 >> 2] | 0;
            if (!b2)
              return;
            g2 = c[a2 + 16 >> 2] | 0;
            if (g2 >>> 0 <= b2 >>> 0 ? (g2 + (_(c[a2 >> 2] | 0, c[a2 + 4 >> 2] | 0) | 0) | 0) >>> 0 > b2 >>> 0 : 0) {
              c[b2 >> 2] = c[a2 + 12 >> 2];
              c[a2 + 12 >> 2] = b2;
              c[a2 + 8 >> 2] = (c[a2 + 8 >> 2] | 0) + 1;
              return;
            }
            c[5638] = (c[5638] | 0) + 1;
            rG(c[b2 + -4 >> 2] | 0);
            return;
          }
          function De(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c[b2 + 748 >> 2] = 0;
            return;
          }
          function Ee(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            a:
              do
                switch (c[b2 + 216 >> 2] | 0) {
                  case 2:
                  case 5: {
                    switch (c[d2 + 216 >> 2] | 0) {
                      case 2:
                      case 5: {
                        b2 = 0;
                        break;
                      }
                      default:
                        break a;
                    }
                    return b2 | 0;
                  }
                  default: {
                  }
                }
              while (0);
            if (!((c[b2 + 260 >> 2] | 0) != 0 ? !(Ob[c[(c[b2 >> 2] | 0) + 12 >> 2] & 31](b2, d2) | 0) : 0)) {
              if (!(c[d2 + 260 >> 2] | 0)) {
                a2 = 1;
                return a2 | 0;
              }
              if (Ob[c[(c[d2 >> 2] | 0) + 12 >> 2] & 31](d2, b2) | 0) {
                a2 = 1;
                return a2 | 0;
              }
            }
            a2 = 0;
            return a2 | 0;
          }
          function Fe(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            a2 = c[b2 + 204 >> 2] | 0;
            if (a2 & 4 | 0) {
              d2 = 0;
              return d2 | 0;
            }
            b2 = c[d2 + 204 >> 2] | 0;
            if (b2 & 4 | 0) {
              d2 = 0;
              return d2 | 0;
            }
            if (!(a2 & 3)) {
              d2 = 1;
              return d2 | 0;
            }
            d2 = (b2 & 3 | 0) == 0;
            return d2 | 0;
          }
          function Ge(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0;
            f2 = i;
            i = i + 16 | 0;
            c[f2 >> 2] = 3136;
            c[f2 + 4 >> 2] = d2;
            c[f2 + 8 >> 2] = a2;
            Zb[c[(c[b2 >> 2] | 0) + 48 >> 2] & 127](b2, f2, e2);
            i = f2;
            return;
          }
          function He(a2) {
            a2 = a2 | 0;
            rG(a2);
            return;
          }
          function Ie(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0;
            d2 = c[a2 + 8 >> 2] | 0;
            Zb[c[d2 + 60 >> 2] & 127](b2, d2, c[a2 + 4 >> 2] | 0);
            return 0;
          }
          function Je(a2) {
            a2 = a2 | 0;
            return c[a2 + 12 >> 2] | 0;
          }
          function Ke(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            return c[(c[a2 + 20 >> 2] | 0) + (b2 << 2) >> 2] | 0;
          }
          function Le(a2) {
            a2 = a2 | 0;
            if (!(c[a2 + 12 >> 2] | 0)) {
              a2 = 0;
              return a2 | 0;
            }
            a2 = c[a2 + 20 >> 2] | 0;
            return a2 | 0;
          }
          function Me(a2) {
            a2 = a2 | 0;
            return c[a2 + 68 >> 2] | 0;
          }
          function Ne(a2) {
            a2 = a2 | 0;
            return c[a2 + 68 >> 2] | 0;
          }
          function Oe(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0;
            a2 = c[a2 + 64 >> 2] | 0;
            d2 = c[a2 + 8 >> 2] | 0;
            if (d2 | 0) {
              b2 = c[a2 + 12 >> 2] | 0;
              c[a2 + 12 >> 2] = c[b2 >> 2];
              c[a2 + 8 >> 2] = d2 + -1;
              return b2 | 0;
            }
            c[5637] = (c[5637] | 0) + 1;
            a2 = qG(b2 + 19 | 0) | 0;
            if (!a2) {
              b2 = 0;
              return b2 | 0;
            }
            c[(a2 + 4 + 15 & -16) + -4 >> 2] = a2;
            b2 = a2 + 4 + 15 & -16;
            return b2 | 0;
          }
          function Pe(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0;
            a2 = c[a2 + 64 >> 2] | 0;
            if (!b2)
              return;
            d2 = c[a2 + 16 >> 2] | 0;
            if (d2 >>> 0 <= b2 >>> 0 ? (d2 + (_(c[a2 >> 2] | 0, c[a2 + 4 >> 2] | 0) | 0) | 0) >>> 0 > b2 >>> 0 : 0) {
              c[b2 >> 2] = c[a2 + 12 >> 2];
              c[a2 + 12 >> 2] = b2;
              c[a2 + 8 >> 2] = (c[a2 + 8 >> 2] | 0) + 1;
              return;
            }
            c[5638] = (c[5638] | 0) + 1;
            rG(c[b2 + -4 >> 2] | 0);
            return;
          }
          function Qe(b2, d2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0;
            c[b2 >> 2] = 3064;
            c[b2 + 4 >> 2] = 2;
            a[b2 + 24 >> 0] = 1;
            c[b2 + 20 >> 2] = 0;
            c[b2 + 12 >> 2] = 0;
            c[b2 + 16 >> 2] = 0;
            c[b2 + 28 >> 2] = 4460;
            c[b2 + 5256 >> 2] = d2;
            c[b2 + 60 >> 2] = 70;
            c[b2 + 64 >> 2] = vb[c[(c[d2 >> 2] | 0) + 12 >> 2] & 127](d2) | 0;
            c[b2 + 68 >> 2] = vb[c[(c[d2 >> 2] | 0) + 8 >> 2] & 127](d2) | 0;
            d2 = 0;
            do {
              e2 = 0;
              do {
                f2 = c[b2 + 5256 >> 2] | 0;
                c[b2 + 72 + (d2 * 144 | 0) + (e2 << 2) >> 2] = Eb[c[(c[f2 >> 2] | 0) + 16 >> 2] & 63](f2, d2, e2) | 0;
                e2 = e2 + 1 | 0;
              } while ((e2 | 0) < 36);
              d2 = d2 + 1 | 0;
            } while ((d2 | 0) < 36);
            return;
          }
          function Re(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0;
            l2 = i;
            i = i + 80 | 0;
            h2 = c[c[a2 >> 2] >> 2] | 0;
            j2 = c[c[a2 + 4 >> 2] >> 2] | 0;
            if (!(Eb[c[(c[b2 >> 2] | 0) + 24 >> 2] & 63](b2, h2, j2) | 0)) {
              i = l2;
              return;
            }
            f2 = c[h2 + 192 >> 2] | 0;
            c[l2 + 56 >> 2] = 0;
            c[l2 + 56 + 4 >> 2] = f2;
            c[l2 + 56 + 8 >> 2] = h2;
            c[l2 + 56 + 12 >> 2] = h2 + 4;
            c[l2 + 56 + 16 >> 2] = -1;
            c[l2 + 56 + 20 >> 2] = -1;
            f2 = c[j2 + 192 >> 2] | 0;
            c[l2 + 32 >> 2] = 0;
            c[l2 + 32 + 4 >> 2] = f2;
            c[l2 + 32 + 8 >> 2] = j2;
            c[l2 + 32 + 12 >> 2] = j2 + 4;
            c[l2 + 32 + 16 >> 2] = -1;
            c[l2 + 32 + 20 >> 2] = -1;
            f2 = c[a2 + 8 >> 2] | 0;
            if (!f2) {
              f2 = zb[c[(c[b2 >> 2] | 0) + 8 >> 2] & 31](b2, l2 + 56 | 0, l2 + 32 | 0, 0) | 0;
              c[a2 + 8 >> 2] = f2;
              if (f2 | 0)
                k2 = 4;
            } else
              k2 = 4;
            if ((k2 | 0) == 4) {
              c[l2 >> 2] = 4460;
              c[l2 + 4 >> 2] = 0;
              c[l2 + 8 >> 2] = l2 + 56;
              c[l2 + 12 >> 2] = l2 + 32;
              if ((c[d2 + 8 >> 2] | 0) != 1) {
                e2 = +Db[c[(c[f2 >> 2] | 0) + 12 >> 2] & 15](f2, h2, j2, d2, l2);
                if (+g[d2 + 12 >> 2] > e2)
                  g[d2 + 12 >> 2] = e2;
              } else
                pb[c[(c[f2 >> 2] | 0) + 8 >> 2] & 31](f2, l2 + 56 | 0, l2 + 32 | 0, d2, l2);
            }
            i = l2;
            return;
          }
          function Se(b2) {
            b2 = b2 | 0;
            var d2 = 0;
            c[b2 >> 2] = 3156;
            d2 = c[b2 + 276 >> 2] | 0;
            if (d2 | 0) {
              if (a[b2 + 280 >> 0] | 0) {
                c[5638] = (c[5638] | 0) + 1;
                rG(c[d2 + -4 >> 2] | 0);
              }
              c[b2 + 276 >> 2] = 0;
            }
            a[b2 + 280 >> 0] = 1;
            c[b2 + 276 >> 2] = 0;
            c[b2 + 268 >> 2] = 0;
            c[b2 + 272 >> 2] = 0;
            return;
          }
          function Te(b2) {
            b2 = b2 | 0;
            var d2 = 0;
            c[b2 >> 2] = 3156;
            d2 = c[b2 + 276 >> 2] | 0;
            if (d2 | 0) {
              if (a[b2 + 280 >> 0] | 0) {
                c[5638] = (c[5638] | 0) + 1;
                rG(c[d2 + -4 >> 2] | 0);
              }
              c[b2 + 276 >> 2] = 0;
            }
            a[b2 + 280 >> 0] = 1;
            c[b2 + 276 >> 2] = 0;
            c[b2 + 268 >> 2] = 0;
            c[b2 + 272 >> 2] = 0;
            c[5638] = (c[5638] | 0) + 1;
            rG(c[b2 + -4 >> 2] | 0);
            return;
          }
          function Ue(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c[a2 + 284 >> 2] = (c[a2 + 284 >> 2] | 0) + 1;
            c[a2 + 192 >> 2] = b2;
            c[a2 + 200 >> 2] = b2;
            return;
          }
          function Ve(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0;
            e2 = c[a2 + 268 >> 2] | 0;
            a:
              do
                if ((e2 | 0) > 0) {
                  d2 = c[a2 + 276 >> 2] | 0;
                  a2 = 0;
                  while (1) {
                    if ((c[d2 + (a2 << 2) >> 2] | 0) == (b2 | 0))
                      break a;
                    a2 = a2 + 1 | 0;
                    if ((a2 | 0) >= (e2 | 0)) {
                      a2 = e2;
                      break;
                    }
                  }
                } else
                  a2 = e2;
              while (0);
            return (a2 | 0) >= (e2 | 0) | 0;
          }
          function We(a2) {
            a2 = a2 | 0;
            return 256;
          }
          function Xe(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0;
            c[b2 + 16 >> 2] = c[a2 + 4 >> 2];
            c[b2 + 20 >> 2] = c[a2 + 8 >> 2];
            c[b2 + 24 >> 2] = c[a2 + 12 >> 2];
            c[b2 + 28 >> 2] = c[a2 + 16 >> 2];
            c[b2 + 32 >> 2] = c[a2 + 20 >> 2];
            c[b2 + 36 >> 2] = c[a2 + 24 >> 2];
            c[b2 + 40 >> 2] = c[a2 + 28 >> 2];
            c[b2 + 44 >> 2] = c[a2 + 32 >> 2];
            c[b2 + 48 >> 2] = c[a2 + 36 >> 2];
            c[b2 + 52 >> 2] = c[a2 + 40 >> 2];
            c[b2 + 56 >> 2] = c[a2 + 44 >> 2];
            c[b2 + 60 >> 2] = c[a2 + 48 >> 2];
            c[b2 + 64 >> 2] = c[a2 + 52 >> 2];
            c[b2 + 68 >> 2] = c[a2 + 56 >> 2];
            c[b2 + 72 >> 2] = c[a2 + 60 >> 2];
            c[b2 + 76 >> 2] = c[a2 + 64 >> 2];
            c[b2 + 80 >> 2] = c[a2 + 68 >> 2];
            c[b2 + 84 >> 2] = c[a2 + 72 >> 2];
            c[b2 + 88 >> 2] = c[a2 + 76 >> 2];
            c[b2 + 92 >> 2] = c[a2 + 80 >> 2];
            c[b2 + 96 >> 2] = c[a2 + 84 >> 2];
            c[b2 + 100 >> 2] = c[a2 + 88 >> 2];
            c[b2 + 104 >> 2] = c[a2 + 92 >> 2];
            c[b2 + 108 >> 2] = c[a2 + 96 >> 2];
            c[b2 + 112 >> 2] = c[a2 + 100 >> 2];
            c[b2 + 116 >> 2] = c[a2 + 104 >> 2];
            c[b2 + 120 >> 2] = c[a2 + 108 >> 2];
            c[b2 + 124 >> 2] = c[a2 + 112 >> 2];
            c[b2 + 128 >> 2] = c[a2 + 116 >> 2];
            c[b2 + 132 >> 2] = c[a2 + 120 >> 2];
            c[b2 + 136 >> 2] = c[a2 + 124 >> 2];
            c[b2 + 140 >> 2] = c[a2 + 128 >> 2];
            c[b2 + 144 >> 2] = c[a2 + 132 >> 2];
            c[b2 + 148 >> 2] = c[a2 + 136 >> 2];
            c[b2 + 152 >> 2] = c[a2 + 140 >> 2];
            c[b2 + 156 >> 2] = c[a2 + 144 >> 2];
            c[b2 + 160 >> 2] = c[a2 + 148 >> 2];
            c[b2 + 164 >> 2] = c[a2 + 152 >> 2];
            c[b2 + 168 >> 2] = c[a2 + 156 >> 2];
            c[b2 + 172 >> 2] = c[a2 + 160 >> 2];
            c[b2 + 176 >> 2] = c[a2 + 164 >> 2];
            c[b2 + 180 >> 2] = c[a2 + 168 >> 2];
            c[b2 + 184 >> 2] = c[a2 + 172 >> 2];
            c[b2 + 188 >> 2] = c[a2 + 176 >> 2];
            c[b2 + 224 >> 2] = c[a2 + 180 >> 2];
            c[b2 + 192 >> 2] = c[a2 + 184 >> 2];
            c[b2 >> 2] = 0;
            c[b2 + 4 >> 2] = Ob[c[(c[d2 >> 2] | 0) + 28 >> 2] & 31](d2, c[a2 + 192 >> 2] | 0) | 0;
            c[b2 + 8 >> 2] = 0;
            c[b2 + 228 >> 2] = c[a2 + 204 >> 2];
            c[b2 + 232 >> 2] = c[a2 + 208 >> 2];
            c[b2 + 236 >> 2] = c[a2 + 212 >> 2];
            c[b2 + 240 >> 2] = c[a2 + 216 >> 2];
            c[b2 + 196 >> 2] = c[a2 + 220 >> 2];
            c[b2 + 200 >> 2] = c[a2 + 224 >> 2];
            c[b2 + 204 >> 2] = c[a2 + 232 >> 2];
            c[b2 + 208 >> 2] = c[a2 + 228 >> 2];
            c[b2 + 244 >> 2] = c[a2 + 236 >> 2];
            e2 = Ob[c[(c[d2 >> 2] | 0) + 40 >> 2] & 31](d2, a2) | 0;
            f2 = Ob[c[(c[d2 >> 2] | 0) + 28 >> 2] & 31](d2, e2) | 0;
            c[b2 + 12 >> 2] = f2;
            if (!f2) {
              d2 = a2 + 248 | 0;
              d2 = c[d2 >> 2] | 0;
              f2 = b2 + 212 | 0;
              c[f2 >> 2] = d2;
              f2 = a2 + 252 | 0;
              f2 = c[f2 >> 2] | 0;
              d2 = b2 + 216 | 0;
              c[d2 >> 2] = f2;
              d2 = a2 + 256 | 0;
              d2 = c[d2 >> 2] | 0;
              f2 = b2 + 220 | 0;
              c[f2 >> 2] = d2;
              a2 = a2 + 260 | 0;
              a2 = c[a2 >> 2] | 0;
              f2 = b2 + 248 | 0;
              c[f2 >> 2] = a2;
              return 9250;
            }
            tb[c[(c[d2 >> 2] | 0) + 48 >> 2] & 127](d2, e2);
            d2 = a2 + 248 | 0;
            d2 = c[d2 >> 2] | 0;
            f2 = b2 + 212 | 0;
            c[f2 >> 2] = d2;
            f2 = a2 + 252 | 0;
            f2 = c[f2 >> 2] | 0;
            d2 = b2 + 216 | 0;
            c[d2 >> 2] = f2;
            d2 = a2 + 256 | 0;
            d2 = c[d2 >> 2] | 0;
            f2 = b2 + 220 | 0;
            c[f2 >> 2] = d2;
            a2 = a2 + 260 | 0;
            a2 = c[a2 >> 2] | 0;
            f2 = b2 + 248 | 0;
            c[f2 >> 2] = a2;
            return 9250;
          }
          function Ye(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0;
            e2 = vb[c[(c[a2 >> 2] | 0) + 16 >> 2] & 127](a2) | 0;
            e2 = Eb[c[(c[b2 >> 2] | 0) + 16 >> 2] & 63](b2, e2, 1) | 0;
            d2 = Eb[c[(c[a2 >> 2] | 0) + 20 >> 2] & 63](a2, c[e2 + 8 >> 2] | 0, b2) | 0;
            pb[c[(c[b2 >> 2] | 0) + 20 >> 2] & 31](b2, e2, d2, 1245859651, a2);
            return;
          }
          function Ze(b2) {
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0;
            c[b2 >> 2] = 3192;
            e2 = c[b2 + 8 >> 2] | 0;
            d2 = c[b2 + 16 >> 2] | 0;
            if ((e2 | 0) > 0) {
              h2 = 0;
              do {
                f2 = (c[d2 + (h2 << 2) >> 2] | 0) + 188 | 0;
                g2 = c[f2 >> 2] | 0;
                if (g2) {
                  e2 = c[b2 + 68 >> 2] | 0;
                  e2 = vb[c[(c[e2 >> 2] | 0) + 36 >> 2] & 127](e2) | 0;
                  Zb[c[(c[e2 >> 2] | 0) + 40 >> 2] & 127](e2, g2, c[b2 + 24 >> 2] | 0);
                  e2 = c[b2 + 68 >> 2] | 0;
                  Zb[c[(c[e2 >> 2] | 0) + 12 >> 2] & 127](e2, g2, c[b2 + 24 >> 2] | 0);
                  c[f2 >> 2] = 0;
                  e2 = c[b2 + 8 >> 2] | 0;
                  d2 = c[b2 + 16 >> 2] | 0;
                }
                h2 = h2 + 1 | 0;
              } while ((h2 | 0) < (e2 | 0));
            }
            if (!d2) {
              a[b2 + 20 >> 0] = 1;
              c[b2 + 16 >> 2] = 0;
              c[b2 + 8 >> 2] = 0;
              b2 = b2 + 12 | 0;
              c[b2 >> 2] = 0;
              return;
            }
            if (a[b2 + 20 >> 0] | 0) {
              c[5638] = (c[5638] | 0) + 1;
              rG(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 16 >> 2] = 0;
            a[b2 + 20 >> 0] = 1;
            c[b2 + 16 >> 2] = 0;
            c[b2 + 8 >> 2] = 0;
            b2 = b2 + 12 | 0;
            c[b2 >> 2] = 0;
            return;
          }
          function _e(a2) {
            a2 = a2 | 0;
            Ze(a2);
            rG(a2);
            return;
          }
          function $e(b2) {
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0;
            s2 = i;
            i = i + 64 | 0;
            fs(9296);
            d2 = c[b2 + 8 >> 2] | 0;
            if ((d2 | 0) > 0) {
              p2 = 0;
              do {
                o2 = c[(c[b2 + 16 >> 2] | 0) + (p2 << 2) >> 2] | 0;
                if (!(a[b2 + 76 >> 0] | 0))
                  switch (c[o2 + 216 >> 2] | 0) {
                    case 2:
                    case 5:
                      break;
                    default:
                      r2 = 11;
                  }
                else
                  r2 = 11;
                if ((r2 | 0) == 11) {
                  r2 = 0;
                  d2 = c[o2 + 192 >> 2] | 0;
                  bc[c[(c[d2 >> 2] | 0) + 8 >> 2] & 127](d2, o2 + 4 | 0, s2 + 48 | 0, s2 + 32 | 0);
                  k2 = +g[s2 + 48 >> 2] + -0.019999999552965164;
                  g[s2 + 48 >> 2] = k2;
                  l2 = +g[s2 + 48 + 4 >> 2] + -0.019999999552965164;
                  g[s2 + 48 + 4 >> 2] = l2;
                  j2 = +g[s2 + 48 + 8 >> 2] + -0.019999999552965164;
                  g[s2 + 48 + 8 >> 2] = j2;
                  e2 = +g[s2 + 32 >> 2] + 0.019999999552965164;
                  g[s2 + 32 >> 2] = e2;
                  f2 = +g[s2 + 32 + 4 >> 2] + 0.019999999552965164;
                  g[s2 + 32 + 4 >> 2] = f2;
                  h2 = +g[s2 + 32 + 8 >> 2] + 0.019999999552965164;
                  g[s2 + 32 + 8 >> 2] = h2;
                  if (((a[b2 + 44 >> 0] | 0) != 0 ? (c[o2 + 236 >> 2] | 0) == 2 : 0) ? (c[o2 + 204 >> 2] & 3 | 0) == 0 : 0) {
                    d2 = c[o2 + 192 >> 2] | 0;
                    bc[c[(c[d2 >> 2] | 0) + 8 >> 2] & 127](d2, o2 + 68 | 0, s2 + 16 | 0, s2);
                    k2 = +g[s2 + 16 >> 2] + -0.019999999552965164;
                    g[s2 + 16 >> 2] = k2;
                    l2 = +g[s2 + 16 + 4 >> 2] + -0.019999999552965164;
                    g[s2 + 16 + 4 >> 2] = l2;
                    f2 = +g[s2 + 16 + 8 >> 2] + -0.019999999552965164;
                    g[s2 + 16 + 8 >> 2] = f2;
                    h2 = +g[s2 >> 2] + 0.019999999552965164;
                    g[s2 >> 2] = h2;
                    j2 = +g[s2 + 4 >> 2] + 0.019999999552965164;
                    g[s2 + 4 >> 2] = j2;
                    m2 = +g[s2 + 8 >> 2] + 0.019999999552965164;
                    g[s2 + 8 >> 2] = m2;
                    e2 = +g[s2 + 48 >> 2];
                    if (k2 < e2)
                      g[s2 + 48 >> 2] = k2;
                    else
                      k2 = e2;
                    e2 = +g[s2 + 48 + 4 >> 2];
                    if (l2 < e2)
                      g[s2 + 48 + 4 >> 2] = l2;
                    else
                      l2 = e2;
                    e2 = +g[s2 + 48 + 8 >> 2];
                    if (f2 < e2) {
                      g[s2 + 48 + 8 >> 2] = f2;
                      n2 = f2;
                    } else
                      n2 = e2;
                    e2 = +g[s2 + 16 + 12 >> 2];
                    if (e2 < +g[s2 + 48 + 12 >> 2])
                      g[s2 + 48 + 12 >> 2] = e2;
                    e2 = +g[s2 + 32 >> 2];
                    if (e2 < h2) {
                      g[s2 + 32 >> 2] = h2;
                      e2 = h2;
                    }
                    f2 = +g[s2 + 32 + 4 >> 2];
                    if (f2 < j2) {
                      g[s2 + 32 + 4 >> 2] = j2;
                      f2 = j2;
                    }
                    h2 = +g[s2 + 32 + 8 >> 2];
                    if (h2 < m2) {
                      g[s2 + 32 + 8 >> 2] = m2;
                      h2 = m2;
                    }
                    j2 = +g[s2 + 12 >> 2];
                    if (+g[s2 + 32 + 12 >> 2] < j2)
                      g[s2 + 32 + 12 >> 2] = j2;
                    j2 = n2;
                  }
                  d2 = c[b2 + 68 >> 2] | 0;
                  if ((c[o2 + 204 >> 2] & 1 | 0) == 0 ? (k2 = e2 - k2, m2 = f2 - l2, n2 = h2 - j2, !(k2 * k2 + m2 * m2 + n2 * n2 < 999999995904)) : 0) {
                    if ((c[o2 + 216 >> 2] & -2 | 0) != 4)
                      c[o2 + 216 >> 2] = 5;
                    if (a[9308] | 0 ? (q2 = c[b2 + 72 >> 2] | 0, q2 | 0) : 0) {
                      a[9308] = 0;
                      tb[c[(c[q2 >> 2] | 0) + 44 >> 2] & 127](q2, 9309);
                      o2 = c[b2 + 72 >> 2] | 0;
                      tb[c[(c[o2 >> 2] | 0) + 44 >> 2] & 127](o2, 9358);
                      o2 = c[b2 + 72 >> 2] | 0;
                      tb[c[(c[o2 >> 2] | 0) + 44 >> 2] & 127](o2, 9426);
                      o2 = c[b2 + 72 >> 2] | 0;
                      tb[c[(c[o2 >> 2] | 0) + 44 >> 2] & 127](o2, 9491);
                    }
                  } else
                    pb[c[(c[d2 >> 2] | 0) + 16 >> 2] & 31](d2, c[o2 + 188 >> 2] | 0, s2 + 48 | 0, s2 + 32 | 0, c[b2 + 24 >> 2] | 0);
                  d2 = c[b2 + 8 >> 2] | 0;
                }
                p2 = p2 + 1 | 0;
              } while ((p2 | 0) < (d2 | 0));
            }
            d2 = c[2006] | 0;
            r2 = (c[d2 + 16 >> 2] | 0) + -1 | 0;
            c[d2 + 16 >> 2] = r2;
            if (r2 | 0) {
              i = s2;
              return;
            }
            do
              if (c[d2 + 4 >> 2] | 0) {
                kb(s2 + 48 | 0, 0) | 0;
                r2 = c[5649] | 0;
                g[d2 + 8 >> 2] = +g[d2 + 8 >> 2] + +(((c[s2 + 48 + 4 >> 2] | 0) - (c[r2 + 4 >> 2] | 0) + (((c[s2 + 48 >> 2] | 0) - (c[r2 >> 2] | 0) | 0) * 1e6 | 0) - (c[d2 + 12 >> 2] | 0) | 0) >>> 0) / 1e3;
                if (!(c[d2 + 16 >> 2] | 0)) {
                  d2 = c[2006] | 0;
                  break;
                } else {
                  i = s2;
                  return;
                }
              }
            while (0);
            c[2006] = c[d2 + 20 >> 2];
            i = s2;
            return;
          }
          function af(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0;
            b2 = i;
            i = i + 16 | 0;
            fs(9500);
            d2 = c[a2 + 68 >> 2] | 0;
            tb[c[(c[d2 >> 2] | 0) + 32 >> 2] & 127](d2, c[a2 + 24 >> 2] | 0);
            a2 = c[2006] | 0;
            d2 = (c[a2 + 16 >> 2] | 0) + -1 | 0;
            c[a2 + 16 >> 2] = d2;
            if (d2 | 0) {
              i = b2;
              return;
            }
            do
              if (c[a2 + 4 >> 2] | 0) {
                kb(b2 | 0, 0) | 0;
                d2 = c[5649] | 0;
                g[a2 + 8 >> 2] = +g[a2 + 8 >> 2] + +(((c[b2 + 4 >> 2] | 0) - (c[d2 + 4 >> 2] | 0) + (((c[b2 >> 2] | 0) - (c[d2 >> 2] | 0) | 0) * 1e6 | 0) - (c[a2 + 12 >> 2] | 0) | 0) >>> 0) / 1e3;
                if (!(c[a2 + 16 >> 2] | 0)) {
                  a2 = c[2006] | 0;
                  break;
                } else {
                  i = b2;
                  return;
                }
              }
            while (0);
            c[2006] = c[a2 + 20 >> 2];
            i = b2;
            return;
          }
          function bf(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c[a2 + 72 >> 2] = b2;
            return;
          }
          function cf(a2) {
            a2 = a2 | 0;
            return c[a2 + 72 >> 2] | 0;
          }
          function df(b2) {
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0;
            q2 = i;
            i = i + 192 | 0;
            if (!(vb[c[(c[b2 >> 2] | 0) + 20 >> 2] & 127](b2) | 0)) {
              i = q2;
              return;
            }
            j2 = vb[c[(c[b2 >> 2] | 0) + 20 >> 2] & 127](b2) | 0;
            tb[c[(c[j2 >> 2] | 0) + 8 >> 2] & 127](q2 + 80 | 0, j2);
            j2 = vb[c[(c[b2 >> 2] | 0) + 20 >> 2] & 127](b2) | 0;
            if (((vb[c[(c[j2 >> 2] | 0) + 56 >> 2] & 127](j2) | 0) & 8 | 0 ? (e2 = c[b2 + 24 >> 2] | 0, e2 | 0) : 0) ? (k2 = vb[c[(c[e2 >> 2] | 0) + 36 >> 2] & 127](e2) | 0, (k2 | 0) > 0) : 0) {
              h2 = 0;
              do {
                e2 = c[b2 + 24 >> 2] | 0;
                e2 = Ob[c[(c[e2 >> 2] | 0) + 40 >> 2] & 31](e2, h2) | 0;
                f2 = c[e2 + 748 >> 2] | 0;
                if ((f2 | 0) > 0) {
                  j2 = 0;
                  do {
                    r2 = vb[c[(c[b2 >> 2] | 0) + 20 >> 2] & 127](b2) | 0;
                    sb[c[(c[r2 >> 2] | 0) + 40 >> 2] & 0](r2, e2 + 4 + (j2 * 184 | 0) + 32 | 0, e2 + 4 + (j2 * 184 | 0) + 64 | 0, +g[e2 + 4 + (j2 * 184 | 0) + 80 >> 2], c[e2 + 4 + (j2 * 184 | 0) + 148 >> 2] | 0, q2 + 80 + 96 | 0);
                    j2 = j2 + 1 | 0;
                  } while ((j2 | 0) != (f2 | 0));
                }
                h2 = h2 + 1 | 0;
              } while ((h2 | 0) != (k2 | 0));
            }
            r2 = vb[c[(c[b2 >> 2] | 0) + 20 >> 2] & 127](b2) | 0;
            if ((vb[c[(c[r2 >> 2] | 0) + 56 >> 2] & 127](r2) | 0) & 3 | 0 ? (c[b2 + 8 >> 2] | 0) > 0 : 0) {
              h2 = 0;
              do {
                f2 = c[(c[b2 + 16 >> 2] | 0) + (h2 << 2) >> 2] | 0;
                if (!(c[f2 + 204 >> 2] & 32)) {
                  if (vb[c[(c[b2 >> 2] | 0) + 20 >> 2] & 127](b2) | 0 ? (r2 = vb[c[(c[b2 >> 2] | 0) + 20 >> 2] & 127](b2) | 0, (vb[c[(c[r2 >> 2] | 0) + 56 >> 2] & 127](r2) | 0) & 1 | 0) : 0) {
                    c[q2 + 64 >> 2] = 1053609165;
                    c[q2 + 64 + 4 >> 2] = 1053609165;
                    c[q2 + 64 + 8 >> 2] = 1053609165;
                    g[q2 + 64 + 12 >> 2] = 0;
                    switch (c[f2 + 216 >> 2] | 0) {
                      case 1: {
                        c[q2 + 64 >> 2] = c[q2 + 80 >> 2];
                        c[q2 + 64 + 4 >> 2] = c[q2 + 80 + 4 >> 2];
                        c[q2 + 64 + 8 >> 2] = c[q2 + 80 + 8 >> 2];
                        c[q2 + 64 + 12 >> 2] = c[q2 + 80 + 12 >> 2];
                        break;
                      }
                      case 2: {
                        c[q2 + 64 >> 2] = c[q2 + 80 + 16 >> 2];
                        c[q2 + 64 + 4 >> 2] = c[q2 + 80 + 16 + 4 >> 2];
                        c[q2 + 64 + 8 >> 2] = c[q2 + 80 + 16 + 8 >> 2];
                        c[q2 + 64 + 12 >> 2] = c[q2 + 80 + 16 + 12 >> 2];
                        break;
                      }
                      case 3: {
                        c[q2 + 64 >> 2] = c[q2 + 80 + 32 >> 2];
                        c[q2 + 64 + 4 >> 2] = c[q2 + 80 + 32 + 4 >> 2];
                        c[q2 + 64 + 8 >> 2] = c[q2 + 80 + 32 + 8 >> 2];
                        c[q2 + 64 + 12 >> 2] = c[q2 + 80 + 32 + 12 >> 2];
                        break;
                      }
                      case 4: {
                        c[q2 + 64 >> 2] = c[q2 + 80 + 48 >> 2];
                        c[q2 + 64 + 4 >> 2] = c[q2 + 80 + 48 + 4 >> 2];
                        c[q2 + 64 + 8 >> 2] = c[q2 + 80 + 48 + 8 >> 2];
                        c[q2 + 64 + 12 >> 2] = c[q2 + 80 + 48 + 12 >> 2];
                        break;
                      }
                      case 5: {
                        c[q2 + 64 >> 2] = c[q2 + 80 + 64 >> 2];
                        c[q2 + 64 + 4 >> 2] = c[q2 + 80 + 64 + 4 >> 2];
                        c[q2 + 64 + 8 >> 2] = c[q2 + 80 + 64 + 8 >> 2];
                        c[q2 + 64 + 12 >> 2] = c[q2 + 80 + 64 + 12 >> 2];
                        break;
                      }
                      default: {
                        c[q2 + 64 >> 2] = 1050253722;
                        c[q2 + 64 + 4 >> 2] = 1050253722;
                        c[q2 + 64 + 8 >> 2] = 1050253722;
                        g[q2 + 64 + 12 >> 2] = 0;
                      }
                    }
                    bc[c[(c[b2 >> 2] | 0) + 28 >> 2] & 127](b2, f2 + 4 | 0, c[f2 + 192 >> 2] | 0, q2 + 64 | 0);
                  }
                  e2 = c[b2 + 72 >> 2] | 0;
                  if (e2 | 0 ? (vb[c[(c[e2 >> 2] | 0) + 56 >> 2] & 127](e2) | 0) & 2 | 0 : 0) {
                    c[q2 + 32 >> 2] = c[q2 + 80 + 80 >> 2];
                    c[q2 + 32 + 4 >> 2] = c[q2 + 80 + 80 + 4 >> 2];
                    c[q2 + 32 + 8 >> 2] = c[q2 + 80 + 80 + 8 >> 2];
                    c[q2 + 32 + 12 >> 2] = c[q2 + 80 + 80 + 12 >> 2];
                    r2 = c[f2 + 192 >> 2] | 0;
                    bc[c[(c[r2 >> 2] | 0) + 8 >> 2] & 127](r2, f2 + 4 | 0, q2 + 64 | 0, q2 + 48 | 0);
                    g[q2 + 64 >> 2] = +g[q2 + 64 >> 2] + -0.019999999552965164;
                    g[q2 + 64 + 4 >> 2] = +g[q2 + 64 + 4 >> 2] + -0.019999999552965164;
                    g[q2 + 64 + 8 >> 2] = +g[q2 + 64 + 8 >> 2] + -0.019999999552965164;
                    g[q2 + 48 >> 2] = +g[q2 + 48 >> 2] + 0.019999999552965164;
                    g[q2 + 48 + 4 >> 2] = +g[q2 + 48 + 4 >> 2] + 0.019999999552965164;
                    g[q2 + 48 + 8 >> 2] = +g[q2 + 48 + 8 >> 2] + 0.019999999552965164;
                    do
                      if ((a[b2 + 44 >> 0] | 0 ? (c[f2 + 236 >> 2] | 0) == 2 : 0) ? (c[f2 + 204 >> 2] & 3 | 0) == 0 : 0) {
                        r2 = c[f2 + 192 >> 2] | 0;
                        bc[c[(c[r2 >> 2] | 0) + 8 >> 2] & 127](r2, f2 + 68 | 0, q2 + 16 | 0, q2);
                        d2 = +g[q2 + 16 >> 2] + -0.019999999552965164;
                        g[q2 + 16 >> 2] = d2;
                        l2 = +g[q2 + 16 + 4 >> 2] + -0.019999999552965164;
                        g[q2 + 16 + 4 >> 2] = l2;
                        m2 = +g[q2 + 16 + 8 >> 2] + -0.019999999552965164;
                        g[q2 + 16 + 8 >> 2] = m2;
                        n2 = +g[q2 >> 2] + 0.019999999552965164;
                        g[q2 >> 2] = n2;
                        o2 = +g[q2 + 4 >> 2] + 0.019999999552965164;
                        g[q2 + 4 >> 2] = o2;
                        p2 = +g[q2 + 8 >> 2] + 0.019999999552965164;
                        g[q2 + 8 >> 2] = p2;
                        if (d2 < +g[q2 + 64 >> 2])
                          g[q2 + 64 >> 2] = d2;
                        if (l2 < +g[q2 + 64 + 4 >> 2])
                          g[q2 + 64 + 4 >> 2] = l2;
                        if (m2 < +g[q2 + 64 + 8 >> 2])
                          g[q2 + 64 + 8 >> 2] = m2;
                        d2 = +g[q2 + 16 + 12 >> 2];
                        if (d2 < +g[q2 + 64 + 12 >> 2])
                          g[q2 + 64 + 12 >> 2] = d2;
                        if (+g[q2 + 48 >> 2] < n2)
                          g[q2 + 48 >> 2] = n2;
                        if (+g[q2 + 48 + 4 >> 2] < o2)
                          g[q2 + 48 + 4 >> 2] = o2;
                        if (+g[q2 + 48 + 8 >> 2] < p2)
                          g[q2 + 48 + 8 >> 2] = p2;
                        d2 = +g[q2 + 12 >> 2];
                        if (!(+g[q2 + 48 + 12 >> 2] < d2))
                          break;
                        g[q2 + 48 + 12 >> 2] = d2;
                      }
                    while (0);
                    r2 = c[b2 + 72 >> 2] | 0;
                    bc[c[(c[r2 >> 2] | 0) + 60 >> 2] & 127](r2, q2 + 64 | 0, q2 + 48 | 0, q2 + 32 | 0);
                  }
                }
                h2 = h2 + 1 | 0;
              } while ((h2 | 0) < (c[b2 + 8 >> 2] | 0));
            }
            i = q2;
            return;
          }
          function ef(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, h2 = 0, j2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0, N2 = 0, O2 = 0, P2 = 0, Q2 = 0, R2 = 0, S2 = 0;
            u2 = i;
            i = i + 368 | 0;
            if (vb[c[(c[a2 >> 2] | 0) + 20 >> 2] & 127](a2) | 0 ? (s2 = vb[c[(c[a2 >> 2] | 0) + 20 >> 2] & 127](a2) | 0, (vb[c[(c[s2 >> 2] | 0) + 56 >> 2] & 127](s2) | 0) & 32768 | 0) : 0) {
              s2 = vb[c[(c[a2 >> 2] | 0) + 20 >> 2] & 127](a2) | 0;
              $b[c[(c[s2 >> 2] | 0) + 64 >> 2] & 7](s2, b2, 1);
            }
            f2 = c[d2 + 4 >> 2] | 0;
            switch (f2 | 0) {
              case 31: {
                f2 = c[d2 + 20 >> 2] | 0;
                if ((f2 | 0) <= 0) {
                  i = u2;
                  return;
                }
                do {
                  t2 = f2;
                  f2 = f2 + -1 | 0;
                  s2 = c[d2 + 28 >> 2] | 0;
                  J2 = +g[s2 + (f2 * 80 | 0) >> 2];
                  G2 = +g[s2 + (f2 * 80 | 0) + 4 >> 2];
                  D2 = +g[s2 + (f2 * 80 | 0) + 8 >> 2];
                  I2 = +g[s2 + (f2 * 80 | 0) + 16 >> 2];
                  F2 = +g[s2 + (f2 * 80 | 0) + 20 >> 2];
                  B2 = +g[s2 + (f2 * 80 | 0) + 24 >> 2];
                  H2 = +g[s2 + (f2 * 80 | 0) + 32 >> 2];
                  E2 = +g[s2 + (f2 * 80 | 0) + 36 >> 2];
                  z2 = +g[s2 + (f2 * 80 | 0) + 40 >> 2];
                  R2 = +g[s2 + (f2 * 80 | 0) + 48 >> 2];
                  Q2 = +g[s2 + (f2 * 80 | 0) + 52 >> 2];
                  v2 = +g[s2 + (f2 * 80 | 0) + 56 >> 2];
                  s2 = c[s2 + (f2 * 80 | 0) + 64 >> 2] | 0;
                  r2 = c[(c[a2 >> 2] | 0) + 28 >> 2] | 0;
                  P2 = +g[b2 >> 2];
                  O2 = +g[b2 + 4 >> 2];
                  N2 = +g[b2 + 8 >> 2];
                  M2 = +g[b2 + 16 >> 2];
                  L2 = +g[b2 + 20 >> 2];
                  K2 = +g[b2 + 24 >> 2];
                  C2 = +g[b2 + 32 >> 2];
                  A2 = +g[b2 + 36 >> 2];
                  y2 = +g[b2 + 40 >> 2];
                  x2 = R2 * P2 + Q2 * O2 + v2 * N2 + +g[b2 + 48 >> 2];
                  w2 = R2 * M2 + Q2 * L2 + v2 * K2 + +g[b2 + 52 >> 2];
                  v2 = R2 * C2 + Q2 * A2 + v2 * y2 + +g[b2 + 56 >> 2];
                  g[u2 + 304 >> 2] = J2 * P2 + I2 * O2 + H2 * N2;
                  g[u2 + 304 + 4 >> 2] = G2 * P2 + F2 * O2 + E2 * N2;
                  g[u2 + 304 + 8 >> 2] = D2 * P2 + B2 * O2 + z2 * N2;
                  g[u2 + 304 + 12 >> 2] = 0;
                  g[u2 + 304 + 16 >> 2] = J2 * M2 + I2 * L2 + H2 * K2;
                  g[u2 + 304 + 20 >> 2] = G2 * M2 + F2 * L2 + E2 * K2;
                  g[u2 + 304 + 24 >> 2] = D2 * M2 + B2 * L2 + z2 * K2;
                  g[u2 + 304 + 28 >> 2] = 0;
                  g[u2 + 304 + 32 >> 2] = J2 * C2 + I2 * A2 + H2 * y2;
                  g[u2 + 304 + 36 >> 2] = G2 * C2 + F2 * A2 + E2 * y2;
                  g[u2 + 304 + 40 >> 2] = D2 * C2 + B2 * A2 + z2 * y2;
                  g[u2 + 304 + 44 >> 2] = 0;
                  g[u2 + 304 + 48 >> 2] = x2;
                  g[u2 + 304 + 52 >> 2] = w2;
                  g[u2 + 304 + 56 >> 2] = v2;
                  g[u2 + 304 + 60 >> 2] = 0;
                  bc[r2 & 127](a2, u2 + 304 | 0, s2, e2);
                } while ((t2 | 0) > 1);
                i = u2;
                return;
              }
              case 0: {
                c[u2 + 288 >> 2] = c[d2 + 32 >> 2];
                c[u2 + 288 + 4 >> 2] = c[d2 + 32 + 4 >> 2];
                c[u2 + 288 + 8 >> 2] = c[d2 + 32 + 8 >> 2];
                c[u2 + 288 + 12 >> 2] = c[d2 + 32 + 12 >> 2];
                P2 = +Hb[c[(c[d2 >> 2] | 0) + 48 >> 2] & 15](d2);
                Q2 = +Hb[c[(c[d2 >> 2] | 0) + 48 >> 2] & 15](d2);
                R2 = +Hb[c[(c[d2 >> 2] | 0) + 48 >> 2] & 15](d2);
                P2 = P2 + +g[u2 + 288 >> 2];
                g[u2 + 288 >> 2] = P2;
                Q2 = Q2 + +g[u2 + 288 + 4 >> 2];
                g[u2 + 288 + 4 >> 2] = Q2;
                R2 = R2 + +g[u2 + 288 + 8 >> 2];
                g[u2 + 288 + 8 >> 2] = R2;
                a2 = vb[c[(c[a2 >> 2] | 0) + 20 >> 2] & 127](a2) | 0;
                d2 = c[(c[a2 >> 2] | 0) + 80 >> 2] | 0;
                g[u2 + 272 >> 2] = -P2;
                g[u2 + 272 + 4 >> 2] = -Q2;
                g[u2 + 272 + 8 >> 2] = -R2;
                g[u2 + 272 + 12 >> 2] = 0;
                pb[d2 & 31](a2, u2 + 272 | 0, u2 + 288 | 0, b2, e2);
                i = u2;
                return;
              }
              case 8: {
                R2 = +Hb[c[(c[d2 >> 2] | 0) + 48 >> 2] & 15](d2);
                a2 = vb[c[(c[a2 >> 2] | 0) + 20 >> 2] & 127](a2) | 0;
                yb[c[(c[a2 >> 2] | 0) + 24 >> 2] & 0](a2, R2, b2, e2);
                i = u2;
                return;
              }
              case 9: {
                f2 = c[d2 + 96 >> 2] | 0;
                if ((f2 | 0) <= 0) {
                  i = u2;
                  return;
                }
                do {
                  t2 = f2;
                  f2 = f2 + -1 | 0;
                  s2 = c[d2 + 104 >> 2] | 0;
                  D2 = +g[s2 + (f2 << 4) >> 2];
                  E2 = +g[s2 + (f2 << 4) + 4 >> 2];
                  Q2 = +g[s2 + (f2 << 4) + 8 >> 2];
                  s2 = vb[c[(c[a2 >> 2] | 0) + 20 >> 2] & 127](a2) | 0;
                  r2 = c[(c[s2 >> 2] | 0) + 24 >> 2] | 0;
                  R2 = +g[(c[d2 + 124 >> 2] | 0) + (f2 << 2) >> 2];
                  G2 = +g[b2 >> 2];
                  H2 = +g[b2 + 4 >> 2];
                  F2 = +g[b2 + 8 >> 2];
                  J2 = +g[b2 + 16 >> 2];
                  K2 = +g[b2 + 20 >> 2];
                  I2 = +g[b2 + 24 >> 2];
                  M2 = +g[b2 + 32 >> 2];
                  N2 = +g[b2 + 36 >> 2];
                  L2 = +g[b2 + 40 >> 2];
                  O2 = D2 * G2 + E2 * H2 + Q2 * F2 + +g[b2 + 48 >> 2];
                  P2 = D2 * J2 + E2 * K2 + Q2 * I2 + +g[b2 + 52 >> 2];
                  Q2 = D2 * M2 + E2 * N2 + Q2 * L2 + +g[b2 + 56 >> 2];
                  g[u2 + 192 >> 2] = G2 + H2 * 0 + F2 * 0;
                  g[u2 + 192 + 4 >> 2] = G2 * 0 + H2 + F2 * 0;
                  g[u2 + 192 + 8 >> 2] = F2 + (G2 * 0 + H2 * 0);
                  g[u2 + 192 + 12 >> 2] = 0;
                  g[u2 + 192 + 16 >> 2] = J2 + K2 * 0 + I2 * 0;
                  g[u2 + 192 + 20 >> 2] = J2 * 0 + K2 + I2 * 0;
                  g[u2 + 192 + 24 >> 2] = I2 + (J2 * 0 + K2 * 0);
                  g[u2 + 192 + 28 >> 2] = 0;
                  g[u2 + 192 + 32 >> 2] = M2 + N2 * 0 + L2 * 0;
                  g[u2 + 192 + 36 >> 2] = M2 * 0 + N2 + L2 * 0;
                  g[u2 + 192 + 40 >> 2] = L2 + (M2 * 0 + N2 * 0);
                  g[u2 + 192 + 44 >> 2] = 0;
                  g[u2 + 192 + 48 >> 2] = O2;
                  g[u2 + 192 + 52 >> 2] = P2;
                  g[u2 + 192 + 56 >> 2] = Q2;
                  g[u2 + 192 + 60 >> 2] = 0;
                  yb[r2 & 0](s2, R2, u2 + 192 | 0, e2);
                } while ((t2 | 0) > 1);
                i = u2;
                return;
              }
              case 10: {
                t2 = c[d2 + 56 >> 2] | 0;
                Q2 = +g[d2 + 32 + (((t2 + 2 | 0) % 3 | 0) << 2) >> 2];
                R2 = +g[d2 + 32 + (t2 << 2) >> 2];
                a2 = vb[c[(c[a2 >> 2] | 0) + 20 >> 2] & 127](a2) | 0;
                xb[c[(c[a2 >> 2] | 0) + 84 >> 2] & 0](a2, Q2, R2, t2, b2, e2);
                i = u2;
                return;
              }
              case 11: {
                Q2 = +g[d2 + 60 >> 2];
                R2 = +g[d2 + 64 >> 2];
                d2 = c[d2 + 72 >> 2] | 0;
                a2 = vb[c[(c[a2 >> 2] | 0) + 20 >> 2] & 127](a2) | 0;
                xb[c[(c[a2 >> 2] | 0) + 92 >> 2] & 0](a2, Q2, R2, d2, b2, e2);
                i = u2;
                return;
              }
              case 13: {
                t2 = c[d2 + 56 >> 2] | 0;
                Q2 = +Hb[c[(c[d2 >> 2] | 0) + 92 >> 2] & 15](d2);
                c[u2 + 176 >> 2] = c[d2 + 32 >> 2];
                c[u2 + 176 + 4 >> 2] = c[d2 + 32 + 4 >> 2];
                c[u2 + 176 + 8 >> 2] = c[d2 + 32 + 8 >> 2];
                c[u2 + 176 + 12 >> 2] = c[d2 + 32 + 12 >> 2];
                O2 = +Hb[c[(c[d2 >> 2] | 0) + 48 >> 2] & 15](d2);
                P2 = +Hb[c[(c[d2 >> 2] | 0) + 48 >> 2] & 15](d2);
                R2 = +Hb[c[(c[d2 >> 2] | 0) + 48 >> 2] & 15](d2);
                g[u2 + 176 >> 2] = O2 + +g[u2 + 176 >> 2];
                g[u2 + 176 + 4 >> 2] = P2 + +g[u2 + 176 + 4 >> 2];
                g[u2 + 176 + 8 >> 2] = R2 + +g[u2 + 176 + 8 >> 2];
                R2 = +g[u2 + 176 + (t2 << 2) >> 2];
                a2 = vb[c[(c[a2 >> 2] | 0) + 20 >> 2] & 127](a2) | 0;
                xb[c[(c[a2 >> 2] | 0) + 88 >> 2] & 0](a2, Q2, R2, t2, b2, e2);
                i = u2;
                return;
              }
              case 28: {
                R2 = +g[d2 + 68 >> 2];
                a2 = vb[c[(c[a2 >> 2] | 0) + 20 >> 2] & 127](a2) | 0;
                Kb[c[(c[a2 >> 2] | 0) + 96 >> 2] & 0](a2, d2 + 52 | 0, R2, b2, e2);
                i = u2;
                return;
              }
              default: {
                a:
                  do
                    if ((f2 | 0) < 7) {
                      q2 = c[d2 + 56 >> 2] | 0;
                      if (!q2) {
                        if ((vb[c[(c[d2 >> 2] | 0) + 100 >> 2] & 127](d2) | 0) <= 0)
                          break;
                        f2 = 0;
                        while (1) {
                          bc[c[(c[d2 >> 2] | 0) + 104 >> 2] & 127](d2, f2, u2 + 288 | 0, u2 + 256 | 0);
                          P2 = +g[u2 + 288 >> 2];
                          D2 = +g[b2 >> 2];
                          N2 = +g[u2 + 288 + 4 >> 2];
                          E2 = +g[b2 + 4 >> 2];
                          L2 = +g[u2 + 288 + 8 >> 2];
                          F2 = +g[b2 + 8 >> 2];
                          H2 = +g[b2 + 16 >> 2];
                          I2 = +g[b2 + 20 >> 2];
                          J2 = +g[b2 + 24 >> 2];
                          M2 = +g[b2 + 32 >> 2];
                          O2 = +g[b2 + 36 >> 2];
                          Q2 = +g[b2 + 40 >> 2];
                          G2 = +g[b2 + 48 >> 2];
                          K2 = +g[b2 + 52 >> 2];
                          R2 = +g[b2 + 56 >> 2];
                          g[u2 + 80 >> 2] = P2 * D2 + N2 * E2 + L2 * F2 + G2;
                          g[u2 + 80 + 4 >> 2] = P2 * H2 + N2 * I2 + L2 * J2 + K2;
                          g[u2 + 80 + 8 >> 2] = P2 * M2 + N2 * O2 + L2 * Q2 + R2;
                          g[u2 + 80 + 12 >> 2] = 0;
                          L2 = +g[u2 + 256 >> 2];
                          N2 = +g[u2 + 256 + 4 >> 2];
                          P2 = +g[u2 + 256 + 8 >> 2];
                          g[u2 + 48 >> 2] = L2 * D2 + N2 * E2 + P2 * F2 + G2;
                          g[u2 + 48 + 4 >> 2] = L2 * H2 + N2 * I2 + P2 * J2 + K2;
                          g[u2 + 48 + 8 >> 2] = L2 * M2 + N2 * O2 + P2 * Q2 + R2;
                          g[u2 + 48 + 12 >> 2] = 0;
                          t2 = vb[c[(c[a2 >> 2] | 0) + 20 >> 2] & 127](a2) | 0;
                          bc[c[(c[t2 >> 2] | 0) + 16 >> 2] & 127](t2, u2 + 80 | 0, u2 + 48 | 0, e2);
                          f2 = f2 + 1 | 0;
                          if ((f2 | 0) >= (vb[c[(c[d2 >> 2] | 0) + 100 >> 2] & 127](d2) | 0))
                            break a;
                        }
                      }
                      if ((c[q2 + 28 >> 2] | 0) > 0) {
                        s2 = 0;
                        do {
                          f2 = c[q2 + 36 >> 2] | 0;
                          r2 = c[f2 + (s2 * 36 | 0) + 4 >> 2] | 0;
                          b:
                            do
                              if ((r2 | 0) != 0 ? (t2 = c[f2 + (s2 * 36 | 0) + 12 >> 2] | 0, (r2 | 0) > 0) : 0) {
                                m2 = t2;
                                j2 = 0;
                                h2 = 0;
                                f2 = 0;
                                o2 = c[t2 + (r2 + -1 << 2) >> 2] | 0;
                                l2 = 0;
                                while (1) {
                                  p2 = c[m2 + (l2 << 2) >> 2] | 0;
                                  n2 = c[q2 + 16 >> 2] | 0;
                                  j2 = (g[k >> 2] = (c[k >> 2] = j2, +g[k >> 2]) + +g[n2 + (p2 << 4) >> 2], c[k >> 2] | 0);
                                  f2 = (g[k >> 2] = (c[k >> 2] = f2, +g[k >> 2]) + +g[n2 + (p2 << 4) + 4 >> 2], c[k >> 2] | 0);
                                  h2 = (g[k >> 2] = (c[k >> 2] = h2, +g[k >> 2]) + +g[n2 + (p2 << 4) + 8 >> 2], c[k >> 2] | 0);
                                  n2 = vb[c[(c[a2 >> 2] | 0) + 20 >> 2] & 127](a2) | 0;
                                  m2 = c[(c[n2 >> 2] | 0) + 16 >> 2] | 0;
                                  S2 = c[q2 + 16 >> 2] | 0;
                                  P2 = +g[S2 + (o2 << 4) >> 2];
                                  D2 = +g[b2 >> 2];
                                  N2 = +g[S2 + (o2 << 4) + 4 >> 2];
                                  E2 = +g[b2 + 4 >> 2];
                                  L2 = +g[S2 + (o2 << 4) + 8 >> 2];
                                  F2 = +g[b2 + 8 >> 2];
                                  H2 = +g[b2 + 16 >> 2];
                                  I2 = +g[b2 + 20 >> 2];
                                  J2 = +g[b2 + 24 >> 2];
                                  M2 = +g[b2 + 32 >> 2];
                                  O2 = +g[b2 + 36 >> 2];
                                  Q2 = +g[b2 + 40 >> 2];
                                  G2 = +g[b2 + 48 >> 2];
                                  K2 = +g[b2 + 52 >> 2];
                                  R2 = +g[b2 + 56 >> 2];
                                  g[u2 + 64 >> 2] = P2 * D2 + N2 * E2 + L2 * F2 + G2;
                                  g[u2 + 64 + 4 >> 2] = P2 * H2 + N2 * I2 + L2 * J2 + K2;
                                  g[u2 + 64 + 8 >> 2] = P2 * M2 + N2 * O2 + L2 * Q2 + R2;
                                  g[u2 + 64 + 12 >> 2] = 0;
                                  L2 = +g[S2 + (p2 << 4) >> 2];
                                  N2 = +g[S2 + (p2 << 4) + 4 >> 2];
                                  P2 = +g[S2 + (p2 << 4) + 8 >> 2];
                                  g[u2 + 32 >> 2] = L2 * D2 + N2 * E2 + P2 * F2 + G2;
                                  g[u2 + 32 + 4 >> 2] = L2 * H2 + N2 * I2 + P2 * J2 + K2;
                                  g[u2 + 32 + 8 >> 2] = L2 * M2 + N2 * O2 + P2 * Q2 + R2;
                                  g[u2 + 32 + 12 >> 2] = 0;
                                  bc[m2 & 127](n2, u2 + 64 | 0, u2 + 32 | 0, e2);
                                  n2 = l2 + 1 | 0;
                                  l2 = c[q2 + 36 >> 2] | 0;
                                  if ((n2 | 0) >= (c[l2 + (s2 * 36 | 0) + 4 >> 2] | 0))
                                    break b;
                                  m2 = c[l2 + (s2 * 36 | 0) + 12 >> 2] | 0;
                                  o2 = p2;
                                  l2 = n2;
                                }
                              } else {
                                j2 = 0;
                                h2 = 0;
                                f2 = 0;
                              }
                            while (0);
                          S2 = vb[c[(c[a2 >> 2] | 0) + 20 >> 2] & 127](a2) | 0;
                          if ((vb[c[(c[S2 >> 2] | 0) + 56 >> 2] & 127](S2) | 0) & 16384 | 0) {
                            O2 = 1 / +(r2 | 0) * (c[k >> 2] = h2, +g[k >> 2]);
                            L2 = 1 / +(r2 | 0) * (c[k >> 2] = f2, +g[k >> 2]);
                            I2 = 1 / +(r2 | 0) * (c[k >> 2] = j2, +g[k >> 2]);
                            c[u2 + 288 >> 2] = 1065353216;
                            c[u2 + 288 + 4 >> 2] = 1065353216;
                            c[u2 + 288 + 8 >> 2] = 0;
                            g[u2 + 288 + 12 >> 2] = 0;
                            S2 = c[q2 + 36 >> 2] | 0;
                            J2 = +g[S2 + (s2 * 36 | 0) + 20 >> 2];
                            M2 = +g[S2 + (s2 * 36 | 0) + 24 >> 2];
                            P2 = +g[S2 + (s2 * 36 | 0) + 28 >> 2];
                            S2 = vb[c[(c[a2 >> 2] | 0) + 20 >> 2] & 127](a2) | 0;
                            r2 = c[(c[S2 >> 2] | 0) + 16 >> 2] | 0;
                            A2 = +g[b2 >> 2];
                            B2 = +g[b2 + 4 >> 2];
                            C2 = +g[b2 + 8 >> 2];
                            E2 = +g[b2 + 16 >> 2];
                            F2 = +g[b2 + 20 >> 2];
                            G2 = +g[b2 + 24 >> 2];
                            K2 = +g[b2 + 32 >> 2];
                            N2 = +g[b2 + 36 >> 2];
                            Q2 = +g[b2 + 40 >> 2];
                            D2 = +g[b2 + 48 >> 2];
                            H2 = +g[b2 + 52 >> 2];
                            R2 = +g[b2 + 56 >> 2];
                            g[u2 + 16 >> 2] = I2 * A2 + L2 * B2 + O2 * C2 + D2;
                            g[u2 + 16 + 4 >> 2] = I2 * E2 + L2 * F2 + O2 * G2 + H2;
                            g[u2 + 16 + 8 >> 2] = I2 * K2 + L2 * N2 + O2 * Q2 + R2;
                            g[u2 + 16 + 12 >> 2] = 0;
                            g[u2 >> 2] = (I2 + J2) * A2 + (L2 + M2) * B2 + (O2 + P2) * C2 + D2;
                            g[u2 + 4 >> 2] = (I2 + J2) * E2 + (L2 + M2) * F2 + (O2 + P2) * G2 + H2;
                            g[u2 + 8 >> 2] = (I2 + J2) * K2 + (L2 + M2) * N2 + (O2 + P2) * Q2 + R2;
                            g[u2 + 12 >> 2] = 0;
                            bc[r2 & 127](S2, u2 + 16 | 0, u2, u2 + 288 | 0);
                          }
                          s2 = s2 + 1 | 0;
                        } while ((s2 | 0) < (c[q2 + 28 >> 2] | 0));
                      }
                    }
                  while (0);
                f2 = c[d2 + 4 >> 2] | 0;
                if ((f2 + -21 | 0) >>> 0 < 9) {
                  c[u2 + 288 >> 2] = 1566444395;
                  c[u2 + 288 + 4 >> 2] = 1566444395;
                  c[u2 + 288 + 8 >> 2] = 1566444395;
                  g[u2 + 288 + 12 >> 2] = 0;
                  c[u2 + 256 >> 2] = -581039253;
                  c[u2 + 256 + 4 >> 2] = -581039253;
                  c[u2 + 256 + 8 >> 2] = -581039253;
                  g[u2 + 256 + 12 >> 2] = 0;
                  f2 = vb[c[(c[a2 >> 2] | 0) + 20 >> 2] & 127](a2) | 0;
                  c[u2 + 80 >> 2] = 3252;
                  c[u2 + 80 + 4 >> 2] = 3276;
                  c[u2 + 80 + 8 >> 2] = f2;
                  c[u2 + 80 + 12 >> 2] = c[e2 >> 2];
                  c[u2 + 80 + 12 + 4 >> 2] = c[e2 + 4 >> 2];
                  c[u2 + 80 + 12 + 8 >> 2] = c[e2 + 8 >> 2];
                  c[u2 + 80 + 12 + 12 >> 2] = c[e2 + 12 >> 2];
                  c[u2 + 80 + 28 >> 2] = c[b2 >> 2];
                  c[u2 + 80 + 28 + 4 >> 2] = c[b2 + 4 >> 2];
                  c[u2 + 80 + 28 + 8 >> 2] = c[b2 + 8 >> 2];
                  c[u2 + 80 + 28 + 12 >> 2] = c[b2 + 12 >> 2];
                  c[u2 + 80 + 44 >> 2] = c[b2 + 16 >> 2];
                  c[u2 + 80 + 44 + 4 >> 2] = c[b2 + 16 + 4 >> 2];
                  c[u2 + 80 + 44 + 8 >> 2] = c[b2 + 16 + 8 >> 2];
                  c[u2 + 80 + 44 + 12 >> 2] = c[b2 + 16 + 12 >> 2];
                  c[u2 + 80 + 60 >> 2] = c[b2 + 32 >> 2];
                  c[u2 + 80 + 60 + 4 >> 2] = c[b2 + 32 + 4 >> 2];
                  c[u2 + 80 + 60 + 8 >> 2] = c[b2 + 32 + 8 >> 2];
                  c[u2 + 80 + 60 + 12 >> 2] = c[b2 + 32 + 12 >> 2];
                  c[u2 + 80 + 76 >> 2] = c[b2 + 48 >> 2];
                  c[u2 + 80 + 76 + 4 >> 2] = c[b2 + 48 + 4 >> 2];
                  c[u2 + 80 + 76 + 8 >> 2] = c[b2 + 48 + 8 >> 2];
                  c[u2 + 80 + 76 + 12 >> 2] = c[b2 + 48 + 12 >> 2];
                  bc[c[(c[d2 >> 2] | 0) + 64 >> 2] & 127](d2, u2 + 80 | 0, u2 + 256 | 0, u2 + 288 | 0);
                  f2 = c[d2 + 4 >> 2] | 0;
                }
                if ((f2 | 0) != 3) {
                  i = u2;
                  return;
                }
                c[u2 + 288 >> 2] = 1566444395;
                c[u2 + 288 + 4 >> 2] = 1566444395;
                c[u2 + 288 + 8 >> 2] = 1566444395;
                g[u2 + 288 + 12 >> 2] = 0;
                c[u2 + 256 >> 2] = -581039253;
                c[u2 + 256 + 4 >> 2] = -581039253;
                c[u2 + 256 + 8 >> 2] = -581039253;
                g[u2 + 256 + 12 >> 2] = 0;
                S2 = vb[c[(c[a2 >> 2] | 0) + 20 >> 2] & 127](a2) | 0;
                c[u2 + 80 >> 2] = 3252;
                c[u2 + 80 + 4 >> 2] = 3276;
                c[u2 + 80 + 8 >> 2] = S2;
                c[u2 + 80 + 12 >> 2] = c[e2 >> 2];
                c[u2 + 80 + 12 + 4 >> 2] = c[e2 + 4 >> 2];
                c[u2 + 80 + 12 + 8 >> 2] = c[e2 + 8 >> 2];
                c[u2 + 80 + 12 + 12 >> 2] = c[e2 + 12 >> 2];
                c[u2 + 80 + 28 >> 2] = c[b2 >> 2];
                c[u2 + 80 + 28 + 4 >> 2] = c[b2 + 4 >> 2];
                c[u2 + 80 + 28 + 8 >> 2] = c[b2 + 8 >> 2];
                c[u2 + 80 + 28 + 12 >> 2] = c[b2 + 12 >> 2];
                c[u2 + 80 + 44 >> 2] = c[b2 + 16 >> 2];
                c[u2 + 80 + 44 + 4 >> 2] = c[b2 + 16 + 4 >> 2];
                c[u2 + 80 + 44 + 8 >> 2] = c[b2 + 16 + 8 >> 2];
                c[u2 + 80 + 44 + 12 >> 2] = c[b2 + 16 + 12 >> 2];
                c[u2 + 80 + 60 >> 2] = c[b2 + 32 >> 2];
                c[u2 + 80 + 60 + 4 >> 2] = c[b2 + 32 + 4 >> 2];
                c[u2 + 80 + 60 + 8 >> 2] = c[b2 + 32 + 8 >> 2];
                c[u2 + 80 + 60 + 12 >> 2] = c[b2 + 32 + 12 >> 2];
                c[u2 + 80 + 76 >> 2] = c[b2 + 48 >> 2];
                c[u2 + 80 + 76 + 4 >> 2] = c[b2 + 48 + 4 >> 2];
                c[u2 + 80 + 76 + 8 >> 2] = c[b2 + 48 + 8 >> 2];
                c[u2 + 80 + 76 + 12 >> 2] = c[b2 + 48 + 12 >> 2];
                S2 = c[d2 + 96 >> 2] | 0;
                bc[c[(c[S2 >> 2] | 0) + 8 >> 2] & 127](S2, u2 + 80 + 4 | 0, u2 + 256 | 0, u2 + 288 | 0);
                i = u2;
                return;
              }
            }
          }
          function ff(a2) {
            a2 = a2 | 0;
            return;
          }
          function gf(a2) {
            a2 = a2 | 0;
            rG(a2);
            return;
          }
          function hf(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0, I2 = 0;
            d2 = i;
            i = i + 96 | 0;
            l2 = +g[b2 >> 2];
            s2 = +g[a2 + 28 >> 2];
            B2 = +g[b2 + 4 >> 2];
            D2 = +g[a2 + 32 >> 2];
            m2 = +g[b2 + 8 >> 2];
            n2 = +g[a2 + 36 >> 2];
            o2 = +g[a2 + 44 >> 2];
            p2 = +g[a2 + 48 >> 2];
            q2 = +g[a2 + 52 >> 2];
            r2 = +g[a2 + 60 >> 2];
            t2 = +g[a2 + 64 >> 2];
            u2 = +g[a2 + 68 >> 2];
            v2 = +g[a2 + 76 >> 2];
            w2 = +g[a2 + 80 >> 2];
            x2 = +g[a2 + 84 >> 2];
            g[d2 + 80 >> 2] = l2 * s2 + B2 * D2 + m2 * n2 + v2;
            g[d2 + 80 + 4 >> 2] = l2 * o2 + B2 * p2 + m2 * q2 + w2;
            g[d2 + 80 + 8 >> 2] = l2 * r2 + B2 * t2 + m2 * u2 + x2;
            g[d2 + 80 + 12 >> 2] = 0;
            y2 = +g[b2 + 16 >> 2];
            z2 = +g[b2 + 20 >> 2];
            A2 = +g[b2 + 24 >> 2];
            g[d2 + 64 >> 2] = y2 * s2 + z2 * D2 + A2 * n2 + v2;
            g[d2 + 64 + 4 >> 2] = y2 * o2 + z2 * p2 + A2 * q2 + w2;
            g[d2 + 64 + 8 >> 2] = y2 * r2 + z2 * t2 + A2 * u2 + x2;
            g[d2 + 64 + 12 >> 2] = 0;
            C2 = +g[b2 + 32 >> 2];
            E2 = +g[b2 + 36 >> 2];
            k2 = +g[b2 + 40 >> 2];
            g[d2 + 48 >> 2] = C2 * s2 + E2 * D2 + k2 * n2 + v2;
            g[d2 + 48 + 4 >> 2] = C2 * o2 + E2 * p2 + k2 * q2 + w2;
            g[d2 + 48 + 8 >> 2] = C2 * r2 + E2 * t2 + k2 * u2 + x2;
            g[d2 + 48 + 12 >> 2] = 0;
            f2 = (l2 * s2 + B2 * D2 + m2 * n2 + v2 + (y2 * s2 + z2 * D2 + A2 * n2 + v2) + (C2 * s2 + E2 * D2 + k2 * n2 + v2)) * 0.3333333432674408;
            h2 = (l2 * o2 + B2 * p2 + m2 * q2 + w2 + (y2 * o2 + z2 * p2 + A2 * q2 + w2) + (C2 * o2 + E2 * p2 + k2 * q2 + w2)) * 0.3333333432674408;
            j2 = (l2 * r2 + B2 * t2 + m2 * u2 + x2 + (y2 * r2 + z2 * t2 + A2 * u2 + x2) + (C2 * r2 + E2 * t2 + k2 * u2 + x2)) * 0.3333333432674408;
            g[d2 + 32 >> 2] = f2;
            g[d2 + 32 + 4 >> 2] = h2;
            g[d2 + 32 + 8 >> 2] = j2;
            g[d2 + 32 + 12 >> 2] = 0;
            b2 = c[a2 + 8 >> 2] | 0;
            if (!((vb[c[(c[b2 >> 2] | 0) + 56 >> 2] & 127](b2) | 0) & 16384)) {
              e2 = c[a2 + 8 >> 2] | 0;
              F2 = c[e2 >> 2] | 0;
              F2 = F2 + 16 | 0;
              F2 = c[F2 >> 2] | 0;
              b2 = a2 + 12 | 0;
              bc[F2 & 127](e2, d2 + 80 | 0, d2 + 64 | 0, b2);
              e2 = c[a2 + 8 >> 2] | 0;
              F2 = c[e2 >> 2] | 0;
              F2 = F2 + 16 | 0;
              F2 = c[F2 >> 2] | 0;
              bc[F2 & 127](e2, d2 + 64 | 0, d2 + 48 | 0, b2);
              a2 = c[a2 + 8 >> 2] | 0;
              e2 = c[a2 >> 2] | 0;
              e2 = e2 + 16 | 0;
              e2 = c[e2 >> 2] | 0;
              bc[e2 & 127](a2, d2 + 48 | 0, d2 + 80 | 0, b2);
              i = d2;
              return;
            }
            I2 = +g[d2 + 80 >> 2];
            H2 = y2 * o2 + z2 * p2 + A2 * q2 + w2 - (l2 * o2 + B2 * p2 + m2 * q2 + w2);
            G2 = y2 * r2 + z2 * t2 + A2 * u2 + x2 - (l2 * r2 + B2 * t2 + m2 * u2 + x2);
            w2 = C2 * o2 + E2 * p2 + k2 * q2 + w2 - (l2 * o2 + B2 * p2 + m2 * q2 + w2);
            x2 = C2 * r2 + E2 * t2 + k2 * u2 + x2 - (l2 * r2 + B2 * t2 + m2 * u2 + x2);
            B2 = G2 * (C2 * s2 + E2 * D2 + k2 * n2 + v2 - I2) - (y2 * s2 + z2 * D2 + A2 * n2 + v2 - I2) * x2;
            E2 = (y2 * s2 + z2 * D2 + A2 * n2 + v2 - I2) * w2 - H2 * (C2 * s2 + E2 * D2 + k2 * n2 + v2 - I2);
            D2 = 1 / +O(+(E2 * E2 + ((H2 * x2 - G2 * w2) * (H2 * x2 - G2 * w2) + B2 * B2)));
            c[d2 + 16 >> 2] = 1065353216;
            c[d2 + 16 + 4 >> 2] = 1065353216;
            c[d2 + 16 + 8 >> 2] = 0;
            g[d2 + 16 + 12 >> 2] = 0;
            b2 = c[a2 + 8 >> 2] | 0;
            e2 = c[(c[b2 >> 2] | 0) + 16 >> 2] | 0;
            g[d2 >> 2] = D2 * (H2 * x2 - G2 * w2) + f2;
            g[d2 + 4 >> 2] = D2 * B2 + h2;
            g[d2 + 8 >> 2] = D2 * E2 + j2;
            g[d2 + 12 >> 2] = 0;
            bc[e2 & 127](b2, d2 + 32 | 0, d2, d2 + 16 | 0);
            b2 = c[a2 + 8 >> 2] | 0;
            e2 = c[b2 >> 2] | 0;
            e2 = e2 + 16 | 0;
            e2 = c[e2 >> 2] | 0;
            F2 = a2 + 12 | 0;
            bc[e2 & 127](b2, d2 + 80 | 0, d2 + 64 | 0, F2);
            b2 = c[a2 + 8 >> 2] | 0;
            e2 = c[b2 >> 2] | 0;
            e2 = e2 + 16 | 0;
            e2 = c[e2 >> 2] | 0;
            bc[e2 & 127](b2, d2 + 64 | 0, d2 + 48 | 0, F2);
            a2 = c[a2 + 8 >> 2] | 0;
            b2 = c[a2 >> 2] | 0;
            b2 = b2 + 16 | 0;
            b2 = c[b2 >> 2] | 0;
            bc[b2 & 127](a2, d2 + 48 | 0, d2 + 80 | 0, F2);
            i = d2;
            return;
          }
          function jf(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            bc[c[(c[a2 >> 2] | 0) + 8 >> 2] & 127](a2, b2, d2, e2);
            return;
          }
          function kf(a2) {
            a2 = a2 | 0;
            return;
          }
          function lf(a2) {
            a2 = a2 | 0;
            rG(a2 + -4 | 0);
            return;
          }
          function mf(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            bc[c[(c[a2 + -4 >> 2] | 0) + 8 >> 2] & 127](a2 + -4 | 0, b2, d2, e2);
            return;
          }
          function nf(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0;
            f2 = i;
            i = i + 256 | 0;
            c[f2 + 32 >> 2] = 3296;
            l2 = f2 + 32 + 36 | 0;
            c[l2 >> 2] = c[b2 >> 2];
            c[l2 + 4 >> 2] = c[b2 + 4 >> 2];
            c[l2 + 8 >> 2] = c[b2 + 8 >> 2];
            c[l2 + 12 >> 2] = c[b2 + 12 >> 2];
            m2 = f2 + 32 + 52 | 0;
            c[m2 >> 2] = c[d2 >> 2];
            c[m2 + 4 >> 2] = c[d2 + 4 >> 2];
            c[m2 + 8 >> 2] = c[d2 + 8 >> 2];
            c[m2 + 12 >> 2] = c[d2 + 12 >> 2];
            c[f2 + 32 + 212 >> 2] = a2;
            c[f2 + 32 + 216 >> 2] = e2;
            c[f2 + 32 + 68 >> 2] = 1065353216;
            c[f2 + 32 + 72 >> 2] = 0;
            c[f2 + 32 + 72 + 4 >> 2] = 0;
            c[f2 + 32 + 72 + 8 >> 2] = 0;
            c[f2 + 32 + 72 + 12 >> 2] = 0;
            c[f2 + 32 + 88 >> 2] = 1065353216;
            c[f2 + 32 + 92 >> 2] = 0;
            c[f2 + 32 + 92 + 4 >> 2] = 0;
            c[f2 + 32 + 92 + 8 >> 2] = 0;
            c[f2 + 32 + 92 + 12 >> 2] = 0;
            c[f2 + 32 + 108 >> 2] = 1065353216;
            c[f2 + 32 + 112 >> 2] = 0;
            c[f2 + 32 + 116 >> 2] = c[l2 >> 2];
            c[f2 + 32 + 116 + 4 >> 2] = c[l2 + 4 >> 2];
            c[f2 + 32 + 116 + 8 >> 2] = c[l2 + 8 >> 2];
            c[f2 + 32 + 116 + 12 >> 2] = c[l2 + 12 >> 2];
            c[f2 + 32 + 132 >> 2] = 1065353216;
            c[f2 + 32 + 136 >> 2] = 0;
            c[f2 + 32 + 136 + 4 >> 2] = 0;
            c[f2 + 32 + 136 + 8 >> 2] = 0;
            c[f2 + 32 + 136 + 12 >> 2] = 0;
            c[f2 + 32 + 152 >> 2] = 1065353216;
            c[f2 + 32 + 156 >> 2] = 0;
            c[f2 + 32 + 156 + 4 >> 2] = 0;
            c[f2 + 32 + 156 + 8 >> 2] = 0;
            c[f2 + 32 + 156 + 12 >> 2] = 0;
            c[f2 + 32 + 172 >> 2] = 1065353216;
            c[f2 + 32 + 176 >> 2] = 0;
            c[f2 + 32 + 180 >> 2] = c[d2 >> 2];
            c[f2 + 32 + 180 + 4 >> 2] = c[d2 + 4 >> 2];
            c[f2 + 32 + 180 + 8 >> 2] = c[d2 + 8 >> 2];
            c[f2 + 32 + 180 + 12 >> 2] = c[d2 + 12 >> 2];
            n2 = +g[d2 >> 2] - +g[b2 >> 2];
            k2 = +g[d2 + 4 >> 2] - +g[b2 + 4 >> 2];
            j2 = +g[d2 + 8 >> 2] - +g[b2 + 8 >> 2];
            h2 = 1 / +O(+(n2 * n2 + k2 * k2 + j2 * j2));
            q2 = n2 * h2 == 0 ? 999999984306749400 : 1 / (n2 * h2);
            g[f2 + 32 + 4 >> 2] = q2;
            p2 = k2 * h2 == 0 ? 999999984306749400 : 1 / (k2 * h2);
            g[f2 + 32 + 8 >> 2] = p2;
            o2 = j2 * h2 == 0 ? 999999984306749400 : 1 / (j2 * h2);
            g[f2 + 32 + 12 >> 2] = o2;
            c[f2 + 32 + 20 >> 2] = q2 < 0 & 1;
            c[f2 + 32 + 24 >> 2] = p2 < 0 & 1;
            c[f2 + 32 + 28 >> 2] = o2 < 0 & 1;
            g[f2 + 32 + 32 >> 2] = n2 * h2 * (+g[m2 >> 2] - +g[l2 >> 2]) + k2 * h2 * (+g[f2 + 32 + 56 >> 2] - +g[f2 + 32 + 40 >> 2]) + j2 * h2 * (+g[f2 + 32 + 60 >> 2] - +g[f2 + 32 + 44 >> 2]);
            a2 = c[a2 + 68 >> 2] | 0;
            e2 = c[(c[a2 >> 2] | 0) + 24 >> 2] | 0;
            c[f2 + 16 >> 2] = 0;
            c[f2 + 16 + 4 >> 2] = 0;
            c[f2 + 16 + 8 >> 2] = 0;
            c[f2 + 16 + 12 >> 2] = 0;
            c[f2 >> 2] = 0;
            c[f2 + 4 >> 2] = 0;
            c[f2 + 8 >> 2] = 0;
            c[f2 + 12 >> 2] = 0;
            Fb[e2 & 7](a2, b2, d2, f2 + 32 | 0, f2 + 16 | 0, f2);
            i = f2;
            return;
          }
          function of(a2) {
            a2 = a2 | 0;
            return;
          }
          function pf(a2) {
            a2 = a2 | 0;
            rG(a2);
            return;
          }
          function qf(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0;
            e2 = i;
            i = i + 32 | 0;
            d2 = c[a2 + 216 >> 2] | 0;
            if (+g[d2 + 4 >> 2] == 0) {
              a2 = 0;
              i = e2;
              return a2 | 0;
            }
            b2 = c[b2 >> 2] | 0;
            if (!(Ob[c[(c[d2 >> 2] | 0) + 8 >> 2] & 31](d2, c[b2 + 188 >> 2] | 0) | 0)) {
              a2 = 1;
              i = e2;
              return a2 | 0;
            }
            f2 = c[b2 + 192 >> 2] | 0;
            d2 = c[a2 + 216 >> 2] | 0;
            c[e2 >> 2] = 0;
            c[e2 + 4 >> 2] = f2;
            c[e2 + 8 >> 2] = b2;
            c[e2 + 12 >> 2] = b2 + 4;
            c[e2 + 16 >> 2] = -1;
            c[e2 + 20 >> 2] = -1;
            rf(a2 + 68 | 0, a2 + 132 | 0, e2, d2);
            a2 = 1;
            i = e2;
            return a2 | 0;
          }
          function rf(b2, d2, e2, f2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            var h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0;
            s2 = i;
            i = i + 752 | 0;
            c[s2 + 136 + 8 >> 2] = 0;
            c[s2 + 136 + 12 >> 2] = -1;
            c[s2 + 136 + 16 >> 2] = 1065353216;
            c[s2 + 136 + 20 >> 2] = 1065353216;
            c[s2 + 136 + 24 >> 2] = 1065353216;
            g[s2 + 136 + 28 >> 2] = 0;
            c[s2 + 136 >> 2] = 6380;
            c[s2 + 136 + 4 >> 2] = 8;
            g[s2 + 136 + 32 >> 2] = 0;
            g[s2 + 136 + 48 >> 2] = 0;
            q2 = c[e2 + 4 >> 2] | 0;
            r2 = c[e2 + 12 >> 2] | 0;
            h2 = c[q2 + 4 >> 2] | 0;
            if ((h2 | 0) < 20) {
              c[s2 + 568 >> 2] = 3316;
              c[s2 + 568 + 168 >> 2] = 0;
              g[s2 + 568 + 172 >> 2] = 0;
              c[s2 + 568 + 164 >> 2] = c[f2 + 4 >> 2];
              g[s2 + 208 + 308 >> 2] = 9999999747378752e-20;
              a[s2 + 208 + 332 >> 0] = 0;
              c[s2 + 192 >> 2] = 7024;
              c[s2 + 192 + 4 >> 2] = s2 + 208;
              c[s2 + 192 + 8 >> 2] = s2 + 136;
              c[s2 + 192 + 12 >> 2] = q2;
              c[s2 + 120 >> 2] = 6864;
              c[s2 + 120 + 4 >> 2] = s2 + 208;
              c[s2 + 120 + 8 >> 2] = s2 + 136;
              c[s2 + 120 + 12 >> 2] = q2;
              q2 = (c[f2 + 16 >> 2] & 8 | 0) == 0 ? s2 + 192 | 0 : s2 + 120 | 0;
              if ((Ib[c[(c[q2 >> 2] | 0) + 8 >> 2] & 3](q2, b2, d2, r2, r2, s2 + 568 | 0) | 0 ? (j2 = s2 + 568 + 132 | 0, k2 = +g[j2 >> 2], l2 = +g[s2 + 568 + 136 >> 2], m2 = +g[s2 + 568 + 140 >> 2], k2 * k2 + l2 * l2 + m2 * m2 > 9999999747378752e-20) : 0) ? (n2 = +g[s2 + 568 + 164 >> 2], n2 < +g[f2 + 4 >> 2]) : 0) {
                p2 = 1 / +O(+(k2 * k2 + l2 * l2 + m2 * m2));
                g[j2 >> 2] = k2 * p2;
                g[s2 + 568 + 136 >> 2] = l2 * p2;
                g[s2 + 568 + 140 >> 2] = m2 * p2;
                c[s2 >> 2] = c[e2 + 8 >> 2];
                c[s2 + 4 >> 2] = 0;
                c[s2 + 8 >> 2] = c[j2 >> 2];
                c[s2 + 8 + 4 >> 2] = c[j2 + 4 >> 2];
                c[s2 + 8 + 8 >> 2] = c[j2 + 8 >> 2];
                c[s2 + 8 + 12 >> 2] = c[j2 + 12 >> 2];
                g[s2 + 24 >> 2] = n2;
                +Pb[c[(c[f2 >> 2] | 0) + 12 >> 2] & 15](f2, s2, 1);
              }
              i = s2;
              return;
            }
            if ((h2 + -21 | 0) >>> 0 >= 9) {
              if ((h2 | 0) != 31) {
                i = s2;
                return;
              }
              h2 = c[q2 + 68 >> 2] | 0;
              e2 = c[e2 + 8 >> 2] | 0;
              c[s2 + 568 >> 2] = 3392;
              c[s2 + 568 + 4 >> 2] = e2;
              c[s2 + 568 + 8 >> 2] = q2;
              c[s2 + 568 + 12 >> 2] = r2;
              c[s2 + 568 + 16 >> 2] = b2;
              c[s2 + 568 + 20 >> 2] = d2;
              c[s2 + 568 + 24 >> 2] = f2;
              if (!h2) {
                h2 = c[q2 + 20 >> 2] | 0;
                if ((h2 | 0) > 0) {
                  j2 = 0;
                  do {
                    Df(s2 + 568 | 0, j2);
                    j2 = j2 + 1 | 0;
                  } while ((j2 | 0) < (h2 | 0));
                }
              } else {
                k2 = +g[r2 + 48 >> 2];
                B2 = +g[b2 + 48 >> 2] - k2;
                m2 = +g[r2 + 52 >> 2];
                A2 = +g[b2 + 52 >> 2] - m2;
                o2 = +g[r2 + 56 >> 2];
                z2 = +g[b2 + 56 >> 2] - o2;
                y2 = +g[r2 >> 2];
                x2 = +g[r2 + 16 >> 2];
                w2 = +g[r2 + 32 >> 2];
                v2 = +g[r2 + 4 >> 2];
                u2 = +g[r2 + 20 >> 2];
                t2 = +g[r2 + 36 >> 2];
                l2 = +g[r2 + 8 >> 2];
                n2 = +g[r2 + 24 >> 2];
                p2 = +g[r2 + 40 >> 2];
                g[s2 + 208 >> 2] = B2 * y2 + A2 * x2 + z2 * w2;
                g[s2 + 208 + 4 >> 2] = B2 * v2 + A2 * u2 + z2 * t2;
                g[s2 + 208 + 8 >> 2] = B2 * l2 + A2 * n2 + z2 * p2;
                g[s2 + 208 + 12 >> 2] = 0;
                k2 = +g[d2 + 48 >> 2] - k2;
                m2 = +g[d2 + 52 >> 2] - m2;
                o2 = +g[d2 + 56 >> 2] - o2;
                If(c[h2 >> 2] | 0, s2 + 208 | 0, k2 * y2 + m2 * x2 + o2 * w2, k2 * v2 + m2 * u2 + o2 * t2, k2 * l2 + m2 * n2 + o2 * p2, s2 + 568 | 0);
              }
              i = s2;
              return;
            }
            E2 = +g[r2 >> 2];
            D2 = +g[r2 + 16 >> 2];
            n2 = +g[r2 + 32 >> 2];
            C2 = +g[r2 + 4 >> 2];
            t2 = +g[r2 + 20 >> 2];
            o2 = +g[r2 + 36 >> 2];
            x2 = +g[r2 + 8 >> 2];
            z2 = +g[r2 + 24 >> 2];
            B2 = +g[r2 + 40 >> 2];
            u2 = -+g[r2 + 48 >> 2];
            v2 = -+g[r2 + 52 >> 2];
            w2 = -+g[r2 + 56 >> 2];
            A2 = +g[b2 + 48 >> 2];
            y2 = +g[b2 + 52 >> 2];
            m2 = +g[b2 + 56 >> 2];
            k2 = E2 * u2 + D2 * v2 + n2 * w2 + (E2 * A2 + D2 * y2 + n2 * m2);
            l2 = C2 * u2 + t2 * v2 + o2 * w2 + (C2 * A2 + t2 * y2 + o2 * m2);
            m2 = x2 * u2 + z2 * v2 + B2 * w2 + (x2 * A2 + z2 * y2 + B2 * m2);
            g[s2 + 120 >> 2] = k2;
            g[s2 + 120 + 4 >> 2] = l2;
            g[s2 + 120 + 8 >> 2] = m2;
            g[s2 + 120 + 12 >> 2] = 0;
            y2 = +g[d2 + 48 >> 2];
            A2 = +g[d2 + 52 >> 2];
            p2 = +g[d2 + 56 >> 2];
            n2 = E2 * u2 + D2 * v2 + n2 * w2 + (E2 * y2 + D2 * A2 + n2 * p2);
            o2 = C2 * u2 + t2 * v2 + o2 * w2 + (C2 * y2 + t2 * A2 + o2 * p2);
            p2 = x2 * u2 + z2 * v2 + B2 * w2 + (x2 * y2 + z2 * A2 + B2 * p2);
            if ((c[q2 + 4 >> 2] | 0) == 21) {
              h2 = c[e2 + 8 >> 2] | 0;
              e2 = c[f2 + 16 >> 2] | 0;
              c[s2 + 4 >> 2] = c[s2 + 120 >> 2];
              c[s2 + 4 + 4 >> 2] = c[s2 + 120 + 4 >> 2];
              c[s2 + 4 + 8 >> 2] = c[s2 + 120 + 8 >> 2];
              c[s2 + 4 + 12 >> 2] = c[s2 + 120 + 12 >> 2];
              g[s2 + 20 >> 2] = n2;
              g[s2 + 24 >> 2] = o2;
              g[s2 + 28 >> 2] = p2;
              g[s2 + 32 >> 2] = 0;
              c[s2 + 36 >> 2] = e2;
              g[s2 + 40 >> 2] = 1;
              c[s2 >> 2] = 3344;
              c[s2 + 44 >> 2] = f2;
              c[s2 + 48 >> 2] = h2;
              c[s2 + 52 >> 2] = q2;
              c[s2 + 56 >> 2] = c[r2 >> 2];
              c[s2 + 56 + 4 >> 2] = c[r2 + 4 >> 2];
              c[s2 + 56 + 8 >> 2] = c[r2 + 8 >> 2];
              c[s2 + 56 + 12 >> 2] = c[r2 + 12 >> 2];
              c[s2 + 72 >> 2] = c[r2 + 16 >> 2];
              c[s2 + 72 + 4 >> 2] = c[r2 + 16 + 4 >> 2];
              c[s2 + 72 + 8 >> 2] = c[r2 + 16 + 8 >> 2];
              c[s2 + 72 + 12 >> 2] = c[r2 + 16 + 12 >> 2];
              c[s2 + 88 >> 2] = c[r2 + 32 >> 2];
              c[s2 + 88 + 4 >> 2] = c[r2 + 32 + 4 >> 2];
              c[s2 + 88 + 8 >> 2] = c[r2 + 32 + 8 >> 2];
              c[s2 + 88 + 12 >> 2] = c[r2 + 32 + 12 >> 2];
              c[s2 + 104 >> 2] = c[r2 + 48 >> 2];
              c[s2 + 104 + 4 >> 2] = c[r2 + 48 + 4 >> 2];
              c[s2 + 104 + 8 >> 2] = c[r2 + 48 + 8 >> 2];
              c[s2 + 104 + 12 >> 2] = c[r2 + 48 + 12 >> 2];
              c[s2 + 40 >> 2] = c[f2 + 4 >> 2];
              h2 = c[q2 + 52 >> 2] | 0;
              c[s2 + 192 >> 2] = 4836;
              c[s2 + 192 + 4 >> 2] = h2;
              c[s2 + 192 + 8 >> 2] = s2;
              h2 = c[q2 + 56 >> 2] | 0;
              c[s2 + 568 >> 2] = 0;
              c[s2 + 568 + 4 >> 2] = 0;
              c[s2 + 568 + 8 >> 2] = 0;
              c[s2 + 568 + 12 >> 2] = 0;
              c[s2 + 208 >> 2] = 0;
              c[s2 + 208 + 4 >> 2] = 0;
              c[s2 + 208 + 8 >> 2] = 0;
              c[s2 + 208 + 12 >> 2] = 0;
              if (!(a[h2 + 60 >> 0] | 0))
                oe(h2, s2 + 192 | 0, s2 + 120 | 0, n2, o2, p2, s2 + 568 | 0, s2 + 208 | 0);
              else
                pe(h2, s2 + 192 | 0, s2 + 120 | 0, n2, o2, p2, s2 + 568 | 0, s2 + 208 | 0, c[h2 + 56 >> 2] | 0);
            } else {
              e2 = c[e2 + 8 >> 2] | 0;
              d2 = c[f2 + 16 >> 2] | 0;
              g[s2 + 568 + 4 >> 2] = k2;
              g[s2 + 568 + 8 >> 2] = l2;
              g[s2 + 568 + 12 >> 2] = m2;
              g[s2 + 568 + 16 >> 2] = 0;
              g[s2 + 568 + 20 >> 2] = n2;
              g[s2 + 568 + 24 >> 2] = o2;
              g[s2 + 568 + 28 >> 2] = p2;
              g[s2 + 568 + 32 >> 2] = 0;
              c[s2 + 568 + 36 >> 2] = d2;
              g[s2 + 568 + 40 >> 2] = 1;
              c[s2 + 568 >> 2] = 3368;
              c[s2 + 568 + 44 >> 2] = f2;
              c[s2 + 568 + 48 >> 2] = e2;
              c[s2 + 568 + 52 >> 2] = q2;
              c[s2 + 568 + 56 >> 2] = c[r2 >> 2];
              c[s2 + 568 + 56 + 4 >> 2] = c[r2 + 4 >> 2];
              c[s2 + 568 + 56 + 8 >> 2] = c[r2 + 8 >> 2];
              c[s2 + 568 + 56 + 12 >> 2] = c[r2 + 12 >> 2];
              c[s2 + 568 + 72 >> 2] = c[r2 + 16 >> 2];
              c[s2 + 568 + 72 + 4 >> 2] = c[r2 + 16 + 4 >> 2];
              c[s2 + 568 + 72 + 8 >> 2] = c[r2 + 16 + 8 >> 2];
              c[s2 + 568 + 72 + 12 >> 2] = c[r2 + 16 + 12 >> 2];
              c[s2 + 568 + 88 >> 2] = c[r2 + 32 >> 2];
              c[s2 + 568 + 88 + 4 >> 2] = c[r2 + 32 + 4 >> 2];
              c[s2 + 568 + 88 + 8 >> 2] = c[r2 + 32 + 8 >> 2];
              c[s2 + 568 + 88 + 12 >> 2] = c[r2 + 32 + 12 >> 2];
              c[s2 + 568 + 104 >> 2] = c[r2 + 48 >> 2];
              c[s2 + 568 + 104 + 4 >> 2] = c[r2 + 48 + 4 >> 2];
              c[s2 + 568 + 104 + 8 >> 2] = c[r2 + 48 + 8 >> 2];
              c[s2 + 568 + 104 + 12 >> 2] = c[r2 + 48 + 12 >> 2];
              c[s2 + 568 + 40 >> 2] = c[f2 + 4 >> 2];
              g[s2 + 208 >> 2] = k2;
              g[s2 + 208 + 4 >> 2] = l2;
              g[s2 + 208 + 8 >> 2] = m2;
              g[s2 + 208 + 12 >> 2] = 0;
              if (n2 < k2)
                g[s2 + 208 >> 2] = n2;
              if (o2 < l2)
                g[s2 + 208 + 4 >> 2] = o2;
              if (p2 < m2)
                g[s2 + 208 + 8 >> 2] = p2;
              g[s2 + 192 >> 2] = k2;
              g[s2 + 192 + 4 >> 2] = l2;
              g[s2 + 192 + 8 >> 2] = m2;
              g[s2 + 192 + 12 >> 2] = 0;
              if (k2 < n2)
                g[s2 + 192 >> 2] = n2;
              if (l2 < o2)
                g[s2 + 192 + 4 >> 2] = o2;
              if (m2 < p2)
                g[s2 + 192 + 8 >> 2] = p2;
              bc[c[(c[q2 >> 2] | 0) + 64 >> 2] & 127](q2, s2 + 568 | 0, s2 + 208 | 0, s2 + 192 | 0);
            }
            i = s2;
            return;
          }
          function sf(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            return;
          }
          function tf(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            return;
          }
          function uf(a2, b2, c2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            return;
          }
          function vf(a2) {
            a2 = a2 | 0;
            return;
          }
          function wf(a2) {
            a2 = a2 | 0;
            rG(a2);
            return;
          }
          function xf(a2) {
            a2 = a2 | 0;
            rG(a2);
            return;
          }
          function yf(a2, b2, d2, e2, f2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = +d2;
            e2 = e2 | 0;
            f2 = f2 | 0;
            var h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0;
            h2 = i;
            i = i + 48 | 0;
            c[h2 + 32 >> 2] = e2;
            c[h2 + 32 + 4 >> 2] = f2;
            n2 = +g[b2 >> 2];
            m2 = +g[b2 + 4 >> 2];
            j2 = +g[b2 + 8 >> 2];
            l2 = +g[a2 + 56 >> 2] * n2 + +g[a2 + 60 >> 2] * m2 + +g[a2 + 64 >> 2] * j2;
            k2 = n2 * +g[a2 + 72 >> 2] + m2 * +g[a2 + 76 >> 2] + j2 * +g[a2 + 80 >> 2];
            j2 = n2 * +g[a2 + 88 >> 2] + m2 * +g[a2 + 92 >> 2] + j2 * +g[a2 + 96 >> 2];
            c[h2 >> 2] = c[a2 + 48 >> 2];
            c[h2 + 4 >> 2] = h2 + 32;
            g[h2 + 8 >> 2] = l2;
            g[h2 + 12 >> 2] = k2;
            g[h2 + 16 >> 2] = j2;
            g[h2 + 20 >> 2] = 0;
            g[h2 + 24 >> 2] = d2;
            f2 = c[a2 + 44 >> 2] | 0;
            d2 = +Pb[c[(c[f2 >> 2] | 0) + 12 >> 2] & 15](f2, h2, 1);
            i = h2;
            return +d2;
          }
          function zf(a2) {
            a2 = a2 | 0;
            rG(a2);
            return;
          }
          function Af(a2, b2, d2, e2, f2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = +d2;
            e2 = e2 | 0;
            f2 = f2 | 0;
            var h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0;
            h2 = i;
            i = i + 48 | 0;
            c[h2 + 32 >> 2] = e2;
            c[h2 + 32 + 4 >> 2] = f2;
            n2 = +g[b2 >> 2];
            m2 = +g[b2 + 4 >> 2];
            j2 = +g[b2 + 8 >> 2];
            l2 = +g[a2 + 56 >> 2] * n2 + +g[a2 + 60 >> 2] * m2 + +g[a2 + 64 >> 2] * j2;
            k2 = n2 * +g[a2 + 72 >> 2] + m2 * +g[a2 + 76 >> 2] + j2 * +g[a2 + 80 >> 2];
            j2 = n2 * +g[a2 + 88 >> 2] + m2 * +g[a2 + 92 >> 2] + j2 * +g[a2 + 96 >> 2];
            c[h2 >> 2] = c[a2 + 48 >> 2];
            c[h2 + 4 >> 2] = h2 + 32;
            g[h2 + 8 >> 2] = l2;
            g[h2 + 12 >> 2] = k2;
            g[h2 + 16 >> 2] = j2;
            g[h2 + 20 >> 2] = 0;
            g[h2 + 24 >> 2] = d2;
            f2 = c[a2 + 44 >> 2] | 0;
            d2 = +Pb[c[(c[f2 >> 2] | 0) + 12 >> 2] & 15](f2, h2, 1);
            i = h2;
            return +d2;
          }
          function Bf(a2) {
            a2 = a2 | 0;
            rG(a2);
            return;
          }
          function Cf(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            Df(a2, c[b2 + 36 >> 2] | 0);
            return;
          }
          function Df(a2, d2) {
            a2 = a2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0;
            e2 = i;
            i = i + 128 | 0;
            G2 = c[(c[a2 + 8 >> 2] | 0) + 28 >> 2] | 0;
            h2 = c[G2 + (d2 * 80 | 0) + 64 >> 2] | 0;
            f2 = c[a2 + 12 >> 2] | 0;
            x2 = +g[G2 + (d2 * 80 | 0) >> 2];
            D2 = +g[f2 >> 2];
            w2 = +g[G2 + (d2 * 80 | 0) + 16 >> 2];
            C2 = +g[f2 + 4 >> 2];
            v2 = +g[G2 + (d2 * 80 | 0) + 32 >> 2];
            B2 = +g[f2 + 8 >> 2];
            u2 = +g[G2 + (d2 * 80 | 0) + 4 >> 2];
            t2 = +g[G2 + (d2 * 80 | 0) + 20 >> 2];
            s2 = +g[G2 + (d2 * 80 | 0) + 36 >> 2];
            r2 = +g[G2 + (d2 * 80 | 0) + 8 >> 2];
            p2 = +g[G2 + (d2 * 80 | 0) + 24 >> 2];
            n2 = +g[G2 + (d2 * 80 | 0) + 40 >> 2];
            A2 = +g[f2 + 16 >> 2];
            z2 = +g[f2 + 20 >> 2];
            y2 = +g[f2 + 24 >> 2];
            q2 = +g[f2 + 32 >> 2];
            o2 = +g[f2 + 36 >> 2];
            m2 = +g[f2 + 40 >> 2];
            F2 = +g[G2 + (d2 * 80 | 0) + 48 >> 2];
            E2 = +g[G2 + (d2 * 80 | 0) + 52 >> 2];
            j2 = +g[G2 + (d2 * 80 | 0) + 56 >> 2];
            l2 = +g[f2 + 48 >> 2] + (D2 * F2 + C2 * E2 + B2 * j2);
            k2 = A2 * F2 + z2 * E2 + y2 * j2 + +g[f2 + 52 >> 2];
            j2 = q2 * F2 + o2 * E2 + m2 * j2 + +g[f2 + 56 >> 2];
            g[e2 + 56 >> 2] = x2 * D2 + w2 * C2 + v2 * B2;
            g[e2 + 56 + 4 >> 2] = D2 * u2 + C2 * t2 + B2 * s2;
            g[e2 + 56 + 8 >> 2] = D2 * r2 + C2 * p2 + B2 * n2;
            g[e2 + 56 + 12 >> 2] = 0;
            g[e2 + 56 + 16 >> 2] = x2 * A2 + w2 * z2 + v2 * y2;
            g[e2 + 56 + 20 >> 2] = u2 * A2 + t2 * z2 + s2 * y2;
            g[e2 + 56 + 24 >> 2] = r2 * A2 + p2 * z2 + n2 * y2;
            g[e2 + 56 + 28 >> 2] = 0;
            g[e2 + 56 + 32 >> 2] = x2 * q2 + w2 * o2 + v2 * m2;
            g[e2 + 56 + 36 >> 2] = u2 * q2 + t2 * o2 + s2 * m2;
            g[e2 + 56 + 40 >> 2] = r2 * q2 + p2 * o2 + n2 * m2;
            g[e2 + 56 + 44 >> 2] = 0;
            g[e2 + 56 + 48 >> 2] = l2;
            g[e2 + 56 + 52 >> 2] = k2;
            g[e2 + 56 + 56 >> 2] = j2;
            g[e2 + 56 + 60 >> 2] = 0;
            f2 = c[a2 + 4 >> 2] | 0;
            c[e2 + 32 >> 2] = 0;
            c[e2 + 32 + 4 >> 2] = h2;
            c[e2 + 32 + 8 >> 2] = f2;
            c[e2 + 32 + 12 >> 2] = e2 + 56;
            c[e2 + 32 + 16 >> 2] = -1;
            c[e2 + 32 + 20 >> 2] = d2;
            f2 = c[a2 + 24 >> 2] | 0;
            g[e2 + 4 >> 2] = 1;
            c[e2 + 8 >> 2] = 0;
            b[e2 + 12 >> 1] = 1;
            b[e2 + 14 >> 1] = -1;
            c[e2 + 16 >> 2] = 0;
            c[e2 >> 2] = 3428;
            c[e2 + 20 >> 2] = f2;
            c[e2 + 24 >> 2] = d2;
            c[e2 + 4 >> 2] = c[f2 + 4 >> 2];
            c[e2 + 16 >> 2] = c[f2 + 16 >> 2];
            rf(c[a2 + 16 >> 2] | 0, c[a2 + 20 >> 2] | 0, e2 + 32 | 0, e2);
            i = e2;
            return;
          }
          function Ef(a2) {
            a2 = a2 | 0;
            return;
          }
          function Ff(a2) {
            a2 = a2 | 0;
            rG(a2);
            return;
          }
          function Gf(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            a2 = c[a2 + 20 >> 2] | 0;
            return Ob[c[(c[a2 >> 2] | 0) + 8 >> 2] & 31](a2, b2) | 0;
          }
          function Hf(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0;
            e2 = i;
            i = i + 16 | 0;
            c[e2 >> 2] = -1;
            c[e2 + 4 >> 2] = c[a2 + 24 >> 2];
            if (!(c[b2 + 4 >> 2] | 0))
              c[b2 + 4 >> 2] = e2;
            g2 = c[a2 + 20 >> 2] | 0;
            f2 = +Pb[c[(c[g2 >> 2] | 0) + 12 >> 2] & 15](g2, b2, d2);
            c[a2 + 4 >> 2] = c[(c[a2 + 20 >> 2] | 0) + 4 >> 2];
            i = e2;
            return +f2;
          }
          function If(a2, b2, d2, e2, f2, h2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = +d2;
            e2 = +e2;
            f2 = +f2;
            h2 = h2 | 0;
            var j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0;
            D2 = i;
            i = i + 32 | 0;
            if (!a2) {
              i = D2;
              return;
            }
            x2 = d2 - +g[b2 >> 2];
            w2 = e2 - +g[b2 + 4 >> 2];
            v2 = f2 - +g[b2 + 8 >> 2];
            r2 = 1 / +O(+(x2 * x2 + w2 * w2 + v2 * v2));
            s2 = x2 * r2 == 0 ? 999999984306749400 : 1 / (x2 * r2);
            t2 = w2 * r2 == 0 ? 999999984306749400 : 1 / (w2 * r2);
            u2 = v2 * r2 == 0 ? 999999984306749400 : 1 / (v2 * r2);
            c[5637] = (c[5637] | 0) + 1;
            j2 = qG(531) | 0;
            if (!j2)
              j2 = 0;
            else {
              c[(j2 + 4 + 15 & -16) + -4 >> 2] = j2;
              j2 = j2 + 4 + 15 & -16;
            }
            ZG(j2 | 0, 0, 512) | 0;
            c[j2 >> 2] = a2;
            q2 = 1;
            a2 = 128;
            m2 = 128;
            k2 = 126;
            while (1) {
              n2 = q2 + -1 | 0;
              p2 = c[j2 + (n2 << 2) >> 2] | 0;
              c[D2 >> 2] = c[p2 >> 2];
              c[D2 + 4 >> 2] = c[p2 + 4 >> 2];
              c[D2 + 8 >> 2] = c[p2 + 8 >> 2];
              c[D2 + 12 >> 2] = c[p2 + 12 >> 2];
              c[D2 + 16 >> 2] = c[p2 + 16 >> 2];
              c[D2 + 16 + 4 >> 2] = c[p2 + 16 + 4 >> 2];
              c[D2 + 16 + 8 >> 2] = c[p2 + 16 + 8 >> 2];
              c[D2 + 16 + 12 >> 2] = c[p2 + 16 + 12 >> 2];
              e2 = +g[b2 >> 2];
              d2 = s2 * (+g[D2 + ((s2 < 0 & 1) << 4) >> 2] - e2);
              e2 = s2 * (+g[D2 + ((s2 < 0 ^ 1) << 4) >> 2] - e2);
              l2 = +g[b2 + 4 >> 2];
              f2 = t2 * (+g[D2 + ((t2 < 0 & 1) << 4) + 4 >> 2] - l2);
              l2 = t2 * (+g[D2 + ((t2 < 0 ^ 1) << 4) + 4 >> 2] - l2);
              do
                if ((!(f2 > e2 | d2 > l2) ? (y2 = f2 > d2 ? f2 : d2, B2 = l2 < e2 ? l2 : e2, A2 = +g[b2 + 8 >> 2], z2 = u2 * (+g[D2 + ((u2 < 0 & 1) << 4) + 8 >> 2] - A2), A2 = u2 * (+g[D2 + ((u2 < 0 ^ 1) << 4) + 8 >> 2] - A2), !(z2 > B2 | y2 > A2)) : 0) ? (A2 < B2 ? A2 : B2) > 0 ? (z2 > y2 ? z2 : y2) < x2 * r2 * x2 + w2 * r2 * w2 + v2 * r2 * v2 : 0 : 0) {
                  if (!(c[p2 + 40 >> 2] | 0)) {
                    tb[c[(c[h2 >> 2] | 0) + 12 >> 2] & 127](h2, p2);
                    break;
                  }
                  if ((n2 | 0) > (k2 | 0)) {
                    o2 = m2 << 1;
                    if ((m2 | 0) < (o2 | 0)) {
                      do
                        if ((a2 | 0) < (o2 | 0)) {
                          if (m2) {
                            c[5637] = (c[5637] | 0) + 1;
                            a2 = qG((m2 << 3 | 3) + 16 | 0) | 0;
                            if (!a2)
                              a2 = 0;
                            else {
                              c[(a2 + 4 + 15 & -16) + -4 >> 2] = a2;
                              a2 = a2 + 4 + 15 & -16;
                            }
                            if ((m2 | 0) > 0) {
                              k2 = 0;
                              do {
                                c[a2 + (k2 << 2) >> 2] = c[j2 + (k2 << 2) >> 2];
                                k2 = k2 + 1 | 0;
                              } while ((k2 | 0) != (m2 | 0));
                            } else
                              C2 = 17;
                          } else {
                            a2 = 0;
                            C2 = 17;
                          }
                          if ((C2 | 0) == 17) {
                            C2 = 0;
                            if (!j2) {
                              k2 = o2;
                              j2 = a2;
                              break;
                            }
                          }
                          c[5638] = (c[5638] | 0) + 1;
                          rG(c[j2 + -4 >> 2] | 0);
                          k2 = o2;
                          j2 = a2;
                        } else
                          k2 = a2;
                      while (0);
                      ZG(j2 + (m2 << 2) | 0, 0, m2 << 2 | 0) | 0;
                      a2 = k2;
                    }
                    m2 = o2;
                    k2 = o2 + -2 | 0;
                  }
                  c[j2 + (n2 << 2) >> 2] = c[p2 + 36 >> 2];
                  c[j2 + (q2 << 2) >> 2] = c[p2 + 40 >> 2];
                  n2 = q2 + 1 | 0;
                }
              while (0);
              if (!n2)
                break;
              else
                q2 = n2;
            }
            if (!j2) {
              i = D2;
              return;
            }
            c[5638] = (c[5638] | 0) + 1;
            rG(c[j2 + -4 >> 2] | 0);
            i = D2;
            return;
          }
          function Jf(b2, d2, e2, f2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            var g2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0;
            l2 = i;
            i = i + 96 | 0;
            g2 = c[b2 + 8 >> 2] | 0;
            if ((g2 | 0) == (c[b2 + 12 >> 2] | 0) ? (k2 = g2 | 0 ? g2 << 1 : 1, (g2 | 0) < (k2 | 0)) : 0) {
              if (!k2)
                j2 = 0;
              else {
                c[5637] = (c[5637] | 0) + 1;
                g2 = qG((k2 << 2 | 3) + 16 | 0) | 0;
                if (!g2)
                  g2 = 0;
                else {
                  c[(g2 + 4 + 15 & -16) + -4 >> 2] = g2;
                  g2 = g2 + 4 + 15 & -16;
                }
                j2 = g2;
                g2 = c[b2 + 8 >> 2] | 0;
              }
              if ((g2 | 0) > 0) {
                h2 = 0;
                do {
                  c[j2 + (h2 << 2) >> 2] = c[(c[b2 + 16 >> 2] | 0) + (h2 << 2) >> 2];
                  h2 = h2 + 1 | 0;
                } while ((h2 | 0) != (g2 | 0));
              }
              h2 = c[b2 + 16 >> 2] | 0;
              if (h2) {
                if (a[b2 + 20 >> 0] | 0) {
                  c[5638] = (c[5638] | 0) + 1;
                  rG(c[h2 + -4 >> 2] | 0);
                  g2 = c[b2 + 8 >> 2] | 0;
                }
                c[b2 + 16 >> 2] = 0;
              }
              a[b2 + 20 >> 0] = 1;
              c[b2 + 16 >> 2] = j2;
              c[b2 + 12 >> 2] = k2;
            }
            c[(c[b2 + 16 >> 2] | 0) + (g2 << 2) >> 2] = d2;
            c[b2 + 8 >> 2] = g2 + 1;
            c[l2 + 32 >> 2] = c[d2 + 4 >> 2];
            c[l2 + 32 + 4 >> 2] = c[d2 + 4 + 4 >> 2];
            c[l2 + 32 + 8 >> 2] = c[d2 + 4 + 8 >> 2];
            c[l2 + 32 + 12 >> 2] = c[d2 + 4 + 12 >> 2];
            c[l2 + 32 + 16 >> 2] = c[d2 + 20 >> 2];
            c[l2 + 32 + 16 + 4 >> 2] = c[d2 + 20 + 4 >> 2];
            c[l2 + 32 + 16 + 8 >> 2] = c[d2 + 20 + 8 >> 2];
            c[l2 + 32 + 16 + 12 >> 2] = c[d2 + 20 + 12 >> 2];
            c[l2 + 32 + 32 >> 2] = c[d2 + 36 >> 2];
            c[l2 + 32 + 32 + 4 >> 2] = c[d2 + 36 + 4 >> 2];
            c[l2 + 32 + 32 + 8 >> 2] = c[d2 + 36 + 8 >> 2];
            c[l2 + 32 + 32 + 12 >> 2] = c[d2 + 36 + 12 >> 2];
            c[l2 + 32 + 48 >> 2] = c[d2 + 52 >> 2];
            c[l2 + 32 + 48 + 4 >> 2] = c[d2 + 52 + 4 >> 2];
            c[l2 + 32 + 48 + 8 >> 2] = c[d2 + 52 + 8 >> 2];
            c[l2 + 32 + 48 + 12 >> 2] = c[d2 + 52 + 12 >> 2];
            k2 = c[d2 + 192 >> 2] | 0;
            bc[c[(c[k2 >> 2] | 0) + 8 >> 2] & 127](k2, l2 + 32 | 0, l2 + 16 | 0, l2);
            k2 = c[b2 + 68 >> 2] | 0;
            c[d2 + 188 >> 2] = Xb[c[(c[k2 >> 2] | 0) + 8 >> 2] & 3](k2, l2 + 16 | 0, l2, c[(c[d2 + 192 >> 2] | 0) + 4 >> 2] | 0, d2, e2, f2, c[b2 + 24 >> 2] | 0, 0) | 0;
            i = l2;
            return;
          }
          function Kf(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0;
            d2 = c[b2 + 188 >> 2] | 0;
            if (d2 | 0) {
              g2 = c[a2 + 68 >> 2] | 0;
              g2 = vb[c[(c[g2 >> 2] | 0) + 36 >> 2] & 127](g2) | 0;
              Zb[c[(c[g2 >> 2] | 0) + 40 >> 2] & 127](g2, d2, c[a2 + 24 >> 2] | 0);
              g2 = c[a2 + 68 >> 2] | 0;
              Zb[c[(c[g2 >> 2] | 0) + 12 >> 2] & 127](g2, d2, c[a2 + 24 >> 2] | 0);
              c[b2 + 188 >> 2] = 0;
            }
            f2 = c[a2 + 8 >> 2] | 0;
            if ((f2 | 0) <= 0)
              return;
            g2 = c[a2 + 16 >> 2] | 0;
            d2 = 0;
            while (1) {
              e2 = g2 + (d2 << 2) | 0;
              if ((c[e2 >> 2] | 0) == (b2 | 0))
                break;
              d2 = d2 + 1 | 0;
              if ((d2 | 0) >= (f2 | 0)) {
                h2 = 9;
                break;
              }
            }
            if ((h2 | 0) == 9)
              return;
            if ((d2 | 0) >= (f2 | 0))
              return;
            c[e2 >> 2] = c[g2 + (f2 + -1 << 2) >> 2];
            c[(c[a2 + 16 >> 2] | 0) + (f2 + -1 << 2) >> 2] = b2;
            c[a2 + 8 >> 2] = f2 + -1;
            return;
          }
          function Lf(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0, e2 = 0, f2 = 0;
            d2 = i;
            i = i + 16 | 0;
            fs(10245);
            rb[c[(c[a2 >> 2] | 0) + 8 >> 2] & 255](a2);
            rb[c[(c[a2 >> 2] | 0) + 12 >> 2] & 255](a2);
            b2 = c[a2 + 24 >> 2] | 0;
            fs(10279);
            if (b2 | 0) {
              f2 = c[(c[b2 >> 2] | 0) + 32 >> 2] | 0;
              e2 = c[a2 + 68 >> 2] | 0;
              e2 = vb[c[(c[e2 >> 2] | 0) + 36 >> 2] & 127](e2) | 0;
              bc[f2 & 127](b2, e2, a2 + 28 | 0, c[a2 + 24 >> 2] | 0);
            }
            a2 = c[2006] | 0;
            f2 = (c[a2 + 16 >> 2] | 0) + -1 | 0;
            c[a2 + 16 >> 2] = f2;
            do
              if (!f2) {
                if (c[a2 + 4 >> 2] | 0) {
                  kb(d2 | 0, 0) | 0;
                  b2 = c[5649] | 0;
                  g[a2 + 8 >> 2] = +g[a2 + 8 >> 2] + +(((c[d2 + 4 >> 2] | 0) - (c[b2 + 4 >> 2] | 0) + (((c[d2 >> 2] | 0) - (c[b2 >> 2] | 0) | 0) * 1e6 | 0) - (c[a2 + 12 >> 2] | 0) | 0) >>> 0) / 1e3;
                  b2 = c[2006] | 0;
                  if (c[a2 + 16 >> 2] | 0)
                    break;
                } else
                  b2 = a2;
                b2 = c[b2 + 20 >> 2] | 0;
                c[2006] = b2;
              } else
                b2 = a2;
            while (0);
            a2 = b2 + 16 | 0;
            f2 = (c[a2 >> 2] | 0) + -1 | 0;
            c[a2 >> 2] = f2;
            if (f2 | 0) {
              i = d2;
              return;
            }
            do
              if (c[b2 + 4 >> 2] | 0) {
                kb(d2 | 0, 0) | 0;
                e2 = c[5649] | 0;
                f2 = b2 + 8 | 0;
                g[f2 >> 2] = +g[f2 >> 2] + +(((c[d2 + 4 >> 2] | 0) - (c[e2 + 4 >> 2] | 0) + (((c[d2 >> 2] | 0) - (c[e2 >> 2] | 0) | 0) * 1e6 | 0) - (c[b2 + 12 >> 2] | 0) | 0) >>> 0) / 1e3;
                if (!(c[a2 >> 2] | 0)) {
                  b2 = c[2006] | 0;
                  break;
                } else {
                  i = d2;
                  return;
                }
              }
            while (0);
            c[2006] = c[b2 + 20 >> 2];
            i = d2;
            return;
          }
          function Mf(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            rb[c[(c[b2 >> 2] | 0) + 32 >> 2] & 255](b2);
            Nf(a2, b2);
            rb[c[(c[b2 >> 2] | 0) + 36 >> 2] & 255](b2);
            return;
          }
          function Nf(b2, d2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0;
            x2 = i;
            i = i + 80 | 0;
            a[x2 + 16 >> 0] = 1;
            c[x2 + 12 >> 2] = 0;
            c[x2 + 4 >> 2] = 0;
            c[x2 + 8 >> 2] = 0;
            a[x2 + 36 >> 0] = 1;
            c[x2 + 32 >> 2] = 0;
            c[x2 + 24 >> 2] = 0;
            c[x2 + 28 >> 2] = 0;
            a[x2 + 56 >> 0] = 1;
            c[x2 + 52 >> 2] = 0;
            c[x2 + 44 >> 2] = 0;
            c[x2 + 48 >> 2] = 0;
            a[x2 + 76 >> 0] = 1;
            c[x2 + 72 >> 2] = 0;
            c[x2 + 64 >> 2] = 0;
            c[x2 + 68 >> 2] = 0;
            e2 = c[b2 + 8 >> 2] | 0;
            if ((e2 | 0) <= 0) {
              Of(x2);
              i = x2;
              return;
            }
            j2 = 0;
            k2 = 0;
            g2 = 0;
            f2 = 0;
            r2 = 0;
            while (1) {
              q2 = c[(c[(c[b2 + 16 >> 2] | 0) + (r2 << 2) >> 2] | 0) + 192 >> 2] | 0;
              p2 = (q2 + ~(q2 << 15) >> 10 ^ q2 + ~(q2 << 15)) * 9 | 0;
              p2 = (p2 >> 6 ^ p2) + ~((p2 >> 6 ^ p2) << 11) >> 16 ^ (p2 >> 6 ^ p2) + ~((p2 >> 6 ^ p2) << 11);
              o2 = p2 & j2 + -1;
              l2 = o2 >>> 0 < k2 >>> 0;
              a:
                do
                  if (l2) {
                    h2 = c[g2 + (o2 << 2) >> 2] | 0;
                    if ((h2 | 0) != -1) {
                      m2 = c[x2 + 72 >> 2] | 0;
                      while (1) {
                        if ((q2 | 0) == (c[m2 + (h2 << 3) >> 2] | 0)) {
                          n2 = 9;
                          break;
                        }
                        k2 = c[f2 + (h2 << 2) >> 2] | 0;
                        if ((k2 | 0) == -1)
                          break;
                        else
                          h2 = k2;
                      }
                      if ((n2 | 0) == 9 ? (n2 = 0, (c[x2 + 52 >> 2] | 0) + (h2 << 2) | 0) : 0)
                        break;
                      if (!l2) {
                        n2 = 16;
                        break;
                      }
                    }
                    e2 = c[g2 + (o2 << 2) >> 2] | 0;
                    if ((e2 | 0) != -1) {
                      h2 = c[x2 + 72 >> 2] | 0;
                      while (1) {
                        if ((q2 | 0) == (c[h2 + (e2 << 3) >> 2] | 0))
                          break;
                        e2 = c[f2 + (e2 << 2) >> 2] | 0;
                        if ((e2 | 0) == -1) {
                          n2 = 16;
                          break a;
                        }
                      }
                      c[(c[x2 + 52 >> 2] | 0) + (e2 << 2) >> 2] = q2;
                      e2 = j2;
                      n2 = 78;
                    } else
                      n2 = 16;
                  } else
                    n2 = 16;
                while (0);
              if ((n2 | 0) == 16) {
                l2 = c[x2 + 44 >> 2] | 0;
                if ((l2 | 0) == (j2 | 0)) {
                  e2 = j2 | 0 ? j2 << 1 : 1;
                  if ((j2 | 0) < (e2 | 0)) {
                    if ((e2 | 0) != 0 ? (c[5637] = (c[5637] | 0) + 1, w2 = qG((e2 << 2 | 3) + 16 | 0) | 0, (w2 | 0) != 0) : 0) {
                      c[(w2 + 4 + 15 & -16) + -4 >> 2] = w2;
                      g2 = w2 + 4 + 15 & -16;
                    } else
                      g2 = 0;
                    if ((j2 | 0) > 0) {
                      f2 = 0;
                      do {
                        c[g2 + (f2 << 2) >> 2] = c[(c[x2 + 52 >> 2] | 0) + (f2 << 2) >> 2];
                        f2 = f2 + 1 | 0;
                      } while ((f2 | 0) != (j2 | 0));
                    }
                    f2 = c[x2 + 52 >> 2] | 0;
                    if (f2 | 0) {
                      if (a[x2 + 56 >> 0] | 0) {
                        c[5638] = (c[5638] | 0) + 1;
                        rG(c[f2 + -4 >> 2] | 0);
                      }
                      c[x2 + 52 >> 2] = 0;
                    }
                    a[x2 + 56 >> 0] = 1;
                    c[x2 + 52 >> 2] = g2;
                    c[x2 + 48 >> 2] = e2;
                    f2 = j2;
                  } else {
                    f2 = j2;
                    e2 = j2;
                  }
                } else {
                  f2 = l2;
                  e2 = j2;
                }
                c[(c[x2 + 52 >> 2] | 0) + (f2 << 2) >> 2] = q2;
                c[x2 + 44 >> 2] = f2 + 1;
                f2 = c[x2 + 64 >> 2] | 0;
                if ((f2 | 0) == (c[x2 + 68 >> 2] | 0) ? (s2 = f2 | 0 ? f2 << 1 : 1, (f2 | 0) < (s2 | 0)) : 0) {
                  if ((s2 | 0) != 0 ? (c[5637] = (c[5637] | 0) + 1, t2 = qG((s2 << 3 | 3) + 16 | 0) | 0, (t2 | 0) != 0) : 0) {
                    c[(t2 + 4 + 15 & -16) + -4 >> 2] = t2;
                    g2 = t2 + 4 + 15 & -16;
                  } else
                    g2 = 0;
                  if ((f2 | 0) > 0) {
                    e2 = 0;
                    do {
                      k2 = (c[x2 + 72 >> 2] | 0) + (e2 << 3) | 0;
                      m2 = c[k2 + 4 >> 2] | 0;
                      n2 = g2 + (e2 << 3) | 0;
                      c[n2 >> 2] = c[k2 >> 2];
                      c[n2 + 4 >> 2] = m2;
                      e2 = e2 + 1 | 0;
                    } while ((e2 | 0) != (f2 | 0));
                  }
                  e2 = c[x2 + 72 >> 2] | 0;
                  if (e2 | 0) {
                    if (a[x2 + 76 >> 0] | 0) {
                      c[5638] = (c[5638] | 0) + 1;
                      rG(c[e2 + -4 >> 2] | 0);
                    }
                    c[x2 + 72 >> 2] = 0;
                  }
                  a[x2 + 76 >> 0] = 1;
                  c[x2 + 72 >> 2] = g2;
                  c[x2 + 68 >> 2] = s2;
                  f2 = c[x2 + 64 >> 2] | 0;
                  e2 = c[x2 + 48 >> 2] | 0;
                }
                n2 = (c[x2 + 72 >> 2] | 0) + (f2 << 3) | 0;
                c[n2 >> 2] = q2;
                c[n2 + 4 >> 2] = 0;
                c[x2 + 64 >> 2] = f2 + 1;
                if ((j2 | 0) < (e2 | 0)) {
                  k2 = c[x2 + 4 >> 2] | 0;
                  do
                    if ((e2 | 0) > (k2 | 0)) {
                      if ((e2 | 0) >= (k2 | 0)) {
                        do
                          if ((c[x2 + 8 >> 2] | 0) < (e2 | 0)) {
                            if ((e2 | 0) != 0 ? (c[5637] = (c[5637] | 0) + 1, u2 = qG((e2 << 2 | 3) + 16 | 0) | 0, (u2 | 0) != 0) : 0) {
                              c[(u2 + 4 + 15 & -16) + -4 >> 2] = u2;
                              f2 = u2 + 4 + 15 & -16;
                            } else
                              f2 = 0;
                            g2 = c[x2 + 12 >> 2] | 0;
                            if ((k2 | 0) <= 0) {
                              if (!g2) {
                                a[x2 + 16 >> 0] = 1;
                                c[x2 + 12 >> 2] = f2;
                                c[x2 + 8 >> 2] = e2;
                                break;
                              }
                            } else {
                              h2 = 0;
                              do {
                                c[f2 + (h2 << 2) >> 2] = c[g2 + (h2 << 2) >> 2];
                                h2 = h2 + 1 | 0;
                              } while ((h2 | 0) != (k2 | 0));
                            }
                            if (a[x2 + 16 >> 0] | 0) {
                              c[5638] = (c[5638] | 0) + 1;
                              rG(c[g2 + -4 >> 2] | 0);
                            }
                            a[x2 + 16 >> 0] = 1;
                            c[x2 + 12 >> 2] = f2;
                            c[x2 + 8 >> 2] = e2;
                          } else
                            f2 = c[x2 + 12 >> 2] | 0;
                        while (0);
                        ZG(f2 + (k2 << 2) | 0, 0, e2 - k2 << 2 | 0) | 0;
                      }
                      c[x2 + 4 >> 2] = e2;
                      j2 = c[x2 + 24 >> 2] | 0;
                      if ((e2 | 0) > (j2 | 0)) {
                        do
                          if ((c[x2 + 28 >> 2] | 0) < (e2 | 0)) {
                            if ((e2 | 0) != 0 ? (c[5637] = (c[5637] | 0) + 1, v2 = qG((e2 << 2 | 3) + 16 | 0) | 0, (v2 | 0) != 0) : 0) {
                              c[(v2 + 4 + 15 & -16) + -4 >> 2] = v2;
                              f2 = v2 + 4 + 15 & -16;
                            } else
                              f2 = 0;
                            g2 = c[x2 + 32 >> 2] | 0;
                            if ((j2 | 0) <= 0) {
                              if (!g2) {
                                a[x2 + 36 >> 0] = 1;
                                c[x2 + 32 >> 2] = f2;
                                c[x2 + 28 >> 2] = e2;
                                break;
                              }
                            } else {
                              h2 = 0;
                              do {
                                c[f2 + (h2 << 2) >> 2] = c[g2 + (h2 << 2) >> 2];
                                h2 = h2 + 1 | 0;
                              } while ((h2 | 0) != (j2 | 0));
                            }
                            if (a[x2 + 36 >> 0] | 0) {
                              c[5638] = (c[5638] | 0) + 1;
                              rG(c[g2 + -4 >> 2] | 0);
                            }
                            a[x2 + 36 >> 0] = 1;
                            c[x2 + 32 >> 2] = f2;
                            c[x2 + 28 >> 2] = e2;
                          } else
                            f2 = c[x2 + 32 >> 2] | 0;
                        while (0);
                        ZG(f2 + (j2 << 2) | 0, 0, e2 - j2 << 2 | 0) | 0;
                      }
                      c[x2 + 24 >> 2] = e2;
                      if ((e2 | 0) > 0) {
                        o2 = e2 << 2;
                        ZG(c[x2 + 12 >> 2] | 0, -1, o2 | 0) | 0;
                        ZG(c[x2 + 32 >> 2] | 0, -1, o2 | 0) | 0;
                      }
                      if ((k2 | 0) <= 0) {
                        e2 = c[x2 + 48 >> 2] | 0;
                        break;
                      }
                      f2 = c[x2 + 72 >> 2] | 0;
                      g2 = c[x2 + 12 >> 2] | 0;
                      h2 = c[x2 + 32 >> 2] | 0;
                      e2 = c[x2 + 48 >> 2] | 0;
                      j2 = 0;
                      do {
                        o2 = c[f2 + (j2 << 3) >> 2] | 0;
                        o2 = (o2 + ~(o2 << 15) >> 10 ^ o2 + ~(o2 << 15)) * 9 | 0;
                        o2 = g2 + ((((o2 >> 6 ^ o2) + ~((o2 >> 6 ^ o2) << 11) >> 16 ^ (o2 >> 6 ^ o2) + ~((o2 >> 6 ^ o2) << 11)) & e2 + -1) << 2) | 0;
                        c[h2 + (j2 << 2) >> 2] = c[o2 >> 2];
                        c[o2 >> 2] = j2;
                        j2 = j2 + 1 | 0;
                      } while ((j2 | 0) != (k2 | 0));
                    }
                  while (0);
                  f2 = e2;
                  e2 = p2 & e2 + -1;
                } else {
                  f2 = e2;
                  e2 = o2;
                }
                g2 = c[x2 + 12 >> 2] | 0;
                e2 = g2 + (e2 << 2) | 0;
                n2 = c[x2 + 32 >> 2] | 0;
                c[n2 + (l2 << 2) >> 2] = c[e2 >> 2];
                c[e2 >> 2] = l2;
                e2 = f2;
                f2 = n2;
                n2 = 78;
              }
              if ((n2 | 0) == 78) {
                n2 = 0;
                tb[c[(c[q2 >> 2] | 0) + 60 >> 2] & 127](q2, d2);
                j2 = e2;
                e2 = c[b2 + 8 >> 2] | 0;
              }
              h2 = r2 + 1 | 0;
              if ((h2 | 0) >= (e2 | 0))
                break;
              k2 = c[x2 + 4 >> 2] | 0;
              r2 = h2;
            }
            if ((e2 | 0) > 0)
              g2 = 0;
            else {
              Of(x2);
              i = x2;
              return;
            }
            do {
              f2 = c[(c[b2 + 16 >> 2] | 0) + (g2 << 2) >> 2] | 0;
              switch (c[f2 + 236 >> 2] | 0) {
                case 64:
                case 1: {
                  tb[c[(c[f2 >> 2] | 0) + 24 >> 2] & 127](f2, d2);
                  e2 = c[b2 + 8 >> 2] | 0;
                  break;
                }
                default: {
                }
              }
              g2 = g2 + 1 | 0;
            } while ((g2 | 0) < (e2 | 0));
            Of(x2);
            i = x2;
            return;
          }
          function Of(b2) {
            b2 = b2 | 0;
            var d2 = 0;
            d2 = c[b2 + 72 >> 2] | 0;
            if (d2 | 0) {
              if (a[b2 + 76 >> 0] | 0) {
                c[5638] = (c[5638] | 0) + 1;
                rG(c[d2 + -4 >> 2] | 0);
              }
              c[b2 + 72 >> 2] = 0;
            }
            a[b2 + 76 >> 0] = 1;
            c[b2 + 72 >> 2] = 0;
            c[b2 + 64 >> 2] = 0;
            c[b2 + 68 >> 2] = 0;
            d2 = c[b2 + 52 >> 2] | 0;
            if (d2 | 0) {
              if (a[b2 + 56 >> 0] | 0) {
                c[5638] = (c[5638] | 0) + 1;
                rG(c[d2 + -4 >> 2] | 0);
              }
              c[b2 + 52 >> 2] = 0;
            }
            a[b2 + 56 >> 0] = 1;
            c[b2 + 52 >> 2] = 0;
            c[b2 + 44 >> 2] = 0;
            c[b2 + 48 >> 2] = 0;
            d2 = c[b2 + 32 >> 2] | 0;
            if (d2 | 0) {
              if (a[b2 + 36 >> 0] | 0) {
                c[5638] = (c[5638] | 0) + 1;
                rG(c[d2 + -4 >> 2] | 0);
              }
              c[b2 + 32 >> 2] = 0;
            }
            a[b2 + 36 >> 0] = 1;
            c[b2 + 32 >> 2] = 0;
            c[b2 + 24 >> 2] = 0;
            c[b2 + 28 >> 2] = 0;
            d2 = c[b2 + 12 >> 2] | 0;
            if (!d2) {
              a[b2 + 16 >> 0] = 1;
              c[b2 + 12 >> 2] = 0;
              c[b2 + 4 >> 2] = 0;
              b2 = b2 + 8 | 0;
              c[b2 >> 2] = 0;
              return;
            }
            if (a[b2 + 16 >> 0] | 0) {
              c[5638] = (c[5638] | 0) + 1;
              rG(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 12 >> 2] = 0;
            a[b2 + 16 >> 0] = 1;
            c[b2 + 12 >> 2] = 0;
            c[b2 + 4 >> 2] = 0;
            b2 = b2 + 8 | 0;
            c[b2 >> 2] = 0;
            return;
          }
          function Pf(d2, e2, f2, h2, j2, k2) {
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            h2 = h2 | 0;
            j2 = j2 | 0;
            k2 = +k2;
            var l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0, N2 = 0, P2 = 0;
            F2 = i;
            i = i + 896 | 0;
            E2 = c[h2 + 4 >> 2] | 0;
            D2 = c[h2 + 12 >> 2] | 0;
            w2 = c[E2 + 4 >> 2] | 0;
            if ((w2 | 0) < 20) {
              c[F2 + 712 >> 2] = 3316;
              c[F2 + 712 + 168 >> 2] = 0;
              g[F2 + 712 + 172 >> 2] = k2;
              c[F2 + 712 + 164 >> 2] = c[j2 + 4 >> 2];
              g[F2 + 352 + 308 >> 2] = 9999999747378752e-20;
              a[F2 + 352 + 332 >> 0] = 0;
              c[F2 + 288 >> 2] = 6908;
              c[F2 + 64 >> 2] = 6816;
              c[F2 + 64 + 4 >> 2] = F2 + 352;
              c[F2 + 64 + 8 >> 2] = F2 + 288;
              c[F2 + 64 + 12 >> 2] = d2;
              c[F2 + 64 + 16 >> 2] = E2;
              c[F2 + 64 + 20 >> 2] = 0;
              if ((rn(F2 + 64 | 0, e2, f2, D2, D2, F2 + 712 | 0) | 0 ? (l2 = F2 + 712 + 132 | 0, m2 = +g[l2 >> 2], n2 = +g[F2 + 712 + 136 >> 2], p2 = +g[F2 + 712 + 140 >> 2], m2 * m2 + n2 * n2 + p2 * p2 > 9999999747378752e-20) : 0) ? (t2 = +g[F2 + 712 + 164 >> 2], t2 < +g[j2 + 4 >> 2]) : 0) {
                k2 = 1 / +O(+(m2 * m2 + n2 * n2 + p2 * p2));
                g[l2 >> 2] = m2 * k2;
                g[F2 + 712 + 136 >> 2] = n2 * k2;
                g[F2 + 712 + 140 >> 2] = p2 * k2;
                c[F2 + 16 >> 2] = c[h2 + 8 >> 2];
                c[F2 + 16 + 4 >> 2] = 0;
                c[F2 + 16 + 8 >> 2] = c[l2 >> 2];
                c[F2 + 16 + 8 + 4 >> 2] = c[l2 + 4 >> 2];
                c[F2 + 16 + 8 + 8 >> 2] = c[l2 + 8 >> 2];
                c[F2 + 16 + 8 + 12 >> 2] = c[l2 + 12 >> 2];
                c[F2 + 16 + 24 >> 2] = c[F2 + 712 + 148 >> 2];
                c[F2 + 16 + 24 + 4 >> 2] = c[F2 + 712 + 148 + 4 >> 2];
                c[F2 + 16 + 24 + 8 >> 2] = c[F2 + 712 + 148 + 8 >> 2];
                c[F2 + 16 + 24 + 12 >> 2] = c[F2 + 712 + 148 + 12 >> 2];
                g[F2 + 16 + 40 >> 2] = t2;
                +Pb[c[(c[j2 >> 2] | 0) + 12 >> 2] & 15](j2, F2 + 16 | 0, 1);
              }
              i = F2;
              return;
            }
            if ((w2 + -21 | 0) >>> 0 >= 9) {
              if ((w2 | 0) != 31) {
                i = F2;
                return;
              }
              fs(10657);
              if ((c[E2 + 20 >> 2] | 0) > 0) {
                l2 = 0;
                do {
                  u2 = c[E2 + 28 >> 2] | 0;
                  m2 = +g[u2 + (l2 * 80 | 0) >> 2];
                  p2 = +g[u2 + (l2 * 80 | 0) + 4 >> 2];
                  s2 = +g[u2 + (l2 * 80 | 0) + 8 >> 2];
                  n2 = +g[u2 + (l2 * 80 | 0) + 16 >> 2];
                  q2 = +g[u2 + (l2 * 80 | 0) + 20 >> 2];
                  v2 = +g[u2 + (l2 * 80 | 0) + 24 >> 2];
                  o2 = +g[u2 + (l2 * 80 | 0) + 32 >> 2];
                  r2 = +g[u2 + (l2 * 80 | 0) + 36 >> 2];
                  y2 = +g[u2 + (l2 * 80 | 0) + 40 >> 2];
                  N2 = +g[u2 + (l2 * 80 | 0) + 48 >> 2];
                  M2 = +g[u2 + (l2 * 80 | 0) + 52 >> 2];
                  C2 = +g[u2 + (l2 * 80 | 0) + 56 >> 2];
                  u2 = c[u2 + (l2 * 80 | 0) + 64 >> 2] | 0;
                  L2 = +g[D2 >> 2];
                  K2 = +g[D2 + 4 >> 2];
                  J2 = +g[D2 + 8 >> 2];
                  I2 = +g[D2 + 16 >> 2];
                  H2 = +g[D2 + 20 >> 2];
                  G2 = +g[D2 + 24 >> 2];
                  t2 = +g[D2 + 32 >> 2];
                  x2 = +g[D2 + 36 >> 2];
                  z2 = +g[D2 + 40 >> 2];
                  A2 = N2 * L2 + M2 * K2 + C2 * J2 + +g[D2 + 48 >> 2];
                  B2 = N2 * I2 + M2 * H2 + C2 * G2 + +g[D2 + 52 >> 2];
                  C2 = N2 * t2 + M2 * x2 + C2 * z2 + +g[D2 + 56 >> 2];
                  g[F2 + 712 >> 2] = m2 * L2 + n2 * K2 + o2 * J2;
                  g[F2 + 712 + 4 >> 2] = p2 * L2 + q2 * K2 + r2 * J2;
                  g[F2 + 712 + 8 >> 2] = s2 * L2 + v2 * K2 + y2 * J2;
                  g[F2 + 712 + 12 >> 2] = 0;
                  g[F2 + 712 + 16 >> 2] = m2 * I2 + n2 * H2 + o2 * G2;
                  g[F2 + 712 + 20 >> 2] = p2 * I2 + q2 * H2 + r2 * G2;
                  g[F2 + 712 + 24 >> 2] = s2 * I2 + v2 * H2 + y2 * G2;
                  g[F2 + 712 + 28 >> 2] = 0;
                  g[F2 + 712 + 32 >> 2] = m2 * t2 + n2 * x2 + o2 * z2;
                  g[F2 + 712 + 36 >> 2] = p2 * t2 + q2 * x2 + r2 * z2;
                  g[F2 + 712 + 40 >> 2] = s2 * t2 + v2 * x2 + y2 * z2;
                  g[F2 + 712 + 44 >> 2] = 0;
                  g[F2 + 712 + 48 >> 2] = A2;
                  g[F2 + 712 + 52 >> 2] = B2;
                  g[F2 + 712 + 56 >> 2] = C2;
                  g[F2 + 712 + 60 >> 2] = 0;
                  b[F2 + 352 + 8 >> 1] = 1;
                  b[F2 + 352 + 10 >> 1] = -1;
                  c[F2 + 352 >> 2] = 3500;
                  c[F2 + 352 + 12 >> 2] = j2;
                  c[F2 + 352 + 16 >> 2] = l2;
                  c[F2 + 352 + 4 >> 2] = c[j2 + 4 >> 2];
                  w2 = c[h2 + 8 >> 2] | 0;
                  c[F2 + 288 >> 2] = h2;
                  c[F2 + 288 + 4 >> 2] = u2;
                  c[F2 + 288 + 8 >> 2] = w2;
                  c[F2 + 288 + 12 >> 2] = F2 + 712;
                  c[F2 + 288 + 16 >> 2] = -1;
                  c[F2 + 288 + 20 >> 2] = l2;
                  Pf(d2, e2, f2, F2 + 288 | 0, F2 + 352 | 0, k2);
                  l2 = l2 + 1 | 0;
                } while ((l2 | 0) < (c[E2 + 20 >> 2] | 0));
              }
              l2 = c[2006] | 0;
              E2 = (c[l2 + 16 >> 2] | 0) + -1 | 0;
              c[l2 + 16 >> 2] = E2;
              if (E2 | 0) {
                i = F2;
                return;
              }
              do
                if (c[l2 + 4 >> 2] | 0) {
                  kb(F2 + 712 | 0, 0) | 0;
                  E2 = c[5649] | 0;
                  g[l2 + 8 >> 2] = +g[l2 + 8 >> 2] + +(((c[F2 + 712 + 4 >> 2] | 0) - (c[E2 + 4 >> 2] | 0) + (((c[F2 + 712 >> 2] | 0) - (c[E2 >> 2] | 0) | 0) * 1e6 | 0) - (c[l2 + 12 >> 2] | 0) | 0) >>> 0) / 1e3;
                  if (!(c[l2 + 16 >> 2] | 0)) {
                    l2 = c[2006] | 0;
                    break;
                  } else {
                    i = F2;
                    return;
                  }
                }
              while (0);
              c[2006] = c[l2 + 20 >> 2];
              i = F2;
              return;
            }
            switch (w2 | 0) {
              case 21: {
                p2 = +g[D2 >> 2];
                q2 = +g[D2 + 16 >> 2];
                r2 = +g[D2 + 32 >> 2];
                s2 = +g[D2 + 4 >> 2];
                t2 = +g[D2 + 20 >> 2];
                v2 = +g[D2 + 36 >> 2];
                x2 = +g[D2 + 8 >> 2];
                y2 = +g[D2 + 24 >> 2];
                z2 = +g[D2 + 40 >> 2];
                A2 = -+g[D2 + 48 >> 2];
                B2 = -+g[D2 + 52 >> 2];
                C2 = -+g[D2 + 56 >> 2];
                o2 = +g[e2 + 48 >> 2];
                n2 = +g[e2 + 52 >> 2];
                m2 = +g[e2 + 56 >> 2];
                g[F2 + 352 >> 2] = p2 * A2 + q2 * B2 + r2 * C2 + (p2 * o2 + q2 * n2 + r2 * m2);
                g[F2 + 352 + 4 >> 2] = s2 * A2 + t2 * B2 + v2 * C2 + (s2 * o2 + t2 * n2 + v2 * m2);
                g[F2 + 352 + 8 >> 2] = x2 * A2 + y2 * B2 + z2 * C2 + (x2 * o2 + y2 * n2 + z2 * m2);
                g[F2 + 352 + 12 >> 2] = 0;
                m2 = +g[f2 + 48 >> 2];
                n2 = +g[f2 + 52 >> 2];
                o2 = +g[f2 + 56 >> 2];
                P2 = +g[f2 >> 2];
                G2 = +g[f2 + 16 >> 2];
                H2 = +g[f2 + 32 >> 2];
                I2 = +g[f2 + 4 >> 2];
                J2 = +g[f2 + 20 >> 2];
                K2 = +g[f2 + 36 >> 2];
                L2 = +g[f2 + 8 >> 2];
                M2 = +g[f2 + 24 >> 2];
                N2 = +g[f2 + 40 >> 2];
                g[F2 + 288 >> 2] = p2 * P2 + q2 * G2 + r2 * H2;
                g[F2 + 288 + 4 >> 2] = p2 * I2 + q2 * J2 + r2 * K2;
                g[F2 + 288 + 8 >> 2] = p2 * L2 + q2 * M2 + r2 * N2;
                g[F2 + 288 + 12 >> 2] = 0;
                g[F2 + 288 + 16 >> 2] = s2 * P2 + t2 * G2 + v2 * H2;
                g[F2 + 288 + 20 >> 2] = s2 * I2 + t2 * J2 + v2 * K2;
                g[F2 + 288 + 24 >> 2] = s2 * L2 + t2 * M2 + v2 * N2;
                g[F2 + 288 + 28 >> 2] = 0;
                g[F2 + 288 + 32 >> 2] = x2 * P2 + y2 * G2 + z2 * H2;
                g[F2 + 288 + 36 >> 2] = x2 * I2 + y2 * J2 + z2 * K2;
                g[F2 + 288 + 40 >> 2] = x2 * L2 + y2 * M2 + z2 * N2;
                l2 = F2 + 288 + 44 | 0;
                c[l2 >> 2] = 0;
                c[l2 + 4 >> 2] = 0;
                c[l2 + 8 >> 2] = 0;
                c[l2 + 12 >> 2] = 0;
                c[l2 + 16 >> 2] = 0;
                l2 = c[h2 + 8 >> 2] | 0;
                N2 = +Hb[c[(c[E2 >> 2] | 0) + 48 >> 2] & 15](E2);
                c[F2 + 64 >> 2] = 7e3;
                c[F2 + 64 + 4 >> 2] = d2;
                c[F2 + 64 + 8 >> 2] = c[e2 >> 2];
                c[F2 + 64 + 8 + 4 >> 2] = c[e2 + 4 >> 2];
                c[F2 + 64 + 8 + 8 >> 2] = c[e2 + 8 >> 2];
                c[F2 + 64 + 8 + 12 >> 2] = c[e2 + 12 >> 2];
                c[F2 + 64 + 24 >> 2] = c[e2 + 16 >> 2];
                c[F2 + 64 + 24 + 4 >> 2] = c[e2 + 16 + 4 >> 2];
                c[F2 + 64 + 24 + 8 >> 2] = c[e2 + 16 + 8 >> 2];
                c[F2 + 64 + 24 + 12 >> 2] = c[e2 + 16 + 12 >> 2];
                c[F2 + 64 + 40 >> 2] = c[e2 + 32 >> 2];
                c[F2 + 64 + 40 + 4 >> 2] = c[e2 + 32 + 4 >> 2];
                c[F2 + 64 + 40 + 8 >> 2] = c[e2 + 32 + 8 >> 2];
                c[F2 + 64 + 40 + 12 >> 2] = c[e2 + 32 + 12 >> 2];
                c[F2 + 64 + 56 >> 2] = c[e2 + 48 >> 2];
                c[F2 + 64 + 56 + 4 >> 2] = c[e2 + 48 + 4 >> 2];
                c[F2 + 64 + 56 + 8 >> 2] = c[e2 + 48 + 8 >> 2];
                c[F2 + 64 + 56 + 12 >> 2] = c[e2 + 48 + 12 >> 2];
                c[F2 + 64 + 72 >> 2] = c[f2 >> 2];
                c[F2 + 64 + 72 + 4 >> 2] = c[f2 + 4 >> 2];
                c[F2 + 64 + 72 + 8 >> 2] = c[f2 + 8 >> 2];
                c[F2 + 64 + 72 + 12 >> 2] = c[f2 + 12 >> 2];
                c[F2 + 64 + 88 >> 2] = c[f2 + 16 >> 2];
                c[F2 + 64 + 88 + 4 >> 2] = c[f2 + 16 + 4 >> 2];
                c[F2 + 64 + 88 + 8 >> 2] = c[f2 + 16 + 8 >> 2];
                c[F2 + 64 + 88 + 12 >> 2] = c[f2 + 16 + 12 >> 2];
                c[F2 + 64 + 104 >> 2] = c[f2 + 32 >> 2];
                c[F2 + 64 + 104 + 4 >> 2] = c[f2 + 32 + 4 >> 2];
                c[F2 + 64 + 104 + 8 >> 2] = c[f2 + 32 + 8 >> 2];
                c[F2 + 64 + 104 + 12 >> 2] = c[f2 + 32 + 12 >> 2];
                c[F2 + 64 + 120 >> 2] = c[f2 + 48 >> 2];
                c[F2 + 64 + 120 + 4 >> 2] = c[f2 + 48 + 4 >> 2];
                c[F2 + 64 + 120 + 8 >> 2] = c[f2 + 48 + 8 >> 2];
                c[F2 + 64 + 120 + 12 >> 2] = c[f2 + 48 + 12 >> 2];
                c[F2 + 64 + 136 >> 2] = c[D2 >> 2];
                c[F2 + 64 + 136 + 4 >> 2] = c[D2 + 4 >> 2];
                c[F2 + 64 + 136 + 8 >> 2] = c[D2 + 8 >> 2];
                c[F2 + 64 + 136 + 12 >> 2] = c[D2 + 12 >> 2];
                c[F2 + 64 + 152 >> 2] = c[D2 + 16 >> 2];
                c[F2 + 64 + 152 + 4 >> 2] = c[D2 + 16 + 4 >> 2];
                c[F2 + 64 + 152 + 8 >> 2] = c[D2 + 16 + 8 >> 2];
                c[F2 + 64 + 152 + 12 >> 2] = c[D2 + 16 + 12 >> 2];
                c[F2 + 64 + 168 >> 2] = c[D2 + 32 >> 2];
                c[F2 + 64 + 168 + 4 >> 2] = c[D2 + 32 + 4 >> 2];
                c[F2 + 64 + 168 + 8 >> 2] = c[D2 + 32 + 8 >> 2];
                c[F2 + 64 + 168 + 12 >> 2] = c[D2 + 32 + 12 >> 2];
                c[F2 + 64 + 184 >> 2] = c[D2 + 48 >> 2];
                c[F2 + 64 + 184 + 4 >> 2] = c[D2 + 48 + 4 >> 2];
                c[F2 + 64 + 184 + 8 >> 2] = c[D2 + 48 + 8 >> 2];
                c[F2 + 64 + 184 + 12 >> 2] = c[D2 + 48 + 12 >> 2];
                g[F2 + 64 + 204 >> 2] = N2;
                c[F2 + 64 >> 2] = 3452;
                c[F2 + 64 + 212 >> 2] = j2;
                c[F2 + 64 + 216 >> 2] = l2;
                c[F2 + 64 + 220 >> 2] = E2;
                c[F2 + 64 + 200 >> 2] = c[j2 + 4 >> 2];
                g[F2 + 64 + 208 >> 2] = k2;
                bc[c[(c[d2 >> 2] | 0) + 8 >> 2] & 127](d2, F2 + 288 | 0, F2 + 16 | 0, F2);
                l2 = c[E2 + 52 >> 2] | 0;
                c[F2 + 712 >> 2] = 4856;
                c[F2 + 712 + 4 >> 2] = l2;
                c[F2 + 712 + 8 >> 2] = F2 + 64;
                l2 = c[E2 + 56 >> 2] | 0;
                if (!(a[l2 + 60 >> 0] | 0))
                  oe(l2, F2 + 712 | 0, F2 + 352 | 0, p2 * A2 + q2 * B2 + r2 * C2 + (p2 * m2 + q2 * n2 + r2 * o2), s2 * A2 + t2 * B2 + v2 * C2 + (s2 * m2 + t2 * n2 + v2 * o2), x2 * A2 + y2 * B2 + z2 * C2 + (x2 * m2 + y2 * n2 + z2 * o2), F2 + 16 | 0, F2);
                else
                  pe(l2, F2 + 712 | 0, F2 + 352 | 0, p2 * A2 + q2 * B2 + r2 * C2 + (p2 * m2 + q2 * n2 + r2 * o2), s2 * A2 + t2 * B2 + v2 * C2 + (s2 * m2 + t2 * n2 + v2 * o2), x2 * A2 + y2 * B2 + z2 * C2 + (x2 * m2 + y2 * n2 + z2 * o2), F2 + 16 | 0, F2, c[l2 + 56 >> 2] | 0);
                i = F2;
                return;
              }
              case 28: {
                c[F2 + 712 >> 2] = 3316;
                c[F2 + 712 + 168 >> 2] = 0;
                g[F2 + 712 + 172 >> 2] = k2;
                c[F2 + 712 + 164 >> 2] = c[j2 + 4 >> 2];
                c[F2 + 352 >> 2] = 6816;
                c[F2 + 352 + 4 >> 2] = 0;
                c[F2 + 352 + 8 >> 2] = 0;
                c[F2 + 352 + 12 >> 2] = d2;
                c[F2 + 352 + 16 >> 2] = 0;
                c[F2 + 352 + 20 >> 2] = E2;
                if ((rn(F2 + 352 | 0, e2, f2, D2, D2, F2 + 712 | 0) | 0 ? (u2 = F2 + 712 + 132 | 0, o2 = +g[u2 >> 2], q2 = +g[F2 + 712 + 136 >> 2], r2 = +g[F2 + 712 + 140 >> 2], o2 * o2 + q2 * q2 + r2 * r2 > 9999999747378752e-20) : 0) ? (s2 = +g[F2 + 712 + 164 >> 2], s2 < +g[j2 + 4 >> 2]) : 0) {
                  P2 = 1 / +O(+(o2 * o2 + q2 * q2 + r2 * r2));
                  g[u2 >> 2] = o2 * P2;
                  g[F2 + 712 + 136 >> 2] = q2 * P2;
                  g[F2 + 712 + 140 >> 2] = r2 * P2;
                  c[F2 + 288 >> 2] = c[h2 + 8 >> 2];
                  c[F2 + 288 + 4 >> 2] = 0;
                  c[F2 + 288 + 8 >> 2] = c[u2 >> 2];
                  c[F2 + 288 + 8 + 4 >> 2] = c[u2 + 4 >> 2];
                  c[F2 + 288 + 8 + 8 >> 2] = c[u2 + 8 >> 2];
                  c[F2 + 288 + 8 + 12 >> 2] = c[u2 + 12 >> 2];
                  c[F2 + 288 + 24 >> 2] = c[F2 + 712 + 148 >> 2];
                  c[F2 + 288 + 24 + 4 >> 2] = c[F2 + 712 + 148 + 4 >> 2];
                  c[F2 + 288 + 24 + 8 >> 2] = c[F2 + 712 + 148 + 8 >> 2];
                  c[F2 + 288 + 24 + 12 >> 2] = c[F2 + 712 + 148 + 12 >> 2];
                  g[F2 + 288 + 40 >> 2] = s2;
                  +Pb[c[(c[j2 >> 2] | 0) + 12 >> 2] & 15](j2, F2 + 288 | 0, 1);
                }
                i = F2;
                return;
              }
              default: {
                p2 = +g[D2 >> 2];
                q2 = +g[D2 + 16 >> 2];
                r2 = +g[D2 + 32 >> 2];
                x2 = +g[D2 + 4 >> 2];
                y2 = +g[D2 + 20 >> 2];
                z2 = +g[D2 + 36 >> 2];
                J2 = +g[D2 + 8 >> 2];
                L2 = +g[D2 + 24 >> 2];
                N2 = +g[D2 + 40 >> 2];
                H2 = -+g[D2 + 48 >> 2];
                G2 = -+g[D2 + 52 >> 2];
                C2 = -+g[D2 + 56 >> 2];
                A2 = +g[e2 + 48 >> 2];
                B2 = +g[e2 + 52 >> 2];
                m2 = +g[e2 + 56 >> 2];
                o2 = p2 * H2 + q2 * G2 + r2 * C2 + (p2 * A2 + q2 * B2 + r2 * m2);
                n2 = x2 * H2 + y2 * G2 + z2 * C2 + (x2 * A2 + y2 * B2 + z2 * m2);
                m2 = J2 * H2 + L2 * G2 + N2 * C2 + (J2 * A2 + L2 * B2 + N2 * m2);
                B2 = +g[f2 + 48 >> 2];
                A2 = +g[f2 + 52 >> 2];
                v2 = +g[f2 + 56 >> 2];
                s2 = p2 * H2 + q2 * G2 + r2 * C2 + (p2 * B2 + q2 * A2 + r2 * v2);
                t2 = x2 * H2 + y2 * G2 + z2 * C2 + (x2 * B2 + y2 * A2 + z2 * v2);
                v2 = J2 * H2 + L2 * G2 + N2 * C2 + (J2 * B2 + L2 * A2 + N2 * v2);
                A2 = +g[f2 >> 2];
                B2 = +g[f2 + 16 >> 2];
                C2 = +g[f2 + 32 >> 2];
                G2 = +g[f2 + 4 >> 2];
                H2 = +g[f2 + 20 >> 2];
                I2 = +g[f2 + 36 >> 2];
                K2 = +g[f2 + 8 >> 2];
                M2 = +g[f2 + 24 >> 2];
                P2 = +g[f2 + 40 >> 2];
                g[F2 + 712 >> 2] = p2 * A2 + q2 * B2 + r2 * C2;
                g[F2 + 712 + 4 >> 2] = p2 * G2 + q2 * H2 + r2 * I2;
                g[F2 + 712 + 8 >> 2] = p2 * K2 + q2 * M2 + r2 * P2;
                g[F2 + 712 + 12 >> 2] = 0;
                g[F2 + 712 + 16 >> 2] = x2 * A2 + y2 * B2 + z2 * C2;
                g[F2 + 712 + 20 >> 2] = x2 * G2 + y2 * H2 + z2 * I2;
                g[F2 + 712 + 24 >> 2] = x2 * K2 + y2 * M2 + z2 * P2;
                g[F2 + 712 + 28 >> 2] = 0;
                g[F2 + 712 + 32 >> 2] = J2 * A2 + L2 * B2 + N2 * C2;
                g[F2 + 712 + 36 >> 2] = J2 * G2 + L2 * H2 + N2 * I2;
                g[F2 + 712 + 40 >> 2] = J2 * K2 + L2 * M2 + N2 * P2;
                w2 = F2 + 712 + 44 | 0;
                c[w2 >> 2] = 0;
                c[w2 + 4 >> 2] = 0;
                c[w2 + 8 >> 2] = 0;
                c[w2 + 12 >> 2] = 0;
                c[w2 + 16 >> 2] = 0;
                h2 = c[h2 + 8 >> 2] | 0;
                P2 = +Hb[c[(c[E2 >> 2] | 0) + 48 >> 2] & 15](E2);
                c[F2 + 352 >> 2] = 7e3;
                c[F2 + 352 + 4 >> 2] = d2;
                c[F2 + 352 + 8 >> 2] = c[e2 >> 2];
                c[F2 + 352 + 8 + 4 >> 2] = c[e2 + 4 >> 2];
                c[F2 + 352 + 8 + 8 >> 2] = c[e2 + 8 >> 2];
                c[F2 + 352 + 8 + 12 >> 2] = c[e2 + 12 >> 2];
                c[F2 + 352 + 24 >> 2] = c[e2 + 16 >> 2];
                c[F2 + 352 + 24 + 4 >> 2] = c[e2 + 16 + 4 >> 2];
                c[F2 + 352 + 24 + 8 >> 2] = c[e2 + 16 + 8 >> 2];
                c[F2 + 352 + 24 + 12 >> 2] = c[e2 + 16 + 12 >> 2];
                c[F2 + 352 + 40 >> 2] = c[e2 + 32 >> 2];
                c[F2 + 352 + 40 + 4 >> 2] = c[e2 + 32 + 4 >> 2];
                c[F2 + 352 + 40 + 8 >> 2] = c[e2 + 32 + 8 >> 2];
                c[F2 + 352 + 40 + 12 >> 2] = c[e2 + 32 + 12 >> 2];
                c[F2 + 352 + 56 >> 2] = c[e2 + 48 >> 2];
                c[F2 + 352 + 56 + 4 >> 2] = c[e2 + 48 + 4 >> 2];
                c[F2 + 352 + 56 + 8 >> 2] = c[e2 + 48 + 8 >> 2];
                c[F2 + 352 + 56 + 12 >> 2] = c[e2 + 48 + 12 >> 2];
                c[F2 + 352 + 72 >> 2] = c[f2 >> 2];
                c[F2 + 352 + 72 + 4 >> 2] = c[f2 + 4 >> 2];
                c[F2 + 352 + 72 + 8 >> 2] = c[f2 + 8 >> 2];
                c[F2 + 352 + 72 + 12 >> 2] = c[f2 + 12 >> 2];
                c[F2 + 352 + 88 >> 2] = c[f2 + 16 >> 2];
                c[F2 + 352 + 88 + 4 >> 2] = c[f2 + 16 + 4 >> 2];
                c[F2 + 352 + 88 + 8 >> 2] = c[f2 + 16 + 8 >> 2];
                c[F2 + 352 + 88 + 12 >> 2] = c[f2 + 16 + 12 >> 2];
                c[F2 + 352 + 104 >> 2] = c[f2 + 32 >> 2];
                c[F2 + 352 + 104 + 4 >> 2] = c[f2 + 32 + 4 >> 2];
                c[F2 + 352 + 104 + 8 >> 2] = c[f2 + 32 + 8 >> 2];
                c[F2 + 352 + 104 + 12 >> 2] = c[f2 + 32 + 12 >> 2];
                c[F2 + 352 + 120 >> 2] = c[f2 + 48 >> 2];
                c[F2 + 352 + 120 + 4 >> 2] = c[f2 + 48 + 4 >> 2];
                c[F2 + 352 + 120 + 8 >> 2] = c[f2 + 48 + 8 >> 2];
                c[F2 + 352 + 120 + 12 >> 2] = c[f2 + 48 + 12 >> 2];
                c[F2 + 352 + 136 >> 2] = c[D2 >> 2];
                c[F2 + 352 + 136 + 4 >> 2] = c[D2 + 4 >> 2];
                c[F2 + 352 + 136 + 8 >> 2] = c[D2 + 8 >> 2];
                c[F2 + 352 + 136 + 12 >> 2] = c[D2 + 12 >> 2];
                c[F2 + 352 + 152 >> 2] = c[D2 + 16 >> 2];
                c[F2 + 352 + 152 + 4 >> 2] = c[D2 + 16 + 4 >> 2];
                c[F2 + 352 + 152 + 8 >> 2] = c[D2 + 16 + 8 >> 2];
                c[F2 + 352 + 152 + 12 >> 2] = c[D2 + 16 + 12 >> 2];
                c[F2 + 352 + 168 >> 2] = c[D2 + 32 >> 2];
                c[F2 + 352 + 168 + 4 >> 2] = c[D2 + 32 + 4 >> 2];
                c[F2 + 352 + 168 + 8 >> 2] = c[D2 + 32 + 8 >> 2];
                c[F2 + 352 + 168 + 12 >> 2] = c[D2 + 32 + 12 >> 2];
                c[F2 + 352 + 184 >> 2] = c[D2 + 48 >> 2];
                c[F2 + 352 + 184 + 4 >> 2] = c[D2 + 48 + 4 >> 2];
                c[F2 + 352 + 184 + 8 >> 2] = c[D2 + 48 + 8 >> 2];
                c[F2 + 352 + 184 + 12 >> 2] = c[D2 + 48 + 12 >> 2];
                g[F2 + 352 + 204 >> 2] = P2;
                c[F2 + 352 >> 2] = 3476;
                c[F2 + 352 + 212 >> 2] = j2;
                c[F2 + 352 + 216 >> 2] = h2;
                c[F2 + 352 + 220 >> 2] = E2;
                c[F2 + 352 + 200 >> 2] = c[j2 + 4 >> 2];
                g[F2 + 352 + 208 >> 2] = k2;
                bc[c[(c[d2 >> 2] | 0) + 8 >> 2] & 127](d2, F2 + 712 | 0, F2 + 288 | 0, F2 + 64 | 0);
                g[F2 + 16 >> 2] = o2;
                g[F2 + 16 + 4 >> 2] = n2;
                g[F2 + 16 + 8 >> 2] = m2;
                g[F2 + 16 + 12 >> 2] = 0;
                if (s2 < o2) {
                  g[F2 + 16 >> 2] = s2;
                  p2 = s2;
                } else
                  p2 = o2;
                if (t2 < n2) {
                  g[F2 + 16 + 4 >> 2] = t2;
                  q2 = t2;
                } else
                  q2 = n2;
                if (v2 < m2) {
                  g[F2 + 16 + 8 >> 2] = v2;
                  r2 = v2;
                } else
                  r2 = m2;
                g[F2 >> 2] = o2;
                g[F2 + 4 >> 2] = n2;
                g[F2 + 8 >> 2] = m2;
                g[F2 + 12 >> 2] = 0;
                if (o2 < s2) {
                  g[F2 >> 2] = s2;
                  o2 = s2;
                }
                if (n2 < t2) {
                  g[F2 + 4 >> 2] = t2;
                  n2 = t2;
                }
                if (m2 < v2) {
                  g[F2 + 8 >> 2] = v2;
                  m2 = v2;
                }
                g[F2 + 16 >> 2] = +g[F2 + 288 >> 2] + p2;
                g[F2 + 16 + 4 >> 2] = +g[F2 + 288 + 4 >> 2] + q2;
                g[F2 + 16 + 8 >> 2] = +g[F2 + 288 + 8 >> 2] + r2;
                g[F2 >> 2] = +g[F2 + 64 >> 2] + o2;
                g[F2 + 4 >> 2] = +g[F2 + 64 + 4 >> 2] + n2;
                g[F2 + 8 >> 2] = +g[F2 + 64 + 8 >> 2] + m2;
                bc[c[(c[E2 >> 2] | 0) + 64 >> 2] & 127](E2, F2 + 352 | 0, F2 + 16 | 0, F2);
                i = F2;
                return;
              }
            }
          }
          function Qf(a2) {
            a2 = a2 | 0;
            rG(a2);
            return;
          }
          function Rf(a2, b2, d2, e2, f2, h2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = +e2;
            f2 = f2 | 0;
            h2 = h2 | 0;
            var j2 = 0;
            j2 = i;
            i = i + 64 | 0;
            c[j2 + 48 >> 2] = f2;
            c[j2 + 48 + 4 >> 2] = h2;
            f2 = c[a2 + 212 >> 2] | 0;
            if (!(+g[f2 + 4 >> 2] >= e2)) {
              i = j2;
              return +e2;
            }
            c[j2 >> 2] = c[a2 + 216 >> 2];
            c[j2 + 4 >> 2] = j2 + 48;
            c[j2 + 8 >> 2] = c[b2 >> 2];
            c[j2 + 8 + 4 >> 2] = c[b2 + 4 >> 2];
            c[j2 + 8 + 8 >> 2] = c[b2 + 8 >> 2];
            c[j2 + 8 + 12 >> 2] = c[b2 + 12 >> 2];
            c[j2 + 24 >> 2] = c[d2 >> 2];
            c[j2 + 24 + 4 >> 2] = c[d2 + 4 >> 2];
            c[j2 + 24 + 8 >> 2] = c[d2 + 8 >> 2];
            c[j2 + 24 + 12 >> 2] = c[d2 + 12 >> 2];
            g[j2 + 40 >> 2] = e2;
            e2 = +Pb[c[(c[f2 >> 2] | 0) + 12 >> 2] & 15](f2, j2, 1);
            i = j2;
            return +e2;
          }
          function Sf(a2) {
            a2 = a2 | 0;
            rG(a2);
            return;
          }
          function Tf(a2, b2, d2, e2, f2, h2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = +e2;
            f2 = f2 | 0;
            h2 = h2 | 0;
            var j2 = 0;
            j2 = i;
            i = i + 64 | 0;
            c[j2 + 48 >> 2] = f2;
            c[j2 + 48 + 4 >> 2] = h2;
            f2 = c[a2 + 212 >> 2] | 0;
            if (!(+g[f2 + 4 >> 2] >= e2)) {
              i = j2;
              return +e2;
            }
            c[j2 >> 2] = c[a2 + 216 >> 2];
            c[j2 + 4 >> 2] = j2 + 48;
            c[j2 + 8 >> 2] = c[b2 >> 2];
            c[j2 + 8 + 4 >> 2] = c[b2 + 4 >> 2];
            c[j2 + 8 + 8 >> 2] = c[b2 + 8 >> 2];
            c[j2 + 8 + 12 >> 2] = c[b2 + 12 >> 2];
            c[j2 + 24 >> 2] = c[d2 >> 2];
            c[j2 + 24 + 4 >> 2] = c[d2 + 4 >> 2];
            c[j2 + 24 + 8 >> 2] = c[d2 + 8 >> 2];
            c[j2 + 24 + 12 >> 2] = c[d2 + 12 >> 2];
            g[j2 + 40 >> 2] = e2;
            e2 = +Pb[c[(c[f2 >> 2] | 0) + 12 >> 2] & 15](f2, j2, 1);
            i = j2;
            return +e2;
          }
          function Uf(a2) {
            a2 = a2 | 0;
            return;
          }
          function Vf(a2) {
            a2 = a2 | 0;
            rG(a2);
            return;
          }
          function Wf(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            a2 = c[a2 + 12 >> 2] | 0;
            return Ob[c[(c[a2 >> 2] | 0) + 8 >> 2] & 31](a2, b2) | 0;
          }
          function Xf(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0;
            e2 = i;
            i = i + 16 | 0;
            c[e2 >> 2] = -1;
            c[e2 + 4 >> 2] = c[a2 + 16 >> 2];
            if (!(c[b2 + 4 >> 2] | 0))
              c[b2 + 4 >> 2] = e2;
            g2 = c[a2 + 12 >> 2] | 0;
            f2 = +Pb[c[(c[g2 >> 2] | 0) + 12 >> 2] & 15](g2, b2, d2);
            c[a2 + 4 >> 2] = c[(c[a2 + 12 >> 2] | 0) + 4 >> 2];
            i = e2;
            return +f2;
          }
          function Yf(a2, b2, d2, e2, f2, h2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            h2 = +h2;
            var j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0;
            j2 = i;
            i = i + 464 | 0;
            fs(10877);
            c[j2 + 128 >> 2] = c[d2 >> 2];
            c[j2 + 128 + 4 >> 2] = c[d2 + 4 >> 2];
            c[j2 + 128 + 8 >> 2] = c[d2 + 8 >> 2];
            c[j2 + 128 + 12 >> 2] = c[d2 + 12 >> 2];
            c[j2 + 128 + 16 >> 2] = c[d2 + 16 >> 2];
            c[j2 + 128 + 16 + 4 >> 2] = c[d2 + 16 + 4 >> 2];
            c[j2 + 128 + 16 + 8 >> 2] = c[d2 + 16 + 8 >> 2];
            c[j2 + 128 + 16 + 12 >> 2] = c[d2 + 16 + 12 >> 2];
            c[j2 + 128 + 32 >> 2] = c[d2 + 32 >> 2];
            c[j2 + 128 + 32 + 4 >> 2] = c[d2 + 32 + 4 >> 2];
            c[j2 + 128 + 32 + 8 >> 2] = c[d2 + 32 + 8 >> 2];
            c[j2 + 128 + 32 + 12 >> 2] = c[d2 + 32 + 12 >> 2];
            l2 = j2 + 128 + 48 | 0;
            c[l2 >> 2] = c[d2 + 48 >> 2];
            c[l2 + 4 >> 2] = c[d2 + 48 + 4 >> 2];
            c[l2 + 8 >> 2] = c[d2 + 48 + 8 >> 2];
            c[l2 + 12 >> 2] = c[d2 + 48 + 12 >> 2];
            c[j2 + 64 >> 2] = c[e2 >> 2];
            c[j2 + 64 + 4 >> 2] = c[e2 + 4 >> 2];
            c[j2 + 64 + 8 >> 2] = c[e2 + 8 >> 2];
            c[j2 + 64 + 12 >> 2] = c[e2 + 12 >> 2];
            c[j2 + 64 + 16 >> 2] = c[e2 + 16 >> 2];
            c[j2 + 64 + 16 + 4 >> 2] = c[e2 + 16 + 4 >> 2];
            c[j2 + 64 + 16 + 8 >> 2] = c[e2 + 16 + 8 >> 2];
            c[j2 + 64 + 16 + 12 >> 2] = c[e2 + 16 + 12 >> 2];
            c[j2 + 64 + 32 >> 2] = c[e2 + 32 >> 2];
            c[j2 + 64 + 32 + 4 >> 2] = c[e2 + 32 + 4 >> 2];
            c[j2 + 64 + 32 + 8 >> 2] = c[e2 + 32 + 8 >> 2];
            c[j2 + 64 + 32 + 12 >> 2] = c[e2 + 32 + 12 >> 2];
            k2 = j2 + 64 + 48 | 0;
            c[k2 >> 2] = c[e2 + 48 >> 2];
            c[k2 + 4 >> 2] = c[e2 + 48 + 4 >> 2];
            c[k2 + 8 >> 2] = c[e2 + 48 + 8 >> 2];
            c[k2 + 12 >> 2] = c[e2 + 48 + 12 >> 2];
            Zf(j2 + 128 | 0, j2 + 64 | 0, j2 + 256 | 0, j2 + 192 | 0);
            t2 = +g[j2 + 192 >> 2];
            m2 = t2 * +g[j2 + 256 + 4 >> 2];
            r2 = t2 * +g[j2 + 256 + 8 >> 2];
            g[j2 + 16 >> 2] = +g[j2 + 256 >> 2] * t2;
            g[j2 + 16 + 4 >> 2] = m2;
            g[j2 + 16 + 8 >> 2] = r2;
            g[j2 + 16 + 12 >> 2] = 0;
            c[j2 + 256 >> 2] = 0;
            c[j2 + 256 + 4 >> 2] = 0;
            c[j2 + 256 + 8 >> 2] = 0;
            c[j2 + 256 + 12 >> 2] = 0;
            c[j2 + 192 + 4 >> 2] = 0;
            c[j2 + 192 + 4 + 4 >> 2] = 0;
            c[j2 + 192 + 24 >> 2] = 0;
            c[j2 + 192 + 24 + 4 >> 2] = 0;
            s2 = j2 + 192 + 44 | 0;
            c[s2 >> 2] = 0;
            c[s2 + 4 >> 2] = 0;
            c[s2 + 8 >> 2] = 0;
            c[s2 + 12 >> 2] = 0;
            c[s2 + 16 >> 2] = 0;
            _f(j2 + 128 | 0, j2);
            r2 = +g[j2 >> 2];
            m2 = +g[j2 + 4 >> 2];
            t2 = +g[j2 + 8 >> 2];
            q2 = +g[j2 + 12 >> 2];
            o2 = r2 * (2 / (r2 * r2 + m2 * m2 + t2 * t2 + q2 * q2));
            n2 = m2 * (2 / (r2 * r2 + m2 * m2 + t2 * t2 + q2 * q2));
            p2 = t2 * (2 / (r2 * r2 + m2 * m2 + t2 * t2 + q2 * q2));
            g[j2 + 192 >> 2] = 1 - (m2 * n2 + t2 * p2);
            g[j2 + 192 + 4 >> 2] = r2 * n2 - q2 * p2;
            g[j2 + 192 + 8 >> 2] = r2 * p2 + q2 * n2;
            g[j2 + 192 + 12 >> 2] = 0;
            g[j2 + 192 + 16 >> 2] = r2 * n2 + q2 * p2;
            g[j2 + 192 + 20 >> 2] = 1 - (r2 * o2 + t2 * p2);
            g[j2 + 192 + 24 >> 2] = m2 * p2 - q2 * o2;
            g[j2 + 192 + 28 >> 2] = 0;
            g[j2 + 192 + 32 >> 2] = r2 * p2 - q2 * n2;
            g[j2 + 192 + 36 >> 2] = m2 * p2 + q2 * o2;
            g[j2 + 192 + 40 >> 2] = 1 - (r2 * o2 + m2 * n2);
            g[s2 >> 2] = 0;
            _j(b2, j2 + 192 | 0, j2 + 256 | 0, j2 + 16 | 0, j2 + 48 | 0, j2 + 32 | 0);
            c[j2 + 256 >> 2] = 3524;
            c[j2 + 256 + 36 >> 2] = c[d2 >> 2];
            c[j2 + 256 + 36 + 4 >> 2] = c[d2 + 4 >> 2];
            c[j2 + 256 + 36 + 8 >> 2] = c[d2 + 8 >> 2];
            c[j2 + 256 + 36 + 12 >> 2] = c[d2 + 12 >> 2];
            c[j2 + 256 + 52 >> 2] = c[d2 + 16 >> 2];
            c[j2 + 256 + 52 + 4 >> 2] = c[d2 + 16 + 4 >> 2];
            c[j2 + 256 + 52 + 8 >> 2] = c[d2 + 16 + 8 >> 2];
            c[j2 + 256 + 52 + 12 >> 2] = c[d2 + 16 + 12 >> 2];
            c[j2 + 256 + 68 >> 2] = c[d2 + 32 >> 2];
            c[j2 + 256 + 68 + 4 >> 2] = c[d2 + 32 + 4 >> 2];
            c[j2 + 256 + 68 + 8 >> 2] = c[d2 + 32 + 8 >> 2];
            c[j2 + 256 + 68 + 12 >> 2] = c[d2 + 32 + 12 >> 2];
            s2 = j2 + 256 + 84 | 0;
            c[s2 >> 2] = c[d2 + 48 >> 2];
            c[s2 + 4 >> 2] = c[d2 + 48 + 4 >> 2];
            c[s2 + 8 >> 2] = c[d2 + 48 + 8 >> 2];
            c[s2 + 12 >> 2] = c[d2 + 48 + 12 >> 2];
            c[j2 + 256 + 100 >> 2] = c[e2 >> 2];
            c[j2 + 256 + 100 + 4 >> 2] = c[e2 + 4 >> 2];
            c[j2 + 256 + 100 + 8 >> 2] = c[e2 + 8 >> 2];
            c[j2 + 256 + 100 + 12 >> 2] = c[e2 + 12 >> 2];
            c[j2 + 256 + 116 >> 2] = c[e2 + 16 >> 2];
            c[j2 + 256 + 116 + 4 >> 2] = c[e2 + 16 + 4 >> 2];
            c[j2 + 256 + 116 + 8 >> 2] = c[e2 + 16 + 8 >> 2];
            c[j2 + 256 + 116 + 12 >> 2] = c[e2 + 16 + 12 >> 2];
            c[j2 + 256 + 132 >> 2] = c[e2 + 32 >> 2];
            c[j2 + 256 + 132 + 4 >> 2] = c[e2 + 32 + 4 >> 2];
            c[j2 + 256 + 132 + 8 >> 2] = c[e2 + 32 + 8 >> 2];
            c[j2 + 256 + 132 + 12 >> 2] = c[e2 + 32 + 12 >> 2];
            d2 = j2 + 256 + 148 | 0;
            c[d2 >> 2] = c[e2 + 48 >> 2];
            c[d2 + 4 >> 2] = c[e2 + 48 + 4 >> 2];
            c[d2 + 8 >> 2] = c[e2 + 48 + 8 >> 2];
            c[d2 + 12 >> 2] = c[e2 + 48 + 12 >> 2];
            c[j2 + 256 + 180 >> 2] = a2;
            c[j2 + 256 + 184 >> 2] = f2;
            g[j2 + 256 + 188 >> 2] = h2;
            c[j2 + 256 + 192 >> 2] = b2;
            n2 = +g[d2 >> 2] - +g[s2 >> 2];
            m2 = +g[j2 + 256 + 152 >> 2] - +g[j2 + 256 + 88 >> 2];
            o2 = +g[j2 + 256 + 156 >> 2] - +g[j2 + 256 + 92 >> 2];
            h2 = 1 / +O(+(n2 * n2 + m2 * m2 + o2 * o2));
            r2 = n2 * h2 == 0 ? 999999984306749400 : 1 / (n2 * h2);
            g[j2 + 256 + 4 >> 2] = r2;
            q2 = m2 * h2 == 0 ? 999999984306749400 : 1 / (m2 * h2);
            g[j2 + 256 + 8 >> 2] = q2;
            p2 = o2 * h2 == 0 ? 999999984306749400 : 1 / (o2 * h2);
            g[j2 + 256 + 12 >> 2] = p2;
            c[j2 + 256 + 20 >> 2] = r2 < 0 & 1;
            c[j2 + 256 + 24 >> 2] = q2 < 0 & 1;
            c[j2 + 256 + 28 >> 2] = p2 < 0 & 1;
            g[j2 + 256 + 32 >> 2] = o2 * (o2 * h2) + (n2 * (n2 * h2) + m2 * (m2 * h2));
            b2 = c[a2 + 68 >> 2] | 0;
            Fb[c[(c[b2 >> 2] | 0) + 24 >> 2] & 7](b2, l2, k2, j2 + 256 | 0, j2 + 48 | 0, j2 + 32 | 0);
            b2 = c[2006] | 0;
            a2 = (c[b2 + 16 >> 2] | 0) + -1 | 0;
            c[b2 + 16 >> 2] = a2;
            if (a2 | 0) {
              i = j2;
              return;
            }
            do
              if (c[b2 + 4 >> 2] | 0) {
                kb(j2 + 256 | 0, 0) | 0;
                s2 = c[5649] | 0;
                g[b2 + 8 >> 2] = +g[b2 + 8 >> 2] + +(((c[j2 + 256 + 4 >> 2] | 0) - (c[s2 + 4 >> 2] | 0) + (((c[j2 + 256 >> 2] | 0) - (c[s2 >> 2] | 0) | 0) * 1e6 | 0) - (c[b2 + 12 >> 2] | 0) | 0) >>> 0) / 1e3;
                if (!(c[b2 + 16 >> 2] | 0)) {
                  b2 = c[2006] | 0;
                  break;
                } else {
                  i = j2;
                  return;
                }
              }
            while (0);
            c[2006] = c[b2 + 20 >> 2];
            i = j2;
            return;
          }
          function Zf(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0;
            l2 = i;
            i = i + 64 | 0;
            n2 = +g[a2 + 20 >> 2];
            u2 = +g[a2 + 40 >> 2];
            p2 = +g[a2 + 24 >> 2];
            s2 = +g[a2 + 36 >> 2];
            t2 = +g[a2 + 32 >> 2];
            m2 = +g[a2 + 16 >> 2];
            k2 = +g[a2 >> 2];
            j2 = +g[a2 + 4 >> 2];
            q2 = +g[a2 + 8 >> 2];
            h2 = 1 / ((n2 * u2 - p2 * s2) * k2 + j2 * (p2 * t2 - u2 * m2) + (s2 * m2 - n2 * t2) * q2);
            z2 = +g[b2 >> 2];
            y2 = +g[b2 + 4 >> 2];
            A2 = +g[b2 + 8 >> 2];
            x2 = +g[b2 + 16 >> 2];
            w2 = +g[b2 + 20 >> 2];
            v2 = +g[b2 + 24 >> 2];
            r2 = +g[b2 + 32 >> 2];
            o2 = +g[b2 + 36 >> 2];
            f2 = +g[b2 + 40 >> 2];
            g[l2 + 16 >> 2] = A2 * ((s2 * m2 - n2 * t2) * h2) + (z2 * ((n2 * u2 - p2 * s2) * h2) + y2 * ((p2 * t2 - u2 * m2) * h2));
            g[l2 + 16 + 4 >> 2] = A2 * ((t2 * j2 - s2 * k2) * h2) + (z2 * ((s2 * q2 - u2 * j2) * h2) + y2 * ((u2 * k2 - t2 * q2) * h2));
            g[l2 + 16 + 8 >> 2] = A2 * ((n2 * k2 - m2 * j2) * h2) + (z2 * ((p2 * j2 - n2 * q2) * h2) + y2 * ((m2 * q2 - p2 * k2) * h2));
            g[l2 + 16 + 12 >> 2] = 0;
            g[l2 + 16 + 16 >> 2] = (n2 * u2 - p2 * s2) * h2 * x2 + (p2 * t2 - u2 * m2) * h2 * w2 + (s2 * m2 - n2 * t2) * h2 * v2;
            g[l2 + 16 + 20 >> 2] = (s2 * q2 - u2 * j2) * h2 * x2 + (u2 * k2 - t2 * q2) * h2 * w2 + (t2 * j2 - s2 * k2) * h2 * v2;
            g[l2 + 16 + 24 >> 2] = (p2 * j2 - n2 * q2) * h2 * x2 + (m2 * q2 - p2 * k2) * h2 * w2 + (n2 * k2 - m2 * j2) * h2 * v2;
            g[l2 + 16 + 28 >> 2] = 0;
            g[l2 + 16 + 32 >> 2] = (n2 * u2 - p2 * s2) * h2 * r2 + (p2 * t2 - u2 * m2) * h2 * o2 + (s2 * m2 - n2 * t2) * h2 * f2;
            g[l2 + 16 + 36 >> 2] = (s2 * q2 - u2 * j2) * h2 * r2 + (u2 * k2 - t2 * q2) * h2 * o2 + (t2 * j2 - s2 * k2) * h2 * f2;
            g[l2 + 16 + 40 >> 2] = (p2 * j2 - n2 * q2) * h2 * r2 + (m2 * q2 - p2 * k2) * h2 * o2 + (n2 * k2 - m2 * j2) * h2 * f2;
            g[l2 + 16 + 44 >> 2] = 0;
            _f(l2 + 16 | 0, l2);
            f2 = +g[l2 >> 2];
            h2 = +g[l2 + 4 >> 2];
            j2 = +g[l2 + 8 >> 2];
            m2 = +g[l2 + 12 >> 2];
            k2 = 1 / +O(+(f2 * f2 + h2 * h2 + j2 * j2 + m2 * m2));
            g[l2 >> 2] = f2 * k2;
            g[l2 + 4 >> 2] = h2 * k2;
            g[l2 + 8 >> 2] = j2 * k2;
            g[l2 + 12 >> 2] = m2 * k2;
            m2 = m2 * k2 < -1 ? -1 : m2 * k2;
            g[e2 >> 2] = +T(+(m2 > 1 ? 1 : m2)) * 2;
            g[d2 >> 2] = f2 * k2;
            g[d2 + 4 >> 2] = h2 * k2;
            g[d2 + 8 >> 2] = j2 * k2;
            g[d2 + 12 >> 2] = 0;
            if (f2 * k2 * (f2 * k2) + h2 * k2 * (h2 * k2) + j2 * k2 * (j2 * k2) < 14210854715202004e-30) {
              c[d2 >> 2] = 1065353216;
              c[d2 + 4 >> 2] = 0;
              c[d2 + 8 >> 2] = 0;
              g[d2 + 12 >> 2] = 0;
              i = l2;
              return;
            } else {
              A2 = 1 / +O(+(f2 * k2 * (f2 * k2) + h2 * k2 * (h2 * k2) + j2 * k2 * (j2 * k2)));
              g[d2 >> 2] = f2 * k2 * A2;
              g[d2 + 4 >> 2] = A2 * (h2 * k2);
              g[d2 + 8 >> 2] = A2 * (j2 * k2);
              i = l2;
              return;
            }
          }
          function _f(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, h2 = 0, j2 = 0, l2 = 0, m2 = 0, n2 = 0;
            h2 = i;
            i = i + 16 | 0;
            d2 = +g[a2 >> 2];
            e2 = +g[a2 + 20 >> 2];
            f2 = +g[a2 + 40 >> 2];
            if (d2 + e2 + f2 > 0) {
              f2 = +O(+(d2 + e2 + f2 + 1));
              g[h2 + 12 >> 2] = f2 * 0.5;
              n2 = 0.5 / f2 * (+g[a2 + 36 >> 2] - +g[a2 + 24 >> 2]);
              g[h2 >> 2] = n2;
              d2 = 0.5 / f2 * (+g[a2 + 8 >> 2] - +g[a2 + 32 >> 2]);
              g[h2 + 4 >> 2] = d2;
              e2 = 0.5 / f2 * (+g[a2 + 16 >> 2] - +g[a2 + 4 >> 2]);
              g[h2 + 8 >> 2] = e2;
              a2 = (g[k >> 2] = n2, c[k >> 2] | 0);
              m2 = (g[k >> 2] = d2, c[k >> 2] | 0);
              l2 = (g[k >> 2] = e2, c[k >> 2] | 0);
              j2 = (g[k >> 2] = f2 * 0.5, c[k >> 2] | 0);
              c[b2 >> 2] = a2;
              a2 = b2 + 4 | 0;
              c[a2 >> 2] = m2;
              a2 = b2 + 8 | 0;
              c[a2 >> 2] = l2;
              a2 = b2 + 12 | 0;
              c[a2 >> 2] = j2;
              i = h2;
              return;
            } else {
              m2 = d2 < e2 ? e2 < f2 ? 2 : 1 : d2 < f2 ? 2 : 0;
              n2 = +O(+(+g[a2 + (m2 << 4) + (m2 << 2) >> 2] - +g[a2 + ((((m2 + 1 | 0) >>> 0) % 3 | 0) << 4) + ((((m2 + 1 | 0) >>> 0) % 3 | 0) << 2) >> 2] - +g[a2 + ((((m2 + 2 | 0) >>> 0) % 3 | 0) << 4) + ((((m2 + 2 | 0) >>> 0) % 3 | 0) << 2) >> 2] + 1));
              g[h2 + (m2 << 2) >> 2] = n2 * 0.5;
              g[h2 + 12 >> 2] = 0.5 / n2 * (+g[a2 + ((((m2 + 2 | 0) >>> 0) % 3 | 0) << 4) + ((((m2 + 1 | 0) >>> 0) % 3 | 0) << 2) >> 2] - +g[a2 + ((((m2 + 1 | 0) >>> 0) % 3 | 0) << 4) + ((((m2 + 2 | 0) >>> 0) % 3 | 0) << 2) >> 2]);
              g[h2 + ((((m2 + 1 | 0) >>> 0) % 3 | 0) << 2) >> 2] = 0.5 / n2 * (+g[a2 + ((((m2 + 1 | 0) >>> 0) % 3 | 0) << 4) + (m2 << 2) >> 2] + +g[a2 + (m2 << 4) + ((((m2 + 1 | 0) >>> 0) % 3 | 0) << 2) >> 2]);
              g[h2 + ((((m2 + 2 | 0) >>> 0) % 3 | 0) << 2) >> 2] = 0.5 / n2 * (+g[a2 + ((((m2 + 2 | 0) >>> 0) % 3 | 0) << 4) + (m2 << 2) >> 2] + +g[a2 + (m2 << 4) + ((((m2 + 2 | 0) >>> 0) % 3 | 0) << 2) >> 2]);
              m2 = c[h2 >> 2] | 0;
              a2 = c[h2 + 4 >> 2] | 0;
              j2 = c[h2 + 8 >> 2] | 0;
              l2 = c[h2 + 12 >> 2] | 0;
              c[b2 >> 2] = m2;
              m2 = b2 + 4 | 0;
              c[m2 >> 2] = a2;
              m2 = b2 + 8 | 0;
              c[m2 >> 2] = j2;
              m2 = b2 + 12 | 0;
              c[m2 >> 2] = l2;
              i = h2;
              return;
            }
          }
          function $f(a2) {
            a2 = a2 | 0;
            rG(a2);
            return;
          }
          function ag(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, h2 = 0, j2 = 0;
            e2 = i;
            i = i + 32 | 0;
            d2 = c[a2 + 184 >> 2] | 0;
            if (+g[d2 + 4 >> 2] == 0) {
              a2 = 0;
              i = e2;
              return a2 | 0;
            }
            b2 = c[b2 >> 2] | 0;
            if (!(Ob[c[(c[d2 >> 2] | 0) + 8 >> 2] & 31](d2, c[b2 + 188 >> 2] | 0) | 0)) {
              a2 = 1;
              i = e2;
              return a2 | 0;
            }
            h2 = c[a2 + 192 >> 2] | 0;
            j2 = c[b2 + 192 >> 2] | 0;
            d2 = c[a2 + 184 >> 2] | 0;
            f2 = +g[a2 + 188 >> 2];
            c[e2 >> 2] = 0;
            c[e2 + 4 >> 2] = j2;
            c[e2 + 8 >> 2] = b2;
            c[e2 + 12 >> 2] = b2 + 4;
            c[e2 + 16 >> 2] = -1;
            c[e2 + 20 >> 2] = -1;
            Pf(h2, a2 + 36 | 0, a2 + 100 | 0, e2, d2, f2);
            a2 = 1;
            i = e2;
            return a2 | 0;
          }
          function bg(a2) {
            a2 = a2 | 0;
            rG(a2);
            return;
          }
          function cg(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0;
            d2 = i;
            i = i + 96 | 0;
            b2 = c[b2 >> 2] | 0;
            if ((b2 | 0) == (c[a2 + 4 >> 2] | 0)) {
              i = d2;
              return 1;
            }
            e2 = c[a2 + 12 >> 2] | 0;
            if (!(Ob[c[(c[e2 >> 2] | 0) + 8 >> 2] & 31](e2, c[b2 + 188 >> 2] | 0) | 0)) {
              i = d2;
              return 1;
            }
            e2 = c[a2 + 4 >> 2] | 0;
            f2 = c[e2 + 192 >> 2] | 0;
            c[d2 + 64 >> 2] = 0;
            c[d2 + 64 + 4 >> 2] = f2;
            c[d2 + 64 + 8 >> 2] = e2;
            c[d2 + 64 + 12 >> 2] = e2 + 4;
            c[d2 + 64 + 16 >> 2] = -1;
            c[d2 + 64 + 20 >> 2] = -1;
            e2 = c[b2 + 192 >> 2] | 0;
            c[d2 + 40 >> 2] = 0;
            c[d2 + 40 + 4 >> 2] = e2;
            c[d2 + 40 + 8 >> 2] = b2;
            c[d2 + 40 + 12 >> 2] = b2 + 4;
            c[d2 + 40 + 16 >> 2] = -1;
            c[d2 + 40 + 20 >> 2] = -1;
            b2 = c[(c[a2 + 8 >> 2] | 0) + 24 >> 2] | 0;
            b2 = zb[c[(c[b2 >> 2] | 0) + 8 >> 2] & 31](b2, d2 + 64 | 0, d2 + 40 | 0, 0) | 0;
            if (b2 | 0) {
              f2 = c[a2 + 12 >> 2] | 0;
              c[d2 + 4 >> 2] = 0;
              c[d2 + 8 >> 2] = d2 + 64;
              c[d2 + 12 >> 2] = d2 + 40;
              c[d2 >> 2] = 3564;
              c[d2 + 32 >> 2] = f2;
              pb[c[(c[b2 >> 2] | 0) + 8 >> 2] & 31](b2, d2 + 64 | 0, d2 + 40 | 0, (c[a2 + 8 >> 2] | 0) + 28 | 0, d2);
              rb[c[c[b2 >> 2] >> 2] & 255](b2);
              f2 = c[(c[a2 + 8 >> 2] | 0) + 24 >> 2] | 0;
              tb[c[(c[f2 >> 2] | 0) + 60 >> 2] & 127](f2, b2);
            }
            i = d2;
            return 1;
          }
          function dg(a2) {
            a2 = a2 | 0;
            return;
          }
          function eg(a2) {
            a2 = a2 | 0;
            rG(a2);
            return;
          }
          function fg(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            c[a2 + 16 >> 2] = b2;
            c[a2 + 24 >> 2] = d2;
            return;
          }
          function gg(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            c[a2 + 20 >> 2] = b2;
            c[a2 + 28 >> 2] = d2;
            return;
          }
          function hg(b2, d2, e2, f2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = +f2;
            var h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0;
            y2 = i;
            i = i + 192 | 0;
            w2 = c[(c[b2 + 4 >> 2] | 0) + 740 >> 2] | 0;
            x2 = c[(c[b2 + 8 >> 2] | 0) + 8 >> 2] | 0;
            j2 = +g[e2 >> 2];
            t2 = +g[d2 >> 2] * f2 + j2;
            k2 = +g[e2 + 4 >> 2];
            u2 = +g[d2 + 4 >> 2] * f2 + k2;
            h2 = +g[e2 + 8 >> 2];
            v2 = +g[d2 + 8 >> 2] * f2 + h2;
            l2 = c[(c[b2 + 12 >> 2] | 0) + 8 >> 2] | 0;
            m2 = +g[l2 + 52 >> 2];
            n2 = +g[l2 + 56 >> 2];
            if ((w2 | 0) != (x2 | 0)) {
              q2 = v2 - +g[l2 + 60 >> 2];
              j2 = j2 - +g[x2 + 52 >> 2];
              k2 = k2 - +g[x2 + 56 >> 2];
              h2 = h2 - +g[x2 + 60 >> 2];
              o2 = (t2 - m2) * +g[l2 + 4 >> 2] + (u2 - n2) * +g[l2 + 20 >> 2] + q2 * +g[l2 + 36 >> 2];
              p2 = (t2 - m2) * +g[l2 + 8 >> 2] + (u2 - n2) * +g[l2 + 24 >> 2] + q2 * +g[l2 + 40 >> 2];
              q2 = (t2 - m2) * +g[l2 + 12 >> 2] + (u2 - n2) * +g[l2 + 28 >> 2] + q2 * +g[l2 + 44 >> 2];
              r2 = j2 * +g[x2 + 4 >> 2] + k2 * +g[x2 + 20 >> 2] + h2 * +g[x2 + 36 >> 2];
              s2 = j2 * +g[x2 + 8 >> 2] + k2 * +g[x2 + 24 >> 2] + h2 * +g[x2 + 40 >> 2];
              h2 = j2 * +g[x2 + 12 >> 2] + k2 * +g[x2 + 28 >> 2] + h2 * +g[x2 + 44 >> 2];
            } else {
              s2 = t2 - +g[w2 + 52 >> 2];
              r2 = u2 - +g[w2 + 56 >> 2];
              q2 = v2 - +g[w2 + 60 >> 2];
              h2 = h2 - +g[l2 + 60 >> 2];
              o2 = s2 * +g[w2 + 4 >> 2] + r2 * +g[w2 + 20 >> 2] + q2 * +g[w2 + 36 >> 2];
              p2 = s2 * +g[w2 + 8 >> 2] + r2 * +g[w2 + 24 >> 2] + q2 * +g[w2 + 40 >> 2];
              q2 = s2 * +g[w2 + 12 >> 2] + r2 * +g[w2 + 28 >> 2] + q2 * +g[w2 + 44 >> 2];
              r2 = (j2 - m2) * +g[l2 + 4 >> 2] + (k2 - n2) * +g[l2 + 20 >> 2] + h2 * +g[l2 + 36 >> 2];
              s2 = (j2 - m2) * +g[l2 + 8 >> 2] + (k2 - n2) * +g[l2 + 24 >> 2] + h2 * +g[l2 + 40 >> 2];
              h2 = (j2 - m2) * +g[l2 + 12 >> 2] + (k2 - n2) * +g[l2 + 28 >> 2] + h2 * +g[l2 + 44 >> 2];
            }
            g[y2 >> 2] = o2;
            g[y2 + 4 >> 2] = p2;
            g[y2 + 8 >> 2] = q2;
            g[y2 + 12 >> 2] = 0;
            g[y2 + 16 >> 2] = r2;
            g[y2 + 20 >> 2] = s2;
            g[y2 + 24 >> 2] = h2;
            g[y2 + 28 >> 2] = 0;
            c[y2 + 64 >> 2] = c[d2 >> 2];
            c[y2 + 64 + 4 >> 2] = c[d2 + 4 >> 2];
            c[y2 + 64 + 8 >> 2] = c[d2 + 8 >> 2];
            c[y2 + 64 + 12 >> 2] = c[d2 + 12 >> 2];
            g[y2 + 80 >> 2] = f2;
            g[y2 + 84 >> 2] = 0;
            g[y2 + 88 >> 2] = 0;
            g[y2 + 92 >> 2] = 0;
            c[y2 + 112 >> 2] = 0;
            a[y2 + 116 >> 0] = 0;
            c[y2 + 120 >> 2] = 0;
            c[y2 + 120 + 4 >> 2] = 0;
            c[y2 + 120 + 8 >> 2] = 0;
            c[y2 + 120 + 12 >> 2] = 0;
            c[y2 + 120 + 16 >> 2] = 0;
            c[y2 + 120 + 20 >> 2] = 0;
            c[y2 + 120 + 24 >> 2] = 0;
            c[y2 + 120 + 28 >> 2] = 0;
            g[y2 + 48 >> 2] = t2;
            g[y2 + 52 >> 2] = u2;
            g[y2 + 56 >> 2] = v2;
            g[y2 + 60 >> 2] = 0;
            c[y2 + 32 >> 2] = c[e2 >> 2];
            c[y2 + 32 + 4 >> 2] = c[e2 + 4 >> 2];
            c[y2 + 32 + 8 >> 2] = c[e2 + 8 >> 2];
            c[y2 + 32 + 12 >> 2] = c[e2 + 12 >> 2];
            d2 = c[b2 + 20 >> 2] | 0;
            l2 = c[b2 + 16 >> 2] | 0;
            e2 = c[b2 + 28 >> 2] | 0;
            A2 = c[b2 + 24 >> 2] | 0;
            z2 = (w2 | 0) != (x2 | 0) ? d2 : l2;
            d2 = (w2 | 0) != (x2 | 0) ? l2 : d2;
            l2 = (w2 | 0) != (x2 | 0) ? e2 : A2;
            e2 = (w2 | 0) != (x2 | 0) ? A2 : e2;
            c[y2 + 96 >> 2] = z2;
            c[y2 + 100 >> 2] = d2;
            c[y2 + 104 >> 2] = l2;
            c[y2 + 108 >> 2] = e2;
            A2 = c[b2 + 32 >> 2] | 0;
            +Bb[c[(c[A2 >> 2] | 0) + 12 >> 2] & 1](A2, y2, c[((w2 | 0) != (x2 | 0) ? b2 + 12 | 0 : b2 + 8 | 0) >> 2] | 0, z2, l2, c[((w2 | 0) != (x2 | 0) ? b2 + 8 | 0 : b2 + 12 | 0) >> 2] | 0, d2, e2);
            i = y2;
            return;
          }
          function ig(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, g2 = 0;
            f2 = i;
            i = i + 96 | 0;
            g2 = c[b2 + 192 >> 2] | 0;
            c[f2 + 64 >> 2] = 0;
            c[f2 + 64 + 4 >> 2] = g2;
            c[f2 + 64 + 8 >> 2] = b2;
            c[f2 + 64 + 12 >> 2] = b2 + 4;
            c[f2 + 64 + 16 >> 2] = -1;
            c[f2 + 64 + 20 >> 2] = -1;
            b2 = c[d2 + 192 >> 2] | 0;
            c[f2 + 40 >> 2] = 0;
            c[f2 + 40 + 4 >> 2] = b2;
            c[f2 + 40 + 8 >> 2] = d2;
            c[f2 + 40 + 12 >> 2] = d2 + 4;
            c[f2 + 40 + 16 >> 2] = -1;
            c[f2 + 40 + 20 >> 2] = -1;
            b2 = c[a2 + 24 >> 2] | 0;
            b2 = zb[c[(c[b2 >> 2] | 0) + 8 >> 2] & 31](b2, f2 + 64 | 0, f2 + 40 | 0, 0) | 0;
            if (!b2) {
              i = f2;
              return;
            }
            c[f2 + 4 >> 2] = 0;
            c[f2 + 8 >> 2] = f2 + 64;
            c[f2 + 12 >> 2] = f2 + 40;
            c[f2 >> 2] = 3564;
            c[f2 + 32 >> 2] = e2;
            pb[c[(c[b2 >> 2] | 0) + 8 >> 2] & 31](b2, f2 + 64 | 0, f2 + 40 | 0, a2 + 28 | 0, f2);
            rb[c[c[b2 >> 2] >> 2] & 255](b2);
            g2 = c[a2 + 24 >> 2] | 0;
            tb[c[(c[g2 >> 2] | 0) + 60 >> 2] & 127](g2, b2);
            i = f2;
            return;
          }
          function jg(b2) {
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0;
            c[b2 >> 2] = 3592;
            d2 = c[b2 + 12 >> 2] | 0;
            if ((d2 | 0) > 0) {
              f2 = 0;
              do {
                e2 = c[(c[b2 + 20 >> 2] | 0) + (f2 << 2) >> 2] | 0;
                if (e2 | 0) {
                  rb[c[c[e2 >> 2] >> 2] & 255](e2);
                  e2 = c[b2 + 4 >> 2] | 0;
                  tb[c[(c[e2 >> 2] | 0) + 60 >> 2] & 127](e2, c[(c[b2 + 20 >> 2] | 0) + (f2 << 2) >> 2] | 0);
                }
                f2 = f2 + 1 | 0;
              } while ((f2 | 0) != (d2 | 0));
            }
            d2 = c[b2 + 20 >> 2] | 0;
            if (!d2) {
              a[b2 + 24 >> 0] = 1;
              c[b2 + 20 >> 2] = 0;
              c[b2 + 12 >> 2] = 0;
              b2 = b2 + 16 | 0;
              c[b2 >> 2] = 0;
              return;
            }
            if (a[b2 + 24 >> 0] | 0) {
              c[5638] = (c[5638] | 0) + 1;
              rG(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 20 >> 2] = 0;
            a[b2 + 24 >> 0] = 1;
            c[b2 + 20 >> 2] = 0;
            c[b2 + 12 >> 2] = 0;
            b2 = b2 + 16 | 0;
            c[b2 >> 2] = 0;
            return;
          }
          function kg(a2) {
            a2 = a2 | 0;
            jg(a2);
            rG(a2);
            return;
          }
          function lg(b2, d2, e2, f2, h2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            h2 = h2 | 0;
            var j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0, N2 = 0, O2 = 0, P2 = 0, Q2 = 0;
            s2 = i;
            i = i + 224 | 0;
            q2 = (a[b2 + 28 >> 0] | 0) != 0;
            p2 = q2 ? e2 : d2;
            q2 = q2 ? d2 : e2;
            r2 = c[p2 + 4 >> 2] | 0;
            if ((c[r2 + 72 >> 2] | 0) != (c[b2 + 40 >> 2] | 0)) {
              j2 = c[b2 + 12 >> 2] | 0;
              if ((j2 | 0) > 0) {
                l2 = 0;
                do {
                  k2 = c[(c[b2 + 20 >> 2] | 0) + (l2 << 2) >> 2] | 0;
                  if (k2 | 0) {
                    rb[c[c[k2 >> 2] >> 2] & 255](k2);
                    n2 = c[b2 + 4 >> 2] | 0;
                    tb[c[(c[n2 >> 2] | 0) + 60 >> 2] & 127](n2, c[(c[b2 + 20 >> 2] | 0) + (l2 << 2) >> 2] | 0);
                  }
                  l2 = l2 + 1 | 0;
                } while ((l2 | 0) != (j2 | 0));
              }
              mg(b2, d2, e2);
              c[b2 + 40 >> 2] = c[r2 + 72 >> 2];
            }
            j2 = c[b2 + 12 >> 2] | 0;
            if (!j2) {
              i = s2;
              return;
            }
            n2 = c[r2 + 68 >> 2] | 0;
            l2 = c[b2 + 4 >> 2] | 0;
            k2 = c[b2 + 20 >> 2] | 0;
            m2 = c[b2 + 32 >> 2] | 0;
            c[s2 + 192 >> 2] = 3620;
            c[s2 + 192 + 4 >> 2] = p2;
            c[s2 + 192 + 8 >> 2] = q2;
            c[s2 + 192 + 12 >> 2] = l2;
            c[s2 + 192 + 16 >> 2] = f2;
            c[s2 + 192 + 20 >> 2] = h2;
            c[s2 + 192 + 24 >> 2] = k2;
            c[s2 + 192 + 28 >> 2] = m2;
            a[s2 + 128 + 16 >> 0] = 1;
            m2 = s2 + 128 + 12 | 0;
            c[m2 >> 2] = 0;
            c[s2 + 128 + 4 >> 2] = 0;
            c[s2 + 128 + 8 >> 2] = 0;
            if ((j2 | 0) > 0) {
              d2 = k2;
              f2 = 0;
              while (1) {
                k2 = c[d2 + (f2 << 2) >> 2] | 0;
                if (k2) {
                  tb[c[(c[k2 >> 2] | 0) + 16 >> 2] & 127](k2, s2 + 128 | 0);
                  j2 = c[s2 + 128 + 4 >> 2] | 0;
                  if ((j2 | 0) > 0) {
                    l2 = 0;
                    do {
                      e2 = c[(c[m2 >> 2] | 0) + (l2 << 2) >> 2] | 0;
                      if (c[e2 + 748 >> 2] | 0) {
                        c[h2 + 4 >> 2] = e2;
                        j2 = c[e2 + 740 >> 2] | 0;
                        k2 = c[(c[h2 + 8 >> 2] | 0) + 8 >> 2] | 0;
                        d2 = c[(c[h2 + 12 >> 2] | 0) + 8 >> 2] | 0;
                        if ((j2 | 0) == (k2 | 0))
                          Xn(e2, j2 + 4 | 0, d2 + 4 | 0);
                        else
                          Xn(e2, d2 + 4 | 0, k2 + 4 | 0);
                        c[h2 + 4 >> 2] = 0;
                        j2 = c[s2 + 128 + 4 >> 2] | 0;
                      }
                      l2 = l2 + 1 | 0;
                    } while ((l2 | 0) < (j2 | 0));
                  }
                  if ((j2 | 0) < 0) {
                    if ((c[s2 + 128 + 8 >> 2] | 0) < 0) {
                      k2 = c[m2 >> 2] | 0;
                      if (k2 | 0) {
                        if (a[s2 + 128 + 16 >> 0] | 0) {
                          c[5638] = (c[5638] | 0) + 1;
                          rG(c[k2 + -4 >> 2] | 0);
                        }
                        c[m2 >> 2] = 0;
                      }
                      a[s2 + 128 + 16 >> 0] = 1;
                      c[m2 >> 2] = 0;
                      c[s2 + 128 + 8 >> 2] = 0;
                    }
                    do {
                      c[(c[m2 >> 2] | 0) + (j2 << 2) >> 2] = 0;
                      j2 = j2 + 1 | 0;
                    } while ((j2 | 0) != 0);
                  }
                  c[s2 + 128 + 4 >> 2] = 0;
                  j2 = c[b2 + 12 >> 2] | 0;
                }
                k2 = f2 + 1 | 0;
                if ((k2 | 0) >= (j2 | 0))
                  break;
                d2 = c[b2 + 20 >> 2] | 0;
                f2 = k2;
              }
              j2 = c[m2 >> 2] | 0;
              if (j2 | 0) {
                if (a[s2 + 128 + 16 >> 0] | 0) {
                  c[5638] = (c[5638] | 0) + 1;
                  rG(c[j2 + -4 >> 2] | 0);
                }
                c[m2 >> 2] = 0;
              }
            }
            if (!n2) {
              k2 = c[b2 + 12 >> 2] | 0;
              if ((k2 | 0) > 0) {
                j2 = 0;
                do {
                  pg(s2 + 192 | 0, c[(c[r2 + 28 >> 2] | 0) + (j2 * 80 | 0) + 64 >> 2] | 0, j2);
                  j2 = j2 + 1 | 0;
                } while ((j2 | 0) < (k2 | 0));
                o2 = 39;
              }
            } else {
              o2 = c[p2 + 12 >> 2] | 0;
              H2 = +g[o2 >> 2];
              G2 = +g[o2 + 16 >> 2];
              F2 = +g[o2 + 32 >> 2];
              E2 = +g[o2 + 4 >> 2];
              D2 = +g[o2 + 20 >> 2];
              C2 = +g[o2 + 36 >> 2];
              y2 = +g[o2 + 8 >> 2];
              w2 = +g[o2 + 24 >> 2];
              u2 = +g[o2 + 40 >> 2];
              B2 = -+g[o2 + 48 >> 2];
              A2 = -+g[o2 + 52 >> 2];
              z2 = -+g[o2 + 56 >> 2];
              o2 = c[q2 + 12 >> 2] | 0;
              Q2 = +g[o2 >> 2];
              P2 = +g[o2 + 16 >> 2];
              O2 = +g[o2 + 32 >> 2];
              N2 = +g[o2 + 4 >> 2];
              M2 = +g[o2 + 20 >> 2];
              L2 = +g[o2 + 36 >> 2];
              K2 = +g[o2 + 8 >> 2];
              J2 = +g[o2 + 24 >> 2];
              I2 = +g[o2 + 40 >> 2];
              x2 = +g[o2 + 48 >> 2];
              v2 = +g[o2 + 52 >> 2];
              t2 = +g[o2 + 56 >> 2];
              g[s2 + 48 >> 2] = H2 * Q2 + G2 * P2 + F2 * O2;
              g[s2 + 48 + 4 >> 2] = H2 * N2 + G2 * M2 + F2 * L2;
              g[s2 + 48 + 8 >> 2] = H2 * K2 + G2 * J2 + F2 * I2;
              g[s2 + 48 + 12 >> 2] = 0;
              g[s2 + 48 + 16 >> 2] = E2 * Q2 + D2 * P2 + C2 * O2;
              g[s2 + 48 + 20 >> 2] = E2 * N2 + D2 * M2 + C2 * L2;
              g[s2 + 48 + 24 >> 2] = E2 * K2 + D2 * J2 + C2 * I2;
              g[s2 + 48 + 28 >> 2] = 0;
              g[s2 + 48 + 32 >> 2] = y2 * Q2 + w2 * P2 + u2 * O2;
              g[s2 + 48 + 36 >> 2] = y2 * N2 + w2 * M2 + u2 * L2;
              g[s2 + 48 + 40 >> 2] = y2 * K2 + w2 * J2 + u2 * I2;
              g[s2 + 48 + 44 >> 2] = 0;
              g[s2 + 48 + 48 >> 2] = H2 * B2 + G2 * A2 + F2 * z2 + (H2 * x2 + G2 * v2 + F2 * t2);
              g[s2 + 48 + 52 >> 2] = E2 * B2 + D2 * A2 + C2 * z2 + (E2 * x2 + D2 * v2 + C2 * t2);
              g[s2 + 48 + 56 >> 2] = y2 * B2 + w2 * A2 + u2 * z2 + (y2 * x2 + w2 * v2 + u2 * t2);
              g[s2 + 48 + 60 >> 2] = 0;
              o2 = c[q2 + 4 >> 2] | 0;
              bc[c[(c[o2 >> 2] | 0) + 8 >> 2] & 127](o2, s2 + 48 | 0, s2 + 128 | 0, s2 + 112 | 0);
              c[s2 + 16 >> 2] = c[s2 + 128 >> 2];
              c[s2 + 16 + 4 >> 2] = c[s2 + 128 + 4 >> 2];
              c[s2 + 16 + 8 >> 2] = c[s2 + 128 + 8 >> 2];
              c[s2 + 16 + 12 >> 2] = c[s2 + 128 + 12 >> 2];
              c[s2 + 16 + 16 >> 2] = c[s2 + 112 >> 2];
              c[s2 + 16 + 16 + 4 >> 2] = c[s2 + 112 + 4 >> 2];
              c[s2 + 16 + 16 + 8 >> 2] = c[s2 + 112 + 8 >> 2];
              c[s2 + 16 + 16 + 12 >> 2] = c[s2 + 112 + 12 >> 2];
              od(c[n2 >> 2] | 0, s2 + 16 | 0, s2 + 192 | 0);
              o2 = 39;
            }
            if ((o2 | 0) == 39)
              k2 = c[b2 + 12 >> 2] | 0;
            if ((k2 | 0) > 0) {
              d2 = 0;
              do {
                do
                  if (c[(c[b2 + 20 >> 2] | 0) + (d2 << 2) >> 2] | 0) {
                    n2 = c[r2 + 28 >> 2] | 0;
                    o2 = c[n2 + (d2 * 80 | 0) + 64 >> 2] | 0;
                    h2 = c[p2 + 12 >> 2] | 0;
                    w2 = +g[h2 >> 2];
                    x2 = +g[h2 + 4 >> 2];
                    y2 = +g[h2 + 8 >> 2];
                    z2 = +g[h2 + 16 >> 2];
                    A2 = +g[h2 + 20 >> 2];
                    B2 = +g[h2 + 24 >> 2];
                    I2 = +g[h2 + 32 >> 2];
                    K2 = +g[h2 + 36 >> 2];
                    M2 = +g[h2 + 40 >> 2];
                    C2 = +g[n2 + (d2 * 80 | 0) >> 2];
                    D2 = +g[n2 + (d2 * 80 | 0) + 16 >> 2];
                    E2 = +g[n2 + (d2 * 80 | 0) + 32 >> 2];
                    F2 = +g[n2 + (d2 * 80 | 0) + 4 >> 2];
                    G2 = +g[n2 + (d2 * 80 | 0) + 20 >> 2];
                    H2 = +g[n2 + (d2 * 80 | 0) + 36 >> 2];
                    J2 = +g[n2 + (d2 * 80 | 0) + 8 >> 2];
                    L2 = +g[n2 + (d2 * 80 | 0) + 24 >> 2];
                    N2 = +g[n2 + (d2 * 80 | 0) + 40 >> 2];
                    u2 = +g[n2 + (d2 * 80 | 0) + 48 >> 2];
                    v2 = +g[n2 + (d2 * 80 | 0) + 52 >> 2];
                    Q2 = +g[n2 + (d2 * 80 | 0) + 56 >> 2];
                    O2 = +g[h2 + 48 >> 2] + (w2 * u2 + x2 * v2 + y2 * Q2);
                    P2 = +g[h2 + 52 >> 2] + (z2 * u2 + A2 * v2 + B2 * Q2);
                    Q2 = +g[h2 + 56 >> 2] + (I2 * u2 + K2 * v2 + M2 * Q2);
                    g[s2 + 128 >> 2] = w2 * C2 + x2 * D2 + y2 * E2;
                    g[s2 + 128 + 4 >> 2] = w2 * F2 + x2 * G2 + y2 * H2;
                    g[s2 + 128 + 8 >> 2] = w2 * J2 + x2 * L2 + y2 * N2;
                    g[s2 + 128 + 12 >> 2] = 0;
                    g[s2 + 128 + 16 >> 2] = z2 * C2 + A2 * D2 + B2 * E2;
                    g[s2 + 128 + 20 >> 2] = z2 * F2 + A2 * G2 + B2 * H2;
                    g[s2 + 128 + 24 >> 2] = z2 * J2 + A2 * L2 + B2 * N2;
                    g[s2 + 128 + 28 >> 2] = 0;
                    g[s2 + 128 + 32 >> 2] = I2 * C2 + K2 * D2 + M2 * E2;
                    g[s2 + 128 + 36 >> 2] = I2 * F2 + K2 * G2 + M2 * H2;
                    g[s2 + 128 + 40 >> 2] = I2 * J2 + K2 * L2 + M2 * N2;
                    g[s2 + 128 + 44 >> 2] = 0;
                    g[s2 + 128 + 48 >> 2] = O2;
                    g[s2 + 128 + 52 >> 2] = P2;
                    g[s2 + 128 + 56 >> 2] = Q2;
                    g[s2 + 128 + 60 >> 2] = 0;
                    bc[c[(c[o2 >> 2] | 0) + 8 >> 2] & 127](o2, s2 + 128 | 0, s2 + 112 | 0, s2 + 48 | 0);
                    o2 = c[q2 + 4 >> 2] | 0;
                    bc[c[(c[o2 >> 2] | 0) + 8 >> 2] & 127](o2, c[q2 + 12 >> 2] | 0, s2 + 16 | 0, s2);
                    if (!(+g[s2 + 112 >> 2] > +g[s2 >> 2]) ? !(+g[s2 + 48 >> 2] < +g[s2 + 16 >> 2]) : 0)
                      j2 = 1;
                    else
                      j2 = 0;
                    if (!(!(+g[s2 + 112 + 8 >> 2] > +g[s2 + 8 >> 2]) ? !(+g[s2 + 48 + 8 >> 2] < +g[s2 + 16 + 8 >> 2]) : 0))
                      j2 = 0;
                    if (!(+g[s2 + 112 + 4 >> 2] > +g[s2 + 4 >> 2]) ? !(+g[s2 + 48 + 4 >> 2] < +g[s2 + 16 + 4 >> 2] | j2 ^ 1) : 0)
                      break;
                    o2 = c[(c[b2 + 20 >> 2] | 0) + (d2 << 2) >> 2] | 0;
                    rb[c[c[o2 >> 2] >> 2] & 255](o2);
                    o2 = c[b2 + 4 >> 2] | 0;
                    tb[c[(c[o2 >> 2] | 0) + 60 >> 2] & 127](o2, c[(c[b2 + 20 >> 2] | 0) + (d2 << 2) >> 2] | 0);
                    c[(c[b2 + 20 >> 2] | 0) + (d2 << 2) >> 2] = 0;
                  }
                while (0);
                d2 = d2 + 1 | 0;
              } while ((d2 | 0) < (k2 | 0));
            }
            i = s2;
            return;
          }
          function mg(b2, d2, e2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, g2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0;
            m2 = i;
            i = i + 32 | 0;
            h2 = (a[b2 + 28 >> 0] | 0) != 0;
            l2 = h2 ? e2 : d2;
            h2 = h2 ? d2 : e2;
            j2 = c[l2 + 4 >> 2] | 0;
            k2 = c[j2 + 20 >> 2] | 0;
            g2 = c[b2 + 12 >> 2] | 0;
            if ((g2 | 0) < (k2 | 0)) {
              if ((c[b2 + 16 >> 2] | 0) < (k2 | 0)) {
                if (!k2) {
                  d2 = 0;
                  e2 = g2;
                } else {
                  c[5637] = (c[5637] | 0) + 1;
                  d2 = qG((k2 << 2 | 3) + 16 | 0) | 0;
                  if (!d2)
                    d2 = 0;
                  else {
                    c[(d2 + 4 + 15 & -16) + -4 >> 2] = d2;
                    d2 = d2 + 4 + 15 & -16;
                  }
                  e2 = c[b2 + 12 >> 2] | 0;
                }
                if ((e2 | 0) > 0) {
                  f2 = 0;
                  do {
                    c[d2 + (f2 << 2) >> 2] = c[(c[b2 + 20 >> 2] | 0) + (f2 << 2) >> 2];
                    f2 = f2 + 1 | 0;
                  } while ((f2 | 0) != (e2 | 0));
                }
                e2 = c[b2 + 20 >> 2] | 0;
                if (e2 | 0) {
                  if (a[b2 + 24 >> 0] | 0) {
                    c[5638] = (c[5638] | 0) + 1;
                    rG(c[e2 + -4 >> 2] | 0);
                  }
                  c[b2 + 20 >> 2] = 0;
                }
                a[b2 + 24 >> 0] = 1;
                c[b2 + 20 >> 2] = d2;
                c[b2 + 16 >> 2] = k2;
                e2 = b2 + 20 | 0;
              } else
                e2 = b2 + 20 | 0;
              d2 = g2;
              do {
                c[(c[e2 >> 2] | 0) + (d2 << 2) >> 2] = 0;
                d2 = d2 + 1 | 0;
              } while ((d2 | 0) != (k2 | 0));
            }
            c[b2 + 12 >> 2] = k2;
            if ((k2 | 0) <= 0) {
              i = m2;
              return;
            }
            d2 = 0;
            do {
              if (!(c[j2 + 68 >> 2] | 0)) {
                e2 = c[(c[j2 + 28 >> 2] | 0) + (d2 * 80 | 0) + 64 >> 2] | 0;
                f2 = c[l2 + 8 >> 2] | 0;
                g2 = c[l2 + 12 >> 2] | 0;
                c[m2 >> 2] = l2;
                c[m2 + 4 >> 2] = e2;
                c[m2 + 8 >> 2] = f2;
                c[m2 + 12 >> 2] = g2;
                c[m2 + 16 >> 2] = -1;
                c[m2 + 20 >> 2] = d2;
                g2 = c[b2 + 4 >> 2] | 0;
                g2 = zb[c[(c[g2 >> 2] | 0) + 8 >> 2] & 31](g2, m2, h2, c[b2 + 32 >> 2] | 0) | 0;
                c[(c[b2 + 20 >> 2] | 0) + (d2 << 2) >> 2] = g2;
              } else
                c[(c[b2 + 20 >> 2] | 0) + (d2 << 2) >> 2] = 0;
              d2 = d2 + 1 | 0;
            } while ((d2 | 0) != (k2 | 0));
            i = m2;
            return;
          }
          function ng(a2) {
            a2 = a2 | 0;
            rG(a2);
            return;
          }
          function og(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            b2 = c[b2 + 36 >> 2] | 0;
            pg(a2, c[(c[(c[(c[a2 + 4 >> 2] | 0) + 4 >> 2] | 0) + 28 >> 2] | 0) + (b2 * 80 | 0) + 64 >> 2] | 0, b2);
            return;
          }
          function pg(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0;
            h2 = i;
            i = i + 160 | 0;
            e2 = c[a2 + 4 >> 2] | 0;
            f2 = c[e2 + 12 >> 2] | 0;
            D2 = +g[f2 >> 2];
            C2 = +g[f2 + 4 >> 2];
            B2 = +g[f2 + 8 >> 2];
            A2 = +g[f2 + 16 >> 2];
            z2 = +g[f2 + 20 >> 2];
            y2 = +g[f2 + 24 >> 2];
            r2 = +g[f2 + 32 >> 2];
            p2 = +g[f2 + 36 >> 2];
            n2 = +g[f2 + 40 >> 2];
            e2 = c[(c[e2 + 4 >> 2] | 0) + 28 >> 2] | 0;
            x2 = +g[e2 + (d2 * 80 | 0) >> 2];
            w2 = +g[e2 + (d2 * 80 | 0) + 16 >> 2];
            v2 = +g[e2 + (d2 * 80 | 0) + 32 >> 2];
            u2 = +g[e2 + (d2 * 80 | 0) + 4 >> 2];
            t2 = +g[e2 + (d2 * 80 | 0) + 20 >> 2];
            s2 = +g[e2 + (d2 * 80 | 0) + 36 >> 2];
            q2 = +g[e2 + (d2 * 80 | 0) + 8 >> 2];
            o2 = +g[e2 + (d2 * 80 | 0) + 24 >> 2];
            m2 = +g[e2 + (d2 * 80 | 0) + 40 >> 2];
            F2 = +g[e2 + (d2 * 80 | 0) + 48 >> 2];
            E2 = +g[e2 + (d2 * 80 | 0) + 52 >> 2];
            j2 = +g[e2 + (d2 * 80 | 0) + 56 >> 2];
            l2 = +g[f2 + 48 >> 2] + (D2 * F2 + C2 * E2 + B2 * j2);
            k2 = +g[f2 + 52 >> 2] + (A2 * F2 + z2 * E2 + y2 * j2);
            j2 = +g[f2 + 56 >> 2] + (r2 * F2 + p2 * E2 + n2 * j2);
            g[h2 + 88 >> 2] = D2 * x2 + C2 * w2 + B2 * v2;
            g[h2 + 88 + 4 >> 2] = D2 * u2 + C2 * t2 + B2 * s2;
            g[h2 + 88 + 8 >> 2] = D2 * q2 + C2 * o2 + B2 * m2;
            g[h2 + 88 + 12 >> 2] = 0;
            g[h2 + 88 + 16 >> 2] = A2 * x2 + z2 * w2 + y2 * v2;
            g[h2 + 88 + 20 >> 2] = A2 * u2 + z2 * t2 + y2 * s2;
            g[h2 + 88 + 24 >> 2] = A2 * q2 + z2 * o2 + y2 * m2;
            g[h2 + 88 + 28 >> 2] = 0;
            g[h2 + 88 + 32 >> 2] = r2 * x2 + p2 * w2 + n2 * v2;
            g[h2 + 88 + 36 >> 2] = r2 * u2 + p2 * t2 + n2 * s2;
            g[h2 + 88 + 40 >> 2] = r2 * q2 + p2 * o2 + n2 * m2;
            g[h2 + 88 + 44 >> 2] = 0;
            g[h2 + 88 + 48 >> 2] = l2;
            g[h2 + 88 + 52 >> 2] = k2;
            g[h2 + 88 + 56 >> 2] = j2;
            g[h2 + 88 + 60 >> 2] = 0;
            bc[c[(c[b2 >> 2] | 0) + 8 >> 2] & 127](b2, h2 + 88 | 0, h2 + 72 | 0, h2 + 56 | 0);
            f2 = c[a2 + 8 >> 2] | 0;
            e2 = c[f2 + 4 >> 2] | 0;
            bc[c[(c[e2 >> 2] | 0) + 8 >> 2] & 127](e2, c[f2 + 12 >> 2] | 0, h2 + 40 | 0, h2 + 24 | 0);
            if (!(+g[h2 + 72 >> 2] > +g[h2 + 24 >> 2]) ? !(+g[h2 + 56 >> 2] < +g[h2 + 40 >> 2]) : 0)
              e2 = 1;
            else
              e2 = 0;
            if (!(!(+g[h2 + 72 + 8 >> 2] > +g[h2 + 24 + 8 >> 2]) ? !(+g[h2 + 56 + 8 >> 2] < +g[h2 + 40 + 8 >> 2]) : 0))
              e2 = 0;
            if (+g[h2 + 72 + 4 >> 2] > +g[h2 + 24 + 4 >> 2]) {
              i = h2;
              return;
            }
            if (+g[h2 + 56 + 4 >> 2] < +g[h2 + 40 + 4 >> 2] | e2 ^ 1) {
              i = h2;
              return;
            }
            e2 = c[a2 + 4 >> 2] | 0;
            f2 = c[e2 + 8 >> 2] | 0;
            c[h2 >> 2] = e2;
            c[h2 + 4 >> 2] = b2;
            c[h2 + 8 >> 2] = f2;
            c[h2 + 12 >> 2] = h2 + 88;
            c[h2 + 16 >> 2] = -1;
            c[h2 + 20 >> 2] = d2;
            if (!(c[(c[a2 + 24 >> 2] | 0) + (d2 << 2) >> 2] | 0)) {
              e2 = c[a2 + 12 >> 2] | 0;
              e2 = zb[c[(c[e2 >> 2] | 0) + 8 >> 2] & 31](e2, h2, c[a2 + 8 >> 2] | 0, c[a2 + 28 >> 2] | 0) | 0;
              c[(c[a2 + 24 >> 2] | 0) + (d2 << 2) >> 2] = e2;
              e2 = c[a2 + 4 >> 2] | 0;
            }
            f2 = c[a2 + 20 >> 2] | 0;
            b2 = c[f2 + 8 >> 2] | 0;
            if ((c[b2 + 8 >> 2] | 0) == (c[e2 + 8 >> 2] | 0)) {
              c[f2 + 8 >> 2] = h2;
              Zb[c[(c[f2 >> 2] | 0) + 8 >> 2] & 127](f2, -1, d2);
            } else {
              b2 = c[f2 + 12 >> 2] | 0;
              c[f2 + 12 >> 2] = h2;
              Zb[c[(c[f2 >> 2] | 0) + 12 >> 2] & 127](f2, -1, d2);
            }
            e2 = c[(c[a2 + 24 >> 2] | 0) + (d2 << 2) >> 2] | 0;
            pb[c[(c[e2 >> 2] | 0) + 8 >> 2] & 31](e2, h2, c[a2 + 8 >> 2] | 0, c[a2 + 16 >> 2] | 0, c[a2 + 20 >> 2] | 0);
            e2 = c[a2 + 20 >> 2] | 0;
            if ((c[(c[e2 + 8 >> 2] | 0) + 8 >> 2] | 0) == (c[(c[a2 + 4 >> 2] | 0) + 8 >> 2] | 0))
              c[e2 + 8 >> 2] = b2;
            else
              c[e2 + 12 >> 2] = b2;
            i = h2;
            return;
          }
          function qg(b2, d2, e2, f2, h2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            h2 = h2 | 0;
            var i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0, N2 = 0, O2 = 0, P2 = 0;
            z2 = (a[b2 + 28 >> 0] | 0) != 0;
            C2 = z2 ? e2 : d2;
            z2 = z2 ? d2 : e2;
            A2 = c[b2 + 12 >> 2] | 0;
            if ((A2 | 0) <= 0) {
              w2 = 1;
              return +w2;
            }
            y2 = (c[C2 + 192 >> 2] | 0) + 28 | 0;
            j2 = +g[C2 + 4 >> 2];
            t2 = +g[C2 + 8 >> 2];
            u2 = +g[C2 + 12 >> 2];
            v2 = c[C2 + 16 >> 2] | 0;
            w2 = +g[C2 + 20 >> 2];
            k2 = +g[C2 + 24 >> 2];
            l2 = +g[C2 + 28 >> 2];
            d2 = c[C2 + 32 >> 2] | 0;
            m2 = +g[C2 + 36 >> 2];
            n2 = +g[C2 + 40 >> 2];
            o2 = +g[C2 + 44 >> 2];
            e2 = c[C2 + 48 >> 2] | 0;
            p2 = +g[C2 + 52 >> 2];
            q2 = +g[C2 + 56 >> 2];
            r2 = +g[C2 + 60 >> 2];
            s2 = c[C2 + 64 >> 2] | 0;
            x2 = c[C2 + 284 >> 2] | 0;
            i2 = 1;
            B2 = 0;
            do {
              E2 = c[y2 >> 2] | 0;
              P2 = +g[E2 + (B2 * 80 | 0) >> 2];
              O2 = +g[E2 + (B2 * 80 | 0) + 16 >> 2];
              N2 = +g[E2 + (B2 * 80 | 0) + 32 >> 2];
              M2 = +g[E2 + (B2 * 80 | 0) + 4 >> 2];
              L2 = +g[E2 + (B2 * 80 | 0) + 20 >> 2];
              K2 = +g[E2 + (B2 * 80 | 0) + 36 >> 2];
              J2 = +g[E2 + (B2 * 80 | 0) + 8 >> 2];
              I2 = +g[E2 + (B2 * 80 | 0) + 24 >> 2];
              H2 = +g[E2 + (B2 * 80 | 0) + 40 >> 2];
              G2 = +g[E2 + (B2 * 80 | 0) + 48 >> 2];
              F2 = +g[E2 + (B2 * 80 | 0) + 52 >> 2];
              D2 = +g[E2 + (B2 * 80 | 0) + 56 >> 2];
              c[C2 + 284 >> 2] = x2 + 1;
              g[C2 + 4 >> 2] = j2 * P2 + t2 * O2 + u2 * N2;
              g[C2 + 8 >> 2] = j2 * M2 + t2 * L2 + u2 * K2;
              g[C2 + 12 >> 2] = j2 * J2 + t2 * I2 + u2 * H2;
              g[C2 + 16 >> 2] = 0;
              g[C2 + 20 >> 2] = w2 * P2 + k2 * O2 + l2 * N2;
              g[C2 + 24 >> 2] = w2 * M2 + k2 * L2 + l2 * K2;
              g[C2 + 28 >> 2] = w2 * J2 + k2 * I2 + l2 * H2;
              g[C2 + 32 >> 2] = 0;
              g[C2 + 36 >> 2] = m2 * P2 + n2 * O2 + o2 * N2;
              g[C2 + 40 >> 2] = m2 * M2 + n2 * L2 + o2 * K2;
              g[C2 + 44 >> 2] = m2 * J2 + n2 * I2 + o2 * H2;
              g[C2 + 48 >> 2] = 0;
              g[C2 + 52 >> 2] = p2 + (j2 * G2 + t2 * F2 + u2 * D2);
              g[C2 + 56 >> 2] = q2 + (w2 * G2 + k2 * F2 + l2 * D2);
              g[C2 + 60 >> 2] = r2 + (m2 * G2 + n2 * F2 + o2 * D2);
              g[C2 + 64 >> 2] = 0;
              E2 = c[(c[b2 + 20 >> 2] | 0) + (B2 << 2) >> 2] | 0;
              D2 = +Db[c[(c[E2 >> 2] | 0) + 12 >> 2] & 15](E2, C2, z2, f2, h2);
              i2 = D2 < i2 ? D2 : i2;
              x2 = (c[C2 + 284 >> 2] | 0) + 1 | 0;
              c[C2 + 284 >> 2] = x2;
              g[C2 + 4 >> 2] = j2;
              g[C2 + 8 >> 2] = t2;
              g[C2 + 12 >> 2] = u2;
              c[C2 + 16 >> 2] = v2;
              g[C2 + 20 >> 2] = w2;
              g[C2 + 24 >> 2] = k2;
              g[C2 + 28 >> 2] = l2;
              c[C2 + 32 >> 2] = d2;
              g[C2 + 36 >> 2] = m2;
              g[C2 + 40 >> 2] = n2;
              g[C2 + 44 >> 2] = o2;
              c[C2 + 48 >> 2] = e2;
              g[C2 + 52 >> 2] = p2;
              g[C2 + 56 >> 2] = q2;
              g[C2 + 60 >> 2] = r2;
              c[C2 + 64 >> 2] = s2;
              B2 = B2 + 1 | 0;
            } while ((B2 | 0) != (A2 | 0));
            return +i2;
          }
          function rg(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0;
            d2 = c[a2 + 12 >> 2] | 0;
            if ((d2 | 0) <= 0)
              return;
            f2 = 0;
            do {
              e2 = c[(c[a2 + 20 >> 2] | 0) + (f2 << 2) >> 2] | 0;
              if (e2) {
                tb[c[(c[e2 >> 2] | 0) + 16 >> 2] & 127](e2, b2);
                d2 = c[a2 + 12 >> 2] | 0;
              }
              f2 = f2 + 1 | 0;
            } while ((f2 | 0) < (d2 | 0));
            return;
          }
          function sg(b2, d2, e2, f2, g2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            g2 = g2 | 0;
            c[b2 + 4 >> 2] = c[d2 >> 2];
            c[b2 >> 2] = 3592;
            a[b2 + 24 >> 0] = 1;
            c[b2 + 20 >> 2] = 0;
            c[b2 + 12 >> 2] = 0;
            c[b2 + 16 >> 2] = 0;
            a[b2 + 28 >> 0] = g2 & 1;
            c[b2 + 32 >> 2] = c[d2 + 4 >> 2];
            a[b2 + 36 >> 0] = 0;
            c[b2 + 40 >> 2] = c[(c[(g2 ? f2 : e2) + 4 >> 2] | 0) + 72 >> 2];
            mg(b2, e2, f2);
            return;
          }
          function tg(b2) {
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0;
            c[b2 >> 2] = 3656;
            d2 = c[b2 + 44 >> 2] | 0;
            e2 = c[d2 + 8 >> 2] | 0;
            if ((e2 | 0) > 0) {
              g2 = 0;
              do {
                f2 = c[(c[d2 + 16 >> 2] | 0) + (g2 * 12 | 0) + 8 >> 2] | 0;
                if (f2 | 0) {
                  rb[c[c[f2 >> 2] >> 2] & 255](f2);
                  h2 = c[b2 + 4 >> 2] | 0;
                  tb[c[(c[h2 >> 2] | 0) + 60 >> 2] & 127](h2, f2);
                }
                g2 = g2 + 1 | 0;
              } while ((g2 | 0) != (e2 | 0));
              d2 = c[b2 + 44 >> 2] | 0;
            }
            wi(d2);
            d2 = c[b2 + 44 >> 2] | 0;
            rb[c[c[d2 >> 2] >> 2] & 255](d2);
            d2 = c[b2 + 44 >> 2] | 0;
            if (d2 | 0) {
              c[5638] = (c[5638] | 0) + 1;
              rG(c[d2 + -4 >> 2] | 0);
            }
            d2 = c[b2 + 60 >> 2] | 0;
            if (!d2) {
              a[b2 + 64 >> 0] = 1;
              c[b2 + 60 >> 2] = 0;
              c[b2 + 52 >> 2] = 0;
              h2 = b2 + 56 | 0;
              c[h2 >> 2] = 0;
              jg(b2);
              return;
            }
            if (a[b2 + 64 >> 0] | 0) {
              c[5638] = (c[5638] | 0) + 1;
              rG(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 60 >> 2] = 0;
            a[b2 + 64 >> 0] = 1;
            c[b2 + 60 >> 2] = 0;
            c[b2 + 52 >> 2] = 0;
            h2 = b2 + 56 | 0;
            c[h2 >> 2] = 0;
            jg(b2);
            return;
          }
          function ug(a2) {
            a2 = a2 | 0;
            tg(a2);
            rG(a2);
            return;
          }
          function vg(b2, d2, e2, f2, h2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            h2 = h2 | 0;
            var j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0, O2 = 0, P2 = 0, Q2 = 0, R2 = 0, S2 = 0, T2 = 0, U2 = 0, V2 = 0, W2 = 0, X2 = 0, Y2 = 0, Z2 = 0, _2 = 0, $2 = 0, aa2 = 0, ba2 = 0, ca2 = 0, da2 = 0, ea2 = 0, fa2 = 0, ga2 = 0, ha2 = 0, ia2 = 0, ja2 = 0, ka2 = 0, la2 = 0, ma2 = 0, na2 = 0, oa2 = 0, pa2 = 0;
            ea2 = i;
            i = i + 176 | 0;
            ba2 = c[d2 + 4 >> 2] | 0;
            ca2 = c[e2 + 4 >> 2] | 0;
            r2 = c[ba2 + 68 >> 2] | 0;
            s2 = c[ca2 + 68 >> 2] | 0;
            if (!((r2 | 0) != 0 & (s2 | 0) != 0)) {
              lg(b2, d2, e2, f2, h2);
              i = ea2;
              return;
            }
            if ((c[ba2 + 72 >> 2] | 0) == (c[b2 + 68 >> 2] | 0) ? (c[ca2 + 72 >> 2] | 0) == (c[b2 + 72 >> 2] | 0) : 0)
              aa2 = b2 + 44 | 0;
            else {
              j2 = c[b2 + 44 >> 2] | 0;
              k2 = c[j2 + 8 >> 2] | 0;
              if ((k2 | 0) > 0) {
                m2 = 0;
                do {
                  l2 = c[(c[j2 + 16 >> 2] | 0) + (m2 * 12 | 0) + 8 >> 2] | 0;
                  if (l2 | 0) {
                    rb[c[c[l2 >> 2] >> 2] & 255](l2);
                    aa2 = c[b2 + 4 >> 2] | 0;
                    tb[c[(c[aa2 >> 2] | 0) + 60 >> 2] & 127](aa2, l2);
                  }
                  m2 = m2 + 1 | 0;
                } while ((m2 | 0) != (k2 | 0));
                j2 = c[b2 + 44 >> 2] | 0;
              }
              wi(j2);
              c[b2 + 68 >> 2] = c[ba2 + 72 >> 2];
              c[b2 + 72 >> 2] = c[ca2 + 72 >> 2];
              aa2 = b2 + 44 | 0;
            }
            a[ea2 + 128 + 16 >> 0] = 1;
            q2 = ea2 + 128 + 12 | 0;
            c[q2 >> 2] = 0;
            c[ea2 + 128 + 4 >> 2] = 0;
            c[ea2 + 128 + 8 >> 2] = 0;
            p2 = c[aa2 >> 2] | 0;
            j2 = c[p2 + 8 >> 2] | 0;
            if ((j2 | 0) > 0) {
              o2 = 0;
              do {
                k2 = c[(c[p2 + 16 >> 2] | 0) + (o2 * 12 | 0) + 8 >> 2] | 0;
                if (k2) {
                  tb[c[(c[k2 >> 2] | 0) + 16 >> 2] & 127](k2, ea2 + 128 | 0);
                  j2 = c[ea2 + 128 + 4 >> 2] | 0;
                  if ((j2 | 0) > 0) {
                    n2 = 0;
                    do {
                      m2 = c[(c[q2 >> 2] | 0) + (n2 << 2) >> 2] | 0;
                      if (c[m2 + 748 >> 2] | 0) {
                        c[h2 + 4 >> 2] = m2;
                        j2 = c[m2 + 740 >> 2] | 0;
                        k2 = c[(c[h2 + 8 >> 2] | 0) + 8 >> 2] | 0;
                        l2 = c[(c[h2 + 12 >> 2] | 0) + 8 >> 2] | 0;
                        if ((j2 | 0) == (k2 | 0))
                          Xn(m2, j2 + 4 | 0, l2 + 4 | 0);
                        else
                          Xn(m2, l2 + 4 | 0, k2 + 4 | 0);
                        c[h2 + 4 >> 2] = 0;
                        j2 = c[ea2 + 128 + 4 >> 2] | 0;
                      }
                      n2 = n2 + 1 | 0;
                    } while ((n2 | 0) < (j2 | 0));
                  }
                  if ((j2 | 0) < 0) {
                    if ((c[ea2 + 128 + 8 >> 2] | 0) < 0) {
                      k2 = c[q2 >> 2] | 0;
                      if (k2 | 0) {
                        if (a[ea2 + 128 + 16 >> 0] | 0) {
                          c[5638] = (c[5638] | 0) + 1;
                          rG(c[k2 + -4 >> 2] | 0);
                        }
                        c[q2 >> 2] = 0;
                      }
                      a[ea2 + 128 + 16 >> 0] = 1;
                      c[q2 >> 2] = 0;
                      c[ea2 + 128 + 8 >> 2] = 0;
                    }
                    do {
                      c[(c[q2 >> 2] | 0) + (j2 << 2) >> 2] = 0;
                      j2 = j2 + 1 | 0;
                    } while ((j2 | 0) != 0);
                  }
                  c[ea2 + 128 + 4 >> 2] = 0;
                  j2 = c[p2 + 8 >> 2] | 0;
                }
                o2 = o2 + 1 | 0;
              } while ((o2 | 0) < (j2 | 0));
              j2 = c[q2 >> 2] | 0;
              if (j2 | 0) {
                if (a[ea2 + 128 + 16 >> 0] | 0) {
                  c[5638] = (c[5638] | 0) + 1;
                  rG(c[j2 + -4 >> 2] | 0);
                }
                c[q2 >> 2] = 0;
              }
            }
            q2 = c[b2 + 4 >> 2] | 0;
            k2 = c[aa2 >> 2] | 0;
            l2 = c[b2 + 32 >> 2] | 0;
            c[ea2 + 128 >> 2] = 3684;
            c[ea2 + 128 + 4 >> 2] = 0;
            c[ea2 + 128 + 8 >> 2] = d2;
            c[ea2 + 128 + 12 >> 2] = e2;
            c[ea2 + 128 + 16 >> 2] = q2;
            c[ea2 + 128 + 20 >> 2] = f2;
            c[ea2 + 128 + 24 >> 2] = h2;
            c[ea2 + 128 + 28 >> 2] = k2;
            c[ea2 + 128 + 32 >> 2] = l2;
            l2 = c[d2 + 12 >> 2] | 0;
            C2 = +g[l2 >> 2];
            D2 = +g[l2 + 16 >> 2];
            E2 = +g[l2 + 32 >> 2];
            F2 = +g[l2 + 4 >> 2];
            G2 = +g[l2 + 20 >> 2];
            H2 = +g[l2 + 36 >> 2];
            I2 = +g[l2 + 8 >> 2];
            J2 = +g[l2 + 24 >> 2];
            K2 = +g[l2 + 40 >> 2];
            L2 = -+g[l2 + 48 >> 2];
            M2 = -+g[l2 + 52 >> 2];
            O2 = -+g[l2 + 56 >> 2];
            l2 = c[e2 + 12 >> 2] | 0;
            P2 = +g[l2 >> 2];
            Q2 = +g[l2 + 16 >> 2];
            R2 = +g[l2 + 32 >> 2];
            S2 = +g[l2 + 4 >> 2];
            T2 = +g[l2 + 20 >> 2];
            U2 = +g[l2 + 36 >> 2];
            V2 = +g[l2 + 8 >> 2];
            W2 = +g[l2 + 24 >> 2];
            X2 = +g[l2 + 40 >> 2];
            Y2 = +g[l2 + 48 >> 2];
            Z2 = +g[l2 + 52 >> 2];
            _2 = +g[l2 + 56 >> 2];
            l2 = c[r2 >> 2] | 0;
            k2 = c[s2 >> 2] | 0;
            if ((l2 | 0) != 0 & (k2 | 0) != 0) {
              c[5637] = (c[5637] | 0) + 1;
              j2 = qG(1043) | 0;
              if (!j2)
                j2 = 0;
              else {
                c[(j2 + 4 + 15 & -16) + -4 >> 2] = j2;
                j2 = j2 + 4 + 15 & -16;
              }
              c[j2 >> 2] = l2;
              c[j2 + 4 >> 2] = k2;
              t2 = +N(+(C2 * P2 + D2 * Q2 + E2 * R2));
              u2 = +N(+(C2 * S2 + D2 * T2 + E2 * U2));
              v2 = +N(+(C2 * V2 + D2 * W2 + E2 * X2));
              w2 = +N(+(F2 * P2 + G2 * Q2 + H2 * R2));
              x2 = +N(+(F2 * S2 + G2 * T2 + H2 * U2));
              y2 = +N(+(F2 * V2 + G2 * W2 + H2 * X2));
              z2 = +N(+(I2 * P2 + J2 * Q2 + K2 * R2));
              A2 = +N(+(I2 * S2 + J2 * T2 + K2 * U2));
              B2 = +N(+(I2 * V2 + J2 * W2 + K2 * X2));
              r2 = 1;
              l2 = 128;
              m2 = 128;
              k2 = 124;
              while (1) {
                q2 = r2 + -1 | 0;
                f2 = c[j2 + (q2 << 3) >> 2] | 0;
                h2 = c[j2 + (q2 << 3) + 4 >> 2] | 0;
                pa2 = +g[h2 + 16 >> 2];
                oa2 = +g[h2 >> 2];
                na2 = +g[h2 + 20 >> 2];
                ma2 = +g[h2 + 4 >> 2];
                la2 = +g[h2 + 24 >> 2];
                fa2 = +g[h2 + 8 >> 2];
                ka2 = C2 * L2 + D2 * M2 + E2 * O2 + (C2 * Y2 + D2 * Z2 + E2 * _2) + ((C2 * P2 + D2 * Q2 + E2 * R2) * ((pa2 + oa2) * 0.5) + (C2 * S2 + D2 * T2 + E2 * U2) * ((na2 + ma2) * 0.5) + (C2 * V2 + D2 * W2 + E2 * X2) * ((la2 + fa2) * 0.5));
                ia2 = F2 * L2 + G2 * M2 + H2 * O2 + (F2 * Y2 + G2 * Z2 + H2 * _2) + ((F2 * P2 + G2 * Q2 + H2 * R2) * ((pa2 + oa2) * 0.5) + (F2 * S2 + G2 * T2 + H2 * U2) * ((na2 + ma2) * 0.5) + (F2 * V2 + G2 * W2 + H2 * X2) * ((la2 + fa2) * 0.5));
                ga2 = I2 * L2 + J2 * M2 + K2 * O2 + (I2 * Y2 + J2 * Z2 + K2 * _2) + ((I2 * P2 + J2 * Q2 + K2 * R2) * ((pa2 + oa2) * 0.5) + (I2 * S2 + J2 * T2 + K2 * U2) * ((na2 + ma2) * 0.5) + (I2 * V2 + J2 * W2 + K2 * X2) * ((la2 + fa2) * 0.5));
                ja2 = ((pa2 - oa2) * 0.5 + 0) * t2 + ((na2 - ma2) * 0.5 + 0) * u2 + ((la2 - fa2) * 0.5 + 0) * v2;
                ha2 = ((pa2 - oa2) * 0.5 + 0) * w2 + ((na2 - ma2) * 0.5 + 0) * x2 + ((la2 - fa2) * 0.5 + 0) * y2;
                fa2 = ((pa2 - oa2) * 0.5 + 0) * z2 + ((na2 - ma2) * 0.5 + 0) * A2 + ((la2 - fa2) * 0.5 + 0) * B2;
                do
                  if (((((+g[f2 >> 2] <= ja2 + ka2 ? +g[f2 + 16 >> 2] >= ka2 - ja2 : 0) ? +g[f2 + 4 >> 2] <= ia2 + ha2 : 0) ? +g[f2 + 20 >> 2] >= ia2 - ha2 : 0) ? +g[f2 + 8 >> 2] <= ga2 + fa2 : 0) ? +g[f2 + 24 >> 2] >= ga2 - fa2 : 0) {
                    if ((q2 | 0) > (k2 | 0)) {
                      n2 = m2 << 1;
                      do
                        if ((m2 | 0) < (n2 | 0) & (l2 | 0) < (n2 | 0)) {
                          do
                            if (!m2) {
                              k2 = 0;
                              $2 = 54;
                            } else {
                              c[5637] = (c[5637] | 0) + 1;
                              k2 = qG((m2 << 4 | 3) + 16 | 0) | 0;
                              if (!k2)
                                k2 = 0;
                              else {
                                c[(k2 + 4 + 15 & -16) + -4 >> 2] = k2;
                                k2 = k2 + 4 + 15 & -16;
                              }
                              if ((m2 | 0) > 0)
                                l2 = 0;
                              else {
                                $2 = 54;
                                break;
                              }
                              do {
                                o2 = j2 + (l2 << 3) | 0;
                                p2 = c[o2 + 4 >> 2] | 0;
                                s2 = k2 + (l2 << 3) | 0;
                                c[s2 >> 2] = c[o2 >> 2];
                                c[s2 + 4 >> 2] = p2;
                                l2 = l2 + 1 | 0;
                              } while ((l2 | 0) != (m2 | 0));
                            }
                          while (0);
                          if (($2 | 0) == 54) {
                            $2 = 0;
                            if (!j2) {
                              l2 = n2;
                              j2 = k2;
                              break;
                            }
                          }
                          c[5638] = (c[5638] | 0) + 1;
                          rG(c[j2 + -4 >> 2] | 0);
                          l2 = n2;
                          j2 = k2;
                        }
                      while (0);
                      p2 = n2;
                      k2 = n2 + -4 | 0;
                    } else
                      p2 = m2;
                    m2 = (c[h2 + 40 >> 2] | 0) != 0;
                    if (!(c[f2 + 40 >> 2] | 0))
                      if (m2) {
                        n2 = c[h2 + 36 >> 2] | 0;
                        c[j2 + (q2 << 3) >> 2] = f2;
                        c[j2 + (q2 << 3) + 4 >> 2] = n2;
                        n2 = c[h2 + 40 >> 2] | 0;
                        c[j2 + (r2 << 3) >> 2] = f2;
                        c[j2 + (r2 << 3) + 4 >> 2] = n2;
                        n2 = r2 + 1 | 0;
                        m2 = p2;
                        break;
                      } else {
                        Zb[c[(c[ea2 + 128 >> 2] | 0) + 8 >> 2] & 127](ea2 + 128 | 0, f2, h2);
                        n2 = q2;
                        m2 = p2;
                        break;
                      }
                    else {
                      n2 = j2 + (q2 << 3) | 0;
                      o2 = c[f2 + 36 >> 2] | 0;
                      if (m2) {
                        m2 = c[h2 + 36 >> 2] | 0;
                        c[n2 >> 2] = o2;
                        c[j2 + (q2 << 3) + 4 >> 2] = m2;
                        m2 = r2 + 1 | 0;
                        n2 = c[h2 + 36 >> 2] | 0;
                        c[j2 + (r2 << 3) >> 2] = c[f2 + 40 >> 2];
                        c[j2 + (r2 << 3) + 4 >> 2] = n2;
                        n2 = r2 + 2 | 0;
                        s2 = c[h2 + 40 >> 2] | 0;
                        c[j2 + (m2 << 3) >> 2] = c[f2 + 36 >> 2];
                        c[j2 + (m2 << 3) + 4 >> 2] = s2;
                        m2 = c[h2 + 40 >> 2] | 0;
                        c[j2 + (n2 << 3) >> 2] = c[f2 + 40 >> 2];
                        c[j2 + (n2 << 3) + 4 >> 2] = m2;
                        n2 = r2 + 3 | 0;
                        m2 = p2;
                        break;
                      } else {
                        c[n2 >> 2] = o2;
                        c[j2 + (q2 << 3) + 4 >> 2] = h2;
                        c[j2 + (r2 << 3) >> 2] = c[f2 + 40 >> 2];
                        c[j2 + (r2 << 3) + 4 >> 2] = h2;
                        n2 = r2 + 1 | 0;
                        m2 = p2;
                        break;
                      }
                    }
                  } else
                    n2 = q2;
                while (0);
                if (!n2)
                  break;
                else
                  r2 = n2;
              }
              if (j2 | 0) {
                c[5638] = (c[5638] | 0) + 1;
                rG(c[j2 + -4 >> 2] | 0);
              }
            }
            o2 = c[aa2 >> 2] | 0;
            if ((c[o2 + 8 >> 2] | 0) > 0) {
              p2 = 0;
              do {
                j2 = c[o2 + 16 >> 2] | 0;
                k2 = c[j2 + (p2 * 12 | 0) + 8 >> 2] | 0;
                do
                  if (k2 | 0) {
                    $2 = c[j2 + (p2 * 12 | 0) >> 2] | 0;
                    s2 = c[ba2 + 28 >> 2] | 0;
                    r2 = c[s2 + ($2 * 80 | 0) + 64 >> 2] | 0;
                    h2 = c[d2 + 12 >> 2] | 0;
                    pa2 = +g[h2 >> 2];
                    Q2 = +g[h2 + 4 >> 2];
                    P2 = +g[h2 + 8 >> 2];
                    ma2 = +g[h2 + 16 >> 2];
                    ka2 = +g[h2 + 20 >> 2];
                    ia2 = +g[h2 + 24 >> 2];
                    la2 = +g[h2 + 32 >> 2];
                    ha2 = +g[h2 + 36 >> 2];
                    V2 = +g[h2 + 40 >> 2];
                    ga2 = +g[s2 + ($2 * 80 | 0) >> 2];
                    fa2 = +g[s2 + ($2 * 80 | 0) + 16 >> 2];
                    _2 = +g[s2 + ($2 * 80 | 0) + 32 >> 2];
                    Z2 = +g[s2 + ($2 * 80 | 0) + 4 >> 2];
                    Y2 = +g[s2 + ($2 * 80 | 0) + 20 >> 2];
                    X2 = +g[s2 + ($2 * 80 | 0) + 36 >> 2];
                    ja2 = +g[s2 + ($2 * 80 | 0) + 8 >> 2];
                    W2 = +g[s2 + ($2 * 80 | 0) + 24 >> 2];
                    U2 = +g[s2 + ($2 * 80 | 0) + 40 >> 2];
                    oa2 = +g[s2 + ($2 * 80 | 0) + 48 >> 2];
                    na2 = +g[s2 + ($2 * 80 | 0) + 52 >> 2];
                    R2 = +g[s2 + ($2 * 80 | 0) + 56 >> 2];
                    T2 = +g[h2 + 48 >> 2] + (pa2 * oa2 + Q2 * na2 + P2 * R2);
                    S2 = +g[h2 + 52 >> 2] + (ma2 * oa2 + ka2 * na2 + ia2 * R2);
                    R2 = +g[h2 + 56 >> 2] + (la2 * oa2 + ha2 * na2 + V2 * R2);
                    g[ea2 >> 2] = pa2 * ga2 + Q2 * fa2 + P2 * _2;
                    g[ea2 + 4 >> 2] = pa2 * Z2 + Q2 * Y2 + P2 * X2;
                    g[ea2 + 8 >> 2] = pa2 * ja2 + Q2 * W2 + P2 * U2;
                    g[ea2 + 12 >> 2] = 0;
                    g[ea2 + 16 >> 2] = ma2 * ga2 + ka2 * fa2 + ia2 * _2;
                    g[ea2 + 20 >> 2] = ma2 * Z2 + ka2 * Y2 + ia2 * X2;
                    g[ea2 + 24 >> 2] = ma2 * ja2 + ka2 * W2 + ia2 * U2;
                    g[ea2 + 28 >> 2] = 0;
                    g[ea2 + 32 >> 2] = la2 * ga2 + ha2 * fa2 + V2 * _2;
                    g[ea2 + 36 >> 2] = la2 * Z2 + ha2 * Y2 + V2 * X2;
                    g[ea2 + 40 >> 2] = la2 * ja2 + ha2 * W2 + V2 * U2;
                    g[ea2 + 44 >> 2] = 0;
                    g[ea2 + 48 >> 2] = T2;
                    g[ea2 + 52 >> 2] = S2;
                    g[ea2 + 56 >> 2] = R2;
                    g[ea2 + 60 >> 2] = 0;
                    bc[c[(c[r2 >> 2] | 0) + 8 >> 2] & 127](r2, ea2, ea2 + 112 | 0, ea2 + 96 | 0);
                    r2 = c[(c[o2 + 16 >> 2] | 0) + (p2 * 12 | 0) + 4 >> 2] | 0;
                    h2 = c[ca2 + 28 >> 2] | 0;
                    $2 = c[h2 + (r2 * 80 | 0) + 64 >> 2] | 0;
                    s2 = c[e2 + 12 >> 2] | 0;
                    R2 = +g[s2 >> 2];
                    S2 = +g[s2 + 4 >> 2];
                    T2 = +g[s2 + 8 >> 2];
                    U2 = +g[s2 + 16 >> 2];
                    V2 = +g[s2 + 20 >> 2];
                    W2 = +g[s2 + 24 >> 2];
                    ha2 = +g[s2 + 32 >> 2];
                    ja2 = +g[s2 + 36 >> 2];
                    la2 = +g[s2 + 40 >> 2];
                    X2 = +g[h2 + (r2 * 80 | 0) >> 2];
                    Y2 = +g[h2 + (r2 * 80 | 0) + 16 >> 2];
                    Z2 = +g[h2 + (r2 * 80 | 0) + 32 >> 2];
                    _2 = +g[h2 + (r2 * 80 | 0) + 4 >> 2];
                    fa2 = +g[h2 + (r2 * 80 | 0) + 20 >> 2];
                    ga2 = +g[h2 + (r2 * 80 | 0) + 36 >> 2];
                    ia2 = +g[h2 + (r2 * 80 | 0) + 8 >> 2];
                    ka2 = +g[h2 + (r2 * 80 | 0) + 24 >> 2];
                    ma2 = +g[h2 + (r2 * 80 | 0) + 40 >> 2];
                    P2 = +g[h2 + (r2 * 80 | 0) + 48 >> 2];
                    Q2 = +g[h2 + (r2 * 80 | 0) + 52 >> 2];
                    pa2 = +g[h2 + (r2 * 80 | 0) + 56 >> 2];
                    na2 = +g[s2 + 48 >> 2] + (R2 * P2 + S2 * Q2 + T2 * pa2);
                    oa2 = +g[s2 + 52 >> 2] + (U2 * P2 + V2 * Q2 + W2 * pa2);
                    pa2 = +g[s2 + 56 >> 2] + (ha2 * P2 + ja2 * Q2 + la2 * pa2);
                    g[ea2 >> 2] = R2 * X2 + S2 * Y2 + T2 * Z2;
                    g[ea2 + 4 >> 2] = R2 * _2 + S2 * fa2 + T2 * ga2;
                    g[ea2 + 8 >> 2] = R2 * ia2 + S2 * ka2 + T2 * ma2;
                    g[ea2 + 12 >> 2] = 0;
                    g[ea2 + 16 >> 2] = U2 * X2 + V2 * Y2 + W2 * Z2;
                    g[ea2 + 20 >> 2] = U2 * _2 + V2 * fa2 + W2 * ga2;
                    g[ea2 + 24 >> 2] = U2 * ia2 + V2 * ka2 + W2 * ma2;
                    g[ea2 + 28 >> 2] = 0;
                    g[ea2 + 32 >> 2] = ha2 * X2 + ja2 * Y2 + la2 * Z2;
                    g[ea2 + 36 >> 2] = ha2 * _2 + ja2 * fa2 + la2 * ga2;
                    g[ea2 + 40 >> 2] = ha2 * ia2 + ja2 * ka2 + la2 * ma2;
                    g[ea2 + 44 >> 2] = 0;
                    g[ea2 + 48 >> 2] = na2;
                    g[ea2 + 52 >> 2] = oa2;
                    g[ea2 + 56 >> 2] = pa2;
                    g[ea2 + 60 >> 2] = 0;
                    bc[c[(c[$2 >> 2] | 0) + 8 >> 2] & 127]($2, ea2, ea2 + 80 | 0, ea2 + 64 | 0);
                    if (!(+g[ea2 + 112 >> 2] > +g[ea2 + 64 >> 2]) ? !(+g[ea2 + 96 >> 2] < +g[ea2 + 80 >> 2]) : 0)
                      j2 = 1;
                    else
                      j2 = 0;
                    if (!(!(+g[ea2 + 112 + 8 >> 2] > +g[ea2 + 64 + 8 >> 2]) ? !(+g[ea2 + 96 + 8 >> 2] < +g[ea2 + 80 + 8 >> 2]) : 0))
                      j2 = 0;
                    if (!(+g[ea2 + 112 + 4 >> 2] > +g[ea2 + 64 + 4 >> 2]) ? !(+g[ea2 + 96 + 4 >> 2] < +g[ea2 + 80 + 4 >> 2] | j2 ^ 1) : 0)
                      break;
                    rb[c[c[k2 >> 2] >> 2] & 255](k2);
                    n2 = c[b2 + 4 >> 2] | 0;
                    tb[c[(c[n2 >> 2] | 0) + 60 >> 2] & 127](n2, k2);
                    n2 = c[o2 + 16 >> 2] | 0;
                    m2 = c[n2 + (p2 * 12 | 0) >> 2] | 0;
                    n2 = c[n2 + (p2 * 12 | 0) + 4 >> 2] | 0;
                    j2 = c[b2 + 52 >> 2] | 0;
                    if ((j2 | 0) == (c[b2 + 56 >> 2] | 0) ? (da2 = j2 | 0 ? j2 << 1 : 1, (j2 | 0) < (da2 | 0)) : 0) {
                      if (!da2)
                        l2 = 0;
                      else {
                        c[5637] = (c[5637] | 0) + 1;
                        j2 = qG((da2 * 12 | 3) + 16 | 0) | 0;
                        if (!j2)
                          j2 = 0;
                        else {
                          c[(j2 + 4 + 15 & -16) + -4 >> 2] = j2;
                          j2 = j2 + 4 + 15 & -16;
                        }
                        l2 = j2;
                        j2 = c[b2 + 52 >> 2] | 0;
                      }
                      if ((j2 | 0) > 0) {
                        k2 = 0;
                        do {
                          $2 = l2 + (k2 * 12 | 0) | 0;
                          s2 = (c[b2 + 60 >> 2] | 0) + (k2 * 12 | 0) | 0;
                          c[$2 >> 2] = c[s2 >> 2];
                          c[$2 + 4 >> 2] = c[s2 + 4 >> 2];
                          c[$2 + 8 >> 2] = c[s2 + 8 >> 2];
                          k2 = k2 + 1 | 0;
                        } while ((k2 | 0) != (j2 | 0));
                      }
                      j2 = c[b2 + 60 >> 2] | 0;
                      if (j2 | 0) {
                        if (a[b2 + 64 >> 0] | 0) {
                          c[5638] = (c[5638] | 0) + 1;
                          rG(c[j2 + -4 >> 2] | 0);
                        }
                        c[b2 + 60 >> 2] = 0;
                      }
                      a[b2 + 64 >> 0] = 1;
                      c[b2 + 60 >> 2] = l2;
                      c[b2 + 56 >> 2] = da2;
                      j2 = c[b2 + 52 >> 2] | 0;
                    }
                    $2 = c[b2 + 60 >> 2] | 0;
                    c[$2 + (j2 * 12 | 0) >> 2] = m2;
                    c[$2 + (j2 * 12 | 0) + 4 >> 2] = n2;
                    c[$2 + (j2 * 12 | 0) + 8 >> 2] = 0;
                    c[b2 + 52 >> 2] = (c[b2 + 52 >> 2] | 0) + 1;
                  }
                while (0);
                p2 = p2 + 1 | 0;
              } while ((p2 | 0) < (c[o2 + 8 >> 2] | 0));
              k2 = b2 + 60 | 0;
              l2 = b2 + 52 | 0;
            } else {
              k2 = b2 + 60 | 0;
              l2 = b2 + 52 | 0;
            }
            if ((c[l2 >> 2] | 0) > 0) {
              j2 = 0;
              do {
                d2 = c[aa2 >> 2] | 0;
                e2 = c[k2 >> 2] | 0;
                Eb[c[(c[d2 >> 2] | 0) + 8 >> 2] & 63](d2, c[e2 + (j2 * 12 | 0) >> 2] | 0, c[e2 + (j2 * 12 | 0) + 4 >> 2] | 0) | 0;
                j2 = j2 + 1 | 0;
              } while ((j2 | 0) < (c[l2 >> 2] | 0));
            }
            j2 = c[k2 >> 2] | 0;
            if (j2 | 0) {
              if (a[b2 + 64 >> 0] | 0) {
                c[5638] = (c[5638] | 0) + 1;
                rG(c[j2 + -4 >> 2] | 0);
              }
              c[k2 >> 2] = 0;
            }
            a[b2 + 64 >> 0] = 1;
            c[k2 >> 2] = 0;
            c[l2 >> 2] = 0;
            c[b2 + 56 >> 2] = 0;
            i = ea2;
            return;
          }
          function wg(a2) {
            a2 = a2 | 0;
            rG(a2);
            return;
          }
          function xg(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0;
            m2 = i;
            i = i + 240 | 0;
            c[a2 + 4 >> 2] = (c[a2 + 4 >> 2] | 0) + 1;
            k2 = c[b2 + 36 >> 2] | 0;
            j2 = c[d2 + 36 >> 2] | 0;
            f2 = c[a2 + 8 >> 2] | 0;
            K2 = c[(c[f2 + 4 >> 2] | 0) + 28 >> 2] | 0;
            d2 = c[K2 + (k2 * 80 | 0) + 64 >> 2] | 0;
            b2 = (c[(c[a2 + 12 >> 2] | 0) + 4 >> 2] | 0) + 28 | 0;
            e2 = c[(c[b2 >> 2] | 0) + (j2 * 80 | 0) + 64 >> 2] | 0;
            f2 = c[f2 + 12 >> 2] | 0;
            n2 = +g[f2 >> 2];
            I2 = +g[f2 + 4 >> 2];
            J2 = +g[f2 + 8 >> 2];
            q2 = +g[f2 + 16 >> 2];
            s2 = +g[f2 + 20 >> 2];
            u2 = +g[f2 + 24 >> 2];
            r2 = +g[f2 + 32 >> 2];
            v2 = +g[f2 + 36 >> 2];
            D2 = +g[f2 + 40 >> 2];
            w2 = +g[K2 + (k2 * 80 | 0) >> 2];
            x2 = +g[K2 + (k2 * 80 | 0) + 16 >> 2];
            y2 = +g[K2 + (k2 * 80 | 0) + 32 >> 2];
            z2 = +g[K2 + (k2 * 80 | 0) + 4 >> 2];
            A2 = +g[K2 + (k2 * 80 | 0) + 20 >> 2];
            B2 = +g[K2 + (k2 * 80 | 0) + 36 >> 2];
            t2 = +g[K2 + (k2 * 80 | 0) + 8 >> 2];
            C2 = +g[K2 + (k2 * 80 | 0) + 24 >> 2];
            E2 = +g[K2 + (k2 * 80 | 0) + 40 >> 2];
            o2 = +g[K2 + (k2 * 80 | 0) + 48 >> 2];
            p2 = +g[K2 + (k2 * 80 | 0) + 52 >> 2];
            H2 = +g[K2 + (k2 * 80 | 0) + 56 >> 2];
            F2 = +g[f2 + 48 >> 2] + (n2 * o2 + I2 * p2 + J2 * H2);
            G2 = +g[f2 + 52 >> 2] + (q2 * o2 + s2 * p2 + u2 * H2);
            H2 = +g[f2 + 56 >> 2] + (r2 * o2 + v2 * p2 + D2 * H2);
            g[m2 + 176 >> 2] = n2 * w2 + I2 * x2 + J2 * y2;
            g[m2 + 176 + 4 >> 2] = n2 * z2 + I2 * A2 + J2 * B2;
            g[m2 + 176 + 8 >> 2] = n2 * t2 + I2 * C2 + J2 * E2;
            g[m2 + 176 + 12 >> 2] = 0;
            g[m2 + 176 + 16 >> 2] = q2 * w2 + s2 * x2 + u2 * y2;
            g[m2 + 176 + 20 >> 2] = q2 * z2 + s2 * A2 + u2 * B2;
            g[m2 + 176 + 24 >> 2] = q2 * t2 + s2 * C2 + u2 * E2;
            g[m2 + 176 + 28 >> 2] = 0;
            g[m2 + 176 + 32 >> 2] = r2 * w2 + v2 * x2 + D2 * y2;
            g[m2 + 176 + 36 >> 2] = r2 * z2 + v2 * A2 + D2 * B2;
            g[m2 + 176 + 40 >> 2] = r2 * t2 + v2 * C2 + D2 * E2;
            g[m2 + 176 + 44 >> 2] = 0;
            g[m2 + 176 + 48 >> 2] = F2;
            g[m2 + 176 + 52 >> 2] = G2;
            g[m2 + 176 + 56 >> 2] = H2;
            g[m2 + 176 + 60 >> 2] = 0;
            f2 = c[(c[a2 + 12 >> 2] | 0) + 12 >> 2] | 0;
            H2 = +g[f2 >> 2];
            G2 = +g[f2 + 4 >> 2];
            F2 = +g[f2 + 8 >> 2];
            E2 = +g[f2 + 16 >> 2];
            D2 = +g[f2 + 20 >> 2];
            C2 = +g[f2 + 24 >> 2];
            v2 = +g[f2 + 32 >> 2];
            t2 = +g[f2 + 36 >> 2];
            r2 = +g[f2 + 40 >> 2];
            b2 = c[b2 >> 2] | 0;
            B2 = +g[b2 + (j2 * 80 | 0) >> 2];
            A2 = +g[b2 + (j2 * 80 | 0) + 16 >> 2];
            z2 = +g[b2 + (j2 * 80 | 0) + 32 >> 2];
            y2 = +g[b2 + (j2 * 80 | 0) + 4 >> 2];
            x2 = +g[b2 + (j2 * 80 | 0) + 20 >> 2];
            w2 = +g[b2 + (j2 * 80 | 0) + 36 >> 2];
            u2 = +g[b2 + (j2 * 80 | 0) + 8 >> 2];
            s2 = +g[b2 + (j2 * 80 | 0) + 24 >> 2];
            q2 = +g[b2 + (j2 * 80 | 0) + 40 >> 2];
            J2 = +g[b2 + (j2 * 80 | 0) + 48 >> 2];
            I2 = +g[b2 + (j2 * 80 | 0) + 52 >> 2];
            n2 = +g[b2 + (j2 * 80 | 0) + 56 >> 2];
            p2 = +g[f2 + 48 >> 2] + (H2 * J2 + G2 * I2 + F2 * n2);
            o2 = +g[f2 + 52 >> 2] + (E2 * J2 + D2 * I2 + C2 * n2);
            n2 = +g[f2 + 56 >> 2] + (v2 * J2 + t2 * I2 + r2 * n2);
            g[m2 + 112 >> 2] = H2 * B2 + G2 * A2 + F2 * z2;
            g[m2 + 112 + 4 >> 2] = H2 * y2 + G2 * x2 + F2 * w2;
            g[m2 + 112 + 8 >> 2] = H2 * u2 + G2 * s2 + F2 * q2;
            g[m2 + 112 + 12 >> 2] = 0;
            g[m2 + 112 + 16 >> 2] = E2 * B2 + D2 * A2 + C2 * z2;
            g[m2 + 112 + 20 >> 2] = E2 * y2 + D2 * x2 + C2 * w2;
            g[m2 + 112 + 24 >> 2] = E2 * u2 + D2 * s2 + C2 * q2;
            g[m2 + 112 + 28 >> 2] = 0;
            g[m2 + 112 + 32 >> 2] = v2 * B2 + t2 * A2 + r2 * z2;
            g[m2 + 112 + 36 >> 2] = v2 * y2 + t2 * x2 + r2 * w2;
            g[m2 + 112 + 40 >> 2] = v2 * u2 + t2 * s2 + r2 * q2;
            g[m2 + 112 + 44 >> 2] = 0;
            g[m2 + 112 + 48 >> 2] = p2;
            g[m2 + 112 + 52 >> 2] = o2;
            g[m2 + 112 + 56 >> 2] = n2;
            g[m2 + 112 + 60 >> 2] = 0;
            bc[c[(c[d2 >> 2] | 0) + 8 >> 2] & 127](d2, m2 + 176 | 0, m2 + 96 | 0, m2 + 80 | 0);
            bc[c[(c[e2 >> 2] | 0) + 8 >> 2] & 127](e2, m2 + 112 | 0, m2 + 64 | 0, m2 + 48 | 0);
            if (!(+g[m2 + 96 >> 2] > +g[m2 + 48 >> 2]) ? !(+g[m2 + 80 >> 2] < +g[m2 + 64 >> 2]) : 0)
              b2 = 1;
            else
              b2 = 0;
            if (!(!(+g[m2 + 96 + 8 >> 2] > +g[m2 + 48 + 8 >> 2]) ? !(+g[m2 + 80 + 8 >> 2] < +g[m2 + 64 + 8 >> 2]) : 0))
              b2 = 0;
            if (+g[m2 + 96 + 4 >> 2] > +g[m2 + 48 + 4 >> 2]) {
              i = m2;
              return;
            }
            if (+g[m2 + 80 + 4 >> 2] < +g[m2 + 64 + 4 >> 2] | b2 ^ 1) {
              i = m2;
              return;
            }
            f2 = c[a2 + 8 >> 2] | 0;
            b2 = c[f2 + 8 >> 2] | 0;
            c[m2 + 24 >> 2] = f2;
            c[m2 + 24 + 4 >> 2] = d2;
            c[m2 + 24 + 8 >> 2] = b2;
            c[m2 + 24 + 12 >> 2] = m2 + 176;
            c[m2 + 24 + 16 >> 2] = -1;
            c[m2 + 24 + 20 >> 2] = k2;
            b2 = c[a2 + 12 >> 2] | 0;
            f2 = c[b2 + 8 >> 2] | 0;
            c[m2 >> 2] = b2;
            c[m2 + 4 >> 2] = e2;
            c[m2 + 8 >> 2] = f2;
            c[m2 + 12 >> 2] = m2 + 112;
            c[m2 + 16 >> 2] = -1;
            c[m2 + 20 >> 2] = j2;
            f2 = c[a2 + 28 >> 2] | 0;
            c[4992] = (c[4992] | 0) + 1;
            b2 = ((j2 << 16 | k2) + ~((j2 << 16 | k2) << 15) >> 10 ^ (j2 << 16 | k2) + ~((j2 << 16 | k2) << 15)) * 9 | 0;
            b2 = (c[f2 + 12 >> 2] | 0) + -1 & ((b2 >> 6 ^ b2) + ~((b2 >> 6 ^ b2) << 11) >> 16 ^ (b2 >> 6 ^ b2) + ~((b2 >> 6 ^ b2) << 11));
            a:
              do
                if ((b2 | 0) < (c[f2 + 28 >> 2] | 0) ? (h2 = c[(c[f2 + 36 >> 2] | 0) + (b2 << 2) >> 2] | 0, (h2 | 0) != -1) : 0) {
                  e2 = c[f2 + 16 >> 2] | 0;
                  b2 = h2;
                  while (1) {
                    d2 = e2 + (b2 * 12 | 0) | 0;
                    if ((c[d2 >> 2] | 0) == (k2 | 0) ? (c[e2 + (b2 * 12 | 0) + 4 >> 2] | 0) == (j2 | 0) : 0)
                      break;
                    b2 = c[(c[f2 + 56 >> 2] | 0) + (b2 << 2) >> 2] | 0;
                    if ((b2 | 0) == -1) {
                      l2 = 16;
                      break a;
                    }
                  }
                  if (d2)
                    b2 = c[e2 + (b2 * 12 | 0) + 8 >> 2] | 0;
                  else
                    l2 = 16;
                } else
                  l2 = 16;
              while (0);
            if ((l2 | 0) == 16) {
              b2 = c[a2 + 16 >> 2] | 0;
              b2 = zb[c[(c[b2 >> 2] | 0) + 8 >> 2] & 31](b2, m2 + 24 | 0, m2, c[a2 + 32 >> 2] | 0) | 0;
              K2 = c[a2 + 28 >> 2] | 0;
              c[(Eb[c[(c[K2 >> 2] | 0) + 12 >> 2] & 63](K2, k2, j2) | 0) + 8 >> 2] = b2;
            }
            K2 = c[a2 + 24 >> 2] | 0;
            h2 = c[K2 + 8 >> 2] | 0;
            l2 = c[K2 + 12 >> 2] | 0;
            c[K2 + 8 >> 2] = m2 + 24;
            c[K2 + 12 >> 2] = m2;
            Zb[c[(c[K2 >> 2] | 0) + 8 >> 2] & 127](K2, -1, k2);
            K2 = c[a2 + 24 >> 2] | 0;
            Zb[c[(c[K2 >> 2] | 0) + 12 >> 2] & 127](K2, -1, j2);
            pb[c[(c[b2 >> 2] | 0) + 8 >> 2] & 31](b2, m2 + 24 | 0, m2, c[a2 + 20 >> 2] | 0, c[a2 + 24 >> 2] | 0);
            K2 = c[a2 + 24 >> 2] | 0;
            c[K2 + 8 >> 2] = h2;
            c[K2 + 12 >> 2] = l2;
            i = m2;
            return;
          }
          function yg(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            return;
          }
          function zg(a2, b2, c2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            return 0;
          }
          function Ag(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0;
            f2 = c[a2 + 44 >> 2] | 0;
            a2 = c[f2 + 8 >> 2] | 0;
            if ((a2 | 0) <= 0)
              return;
            e2 = 0;
            do {
              d2 = c[(c[f2 + 16 >> 2] | 0) + (e2 * 12 | 0) + 8 >> 2] | 0;
              if (d2) {
                tb[c[(c[d2 >> 2] | 0) + 16 >> 2] & 127](d2, b2);
                a2 = c[f2 + 8 >> 2] | 0;
              }
              e2 = e2 + 1 | 0;
            } while ((e2 | 0) < (a2 | 0));
            return;
          }
          function Bg(a2) {
            a2 = a2 | 0;
            var b2 = 0;
            c[a2 >> 2] = 3720;
            c[a2 + 12 >> 2] = 3748;
            b2 = c[a2 + 60 >> 2] | 0;
            tb[c[(c[b2 >> 2] | 0) + 20 >> 2] & 127](b2, c[a2 + 76 >> 2] | 0);
            b2 = c[a2 + 60 >> 2] | 0;
            tb[c[(c[b2 >> 2] | 0) + 16 >> 2] & 127](b2, c[a2 + 76 >> 2] | 0);
            return;
          }
          function Cg(a2) {
            a2 = a2 | 0;
            var b2 = 0;
            c[a2 >> 2] = 3748;
            b2 = c[a2 + 48 >> 2] | 0;
            tb[c[(c[b2 >> 2] | 0) + 20 >> 2] & 127](b2, c[a2 + 64 >> 2] | 0);
            b2 = c[a2 + 48 >> 2] | 0;
            tb[c[(c[b2 >> 2] | 0) + 16 >> 2] & 127](b2, c[a2 + 64 >> 2] | 0);
            return;
          }
          function Dg(a2) {
            a2 = a2 | 0;
            var b2 = 0;
            c[a2 >> 2] = 3748;
            b2 = c[a2 + 48 >> 2] | 0;
            tb[c[(c[b2 >> 2] | 0) + 20 >> 2] & 127](b2, c[a2 + 64 >> 2] | 0);
            b2 = c[a2 + 48 >> 2] | 0;
            tb[c[(c[b2 >> 2] | 0) + 16 >> 2] & 127](b2, c[a2 + 64 >> 2] | 0);
            rG(a2);
            return;
          }
          function Eg(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0;
            o2 = i;
            i = i + 144 | 0;
            h2 = +g[b2 >> 2];
            j2 = +g[b2 + 16 >> 2];
            p2 = h2 < j2 ? h2 : j2;
            k2 = +g[b2 + 32 >> 2];
            if ((p2 < k2 ? p2 : k2) > +g[a2 + 28 >> 2]) {
              i = o2;
              return;
            }
            m2 = h2 > j2 ? b2 : b2 + 16 | 0;
            if (+g[(+g[m2 >> 2] > k2 ? m2 : b2 + 32 | 0) >> 2] < +g[a2 + 12 >> 2]) {
              i = o2;
              return;
            }
            h2 = +g[b2 + 8 >> 2];
            j2 = +g[b2 + 24 >> 2];
            p2 = h2 < j2 ? h2 : j2;
            k2 = +g[b2 + 40 >> 2];
            if ((p2 < k2 ? p2 : k2) > +g[a2 + 36 >> 2]) {
              i = o2;
              return;
            }
            m2 = h2 > j2 ? b2 + 8 | 0 : b2 + 24 | 0;
            if (+g[(+g[m2 >> 2] > k2 ? m2 : b2 + 40 | 0) >> 2] < +g[a2 + 20 >> 2]) {
              i = o2;
              return;
            }
            h2 = +g[b2 + 4 >> 2];
            j2 = +g[b2 + 20 >> 2];
            p2 = h2 < j2 ? h2 : j2;
            k2 = +g[b2 + 36 >> 2];
            if ((p2 < k2 ? p2 : k2) > +g[a2 + 32 >> 2]) {
              i = o2;
              return;
            }
            m2 = h2 > j2 ? b2 + 4 | 0 : b2 + 20 | 0;
            if (+g[(+g[m2 >> 2] > k2 ? m2 : b2 + 36 | 0) >> 2] < +g[a2 + 16 >> 2]) {
              i = o2;
              return;
            }
            m2 = c[a2 + 48 >> 2] | 0;
            f2 = c[a2 + 4 >> 2] | 0;
            if ((c[(c[f2 + 4 >> 2] | 0) + 4 >> 2] | 0) >= 20) {
              i = o2;
              return;
            }
            c[o2 + 24 + 8 >> 2] = 0;
            c[o2 + 24 + 12 >> 2] = -1;
            c[o2 + 24 + 16 >> 2] = 1065353216;
            c[o2 + 24 + 20 >> 2] = 1065353216;
            c[o2 + 24 + 24 >> 2] = 1065353216;
            g[o2 + 24 + 28 >> 2] = 0;
            c[o2 + 24 + 56 >> 2] = 0;
            c[o2 + 24 >> 2] = 3768;
            c[o2 + 24 + 4 >> 2] = 1;
            c[o2 + 24 + 60 >> 2] = c[b2 >> 2];
            c[o2 + 24 + 60 + 4 >> 2] = c[b2 + 4 >> 2];
            c[o2 + 24 + 60 + 8 >> 2] = c[b2 + 8 >> 2];
            c[o2 + 24 + 60 + 12 >> 2] = c[b2 + 12 >> 2];
            c[o2 + 24 + 76 >> 2] = c[b2 + 16 >> 2];
            c[o2 + 24 + 76 + 4 >> 2] = c[b2 + 16 + 4 >> 2];
            c[o2 + 24 + 76 + 8 >> 2] = c[b2 + 16 + 8 >> 2];
            c[o2 + 24 + 76 + 12 >> 2] = c[b2 + 16 + 12 >> 2];
            c[o2 + 24 + 92 >> 2] = c[b2 + 32 >> 2];
            c[o2 + 24 + 92 + 4 >> 2] = c[b2 + 32 + 4 >> 2];
            c[o2 + 24 + 92 + 8 >> 2] = c[b2 + 32 + 8 >> 2];
            c[o2 + 24 + 92 + 12 >> 2] = c[b2 + 32 + 12 >> 2];
            c[o2 + 24 + 48 >> 2] = c[a2 + 56 >> 2];
            q2 = c[a2 + 8 >> 2] | 0;
            b2 = c[q2 + 8 >> 2] | 0;
            l2 = c[q2 + 12 >> 2] | 0;
            c[o2 >> 2] = q2;
            c[o2 + 4 >> 2] = o2 + 24;
            c[o2 + 8 >> 2] = b2;
            c[o2 + 12 >> 2] = l2;
            c[o2 + 16 >> 2] = d2;
            c[o2 + 20 >> 2] = e2;
            l2 = zb[c[(c[m2 >> 2] | 0) + 8 >> 2] & 31](m2, f2, o2, c[a2 + 64 >> 2] | 0) | 0;
            f2 = c[a2 + 44 >> 2] | 0;
            b2 = c[f2 + 8 >> 2] | 0;
            if ((c[b2 + 8 >> 2] | 0) == (c[(c[a2 + 8 >> 2] | 0) + 8 >> 2] | 0)) {
              c[f2 + 8 >> 2] = o2;
              Zb[c[(c[f2 >> 2] | 0) + 8 >> 2] & 127](f2, d2, e2);
            } else {
              b2 = c[f2 + 12 >> 2] | 0;
              c[f2 + 12 >> 2] = o2;
              Zb[c[(c[f2 >> 2] | 0) + 12 >> 2] & 127](f2, d2, e2);
            }
            pb[c[(c[l2 >> 2] | 0) + 8 >> 2] & 31](l2, c[a2 + 4 >> 2] | 0, o2, c[a2 + 52 >> 2] | 0, c[a2 + 44 >> 2] | 0);
            f2 = c[a2 + 44 >> 2] | 0;
            if ((c[(c[f2 + 8 >> 2] | 0) + 8 >> 2] | 0) == (c[(c[a2 + 8 >> 2] | 0) + 8 >> 2] | 0))
              c[f2 + 8 >> 2] = b2;
            else
              c[f2 + 12 >> 2] = b2;
            rb[c[c[l2 >> 2] >> 2] & 255](l2);
            tb[c[(c[m2 >> 2] | 0) + 60 >> 2] & 127](m2, l2);
            c[o2 + 24 >> 2] = 6248;
            f2 = c[o2 + 24 + 56 >> 2] | 0;
            if (f2 | 0 ? (rb[c[c[f2 >> 2] >> 2] & 255](f2), n2 = c[o2 + 24 + 56 >> 2] | 0, n2 | 0) : 0) {
              c[5638] = (c[5638] | 0) + 1;
              rG(c[n2 + -4 >> 2] | 0);
            }
            i = o2;
            return;
          }
          function Fg(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0;
            c[a2 >> 2] = 6248;
            b2 = c[a2 + 56 >> 2] | 0;
            if (b2 | 0 ? (rb[c[c[b2 >> 2] >> 2] & 255](b2), d2 = c[a2 + 56 >> 2] | 0, d2 | 0) : 0) {
              c[5638] = (c[5638] | 0) + 1;
              rG(c[d2 + -4 >> 2] | 0);
            }
            c[5638] = (c[5638] | 0) + 1;
            rG(c[a2 + -4 >> 2] | 0);
            return;
          }
          function Gg(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            bc[c[(c[a2 >> 2] | 0) + 80 >> 2] & 127](a2, b2, d2, e2);
            return;
          }
          function Hg(a2) {
            a2 = a2 | 0;
            return a2 + 16 | 0;
          }
          function Ig(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = +b2;
            d2 = d2 | 0;
            c[d2 >> 2] = 0;
            c[d2 + 4 >> 2] = 0;
            c[d2 + 8 >> 2] = 0;
            c[d2 + 12 >> 2] = 0;
            return;
          }
          function Jg(a2) {
            a2 = a2 | 0;
            return 11211;
          }
          function Kg(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c[a2 >> 2] = 1065353216;
            c[a2 + 4 >> 2] = 1065353216;
            c[a2 + 8 >> 2] = 1065353216;
            g[a2 + 12 >> 2] = 0;
            return;
          }
          function Lg(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            g[a2 + 48 >> 2] = b2;
            return;
          }
          function Mg(a2) {
            a2 = a2 | 0;
            return + +g[a2 + 48 >> 2];
          }
          function Ng(a2) {
            a2 = a2 | 0;
            return 52;
          }
          function Og(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0;
            e2 = Ob[c[(c[d2 >> 2] | 0) + 40 >> 2] & 31](d2, a2) | 0;
            f2 = Ob[c[(c[d2 >> 2] | 0) + 28 >> 2] & 31](d2, e2) | 0;
            c[b2 >> 2] = f2;
            if (f2 | 0)
              tb[c[(c[d2 >> 2] | 0) + 48 >> 2] & 127](d2, e2);
            c[b2 + 4 >> 2] = c[a2 + 4 >> 2];
            c[b2 + 28 >> 2] = c[a2 + 32 >> 2];
            c[b2 + 32 >> 2] = c[a2 + 36 >> 2];
            c[b2 + 36 >> 2] = c[a2 + 40 >> 2];
            c[b2 + 40 >> 2] = c[a2 + 44 >> 2];
            c[b2 + 12 >> 2] = c[a2 + 16 >> 2];
            c[b2 + 16 >> 2] = c[a2 + 20 >> 2];
            c[b2 + 20 >> 2] = c[a2 + 24 >> 2];
            c[b2 + 24 >> 2] = c[a2 + 28 >> 2];
            c[b2 + 44 >> 2] = c[a2 + 48 >> 2];
            return 11220;
          }
          function Pg(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0;
            j2 = +g[d2 >> 2];
            i2 = +g[d2 + 4 >> 2];
            e2 = +g[d2 + 8 >> 2];
            f2 = j2 * +g[b2 + 60 >> 2] + i2 * +g[b2 + 64 >> 2] + e2 * +g[b2 + 68 >> 2];
            h2 = j2 * +g[b2 + 76 >> 2] + i2 * +g[b2 + 80 >> 2] + e2 * +g[b2 + 84 >> 2];
            e2 = j2 * +g[b2 + 92 >> 2] + i2 * +g[b2 + 96 >> 2] + e2 * +g[b2 + 100 >> 2];
            b2 = b2 + 60 + ((f2 < h2 ? h2 < e2 ? 2 : 1 : f2 < e2 ? 2 : 0) << 4) | 0;
            c[a2 >> 2] = c[b2 >> 2];
            c[a2 + 4 >> 2] = c[b2 + 4 >> 2];
            c[a2 + 8 >> 2] = c[b2 + 8 >> 2];
            c[a2 + 12 >> 2] = c[b2 + 12 >> 2];
            return;
          }
          function Qg(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0;
            if ((e2 | 0) <= 0)
              return;
            f2 = 0;
            do {
              n2 = +g[b2 + (f2 << 4) >> 2];
              m2 = +g[b2 + (f2 << 4) + 4 >> 2];
              j2 = +g[b2 + (f2 << 4) + 8 >> 2];
              k2 = n2 * +g[a2 + 60 >> 2] + m2 * +g[a2 + 64 >> 2] + j2 * +g[a2 + 68 >> 2];
              l2 = n2 * +g[a2 + 76 >> 2] + m2 * +g[a2 + 80 >> 2] + j2 * +g[a2 + 84 >> 2];
              j2 = n2 * +g[a2 + 92 >> 2] + m2 * +g[a2 + 96 >> 2] + j2 * +g[a2 + 100 >> 2];
              h2 = d2 + (f2 << 4) | 0;
              i2 = a2 + 60 + ((k2 < l2 ? l2 < j2 ? 2 : 1 : k2 < j2 ? 2 : 0) << 4) | 0;
              c[h2 >> 2] = c[i2 >> 2];
              c[h2 + 4 >> 2] = c[i2 + 4 >> 2];
              c[h2 + 8 >> 2] = c[i2 + 8 >> 2];
              c[h2 + 12 >> 2] = c[i2 + 12 >> 2];
              f2 = f2 + 1 | 0;
            } while ((f2 | 0) != (e2 | 0));
            return;
          }
          function Rg(a2) {
            a2 = a2 | 0;
            return 2;
          }
          function Sg(a2, b2, c2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0;
            h2 = +g[a2 + 60 >> 2];
            j2 = +g[a2 + 76 >> 2] - h2;
            i2 = +g[a2 + 64 >> 2];
            k2 = +g[a2 + 80 >> 2] - i2;
            d2 = +g[a2 + 68 >> 2];
            f2 = +g[a2 + 84 >> 2] - d2;
            h2 = +g[a2 + 92 >> 2] - h2;
            i2 = +g[a2 + 96 >> 2] - i2;
            d2 = +g[a2 + 100 >> 2] - d2;
            g[c2 + 12 >> 2] = 0;
            e2 = 1 / +O(+((j2 * i2 - k2 * h2) * (j2 * i2 - k2 * h2) + ((k2 * d2 - f2 * i2) * (k2 * d2 - f2 * i2) + (f2 * h2 - j2 * d2) * (f2 * h2 - j2 * d2))));
            g[c2 >> 2] = (k2 * d2 - f2 * i2) * e2;
            g[c2 + 4 >> 2] = (f2 * h2 - j2 * d2) * e2;
            g[c2 + 8 >> 2] = (j2 * i2 - k2 * h2) * e2;
            if (!b2)
              return;
            g[c2 >> 2] = -((k2 * d2 - f2 * i2) * e2);
            g[c2 + 4 >> 2] = -((f2 * h2 - j2 * d2) * e2);
            g[c2 + 8 >> 2] = -((j2 * i2 - k2 * h2) * e2);
            return;
          }
          function Tg(a2) {
            a2 = a2 | 0;
            return 3;
          }
          function Ug(a2) {
            a2 = a2 | 0;
            return 3;
          }
          function Vg(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            Zb[c[(c[a2 >> 2] | 0) + 108 >> 2] & 127](a2, b2, d2);
            Zb[c[(c[a2 >> 2] | 0) + 108 >> 2] & 127](a2, (b2 + 1 | 0) % 3 | 0, e2);
            return;
          }
          function Wg(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            c[d2 >> 2] = c[a2 + 60 + (b2 << 4) >> 2];
            c[d2 + 4 >> 2] = c[a2 + 60 + (b2 << 4) + 4 >> 2];
            c[d2 + 8 >> 2] = c[a2 + 60 + (b2 << 4) + 8 >> 2];
            c[d2 + 12 >> 2] = c[a2 + 60 + (b2 << 4) + 12 >> 2];
            return;
          }
          function Xg(a2) {
            a2 = a2 | 0;
            return 1;
          }
          function Yg(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            bc[c[(c[a2 >> 2] | 0) + 124 >> 2] & 127](a2, e2, b2, d2);
            return;
          }
          function Aj(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var f2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0;
            r2 = i;
            i = i + 80 | 0;
            o2 = c[a2 + 4 >> 2] | 0;
            Nb[c[(c[o2 >> 2] | 0) + 16 >> 2] & 3](o2, r2 + 28 | 0, r2 + 24 | 0, r2 + 20 | 0, r2 + 16 | 0, r2 + 12 | 0, r2 + 8 | 0, r2 + 4 | 0, r2, b2);
            o2 = (c[r2 + 12 >> 2] | 0) + (_(c[r2 + 8 >> 2] | 0, d2) | 0) | 0;
            q2 = c[a2 + 4 >> 2] | 0;
            p2 = (c[r2 + 20 >> 2] | 0) == 0;
            n2 = c[r2 + 28 >> 2] | 0;
            if ((c[r2 >> 2] | 0) == 3) {
              m2 = c[r2 + 16 >> 2] | 0;
              l2 = n2 + (_(m2, e[o2 + 4 >> 1] | 0) | 0) | 0;
              if (p2) {
                j2 = +g[l2 + 8 >> 2] * +g[q2 + 12 >> 2];
                k2 = +g[l2 + 4 >> 2] * +g[q2 + 8 >> 2];
                f2 = +g[l2 >> 2] * +g[q2 + 4 >> 2];
              } else {
                j2 = +h[l2 + 16 >> 3] * +g[q2 + 12 >> 2];
                k2 = +h[l2 + 8 >> 3] * +g[q2 + 8 >> 2];
                f2 = +h[l2 >> 3] * +g[q2 + 4 >> 2];
              }
              g[r2 + 32 + 32 >> 2] = f2;
              g[r2 + 32 + 36 >> 2] = k2;
              g[r2 + 32 + 40 >> 2] = j2;
              g[r2 + 32 + 44 >> 2] = 0;
              l2 = n2 + (_(m2, e[o2 + 2 >> 1] | 0) | 0) | 0;
              if (p2) {
                j2 = +g[l2 + 8 >> 2] * +g[q2 + 12 >> 2];
                k2 = +g[l2 + 4 >> 2] * +g[q2 + 8 >> 2];
                f2 = +g[l2 >> 2] * +g[q2 + 4 >> 2];
              } else {
                j2 = +h[l2 + 16 >> 3] * +g[q2 + 12 >> 2];
                k2 = +h[l2 + 8 >> 3] * +g[q2 + 8 >> 2];
                f2 = +h[l2 >> 3] * +g[q2 + 4 >> 2];
              }
              g[r2 + 32 + 16 >> 2] = f2;
              g[r2 + 32 + 20 >> 2] = k2;
              g[r2 + 32 + 24 >> 2] = j2;
              g[r2 + 32 + 28 >> 2] = 0;
              l2 = n2 + (_(m2, e[o2 >> 1] | 0) | 0) | 0;
              if (p2) {
                j2 = +g[l2 + 8 >> 2] * +g[q2 + 12 >> 2];
                k2 = +g[l2 + 4 >> 2] * +g[q2 + 8 >> 2];
                f2 = +g[l2 >> 2] * +g[q2 + 4 >> 2];
              } else {
                j2 = +h[l2 + 16 >> 3] * +g[q2 + 12 >> 2];
                k2 = +h[l2 + 8 >> 3] * +g[q2 + 8 >> 2];
                f2 = +h[l2 >> 3] * +g[q2 + 4 >> 2];
              }
              g[r2 + 32 >> 2] = f2;
              g[r2 + 32 + 4 >> 2] = k2;
              g[r2 + 32 + 8 >> 2] = j2;
              g[r2 + 32 + 12 >> 2] = 0;
              q2 = a2 + 8 | 0;
              q2 = c[q2 >> 2] | 0;
              p2 = c[q2 >> 2] | 0;
              p2 = p2 + 8 | 0;
              p2 = c[p2 >> 2] | 0;
              bc[p2 & 127](q2, r2 + 32 | 0, b2, d2);
              a2 = c[a2 + 4 >> 2] | 0;
              d2 = c[a2 >> 2] | 0;
              d2 = d2 + 24 | 0;
              d2 = c[d2 >> 2] | 0;
              tb[d2 & 127](a2, b2);
              i = r2;
              return;
            } else {
              m2 = c[r2 + 16 >> 2] | 0;
              l2 = n2 + (_(m2, c[o2 + 8 >> 2] | 0) | 0) | 0;
              if (p2) {
                j2 = +g[l2 + 8 >> 2] * +g[q2 + 12 >> 2];
                k2 = +g[l2 + 4 >> 2] * +g[q2 + 8 >> 2];
                f2 = +g[l2 >> 2] * +g[q2 + 4 >> 2];
              } else {
                j2 = +h[l2 + 16 >> 3] * +g[q2 + 12 >> 2];
                k2 = +h[l2 + 8 >> 3] * +g[q2 + 8 >> 2];
                f2 = +h[l2 >> 3] * +g[q2 + 4 >> 2];
              }
              g[r2 + 32 + 32 >> 2] = f2;
              g[r2 + 32 + 36 >> 2] = k2;
              g[r2 + 32 + 40 >> 2] = j2;
              g[r2 + 32 + 44 >> 2] = 0;
              l2 = n2 + (_(m2, c[o2 + 4 >> 2] | 0) | 0) | 0;
              if (p2) {
                j2 = +g[l2 + 8 >> 2] * +g[q2 + 12 >> 2];
                k2 = +g[l2 + 4 >> 2] * +g[q2 + 8 >> 2];
                f2 = +g[l2 >> 2] * +g[q2 + 4 >> 2];
              } else {
                j2 = +h[l2 + 16 >> 3] * +g[q2 + 12 >> 2];
                k2 = +h[l2 + 8 >> 3] * +g[q2 + 8 >> 2];
                f2 = +h[l2 >> 3] * +g[q2 + 4 >> 2];
              }
              g[r2 + 32 + 16 >> 2] = f2;
              g[r2 + 32 + 20 >> 2] = k2;
              g[r2 + 32 + 24 >> 2] = j2;
              g[r2 + 32 + 28 >> 2] = 0;
              l2 = n2 + (_(m2, c[o2 >> 2] | 0) | 0) | 0;
              if (p2) {
                j2 = +g[l2 + 8 >> 2] * +g[q2 + 12 >> 2];
                k2 = +g[l2 + 4 >> 2] * +g[q2 + 8 >> 2];
                f2 = +g[l2 >> 2] * +g[q2 + 4 >> 2];
              } else {
                j2 = +h[l2 + 16 >> 3] * +g[q2 + 12 >> 2];
                k2 = +h[l2 + 8 >> 3] * +g[q2 + 8 >> 2];
                f2 = +h[l2 >> 3] * +g[q2 + 4 >> 2];
              }
              g[r2 + 32 >> 2] = f2;
              g[r2 + 32 + 4 >> 2] = k2;
              g[r2 + 32 + 8 >> 2] = j2;
              g[r2 + 32 + 12 >> 2] = 0;
              q2 = a2 + 8 | 0;
              q2 = c[q2 >> 2] | 0;
              p2 = c[q2 >> 2] | 0;
              p2 = p2 + 8 | 0;
              p2 = c[p2 >> 2] | 0;
              bc[p2 & 127](q2, r2 + 32 | 0, b2, d2);
              a2 = c[a2 + 4 >> 2] | 0;
              d2 = c[a2 >> 2] | 0;
              d2 = d2 + 24 | 0;
              d2 = c[d2 >> 2] | 0;
              tb[d2 & 127](a2, b2);
              i = r2;
              return;
            }
          }
          function Bj(a2) {
            a2 = a2 | 0;
            rG(a2);
            return;
          }
          function Cj(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var f2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0;
            r2 = i;
            i = i + 80 | 0;
            o2 = c[a2 + 4 >> 2] | 0;
            Nb[c[(c[o2 >> 2] | 0) + 16 >> 2] & 3](o2, r2 + 28 | 0, r2 + 24 | 0, r2 + 20 | 0, r2 + 16 | 0, r2 + 12 | 0, r2 + 8 | 0, r2 + 4 | 0, r2, b2);
            o2 = (c[r2 + 12 >> 2] | 0) + (_(c[r2 + 8 >> 2] | 0, d2) | 0) | 0;
            q2 = c[a2 + 4 >> 2] | 0;
            p2 = (c[r2 + 20 >> 2] | 0) == 0;
            n2 = c[r2 + 28 >> 2] | 0;
            if ((c[r2 >> 2] | 0) == 3) {
              m2 = c[r2 + 16 >> 2] | 0;
              l2 = n2 + (_(m2, e[o2 + 4 >> 1] | 0) | 0) | 0;
              if (p2) {
                j2 = +g[l2 + 8 >> 2] * +g[q2 + 12 >> 2];
                k2 = +g[l2 + 4 >> 2] * +g[q2 + 8 >> 2];
                f2 = +g[l2 >> 2] * +g[q2 + 4 >> 2];
              } else {
                j2 = +h[l2 + 16 >> 3] * +g[q2 + 12 >> 2];
                k2 = +h[l2 + 8 >> 3] * +g[q2 + 8 >> 2];
                f2 = +h[l2 >> 3] * +g[q2 + 4 >> 2];
              }
              g[r2 + 32 + 32 >> 2] = f2;
              g[r2 + 32 + 36 >> 2] = k2;
              g[r2 + 32 + 40 >> 2] = j2;
              g[r2 + 32 + 44 >> 2] = 0;
              l2 = n2 + (_(m2, e[o2 + 2 >> 1] | 0) | 0) | 0;
              if (p2) {
                j2 = +g[l2 + 8 >> 2] * +g[q2 + 12 >> 2];
                k2 = +g[l2 + 4 >> 2] * +g[q2 + 8 >> 2];
                f2 = +g[l2 >> 2] * +g[q2 + 4 >> 2];
              } else {
                j2 = +h[l2 + 16 >> 3] * +g[q2 + 12 >> 2];
                k2 = +h[l2 + 8 >> 3] * +g[q2 + 8 >> 2];
                f2 = +h[l2 >> 3] * +g[q2 + 4 >> 2];
              }
              g[r2 + 32 + 16 >> 2] = f2;
              g[r2 + 32 + 20 >> 2] = k2;
              g[r2 + 32 + 24 >> 2] = j2;
              g[r2 + 32 + 28 >> 2] = 0;
              l2 = n2 + (_(m2, e[o2 >> 1] | 0) | 0) | 0;
              if (p2) {
                j2 = +g[l2 + 8 >> 2] * +g[q2 + 12 >> 2];
                k2 = +g[l2 + 4 >> 2] * +g[q2 + 8 >> 2];
                f2 = +g[l2 >> 2] * +g[q2 + 4 >> 2];
              } else {
                j2 = +h[l2 + 16 >> 3] * +g[q2 + 12 >> 2];
                k2 = +h[l2 + 8 >> 3] * +g[q2 + 8 >> 2];
                f2 = +h[l2 >> 3] * +g[q2 + 4 >> 2];
              }
              g[r2 + 32 >> 2] = f2;
              g[r2 + 32 + 4 >> 2] = k2;
              g[r2 + 32 + 8 >> 2] = j2;
              g[r2 + 32 + 12 >> 2] = 0;
              q2 = a2 + 8 | 0;
              q2 = c[q2 >> 2] | 0;
              p2 = c[q2 >> 2] | 0;
              p2 = p2 + 8 | 0;
              p2 = c[p2 >> 2] | 0;
              bc[p2 & 127](q2, r2 + 32 | 0, b2, d2);
              a2 = c[a2 + 4 >> 2] | 0;
              d2 = c[a2 >> 2] | 0;
              d2 = d2 + 24 | 0;
              d2 = c[d2 >> 2] | 0;
              tb[d2 & 127](a2, b2);
              i = r2;
              return;
            } else {
              m2 = c[r2 + 16 >> 2] | 0;
              l2 = n2 + (_(m2, c[o2 + 8 >> 2] | 0) | 0) | 0;
              if (p2) {
                j2 = +g[l2 + 8 >> 2] * +g[q2 + 12 >> 2];
                k2 = +g[l2 + 4 >> 2] * +g[q2 + 8 >> 2];
                f2 = +g[l2 >> 2] * +g[q2 + 4 >> 2];
              } else {
                j2 = +h[l2 + 16 >> 3] * +g[q2 + 12 >> 2];
                k2 = +h[l2 + 8 >> 3] * +g[q2 + 8 >> 2];
                f2 = +h[l2 >> 3] * +g[q2 + 4 >> 2];
              }
              g[r2 + 32 + 32 >> 2] = f2;
              g[r2 + 32 + 36 >> 2] = k2;
              g[r2 + 32 + 40 >> 2] = j2;
              g[r2 + 32 + 44 >> 2] = 0;
              l2 = n2 + (_(m2, c[o2 + 4 >> 2] | 0) | 0) | 0;
              if (p2) {
                j2 = +g[l2 + 8 >> 2] * +g[q2 + 12 >> 2];
                k2 = +g[l2 + 4 >> 2] * +g[q2 + 8 >> 2];
                f2 = +g[l2 >> 2] * +g[q2 + 4 >> 2];
              } else {
                j2 = +h[l2 + 16 >> 3] * +g[q2 + 12 >> 2];
                k2 = +h[l2 + 8 >> 3] * +g[q2 + 8 >> 2];
                f2 = +h[l2 >> 3] * +g[q2 + 4 >> 2];
              }
              g[r2 + 32 + 16 >> 2] = f2;
              g[r2 + 32 + 20 >> 2] = k2;
              g[r2 + 32 + 24 >> 2] = j2;
              g[r2 + 32 + 28 >> 2] = 0;
              l2 = n2 + (_(m2, c[o2 >> 2] | 0) | 0) | 0;
              if (p2) {
                j2 = +g[l2 + 8 >> 2] * +g[q2 + 12 >> 2];
                k2 = +g[l2 + 4 >> 2] * +g[q2 + 8 >> 2];
                f2 = +g[l2 >> 2] * +g[q2 + 4 >> 2];
              } else {
                j2 = +h[l2 + 16 >> 3] * +g[q2 + 12 >> 2];
                k2 = +h[l2 + 8 >> 3] * +g[q2 + 8 >> 2];
                f2 = +h[l2 >> 3] * +g[q2 + 4 >> 2];
              }
              g[r2 + 32 >> 2] = f2;
              g[r2 + 32 + 4 >> 2] = k2;
              g[r2 + 32 + 8 >> 2] = j2;
              g[r2 + 32 + 12 >> 2] = 0;
              q2 = a2 + 8 | 0;
              q2 = c[q2 >> 2] | 0;
              p2 = c[q2 >> 2] | 0;
              p2 = p2 + 8 | 0;
              p2 = c[p2 >> 2] | 0;
              bc[p2 & 127](q2, r2 + 32 | 0, b2, d2);
              a2 = c[a2 + 4 >> 2] | 0;
              d2 = c[a2 >> 2] | 0;
              d2 = d2 + 24 | 0;
              d2 = c[d2 >> 2] | 0;
              tb[d2 & 127](a2, b2);
              i = r2;
              return;
            }
          }
          function Dj(a2) {
            a2 = a2 | 0;
            if (!a2)
              return;
            c[5638] = (c[5638] | 0) + 1;
            rG(c[a2 + -4 >> 2] | 0);
            return;
          }
          function Ej(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, h2 = 0, j2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0;
            f2 = i;
            i = i + 16 | 0;
            y2 = c[a2 + 56 >> 2] | 0;
            z2 = c[a2 + 32 + (((y2 + 2 | 0) % 3 | 0) << 2) >> 2] | 0;
            c[f2 >> 2] = z2;
            c[f2 + 4 >> 2] = z2;
            c[f2 + 8 >> 2] = z2;
            g[f2 + 12 >> 2] = 0;
            g[f2 + (y2 << 2) >> 2] = (c[k >> 2] = z2, +g[k >> 2]) + +g[a2 + 32 + (y2 << 2) >> 2];
            l2 = +Hb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
            h2 = +Hb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
            o2 = +Hb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
            l2 = l2 + +g[f2 >> 2];
            g[f2 >> 2] = l2;
            h2 = h2 + +g[f2 + 4 >> 2];
            g[f2 + 4 >> 2] = h2;
            o2 = o2 + +g[f2 + 8 >> 2];
            v2 = +N(+ +g[b2 >> 2]);
            u2 = +N(+ +g[b2 + 4 >> 2]);
            w2 = +N(+ +g[b2 + 8 >> 2]);
            r2 = +N(+ +g[b2 + 16 >> 2]);
            q2 = +N(+ +g[b2 + 20 >> 2]);
            s2 = +N(+ +g[b2 + 24 >> 2]);
            m2 = +N(+ +g[b2 + 32 >> 2]);
            j2 = +N(+ +g[b2 + 36 >> 2]);
            n2 = +N(+ +g[b2 + 40 >> 2]);
            x2 = +g[b2 + 48 >> 2];
            t2 = +g[b2 + 52 >> 2];
            p2 = +g[b2 + 56 >> 2];
            g[d2 >> 2] = x2 - (o2 * w2 + (v2 * l2 + u2 * h2));
            g[d2 + 4 >> 2] = t2 - (o2 * s2 + (r2 * l2 + q2 * h2));
            g[d2 + 8 >> 2] = p2 - (o2 * n2 + (m2 * l2 + j2 * h2));
            g[d2 + 12 >> 2] = 0;
            g[e2 >> 2] = x2 + (o2 * w2 + (v2 * l2 + u2 * h2));
            g[e2 + 4 >> 2] = t2 + (o2 * s2 + (r2 * l2 + q2 * h2));
            g[e2 + 8 >> 2] = p2 + (o2 * n2 + (m2 * l2 + j2 * h2));
            g[e2 + 12 >> 2] = 0;
            i = f2;
            return;
          }
          function Fj(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0;
            k2 = +Hb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
            h2 = +Hb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
            d2 = +Hb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
            m2 = (k2 + +g[a2 + 32 >> 2]) / +g[a2 + 16 >> 2];
            j2 = (h2 + +g[a2 + 36 >> 2]) / +g[a2 + 20 >> 2];
            f2 = (d2 + +g[a2 + 40 >> 2]) / +g[a2 + 24 >> 2];
            l2 = +N(+ +g[b2 >> 2]);
            i2 = +N(+ +g[b2 + 4 >> 2]);
            e2 = +N(+ +g[b2 + 8 >> 2]);
            g[a2 + 16 >> 2] = l2;
            g[a2 + 20 >> 2] = i2;
            g[a2 + 24 >> 2] = e2;
            g[a2 + 28 >> 2] = 0;
            g[a2 + 32 >> 2] = m2 * l2 - k2;
            g[a2 + 36 >> 2] = j2 * i2 - h2;
            g[a2 + 40 >> 2] = f2 * e2 - d2;
            g[a2 + 44 >> 2] = 0;
            return;
          }
          function Gj(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = +b2;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0;
            e2 = i;
            i = i + 16 | 0;
            k2 = c[a2 + 56 >> 2] | 0;
            l2 = c[a2 + 32 + (((k2 + 2 | 0) % 3 | 0) << 2) >> 2] | 0;
            c[e2 >> 2] = l2;
            c[e2 + 4 >> 2] = l2;
            c[e2 + 8 >> 2] = l2;
            g[e2 + 12 >> 2] = 0;
            g[e2 + (k2 << 2) >> 2] = +g[a2 + 32 + (k2 << 2) >> 2] + +g[e2 + (k2 << 2) >> 2];
            h2 = (+g[e2 >> 2] + 0.03999999910593033) * 2;
            f2 = (+g[e2 + 4 >> 2] + 0.03999999910593033) * 2;
            j2 = (+g[e2 + 8 >> 2] + 0.03999999910593033) * 2;
            g[d2 >> 2] = b2 * 0.0833333283662796 * (f2 * f2 + j2 * j2);
            g[d2 + 4 >> 2] = b2 * 0.0833333283662796 * (h2 * h2 + j2 * j2);
            g[d2 + 8 >> 2] = b2 * 0.0833333283662796 * (h2 * h2 + f2 * f2);
            i = e2;
            return;
          }
          function Hj(a2) {
            a2 = a2 | 0;
            return 13096;
          }
          function Ij(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c[a2 >> 2] = 0;
            c[a2 + 4 >> 2] = 0;
            c[a2 + 8 >> 2] = 0;
            c[a2 + 12 >> 2] = 0;
            g[a2 + (c[b2 + 56 >> 2] << 2) >> 2] = 1;
            return;
          }
          function Jj(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            var d2 = 0, e2 = 0, f2 = 0, h2 = 0, i2 = 0;
            h2 = +Hb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
            e2 = +Hb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
            i2 = +Hb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
            h2 = h2 + +g[a2 + 32 >> 2];
            e2 = e2 + +g[a2 + 36 >> 2];
            i2 = i2 + +g[a2 + 40 >> 2];
            g[a2 + 48 >> 2] = b2;
            f2 = +Hb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
            d2 = +Hb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
            b2 = i2 - +Hb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
            g[a2 + 32 >> 2] = h2 - f2;
            g[a2 + 36 >> 2] = e2 - d2;
            g[a2 + 40 >> 2] = b2;
            g[a2 + 44 >> 2] = 0;
            return;
          }
          function Kj(a2) {
            a2 = a2 | 0;
            return 60;
          }
          function Lj(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0;
            e2 = Ob[c[(c[d2 >> 2] | 0) + 40 >> 2] & 31](d2, a2) | 0;
            f2 = Ob[c[(c[d2 >> 2] | 0) + 28 >> 2] & 31](d2, e2) | 0;
            c[b2 >> 2] = f2;
            if (f2 | 0)
              tb[c[(c[d2 >> 2] | 0) + 48 >> 2] & 127](d2, e2);
            c[b2 + 4 >> 2] = c[a2 + 4 >> 2];
            c[b2 + 28 >> 2] = c[a2 + 32 >> 2];
            c[b2 + 32 >> 2] = c[a2 + 36 >> 2];
            c[b2 + 36 >> 2] = c[a2 + 40 >> 2];
            c[b2 + 40 >> 2] = c[a2 + 44 >> 2];
            c[b2 + 12 >> 2] = c[a2 + 16 >> 2];
            c[b2 + 16 >> 2] = c[a2 + 20 >> 2];
            c[b2 + 20 >> 2] = c[a2 + 24 >> 2];
            c[b2 + 24 >> 2] = c[a2 + 28 >> 2];
            c[b2 + 44 >> 2] = c[a2 + 48 >> 2];
            c[b2 + 52 >> 2] = c[a2 + 56 >> 2];
            return 13109;
          }
          function Mj(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0;
            q2 = i;
            i = i + 16 | 0;
            c[a2 >> 2] = 0;
            c[a2 + 4 >> 2] = 0;
            c[a2 + 8 >> 2] = 0;
            c[a2 + 12 >> 2] = 0;
            e2 = +g[d2 >> 2];
            f2 = +g[d2 + 4 >> 2];
            h2 = +g[d2 + 8 >> 2];
            if (e2 * e2 + f2 * f2 + h2 * h2 < 9999999747378752e-20) {
              p2 = 1;
              o2 = 0;
              n2 = 0;
            } else {
              n2 = 1 / +O(+(e2 * e2 + f2 * f2 + h2 * h2));
              p2 = e2 * n2;
              o2 = f2 * n2;
              n2 = h2 * n2;
            }
            d2 = c[b2 + 56 >> 2] | 0;
            m2 = +g[b2 + 32 + (((d2 + 2 | 0) % 3 | 0) << 2) >> 2];
            c[q2 >> 2] = 0;
            c[q2 + 4 >> 2] = 0;
            c[q2 + 8 >> 2] = 0;
            c[q2 + 12 >> 2] = 0;
            c[q2 + (d2 << 2) >> 2] = c[b2 + 32 + (d2 << 2) >> 2];
            k2 = p2 * m2;
            l2 = o2 * m2;
            m2 = n2 * m2;
            e2 = k2 + +g[q2 >> 2];
            f2 = l2 + +g[q2 + 4 >> 2];
            j2 = m2 + +g[q2 + 8 >> 2];
            h2 = +Hb[c[(c[b2 >> 2] | 0) + 48 >> 2] & 15](b2);
            e2 = e2 - p2 * h2;
            f2 = f2 - o2 * h2;
            h2 = j2 - n2 * h2;
            j2 = n2 * h2 + (p2 * e2 + o2 * f2);
            if (j2 > -999999984306749400) {
              g[a2 >> 2] = e2;
              g[a2 + 4 >> 2] = f2;
              g[a2 + 8 >> 2] = h2;
              g[a2 + 12 >> 2] = 0;
            } else
              j2 = -999999984306749400;
            c[q2 >> 2] = 0;
            c[q2 + 4 >> 2] = 0;
            c[q2 + 8 >> 2] = 0;
            c[q2 + 12 >> 2] = 0;
            d2 = c[b2 + 56 >> 2] | 0;
            g[q2 + (d2 << 2) >> 2] = -+g[b2 + 32 + (d2 << 2) >> 2];
            e2 = k2 + +g[q2 >> 2];
            f2 = l2 + +g[q2 + 4 >> 2];
            m2 = m2 + +g[q2 + 8 >> 2];
            h2 = +Hb[c[(c[b2 >> 2] | 0) + 48 >> 2] & 15](b2);
            e2 = e2 - p2 * h2;
            f2 = f2 - o2 * h2;
            h2 = m2 - n2 * h2;
            if (!(n2 * h2 + (p2 * e2 + o2 * f2) > j2)) {
              i = q2;
              return;
            }
            g[a2 >> 2] = e2;
            g[a2 + 4 >> 2] = f2;
            g[a2 + 8 >> 2] = h2;
            g[a2 + 12 >> 2] = 0;
            i = q2;
            return;
          }
          function Nj(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0;
            x2 = i;
            i = i + 16 | 0;
            f2 = c[a2 + 56 >> 2] | 0;
            w2 = +g[a2 + 32 + (((f2 + 2 | 0) % 3 | 0) << 2) >> 2];
            if ((e2 | 0) <= 0) {
              i = x2;
              return;
            }
            h2 = 0;
            while (1) {
              c[x2 >> 2] = 0;
              c[x2 + 4 >> 2] = 0;
              c[x2 + 8 >> 2] = 0;
              c[x2 + 12 >> 2] = 0;
              c[x2 + (f2 << 2) >> 2] = c[a2 + 32 + (f2 << 2) >> 2];
              f2 = b2 + (h2 << 4) | 0;
              u2 = b2 + (h2 << 4) + 4 | 0;
              v2 = b2 + (h2 << 4) + 8 | 0;
              j2 = w2 * +g[f2 >> 2] + +g[x2 >> 2];
              k2 = w2 * +g[u2 >> 2] + +g[x2 + 4 >> 2];
              l2 = w2 * +g[v2 >> 2] + +g[x2 + 8 >> 2];
              m2 = +Hb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
              n2 = +g[f2 >> 2];
              o2 = +g[u2 >> 2];
              p2 = +g[v2 >> 2];
              if (n2 * (j2 - m2 * n2) + o2 * (k2 - m2 * o2) + p2 * (l2 - m2 * p2) > -999999984306749400) {
                g[d2 + (h2 << 4) >> 2] = j2 - m2 * n2;
                g[d2 + (h2 << 4) + 4 >> 2] = k2 - m2 * o2;
                g[d2 + (h2 << 4) + 8 >> 2] = l2 - m2 * p2;
                g[d2 + (h2 << 4) + 12 >> 2] = 0;
                q2 = +g[f2 >> 2];
                s2 = +g[u2 >> 2];
                t2 = +g[v2 >> 2];
                r2 = n2 * (j2 - m2 * n2) + o2 * (k2 - m2 * o2) + p2 * (l2 - m2 * p2);
              } else {
                q2 = n2;
                s2 = o2;
                t2 = p2;
                r2 = -999999984306749400;
              }
              ;
              c[x2 >> 2] = 0;
              c[x2 + 4 >> 2] = 0;
              c[x2 + 8 >> 2] = 0;
              c[x2 + 12 >> 2] = 0;
              y2 = c[a2 + 56 >> 2] | 0;
              g[x2 + (y2 << 2) >> 2] = -+g[a2 + 32 + (y2 << 2) >> 2];
              p2 = w2 * q2 + +g[x2 >> 2];
              o2 = w2 * s2 + +g[x2 + 4 >> 2];
              m2 = w2 * t2 + +g[x2 + 8 >> 2];
              n2 = +Hb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
              l2 = +g[f2 >> 2];
              k2 = +g[u2 >> 2];
              j2 = +g[v2 >> 2];
              if (l2 * (p2 - n2 * l2) + k2 * (o2 - n2 * k2) + j2 * (m2 - n2 * j2) > r2) {
                g[d2 + (h2 << 4) >> 2] = p2 - n2 * l2;
                g[d2 + (h2 << 4) + 4 >> 2] = o2 - n2 * k2;
                g[d2 + (h2 << 4) + 8 >> 2] = m2 - n2 * j2;
                g[d2 + (h2 << 4) + 12 >> 2] = 0;
              }
              h2 = h2 + 1 | 0;
              if ((h2 | 0) == (e2 | 0))
                break;
              f2 = c[a2 + 56 >> 2] | 0;
            }
            i = x2;
            return;
          }
          function Oj(a2) {
            a2 = a2 | 0;
            return 0;
          }
          function Pj(a2, b2, c2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            return;
          }
          function Qj(a2) {
            a2 = a2 | 0;
            if (!a2)
              return;
            c[5638] = (c[5638] | 0) + 1;
            rG(c[a2 + -4 >> 2] | 0);
            return;
          }
          function Rj(a2) {
            a2 = a2 | 0;
            return 13146;
          }
          function Sj(a2) {
            a2 = a2 | 0;
            if (!a2)
              return;
            c[5638] = (c[5638] | 0) + 1;
            rG(c[a2 + -4 >> 2] | 0);
            return;
          }
          function Tj(a2) {
            a2 = a2 | 0;
            return 13173;
          }
          function Uj(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0;
            e2 = i;
            i = i + 96 | 0;
            c[e2 + 32 >> 2] = 1065353216;
            c[e2 + 32 + 4 >> 2] = 0;
            c[e2 + 32 + 4 + 4 >> 2] = 0;
            c[e2 + 32 + 4 + 8 >> 2] = 0;
            c[e2 + 32 + 4 + 12 >> 2] = 0;
            c[e2 + 32 + 20 >> 2] = 1065353216;
            c[e2 + 32 + 24 >> 2] = 0;
            c[e2 + 32 + 24 + 4 >> 2] = 0;
            c[e2 + 32 + 24 + 8 >> 2] = 0;
            c[e2 + 32 + 24 + 12 >> 2] = 0;
            c[e2 + 32 + 40 >> 2] = 1065353216;
            n2 = e2 + 32 + 44 | 0;
            c[n2 >> 2] = 0;
            c[n2 + 4 >> 2] = 0;
            c[n2 + 8 >> 2] = 0;
            c[n2 + 12 >> 2] = 0;
            c[n2 + 16 >> 2] = 0;
            bc[c[(c[a2 >> 2] | 0) + 8 >> 2] & 127](a2, e2 + 32 | 0, e2 + 16 | 0, e2);
            l2 = +g[e2 >> 2];
            m2 = +g[e2 + 16 >> 2];
            j2 = +g[e2 + 4 >> 2];
            k2 = +g[e2 + 16 + 4 >> 2];
            f2 = +g[e2 + 8 >> 2];
            h2 = +g[e2 + 16 + 8 >> 2];
            g[d2 >> 2] = +O(+((l2 - m2) * (l2 - m2) + (j2 - k2) * (j2 - k2) + (f2 - h2) * (f2 - h2))) * 0.5;
            g[b2 >> 2] = (m2 + l2) * 0.5;
            g[b2 + 4 >> 2] = (k2 + j2) * 0.5;
            g[b2 + 8 >> 2] = (h2 + f2) * 0.5;
            g[b2 + 12 >> 2] = 0;
            i = e2;
            return;
          }
          function Vj(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0, e2 = 0, f2 = 0;
            b2 = i;
            i = i + 32 | 0;
            Zb[c[(c[a2 >> 2] | 0) + 12 >> 2] & 127](a2, b2 + 8 | 0, b2);
            f2 = +g[b2 + 8 >> 2];
            e2 = +g[b2 + 8 + 4 >> 2];
            d2 = +g[b2 + 8 + 8 >> 2];
            d2 = +O(+(f2 * f2 + e2 * e2 + d2 * d2));
            i = b2;
            return +(d2 + +g[b2 >> 2]);
          }
          function Wj(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            return +(+Hb[c[(c[a2 >> 2] | 0) + 16 >> 2] & 15](a2) * b2);
          }
          function Xj(a2) {
            a2 = a2 | 0;
            return 12;
          }
          function Yj(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0;
            e2 = Ob[c[(c[d2 >> 2] | 0) + 40 >> 2] & 31](d2, a2) | 0;
            f2 = Ob[c[(c[d2 >> 2] | 0) + 28 >> 2] & 31](d2, e2) | 0;
            c[b2 >> 2] = f2;
            if (f2 | 0)
              tb[c[(c[d2 >> 2] | 0) + 48 >> 2] & 127](d2, e2);
            c[b2 + 4 >> 2] = c[a2 + 4 >> 2];
            return 13201;
          }
          function Zj(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0;
            e2 = vb[c[(c[a2 >> 2] | 0) + 52 >> 2] & 127](a2) | 0;
            e2 = Eb[c[(c[b2 >> 2] | 0) + 16 >> 2] & 63](b2, e2, 1) | 0;
            d2 = Eb[c[(c[a2 >> 2] | 0) + 56 >> 2] & 63](a2, c[e2 + 8 >> 2] | 0, b2) | 0;
            pb[c[(c[b2 >> 2] | 0) + 20 >> 2] & 31](b2, e2, d2, 1346455635, a2);
            return;
          }
          function _j(a2, b2, d2, e2, f2, h2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            h2 = h2 | 0;
            var i2 = 0, j2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0;
            bc[c[(c[a2 >> 2] | 0) + 8 >> 2] & 127](a2, b2, f2, h2);
            l2 = c[h2 >> 2] | 0;
            o2 = c[h2 + 4 >> 2] | 0;
            i2 = c[h2 + 8 >> 2] | 0;
            n2 = c[f2 >> 2] | 0;
            j2 = c[f2 + 4 >> 2] | 0;
            b2 = c[f2 + 8 >> 2] | 0;
            m2 = +g[d2 >> 2];
            p2 = +g[d2 + 4 >> 2];
            q2 = +g[d2 + 8 >> 2];
            if (m2 > 0)
              l2 = (g[k >> 2] = (c[k >> 2] = l2, +g[k >> 2]) + m2, c[k >> 2] | 0);
            else
              n2 = (g[k >> 2] = (c[k >> 2] = n2, +g[k >> 2]) + m2, c[k >> 2] | 0);
            if (p2 > 0)
              d2 = (g[k >> 2] = (c[k >> 2] = o2, +g[k >> 2]) + p2, c[k >> 2] | 0);
            else {
              d2 = o2;
              j2 = (g[k >> 2] = (c[k >> 2] = j2, +g[k >> 2]) + p2, c[k >> 2] | 0);
            }
            if (q2 > 0)
              i2 = (g[k >> 2] = (c[k >> 2] = i2, +g[k >> 2]) + q2, c[k >> 2] | 0);
            else
              b2 = (g[k >> 2] = (c[k >> 2] = b2, +g[k >> 2]) + q2, c[k >> 2] | 0);
            m2 = +g[e2 >> 2];
            p2 = +g[e2 + 4 >> 2];
            q2 = +g[e2 + 8 >> 2];
            q2 = +O(+(m2 * m2 + p2 * p2 + q2 * q2));
            q2 = q2 * +Hb[c[(c[a2 >> 2] | 0) + 16 >> 2] & 15](a2);
            c[f2 >> 2] = n2;
            c[f2 + 4 >> 2] = j2;
            c[f2 + 8 >> 2] = b2;
            g[f2 + 12 >> 2] = 0;
            c[h2 >> 2] = l2;
            c[h2 + 4 >> 2] = d2;
            c[h2 + 8 >> 2] = i2;
            g[h2 + 12 >> 2] = 0;
            g[f2 >> 2] = +g[f2 >> 2] - q2;
            g[f2 + 4 >> 2] = +g[f2 + 4 >> 2] - q2;
            g[f2 + 8 >> 2] = +g[f2 + 8 >> 2] - q2;
            g[h2 >> 2] = q2 + +g[h2 >> 2];
            g[h2 + 4 >> 2] = q2 + +g[h2 + 4 >> 2];
            g[h2 + 8 >> 2] = q2 + +g[h2 + 8 >> 2];
            return;
          }
          function $j(b2) {
            b2 = b2 | 0;
            var d2 = 0, e2 = 0;
            c[b2 >> 2] = 5176;
            d2 = c[b2 + 68 >> 2] | 0;
            if (d2 | 0 ? (Zc(d2), e2 = c[b2 + 68 >> 2] | 0, e2 | 0) : 0) {
              c[5638] = (c[5638] | 0) + 1;
              rG(c[e2 + -4 >> 2] | 0);
            }
            d2 = c[b2 + 28 >> 2] | 0;
            if (!d2) {
              a[b2 + 32 >> 0] = 1;
              c[b2 + 28 >> 2] = 0;
              c[b2 + 20 >> 2] = 0;
              b2 = b2 + 24 | 0;
              c[b2 >> 2] = 0;
              return;
            }
            if (a[b2 + 32 >> 0] | 0) {
              c[5638] = (c[5638] | 0) + 1;
              rG(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 28 >> 2] = 0;
            a[b2 + 32 >> 0] = 1;
            c[b2 + 28 >> 2] = 0;
            c[b2 + 20 >> 2] = 0;
            b2 = b2 + 24 | 0;
            c[b2 >> 2] = 0;
            return;
          }
          function ak(a2) {
            a2 = a2 | 0;
            $j(a2);
            if (!a2)
              return;
            c[5638] = (c[5638] | 0) + 1;
            rG(c[a2 + -4 >> 2] | 0);
            return;
          }
          function bk(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0;
            H2 = +g[a2 + 52 >> 2];
            z2 = +g[a2 + 36 >> 2];
            G2 = +g[a2 + 56 >> 2];
            x2 = +g[a2 + 40 >> 2];
            E2 = +g[a2 + 60 >> 2];
            v2 = +g[a2 + 44 >> 2];
            F2 = (c[a2 + 20 >> 2] | 0) == 0;
            m2 = +Hb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
            k2 = +Hb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
            i2 = +Hb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
            m2 = (F2 ? 0 : (H2 - z2) * 0.5) + m2;
            k2 = (F2 ? 0 : (G2 - x2) * 0.5) + k2;
            i2 = (F2 ? 0 : (E2 - v2) * 0.5) + i2;
            D2 = +g[b2 >> 2];
            u2 = +N(+D2);
            C2 = +g[b2 + 4 >> 2];
            t2 = +N(+C2);
            r2 = +g[b2 + 8 >> 2];
            s2 = +N(+r2);
            B2 = +g[b2 + 16 >> 2];
            q2 = +N(+B2);
            A2 = +g[b2 + 20 >> 2];
            p2 = +N(+A2);
            n2 = +g[b2 + 24 >> 2];
            o2 = +N(+n2);
            y2 = +g[b2 + 32 >> 2];
            l2 = +N(+y2);
            w2 = +g[b2 + 36 >> 2];
            j2 = +N(+w2);
            f2 = +g[b2 + 40 >> 2];
            h2 = +N(+f2);
            z2 = F2 ? 0 : (H2 + z2) * 0.5;
            x2 = F2 ? 0 : (G2 + x2) * 0.5;
            v2 = F2 ? 0 : (E2 + v2) * 0.5;
            r2 = z2 * D2 + x2 * C2 + v2 * r2 + +g[b2 + 48 >> 2];
            n2 = z2 * B2 + x2 * A2 + v2 * n2 + +g[b2 + 52 >> 2];
            f2 = z2 * y2 + x2 * w2 + v2 * f2 + +g[b2 + 56 >> 2];
            g[d2 >> 2] = r2 - (m2 * u2 + k2 * t2 + i2 * s2);
            g[d2 + 4 >> 2] = n2 - (m2 * q2 + k2 * p2 + i2 * o2);
            g[d2 + 8 >> 2] = f2 - (m2 * l2 + k2 * j2 + i2 * h2);
            g[d2 + 12 >> 2] = 0;
            g[e2 >> 2] = m2 * u2 + k2 * t2 + i2 * s2 + r2;
            g[e2 + 4 >> 2] = m2 * q2 + k2 * p2 + i2 * o2 + n2;
            g[e2 + 8 >> 2] = m2 * l2 + k2 * j2 + i2 * h2 + f2;
            g[e2 + 12 >> 2] = 0;
            return;
          }
          function ck(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0;
            p2 = i;
            i = i + 144 | 0;
            if ((c[a2 + 20 >> 2] | 0) <= 0) {
              o2 = a2 + 80 | 0;
              c[o2 >> 2] = c[b2 >> 2];
              c[o2 + 4 >> 2] = c[b2 + 4 >> 2];
              c[o2 + 8 >> 2] = c[b2 + 8 >> 2];
              c[o2 + 12 >> 2] = c[b2 + 12 >> 2];
              b2 = c[a2 >> 2] | 0;
              b2 = b2 + 68 | 0;
              b2 = c[b2 >> 2] | 0;
              rb[b2 & 255](a2);
              i = p2;
              return;
            }
            j2 = p2 + 16 + 16 | 0;
            k2 = p2 + 16 + 32 | 0;
            l2 = p2 + 16 + 48 | 0;
            o2 = 0;
            do {
              n2 = c[a2 + 28 >> 2] | 0;
              m2 = n2 + (o2 * 80 | 0) | 0;
              c[p2 + 16 >> 2] = c[m2 >> 2];
              c[p2 + 16 + 4 >> 2] = c[m2 + 4 >> 2];
              c[p2 + 16 + 8 >> 2] = c[m2 + 8 >> 2];
              c[p2 + 16 + 12 >> 2] = c[m2 + 12 >> 2];
              m2 = n2 + (o2 * 80 | 0) + 16 | 0;
              c[j2 >> 2] = c[m2 >> 2];
              c[j2 + 4 >> 2] = c[m2 + 4 >> 2];
              c[j2 + 8 >> 2] = c[m2 + 8 >> 2];
              c[j2 + 12 >> 2] = c[m2 + 12 >> 2];
              m2 = n2 + (o2 * 80 | 0) + 32 | 0;
              c[k2 >> 2] = c[m2 >> 2];
              c[k2 + 4 >> 2] = c[m2 + 4 >> 2];
              c[k2 + 8 >> 2] = c[m2 + 8 >> 2];
              c[k2 + 12 >> 2] = c[m2 + 12 >> 2];
              m2 = n2 + (o2 * 80 | 0) + 48 | 0;
              c[l2 >> 2] = c[m2 >> 2];
              c[l2 + 4 >> 2] = c[m2 + 4 >> 2];
              c[l2 + 8 >> 2] = c[m2 + 8 >> 2];
              c[l2 + 12 >> 2] = c[m2 + 12 >> 2];
              n2 = c[n2 + (o2 * 80 | 0) + 64 >> 2] | 0;
              n2 = vb[c[(c[n2 >> 2] | 0) + 28 >> 2] & 127](n2) | 0;
              c[p2 >> 2] = c[n2 >> 2];
              c[p2 + 4 >> 2] = c[n2 + 4 >> 2];
              c[p2 + 8 >> 2] = c[n2 + 8 >> 2];
              q2 = +g[p2 + 4 >> 2] * +g[b2 + 4 >> 2] / +g[a2 + 84 >> 2];
              r2 = +g[p2 + 8 >> 2] * +g[b2 + 8 >> 2] / +g[a2 + 88 >> 2];
              g[p2 >> 2] = +g[p2 >> 2] * +g[b2 >> 2] / +g[a2 + 80 >> 2];
              g[p2 + 4 >> 2] = q2;
              g[p2 + 8 >> 2] = r2;
              g[p2 + 12 >> 2] = 0;
              n2 = c[(c[a2 + 28 >> 2] | 0) + (o2 * 80 | 0) + 64 >> 2] | 0;
              tb[c[(c[n2 >> 2] | 0) + 24 >> 2] & 127](n2, p2);
              r2 = +g[p2 + 16 + 52 >> 2] * +g[b2 + 4 >> 2] / +g[a2 + 84 >> 2];
              q2 = +g[p2 + 16 + 56 >> 2] * +g[b2 + 8 >> 2] / +g[a2 + 88 >> 2];
              g[p2 + 16 + 48 >> 2] = +g[l2 >> 2] * +g[b2 >> 2] / +g[a2 + 80 >> 2];
              g[p2 + 16 + 52 >> 2] = r2;
              g[p2 + 16 + 56 >> 2] = q2;
              g[p2 + 16 + 60 >> 2] = 0;
              n2 = c[a2 + 28 >> 2] | 0;
              m2 = n2 + (o2 * 80 | 0) | 0;
              c[m2 >> 2] = c[p2 + 16 >> 2];
              c[m2 + 4 >> 2] = c[p2 + 16 + 4 >> 2];
              c[m2 + 8 >> 2] = c[p2 + 16 + 8 >> 2];
              c[m2 + 12 >> 2] = c[p2 + 16 + 12 >> 2];
              m2 = n2 + (o2 * 80 | 0) + 16 | 0;
              c[m2 >> 2] = c[j2 >> 2];
              c[m2 + 4 >> 2] = c[j2 + 4 >> 2];
              c[m2 + 8 >> 2] = c[j2 + 8 >> 2];
              c[m2 + 12 >> 2] = c[j2 + 12 >> 2];
              m2 = n2 + (o2 * 80 | 0) + 32 | 0;
              c[m2 >> 2] = c[k2 >> 2];
              c[m2 + 4 >> 2] = c[k2 + 4 >> 2];
              c[m2 + 8 >> 2] = c[k2 + 8 >> 2];
              c[m2 + 12 >> 2] = c[k2 + 12 >> 2];
              n2 = n2 + (o2 * 80 | 0) + 48 | 0;
              c[n2 >> 2] = c[l2 >> 2];
              c[n2 + 4 >> 2] = c[l2 + 4 >> 2];
              c[n2 + 8 >> 2] = c[l2 + 8 >> 2];
              c[n2 + 12 >> 2] = c[l2 + 12 >> 2];
              if (c[a2 + 68 >> 2] | 0) {
                m2 = c[(c[a2 + 28 >> 2] | 0) + (o2 * 80 | 0) + 64 >> 2] | 0;
                bc[c[(c[m2 >> 2] | 0) + 8 >> 2] & 127](m2, p2 + 16 | 0, p2 + 128 | 0, p2 + 112 | 0);
                c[p2 + 80 >> 2] = c[p2 + 128 >> 2];
                c[p2 + 80 + 4 >> 2] = c[p2 + 128 + 4 >> 2];
                c[p2 + 80 + 8 >> 2] = c[p2 + 128 + 8 >> 2];
                c[p2 + 80 + 12 >> 2] = c[p2 + 128 + 12 >> 2];
                c[p2 + 80 + 16 >> 2] = c[p2 + 112 >> 2];
                c[p2 + 80 + 16 + 4 >> 2] = c[p2 + 112 + 4 >> 2];
                c[p2 + 80 + 16 + 8 >> 2] = c[p2 + 112 + 8 >> 2];
                c[p2 + 80 + 16 + 12 >> 2] = c[p2 + 112 + 12 >> 2];
                m2 = c[a2 + 68 >> 2] | 0;
                n2 = c[(c[a2 + 28 >> 2] | 0) + (o2 * 80 | 0) + 76 >> 2] | 0;
                d2 = ad(m2, n2) | 0;
                a:
                  do
                    if (d2) {
                      f2 = c[m2 + 8 >> 2] | 0;
                      if ((f2 | 0) <= -1) {
                        d2 = c[m2 >> 2] | 0;
                        break;
                      }
                      if ((f2 | 0) > 0) {
                        h2 = 0;
                        while (1) {
                          e2 = c[d2 + 32 >> 2] | 0;
                          h2 = h2 + 1 | 0;
                          if (!e2)
                            break a;
                          if ((h2 | 0) >= (f2 | 0)) {
                            d2 = e2;
                            break;
                          } else
                            d2 = e2;
                        }
                      }
                    } else
                      d2 = 0;
                  while (0);
                c[n2 >> 2] = c[p2 + 80 >> 2];
                c[n2 + 4 >> 2] = c[p2 + 80 + 4 >> 2];
                c[n2 + 8 >> 2] = c[p2 + 80 + 8 >> 2];
                c[n2 + 12 >> 2] = c[p2 + 80 + 12 >> 2];
                c[n2 + 16 >> 2] = c[p2 + 80 + 16 >> 2];
                c[n2 + 20 >> 2] = c[p2 + 80 + 20 >> 2];
                c[n2 + 24 >> 2] = c[p2 + 80 + 24 >> 2];
                c[n2 + 28 >> 2] = c[p2 + 80 + 28 >> 2];
                bd(m2, d2, n2);
              }
              o2 = o2 + 1 | 0;
            } while ((o2 | 0) < (c[a2 + 20 >> 2] | 0));
            o2 = a2 + 80 | 0;
            c[o2 >> 2] = c[b2 >> 2];
            c[o2 + 4 >> 2] = c[b2 + 4 >> 2];
            c[o2 + 8 >> 2] = c[b2 + 8 >> 2];
            c[o2 + 12 >> 2] = c[b2 + 12 >> 2];
            b2 = c[a2 >> 2] | 0;
            b2 = b2 + 68 | 0;
            b2 = c[b2 >> 2] | 0;
            rb[b2 & 255](a2);
            i = p2;
            return;
          }
          function dk(a2) {
            a2 = a2 | 0;
            return a2 + 80 | 0;
          }
          function ek(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = +b2;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, h2 = 0, j2 = 0, k2 = 0;
            e2 = i;
            i = i + 96 | 0;
            c[e2 + 32 >> 2] = 1065353216;
            c[e2 + 32 + 4 >> 2] = 0;
            c[e2 + 32 + 4 + 4 >> 2] = 0;
            c[e2 + 32 + 4 + 8 >> 2] = 0;
            c[e2 + 32 + 4 + 12 >> 2] = 0;
            c[e2 + 32 + 20 >> 2] = 1065353216;
            c[e2 + 32 + 24 >> 2] = 0;
            c[e2 + 32 + 24 + 4 >> 2] = 0;
            c[e2 + 32 + 24 + 8 >> 2] = 0;
            c[e2 + 32 + 24 + 12 >> 2] = 0;
            c[e2 + 32 + 40 >> 2] = 1065353216;
            k2 = e2 + 32 + 44 | 0;
            c[k2 >> 2] = 0;
            c[k2 + 4 >> 2] = 0;
            c[k2 + 8 >> 2] = 0;
            c[k2 + 12 >> 2] = 0;
            c[k2 + 16 >> 2] = 0;
            bc[c[(c[a2 >> 2] | 0) + 8 >> 2] & 127](a2, e2 + 32 | 0, e2 + 16 | 0, e2);
            h2 = (+g[e2 >> 2] - +g[e2 + 16 >> 2]) * 0.5 * 2;
            f2 = (+g[e2 + 4 >> 2] - +g[e2 + 16 + 4 >> 2]) * 0.5 * 2;
            j2 = (+g[e2 + 8 >> 2] - +g[e2 + 16 + 8 >> 2]) * 0.5 * 2;
            g[d2 >> 2] = b2 / 12 * (f2 * f2 + j2 * j2);
            g[d2 + 4 >> 2] = b2 / 12 * (h2 * h2 + j2 * j2);
            g[d2 + 8 >> 2] = b2 / 12 * (h2 * h2 + f2 * f2);
            i = e2;
            return;
          }
          function fk(a2) {
            a2 = a2 | 0;
            return 13240;
          }
          function gk(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            g[a2 + 76 >> 2] = b2;
            return;
          }
          function hk(a2) {
            a2 = a2 | 0;
            return + +g[a2 + 76 >> 2];
          }
          function ik(a2) {
            a2 = a2 | 0;
            return 24;
          }
          function jk(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0, i2 = 0;
            e2 = Ob[c[(c[d2 >> 2] | 0) + 40 >> 2] & 31](d2, a2) | 0;
            g2 = Ob[c[(c[d2 >> 2] | 0) + 28 >> 2] & 31](d2, e2) | 0;
            c[b2 >> 2] = g2;
            if (g2 | 0)
              tb[c[(c[d2 >> 2] | 0) + 48 >> 2] & 127](d2, e2);
            c[b2 + 4 >> 2] = c[a2 + 4 >> 2];
            c[b2 + 20 >> 2] = c[a2 + 76 >> 2];
            e2 = c[a2 + 20 >> 2] | 0;
            c[b2 + 16 >> 2] = e2;
            c[b2 + 12 >> 2] = 0;
            if (!e2)
              return 13274;
            g2 = Eb[c[(c[d2 >> 2] | 0) + 16 >> 2] & 63](d2, 76, e2) | 0;
            e2 = c[g2 + 8 >> 2] | 0;
            c[b2 + 12 >> 2] = Ob[c[(c[d2 >> 2] | 0) + 28 >> 2] & 31](d2, e2) | 0;
            if ((c[b2 + 16 >> 2] | 0) > 0) {
              f2 = 0;
              while (1) {
                h2 = c[a2 + 28 >> 2] | 0;
                c[e2 + 72 >> 2] = c[h2 + (f2 * 80 | 0) + 72 >> 2];
                c[e2 + 64 >> 2] = Ob[c[(c[d2 >> 2] | 0) + 28 >> 2] & 31](d2, c[h2 + (f2 * 80 | 0) + 64 >> 2] | 0) | 0;
                if (!(Ob[c[(c[d2 >> 2] | 0) + 24 >> 2] & 31](d2, c[(c[a2 + 28 >> 2] | 0) + (f2 * 80 | 0) + 64 >> 2] | 0) | 0)) {
                  h2 = c[(c[d2 >> 2] | 0) + 16 >> 2] | 0;
                  i2 = c[(c[a2 + 28 >> 2] | 0) + (f2 * 80 | 0) + 64 >> 2] | 0;
                  i2 = vb[c[(c[i2 >> 2] | 0) + 52 >> 2] & 127](i2) | 0;
                  i2 = Eb[h2 & 63](d2, i2, 1) | 0;
                  h2 = c[(c[a2 + 28 >> 2] | 0) + (f2 * 80 | 0) + 64 >> 2] | 0;
                  h2 = Eb[c[(c[h2 >> 2] | 0) + 56 >> 2] & 63](h2, c[i2 + 8 >> 2] | 0, d2) | 0;
                  pb[c[(c[d2 >> 2] | 0) + 20 >> 2] & 31](d2, i2, h2, 1346455635, c[(c[a2 + 28 >> 2] | 0) + (f2 * 80 | 0) + 64 >> 2] | 0);
                }
                i2 = c[a2 + 28 >> 2] | 0;
                c[e2 + 68 >> 2] = c[i2 + (f2 * 80 | 0) + 68 >> 2];
                c[e2 >> 2] = c[i2 + (f2 * 80 | 0) >> 2];
                c[e2 + 4 >> 2] = c[i2 + (f2 * 80 | 0) + 4 >> 2];
                c[e2 + 8 >> 2] = c[i2 + (f2 * 80 | 0) + 8 >> 2];
                c[e2 + 12 >> 2] = c[i2 + (f2 * 80 | 0) + 12 >> 2];
                c[e2 + 16 >> 2] = c[i2 + (f2 * 80 | 0) + 16 >> 2];
                c[e2 + 20 >> 2] = c[i2 + (f2 * 80 | 0) + 20 >> 2];
                c[e2 + 24 >> 2] = c[i2 + (f2 * 80 | 0) + 24 >> 2];
                c[e2 + 28 >> 2] = c[i2 + (f2 * 80 | 0) + 28 >> 2];
                c[e2 + 32 >> 2] = c[i2 + (f2 * 80 | 0) + 32 >> 2];
                c[e2 + 36 >> 2] = c[i2 + (f2 * 80 | 0) + 36 >> 2];
                c[e2 + 40 >> 2] = c[i2 + (f2 * 80 | 0) + 40 >> 2];
                c[e2 + 44 >> 2] = c[i2 + (f2 * 80 | 0) + 44 >> 2];
                c[e2 + 48 >> 2] = c[i2 + (f2 * 80 | 0) + 48 >> 2];
                c[e2 + 52 >> 2] = c[i2 + (f2 * 80 | 0) + 52 >> 2];
                c[e2 + 56 >> 2] = c[i2 + (f2 * 80 | 0) + 56 >> 2];
                c[e2 + 60 >> 2] = c[i2 + (f2 * 80 | 0) + 60 >> 2];
                f2 = f2 + 1 | 0;
                if ((f2 | 0) >= (c[b2 + 16 >> 2] | 0)) {
                  e2 = d2;
                  break;
                } else
                  e2 = e2 + 76 | 0;
              }
            } else
              e2 = d2;
            pb[c[(c[e2 >> 2] | 0) + 20 >> 2] & 31](d2, g2, 13249, 1497453121, c[g2 + 8 >> 2] | 0);
            return 13274;
          }
          function kk(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0;
            c[a2 + 72 >> 2] = (c[a2 + 72 >> 2] | 0) + 1;
            d2 = c[a2 + 20 >> 2] | 0;
            if ((d2 | 0) > 0)
              do {
                e2 = d2;
                d2 = d2 + -1 | 0;
                if ((c[(c[a2 + 28 >> 2] | 0) + (d2 * 80 | 0) + 64 >> 2] | 0) == (b2 | 0))
                  lk(a2, d2);
              } while ((e2 | 0) > 1);
            rb[c[(c[a2 >> 2] | 0) + 68 >> 2] & 255](a2);
            return;
          }
          function lk(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, g2 = 0;
            g2 = i;
            i = i + 80 | 0;
            c[a2 + 72 >> 2] = (c[a2 + 72 >> 2] | 0) + 1;
            e2 = c[a2 + 68 >> 2] | 0;
            if (e2 | 0) {
              f2 = c[(c[a2 + 28 >> 2] | 0) + (b2 * 80 | 0) + 76 >> 2] | 0;
              ad(e2, f2) | 0;
              d2 = c[e2 + 4 >> 2] | 0;
              if (d2 | 0) {
                c[5638] = (c[5638] | 0) + 1;
                rG(c[d2 + -4 >> 2] | 0);
              }
              c[e2 + 4 >> 2] = f2;
              c[e2 + 12 >> 2] = (c[e2 + 12 >> 2] | 0) + -1;
            }
            f2 = (c[a2 + 20 >> 2] | 0) + -1 | 0;
            e2 = c[a2 + 28 >> 2] | 0;
            c[g2 >> 2] = c[e2 + (b2 * 80 | 0) >> 2];
            c[g2 + 4 >> 2] = c[e2 + (b2 * 80 | 0) + 4 >> 2];
            c[g2 + 8 >> 2] = c[e2 + (b2 * 80 | 0) + 8 >> 2];
            c[g2 + 12 >> 2] = c[e2 + (b2 * 80 | 0) + 12 >> 2];
            c[g2 + 16 >> 2] = c[e2 + (b2 * 80 | 0) + 16 >> 2];
            c[g2 + 16 + 4 >> 2] = c[e2 + (b2 * 80 | 0) + 16 + 4 >> 2];
            c[g2 + 16 + 8 >> 2] = c[e2 + (b2 * 80 | 0) + 16 + 8 >> 2];
            c[g2 + 16 + 12 >> 2] = c[e2 + (b2 * 80 | 0) + 16 + 12 >> 2];
            c[g2 + 32 >> 2] = c[e2 + (b2 * 80 | 0) + 32 >> 2];
            c[g2 + 32 + 4 >> 2] = c[e2 + (b2 * 80 | 0) + 32 + 4 >> 2];
            c[g2 + 32 + 8 >> 2] = c[e2 + (b2 * 80 | 0) + 32 + 8 >> 2];
            c[g2 + 32 + 12 >> 2] = c[e2 + (b2 * 80 | 0) + 32 + 12 >> 2];
            c[g2 + 48 >> 2] = c[e2 + (b2 * 80 | 0) + 48 >> 2];
            c[g2 + 48 + 4 >> 2] = c[e2 + (b2 * 80 | 0) + 48 + 4 >> 2];
            c[g2 + 48 + 8 >> 2] = c[e2 + (b2 * 80 | 0) + 48 + 8 >> 2];
            c[g2 + 48 + 12 >> 2] = c[e2 + (b2 * 80 | 0) + 48 + 12 >> 2];
            c[g2 + 64 >> 2] = c[e2 + (b2 * 80 | 0) + 64 >> 2];
            c[g2 + 64 + 4 >> 2] = c[e2 + (b2 * 80 | 0) + 64 + 4 >> 2];
            c[g2 + 64 + 8 >> 2] = c[e2 + (b2 * 80 | 0) + 64 + 8 >> 2];
            c[g2 + 64 + 12 >> 2] = c[e2 + (b2 * 80 | 0) + 64 + 12 >> 2];
            c[e2 + (b2 * 80 | 0) >> 2] = c[e2 + (f2 * 80 | 0) >> 2];
            c[e2 + (b2 * 80 | 0) + 4 >> 2] = c[e2 + (f2 * 80 | 0) + 4 >> 2];
            c[e2 + (b2 * 80 | 0) + 8 >> 2] = c[e2 + (f2 * 80 | 0) + 8 >> 2];
            c[e2 + (b2 * 80 | 0) + 12 >> 2] = c[e2 + (f2 * 80 | 0) + 12 >> 2];
            c[e2 + (b2 * 80 | 0) + 16 >> 2] = c[e2 + (f2 * 80 | 0) + 16 >> 2];
            c[e2 + (b2 * 80 | 0) + 16 + 4 >> 2] = c[e2 + (f2 * 80 | 0) + 16 + 4 >> 2];
            c[e2 + (b2 * 80 | 0) + 16 + 8 >> 2] = c[e2 + (f2 * 80 | 0) + 16 + 8 >> 2];
            c[e2 + (b2 * 80 | 0) + 16 + 12 >> 2] = c[e2 + (f2 * 80 | 0) + 16 + 12 >> 2];
            c[e2 + (b2 * 80 | 0) + 32 >> 2] = c[e2 + (f2 * 80 | 0) + 32 >> 2];
            c[e2 + (b2 * 80 | 0) + 32 + 4 >> 2] = c[e2 + (f2 * 80 | 0) + 32 + 4 >> 2];
            c[e2 + (b2 * 80 | 0) + 32 + 8 >> 2] = c[e2 + (f2 * 80 | 0) + 32 + 8 >> 2];
            c[e2 + (b2 * 80 | 0) + 32 + 12 >> 2] = c[e2 + (f2 * 80 | 0) + 32 + 12 >> 2];
            c[e2 + (b2 * 80 | 0) + 48 >> 2] = c[e2 + (f2 * 80 | 0) + 48 >> 2];
            c[e2 + (b2 * 80 | 0) + 48 + 4 >> 2] = c[e2 + (f2 * 80 | 0) + 48 + 4 >> 2];
            c[e2 + (b2 * 80 | 0) + 48 + 8 >> 2] = c[e2 + (f2 * 80 | 0) + 48 + 8 >> 2];
            c[e2 + (b2 * 80 | 0) + 48 + 12 >> 2] = c[e2 + (f2 * 80 | 0) + 48 + 12 >> 2];
            c[e2 + (b2 * 80 | 0) + 64 >> 2] = c[e2 + (f2 * 80 | 0) + 64 >> 2];
            c[e2 + (b2 * 80 | 0) + 64 + 4 >> 2] = c[e2 + (f2 * 80 | 0) + 64 + 4 >> 2];
            c[e2 + (b2 * 80 | 0) + 64 + 8 >> 2] = c[e2 + (f2 * 80 | 0) + 64 + 8 >> 2];
            c[e2 + (b2 * 80 | 0) + 64 + 12 >> 2] = c[e2 + (f2 * 80 | 0) + 64 + 12 >> 2];
            e2 = c[a2 + 28 >> 2] | 0;
            c[e2 + (f2 * 80 | 0) >> 2] = c[g2 >> 2];
            c[e2 + (f2 * 80 | 0) + 4 >> 2] = c[g2 + 4 >> 2];
            c[e2 + (f2 * 80 | 0) + 8 >> 2] = c[g2 + 8 >> 2];
            c[e2 + (f2 * 80 | 0) + 12 >> 2] = c[g2 + 12 >> 2];
            c[e2 + (f2 * 80 | 0) + 16 >> 2] = c[g2 + 16 >> 2];
            c[e2 + (f2 * 80 | 0) + 16 + 4 >> 2] = c[g2 + 16 + 4 >> 2];
            c[e2 + (f2 * 80 | 0) + 16 + 8 >> 2] = c[g2 + 16 + 8 >> 2];
            c[e2 + (f2 * 80 | 0) + 16 + 12 >> 2] = c[g2 + 16 + 12 >> 2];
            c[e2 + (f2 * 80 | 0) + 32 >> 2] = c[g2 + 32 >> 2];
            c[e2 + (f2 * 80 | 0) + 32 + 4 >> 2] = c[g2 + 32 + 4 >> 2];
            c[e2 + (f2 * 80 | 0) + 32 + 8 >> 2] = c[g2 + 32 + 8 >> 2];
            c[e2 + (f2 * 80 | 0) + 32 + 12 >> 2] = c[g2 + 32 + 12 >> 2];
            c[e2 + (f2 * 80 | 0) + 48 >> 2] = c[g2 + 48 >> 2];
            c[e2 + (f2 * 80 | 0) + 48 + 4 >> 2] = c[g2 + 48 + 4 >> 2];
            c[e2 + (f2 * 80 | 0) + 48 + 8 >> 2] = c[g2 + 48 + 8 >> 2];
            c[e2 + (f2 * 80 | 0) + 48 + 12 >> 2] = c[g2 + 48 + 12 >> 2];
            c[e2 + (f2 * 80 | 0) + 64 >> 2] = c[g2 + 64 >> 2];
            c[e2 + (f2 * 80 | 0) + 64 + 4 >> 2] = c[g2 + 64 + 4 >> 2];
            c[e2 + (f2 * 80 | 0) + 64 + 8 >> 2] = c[g2 + 64 + 8 >> 2];
            c[e2 + (f2 * 80 | 0) + 64 + 12 >> 2] = c[g2 + 64 + 12 >> 2];
            if (!(c[a2 + 68 >> 2] | 0)) {
              b2 = c[a2 + 20 >> 2] | 0;
              b2 = b2 + -1 | 0;
              c[a2 + 20 >> 2] = b2;
              i = g2;
              return;
            }
            c[(c[(c[a2 + 28 >> 2] | 0) + (b2 * 80 | 0) + 76 >> 2] | 0) + 36 >> 2] = b2;
            b2 = c[a2 + 20 >> 2] | 0;
            b2 = b2 + -1 | 0;
            c[a2 + 20 >> 2] = b2;
            i = g2;
            return;
          }
          function mk(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0, e2 = 0, f2 = 0, h2 = 0;
            e2 = i;
            i = i + 32 | 0;
            c[a2 + 36 >> 2] = 1566444395;
            c[a2 + 40 >> 2] = 1566444395;
            c[a2 + 44 >> 2] = 1566444395;
            g[a2 + 48 >> 2] = 0;
            c[a2 + 52 >> 2] = -581039253;
            c[a2 + 56 >> 2] = -581039253;
            c[a2 + 60 >> 2] = -581039253;
            g[a2 + 64 >> 2] = 0;
            if ((c[a2 + 20 >> 2] | 0) <= 0) {
              i = e2;
              return;
            }
            d2 = 0;
            do {
              f2 = c[a2 + 28 >> 2] | 0;
              h2 = c[f2 + (d2 * 80 | 0) + 64 >> 2] | 0;
              bc[c[(c[h2 >> 2] | 0) + 8 >> 2] & 127](h2, f2 + (d2 * 80 | 0) | 0, e2 + 16 | 0, e2);
              b2 = +g[e2 + 16 >> 2];
              if (+g[a2 + 36 >> 2] > b2)
                g[a2 + 36 >> 2] = b2;
              b2 = +g[e2 >> 2];
              if (+g[a2 + 52 >> 2] < b2)
                g[a2 + 52 >> 2] = b2;
              b2 = +g[e2 + 16 + 4 >> 2];
              if (+g[a2 + 40 >> 2] > b2)
                g[a2 + 40 >> 2] = b2;
              b2 = +g[e2 + 4 >> 2];
              if (+g[a2 + 56 >> 2] < b2)
                g[a2 + 56 >> 2] = b2;
              b2 = +g[e2 + 16 + 8 >> 2];
              if (+g[a2 + 44 >> 2] > b2)
                g[a2 + 44 >> 2] = b2;
              b2 = +g[e2 + 8 >> 2];
              if (+g[a2 + 60 >> 2] < b2)
                g[a2 + 60 >> 2] = b2;
              d2 = d2 + 1 | 0;
            } while ((d2 | 0) < (c[a2 + 20 >> 2] | 0));
            i = e2;
            return;
          }
          function nk(b2, d2, e2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0;
            c[b2 + 8 >> 2] = 0;
            c[b2 + 12 >> 2] = -1;
            c[b2 >> 2] = 5176;
            a[b2 + 32 >> 0] = 1;
            c[b2 + 28 >> 2] = 0;
            c[b2 + 20 >> 2] = 0;
            c[b2 + 24 >> 2] = 0;
            c[b2 + 36 >> 2] = 1566444395;
            c[b2 + 40 >> 2] = 1566444395;
            c[b2 + 44 >> 2] = 1566444395;
            g[b2 + 48 >> 2] = 0;
            c[b2 + 52 >> 2] = -581039253;
            c[b2 + 56 >> 2] = -581039253;
            c[b2 + 60 >> 2] = -581039253;
            g[b2 + 64 >> 2] = 0;
            c[b2 + 68 >> 2] = 0;
            c[b2 + 72 >> 2] = 1;
            g[b2 + 76 >> 2] = 0;
            c[b2 + 80 >> 2] = 1065353216;
            c[b2 + 84 >> 2] = 1065353216;
            c[b2 + 88 >> 2] = 1065353216;
            g[b2 + 92 >> 2] = 0;
            c[b2 + 4 >> 2] = 31;
            if (d2) {
              c[5637] = (c[5637] | 0) + 1;
              d2 = qG(79) | 0;
              if (!d2)
                d2 = 0;
              else {
                c[(d2 + 4 + 15 & -16) + -4 >> 2] = d2;
                d2 = d2 + 4 + 15 & -16;
              }
              a[d2 + 36 >> 0] = 1;
              c[d2 + 32 >> 2] = 0;
              c[d2 + 24 >> 2] = 0;
              c[d2 + 28 >> 2] = 0;
              a[d2 + 56 >> 0] = 1;
              c[d2 + 52 >> 2] = 0;
              c[d2 + 44 >> 2] = 0;
              c[d2 + 48 >> 2] = 0;
              c[d2 >> 2] = 0;
              c[d2 + 4 >> 2] = 0;
              c[d2 + 8 >> 2] = -1;
              c[d2 + 12 >> 2] = 0;
              c[d2 + 16 >> 2] = 0;
              c[b2 + 68 >> 2] = d2;
              d2 = c[b2 + 24 >> 2] | 0;
            } else
              d2 = 0;
            if ((d2 | 0) >= (e2 | 0))
              return;
            if ((e2 | 0) != 0 ? (c[5637] = (c[5637] | 0) + 1, f2 = qG((e2 * 80 | 3) + 16 | 0) | 0, (f2 | 0) != 0) : 0) {
              c[(f2 + 4 + 15 & -16) + -4 >> 2] = f2;
              h2 = f2 + 4 + 15 & -16;
            } else
              h2 = 0;
            d2 = c[b2 + 20 >> 2] | 0;
            if ((d2 | 0) > 0) {
              f2 = 0;
              do {
                i2 = h2 + (f2 * 80 | 0) | 0;
                j2 = c[b2 + 28 >> 2] | 0;
                k2 = j2 + (f2 * 80 | 0) | 0;
                c[i2 >> 2] = c[k2 >> 2];
                c[i2 + 4 >> 2] = c[k2 + 4 >> 2];
                c[i2 + 8 >> 2] = c[k2 + 8 >> 2];
                c[i2 + 12 >> 2] = c[k2 + 12 >> 2];
                i2 = h2 + (f2 * 80 | 0) + 16 | 0;
                k2 = j2 + (f2 * 80 | 0) + 16 | 0;
                c[i2 >> 2] = c[k2 >> 2];
                c[i2 + 4 >> 2] = c[k2 + 4 >> 2];
                c[i2 + 8 >> 2] = c[k2 + 8 >> 2];
                c[i2 + 12 >> 2] = c[k2 + 12 >> 2];
                i2 = h2 + (f2 * 80 | 0) + 32 | 0;
                k2 = j2 + (f2 * 80 | 0) + 32 | 0;
                c[i2 >> 2] = c[k2 >> 2];
                c[i2 + 4 >> 2] = c[k2 + 4 >> 2];
                c[i2 + 8 >> 2] = c[k2 + 8 >> 2];
                c[i2 + 12 >> 2] = c[k2 + 12 >> 2];
                i2 = h2 + (f2 * 80 | 0) + 48 | 0;
                k2 = j2 + (f2 * 80 | 0) + 48 | 0;
                c[i2 >> 2] = c[k2 >> 2];
                c[i2 + 4 >> 2] = c[k2 + 4 >> 2];
                c[i2 + 8 >> 2] = c[k2 + 8 >> 2];
                c[i2 + 12 >> 2] = c[k2 + 12 >> 2];
                i2 = h2 + (f2 * 80 | 0) + 64 | 0;
                j2 = j2 + (f2 * 80 | 0) + 64 | 0;
                c[i2 >> 2] = c[j2 >> 2];
                c[i2 + 4 >> 2] = c[j2 + 4 >> 2];
                c[i2 + 8 >> 2] = c[j2 + 8 >> 2];
                c[i2 + 12 >> 2] = c[j2 + 12 >> 2];
                f2 = f2 + 1 | 0;
              } while ((f2 | 0) != (d2 | 0));
            }
            d2 = c[b2 + 28 >> 2] | 0;
            if (d2 | 0) {
              if (a[b2 + 32 >> 0] | 0) {
                c[5638] = (c[5638] | 0) + 1;
                rG(c[d2 + -4 >> 2] | 0);
              }
              c[b2 + 28 >> 2] = 0;
            }
            a[b2 + 32 >> 0] = 1;
            c[b2 + 28 >> 2] = h2;
            c[b2 + 24 >> 2] = e2;
            return;
          }
          function ok(a2) {
            a2 = a2 | 0;
            if (!a2)
              return;
            c[5638] = (c[5638] | 0) + 1;
            rG(c[a2 + -4 >> 2] | 0);
            return;
          }
          function pk(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            bc[c[(c[a2 >> 2] | 0) + 80 >> 2] & 127](a2, b2, d2, e2);
            return;
          }
          function qk(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0;
            j2 = c[a2 + 72 >> 2] | 0;
            i2 = c[a2 + 68 >> 2] | 0;
            h2 = c[a2 + 76 >> 2] | 0;
            e2 = +g[a2 + 64 >> 2] * (+g[b2 + (j2 << 2) >> 2] / +g[a2 + 16 + (j2 << 2) >> 2]);
            g[a2 + 64 >> 2] = e2;
            f2 = +g[a2 + 60 >> 2] * ((+g[b2 + (i2 << 2) >> 2] / +g[a2 + 16 + (i2 << 2) >> 2] + +g[b2 + (h2 << 2) >> 2] / +g[a2 + 16 + (h2 << 2) >> 2]) * 0.5);
            g[a2 + 60 >> 2] = f2;
            g[a2 + 56 >> 2] = f2 / +O(+(e2 * e2 + f2 * f2));
            f2 = +N(+ +g[b2 >> 2]);
            e2 = +N(+ +g[b2 + 4 >> 2]);
            d2 = +N(+ +g[b2 + 8 >> 2]);
            g[a2 + 16 >> 2] = f2;
            g[a2 + 20 >> 2] = e2;
            g[a2 + 24 >> 2] = d2;
            g[a2 + 28 >> 2] = 0;
            return;
          }
          function rk(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = +b2;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0;
            e2 = i;
            i = i + 96 | 0;
            c[e2 + 32 >> 2] = 1065353216;
            c[e2 + 32 + 4 >> 2] = 0;
            c[e2 + 32 + 4 + 4 >> 2] = 0;
            c[e2 + 32 + 4 + 8 >> 2] = 0;
            c[e2 + 32 + 4 + 12 >> 2] = 0;
            c[e2 + 32 + 20 >> 2] = 1065353216;
            c[e2 + 32 + 24 >> 2] = 0;
            c[e2 + 32 + 24 + 4 >> 2] = 0;
            c[e2 + 32 + 24 + 8 >> 2] = 0;
            c[e2 + 32 + 24 + 12 >> 2] = 0;
            c[e2 + 32 + 40 >> 2] = 1065353216;
            l2 = e2 + 32 + 44 | 0;
            c[l2 >> 2] = 0;
            c[l2 + 4 >> 2] = 0;
            c[l2 + 8 >> 2] = 0;
            c[l2 + 12 >> 2] = 0;
            c[l2 + 16 >> 2] = 0;
            bc[c[(c[a2 >> 2] | 0) + 8 >> 2] & 127](a2, e2 + 32 | 0, e2 + 16 | 0, e2);
            j2 = (+g[e2 >> 2] - +g[e2 + 16 >> 2]) * 0.5;
            h2 = (+g[e2 + 4 >> 2] - +g[e2 + 16 + 4 >> 2]) * 0.5;
            k2 = (+g[e2 + 8 >> 2] - +g[e2 + 16 + 8 >> 2]) * 0.5;
            f2 = +Hb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
            g[d2 >> 2] = b2 * 0.0833333283662796 * ((h2 + f2) * 2 * ((h2 + f2) * 2) + (k2 + f2) * 2 * ((k2 + f2) * 2));
            g[d2 + 4 >> 2] = b2 * 0.0833333283662796 * ((j2 + f2) * 2 * ((j2 + f2) * 2) + (k2 + f2) * 2 * ((k2 + f2) * 2));
            g[d2 + 8 >> 2] = b2 * 0.0833333283662796 * ((j2 + f2) * 2 * ((j2 + f2) * 2) + (h2 + f2) * 2 * ((h2 + f2) * 2));
            g[d2 + 12 >> 2] = 0;
            i = e2;
            return;
          }
          function sk(a2) {
            a2 = a2 | 0;
            return 13325;
          }
          function tk(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c[a2 >> 2] = 0;
            c[a2 + 4 >> 2] = 1065353216;
            c[a2 + 8 >> 2] = 0;
            g[a2 + 12 >> 2] = 0;
            return;
          }
          function uk(a2) {
            a2 = a2 | 0;
            return 60;
          }
          function vk(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0;
            e2 = Ob[c[(c[d2 >> 2] | 0) + 40 >> 2] & 31](d2, a2) | 0;
            f2 = Ob[c[(c[d2 >> 2] | 0) + 28 >> 2] & 31](d2, e2) | 0;
            c[b2 >> 2] = f2;
            if (f2 | 0)
              tb[c[(c[d2 >> 2] | 0) + 48 >> 2] & 127](d2, e2);
            c[b2 + 4 >> 2] = c[a2 + 4 >> 2];
            c[b2 + 28 >> 2] = c[a2 + 32 >> 2];
            c[b2 + 32 >> 2] = c[a2 + 36 >> 2];
            c[b2 + 36 >> 2] = c[a2 + 40 >> 2];
            c[b2 + 40 >> 2] = c[a2 + 44 >> 2];
            c[b2 + 12 >> 2] = c[a2 + 16 >> 2];
            c[b2 + 16 >> 2] = c[a2 + 20 >> 2];
            c[b2 + 20 >> 2] = c[a2 + 24 >> 2];
            c[b2 + 24 >> 2] = c[a2 + 28 >> 2];
            c[b2 + 44 >> 2] = c[a2 + 48 >> 2];
            c[b2 + 52 >> 2] = c[a2 + 72 >> 2];
            return 13330;
          }
          function wk(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0;
            e2 = +g[b2 + 64 >> 2] * 0.5;
            l2 = c[b2 + 72 >> 2] | 0;
            h2 = +g[d2 >> 2];
            j2 = +g[d2 + 4 >> 2];
            k2 = +g[d2 + 8 >> 2];
            k2 = +O(+(h2 * h2 + j2 * j2 + k2 * k2));
            f2 = c[b2 + 68 >> 2] | 0;
            do
              if (!(+g[d2 + (l2 << 2) >> 2] > k2 * +g[b2 + 56 >> 2])) {
                h2 = +g[d2 + (f2 << 2) >> 2];
                i2 = c[b2 + 76 >> 2] | 0;
                j2 = +g[d2 + (i2 << 2) >> 2];
                k2 = +O(+(h2 * h2 + j2 * j2));
                if (k2 > 11920928955078125e-23) {
                  k2 = +g[b2 + 60 >> 2] / k2;
                  g[a2 + (f2 << 2) >> 2] = h2 * k2;
                  g[a2 + (l2 << 2) >> 2] = -e2;
                  g[a2 + (i2 << 2) >> 2] = j2 * k2;
                  break;
                } else {
                  g[a2 + (f2 << 2) >> 2] = 0;
                  g[a2 + (l2 << 2) >> 2] = -e2;
                  g[a2 + (i2 << 2) >> 2] = 0;
                  break;
                }
              } else {
                g[a2 + (f2 << 2) >> 2] = 0;
                g[a2 + (l2 << 2) >> 2] = e2;
                g[a2 + (c[b2 + 76 >> 2] << 2) >> 2] = 0;
              }
            while (0);
            if (!(+Hb[c[(c[b2 >> 2] | 0) + 48 >> 2] & 15](b2) != 0))
              return;
            h2 = +g[d2 >> 2];
            j2 = +g[d2 + 4 >> 2];
            k2 = +g[d2 + 8 >> 2];
            m2 = h2 * h2 + j2 * j2 + k2 * k2 < 14210854715202004e-30 ? -1 : h2;
            e2 = h2 * h2 + j2 * j2 + k2 * k2 < 14210854715202004e-30 ? -1 : j2;
            k2 = h2 * h2 + j2 * j2 + k2 * k2 < 14210854715202004e-30 ? -1 : k2;
            j2 = 1 / +O(+(k2 * k2 + (m2 * m2 + e2 * e2)));
            h2 = +Hb[c[(c[b2 >> 2] | 0) + 48 >> 2] & 15](b2);
            g[a2 >> 2] = +g[a2 >> 2] + h2 * (j2 * m2);
            g[a2 + 4 >> 2] = h2 * (j2 * e2) + +g[a2 + 4 >> 2];
            g[a2 + 8 >> 2] = h2 * (j2 * k2) + +g[a2 + 8 >> 2];
            return;
          }
          function xk(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0;
            h2 = +g[b2 + 64 >> 2] * 0.5;
            l2 = c[b2 + 72 >> 2] | 0;
            e2 = +g[d2 >> 2];
            f2 = +g[d2 + 4 >> 2];
            j2 = +g[d2 + 8 >> 2];
            j2 = +O(+(e2 * e2 + f2 * f2 + j2 * j2));
            i2 = c[b2 + 68 >> 2] | 0;
            if (+g[d2 + (l2 << 2) >> 2] > j2 * +g[b2 + 56 >> 2]) {
              g[a2 + (i2 << 2) >> 2] = 0;
              g[a2 + (l2 << 2) >> 2] = h2;
              g[a2 + (c[b2 + 76 >> 2] << 2) >> 2] = 0;
              return;
            }
            j2 = +g[d2 + (i2 << 2) >> 2];
            k2 = c[b2 + 76 >> 2] | 0;
            e2 = +g[d2 + (k2 << 2) >> 2];
            f2 = +O(+(j2 * j2 + e2 * e2));
            if (f2 > 11920928955078125e-23) {
              f2 = +g[b2 + 60 >> 2] / f2;
              g[a2 + (i2 << 2) >> 2] = j2 * f2;
              g[a2 + (l2 << 2) >> 2] = -h2;
              g[a2 + (k2 << 2) >> 2] = e2 * f2;
              return;
            } else {
              g[a2 + (i2 << 2) >> 2] = 0;
              g[a2 + (l2 << 2) >> 2] = -h2;
              g[a2 + (k2 << 2) >> 2] = 0;
              return;
            }
          }
          function yk(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0;
            q2 = i;
            i = i + 16 | 0;
            if ((e2 | 0) <= 0) {
              i = q2;
              return;
            }
            p2 = 0;
            do {
              o2 = d2 + (p2 << 4) | 0;
              f2 = +g[a2 + 64 >> 2] * 0.5;
              h2 = c[a2 + 72 >> 2] | 0;
              k2 = +g[b2 + (p2 << 4) >> 2];
              m2 = +g[b2 + (p2 << 4) + 4 >> 2];
              n2 = +g[b2 + (p2 << 4) + 8 >> 2];
              n2 = +O(+(k2 * k2 + m2 * m2 + n2 * n2));
              j2 = c[a2 + 68 >> 2] | 0;
              do
                if (!(+g[b2 + (p2 << 4) + (h2 << 2) >> 2] > n2 * +g[a2 + 56 >> 2])) {
                  k2 = +g[b2 + (p2 << 4) + (j2 << 2) >> 2];
                  l2 = c[a2 + 76 >> 2] | 0;
                  m2 = +g[b2 + (p2 << 4) + (l2 << 2) >> 2];
                  n2 = +O(+(k2 * k2 + m2 * m2));
                  if (n2 > 11920928955078125e-23) {
                    n2 = +g[a2 + 60 >> 2] / n2;
                    g[q2 + (j2 << 2) >> 2] = k2 * n2;
                    g[q2 + (h2 << 2) >> 2] = -f2;
                    g[q2 + (l2 << 2) >> 2] = m2 * n2;
                    break;
                  } else {
                    g[q2 + (j2 << 2) >> 2] = 0;
                    g[q2 + (h2 << 2) >> 2] = -f2;
                    g[q2 + (l2 << 2) >> 2] = 0;
                    break;
                  }
                } else {
                  g[q2 + (j2 << 2) >> 2] = 0;
                  g[q2 + (h2 << 2) >> 2] = f2;
                  g[q2 + (c[a2 + 76 >> 2] << 2) >> 2] = 0;
                }
              while (0);
              c[o2 >> 2] = c[q2 >> 2];
              c[o2 + 4 >> 2] = c[q2 + 4 >> 2];
              c[o2 + 8 >> 2] = c[q2 + 8 >> 2];
              c[o2 + 12 >> 2] = c[q2 + 12 >> 2];
              p2 = p2 + 1 | 0;
            } while ((p2 | 0) != (e2 | 0));
            i = q2;
            return;
          }
          function zk(a2) {
            a2 = a2 | 0;
            if (!a2)
              return;
            c[5638] = (c[5638] | 0) + 1;
            rG(c[a2 + -4 >> 2] | 0);
            return;
          }
          function Ak(a2) {
            a2 = a2 | 0;
            return 13361;
          }
          function Bk(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c[a2 >> 2] = 0;
            c[a2 + 4 >> 2] = 0;
            c[a2 + 8 >> 2] = 1065353216;
            g[a2 + 12 >> 2] = 0;
            return;
          }
          function Ck(a2) {
            a2 = a2 | 0;
            if (!a2)
              return;
            c[5638] = (c[5638] | 0) + 1;
            rG(c[a2 + -4 >> 2] | 0);
            return;
          }
          function Dk(a2) {
            a2 = a2 | 0;
            return 13382;
          }
          function Ek(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c[a2 >> 2] = 1065353216;
            c[a2 + 4 >> 2] = 0;
            c[a2 + 8 >> 2] = 0;
            g[a2 + 12 >> 2] = 0;
            return;
          }
          function Fk(b2) {
            b2 = b2 | 0;
            var d2 = 0;
            c[b2 >> 2] = 5556;
            d2 = c[b2 + 108 >> 2] | 0;
            if (d2 | 0) {
              if (a[b2 + 112 >> 0] | 0) {
                c[5638] = (c[5638] | 0) + 1;
                rG(c[d2 + -4 >> 2] | 0);
              }
              c[b2 + 108 >> 2] = 0;
            }
            a[b2 + 112 >> 0] = 1;
            c[b2 + 108 >> 2] = 0;
            c[b2 + 100 >> 2] = 0;
            c[b2 + 104 >> 2] = 0;
            c[b2 >> 2] = 6248;
            d2 = c[b2 + 56 >> 2] | 0;
            if (!d2)
              return;
            rb[c[c[d2 >> 2] >> 2] & 255](d2);
            d2 = c[b2 + 56 >> 2] | 0;
            if (!d2)
              return;
            c[5638] = (c[5638] | 0) + 1;
            rG(c[d2 + -4 >> 2] | 0);
            return;
          }
          function Gk(b2) {
            b2 = b2 | 0;
            var d2 = 0, e2 = 0;
            c[b2 >> 2] = 5556;
            d2 = c[b2 + 108 >> 2] | 0;
            if (d2 | 0) {
              if (a[b2 + 112 >> 0] | 0) {
                c[5638] = (c[5638] | 0) + 1;
                rG(c[d2 + -4 >> 2] | 0);
              }
              c[b2 + 108 >> 2] = 0;
            }
            a[b2 + 112 >> 0] = 1;
            c[b2 + 108 >> 2] = 0;
            c[b2 + 100 >> 2] = 0;
            c[b2 + 104 >> 2] = 0;
            c[b2 >> 2] = 6248;
            d2 = c[b2 + 56 >> 2] | 0;
            if (d2 | 0 ? (rb[c[c[d2 >> 2] >> 2] & 255](d2), e2 = c[b2 + 56 >> 2] | 0, e2 | 0) : 0) {
              c[5638] = (c[5638] | 0) + 1;
              rG(c[e2 + -4 >> 2] | 0);
            }
            c[5638] = (c[5638] | 0) + 1;
            rG(c[b2 + -4 >> 2] | 0);
            return;
          }
          function Hk(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c[a2 + 16 >> 2] = c[b2 >> 2];
            c[a2 + 16 + 4 >> 2] = c[b2 + 4 >> 2];
            c[a2 + 16 + 8 >> 2] = c[b2 + 8 >> 2];
            c[a2 + 16 + 12 >> 2] = c[b2 + 12 >> 2];
            mm(a2);
            return;
          }
          function Ik(a2) {
            a2 = a2 | 0;
            return 13408;
          }
          function Jk(a2) {
            a2 = a2 | 0;
            return 68;
          }
          function Kk(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0;
            e2 = Ob[c[(c[d2 >> 2] | 0) + 40 >> 2] & 31](d2, a2) | 0;
            g2 = Ob[c[(c[d2 >> 2] | 0) + 28 >> 2] & 31](d2, e2) | 0;
            c[b2 >> 2] = g2;
            if (g2 | 0)
              tb[c[(c[d2 >> 2] | 0) + 48 >> 2] & 127](d2, e2);
            c[b2 + 4 >> 2] = c[a2 + 4 >> 2];
            c[b2 + 28 >> 2] = c[a2 + 32 >> 2];
            c[b2 + 32 >> 2] = c[a2 + 36 >> 2];
            c[b2 + 36 >> 2] = c[a2 + 40 >> 2];
            c[b2 + 40 >> 2] = c[a2 + 44 >> 2];
            c[b2 + 12 >> 2] = c[a2 + 16 >> 2];
            c[b2 + 16 >> 2] = c[a2 + 20 >> 2];
            c[b2 + 20 >> 2] = c[a2 + 24 >> 2];
            c[b2 + 24 >> 2] = c[a2 + 28 >> 2];
            c[b2 + 44 >> 2] = c[a2 + 48 >> 2];
            f2 = c[a2 + 100 >> 2] | 0;
            c[b2 + 60 >> 2] = f2;
            if (!f2) {
              c[b2 + 52 >> 2] = 0;
              c[b2 + 56 >> 2] = 0;
              return 13415;
            }
            c[b2 + 52 >> 2] = Ob[c[(c[d2 >> 2] | 0) + 28 >> 2] & 31](d2, c[a2 + 108 >> 2] | 0) | 0;
            c[b2 + 56 >> 2] = 0;
            g2 = Eb[c[(c[d2 >> 2] | 0) + 16 >> 2] & 63](d2, 16, f2) | 0;
            if ((f2 | 0) > 0) {
              e2 = c[a2 + 108 >> 2] | 0;
              b2 = 0;
              a2 = c[g2 + 8 >> 2] | 0;
              while (1) {
                c[a2 >> 2] = c[e2 + (b2 << 4) >> 2];
                c[a2 + 4 >> 2] = c[e2 + (b2 << 4) + 4 >> 2];
                c[a2 + 8 >> 2] = c[e2 + (b2 << 4) + 8 >> 2];
                c[a2 + 12 >> 2] = c[e2 + (b2 << 4) + 12 >> 2];
                b2 = b2 + 1 | 0;
                if ((b2 | 0) == (f2 | 0))
                  break;
                else
                  a2 = a2 + 16 | 0;
              }
            } else
              e2 = c[a2 + 108 >> 2] | 0;
            pb[c[(c[d2 >> 2] | 0) + 20 >> 2] & 31](d2, g2, 16354, 1497453121, e2);
            return 13415;
          }
          function Lk(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0;
            Zb[c[(c[b2 >> 2] | 0) + 68 >> 2] & 127](a2, b2, d2);
            if (!(+Hb[c[(c[b2 >> 2] | 0) + 48 >> 2] & 15](b2) != 0))
              return;
            h2 = +g[d2 >> 2];
            f2 = +g[d2 + 4 >> 2];
            e2 = +g[d2 + 8 >> 2];
            j2 = h2 * h2 + f2 * f2 + e2 * e2 < 14210854715202004e-30 ? -1 : h2;
            i2 = h2 * h2 + f2 * f2 + e2 * e2 < 14210854715202004e-30 ? -1 : f2;
            e2 = h2 * h2 + f2 * f2 + e2 * e2 < 14210854715202004e-30 ? -1 : e2;
            f2 = 1 / +O(+(e2 * e2 + (j2 * j2 + i2 * i2)));
            h2 = +Hb[c[(c[b2 >> 2] | 0) + 48 >> 2] & 15](b2);
            g[a2 >> 2] = +g[a2 >> 2] + h2 * (f2 * j2);
            g[a2 + 4 >> 2] = h2 * (f2 * i2) + +g[a2 + 4 >> 2];
            g[a2 + 8 >> 2] = h2 * (f2 * e2) + +g[a2 + 8 >> 2];
            return;
          }
          function Mk(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0;
            k2 = c[b2 + 100 >> 2] | 0;
            if ((k2 | 0) <= 0) {
              c[a2 >> 2] = 0;
              c[a2 + 4 >> 2] = 0;
              c[a2 + 8 >> 2] = 0;
              c[a2 + 12 >> 2] = 0;
              return;
            }
            o2 = +g[b2 + 16 >> 2];
            p2 = +g[d2 >> 2] * o2;
            l2 = +g[b2 + 20 >> 2];
            m2 = +g[d2 + 4 >> 2] * l2;
            n2 = +g[b2 + 24 >> 2];
            j2 = +g[d2 + 8 >> 2] * n2;
            d2 = c[b2 + 108 >> 2] | 0;
            f2 = 0;
            h2 = -34028234663852886e22;
            i2 = -1;
            while (1) {
              e2 = p2 * +g[d2 + (f2 << 4) >> 2] + m2 * +g[d2 + (f2 << 4) + 4 >> 2] + j2 * +g[d2 + (f2 << 4) + 8 >> 2];
              b2 = e2 > h2;
              i2 = b2 ? f2 : i2;
              f2 = f2 + 1 | 0;
              if ((f2 | 0) == (k2 | 0))
                break;
              else
                h2 = b2 ? e2 : h2;
            }
            m2 = +g[d2 + (i2 << 4) + 4 >> 2] * l2;
            p2 = +g[d2 + (i2 << 4) + 8 >> 2] * n2;
            g[a2 >> 2] = +g[d2 + (i2 << 4) >> 2] * o2;
            g[a2 + 4 >> 2] = m2;
            g[a2 + 8 >> 2] = p2;
            g[a2 + 12 >> 2] = 0;
            return;
          }
          function Nk(a2, b2, d2, e2, f2, h2, j2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            h2 = h2 | 0;
            j2 = j2 | 0;
            var l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0;
            r2 = i;
            i = i + 16 | 0;
            g[e2 >> 2] = 34028234663852886e22;
            g[f2 >> 2] = -34028234663852886e22;
            n2 = c[a2 + 100 >> 2] | 0;
            if ((n2 | 0) > 0) {
              q2 = 0;
              do {
                t2 = c[a2 + 108 >> 2] | 0;
                s2 = +g[t2 + (q2 << 4) >> 2] * +g[a2 + 16 >> 2];
                p2 = +g[t2 + (q2 << 4) + 4 >> 2] * +g[a2 + 20 >> 2];
                o2 = +g[t2 + (q2 << 4) + 8 >> 2] * +g[a2 + 24 >> 2];
                l2 = s2 * +g[b2 >> 2] + p2 * +g[b2 + 4 >> 2] + o2 * +g[b2 + 8 >> 2] + +g[b2 + 48 >> 2];
                m2 = s2 * +g[b2 + 16 >> 2] + p2 * +g[b2 + 20 >> 2] + o2 * +g[b2 + 24 >> 2] + +g[b2 + 52 >> 2];
                o2 = s2 * +g[b2 + 32 >> 2] + p2 * +g[b2 + 36 >> 2] + o2 * +g[b2 + 40 >> 2] + +g[b2 + 56 >> 2];
                p2 = l2 * +g[d2 >> 2] + m2 * +g[d2 + 4 >> 2] + o2 * +g[d2 + 8 >> 2];
                if (p2 < +g[e2 >> 2]) {
                  g[e2 >> 2] = p2;
                  g[h2 >> 2] = l2;
                  g[h2 + 4 >> 2] = m2;
                  g[h2 + 8 >> 2] = o2;
                  g[h2 + 12 >> 2] = 0;
                }
                if (p2 > +g[f2 >> 2]) {
                  g[f2 >> 2] = p2;
                  g[j2 >> 2] = l2;
                  g[j2 + 4 >> 2] = m2;
                  g[j2 + 8 >> 2] = o2;
                  g[j2 + 12 >> 2] = 0;
                }
                q2 = q2 + 1 | 0;
              } while ((q2 | 0) != (n2 | 0));
              s2 = +g[f2 >> 2];
              m2 = s2;
              n2 = (g[k >> 2] = s2, c[k >> 2] | 0);
            } else {
              m2 = -34028234663852886e22;
              n2 = -8388609;
            }
            l2 = +g[e2 >> 2];
            if (!(l2 > m2)) {
              i = r2;
              return;
            }
            c[e2 >> 2] = n2;
            g[f2 >> 2] = l2;
            c[r2 >> 2] = c[h2 >> 2];
            c[r2 + 4 >> 2] = c[h2 + 4 >> 2];
            c[r2 + 8 >> 2] = c[h2 + 8 >> 2];
            c[r2 + 12 >> 2] = c[h2 + 12 >> 2];
            c[h2 >> 2] = c[j2 >> 2];
            c[h2 + 4 >> 2] = c[j2 + 4 >> 2];
            c[h2 + 8 >> 2] = c[j2 + 8 >> 2];
            c[h2 + 12 >> 2] = c[j2 + 12 >> 2];
            c[j2 >> 2] = c[r2 >> 2];
            c[j2 + 4 >> 2] = c[r2 + 4 >> 2];
            c[j2 + 8 >> 2] = c[r2 + 8 >> 2];
            c[j2 + 12 >> 2] = c[r2 + 12 >> 2];
            i = r2;
            return;
          }
          function Ok(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0;
            if ((e2 | 0) > 0)
              f2 = 0;
            else
              return;
            do {
              g[d2 + (f2 << 4) + 12 >> 2] = -999999984306749400;
              f2 = f2 + 1 | 0;
            } while ((f2 | 0) != (e2 | 0));
            p2 = 0;
            do {
              h2 = +g[a2 + 16 >> 2];
              i2 = +g[b2 + (p2 << 4) >> 2] * h2;
              j2 = +g[a2 + 20 >> 2];
              k2 = +g[b2 + (p2 << 4) + 4 >> 2] * j2;
              l2 = +g[a2 + 24 >> 2];
              m2 = +g[b2 + (p2 << 4) + 8 >> 2] * l2;
              f2 = c[a2 + 100 >> 2] | 0;
              if ((f2 | 0) > 0) {
                n2 = c[a2 + 108 >> 2] | 0;
                o2 = 0;
                q2 = -34028234663852886e22;
                r2 = -1;
                do {
                  s2 = i2 * +g[n2 + (o2 << 4) >> 2] + k2 * +g[n2 + (o2 << 4) + 4 >> 2] + m2 * +g[n2 + (o2 << 4) + 8 >> 2];
                  t2 = s2 > q2;
                  r2 = t2 ? o2 : r2;
                  q2 = t2 ? s2 : q2;
                  o2 = o2 + 1 | 0;
                } while ((o2 | 0) != (f2 | 0));
                m2 = +g[n2 + (r2 << 4) + 4 >> 2] * j2;
                s2 = +g[n2 + (r2 << 4) + 8 >> 2] * l2;
                g[d2 + (p2 << 4) >> 2] = +g[n2 + (r2 << 4) >> 2] * h2;
                g[d2 + (p2 << 4) + 4 >> 2] = m2;
                g[d2 + (p2 << 4) + 8 >> 2] = s2;
                g[d2 + (p2 << 4) + 12 >> 2] = q2;
              } else
                g[d2 + (p2 << 4) + 12 >> 2] = -999999984306749400;
              p2 = p2 + 1 | 0;
            } while ((p2 | 0) != (e2 | 0));
            return;
          }
          function Pk(a2) {
            a2 = a2 | 0;
            return c[a2 + 100 >> 2] | 0;
          }
          function Qk(a2) {
            a2 = a2 | 0;
            return c[a2 + 100 >> 2] | 0;
          }
          function Rk(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, h2 = 0, i2 = 0, j2 = 0;
            i2 = c[a2 + 100 >> 2] | 0;
            j2 = c[a2 + 108 >> 2] | 0;
            f2 = +g[j2 + (((b2 | 0) % (i2 | 0) | 0) << 4) + 4 >> 2] * +g[a2 + 20 >> 2];
            h2 = +g[j2 + (((b2 | 0) % (i2 | 0) | 0) << 4) + 8 >> 2] * +g[a2 + 24 >> 2];
            g[d2 >> 2] = +g[j2 + (((b2 | 0) % (i2 | 0) | 0) << 4) >> 2] * +g[a2 + 16 >> 2];
            g[d2 + 4 >> 2] = f2;
            g[d2 + 8 >> 2] = h2;
            g[d2 + 12 >> 2] = 0;
            d2 = c[a2 + 108 >> 2] | 0;
            h2 = +g[d2 + (((b2 + 1 | 0) % (i2 | 0) | 0) << 4) + 4 >> 2] * +g[a2 + 20 >> 2];
            f2 = +g[d2 + (((b2 + 1 | 0) % (i2 | 0) | 0) << 4) + 8 >> 2] * +g[a2 + 24 >> 2];
            g[e2 >> 2] = +g[d2 + (((b2 + 1 | 0) % (i2 | 0) | 0) << 4) >> 2] * +g[a2 + 16 >> 2];
            g[e2 + 4 >> 2] = h2;
            g[e2 + 8 >> 2] = f2;
            g[e2 + 12 >> 2] = 0;
            return;
          }
          function Sk(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, h2 = 0;
            h2 = c[a2 + 108 >> 2] | 0;
            f2 = +g[h2 + (b2 << 4) + 4 >> 2] * +g[a2 + 20 >> 2];
            e2 = +g[h2 + (b2 << 4) + 8 >> 2] * +g[a2 + 24 >> 2];
            g[d2 >> 2] = +g[h2 + (b2 << 4) >> 2] * +g[a2 + 16 >> 2];
            g[d2 + 4 >> 2] = f2;
            g[d2 + 8 >> 2] = e2;
            g[d2 + 12 >> 2] = 0;
            return;
          }
          function Tk(a2) {
            a2 = a2 | 0;
            return 0;
          }
          function Uk(a2, b2, c2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = d2 | 0;
            return;
          }
          function Vk(a2, b2, c2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = +c2;
            return 0;
          }
          function Wk(b2, d2, e2, f2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            var h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0;
            l2 = i;
            i = i + 16 | 0;
            c[b2 + 8 >> 2] = 0;
            c[b2 + 12 >> 2] = -1;
            c[b2 + 16 >> 2] = 1065353216;
            c[b2 + 20 >> 2] = 1065353216;
            c[b2 + 24 >> 2] = 1065353216;
            g[b2 + 28 >> 2] = 0;
            g[b2 + 48 >> 2] = 0.03999999910593033;
            c[b2 + 56 >> 2] = 0;
            c[b2 + 60 >> 2] = 1065353216;
            c[b2 + 64 >> 2] = 1065353216;
            c[b2 + 68 >> 2] = 1065353216;
            g[b2 + 72 >> 2] = 0;
            c[b2 + 76 >> 2] = -1082130432;
            c[b2 + 80 >> 2] = -1082130432;
            c[b2 + 84 >> 2] = -1082130432;
            g[b2 + 88 >> 2] = 0;
            a[b2 + 92 >> 0] = 0;
            c[b2 >> 2] = 5556;
            a[b2 + 112 >> 0] = 1;
            c[b2 + 108 >> 2] = 0;
            c[b2 + 100 >> 2] = 0;
            c[b2 + 104 >> 2] = 0;
            c[b2 + 4 >> 2] = 4;
            if ((e2 | 0) <= 0) {
              c[b2 + 100 >> 2] = e2;
              mm(b2);
              i = l2;
              return;
            }
            c[5637] = (c[5637] | 0) + 1;
            h2 = qG((e2 << 4 | 3) + 16 | 0) | 0;
            if (!h2)
              k2 = 0;
            else {
              c[(h2 + 4 + 15 & -16) + -4 >> 2] = h2;
              k2 = h2 + 4 + 15 & -16;
            }
            h2 = c[b2 + 100 >> 2] | 0;
            if ((h2 | 0) > 0) {
              j2 = 0;
              do {
                m2 = k2 + (j2 << 4) | 0;
                n2 = (c[b2 + 108 >> 2] | 0) + (j2 << 4) | 0;
                c[m2 >> 2] = c[n2 >> 2];
                c[m2 + 4 >> 2] = c[n2 + 4 >> 2];
                c[m2 + 8 >> 2] = c[n2 + 8 >> 2];
                c[m2 + 12 >> 2] = c[n2 + 12 >> 2];
                j2 = j2 + 1 | 0;
              } while ((j2 | 0) != (h2 | 0));
            }
            h2 = c[b2 + 108 >> 2] | 0;
            if (h2 | 0) {
              if (a[b2 + 112 >> 0] | 0) {
                c[5638] = (c[5638] | 0) + 1;
                rG(c[h2 + -4 >> 2] | 0);
              }
              c[b2 + 108 >> 2] = 0;
            }
            a[b2 + 112 >> 0] = 1;
            c[b2 + 108 >> 2] = k2;
            c[b2 + 104 >> 2] = e2;
            c[k2 >> 2] = c[l2 >> 2];
            c[k2 + 4 >> 2] = c[l2 + 4 >> 2];
            c[k2 + 8 >> 2] = c[l2 + 8 >> 2];
            c[k2 + 12 >> 2] = c[l2 + 12 >> 2];
            if ((e2 | 0) != 1) {
              h2 = 1;
              do {
                n2 = (c[b2 + 108 >> 2] | 0) + (h2 << 4) | 0;
                c[n2 >> 2] = c[l2 >> 2];
                c[n2 + 4 >> 2] = c[l2 + 4 >> 2];
                c[n2 + 8 >> 2] = c[l2 + 8 >> 2];
                c[n2 + 12 >> 2] = c[l2 + 12 >> 2];
                h2 = h2 + 1 | 0;
              } while ((h2 | 0) != (e2 | 0));
            }
            c[b2 + 100 >> 2] = e2;
            j2 = 0;
            h2 = d2;
            while (1) {
              n2 = c[b2 + 108 >> 2] | 0;
              d2 = c[h2 + 4 >> 2] | 0;
              m2 = c[h2 + 8 >> 2] | 0;
              c[n2 + (j2 << 4) >> 2] = c[h2 >> 2];
              c[n2 + (j2 << 4) + 4 >> 2] = d2;
              c[n2 + (j2 << 4) + 8 >> 2] = m2;
              g[n2 + (j2 << 4) + 12 >> 2] = 0;
              j2 = j2 + 1 | 0;
              if ((j2 | 0) == (e2 | 0))
                break;
              else
                h2 = h2 + f2 | 0;
            }
            mm(b2);
            i = l2;
            return;
          }
          function Xk(b2, d2, e2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, g2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0;
            f2 = c[b2 + 100 >> 2] | 0;
            if ((f2 | 0) == (c[b2 + 104 >> 2] | 0) ? (i2 = f2 | 0 ? f2 << 1 : 1, (f2 | 0) < (i2 | 0)) : 0) {
              if (!i2)
                h2 = 0;
              else {
                c[5637] = (c[5637] | 0) + 1;
                f2 = qG((i2 << 4 | 3) + 16 | 0) | 0;
                if (!f2)
                  f2 = 0;
                else {
                  c[(f2 + 4 + 15 & -16) + -4 >> 2] = f2;
                  f2 = f2 + 4 + 15 & -16;
                }
                h2 = f2;
                f2 = c[b2 + 100 >> 2] | 0;
              }
              if ((f2 | 0) > 0) {
                g2 = 0;
                do {
                  j2 = h2 + (g2 << 4) | 0;
                  k2 = (c[b2 + 108 >> 2] | 0) + (g2 << 4) | 0;
                  c[j2 >> 2] = c[k2 >> 2];
                  c[j2 + 4 >> 2] = c[k2 + 4 >> 2];
                  c[j2 + 8 >> 2] = c[k2 + 8 >> 2];
                  c[j2 + 12 >> 2] = c[k2 + 12 >> 2];
                  g2 = g2 + 1 | 0;
                } while ((g2 | 0) != (f2 | 0));
              }
              f2 = c[b2 + 108 >> 2] | 0;
              if (f2 | 0) {
                if (a[b2 + 112 >> 0] | 0) {
                  c[5638] = (c[5638] | 0) + 1;
                  rG(c[f2 + -4 >> 2] | 0);
                }
                c[b2 + 108 >> 2] = 0;
              }
              a[b2 + 112 >> 0] = 1;
              c[b2 + 108 >> 2] = h2;
              c[b2 + 104 >> 2] = i2;
              f2 = c[b2 + 100 >> 2] | 0;
            }
            k2 = (c[b2 + 108 >> 2] | 0) + (f2 << 4) | 0;
            c[k2 >> 2] = c[d2 >> 2];
            c[k2 + 4 >> 2] = c[d2 + 4 >> 2];
            c[k2 + 8 >> 2] = c[d2 + 8 >> 2];
            c[k2 + 12 >> 2] = c[d2 + 12 >> 2];
            c[b2 + 100 >> 2] = (c[b2 + 100 >> 2] | 0) + 1;
            if (!e2)
              return;
            mm(b2);
            return;
          }
          function Yk(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var c2 = 0, d2 = 0, e2 = 0;
            e2 = +N(+ +g[b2 >> 2]);
            d2 = +N(+ +g[b2 + 4 >> 2]);
            c2 = +N(+ +g[b2 + 8 >> 2]);
            g[a2 + 16 >> 2] = e2;
            g[a2 + 20 >> 2] = d2;
            g[a2 + 24 >> 2] = c2;
            g[a2 + 28 >> 2] = 0;
            return;
          }
          function Zk(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0;
            Zb[c[(c[b2 >> 2] | 0) + 68 >> 2] & 127](a2, b2, d2);
            if (!(+Hb[c[(c[b2 >> 2] | 0) + 48 >> 2] & 15](b2) != 0))
              return;
            h2 = +g[d2 >> 2];
            f2 = +g[d2 + 4 >> 2];
            e2 = +g[d2 + 8 >> 2];
            j2 = h2 * h2 + f2 * f2 + e2 * e2 < 14210854715202004e-30 ? -1 : h2;
            i2 = h2 * h2 + f2 * f2 + e2 * e2 < 14210854715202004e-30 ? -1 : f2;
            e2 = h2 * h2 + f2 * f2 + e2 * e2 < 14210854715202004e-30 ? -1 : e2;
            f2 = 1 / +O(+(e2 * e2 + (j2 * j2 + i2 * i2)));
            h2 = +Hb[c[(c[b2 >> 2] | 0) + 48 >> 2] & 15](b2);
            g[a2 >> 2] = +g[a2 >> 2] + h2 * (f2 * j2);
            g[a2 + 4 >> 2] = h2 * (f2 * i2) + +g[a2 + 4 >> 2];
            g[a2 + 8 >> 2] = h2 * (f2 * e2) + +g[a2 + 8 >> 2];
            return;
          }
          function _k(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0;
            j2 = i;
            i = i + 96 | 0;
            f2 = +Hb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
            h2 = 0;
            do {
              q2 = j2 + 80 + (h2 << 2) | 0;
              c[j2 + 80 >> 2] = 0;
              c[j2 + 80 + 4 >> 2] = 0;
              c[j2 + 80 + 8 >> 2] = 0;
              c[j2 + 80 + 12 >> 2] = 0;
              g[q2 >> 2] = 1;
              k2 = c[(c[a2 >> 2] | 0) + 64 >> 2] | 0;
              l2 = +g[j2 + 80 >> 2];
              m2 = +g[j2 + 80 + 4 >> 2];
              n2 = +g[j2 + 80 + 8 >> 2];
              o2 = l2 * +g[b2 + 4 >> 2] + m2 * +g[b2 + 20 >> 2] + n2 * +g[b2 + 36 >> 2];
              p2 = l2 * +g[b2 + 8 >> 2] + m2 * +g[b2 + 24 >> 2] + n2 * +g[b2 + 40 >> 2];
              g[j2 + 32 >> 2] = +g[b2 >> 2] * l2 + +g[b2 + 16 >> 2] * m2 + +g[b2 + 32 >> 2] * n2;
              g[j2 + 32 + 4 >> 2] = o2;
              g[j2 + 32 + 8 >> 2] = p2;
              g[j2 + 32 + 12 >> 2] = 0;
              Zb[k2 & 127](j2 + 64 | 0, a2, j2 + 32 | 0);
              p2 = +g[j2 + 64 >> 2];
              o2 = +g[j2 + 64 + 4 >> 2];
              n2 = +g[j2 + 64 + 8 >> 2];
              m2 = p2 * +g[b2 + 16 >> 2] + o2 * +g[b2 + 20 >> 2] + n2 * +g[b2 + 24 >> 2] + +g[b2 + 52 >> 2];
              l2 = p2 * +g[b2 + 32 >> 2] + o2 * +g[b2 + 36 >> 2] + n2 * +g[b2 + 40 >> 2] + +g[b2 + 56 >> 2];
              g[j2 + 48 >> 2] = p2 * +g[b2 >> 2] + o2 * +g[b2 + 4 >> 2] + n2 * +g[b2 + 8 >> 2] + +g[b2 + 48 >> 2];
              g[j2 + 48 + 4 >> 2] = m2;
              g[j2 + 48 + 8 >> 2] = l2;
              g[j2 + 48 + 12 >> 2] = 0;
              k2 = j2 + 48 + (h2 << 2) | 0;
              g[e2 + (h2 << 2) >> 2] = f2 + +g[k2 >> 2];
              g[q2 >> 2] = -1;
              q2 = c[(c[a2 >> 2] | 0) + 64 >> 2] | 0;
              l2 = +g[j2 + 80 >> 2];
              m2 = +g[j2 + 80 + 4 >> 2];
              n2 = +g[j2 + 80 + 8 >> 2];
              o2 = l2 * +g[b2 + 4 >> 2] + m2 * +g[b2 + 20 >> 2] + n2 * +g[b2 + 36 >> 2];
              p2 = l2 * +g[b2 + 8 >> 2] + m2 * +g[b2 + 24 >> 2] + n2 * +g[b2 + 40 >> 2];
              g[j2 >> 2] = +g[b2 >> 2] * l2 + +g[b2 + 16 >> 2] * m2 + +g[b2 + 32 >> 2] * n2;
              g[j2 + 4 >> 2] = o2;
              g[j2 + 8 >> 2] = p2;
              g[j2 + 12 >> 2] = 0;
              Zb[q2 & 127](j2 + 16 | 0, a2, j2);
              p2 = +g[j2 + 16 >> 2];
              o2 = +g[j2 + 16 + 4 >> 2];
              n2 = +g[j2 + 16 + 8 >> 2];
              m2 = p2 * +g[b2 + 16 >> 2] + o2 * +g[b2 + 20 >> 2] + n2 * +g[b2 + 24 >> 2] + +g[b2 + 52 >> 2];
              l2 = p2 * +g[b2 + 32 >> 2] + o2 * +g[b2 + 36 >> 2] + n2 * +g[b2 + 40 >> 2] + +g[b2 + 56 >> 2];
              g[j2 + 48 >> 2] = p2 * +g[b2 >> 2] + o2 * +g[b2 + 4 >> 2] + n2 * +g[b2 + 8 >> 2] + +g[b2 + 48 >> 2];
              g[j2 + 48 + 4 >> 2] = m2;
              g[j2 + 48 + 8 >> 2] = l2;
              g[j2 + 48 + 12 >> 2] = 0;
              g[d2 + (h2 << 2) >> 2] = +g[k2 >> 2] - f2;
              h2 = h2 + 1 | 0;
            } while ((h2 | 0) != 3);
            i = j2;
            return;
          }
          function $k(b2) {
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0, i2 = 0, j2 = 0;
            c[b2 >> 2] = 5688;
            d2 = c[b2 + 56 >> 2] | 0;
            if (d2 | 0) {
              if (a[b2 + 60 >> 0] | 0) {
                c[5638] = (c[5638] | 0) + 1;
                rG(c[d2 + -4 >> 2] | 0);
              }
              c[b2 + 56 >> 2] = 0;
            }
            a[b2 + 60 >> 0] = 1;
            c[b2 + 56 >> 2] = 0;
            c[b2 + 48 >> 2] = 0;
            c[b2 + 52 >> 2] = 0;
            e2 = c[b2 + 28 >> 2] | 0;
            if ((e2 | 0) > 0) {
              j2 = 0;
              do {
                f2 = c[b2 + 36 >> 2] | 0;
                g2 = f2 + (j2 * 36 | 0) + 4 | 0;
                h2 = f2 + (j2 * 36 | 0) + 12 | 0;
                i2 = c[h2 >> 2] | 0;
                d2 = f2 + (j2 * 36 | 0) + 16 | 0;
                if (i2 | 0) {
                  if (a[d2 >> 0] | 0) {
                    c[5638] = (c[5638] | 0) + 1;
                    rG(c[i2 + -4 >> 2] | 0);
                  }
                  c[h2 >> 2] = 0;
                }
                a[d2 >> 0] = 1;
                c[h2 >> 2] = 0;
                c[g2 >> 2] = 0;
                c[f2 + (j2 * 36 | 0) + 8 >> 2] = 0;
                j2 = j2 + 1 | 0;
              } while ((j2 | 0) != (e2 | 0));
            }
            d2 = c[b2 + 36 >> 2] | 0;
            if (d2 | 0) {
              if (a[b2 + 40 >> 0] | 0) {
                c[5638] = (c[5638] | 0) + 1;
                rG(c[d2 + -4 >> 2] | 0);
              }
              c[b2 + 36 >> 2] = 0;
            }
            a[b2 + 40 >> 0] = 1;
            c[b2 + 36 >> 2] = 0;
            c[b2 + 28 >> 2] = 0;
            c[b2 + 32 >> 2] = 0;
            d2 = c[b2 + 16 >> 2] | 0;
            if (!d2) {
              a[b2 + 20 >> 0] = 1;
              c[b2 + 16 >> 2] = 0;
              c[b2 + 8 >> 2] = 0;
              b2 = b2 + 12 | 0;
              c[b2 >> 2] = 0;
              return;
            }
            if (a[b2 + 20 >> 0] | 0) {
              c[5638] = (c[5638] | 0) + 1;
              rG(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 16 >> 2] = 0;
            a[b2 + 20 >> 0] = 1;
            c[b2 + 16 >> 2] = 0;
            c[b2 + 8 >> 2] = 0;
            b2 = b2 + 12 | 0;
            c[b2 >> 2] = 0;
            return;
          }
          function al(a2) {
            a2 = a2 | 0;
            $k(a2);
            if (!a2)
              return;
            c[5638] = (c[5638] | 0) + 1;
            rG(c[a2 + -4 >> 2] | 0);
            return;
          }
          function bl(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0, e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0;
            i2 = c[a2 + 28 >> 2] | 0;
            e2 = 0;
            f2 = 0;
            h2 = 0;
            j2 = 0;
            a:
              while (1) {
                switch (j2 | 0) {
                  case 0: {
                    e2 = +g[a2 + 80 >> 2] + +g[a2 + 64 >> 2];
                    f2 = +g[a2 + 84 >> 2] + +g[a2 + 68 >> 2];
                    h2 = +g[a2 + 88 >> 2] + +g[a2 + 72 >> 2];
                    break;
                  }
                  case 1: {
                    e2 = +g[a2 + 80 >> 2] + +g[a2 + 64 >> 2];
                    f2 = +g[a2 + 84 >> 2] + +g[a2 + 68 >> 2];
                    h2 = +g[a2 + 72 >> 2] - +g[a2 + 88 >> 2];
                    break;
                  }
                  case 2: {
                    e2 = +g[a2 + 80 >> 2] + +g[a2 + 64 >> 2];
                    f2 = +g[a2 + 68 >> 2] - +g[a2 + 84 >> 2];
                    h2 = +g[a2 + 88 >> 2] + +g[a2 + 72 >> 2];
                    break;
                  }
                  case 3: {
                    e2 = +g[a2 + 80 >> 2] + +g[a2 + 64 >> 2];
                    f2 = +g[a2 + 68 >> 2] - +g[a2 + 84 >> 2];
                    h2 = +g[a2 + 72 >> 2] - +g[a2 + 88 >> 2];
                    break;
                  }
                  case 4: {
                    e2 = +g[a2 + 64 >> 2] - +g[a2 + 80 >> 2];
                    f2 = +g[a2 + 84 >> 2] + +g[a2 + 68 >> 2];
                    h2 = +g[a2 + 88 >> 2] + +g[a2 + 72 >> 2];
                    break;
                  }
                  case 5: {
                    e2 = +g[a2 + 64 >> 2] - +g[a2 + 80 >> 2];
                    f2 = +g[a2 + 84 >> 2] + +g[a2 + 68 >> 2];
                    h2 = +g[a2 + 72 >> 2] - +g[a2 + 88 >> 2];
                    break;
                  }
                  case 6: {
                    e2 = +g[a2 + 64 >> 2] - +g[a2 + 80 >> 2];
                    f2 = +g[a2 + 68 >> 2] - +g[a2 + 84 >> 2];
                    h2 = +g[a2 + 88 >> 2] + +g[a2 + 72 >> 2];
                    break;
                  }
                  case 7: {
                    e2 = +g[a2 + 64 >> 2] - +g[a2 + 80 >> 2];
                    f2 = +g[a2 + 68 >> 2] - +g[a2 + 84 >> 2];
                    h2 = +g[a2 + 72 >> 2] - +g[a2 + 88 >> 2];
                    break;
                  }
                  default: {
                  }
                }
                if ((i2 | 0) > 0) {
                  b2 = c[a2 + 36 >> 2] | 0;
                  d2 = 0;
                  do {
                    if (+g[b2 + (d2 * 36 | 0) + 32 >> 2] + (e2 * +g[b2 + (d2 * 36 | 0) + 20 >> 2] + f2 * +g[b2 + (d2 * 36 | 0) + 24 >> 2] + h2 * +g[b2 + (d2 * 36 | 0) + 28 >> 2]) > 0) {
                      b2 = 0;
                      d2 = 16;
                      break a;
                    }
                    d2 = d2 + 1 | 0;
                  } while ((d2 | 0) < (i2 | 0));
                }
                j2 = j2 + 1 | 0;
                if ((j2 | 0) >= 8) {
                  b2 = 1;
                  d2 = 16;
                  break;
                }
              }
            if ((d2 | 0) == 16)
              return b2 | 0;
            return 0;
          }
          function cl(a2, b2, d2, e2, f2, h2, j2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            h2 = h2 | 0;
            j2 = j2 | 0;
            var l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0;
            r2 = i;
            i = i + 16 | 0;
            g[e2 >> 2] = 34028234663852886e22;
            g[f2 >> 2] = -34028234663852886e22;
            n2 = c[a2 + 8 >> 2] | 0;
            if ((n2 | 0) > 0) {
              q2 = 0;
              do {
                t2 = c[a2 + 16 >> 2] | 0;
                s2 = +g[t2 + (q2 << 4) >> 2];
                p2 = +g[t2 + (q2 << 4) + 4 >> 2];
                o2 = +g[t2 + (q2 << 4) + 8 >> 2];
                l2 = s2 * +g[b2 >> 2] + p2 * +g[b2 + 4 >> 2] + o2 * +g[b2 + 8 >> 2] + +g[b2 + 48 >> 2];
                m2 = s2 * +g[b2 + 16 >> 2] + p2 * +g[b2 + 20 >> 2] + o2 * +g[b2 + 24 >> 2] + +g[b2 + 52 >> 2];
                o2 = s2 * +g[b2 + 32 >> 2] + p2 * +g[b2 + 36 >> 2] + o2 * +g[b2 + 40 >> 2] + +g[b2 + 56 >> 2];
                p2 = l2 * +g[d2 >> 2] + m2 * +g[d2 + 4 >> 2] + o2 * +g[d2 + 8 >> 2];
                if (p2 < +g[e2 >> 2]) {
                  g[e2 >> 2] = p2;
                  g[h2 >> 2] = l2;
                  g[h2 + 4 >> 2] = m2;
                  g[h2 + 8 >> 2] = o2;
                  g[h2 + 12 >> 2] = 0;
                }
                if (p2 > +g[f2 >> 2]) {
                  g[f2 >> 2] = p2;
                  g[j2 >> 2] = l2;
                  g[j2 + 4 >> 2] = m2;
                  g[j2 + 8 >> 2] = o2;
                  g[j2 + 12 >> 2] = 0;
                }
                q2 = q2 + 1 | 0;
              } while ((q2 | 0) != (n2 | 0));
              s2 = +g[f2 >> 2];
              m2 = s2;
              n2 = (g[k >> 2] = s2, c[k >> 2] | 0);
            } else {
              m2 = -34028234663852886e22;
              n2 = -8388609;
            }
            l2 = +g[e2 >> 2];
            if (!(l2 > m2)) {
              i = r2;
              return;
            }
            c[e2 >> 2] = n2;
            g[f2 >> 2] = l2;
            c[r2 >> 2] = c[h2 >> 2];
            c[r2 + 4 >> 2] = c[h2 + 4 >> 2];
            c[r2 + 8 >> 2] = c[h2 + 8 >> 2];
            c[r2 + 12 >> 2] = c[h2 + 12 >> 2];
            c[h2 >> 2] = c[j2 >> 2];
            c[h2 + 4 >> 2] = c[j2 + 4 >> 2];
            c[h2 + 8 >> 2] = c[j2 + 8 >> 2];
            c[h2 + 12 >> 2] = c[j2 + 12 >> 2];
            c[j2 >> 2] = c[r2 >> 2];
            c[j2 + 4 >> 2] = c[r2 + 4 >> 2];
            c[j2 + 8 >> 2] = c[r2 + 8 >> 2];
            c[j2 + 12 >> 2] = c[r2 + 12 >> 2];
            i = r2;
            return;
          }
          function dl(a2) {
            a2 = a2 | 0;
            return;
          }
          function el(a2, b2, d2, e2, f2, h2, j2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            h2 = h2 | 0;
            j2 = j2 | 0;
            var k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0;
            s2 = i;
            i = i + 64 | 0;
            q2 = +g[d2 >> 2];
            p2 = +g[d2 + 4 >> 2];
            r2 = +g[d2 + 8 >> 2];
            k2 = q2 * +g[b2 + 4 >> 2] + p2 * +g[b2 + 20 >> 2] + r2 * +g[b2 + 36 >> 2];
            l2 = q2 * +g[b2 + 8 >> 2] + p2 * +g[b2 + 24 >> 2] + r2 * +g[b2 + 40 >> 2];
            g[s2 + 48 >> 2] = +g[b2 >> 2] * q2 + +g[b2 + 16 >> 2] * p2 + +g[b2 + 32 >> 2] * r2;
            g[s2 + 48 + 4 >> 2] = k2;
            g[s2 + 48 + 8 >> 2] = l2;
            g[s2 + 48 + 12 >> 2] = 0;
            Zb[c[(c[a2 >> 2] | 0) + 64 >> 2] & 127](s2 + 32 | 0, a2, s2 + 48 | 0);
            l2 = +g[s2 + 32 >> 2];
            k2 = +g[s2 + 32 + 4 >> 2];
            r2 = +g[s2 + 32 + 8 >> 2];
            p2 = l2 * +g[b2 >> 2] + k2 * +g[b2 + 4 >> 2] + r2 * +g[b2 + 8 >> 2] + +g[b2 + 48 >> 2];
            q2 = l2 * +g[b2 + 16 >> 2] + k2 * +g[b2 + 20 >> 2] + r2 * +g[b2 + 24 >> 2] + +g[b2 + 52 >> 2];
            r2 = l2 * +g[b2 + 32 >> 2] + k2 * +g[b2 + 36 >> 2] + r2 * +g[b2 + 40 >> 2] + +g[b2 + 56 >> 2];
            t2 = c[(c[a2 >> 2] | 0) + 64 >> 2] | 0;
            k2 = -+g[s2 + 48 + 4 >> 2];
            l2 = -+g[s2 + 48 + 8 >> 2];
            g[s2 >> 2] = -+g[s2 + 48 >> 2];
            g[s2 + 4 >> 2] = k2;
            g[s2 + 8 >> 2] = l2;
            g[s2 + 12 >> 2] = 0;
            Zb[t2 & 127](s2 + 16 | 0, a2, s2);
            l2 = +g[s2 + 16 >> 2];
            k2 = +g[s2 + 16 + 4 >> 2];
            m2 = +g[s2 + 16 + 8 >> 2];
            n2 = l2 * +g[b2 >> 2] + k2 * +g[b2 + 4 >> 2] + m2 * +g[b2 + 8 >> 2] + +g[b2 + 48 >> 2];
            o2 = l2 * +g[b2 + 16 >> 2] + k2 * +g[b2 + 20 >> 2] + m2 * +g[b2 + 24 >> 2] + +g[b2 + 52 >> 2];
            m2 = l2 * +g[b2 + 32 >> 2] + k2 * +g[b2 + 36 >> 2] + m2 * +g[b2 + 40 >> 2] + +g[b2 + 56 >> 2];
            g[e2 >> 2] = p2 * +g[d2 >> 2] + q2 * +g[d2 + 4 >> 2] + r2 * +g[d2 + 8 >> 2];
            g[f2 >> 2] = n2 * +g[d2 >> 2] + o2 * +g[d2 + 4 >> 2] + m2 * +g[d2 + 8 >> 2];
            g[j2 >> 2] = n2;
            g[j2 + 4 >> 2] = o2;
            g[j2 + 8 >> 2] = m2;
            g[j2 + 12 >> 2] = 0;
            g[h2 >> 2] = p2;
            g[h2 + 4 >> 2] = q2;
            g[h2 + 8 >> 2] = r2;
            g[h2 + 12 >> 2] = 0;
            k2 = +g[e2 >> 2];
            l2 = +g[f2 >> 2];
            if (!(k2 > l2)) {
              i = s2;
              return;
            }
            g[e2 >> 2] = l2;
            g[f2 >> 2] = k2;
            g[j2 >> 2] = p2;
            g[j2 + 4 >> 2] = q2;
            g[j2 + 8 >> 2] = r2;
            g[j2 + 12 >> 2] = 0;
            g[h2 >> 2] = n2;
            g[h2 + 4 >> 2] = o2;
            g[h2 + 8 >> 2] = m2;
            g[h2 + 12 >> 2] = 0;
            i = s2;
            return;
          }
          function fl(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, h2 = 0, j2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0;
            z2 = i;
            i = i + 48 | 0;
            switch (c[b2 + 4 >> 2] | 0) {
              case 8: {
                c[a2 >> 2] = 0;
                c[a2 + 4 >> 2] = 0;
                c[a2 + 8 >> 2] = 0;
                c[a2 + 12 >> 2] = 0;
                i = z2;
                return;
              }
              case 0: {
                w2 = +g[b2 + 32 >> 2];
                x2 = +g[b2 + 36 >> 2];
                x2 = +g[d2 + 4 >> 2] >= 0 ? x2 : -x2;
                y2 = +g[b2 + 40 >> 2];
                y2 = +g[d2 + 8 >> 2] >= 0 ? y2 : -y2;
                g[a2 >> 2] = +g[d2 >> 2] >= 0 ? w2 : -w2;
                g[a2 + 4 >> 2] = x2;
                g[a2 + 8 >> 2] = y2;
                g[a2 + 12 >> 2] = 0;
                i = z2;
                return;
              }
              case 1: {
                u2 = +g[d2 >> 2];
                v2 = +g[d2 + 4 >> 2];
                y2 = +g[d2 + 8 >> 2];
                x2 = u2 * +g[b2 + 60 >> 2] + v2 * +g[b2 + 60 + 4 >> 2] + y2 * +g[b2 + 60 + 8 >> 2];
                w2 = u2 * +g[b2 + 60 + 16 >> 2] + v2 * +g[b2 + 60 + 20 >> 2] + y2 * +g[b2 + 60 + 24 >> 2];
                y2 = u2 * +g[b2 + 60 + 32 >> 2] + v2 * +g[b2 + 60 + 36 >> 2] + y2 * +g[b2 + 60 + 40 >> 2];
                d2 = x2 < w2 ? w2 < y2 ? 2 : 1 : x2 < y2 ? 2 : 0;
                o2 = c[b2 + 60 + (d2 << 4) + 4 >> 2] | 0;
                r2 = c[b2 + 60 + (d2 << 4) + 8 >> 2] | 0;
                c[a2 >> 2] = c[b2 + 60 + (d2 << 4) >> 2];
                c[a2 + 4 >> 2] = o2;
                c[a2 + 8 >> 2] = r2;
                g[a2 + 12 >> 2] = 0;
                i = z2;
                return;
              }
              case 13: {
                c[z2 + 32 >> 2] = c[b2 + 32 >> 2];
                c[z2 + 32 + 4 >> 2] = c[b2 + 32 + 4 >> 2];
                c[z2 + 32 + 8 >> 2] = c[b2 + 32 + 8 >> 2];
                c[z2 + 32 + 12 >> 2] = c[b2 + 32 + 12 >> 2];
                c[z2 + 16 >> 2] = c[d2 >> 2];
                f2 = c[d2 + 4 >> 2] | 0;
                c[z2 + 16 + 4 >> 2] = f2;
                r2 = c[d2 + 8 >> 2] | 0;
                c[z2 + 16 + 8 >> 2] = r2;
                g[z2 + 16 + 12 >> 2] = 0;
                d2 = c[b2 + 56 >> 2] | 0;
                e2 = (c[k >> 2] = r2, +g[k >> 2]);
                switch (d2 | 0) {
                  case 2: {
                    e2 = (c[k >> 2] = f2, +g[k >> 2]);
                    f2 = 0;
                    b2 = 2;
                    o2 = 1;
                    break;
                  }
                  case 1: {
                    f2 = 0;
                    b2 = 1;
                    o2 = 2;
                    break;
                  }
                  default: {
                    f2 = 1;
                    b2 = 0;
                    o2 = 2;
                  }
                }
                n2 = +g[z2 + 32 + (f2 << 2) >> 2];
                l2 = +g[z2 + 32 + (d2 << 2) >> 2];
                m2 = +g[z2 + 16 + (f2 << 2) >> 2];
                h2 = +O(+(m2 * m2 + e2 * e2));
                j2 = +g[z2 + 16 + (b2 << 2) >> 2];
                if (h2 != 0) {
                  g[z2 + (f2 << 2) >> 2] = m2 * (n2 / h2);
                  g[z2 + (b2 << 2) >> 2] = j2 < 0 ? -l2 : l2;
                  g[z2 + (o2 << 2) >> 2] = n2 / h2 * e2;
                  c[a2 >> 2] = c[z2 >> 2];
                  c[a2 + 4 >> 2] = c[z2 + 4 >> 2];
                  c[a2 + 8 >> 2] = c[z2 + 8 >> 2];
                } else {
                  g[z2 + (f2 << 2) >> 2] = n2;
                  g[z2 + (b2 << 2) >> 2] = j2 < 0 ? -l2 : l2;
                  g[z2 + (o2 << 2) >> 2] = 0;
                  c[a2 >> 2] = c[z2 >> 2];
                  c[a2 + 4 >> 2] = c[z2 + 4 >> 2];
                  c[a2 + 8 >> 2] = c[z2 + 8 >> 2];
                }
                g[a2 + 12 >> 2] = 0;
                i = z2;
                return;
              }
              case 10: {
                e2 = +g[d2 >> 2];
                h2 = +g[d2 + 4 >> 2];
                j2 = +g[d2 + 8 >> 2];
                o2 = c[b2 + 56 >> 2] | 0;
                v2 = +g[b2 + 32 + (o2 << 2) >> 2];
                l2 = +g[b2 + 32 + (((o2 + 2 | 0) % 3 | 0) << 2) >> 2];
                if (e2 * e2 + h2 * h2 + j2 * j2 < 9999999747378752e-20) {
                  y2 = 1;
                  x2 = 0;
                  w2 = 0;
                } else {
                  w2 = 1 / +O(+(e2 * e2 + h2 * h2 + j2 * j2));
                  y2 = e2 * w2;
                  x2 = h2 * w2;
                  w2 = j2 * w2;
                }
                c[z2 + 32 >> 2] = 0;
                c[z2 + 32 + 4 >> 2] = 0;
                c[z2 + 32 + 8 >> 2] = 0;
                c[z2 + 32 + 12 >> 2] = 0;
                g[z2 + 32 + (o2 << 2) >> 2] = v2;
                q2 = l2 * y2;
                t2 = l2 * x2;
                u2 = l2 * w2;
                s2 = +g[b2 + 48 >> 2];
                m2 = y2 * s2;
                p2 = x2 * s2;
                s2 = w2 * s2;
                e2 = q2 + +g[z2 + 32 >> 2] - m2;
                h2 = t2 + +g[z2 + 32 + 4 >> 2] - p2;
                l2 = u2 + +g[z2 + 32 + 8 >> 2] - s2;
                j2 = w2 * l2 + (y2 * e2 + x2 * h2);
                if (j2 > -999999984306749400) {
                  b2 = (g[k >> 2] = e2, c[k >> 2] | 0);
                  f2 = (g[k >> 2] = h2, c[k >> 2] | 0);
                  n2 = j2;
                  d2 = (g[k >> 2] = l2, c[k >> 2] | 0);
                } else {
                  n2 = -999999984306749400;
                  b2 = 0;
                  d2 = 0;
                  f2 = 0;
                }
                c[z2 + 32 >> 2] = 0;
                c[z2 + 32 + 4 >> 2] = 0;
                c[z2 + 32 + 8 >> 2] = 0;
                c[z2 + 32 + 12 >> 2] = 0;
                g[z2 + 32 + (o2 << 2) >> 2] = -v2;
                j2 = q2 + +g[z2 + 32 >> 2] - m2;
                h2 = t2 + +g[z2 + 32 + 4 >> 2] - p2;
                e2 = u2 + +g[z2 + 32 + 8 >> 2] - s2;
                if (w2 * e2 + (y2 * j2 + x2 * h2) > n2) {
                  b2 = (g[k >> 2] = j2, c[k >> 2] | 0);
                  f2 = (g[k >> 2] = h2, c[k >> 2] | 0);
                  d2 = (g[k >> 2] = e2, c[k >> 2] | 0);
                }
                c[a2 >> 2] = b2;
                c[a2 + 4 >> 2] = f2;
                c[a2 + 8 >> 2] = d2;
                g[a2 + 12 >> 2] = 0;
                i = z2;
                return;
              }
              case 5: {
                r2 = c[b2 + 96 >> 2] | 0;
                o2 = c[b2 + 100 >> 2] | 0;
                p2 = +g[b2 + 16 >> 2];
                q2 = +g[b2 + 20 >> 2];
                n2 = +g[b2 + 24 >> 2];
                l2 = +g[d2 >> 2] * p2;
                m2 = +g[d2 + 4 >> 2] * q2;
                e2 = +g[d2 + 8 >> 2] * n2;
                if ((o2 | 0) > 0) {
                  b2 = 0;
                  j2 = -34028234663852886e22;
                  f2 = -1;
                  while (1) {
                    h2 = l2 * +g[r2 + (b2 << 4) >> 2] + m2 * +g[r2 + (b2 << 4) + 4 >> 2] + e2 * +g[r2 + (b2 << 4) + 8 >> 2];
                    d2 = h2 > j2;
                    f2 = d2 ? b2 : f2;
                    b2 = b2 + 1 | 0;
                    if ((b2 | 0) == (o2 | 0))
                      break;
                    else
                      j2 = d2 ? h2 : j2;
                  }
                } else
                  f2 = -1;
                x2 = q2 * +g[r2 + (f2 << 4) + 4 >> 2];
                y2 = n2 * +g[r2 + (f2 << 4) + 8 >> 2];
                g[a2 >> 2] = p2 * +g[r2 + (f2 << 4) >> 2];
                g[a2 + 4 >> 2] = x2;
                g[a2 + 8 >> 2] = y2;
                g[a2 + 12 >> 2] = 0;
                i = z2;
                return;
              }
              case 4: {
                r2 = c[b2 + 108 >> 2] | 0;
                o2 = c[b2 + 100 >> 2] | 0;
                p2 = +g[b2 + 16 >> 2];
                q2 = +g[b2 + 20 >> 2];
                n2 = +g[b2 + 24 >> 2];
                l2 = +g[d2 >> 2] * p2;
                m2 = +g[d2 + 4 >> 2] * q2;
                e2 = +g[d2 + 8 >> 2] * n2;
                if ((o2 | 0) > 0) {
                  b2 = 0;
                  j2 = -34028234663852886e22;
                  f2 = -1;
                  while (1) {
                    h2 = l2 * +g[r2 + (b2 << 4) >> 2] + m2 * +g[r2 + (b2 << 4) + 4 >> 2] + e2 * +g[r2 + (b2 << 4) + 8 >> 2];
                    d2 = h2 > j2;
                    f2 = d2 ? b2 : f2;
                    b2 = b2 + 1 | 0;
                    if ((b2 | 0) == (o2 | 0))
                      break;
                    else
                      j2 = d2 ? h2 : j2;
                  }
                } else
                  f2 = -1;
                x2 = q2 * +g[r2 + (f2 << 4) + 4 >> 2];
                y2 = n2 * +g[r2 + (f2 << 4) + 8 >> 2];
                g[a2 >> 2] = p2 * +g[r2 + (f2 << 4) >> 2];
                g[a2 + 4 >> 2] = x2;
                g[a2 + 8 >> 2] = y2;
                g[a2 + 12 >> 2] = 0;
                i = z2;
                return;
              }
              default: {
                Zb[c[(c[b2 >> 2] | 0) + 68 >> 2] & 127](a2, b2, d2);
                i = z2;
                return;
              }
            }
          }
          function gl(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, h2 = 0, j2 = 0, k2 = 0;
            j2 = i;
            i = i + 32 | 0;
            c[j2 + 16 >> 2] = c[d2 >> 2];
            c[j2 + 16 + 4 >> 2] = c[d2 + 4 >> 2];
            c[j2 + 16 + 8 >> 2] = c[d2 + 8 >> 2];
            c[j2 + 16 + 12 >> 2] = c[d2 + 12 >> 2];
            e2 = +g[j2 + 16 >> 2];
            h2 = +g[j2 + 16 + 4 >> 2];
            f2 = +g[j2 + 16 + 8 >> 2];
            if (e2 * e2 + h2 * h2 + f2 * f2 < 14210854715202004e-30) {
              c[j2 + 16 >> 2] = -1082130432;
              c[j2 + 16 + 4 >> 2] = -1082130432;
              c[j2 + 16 + 8 >> 2] = -1082130432;
              g[j2 + 16 + 12 >> 2] = 0;
              e2 = -1;
              h2 = -1;
              f2 = -1;
            }
            k2 = 1 / +O(+(e2 * e2 + h2 * h2 + f2 * f2));
            g[j2 + 16 >> 2] = e2 * k2;
            g[j2 + 16 + 4 >> 2] = h2 * k2;
            g[j2 + 16 + 8 >> 2] = f2 * k2;
            fl(j2, b2, j2 + 16 | 0);
            switch (c[b2 + 4 >> 2] | 0) {
              case 8: {
                e2 = +g[b2 + 32 >> 2] * +g[b2 + 16 >> 2];
                break;
              }
              case 0: {
                e2 = +g[b2 + 48 >> 2];
                break;
              }
              case 1: {
                e2 = +g[b2 + 48 >> 2];
                break;
              }
              case 13: {
                e2 = +g[b2 + 48 >> 2];
                break;
              }
              case 11: {
                e2 = +g[b2 + 48 >> 2];
                break;
              }
              case 10: {
                e2 = +g[b2 + 48 >> 2];
                break;
              }
              case 4:
              case 5: {
                e2 = +g[b2 + 48 >> 2];
                break;
              }
              default:
                e2 = +Hb[c[(c[b2 >> 2] | 0) + 48 >> 2] & 15](b2);
            }
            h2 = e2 * +g[j2 + 16 + 4 >> 2] + +g[j2 + 4 >> 2];
            k2 = e2 * +g[j2 + 16 + 8 >> 2] + +g[j2 + 8 >> 2];
            g[a2 >> 2] = e2 * +g[j2 + 16 >> 2] + +g[j2 >> 2];
            g[a2 + 4 >> 2] = h2;
            g[a2 + 8 >> 2] = k2;
            g[a2 + 12 >> 2] = 0;
            i = j2;
            return;
          }
          function hl(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0;
            c[a2 >> 2] = 6248;
            b2 = c[a2 + 56 >> 2] | 0;
            if (b2 | 0 ? (rb[c[c[b2 >> 2] >> 2] & 255](b2), d2 = c[a2 + 56 >> 2] | 0, d2 | 0) : 0) {
              c[5638] = (c[5638] | 0) + 1;
              rG(c[d2 + -4 >> 2] | 0);
            }
            c[5638] = (c[5638] | 0) + 1;
            rG(c[a2 + -4 >> 2] | 0);
            return;
          }
          function il(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0;
            d2 = (c[a2 + 96 >> 2] | 0) + 4 | 0;
            c[d2 >> 2] = c[b2 >> 2];
            c[d2 + 4 >> 2] = c[b2 + 4 >> 2];
            c[d2 + 8 >> 2] = c[b2 + 8 >> 2];
            c[d2 + 12 >> 2] = c[b2 + 12 >> 2];
            mm(a2);
            return;
          }
          function jl(a2) {
            a2 = a2 | 0;
            return (c[a2 + 96 >> 2] | 0) + 4 | 0;
          }
          function kl(a2) {
            a2 = a2 | 0;
            return 13526;
          }
          function ll(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0;
            Zb[c[(c[b2 >> 2] | 0) + 68 >> 2] & 127](a2, b2, d2);
            if (!(+Hb[c[(c[b2 >> 2] | 0) + 48 >> 2] & 15](b2) != 0))
              return;
            h2 = +g[d2 >> 2];
            f2 = +g[d2 + 4 >> 2];
            e2 = +g[d2 + 8 >> 2];
            j2 = h2 * h2 + f2 * f2 + e2 * e2 < 14210854715202004e-30 ? -1 : h2;
            i2 = h2 * h2 + f2 * f2 + e2 * e2 < 14210854715202004e-30 ? -1 : f2;
            e2 = h2 * h2 + f2 * f2 + e2 * e2 < 14210854715202004e-30 ? -1 : e2;
            f2 = 1 / +O(+(e2 * e2 + (j2 * j2 + i2 * i2)));
            h2 = +Hb[c[(c[b2 >> 2] | 0) + 48 >> 2] & 15](b2);
            g[a2 >> 2] = +g[a2 >> 2] + h2 * (f2 * j2);
            g[a2 + 4 >> 2] = h2 * (f2 * i2) + +g[a2 + 4 >> 2];
            g[a2 + 8 >> 2] = h2 * (f2 * e2) + +g[a2 + 8 >> 2];
            return;
          }
          function ml(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, h2 = 0, j2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0;
            m2 = i;
            i = i + 80 | 0;
            c[a2 >> 2] = 0;
            c[a2 + 4 >> 2] = 0;
            c[a2 + 8 >> 2] = 0;
            c[a2 + 12 >> 2] = 0;
            e2 = +g[d2 >> 2];
            f2 = +g[d2 + 4 >> 2];
            h2 = +g[d2 + 8 >> 2];
            if (e2 * e2 + f2 * f2 + h2 * h2 < 9999999747378752e-20) {
              l2 = 1065353216;
              j2 = 0;
              e2 = 0;
              d2 = 0;
            } else {
              o2 = 1 / +O(+(e2 * e2 + f2 * f2 + h2 * h2));
              l2 = (g[k >> 2] = e2 * o2, c[k >> 2] | 0);
              n2 = (g[k >> 2] = f2 * o2, c[k >> 2] | 0);
              j2 = (g[k >> 2] = h2 * o2, c[k >> 2] | 0);
              e2 = +g[d2 + 12 >> 2];
              d2 = n2;
            }
            c[m2 + 32 >> 2] = 5836;
            n2 = m2 + 32 + 4 | 0;
            c[n2 >> 2] = 0;
            c[n2 + 4 >> 2] = 0;
            c[n2 + 8 >> 2] = 0;
            c[n2 + 12 >> 2] = 0;
            g[m2 + 32 + 20 >> 2] = -999999984306749400;
            c[m2 + 32 + 24 >> 2] = l2;
            c[m2 + 32 + 28 >> 2] = d2;
            c[m2 + 32 + 32 >> 2] = j2;
            g[m2 + 32 + 36 >> 2] = e2;
            c[m2 + 16 >> 2] = 1566444395;
            c[m2 + 16 + 4 >> 2] = 1566444395;
            c[m2 + 16 + 8 >> 2] = 1566444395;
            g[m2 + 16 + 12 >> 2] = 0;
            b2 = c[b2 + 96 >> 2] | 0;
            l2 = c[(c[b2 >> 2] | 0) + 8 >> 2] | 0;
            g[m2 >> 2] = -999999984306749400;
            g[m2 + 4 >> 2] = -999999984306749400;
            g[m2 + 8 >> 2] = -999999984306749400;
            g[m2 + 12 >> 2] = 0;
            bc[l2 & 127](b2, m2 + 32 | 0, m2, m2 + 16 | 0);
            c[a2 >> 2] = c[n2 >> 2];
            c[a2 + 4 >> 2] = c[n2 + 4 >> 2];
            c[a2 + 8 >> 2] = c[n2 + 8 >> 2];
            c[a2 + 12 >> 2] = c[n2 + 12 >> 2];
            i = m2;
            return;
          }
          function nl(a2) {
            a2 = a2 | 0;
            rG(a2);
            return;
          }
          function ol(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0;
            j2 = +g[a2 + 24 >> 2];
            k2 = +g[a2 + 28 >> 2];
            i2 = +g[a2 + 32 >> 2];
            f2 = j2 * +g[b2 >> 2] + k2 * +g[b2 + 4 >> 2] + i2 * +g[b2 + 8 >> 2];
            h2 = +g[a2 + 20 >> 2];
            if (f2 > h2) {
              g[a2 + 20 >> 2] = f2;
              c[a2 + 4 >> 2] = c[b2 >> 2];
              c[a2 + 4 + 4 >> 2] = c[b2 + 4 >> 2];
              c[a2 + 4 + 8 >> 2] = c[b2 + 8 >> 2];
              c[a2 + 4 + 12 >> 2] = c[b2 + 12 >> 2];
            } else
              f2 = h2;
            h2 = j2 * +g[b2 + 16 >> 2] + k2 * +g[b2 + 20 >> 2] + i2 * +g[b2 + 24 >> 2];
            if (h2 > f2) {
              g[a2 + 20 >> 2] = h2;
              c[a2 + 4 >> 2] = c[b2 + 16 >> 2];
              c[a2 + 4 + 4 >> 2] = c[b2 + 16 + 4 >> 2];
              c[a2 + 4 + 8 >> 2] = c[b2 + 16 + 8 >> 2];
              c[a2 + 4 + 12 >> 2] = c[b2 + 16 + 12 >> 2];
            } else
              h2 = f2;
            f2 = j2 * +g[b2 + 32 >> 2] + k2 * +g[b2 + 36 >> 2] + i2 * +g[b2 + 40 >> 2];
            if (!(f2 > h2))
              return;
            g[a2 + 20 >> 2] = f2;
            c[a2 + 4 >> 2] = c[b2 + 32 >> 2];
            c[a2 + 4 + 4 >> 2] = c[b2 + 32 + 4 >> 2];
            c[a2 + 4 + 8 >> 2] = c[b2 + 32 + 8 >> 2];
            c[a2 + 4 + 12 >> 2] = c[b2 + 32 + 12 >> 2];
            return;
          }
          function pl(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0;
            j2 = i;
            i = i + 80 | 0;
            if ((e2 | 0) > 0)
              f2 = 0;
            else {
              i = j2;
              return;
            }
            do {
              g[d2 + (f2 << 4) + 12 >> 2] = -999999984306749400;
              f2 = f2 + 1 | 0;
            } while ((f2 | 0) != (e2 | 0));
            f2 = j2 + 32 + 4 | 0;
            h2 = 0;
            do {
              k2 = b2 + (h2 << 4) | 0;
              c[j2 + 32 >> 2] = 5836;
              c[f2 >> 2] = 0;
              c[f2 + 4 >> 2] = 0;
              c[f2 + 8 >> 2] = 0;
              c[f2 + 12 >> 2] = 0;
              g[j2 + 32 + 20 >> 2] = -999999984306749400;
              c[j2 + 32 + 24 >> 2] = c[k2 >> 2];
              c[j2 + 32 + 24 + 4 >> 2] = c[k2 + 4 >> 2];
              c[j2 + 32 + 24 + 8 >> 2] = c[k2 + 8 >> 2];
              c[j2 + 32 + 24 + 12 >> 2] = c[k2 + 12 >> 2];
              c[j2 + 16 >> 2] = 1566444395;
              c[j2 + 16 + 4 >> 2] = 1566444395;
              c[j2 + 16 + 8 >> 2] = 1566444395;
              g[j2 + 16 + 12 >> 2] = 0;
              k2 = c[a2 + 96 >> 2] | 0;
              l2 = c[(c[k2 >> 2] | 0) + 8 >> 2] | 0;
              g[j2 >> 2] = -999999984306749400;
              g[j2 + 4 >> 2] = -999999984306749400;
              g[j2 + 8 >> 2] = -999999984306749400;
              g[j2 + 12 >> 2] = 0;
              bc[l2 & 127](k2, j2 + 32 | 0, j2, j2 + 16 | 0);
              k2 = d2 + (h2 << 4) | 0;
              c[k2 >> 2] = c[f2 >> 2];
              c[k2 + 4 >> 2] = c[f2 + 4 >> 2];
              c[k2 + 8 >> 2] = c[f2 + 8 >> 2];
              c[k2 + 12 >> 2] = c[f2 + 12 >> 2];
              h2 = h2 + 1 | 0;
            } while ((h2 | 0) < (e2 | 0));
            i = j2;
            return;
          }
          function ql(a2) {
            a2 = a2 | 0;
            return 0;
          }
          function rl(a2) {
            a2 = a2 | 0;
            return 0;
          }
          function sl(a2, b2, c2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = d2 | 0;
            return;
          }
          function tl(a2, b2, c2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            return;
          }
          function ul(a2) {
            a2 = a2 | 0;
            return 0;
          }
          function vl(a2, b2, c2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = d2 | 0;
            return;
          }
          function wl(a2, b2, c2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = +c2;
            return 0;
          }
          function xl(b2, d2, e2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            c[b2 + 8 >> 2] = 0;
            c[b2 + 12 >> 2] = -1;
            c[b2 + 16 >> 2] = 1065353216;
            c[b2 + 20 >> 2] = 1065353216;
            c[b2 + 24 >> 2] = 1065353216;
            g[b2 + 28 >> 2] = 0;
            g[b2 + 48 >> 2] = 0.03999999910593033;
            c[b2 + 56 >> 2] = 0;
            c[b2 + 60 >> 2] = 1065353216;
            c[b2 + 64 >> 2] = 1065353216;
            c[b2 + 68 >> 2] = 1065353216;
            g[b2 + 72 >> 2] = 0;
            c[b2 + 76 >> 2] = -1082130432;
            c[b2 + 80 >> 2] = -1082130432;
            c[b2 + 84 >> 2] = -1082130432;
            g[b2 + 88 >> 2] = 0;
            a[b2 + 92 >> 0] = 0;
            c[b2 >> 2] = 5704;
            c[b2 + 96 >> 2] = d2;
            c[b2 + 4 >> 2] = 3;
            if (!e2)
              return;
            mm(b2);
            return;
          }
          function yl(a2) {
            a2 = a2 | 0;
            if (!a2)
              return;
            c[5638] = (c[5638] | 0) + 1;
            rG(c[a2 + -4 >> 2] | 0);
            return;
          }
          function zl(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0;
            i2 = +Hb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
            m2 = i2 + +g[a2 + 32 >> 2];
            k2 = i2 + +g[a2 + 36 >> 2];
            i2 = i2 + +g[a2 + 40 >> 2];
            u2 = +N(+ +g[b2 >> 2]);
            t2 = +N(+ +g[b2 + 4 >> 2]);
            s2 = +N(+ +g[b2 + 8 >> 2]);
            q2 = +N(+ +g[b2 + 16 >> 2]);
            p2 = +N(+ +g[b2 + 20 >> 2]);
            o2 = +N(+ +g[b2 + 24 >> 2]);
            l2 = +N(+ +g[b2 + 32 >> 2]);
            j2 = +N(+ +g[b2 + 36 >> 2]);
            h2 = +N(+ +g[b2 + 40 >> 2]);
            r2 = +g[b2 + 48 >> 2];
            n2 = +g[b2 + 52 >> 2];
            f2 = +g[b2 + 56 >> 2];
            g[d2 >> 2] = r2 - (m2 * u2 + k2 * t2 + i2 * s2);
            g[d2 + 4 >> 2] = n2 - (m2 * q2 + k2 * p2 + i2 * o2);
            g[d2 + 8 >> 2] = f2 - (m2 * l2 + k2 * j2 + i2 * h2);
            g[d2 + 12 >> 2] = 0;
            g[e2 >> 2] = m2 * u2 + k2 * t2 + i2 * s2 + r2;
            g[e2 + 4 >> 2] = m2 * q2 + k2 * p2 + i2 * o2 + n2;
            g[e2 + 8 >> 2] = m2 * l2 + k2 * j2 + i2 * h2 + f2;
            g[e2 + 12 >> 2] = 0;
            return;
          }
          function Al(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0;
            k2 = +Hb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
            h2 = +Hb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
            d2 = +Hb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
            m2 = (k2 + +g[a2 + 32 >> 2]) / +g[a2 + 16 >> 2];
            j2 = (h2 + +g[a2 + 36 >> 2]) / +g[a2 + 20 >> 2];
            f2 = (d2 + +g[a2 + 40 >> 2]) / +g[a2 + 24 >> 2];
            l2 = +N(+ +g[b2 >> 2]);
            i2 = +N(+ +g[b2 + 4 >> 2]);
            e2 = +N(+ +g[b2 + 8 >> 2]);
            g[a2 + 16 >> 2] = l2;
            g[a2 + 20 >> 2] = i2;
            g[a2 + 24 >> 2] = e2;
            g[a2 + 28 >> 2] = 0;
            g[a2 + 32 >> 2] = m2 * l2 - k2;
            g[a2 + 36 >> 2] = j2 * i2 - h2;
            g[a2 + 40 >> 2] = f2 * e2 - d2;
            g[a2 + 44 >> 2] = 0;
            return;
          }
          function Bl(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = +b2;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0;
            e2 = +g[a2 + 32 >> 2];
            i2 = +g[a2 + 36 >> 2];
            h2 = +g[a2 + 40 >> 2];
            j2 = +Hb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
            f2 = +Hb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
            h2 = +Hb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2) + h2;
            switch (c[a2 + 56 >> 2] | 0) {
              case 0: {
                j2 = b2 * 0.25 * ((f2 + i2) * (f2 + i2)) + b2 / 12 * ((j2 + e2) * ((j2 + e2) * 4));
                g[d2 >> 2] = b2 * 0.5 * ((f2 + i2) * (f2 + i2));
                g[d2 + 4 >> 2] = j2;
                g[d2 + 8 >> 2] = j2;
                g[d2 + 12 >> 2] = 0;
                return;
              }
              case 2: {
                g[d2 >> 2] = b2 * 0.25 * ((j2 + e2) * (j2 + e2)) + b2 / 12 * (h2 * (h2 * 4));
                g[d2 + 4 >> 2] = b2 * 0.25 * ((j2 + e2) * (j2 + e2)) + b2 / 12 * (h2 * (h2 * 4));
                g[d2 + 8 >> 2] = b2 * 0.5 * ((j2 + e2) * (j2 + e2));
                g[d2 + 12 >> 2] = 0;
                return;
              }
              default: {
                i2 = b2 * 0.25 * ((j2 + e2) * (j2 + e2)) + b2 / 12 * ((f2 + i2) * ((f2 + i2) * 4));
                g[d2 >> 2] = i2;
                g[d2 + 4 >> 2] = b2 * 0.5 * ((j2 + e2) * (j2 + e2));
                g[d2 + 8 >> 2] = i2;
                g[d2 + 12 >> 2] = 0;
                return;
              }
            }
          }
          function Cl(a2) {
            a2 = a2 | 0;
            return 13587;
          }
          function Dl(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c[a2 >> 2] = 0;
            c[a2 + 4 >> 2] = 0;
            c[a2 + 8 >> 2] = 0;
            c[a2 + 12 >> 2] = 0;
            g[a2 + (c[b2 + 56 >> 2] << 2) >> 2] = 1;
            return;
          }
          function El(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            var d2 = 0, e2 = 0, f2 = 0, h2 = 0, i2 = 0;
            h2 = +Hb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
            e2 = +Hb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
            i2 = +Hb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
            h2 = h2 + +g[a2 + 32 >> 2];
            e2 = e2 + +g[a2 + 36 >> 2];
            i2 = i2 + +g[a2 + 40 >> 2];
            g[a2 + 48 >> 2] = b2;
            f2 = +Hb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
            d2 = +Hb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
            b2 = i2 - +Hb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
            g[a2 + 32 >> 2] = h2 - f2;
            g[a2 + 36 >> 2] = e2 - d2;
            g[a2 + 40 >> 2] = b2;
            g[a2 + 44 >> 2] = 0;
            return;
          }
          function Fl(a2) {
            a2 = a2 | 0;
            return 60;
          }
          function Gl(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0;
            e2 = Ob[c[(c[d2 >> 2] | 0) + 40 >> 2] & 31](d2, a2) | 0;
            f2 = Ob[c[(c[d2 >> 2] | 0) + 28 >> 2] & 31](d2, e2) | 0;
            c[b2 >> 2] = f2;
            if (f2 | 0)
              tb[c[(c[d2 >> 2] | 0) + 48 >> 2] & 127](d2, e2);
            c[b2 + 4 >> 2] = c[a2 + 4 >> 2];
            c[b2 + 28 >> 2] = c[a2 + 32 >> 2];
            c[b2 + 32 >> 2] = c[a2 + 36 >> 2];
            c[b2 + 36 >> 2] = c[a2 + 40 >> 2];
            c[b2 + 40 >> 2] = c[a2 + 44 >> 2];
            c[b2 + 12 >> 2] = c[a2 + 16 >> 2];
            c[b2 + 16 >> 2] = c[a2 + 20 >> 2];
            c[b2 + 20 >> 2] = c[a2 + 24 >> 2];
            c[b2 + 24 >> 2] = c[a2 + 28 >> 2];
            c[b2 + 44 >> 2] = c[a2 + 48 >> 2];
            c[b2 + 52 >> 2] = c[a2 + 56 >> 2];
            return 13597;
          }
          function Hl(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0;
            e2 = i;
            i = i + 16 | 0;
            Zb[c[(c[b2 >> 2] | 0) + 68 >> 2] & 127](e2, b2, d2);
            c[a2 >> 2] = c[e2 >> 2];
            c[a2 + 4 >> 2] = c[e2 + 4 >> 2];
            c[a2 + 8 >> 2] = c[e2 + 8 >> 2];
            c[a2 + 12 >> 2] = c[e2 + 12 >> 2];
            if (!(+Hb[c[(c[b2 >> 2] | 0) + 48 >> 2] & 15](b2) != 0)) {
              i = e2;
              return;
            }
            j2 = +g[d2 >> 2];
            h2 = +g[d2 + 4 >> 2];
            f2 = +g[d2 + 8 >> 2];
            l2 = j2 * j2 + h2 * h2 + f2 * f2 < 14210854715202004e-30 ? -1 : j2;
            k2 = j2 * j2 + h2 * h2 + f2 * f2 < 14210854715202004e-30 ? -1 : h2;
            f2 = j2 * j2 + h2 * h2 + f2 * f2 < 14210854715202004e-30 ? -1 : f2;
            h2 = 1 / +O(+(f2 * f2 + (l2 * l2 + k2 * k2)));
            j2 = +Hb[c[(c[b2 >> 2] | 0) + 48 >> 2] & 15](b2);
            g[a2 >> 2] = +g[a2 >> 2] + j2 * (h2 * l2);
            g[a2 + 4 >> 2] = j2 * (h2 * k2) + +g[a2 + 4 >> 2];
            g[a2 + 8 >> 2] = j2 * (h2 * f2) + +g[a2 + 8 >> 2];
            i = e2;
            return;
          }
          function Il(a2, b2, c2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0;
            d2 = +g[b2 + 32 >> 2];
            h2 = +g[b2 + 36 >> 2];
            j2 = +g[c2 >> 2];
            f2 = +g[c2 + 8 >> 2];
            i2 = +O(+(j2 * j2 + f2 * f2));
            e2 = +g[c2 + 4 >> 2];
            if (i2 != 0) {
              f2 = f2 * (d2 / i2);
              e2 = e2 < 0 ? -h2 : h2;
              d2 = j2 * (d2 / i2);
            } else {
              f2 = 0;
              e2 = e2 < 0 ? -h2 : h2;
            }
            g[a2 >> 2] = d2;
            g[a2 + 4 >> 2] = e2;
            g[a2 + 8 >> 2] = f2;
            return;
          }
          function Jl(a2, b2, c2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0;
            if ((d2 | 0) <= 0)
              return;
            m2 = 0;
            do {
              e2 = +g[a2 + 32 >> 2];
              i2 = +g[a2 + 36 >> 2];
              l2 = +g[b2 + (m2 << 4) >> 2];
              f2 = +g[b2 + (m2 << 4) + 8 >> 2];
              k2 = +O(+(l2 * l2 + f2 * f2));
              h2 = +g[b2 + (m2 << 4) + 4 >> 2];
              if (k2 != 0) {
                j2 = f2 * (e2 / k2);
                f2 = h2 < 0 ? -i2 : i2;
                e2 = l2 * (e2 / k2);
              } else {
                j2 = 0;
                f2 = h2 < 0 ? -i2 : i2;
              }
              g[c2 + (m2 << 4) >> 2] = e2;
              g[c2 + (m2 << 4) + 4 >> 2] = f2;
              g[c2 + (m2 << 4) + 8 >> 2] = j2;
              m2 = m2 + 1 | 0;
            } while ((m2 | 0) != (d2 | 0));
            return;
          }
          function Kl(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0;
            d2 = +g[a2 + 32 >> 2];
            b2 = +Hb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
            +Hb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
            +Hb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
            return +(d2 + b2);
          }
          function Ll(a2) {
            a2 = a2 | 0;
            if (!a2)
              return;
            c[5638] = (c[5638] | 0) + 1;
            rG(c[a2 + -4 >> 2] | 0);
            return;
          }
          function Ml(a2) {
            a2 = a2 | 0;
            return 13636;
          }
          function Nl(a2, b2, c2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0;
            d2 = +g[b2 + 36 >> 2];
            f2 = +g[b2 + 32 >> 2];
            j2 = +g[c2 + 4 >> 2];
            e2 = +g[c2 + 8 >> 2];
            i2 = +O(+(j2 * j2 + e2 * e2));
            if (i2 != 0) {
              h2 = e2 * (d2 / i2);
              e2 = +g[c2 >> 2] < 0 ? -f2 : f2;
              d2 = j2 * (d2 / i2);
            } else {
              h2 = 0;
              e2 = +g[c2 >> 2] < 0 ? -f2 : f2;
            }
            g[a2 + 4 >> 2] = d2;
            g[a2 >> 2] = e2;
            g[a2 + 8 >> 2] = h2;
            return;
          }
          function Ol(a2, b2, c2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0;
            if ((d2 | 0) <= 0)
              return;
            m2 = 0;
            do {
              e2 = +g[a2 + 36 >> 2];
              h2 = +g[a2 + 32 >> 2];
              i2 = b2 + (m2 << 4) | 0;
              l2 = +g[b2 + (m2 << 4) + 4 >> 2];
              f2 = +g[b2 + (m2 << 4) + 8 >> 2];
              k2 = +O(+(l2 * l2 + f2 * f2));
              if (k2 != 0) {
                j2 = f2 * (e2 / k2);
                f2 = +g[i2 >> 2] < 0 ? -h2 : h2;
                e2 = l2 * (e2 / k2);
              } else {
                j2 = 0;
                f2 = +g[i2 >> 2] < 0 ? -h2 : h2;
              }
              g[c2 + (m2 << 4) >> 2] = f2;
              g[c2 + (m2 << 4) + 4 >> 2] = e2;
              g[c2 + (m2 << 4) + 8 >> 2] = j2;
              m2 = m2 + 1 | 0;
            } while ((m2 | 0) != (d2 | 0));
            return;
          }
          function Pl(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0;
            d2 = +g[a2 + 36 >> 2];
            +Hb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
            b2 = +Hb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
            +Hb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
            return +(d2 + b2);
          }
          function Ql(a2) {
            a2 = a2 | 0;
            if (!a2)
              return;
            c[5638] = (c[5638] | 0) + 1;
            rG(c[a2 + -4 >> 2] | 0);
            return;
          }
          function Rl(a2) {
            a2 = a2 | 0;
            return 13665;
          }
          function Sl(a2, b2, c2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0;
            d2 = +g[b2 + 32 >> 2];
            h2 = +g[b2 + 40 >> 2];
            j2 = +g[c2 >> 2];
            f2 = +g[c2 + 4 >> 2];
            i2 = +O(+(j2 * j2 + f2 * f2));
            e2 = +g[c2 + 8 >> 2];
            if (i2 != 0) {
              f2 = f2 * (d2 / i2);
              e2 = e2 < 0 ? -h2 : h2;
              d2 = j2 * (d2 / i2);
            } else {
              f2 = 0;
              e2 = e2 < 0 ? -h2 : h2;
            }
            g[a2 >> 2] = d2;
            g[a2 + 8 >> 2] = e2;
            g[a2 + 4 >> 2] = f2;
            return;
          }
          function Tl(a2, b2, c2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0;
            if ((d2 | 0) <= 0)
              return;
            m2 = 0;
            do {
              e2 = +g[a2 + 32 >> 2];
              i2 = +g[a2 + 40 >> 2];
              l2 = +g[b2 + (m2 << 4) >> 2];
              f2 = +g[b2 + (m2 << 4) + 4 >> 2];
              k2 = +O(+(l2 * l2 + f2 * f2));
              h2 = +g[b2 + (m2 << 4) + 8 >> 2];
              if (k2 != 0) {
                j2 = f2 * (e2 / k2);
                f2 = h2 < 0 ? -i2 : i2;
                e2 = l2 * (e2 / k2);
              } else {
                j2 = 0;
                f2 = h2 < 0 ? -i2 : i2;
              }
              g[c2 + (m2 << 4) >> 2] = e2;
              g[c2 + (m2 << 4) + 4 >> 2] = j2;
              g[c2 + (m2 << 4) + 8 >> 2] = f2;
              m2 = m2 + 1 | 0;
            } while ((m2 | 0) != (d2 | 0));
            return;
          }
          function Ul(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0;
            d2 = +g[a2 + 32 >> 2];
            b2 = +Hb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
            +Hb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
            +Hb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
            return +(d2 + b2);
          }
          function Vl(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0;
            c[a2 + 4 >> 2] = 35;
            c[a2 + 8 >> 2] = 0;
            c[a2 + 12 >> 2] = -1;
            c[a2 + 16 >> 2] = 1065353216;
            c[a2 + 20 >> 2] = 1065353216;
            c[a2 + 24 >> 2] = 1065353216;
            g[a2 + 28 >> 2] = 0;
            g[a2 + 48 >> 2] = 0.03999999910593033;
            c[a2 >> 2] = 5856;
            c[a2 + 56 >> 2] = 1;
            h2 = +g[b2 >> 2];
            f2 = +g[b2 + 4 >> 2];
            d2 = +g[b2 + 8 >> 2];
            d2 = +g[b2 + ((h2 < f2 ? h2 < d2 ? 0 : 2 : f2 < d2 ? 1 : 2) << 2) >> 2] * 0.10000000149011612;
            if (d2 < 0.03999999910593033) {
              j2 = +Mg(a2);
              i2 = +Hb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
              h2 = +Hb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
              j2 = j2 + +g[a2 + 32 >> 2];
              i2 = i2 + +g[a2 + 36 >> 2];
              h2 = h2 + +g[a2 + 40 >> 2];
              g[a2 + 48 >> 2] = d2;
              d2 = +Hb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
              f2 = +Hb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
              h2 = h2 - +Hb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
              g[a2 + 32 >> 2] = j2 - d2;
              g[a2 + 36 >> 2] = i2 - f2;
              g[a2 + 40 >> 2] = h2;
              g[a2 + 44 >> 2] = 0;
              e2 = c[a2 >> 2] | 0;
            } else
              e2 = 5856;
            h2 = +Hb[c[e2 + 48 >> 2] & 15](a2);
            i2 = +Hb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
            j2 = +Hb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
            i2 = +g[b2 + 4 >> 2] * +g[a2 + 20 >> 2] - i2;
            j2 = +g[b2 + 8 >> 2] * +g[a2 + 24 >> 2] - j2;
            g[a2 + 32 >> 2] = +g[b2 >> 2] * +g[a2 + 16 >> 2] - h2;
            g[a2 + 36 >> 2] = i2;
            g[a2 + 40 >> 2] = j2;
            g[a2 + 44 >> 2] = 0;
            c[a2 + 4 >> 2] = 13;
            return;
          }
          function Wl(a2) {
            a2 = a2 | 0;
            ee(a2);
            return;
          }
          function Xl(a2) {
            a2 = a2 | 0;
            ee(a2);
            if (!a2)
              return;
            c[5638] = (c[5638] | 0) + 1;
            rG(c[a2 + -4 >> 2] | 0);
            return;
          }
          function Yl(a2, b2, c2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = d2 | 0;
            ge(a2, b2, c2, d2) | 0;
            return 1;
          }
          function Zl(d2, e2, f2, h2, j2) {
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            h2 = h2 | 0;
            j2 = j2 | 0;
            var k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0;
            A2 = i;
            i = i + 160 | 0;
            a[d2 + 60 >> 0] = f2 & 1;
            if (f2) {
              r2 = +g[h2 >> 2] + -1;
              u2 = +g[h2 + 4 >> 2] + -1;
              s2 = +g[h2 + 8 >> 2] + -1;
              g[d2 + 4 >> 2] = r2;
              g[d2 + 8 >> 2] = u2;
              g[d2 + 12 >> 2] = s2;
              g[d2 + 16 >> 2] = 0;
              v2 = +g[j2 >> 2] + 1;
              x2 = +g[j2 + 4 >> 2] + 1;
              y2 = +g[j2 + 8 >> 2] + 1;
              g[d2 + 20 >> 2] = v2;
              g[d2 + 24 >> 2] = x2;
              g[d2 + 28 >> 2] = y2;
              g[d2 + 32 >> 2] = 0;
              g[d2 + 36 >> 2] = 65533 / (v2 - r2);
              g[d2 + 40 >> 2] = 65533 / (x2 - u2);
              g[d2 + 44 >> 2] = 65533 / (y2 - s2);
              g[d2 + 48 >> 2] = 0;
              a[d2 + 60 >> 0] = 1;
              k2 = r2 + +(~~((r2 - r2) * (65533 / (v2 - r2))) & 65534) / (65533 / (v2 - r2)) + -1;
              l2 = u2 + +(~~((u2 - u2) * (65533 / (x2 - u2))) & 65534) / (65533 / (x2 - u2)) + -1;
              p2 = s2 + +(~~((s2 - s2) * (65533 / (y2 - s2))) & 65534) / (65533 / (y2 - s2)) + -1;
              if (k2 < r2) {
                g[d2 + 4 >> 2] = k2;
                z2 = k2;
              } else
                z2 = r2;
              if (l2 < u2) {
                g[d2 + 8 >> 2] = l2;
                w2 = l2;
              } else
                w2 = u2;
              if (p2 < s2) {
                g[d2 + 12 >> 2] = p2;
                t2 = p2;
              } else
                t2 = s2;
              p2 = z2 + +((~~((v2 - z2) * (65533 / (v2 - r2)) + 1) & 65535 | 1) & 65535) / (65533 / (v2 - r2)) + 1;
              l2 = w2 + +((~~((x2 - w2) * (65533 / (x2 - u2)) + 1) & 65535 | 1) & 65535) / (65533 / (x2 - u2)) + 1;
              k2 = t2 + +((~~((y2 - t2) * (65533 / (y2 - s2)) + 1) & 65535 | 1) & 65535) / (65533 / (y2 - s2)) + 1;
              if (v2 < p2)
                g[d2 + 20 >> 2] = p2;
              else
                p2 = v2;
              if (x2 < l2)
                g[d2 + 24 >> 2] = l2;
              else
                l2 = x2;
              if (y2 < k2)
                g[d2 + 28 >> 2] = k2;
              else
                k2 = y2;
              g[d2 + 36 >> 2] = 65533 / (p2 - z2);
              g[d2 + 40 >> 2] = 65533 / (l2 - w2);
              g[d2 + 44 >> 2] = 65533 / (k2 - t2);
              g[d2 + 48 >> 2] = 0;
              c[A2 + 144 >> 2] = 6208;
              c[A2 + 144 + 4 >> 2] = d2 + 104;
              c[A2 + 144 + 8 >> 2] = d2;
              bc[c[(c[e2 >> 2] | 0) + 8 >> 2] & 127](e2, A2 + 144 | 0, d2 + 4 | 0, d2 + 20 | 0);
              f2 = c[d2 + 108 >> 2] | 0;
              c[A2 + 128 >> 2] = 0;
              c[A2 + 128 + 4 >> 2] = 0;
              c[A2 + 128 + 8 >> 2] = 0;
              c[A2 + 128 + 12 >> 2] = 0;
              m2 = c[d2 + 128 >> 2] | 0;
              if ((m2 | 0) < (f2 << 1 | 0)) {
                if ((c[d2 + 132 >> 2] | 0) < (f2 << 1 | 0)) {
                  if (!f2) {
                    h2 = 0;
                    j2 = m2;
                  } else {
                    c[5637] = (c[5637] | 0) + 1;
                    h2 = qG(f2 << 5 | 19) | 0;
                    if (!h2)
                      h2 = 0;
                    else {
                      c[(h2 + 4 + 15 & -16) + -4 >> 2] = h2;
                      h2 = h2 + 4 + 15 & -16;
                    }
                    j2 = c[d2 + 128 >> 2] | 0;
                  }
                  if ((j2 | 0) > 0) {
                    e2 = 0;
                    do {
                      q2 = h2 + (e2 << 4) | 0;
                      o2 = (c[d2 + 136 >> 2] | 0) + (e2 << 4) | 0;
                      c[q2 >> 2] = c[o2 >> 2];
                      c[q2 + 4 >> 2] = c[o2 + 4 >> 2];
                      c[q2 + 8 >> 2] = c[o2 + 8 >> 2];
                      c[q2 + 12 >> 2] = c[o2 + 12 >> 2];
                      e2 = e2 + 1 | 0;
                    } while ((e2 | 0) != (j2 | 0));
                  }
                  j2 = c[d2 + 136 >> 2] | 0;
                  if (j2 | 0) {
                    if (a[d2 + 140 >> 0] | 0) {
                      c[5638] = (c[5638] | 0) + 1;
                      rG(c[j2 + -4 >> 2] | 0);
                    }
                    c[d2 + 136 >> 2] = 0;
                  }
                  a[d2 + 140 >> 0] = 1;
                  c[d2 + 136 >> 2] = h2;
                  c[d2 + 132 >> 2] = f2 << 1;
                  j2 = d2 + 136 | 0;
                } else
                  j2 = d2 + 136 | 0;
                h2 = m2;
                do {
                  q2 = (c[j2 >> 2] | 0) + (h2 << 4) | 0;
                  c[q2 >> 2] = c[A2 + 128 >> 2];
                  c[q2 + 4 >> 2] = c[A2 + 128 + 4 >> 2];
                  c[q2 + 8 >> 2] = c[A2 + 128 + 8 >> 2];
                  c[q2 + 12 >> 2] = c[A2 + 128 + 12 >> 2];
                  h2 = h2 + 1 | 0;
                } while ((h2 | 0) != (f2 << 1 | 0));
              }
              c[d2 + 128 >> 2] = f2 << 1;
            } else {
              c[A2 + 144 >> 2] = 6228;
              c[A2 + 144 + 4 >> 2] = d2 + 64;
              c[A2 + 112 >> 2] = -581039253;
              c[A2 + 112 + 4 >> 2] = -581039253;
              c[A2 + 112 + 8 >> 2] = -581039253;
              g[A2 + 112 + 12 >> 2] = 0;
              c[A2 + 96 >> 2] = 1566444395;
              c[A2 + 96 + 4 >> 2] = 1566444395;
              c[A2 + 96 + 8 >> 2] = 1566444395;
              g[A2 + 96 + 12 >> 2] = 0;
              bc[c[(c[e2 >> 2] | 0) + 8 >> 2] & 127](e2, A2 + 144 | 0, A2 + 112 | 0, A2 + 96 | 0);
              f2 = c[d2 + 68 >> 2] | 0;
              m2 = A2 + 32 | 0;
              o2 = m2 + 64 | 0;
              do {
                c[m2 >> 2] = 0;
                m2 = m2 + 4 | 0;
              } while ((m2 | 0) < (o2 | 0));
              q2 = c[d2 + 88 >> 2] | 0;
              if ((q2 | 0) < (f2 << 1 | 0)) {
                if ((c[d2 + 92 >> 2] | 0) < (f2 << 1 | 0)) {
                  if (!f2) {
                    h2 = 0;
                    j2 = q2;
                  } else {
                    c[5637] = (c[5637] | 0) + 1;
                    h2 = qG(f2 << 7 | 19) | 0;
                    if (!h2)
                      h2 = 0;
                    else {
                      c[(h2 + 4 + 15 & -16) + -4 >> 2] = h2;
                      h2 = h2 + 4 + 15 & -16;
                    }
                    j2 = c[d2 + 88 >> 2] | 0;
                  }
                  if ((j2 | 0) > 0) {
                    e2 = 0;
                    do {
                      m2 = h2 + (e2 << 6) | 0;
                      n2 = (c[d2 + 96 >> 2] | 0) + (e2 << 6) | 0;
                      o2 = m2 + 64 | 0;
                      do {
                        c[m2 >> 2] = c[n2 >> 2];
                        m2 = m2 + 4 | 0;
                        n2 = n2 + 4 | 0;
                      } while ((m2 | 0) < (o2 | 0));
                      e2 = e2 + 1 | 0;
                    } while ((e2 | 0) != (j2 | 0));
                  }
                  j2 = c[d2 + 96 >> 2] | 0;
                  if (j2 | 0) {
                    if (a[d2 + 100 >> 0] | 0) {
                      c[5638] = (c[5638] | 0) + 1;
                      rG(c[j2 + -4 >> 2] | 0);
                    }
                    c[d2 + 96 >> 2] = 0;
                  }
                  a[d2 + 100 >> 0] = 1;
                  c[d2 + 96 >> 2] = h2;
                  c[d2 + 92 >> 2] = f2 << 1;
                  j2 = d2 + 96 | 0;
                } else
                  j2 = d2 + 96 | 0;
                h2 = q2;
                do {
                  m2 = (c[j2 >> 2] | 0) + (h2 << 6) | 0;
                  n2 = A2 + 32 | 0;
                  o2 = m2 + 64 | 0;
                  do {
                    c[m2 >> 2] = c[n2 >> 2];
                    m2 = m2 + 4 | 0;
                    n2 = n2 + 4 | 0;
                  } while ((m2 | 0) < (o2 | 0));
                  h2 = h2 + 1 | 0;
                } while ((h2 | 0) != (f2 << 1 | 0));
              }
              c[d2 + 88 >> 2] = f2 << 1;
            }
            c[d2 + 56 >> 2] = 0;
            le(d2, 0, f2);
            if (a[d2 + 60 >> 0] | 0 ? (c[d2 + 152 >> 2] | 0) == 0 : 0) {
              if (!(c[d2 + 156 >> 2] | 0)) {
                c[5637] = (c[5637] | 0) + 1;
                f2 = qG(51) | 0;
                if (!f2)
                  e2 = 0;
                else {
                  c[(f2 + 4 + 15 & -16) + -4 >> 2] = f2;
                  e2 = f2 + 4 + 15 & -16;
                }
                f2 = c[d2 + 152 >> 2] | 0;
                if ((f2 | 0) > 0) {
                  h2 = 0;
                  do {
                    q2 = e2 + (h2 << 5) | 0;
                    o2 = (c[d2 + 160 >> 2] | 0) + (h2 << 5) | 0;
                    c[q2 >> 2] = c[o2 >> 2];
                    c[q2 + 4 >> 2] = c[o2 + 4 >> 2];
                    c[q2 + 8 >> 2] = c[o2 + 8 >> 2];
                    c[q2 + 12 >> 2] = c[o2 + 12 >> 2];
                    c[q2 + 16 >> 2] = c[o2 + 16 >> 2];
                    c[q2 + 20 >> 2] = c[o2 + 20 >> 2];
                    c[q2 + 24 >> 2] = c[o2 + 24 >> 2];
                    c[q2 + 28 >> 2] = c[o2 + 28 >> 2];
                    h2 = h2 + 1 | 0;
                  } while ((h2 | 0) != (f2 | 0));
                }
                f2 = c[d2 + 160 >> 2] | 0;
                if (f2 | 0) {
                  if (a[d2 + 164 >> 0] | 0) {
                    c[5638] = (c[5638] | 0) + 1;
                    rG(c[f2 + -4 >> 2] | 0);
                  }
                  c[d2 + 160 >> 2] = 0;
                }
                a[d2 + 164 >> 0] = 1;
                c[d2 + 160 >> 2] = e2;
                c[d2 + 156 >> 2] = 1;
                h2 = d2 + 160 | 0;
                j2 = (c[d2 + 152 >> 2] | 0) + 1 | 0;
                f2 = e2;
              } else {
                h2 = d2 + 160 | 0;
                j2 = 1;
                f2 = c[d2 + 160 >> 2] | 0;
              }
              c[d2 + 152 >> 2] = j2;
              c[f2 >> 2] = c[A2 >> 2];
              c[f2 + 4 >> 2] = c[A2 + 4 >> 2];
              c[f2 + 8 >> 2] = c[A2 + 8 >> 2];
              c[f2 + 12 >> 2] = c[A2 + 12 >> 2];
              c[f2 + 16 >> 2] = c[A2 + 16 >> 2];
              c[f2 + 20 >> 2] = c[A2 + 20 >> 2];
              c[f2 + 24 >> 2] = c[A2 + 24 >> 2];
              c[f2 + 28 >> 2] = c[A2 + 28 >> 2];
              q2 = c[h2 >> 2] | 0;
              o2 = c[d2 + 136 >> 2] | 0;
              b[q2 >> 1] = b[o2 >> 1] | 0;
              b[q2 + 2 >> 1] = b[o2 + 2 >> 1] | 0;
              b[q2 + 4 >> 1] = b[o2 + 4 >> 1] | 0;
              b[q2 + 6 >> 1] = b[o2 + 6 >> 1] | 0;
              b[q2 + 8 >> 1] = b[o2 + 8 >> 1] | 0;
              b[q2 + 10 >> 1] = b[o2 + 10 >> 1] | 0;
              c[q2 + 12 >> 2] = 0;
              o2 = c[o2 + 12 >> 2] | 0;
              c[q2 + 16 >> 2] = (o2 | 0) > -1 ? 1 : 0 - o2 | 0;
            }
            c[d2 + 168 >> 2] = c[d2 + 152 >> 2];
            f2 = c[d2 + 116 >> 2] | 0;
            if (f2 | 0) {
              if (a[d2 + 120 >> 0] | 0) {
                c[5638] = (c[5638] | 0) + 1;
                rG(c[f2 + -4 >> 2] | 0);
              }
              c[d2 + 116 >> 2] = 0;
            }
            a[d2 + 120 >> 0] = 1;
            c[d2 + 116 >> 2] = 0;
            c[d2 + 108 >> 2] = 0;
            c[d2 + 112 >> 2] = 0;
            f2 = c[d2 + 76 >> 2] | 0;
            if (!f2) {
              a[d2 + 80 >> 0] = 1;
              c[d2 + 76 >> 2] = 0;
              c[d2 + 68 >> 2] = 0;
              d2 = d2 + 72 | 0;
              c[d2 >> 2] = 0;
              i = A2;
              return;
            }
            if (a[d2 + 80 >> 0] | 0) {
              c[5638] = (c[5638] | 0) + 1;
              rG(c[f2 + -4 >> 2] | 0);
            }
            c[d2 + 76 >> 2] = 0;
            a[d2 + 80 >> 0] = 1;
            c[d2 + 76 >> 2] = 0;
            c[d2 + 68 >> 2] = 0;
            d2 = d2 + 72 | 0;
            c[d2 >> 2] = 0;
            i = A2;
            return;
          }
          function _l(a2) {
            a2 = a2 | 0;
            rG(a2);
            return;
          }
          function $l(d2, e2, f2, h2) {
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            h2 = h2 | 0;
            var i2 = 0, j2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0;
            j2 = +g[e2 >> 2];
            m2 = (g[k >> 2] = j2, c[k >> 2] | 0);
            r2 = j2 < 999999984306749400 ? m2 : 1566444395;
            i2 = +g[e2 + 4 >> 2];
            o2 = (g[k >> 2] = i2, c[k >> 2] | 0);
            t2 = i2 < 999999984306749400 ? o2 : 1566444395;
            y2 = +g[e2 + 8 >> 2];
            q2 = (g[k >> 2] = y2, c[k >> 2] | 0);
            z2 = y2 < 999999984306749400 ? q2 : 1566444395;
            m2 = j2 > -999999984306749400 ? m2 : -581039253;
            o2 = i2 > -999999984306749400 ? o2 : -581039253;
            q2 = y2 > -999999984306749400 ? q2 : -581039253;
            y2 = +g[e2 + 16 >> 2];
            x2 = y2 < (c[k >> 2] = r2, +g[k >> 2]);
            l2 = (g[k >> 2] = y2, c[k >> 2] | 0);
            r2 = x2 ? l2 : r2;
            i2 = +g[e2 + 20 >> 2];
            x2 = i2 < (c[k >> 2] = t2, +g[k >> 2]);
            n2 = (g[k >> 2] = i2, c[k >> 2] | 0);
            t2 = x2 ? n2 : t2;
            j2 = +g[e2 + 24 >> 2];
            x2 = j2 < (c[k >> 2] = z2, +g[k >> 2]);
            p2 = (g[k >> 2] = j2, c[k >> 2] | 0);
            z2 = x2 ? p2 : z2;
            x2 = (c[k >> 2] = m2, +g[k >> 2]) < y2 ? l2 : m2;
            s2 = (c[k >> 2] = o2, +g[k >> 2]) < i2 ? n2 : o2;
            q2 = (c[k >> 2] = q2, +g[k >> 2]) < j2 ? p2 : q2;
            y2 = +g[e2 + 32 >> 2];
            m2 = y2 < (c[k >> 2] = r2, +g[k >> 2]);
            o2 = (g[k >> 2] = y2, c[k >> 2] | 0);
            r2 = m2 ? o2 : r2;
            j2 = +g[e2 + 36 >> 2];
            m2 = j2 < (c[k >> 2] = t2, +g[k >> 2]);
            p2 = (g[k >> 2] = j2, c[k >> 2] | 0);
            m2 = m2 ? p2 : t2;
            i2 = +g[e2 + 40 >> 2];
            l2 = i2 < (c[k >> 2] = z2, +g[k >> 2]);
            n2 = (g[k >> 2] = i2, c[k >> 2] | 0);
            l2 = l2 ? n2 : z2;
            o2 = (c[k >> 2] = x2, +g[k >> 2]) < y2 ? o2 : x2;
            p2 = (c[k >> 2] = s2, +g[k >> 2]) < j2 ? p2 : s2;
            q2 = (c[k >> 2] = q2, +g[k >> 2]) < i2 ? n2 : q2;
            i2 = (c[k >> 2] = o2, +g[k >> 2]);
            j2 = (c[k >> 2] = r2, +g[k >> 2]);
            if (i2 - j2 < 0.0020000000949949026) {
              o2 = (g[k >> 2] = i2 + 0.0010000000474974513, c[k >> 2] | 0);
              n2 = (g[k >> 2] = j2 + -0.0010000000474974513, c[k >> 2] | 0);
            } else
              n2 = r2;
            i2 = (c[k >> 2] = p2, +g[k >> 2]);
            j2 = (c[k >> 2] = m2, +g[k >> 2]);
            if (i2 - j2 < 0.0020000000949949026) {
              p2 = (g[k >> 2] = i2 + 0.0010000000474974513, c[k >> 2] | 0);
              m2 = (g[k >> 2] = j2 + -0.0010000000474974513, c[k >> 2] | 0);
            }
            i2 = (c[k >> 2] = q2, +g[k >> 2]);
            j2 = (c[k >> 2] = l2, +g[k >> 2]);
            if (i2 - j2 < 0.0020000000949949026) {
              q2 = (g[k >> 2] = i2 + 0.0010000000474974513, c[k >> 2] | 0);
              l2 = (g[k >> 2] = j2 + -0.0010000000474974513, c[k >> 2] | 0);
            }
            r2 = c[d2 + 8 >> 2] | 0;
            j2 = +g[r2 + 4 >> 2];
            y2 = (c[k >> 2] = n2, +g[k >> 2]) - j2;
            i2 = +g[r2 + 8 >> 2];
            u2 = (c[k >> 2] = m2, +g[k >> 2]) - i2;
            B2 = +g[r2 + 12 >> 2];
            v2 = +g[r2 + 36 >> 2];
            w2 = +g[r2 + 40 >> 2];
            A2 = +g[r2 + 44 >> 2];
            r2 = ~~(((c[k >> 2] = l2, +g[k >> 2]) - B2) * A2) & 65534;
            j2 = (c[k >> 2] = o2, +g[k >> 2]) - j2;
            i2 = (c[k >> 2] = p2, +g[k >> 2]) - i2;
            q2 = (~~(((c[k >> 2] = q2, +g[k >> 2]) - B2) * A2 + 1) & 65535 | 1) & 65535;
            o2 = c[d2 + 4 >> 2] | 0;
            m2 = c[o2 + 4 >> 2] | 0;
            if ((m2 | 0) != (c[o2 + 8 >> 2] | 0)) {
              d2 = m2;
              z2 = o2 + 12 | 0;
              z2 = c[z2 >> 2] | 0;
              x2 = z2 + (d2 << 4) | 0;
              b[x2 >> 1] = ~~(y2 * v2) & 65534;
              x2 = z2 + (d2 << 4) + 2 | 0;
              b[x2 >> 1] = ~~(u2 * w2) & 65534;
              x2 = z2 + (d2 << 4) + 4 | 0;
              b[x2 >> 1] = r2;
              x2 = z2 + (d2 << 4) + 6 | 0;
              b[x2 >> 1] = ~~(j2 * v2 + 1) & 65535 | 1;
              x2 = z2 + (d2 << 4) + 8 | 0;
              b[x2 >> 1] = ~~(i2 * w2 + 1) & 65535 | 1;
              x2 = z2 + (d2 << 4) + 10 | 0;
              b[x2 >> 1] = q2;
              d2 = z2 + (d2 << 4) + 12 | 0;
              c[d2 >> 2] = f2 << 21 | h2;
              h2 = c[o2 + 4 >> 2] | 0;
              h2 = h2 + 1 | 0;
              c[o2 + 4 >> 2] = h2;
              return;
            }
            p2 = m2 | 0 ? m2 << 1 : 1;
            if ((m2 | 0) >= (p2 | 0)) {
              d2 = m2;
              z2 = o2 + 12 | 0;
              z2 = c[z2 >> 2] | 0;
              x2 = z2 + (d2 << 4) | 0;
              b[x2 >> 1] = ~~(y2 * v2) & 65534;
              x2 = z2 + (d2 << 4) + 2 | 0;
              b[x2 >> 1] = ~~(u2 * w2) & 65534;
              x2 = z2 + (d2 << 4) + 4 | 0;
              b[x2 >> 1] = r2;
              x2 = z2 + (d2 << 4) + 6 | 0;
              b[x2 >> 1] = ~~(j2 * v2 + 1) & 65535 | 1;
              x2 = z2 + (d2 << 4) + 8 | 0;
              b[x2 >> 1] = ~~(i2 * w2 + 1) & 65535 | 1;
              x2 = z2 + (d2 << 4) + 10 | 0;
              b[x2 >> 1] = q2;
              d2 = z2 + (d2 << 4) + 12 | 0;
              c[d2 >> 2] = f2 << 21 | h2;
              h2 = c[o2 + 4 >> 2] | 0;
              h2 = h2 + 1 | 0;
              c[o2 + 4 >> 2] = h2;
              return;
            }
            if (!p2)
              l2 = 0;
            else {
              c[5637] = (c[5637] | 0) + 1;
              l2 = qG((p2 << 4 | 3) + 16 | 0) | 0;
              if (!l2)
                l2 = 0;
              else {
                c[(l2 + 4 + 15 & -16) + -4 >> 2] = l2;
                l2 = l2 + 4 + 15 & -16;
              }
              m2 = c[o2 + 4 >> 2] | 0;
            }
            if ((m2 | 0) > 0) {
              n2 = 0;
              do {
                d2 = l2 + (n2 << 4) | 0;
                z2 = (c[o2 + 12 >> 2] | 0) + (n2 << 4) | 0;
                c[d2 >> 2] = c[z2 >> 2];
                c[d2 + 4 >> 2] = c[z2 + 4 >> 2];
                c[d2 + 8 >> 2] = c[z2 + 8 >> 2];
                c[d2 + 12 >> 2] = c[z2 + 12 >> 2];
                n2 = n2 + 1 | 0;
              } while ((n2 | 0) != (m2 | 0));
            }
            m2 = c[o2 + 12 >> 2] | 0;
            if (m2 | 0) {
              if (a[o2 + 16 >> 0] | 0) {
                c[5638] = (c[5638] | 0) + 1;
                rG(c[m2 + -4 >> 2] | 0);
              }
              c[o2 + 12 >> 2] = 0;
            }
            a[o2 + 16 >> 0] = 1;
            c[o2 + 12 >> 2] = l2;
            c[o2 + 8 >> 2] = p2;
            d2 = c[o2 + 4 >> 2] | 0;
            z2 = o2 + 12 | 0;
            z2 = c[z2 >> 2] | 0;
            x2 = z2 + (d2 << 4) | 0;
            b[x2 >> 1] = ~~(y2 * v2) & 65534;
            x2 = z2 + (d2 << 4) + 2 | 0;
            b[x2 >> 1] = ~~(u2 * w2) & 65534;
            x2 = z2 + (d2 << 4) + 4 | 0;
            b[x2 >> 1] = r2;
            x2 = z2 + (d2 << 4) + 6 | 0;
            b[x2 >> 1] = ~~(j2 * v2 + 1) & 65535 | 1;
            x2 = z2 + (d2 << 4) + 8 | 0;
            b[x2 >> 1] = ~~(i2 * w2 + 1) & 65535 | 1;
            x2 = z2 + (d2 << 4) + 10 | 0;
            b[x2 >> 1] = q2;
            d2 = z2 + (d2 << 4) + 12 | 0;
            c[d2 >> 2] = f2 << 21 | h2;
            h2 = c[o2 + 4 >> 2] | 0;
            h2 = h2 + 1 | 0;
            c[o2 + 4 >> 2] = h2;
            return;
          }
          function am(a2) {
            a2 = a2 | 0;
            rG(a2);
            return;
          }
          function bm(b2, d2, e2, f2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            var h2 = 0, j2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0;
            D2 = i;
            i = i + 32 | 0;
            q2 = +g[d2 >> 2];
            j2 = (g[k >> 2] = q2, c[k >> 2] | 0);
            t2 = q2 < 999999984306749400 ? j2 : 1566444395;
            p2 = +g[d2 + 4 >> 2];
            m2 = (g[k >> 2] = p2, c[k >> 2] | 0);
            u2 = p2 < 999999984306749400 ? m2 : 1566444395;
            E2 = +g[d2 + 8 >> 2];
            o2 = (g[k >> 2] = E2, c[k >> 2] | 0);
            w2 = E2 < 999999984306749400 ? o2 : 1566444395;
            s2 = +g[d2 + 12 >> 2];
            y2 = s2 < 0 ? s2 : 0;
            j2 = q2 > -999999984306749400 ? j2 : -581039253;
            m2 = p2 > -999999984306749400 ? m2 : -581039253;
            o2 = E2 > -999999984306749400 ? o2 : -581039253;
            s2 = s2 > 0 ? s2 : 0;
            E2 = +g[d2 + 16 >> 2];
            B2 = E2 < (c[k >> 2] = t2, +g[k >> 2]);
            h2 = (g[k >> 2] = E2, c[k >> 2] | 0);
            t2 = B2 ? h2 : t2;
            p2 = +g[d2 + 20 >> 2];
            B2 = p2 < (c[k >> 2] = u2, +g[k >> 2]);
            l2 = (g[k >> 2] = p2, c[k >> 2] | 0);
            u2 = B2 ? l2 : u2;
            q2 = +g[d2 + 24 >> 2];
            B2 = q2 < (c[k >> 2] = w2, +g[k >> 2]);
            n2 = (g[k >> 2] = q2, c[k >> 2] | 0);
            w2 = B2 ? n2 : w2;
            r2 = +g[d2 + 28 >> 2];
            y2 = r2 < y2 ? r2 : y2;
            x2 = (c[k >> 2] = j2, +g[k >> 2]) < E2 ? h2 : j2;
            v2 = (c[k >> 2] = m2, +g[k >> 2]) < p2 ? l2 : m2;
            m2 = (c[k >> 2] = o2, +g[k >> 2]) < q2 ? n2 : o2;
            s2 = s2 < r2 ? r2 : s2;
            E2 = +g[d2 + 32 >> 2];
            B2 = E2 < (c[k >> 2] = t2, +g[k >> 2]);
            h2 = (g[k >> 2] = E2, c[k >> 2] | 0);
            B2 = B2 ? h2 : t2;
            q2 = +g[d2 + 36 >> 2];
            A2 = q2 < (c[k >> 2] = u2, +g[k >> 2]);
            j2 = (g[k >> 2] = q2, c[k >> 2] | 0);
            A2 = A2 ? j2 : u2;
            r2 = +g[d2 + 40 >> 2];
            z2 = r2 < (c[k >> 2] = w2, +g[k >> 2]);
            l2 = (g[k >> 2] = r2, c[k >> 2] | 0);
            z2 = z2 ? l2 : w2;
            p2 = +g[d2 + 44 >> 2];
            y2 = p2 < y2 ? p2 : y2;
            w2 = (c[k >> 2] = x2, +g[k >> 2]) < E2 ? h2 : x2;
            v2 = (c[k >> 2] = v2, +g[k >> 2]) < q2 ? j2 : v2;
            u2 = (c[k >> 2] = m2, +g[k >> 2]) < r2 ? l2 : m2;
            p2 = s2 < p2 ? p2 : s2;
            t2 = c[b2 + 4 >> 2] | 0;
            h2 = c[t2 + 4 >> 2] | 0;
            if ((h2 | 0) == (c[t2 + 8 >> 2] | 0) ? (C2 = h2 | 0 ? h2 << 1 : 1, (h2 | 0) < (C2 | 0)) : 0) {
              if (!C2)
                o2 = 0;
              else {
                c[5637] = (c[5637] | 0) + 1;
                h2 = qG(C2 << 6 | 19) | 0;
                if (!h2)
                  h2 = 0;
                else {
                  c[(h2 + 4 + 15 & -16) + -4 >> 2] = h2;
                  h2 = h2 + 4 + 15 & -16;
                }
                o2 = h2;
                h2 = c[t2 + 4 >> 2] | 0;
              }
              if ((h2 | 0) > 0) {
                j2 = 0;
                do {
                  l2 = o2 + (j2 << 6) | 0;
                  m2 = (c[t2 + 12 >> 2] | 0) + (j2 << 6) | 0;
                  n2 = l2 + 64 | 0;
                  do {
                    c[l2 >> 2] = c[m2 >> 2];
                    l2 = l2 + 4 | 0;
                    m2 = m2 + 4 | 0;
                  } while ((l2 | 0) < (n2 | 0));
                  j2 = j2 + 1 | 0;
                } while ((j2 | 0) != (h2 | 0));
              }
              h2 = c[t2 + 12 >> 2] | 0;
              if (h2 | 0) {
                if (a[t2 + 16 >> 0] | 0) {
                  c[5638] = (c[5638] | 0) + 1;
                  rG(c[h2 + -4 >> 2] | 0);
                }
                c[t2 + 12 >> 2] = 0;
              }
              a[t2 + 16 >> 0] = 1;
              c[t2 + 12 >> 2] = o2;
              c[t2 + 8 >> 2] = C2;
              h2 = c[t2 + 4 >> 2] | 0;
            }
            C2 = c[t2 + 12 >> 2] | 0;
            c[C2 + (h2 << 6) >> 2] = B2;
            c[C2 + (h2 << 6) + 4 >> 2] = A2;
            c[C2 + (h2 << 6) + 8 >> 2] = z2;
            g[C2 + (h2 << 6) + 12 >> 2] = y2;
            c[C2 + (h2 << 6) + 16 >> 2] = w2;
            c[C2 + (h2 << 6) + 20 >> 2] = v2;
            c[C2 + (h2 << 6) + 24 >> 2] = u2;
            g[C2 + (h2 << 6) + 28 >> 2] = p2;
            c[C2 + (h2 << 6) + 32 >> 2] = -1;
            c[C2 + (h2 << 6) + 36 >> 2] = e2;
            c[C2 + (h2 << 6) + 40 >> 2] = f2;
            f2 = C2 + (h2 << 6) + 44 | 0;
            c[f2 >> 2] = c[D2 >> 2];
            c[f2 + 4 >> 2] = c[D2 + 4 >> 2];
            c[f2 + 8 >> 2] = c[D2 + 8 >> 2];
            c[f2 + 12 >> 2] = c[D2 + 12 >> 2];
            c[f2 + 16 >> 2] = c[D2 + 16 >> 2];
            c[t2 + 4 >> 2] = (c[t2 + 4 >> 2] | 0) + 1;
            i = D2;
            return;
          }
          function cm(a2) {
            a2 = a2 | 0;
            var b2 = 0;
            c[a2 >> 2] = 6248;
            b2 = c[a2 + 56 >> 2] | 0;
            if (!b2)
              return;
            rb[c[c[b2 >> 2] >> 2] & 255](b2);
            b2 = c[a2 + 56 >> 2] | 0;
            if (!b2)
              return;
            c[5638] = (c[5638] | 0) + 1;
            rG(c[b2 + -4 >> 2] | 0);
            return;
          }
          function dm(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0;
            c[a2 >> 2] = 6248;
            b2 = c[a2 + 56 >> 2] | 0;
            if (b2 | 0 ? (rb[c[c[b2 >> 2] >> 2] & 255](b2), d2 = c[a2 + 56 >> 2] | 0, d2 | 0) : 0) {
              c[5638] = (c[5638] | 0) + 1;
              rG(c[d2 + -4 >> 2] | 0);
            }
            c[5638] = (c[5638] | 0) + 1;
            rG(c[a2 + -4 >> 2] | 0);
            return;
          }
          function em(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = +b2;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, h2 = 0, j2 = 0, k2 = 0;
            e2 = i;
            i = i + 96 | 0;
            j2 = +Hb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
            c[e2 + 32 >> 2] = 1065353216;
            c[e2 + 32 + 4 >> 2] = 0;
            c[e2 + 32 + 4 + 4 >> 2] = 0;
            c[e2 + 32 + 4 + 8 >> 2] = 0;
            c[e2 + 32 + 4 + 12 >> 2] = 0;
            c[e2 + 32 + 20 >> 2] = 1065353216;
            c[e2 + 32 + 24 >> 2] = 0;
            c[e2 + 32 + 24 + 4 >> 2] = 0;
            c[e2 + 32 + 24 + 8 >> 2] = 0;
            c[e2 + 32 + 24 + 12 >> 2] = 0;
            c[e2 + 32 + 40 >> 2] = 1065353216;
            k2 = e2 + 32 + 44 | 0;
            c[k2 >> 2] = 0;
            c[k2 + 4 >> 2] = 0;
            c[k2 + 8 >> 2] = 0;
            c[k2 + 12 >> 2] = 0;
            c[k2 + 16 >> 2] = 0;
            bc[c[(c[a2 >> 2] | 0) + 8 >> 2] & 127](a2, e2 + 32 | 0, e2 + 16 | 0, e2);
            h2 = (j2 + (+g[e2 >> 2] - +g[e2 + 16 >> 2]) * 0.5) * 2;
            f2 = (j2 + (+g[e2 + 4 >> 2] - +g[e2 + 16 + 4 >> 2]) * 0.5) * 2;
            j2 = (j2 + (+g[e2 + 8 >> 2] - +g[e2 + 16 + 8 >> 2]) * 0.5) * 2;
            g[d2 >> 2] = b2 * 0.0833333283662796 * (f2 * f2 + j2 * j2);
            g[d2 + 4 >> 2] = b2 * 0.0833333283662796 * (h2 * h2 + j2 * j2);
            g[d2 + 8 >> 2] = b2 * 0.0833333283662796 * (h2 * h2 + f2 * f2);
            g[d2 + 12 >> 2] = 0;
            i = e2;
            return;
          }
          function fm(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0;
            p2 = i;
            i = i + 2048 | 0;
            c[a2 >> 2] = 0;
            c[a2 + 4 >> 2] = 0;
            c[a2 + 8 >> 2] = 0;
            c[a2 + 12 >> 2] = 0;
            e2 = +g[d2 >> 2];
            h2 = +g[d2 + 4 >> 2];
            f2 = +g[d2 + 8 >> 2];
            if (e2 * e2 + h2 * h2 + f2 * f2 < 9999999747378752e-20) {
              n2 = 1;
              m2 = 0;
              h2 = 0;
            } else {
              q2 = 1 / +O(+(e2 * e2 + h2 * h2 + f2 * f2));
              n2 = e2 * q2;
              m2 = f2 * q2;
              h2 = h2 * q2;
            }
            if ((vb[c[(c[b2 >> 2] | 0) + 96 >> 2] & 127](b2) | 0) <= 0) {
              i = p2;
              return;
            }
            l2 = 0;
            e2 = -999999984306749400;
            do {
              if (((vb[c[(c[b2 >> 2] | 0) + 96 >> 2] & 127](b2) | 0) - l2 | 0) < 128) {
                d2 = (vb[c[(c[b2 >> 2] | 0) + 96 >> 2] & 127](b2) | 0) - l2 | 0;
                if ((d2 | 0) > 0)
                  o2 = 8;
                else {
                  f2 = -34028234663852886e22;
                  d2 = -1;
                }
              } else {
                d2 = 128;
                o2 = 8;
              }
              if ((o2 | 0) == 8) {
                o2 = 0;
                j2 = 0;
                do {
                  Zb[c[(c[b2 >> 2] | 0) + 108 >> 2] & 127](b2, j2, p2 + (j2 << 4) | 0);
                  j2 = j2 + 1 | 0;
                } while ((j2 | 0) != (d2 | 0));
                k2 = 0;
                f2 = -34028234663852886e22;
                j2 = -1;
                do {
                  q2 = n2 * +g[p2 + (k2 << 4) >> 2] + h2 * +g[p2 + (k2 << 4) + 4 >> 2] + m2 * +g[p2 + (k2 << 4) + 8 >> 2];
                  r2 = q2 > f2;
                  j2 = r2 ? k2 : j2;
                  f2 = r2 ? q2 : f2;
                  k2 = k2 + 1 | 0;
                } while ((k2 | 0) != (d2 | 0));
                d2 = j2;
              }
              if (f2 > e2) {
                r2 = p2 + (d2 << 4) | 0;
                c[a2 >> 2] = c[r2 >> 2];
                c[a2 + 4 >> 2] = c[r2 + 4 >> 2];
                c[a2 + 8 >> 2] = c[r2 + 8 >> 2];
                c[a2 + 12 >> 2] = c[r2 + 12 >> 2];
                e2 = f2;
              }
              l2 = l2 + 128 | 0;
            } while ((l2 | 0) < (vb[c[(c[b2 >> 2] | 0) + 96 >> 2] & 127](b2) | 0));
            i = p2;
            return;
          }
          function gm(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0;
            w2 = i;
            i = i + 2048 | 0;
            if ((e2 | 0) > 0)
              f2 = 0;
            else {
              i = w2;
              return;
            }
            do {
              g[d2 + (f2 << 4) + 12 >> 2] = -999999984306749400;
              f2 = f2 + 1 | 0;
            } while ((f2 | 0) != (e2 | 0));
            t2 = 0;
            do {
              if ((vb[c[(c[a2 >> 2] | 0) + 96 >> 2] & 127](a2) | 0) > 0) {
                r2 = b2 + (t2 << 4) | 0;
                s2 = b2 + (t2 << 4) + 4 | 0;
                o2 = b2 + (t2 << 4) + 8 | 0;
                p2 = d2 + (t2 << 4) + 12 | 0;
                q2 = d2 + (t2 << 4) | 0;
                u2 = 0;
                do {
                  if (((vb[c[(c[a2 >> 2] | 0) + 96 >> 2] & 127](a2) | 0) - u2 | 0) < 128) {
                    f2 = (vb[c[(c[a2 >> 2] | 0) + 96 >> 2] & 127](a2) | 0) - u2 | 0;
                    if ((f2 | 0) > 0)
                      v2 = 10;
                    else {
                      j2 = -34028234663852886e22;
                      f2 = -1;
                    }
                  } else {
                    f2 = 128;
                    v2 = 10;
                  }
                  if ((v2 | 0) == 10) {
                    v2 = 0;
                    h2 = 0;
                    do {
                      Zb[c[(c[a2 >> 2] | 0) + 108 >> 2] & 127](a2, h2, w2 + (h2 << 4) | 0);
                      h2 = h2 + 1 | 0;
                    } while ((h2 | 0) != (f2 | 0));
                    k2 = +g[r2 >> 2];
                    l2 = +g[s2 >> 2];
                    m2 = +g[o2 >> 2];
                    n2 = 0;
                    j2 = -34028234663852886e22;
                    h2 = -1;
                    do {
                      x2 = k2 * +g[w2 + (n2 << 4) >> 2] + l2 * +g[w2 + (n2 << 4) + 4 >> 2] + m2 * +g[w2 + (n2 << 4) + 8 >> 2];
                      y2 = x2 > j2;
                      h2 = y2 ? n2 : h2;
                      j2 = y2 ? x2 : j2;
                      n2 = n2 + 1 | 0;
                    } while ((n2 | 0) != (f2 | 0));
                    f2 = h2;
                  }
                  if (j2 > +g[p2 >> 2]) {
                    y2 = w2 + (f2 << 4) | 0;
                    c[q2 >> 2] = c[y2 >> 2];
                    c[q2 + 4 >> 2] = c[y2 + 4 >> 2];
                    c[q2 + 8 >> 2] = c[y2 + 8 >> 2];
                    c[q2 + 12 >> 2] = c[y2 + 12 >> 2];
                    g[p2 >> 2] = j2;
                  }
                  u2 = u2 + 128 | 0;
                } while ((u2 | 0) < (vb[c[(c[a2 >> 2] | 0) + 96 >> 2] & 127](a2) | 0));
              }
              t2 = t2 + 1 | 0;
            } while ((t2 | 0) != (e2 | 0));
            i = w2;
            return;
          }
          function hm(d2, f2) {
            d2 = d2 | 0;
            f2 = f2 | 0;
            var h2 = 0, j2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0, P2 = 0, Q2 = 0, R2 = 0, S2 = 0, T2 = 0, U2 = 0, V2 = 0, W2 = 0, X2 = 0, Y2 = 0, Z2 = 0, _2 = 0, $2 = 0, aa2 = 0, ba2 = 0, ca2 = 0, da2 = 0, ea2 = 0, fa2 = 0, ga2 = 0, ha2 = 0;
            ea2 = i;
            i = i + 288 | 0;
            h2 = c[d2 + 56 >> 2] | 0;
            if (h2 | 0 ? (rb[c[c[h2 >> 2] >> 2] & 255](h2), j2 = c[d2 + 56 >> 2] | 0, j2 | 0) : 0) {
              c[5638] = (c[5638] | 0) + 1;
              rG(c[j2 + -4 >> 2] | 0);
            }
            c[5637] = (c[5637] | 0) + 1;
            h2 = qG(151) | 0;
            if (!h2)
              h2 = 0;
            else {
              c[(h2 + 4 + 15 & -16) + -4 >> 2] = h2;
              h2 = h2 + 4 + 15 & -16;
            }
            c[h2 >> 2] = 5688;
            a[h2 + 20 >> 0] = 1;
            c[h2 + 16 >> 2] = 0;
            c[h2 + 8 >> 2] = 0;
            c[h2 + 12 >> 2] = 0;
            a[h2 + 40 >> 0] = 1;
            c[h2 + 36 >> 2] = 0;
            c[h2 + 28 >> 2] = 0;
            c[h2 + 32 >> 2] = 0;
            a[h2 + 60 >> 0] = 1;
            c[h2 + 56 >> 2] = 0;
            c[h2 + 48 >> 2] = 0;
            c[h2 + 52 >> 2] = 0;
            c[d2 + 56 >> 2] = h2;
            o2 = 0;
            n2 = 0;
            da2 = 0;
            J2 = 0;
            while (1) {
              if ((o2 | 0) >= (vb[c[(c[d2 >> 2] | 0) + 96 >> 2] & 127](d2) | 0))
                break;
              do
                if ((J2 | 0) == (n2 | 0)) {
                  l2 = n2 | 0 ? n2 << 1 : 1;
                  if ((n2 | 0) < (l2 | 0)) {
                    if ((l2 | 0) != 0 ? (c[5637] = (c[5637] | 0) + 1, p2 = qG((l2 << 4 | 3) + 16 | 0) | 0, (p2 | 0) != 0) : 0) {
                      c[(p2 + 4 + 15 & -16) + -4 >> 2] = p2;
                      h2 = p2 + 4 + 15 & -16;
                    } else
                      h2 = 0;
                    if ((n2 | 0) <= 0) {
                      if (!da2) {
                        m2 = n2;
                        j2 = l2;
                        break;
                      }
                    } else {
                      j2 = 0;
                      do {
                        ca2 = h2 + (j2 << 4) | 0;
                        ba2 = da2 + (j2 << 4) | 0;
                        c[ca2 >> 2] = c[ba2 >> 2];
                        c[ca2 + 4 >> 2] = c[ba2 + 4 >> 2];
                        c[ca2 + 8 >> 2] = c[ba2 + 8 >> 2];
                        c[ca2 + 12 >> 2] = c[ba2 + 12 >> 2];
                        j2 = j2 + 1 | 0;
                      } while ((j2 | 0) != (n2 | 0));
                    }
                    c[5638] = (c[5638] | 0) + 1;
                    rG(c[da2 + -4 >> 2] | 0);
                    m2 = n2;
                    j2 = l2;
                  } else {
                    m2 = n2;
                    j2 = n2;
                    h2 = da2;
                  }
                } else {
                  m2 = J2;
                  j2 = n2;
                  h2 = da2;
                }
              while (0);
              n2 = h2 + (J2 << 4) | 0;
              c[n2 >> 2] = c[ea2 + 200 >> 2];
              c[n2 + 4 >> 2] = c[ea2 + 200 + 4 >> 2];
              c[n2 + 8 >> 2] = c[ea2 + 200 + 8 >> 2];
              c[n2 + 12 >> 2] = c[ea2 + 200 + 12 >> 2];
              Zb[c[(c[d2 >> 2] | 0) + 108 >> 2] & 127](d2, o2, n2);
              o2 = o2 + 1 | 0;
              n2 = j2;
              da2 = h2;
              J2 = m2 + 1 | 0;
            }
            a[ea2 + 136 + 16 >> 0] = 1;
            ca2 = ea2 + 136 + 12 | 0;
            c[ca2 >> 2] = 0;
            c[ea2 + 136 + 4 >> 2] = 0;
            c[ea2 + 136 + 8 >> 2] = 0;
            a[ea2 + 136 + 36 >> 0] = 1;
            ba2 = ea2 + 136 + 32 | 0;
            c[ba2 >> 2] = 0;
            c[ea2 + 136 + 24 >> 2] = 0;
            c[ea2 + 136 + 28 >> 2] = 0;
            a[ea2 + 136 + 56 >> 0] = 1;
            aa2 = ea2 + 136 + 52 | 0;
            c[aa2 >> 2] = 0;
            c[ea2 + 136 + 44 >> 2] = 0;
            c[ea2 + 136 + 48 >> 2] = 0;
            if (f2) {
              if ((J2 | 0) > 0) {
                G2 = 0;
                j2 = 0;
                m2 = 0;
                l2 = 0;
                while (1) {
                  h2 = G2;
                  G2 = G2 + 1 | 0;
                  if ((G2 | 0) < (J2 | 0)) {
                    C2 = da2 + (h2 << 4) | 0;
                    D2 = da2 + (h2 << 4) + 4 | 0;
                    A2 = da2 + (h2 << 4) + 8 | 0;
                    B2 = G2;
                    h2 = l2;
                    do {
                      l2 = B2;
                      B2 = B2 + 1 | 0;
                      if ((B2 | 0) < (J2 | 0)) {
                        y2 = da2 + (l2 << 4) | 0;
                        z2 = da2 + (l2 << 4) + 4 | 0;
                        f2 = da2 + (l2 << 4) + 8 | 0;
                        w2 = B2;
                        do {
                          E2 = +g[C2 >> 2];
                          I2 = +g[y2 >> 2] - E2;
                          F2 = +g[D2 >> 2];
                          v2 = +g[z2 >> 2] - F2;
                          H2 = +g[A2 >> 2];
                          x2 = +g[f2 >> 2] - H2;
                          E2 = +g[da2 + (w2 << 4) >> 2] - E2;
                          F2 = +g[da2 + (w2 << 4) + 4 >> 2] - F2;
                          H2 = +g[da2 + (w2 << 4) + 8 >> 2] - H2;
                          q2 = 1;
                          p2 = 0;
                          while (1) {
                            t2 = (v2 * H2 - x2 * F2) * q2;
                            u2 = (x2 * E2 - I2 * H2) * q2;
                            r2 = (I2 * F2 - v2 * E2) * q2;
                            a:
                              do
                                if (r2 * r2 + (t2 * t2 + u2 * u2) > 9999999747378752e-20) {
                                  s2 = 1 / +O(+(r2 * r2 + (t2 * t2 + u2 * u2)));
                                  if ((h2 | 0) > 0) {
                                    l2 = 0;
                                    do {
                                      if (t2 * s2 * +g[m2 + (l2 << 4) >> 2] + u2 * s2 * +g[m2 + (l2 << 4) + 4 >> 2] + r2 * s2 * +g[m2 + (l2 << 4) + 8 >> 2] > 0.9990000128746033)
                                        break a;
                                      l2 = l2 + 1 | 0;
                                    } while ((l2 | 0) < (h2 | 0));
                                  }
                                  q2 = t2 * s2 * +g[C2 >> 2] + u2 * s2 * +g[D2 >> 2] + r2 * s2 * +g[A2 >> 2];
                                  l2 = 0;
                                  do {
                                    if (t2 * s2 * +g[da2 + (l2 << 4) >> 2] + u2 * s2 * +g[da2 + (l2 << 4) + 4 >> 2] + r2 * s2 * +g[da2 + (l2 << 4) + 8 >> 2] - q2 + -0.009999999776482582 > 0)
                                      break a;
                                    l2 = l2 + 1 | 0;
                                  } while ((l2 | 0) < (J2 | 0));
                                  do
                                    if ((h2 | 0) == (j2 | 0)) {
                                      o2 = j2 | 0 ? j2 << 1 : 1;
                                      if ((j2 | 0) < (o2 | 0)) {
                                        do
                                          if (!o2)
                                            n2 = 0;
                                          else {
                                            c[5637] = (c[5637] | 0) + 1;
                                            l2 = qG((o2 << 4 | 3) + 16 | 0) | 0;
                                            if (!l2) {
                                              n2 = 0;
                                              break;
                                            }
                                            c[(l2 + 4 + 15 & -16) + -4 >> 2] = l2;
                                            n2 = l2 + 4 + 15 & -16;
                                          }
                                        while (0);
                                        if ((j2 | 0) <= 0) {
                                          if (!m2) {
                                            l2 = j2;
                                            j2 = o2;
                                            m2 = n2;
                                            break;
                                          }
                                        } else {
                                          l2 = 0;
                                          do {
                                            Z2 = n2 + (l2 << 4) | 0;
                                            Y2 = m2 + (l2 << 4) | 0;
                                            c[Z2 >> 2] = c[Y2 >> 2];
                                            c[Z2 + 4 >> 2] = c[Y2 + 4 >> 2];
                                            c[Z2 + 8 >> 2] = c[Y2 + 8 >> 2];
                                            c[Z2 + 12 >> 2] = c[Y2 + 12 >> 2];
                                            l2 = l2 + 1 | 0;
                                          } while ((l2 | 0) != (j2 | 0));
                                        }
                                        c[5638] = (c[5638] | 0) + 1;
                                        rG(c[m2 + -4 >> 2] | 0);
                                        l2 = j2;
                                        j2 = o2;
                                        m2 = n2;
                                      } else
                                        l2 = j2;
                                    } else
                                      l2 = h2;
                                  while (0);
                                  g[m2 + (l2 << 4) >> 2] = t2 * s2;
                                  g[m2 + (l2 << 4) + 4 >> 2] = u2 * s2;
                                  g[m2 + (l2 << 4) + 8 >> 2] = r2 * s2;
                                  g[m2 + (l2 << 4) + 12 >> 2] = -q2;
                                  h2 = h2 + 1 | 0;
                                }
                              while (0);
                            p2 = p2 + 1 | 0;
                            if ((p2 | 0) == 2)
                              break;
                            else
                              q2 = -1;
                          }
                          w2 = w2 + 1 | 0;
                        } while ((w2 | 0) != (J2 | 0));
                      }
                    } while ((B2 | 0) != (J2 | 0));
                  } else
                    h2 = l2;
                  if ((G2 | 0) == (J2 | 0))
                    break;
                  else
                    l2 = h2;
                }
                if ((h2 | 0) > 0) {
                  o2 = 0;
                  p2 = 0;
                  f2 = 0;
                  while (1) {
                    Z2 = m2 + (f2 << 4) | 0;
                    c[ea2 + 216 >> 2] = c[Z2 >> 2];
                    c[ea2 + 216 + 4 >> 2] = c[Z2 + 4 >> 2];
                    c[ea2 + 216 + 8 >> 2] = c[Z2 + 8 >> 2];
                    q2 = +g[m2 + (f2 << 4) + 12 >> 2];
                    q2 = q2 - +Hb[c[(c[d2 >> 2] | 0) + 48 >> 2] & 15](d2);
                    do
                      if ((f2 | 0) == (o2 | 0)) {
                        n2 = o2 | 0 ? o2 << 1 : 1;
                        if ((o2 | 0) < (n2 | 0)) {
                          if ((n2 | 0) != 0 ? (c[5637] = (c[5637] | 0) + 1, K2 = qG((n2 << 4 | 3) + 16 | 0) | 0, (K2 | 0) != 0) : 0) {
                            c[(K2 + 4 + 15 & -16) + -4 >> 2] = K2;
                            l2 = K2 + 4 + 15 & -16;
                          } else
                            l2 = 0;
                          if ((o2 | 0) <= 0) {
                            if (!p2) {
                              j2 = o2;
                              break;
                            }
                          } else {
                            j2 = 0;
                            do {
                              Z2 = l2 + (j2 << 4) | 0;
                              Y2 = p2 + (j2 << 4) | 0;
                              c[Z2 >> 2] = c[Y2 >> 2];
                              c[Z2 + 4 >> 2] = c[Y2 + 4 >> 2];
                              c[Z2 + 8 >> 2] = c[Y2 + 8 >> 2];
                              c[Z2 + 12 >> 2] = c[Y2 + 12 >> 2];
                              j2 = j2 + 1 | 0;
                            } while ((j2 | 0) != (o2 | 0));
                          }
                          c[5638] = (c[5638] | 0) + 1;
                          rG(c[p2 + -4 >> 2] | 0);
                          j2 = o2;
                        } else {
                          j2 = o2;
                          n2 = o2;
                          l2 = p2;
                        }
                      } else {
                        j2 = f2;
                        n2 = o2;
                        l2 = p2;
                      }
                    while (0);
                    Z2 = l2 + (j2 << 4) | 0;
                    c[Z2 >> 2] = c[ea2 + 216 >> 2];
                    c[Z2 + 4 >> 2] = c[ea2 + 216 + 4 >> 2];
                    c[Z2 + 8 >> 2] = c[ea2 + 216 + 8 >> 2];
                    g[l2 + (j2 << 4) + 12 >> 2] = q2;
                    f2 = f2 + 1 | 0;
                    if ((f2 | 0) < (h2 | 0)) {
                      o2 = n2;
                      p2 = l2;
                    } else
                      break;
                  }
                  if ((f2 | 0) > 0) {
                    C2 = 0;
                    n2 = 0;
                    j2 = 0;
                    h2 = 0;
                    do {
                      A2 = C2;
                      C2 = C2 + 1 | 0;
                      if ((C2 | 0) < (f2 | 0)) {
                        B2 = C2;
                        do {
                          y2 = B2;
                          B2 = B2 + 1 | 0;
                          if ((B2 | 0) < (f2 | 0)) {
                            z2 = B2;
                            do {
                              t2 = +g[l2 + (y2 << 4) + 4 >> 2];
                              q2 = +g[l2 + (z2 << 4) + 8 >> 2];
                              r2 = +g[l2 + (y2 << 4) + 8 >> 2];
                              u2 = +g[l2 + (z2 << 4) + 4 >> 2];
                              v2 = +g[l2 + (z2 << 4) >> 2];
                              x2 = +g[l2 + (y2 << 4) >> 2];
                              s2 = +g[l2 + (A2 << 4) + 8 >> 2];
                              E2 = +g[l2 + (A2 << 4) + 4 >> 2];
                              F2 = +g[l2 + (A2 << 4) >> 2];
                              b:
                                do
                                  if ((((u2 * x2 - t2 * v2) * (u2 * x2 - t2 * v2) + ((t2 * q2 - r2 * u2) * (t2 * q2 - r2 * u2) + (r2 * v2 - q2 * x2) * (r2 * v2 - q2 * x2)) > 9999999747378752e-20 ? (v2 * E2 - u2 * F2) * (v2 * E2 - u2 * F2) + ((u2 * s2 - q2 * E2) * (u2 * s2 - q2 * E2) + (q2 * F2 - v2 * s2) * (q2 * F2 - v2 * s2)) > 9999999747378752e-20 : 0) ? (t2 * F2 - x2 * E2) * (t2 * F2 - x2 * E2) + ((r2 * E2 - t2 * s2) * (r2 * E2 - t2 * s2) + (x2 * s2 - r2 * F2) * (x2 * s2 - r2 * F2)) > 9999999747378752e-20 : 0) ? (L2 = s2 * (u2 * x2 - t2 * v2) + (E2 * (r2 * v2 - q2 * x2) + (t2 * q2 - r2 * u2) * F2), +N(+L2) > 9999999974752427e-22) : 0) {
                                    I2 = +g[l2 + (A2 << 4) + 12 >> 2];
                                    M2 = +g[l2 + (y2 << 4) + 12 >> 2];
                                    fa2 = +g[l2 + (z2 << 4) + 12 >> 2];
                                    H2 = -1 / L2 * ((r2 * E2 - t2 * s2) * fa2 + ((t2 * q2 - r2 * u2) * I2 + (u2 * s2 - q2 * E2) * M2));
                                    r2 = -1 / L2 * ((x2 * s2 - r2 * F2) * fa2 + ((r2 * v2 - q2 * x2) * I2 + (q2 * F2 - v2 * s2) * M2));
                                    q2 = -1 / L2 * ((t2 * F2 - x2 * E2) * fa2 + ((u2 * x2 - t2 * v2) * I2 + (v2 * E2 - u2 * F2) * M2));
                                    o2 = 0;
                                    do {
                                      if (+g[l2 + (o2 << 4) + 12 >> 2] + (H2 * +g[l2 + (o2 << 4) >> 2] + r2 * +g[l2 + (o2 << 4) + 4 >> 2] + q2 * +g[l2 + (o2 << 4) + 8 >> 2]) + -0.009999999776482582 > 0)
                                        break b;
                                      o2 = o2 + 1 | 0;
                                    } while ((o2 | 0) < (f2 | 0));
                                    do
                                      if ((h2 | 0) == (n2 | 0)) {
                                        w2 = n2 | 0 ? n2 << 1 : 1;
                                        if ((n2 | 0) >= (w2 | 0)) {
                                          o2 = n2;
                                          break;
                                        }
                                        do
                                          if (!w2)
                                            p2 = 0;
                                          else {
                                            c[5637] = (c[5637] | 0) + 1;
                                            o2 = qG((w2 << 4 | 3) + 16 | 0) | 0;
                                            if (!o2) {
                                              p2 = 0;
                                              break;
                                            }
                                            c[(o2 + 4 + 15 & -16) + -4 >> 2] = o2;
                                            p2 = o2 + 4 + 15 & -16;
                                          }
                                        while (0);
                                        if ((n2 | 0) <= 0) {
                                          if (!j2) {
                                            o2 = n2;
                                            n2 = w2;
                                            j2 = p2;
                                            break;
                                          }
                                        } else {
                                          o2 = 0;
                                          do {
                                            Z2 = p2 + (o2 << 4) | 0;
                                            Y2 = j2 + (o2 << 4) | 0;
                                            c[Z2 >> 2] = c[Y2 >> 2];
                                            c[Z2 + 4 >> 2] = c[Y2 + 4 >> 2];
                                            c[Z2 + 8 >> 2] = c[Y2 + 8 >> 2];
                                            c[Z2 + 12 >> 2] = c[Y2 + 12 >> 2];
                                            o2 = o2 + 1 | 0;
                                          } while ((o2 | 0) != (n2 | 0));
                                        }
                                        c[5638] = (c[5638] | 0) + 1;
                                        rG(c[j2 + -4 >> 2] | 0);
                                        o2 = n2;
                                        n2 = w2;
                                        j2 = p2;
                                      } else
                                        o2 = h2;
                                    while (0);
                                    g[j2 + (o2 << 4) >> 2] = H2;
                                    g[j2 + (o2 << 4) + 4 >> 2] = r2;
                                    g[j2 + (o2 << 4) + 8 >> 2] = q2;
                                    g[j2 + (o2 << 4) + 12 >> 2] = 0;
                                    h2 = h2 + 1 | 0;
                                  }
                                while (0);
                              z2 = z2 + 1 | 0;
                            } while ((z2 | 0) != (f2 | 0));
                          }
                        } while ((B2 | 0) != (f2 | 0));
                      }
                    } while ((C2 | 0) != (f2 | 0));
                  } else {
                    j2 = 0;
                    h2 = 0;
                  }
                } else {
                  l2 = 0;
                  j2 = 0;
                  h2 = 0;
                }
              } else {
                m2 = 0;
                l2 = 0;
                j2 = 0;
                h2 = 0;
              }
              bs(ea2 + 136 | 0, j2, h2);
              if (j2 | 0) {
                c[5638] = (c[5638] | 0) + 1;
                rG(c[j2 + -4 >> 2] | 0);
              }
              if (l2 | 0) {
                c[5638] = (c[5638] | 0) + 1;
                rG(c[l2 + -4 >> 2] | 0);
              }
              if (m2 | 0) {
                c[5638] = (c[5638] | 0) + 1;
                rG(c[m2 + -4 >> 2] | 0);
              }
            } else
              bs(ea2 + 136 | 0, da2, J2);
            G2 = c[ea2 + 136 + 44 >> 2] | 0;
            if ((G2 | 0) > 0) {
              c[5637] = (c[5637] | 0) + 1;
              h2 = qG((G2 << 4 | 3) + 16 | 0) | 0;
              if (!h2)
                j2 = 0;
              else {
                c[(h2 + 4 + 15 & -16) + -4 >> 2] = h2;
                j2 = h2 + 4 + 15 & -16;
              }
              h2 = 0;
              do {
                Z2 = j2 + (h2 << 4) | 0;
                c[Z2 >> 2] = c[ea2 + 120 >> 2];
                c[Z2 + 4 >> 2] = c[ea2 + 120 + 4 >> 2];
                c[Z2 + 8 >> 2] = c[ea2 + 120 + 8 >> 2];
                c[Z2 + 12 >> 2] = c[ea2 + 120 + 12 >> 2];
                h2 = h2 + 1 | 0;
              } while ((h2 | 0) != (G2 | 0));
            } else
              j2 = 0;
            a[ea2 + 96 + 16 >> 0] = 1;
            Z2 = ea2 + 96 + 12 | 0;
            c[Z2 >> 2] = 0;
            Y2 = ea2 + 96 + 4 | 0;
            c[Y2 >> 2] = 0;
            c[ea2 + 96 + 8 >> 2] = 0;
            m2 = ea2 + 264 | 0;
            o2 = m2 + 19 | 0;
            do {
              a[m2 >> 0] = 0;
              m2 = m2 + 1 | 0;
            } while ((m2 | 0) < (o2 | 0));
            if ((G2 | 0) < 0)
              db();
            if ((G2 | 0) > 0) {
              im(ea2 + 96 | 0, G2);
              h2 = c[Z2 >> 2] | 0;
              l2 = 0;
              do {
                m2 = h2 + (l2 * 36 | 0) | 0;
                a[m2 + 16 >> 0] = 1;
                c[m2 + 4 >> 2] = 0;
                c[m2 + 4 + 4 >> 2] = 0;
                c[m2 + 4 + 8 >> 2] = 0;
                m2 = m2 + 20 | 0;
                n2 = ea2 + 264 + 3 | 0;
                o2 = m2 + 16 | 0;
                do {
                  a[m2 >> 0] = a[n2 >> 0] | 0;
                  m2 = m2 + 1 | 0;
                  n2 = n2 + 1 | 0;
                } while ((m2 | 0) < (o2 | 0));
                l2 = l2 + 1 | 0;
              } while ((l2 | 0) != (G2 | 0));
            }
            c[Y2 >> 2] = G2;
            p2 = c[ea2 + 136 + 4 >> 2] | 0;
            o2 = c[d2 + 56 >> 2] | 0;
            n2 = c[o2 + 8 >> 2] | 0;
            if ((n2 | 0) < (p2 | 0)) {
              if ((c[o2 + 12 >> 2] | 0) < (p2 | 0)) {
                if (!p2) {
                  h2 = 0;
                  l2 = n2;
                } else {
                  c[5637] = (c[5637] | 0) + 1;
                  h2 = qG((p2 << 4 | 3) + 16 | 0) | 0;
                  if (!h2)
                    h2 = 0;
                  else {
                    c[(h2 + 4 + 15 & -16) + -4 >> 2] = h2;
                    h2 = h2 + 4 + 15 & -16;
                  }
                  l2 = c[o2 + 8 >> 2] | 0;
                }
                if ((l2 | 0) > 0) {
                  m2 = 0;
                  do {
                    X2 = h2 + (m2 << 4) | 0;
                    W2 = (c[o2 + 16 >> 2] | 0) + (m2 << 4) | 0;
                    c[X2 >> 2] = c[W2 >> 2];
                    c[X2 + 4 >> 2] = c[W2 + 4 >> 2];
                    c[X2 + 8 >> 2] = c[W2 + 8 >> 2];
                    c[X2 + 12 >> 2] = c[W2 + 12 >> 2];
                    m2 = m2 + 1 | 0;
                  } while ((m2 | 0) != (l2 | 0));
                }
                l2 = c[o2 + 16 >> 2] | 0;
                if (l2 | 0) {
                  if (a[o2 + 20 >> 0] | 0) {
                    c[5638] = (c[5638] | 0) + 1;
                    rG(c[l2 + -4 >> 2] | 0);
                  }
                  c[o2 + 16 >> 2] = 0;
                }
                a[o2 + 20 >> 0] = 1;
                c[o2 + 16 >> 2] = h2;
                c[o2 + 12 >> 2] = p2;
                l2 = o2 + 16 | 0;
              } else
                l2 = o2 + 16 | 0;
              h2 = n2;
              do {
                X2 = (c[l2 >> 2] | 0) + (h2 << 4) | 0;
                c[X2 >> 2] = c[ea2 + 80 >> 2];
                c[X2 + 4 >> 2] = c[ea2 + 80 + 4 >> 2];
                c[X2 + 8 >> 2] = c[ea2 + 80 + 8 >> 2];
                c[X2 + 12 >> 2] = c[ea2 + 80 + 12 >> 2];
                h2 = h2 + 1 | 0;
              } while ((h2 | 0) != (p2 | 0));
            }
            c[o2 + 8 >> 2] = p2;
            if ((p2 | 0) > 0) {
              h2 = 0;
              do {
                X2 = (c[(c[d2 + 56 >> 2] | 0) + 16 >> 2] | 0) + (h2 << 4) | 0;
                W2 = (c[ca2 >> 2] | 0) + (h2 << 4) | 0;
                c[X2 >> 2] = c[W2 >> 2];
                c[X2 + 4 >> 2] = c[W2 + 4 >> 2];
                c[X2 + 8 >> 2] = c[W2 + 8 >> 2];
                c[X2 + 12 >> 2] = c[W2 + 12 >> 2];
                h2 = h2 + 1 | 0;
              } while ((h2 | 0) != (p2 | 0));
            }
            if ((G2 | 0) > 0) {
              D2 = 0;
              do {
                A2 = (c[ba2 >> 2] | 0) + ((c[(c[aa2 >> 2] | 0) + (D2 << 2) >> 2] | 0) * 12 | 0) | 0;
                C2 = A2;
                l2 = 0;
                do {
                  B2 = C2 + 4 | 0;
                  z2 = c[C2 + ((c[B2 >> 2] | 0) * 12 | 0) + 8 >> 2] | 0;
                  w2 = c[Z2 >> 2] | 0;
                  y2 = w2 + (D2 * 36 | 0) + 4 | 0;
                  h2 = c[y2 >> 2] | 0;
                  f2 = w2 + (D2 * 36 | 0) + 8 | 0;
                  if ((h2 | 0) == (c[f2 >> 2] | 0) ? (P2 = h2 | 0 ? h2 << 1 : 1, (h2 | 0) < (P2 | 0)) : 0) {
                    if (!P2)
                      p2 = 0;
                    else {
                      c[5637] = (c[5637] | 0) + 1;
                      h2 = qG((P2 << 2 | 3) + 16 | 0) | 0;
                      if (!h2)
                        h2 = 0;
                      else {
                        c[(h2 + 4 + 15 & -16) + -4 >> 2] = h2;
                        h2 = h2 + 4 + 15 & -16;
                      }
                      p2 = h2;
                      h2 = c[y2 >> 2] | 0;
                    }
                    o2 = w2 + (D2 * 36 | 0) + 12 | 0;
                    n2 = c[o2 >> 2] | 0;
                    if ((h2 | 0) <= 0)
                      if (!n2)
                        m2 = w2 + (D2 * 36 | 0) + 16 | 0;
                      else
                        $2 = 132;
                    else {
                      m2 = 0;
                      do {
                        c[p2 + (m2 << 2) >> 2] = c[n2 + (m2 << 2) >> 2];
                        m2 = m2 + 1 | 0;
                      } while ((m2 | 0) != (h2 | 0));
                      $2 = 132;
                    }
                    if (($2 | 0) == 132) {
                      $2 = 0;
                      h2 = w2 + (D2 * 36 | 0) + 16 | 0;
                      if (a[h2 >> 0] | 0) {
                        c[5638] = (c[5638] | 0) + 1;
                        rG(c[n2 + -4 >> 2] | 0);
                      }
                      c[o2 >> 2] = 0;
                      m2 = h2;
                      h2 = c[y2 >> 2] | 0;
                    }
                    a[m2 >> 0] = 1;
                    c[o2 >> 2] = p2;
                    c[f2 >> 2] = P2;
                  }
                  c[(c[w2 + (D2 * 36 | 0) + 12 >> 2] | 0) + (h2 << 2) >> 2] = z2;
                  c[y2 >> 2] = (c[y2 >> 2] | 0) + 1;
                  W2 = c[C2 + 8 >> 2] | 0;
                  X2 = c[ca2 >> 2] | 0;
                  s2 = +g[X2 + (W2 << 4) >> 2] - +g[X2 + (z2 << 4) >> 2];
                  t2 = +g[X2 + (W2 << 4) + 4 >> 2] - +g[X2 + (z2 << 4) + 4 >> 2];
                  q2 = +g[X2 + (W2 << 4) + 8 >> 2] - +g[X2 + (z2 << 4) + 8 >> 2];
                  r2 = 1 / +O(+(s2 * s2 + t2 * t2 + q2 * q2));
                  if ((l2 | 0) < 2) {
                    g[ea2 + 216 + (l2 << 4) >> 2] = s2 * r2;
                    g[ea2 + 216 + (l2 << 4) + 4 >> 2] = t2 * r2;
                    g[ea2 + 216 + (l2 << 4) + 8 >> 2] = q2 * r2;
                    g[ea2 + 216 + (l2 << 4) + 12 >> 2] = 0;
                    l2 = l2 + 1 | 0;
                  }
                  X2 = C2 + ((c[B2 >> 2] | 0) * 12 | 0) | 0;
                  C2 = X2 + ((c[X2 >> 2] | 0) * 12 | 0) | 0;
                } while ((C2 | 0) != (A2 | 0));
                h2 = j2 + (D2 << 4) | 0;
                if ((l2 | 0) == 2) {
                  H2 = +g[ea2 + 216 + 4 >> 2];
                  I2 = +g[ea2 + 216 + 24 >> 2];
                  L2 = +g[ea2 + 216 + 8 >> 2];
                  M2 = +g[ea2 + 216 + 20 >> 2];
                  F2 = +g[ea2 + 216 + 16 >> 2];
                  E2 = +g[ea2 + 216 >> 2];
                  W2 = j2 + (D2 << 4) + 4 | 0;
                  X2 = j2 + (D2 << 4) + 8 | 0;
                  g[j2 + (D2 << 4) + 12 >> 2] = 0;
                  fa2 = 1 / +O(+((H2 * I2 - L2 * M2) * (H2 * I2 - L2 * M2) + (L2 * F2 - I2 * E2) * (L2 * F2 - I2 * E2) + (M2 * E2 - H2 * F2) * (M2 * E2 - H2 * F2)));
                  g[h2 >> 2] = (H2 * I2 - L2 * M2) * fa2;
                  g[W2 >> 2] = (L2 * F2 - I2 * E2) * fa2;
                  g[X2 >> 2] = (M2 * E2 - H2 * F2) * fa2;
                  o2 = c[Z2 >> 2] | 0;
                  g[o2 + (D2 * 36 | 0) + 20 >> 2] = (H2 * I2 - L2 * M2) * fa2;
                  c[o2 + (D2 * 36 | 0) + 24 >> 2] = c[W2 >> 2];
                  c[o2 + (D2 * 36 | 0) + 28 >> 2] = c[X2 >> 2];
                  g[o2 + (D2 * 36 | 0) + 32 >> 2] = 10000000150474662e14;
                } else {
                  c[h2 >> 2] = 0;
                  c[h2 + 4 >> 2] = 0;
                  c[h2 + 8 >> 2] = 0;
                  c[h2 + 12 >> 2] = 0;
                  o2 = c[Z2 >> 2] | 0;
                }
                m2 = c[o2 + (D2 * 36 | 0) + 4 >> 2] | 0;
                if ((m2 | 0) > 0) {
                  n2 = c[(c[d2 + 56 >> 2] | 0) + 16 >> 2] | 0;
                  r2 = +g[h2 >> 2];
                  s2 = +g[j2 + (D2 << 4) + 4 >> 2];
                  t2 = +g[j2 + (D2 << 4) + 8 >> 2];
                  h2 = c[o2 + (D2 * 36 | 0) + 12 >> 2] | 0;
                  q2 = 10000000150474662e14;
                  l2 = 0;
                  do {
                    X2 = c[h2 + (l2 << 2) >> 2] | 0;
                    fa2 = +g[n2 + (X2 << 4) >> 2] * r2 + +g[n2 + (X2 << 4) + 4 >> 2] * s2 + +g[n2 + (X2 << 4) + 8 >> 2] * t2;
                    q2 = q2 > fa2 ? fa2 : q2;
                    l2 = l2 + 1 | 0;
                  } while ((l2 | 0) != (m2 | 0));
                } else
                  q2 = 10000000150474662e14;
                g[o2 + (D2 * 36 | 0) + 32 >> 2] = -q2;
                D2 = D2 + 1 | 0;
              } while ((D2 | 0) != (G2 | 0));
            }
            if ((c[Y2 >> 2] | 0) > 0) {
              o2 = 0;
              h2 = 0;
              n2 = 0;
              while (1) {
                do
                  if ((o2 | 0) == (h2 | 0)) {
                    h2 = o2 | 0 ? o2 << 1 : 1;
                    if ((o2 | 0) < (h2 | 0)) {
                      if ((h2 | 0) != 0 ? (c[5637] = (c[5637] | 0) + 1, Q2 = qG((h2 << 2 | 3) + 16 | 0) | 0, (Q2 | 0) != 0) : 0) {
                        c[(Q2 + 4 + 15 & -16) + -4 >> 2] = Q2;
                        m2 = Q2 + 4 + 15 & -16;
                      } else
                        m2 = 0;
                      if ((o2 | 0) <= 0) {
                        if (!n2)
                          break;
                      } else {
                        l2 = 0;
                        do {
                          c[m2 + (l2 << 2) >> 2] = c[n2 + (l2 << 2) >> 2];
                          l2 = l2 + 1 | 0;
                        } while ((l2 | 0) != (o2 | 0));
                      }
                      c[5638] = (c[5638] | 0) + 1;
                      rG(c[n2 + -4 >> 2] | 0);
                    } else {
                      h2 = o2;
                      m2 = n2;
                    }
                  } else
                    m2 = n2;
                while (0);
                c[m2 + (o2 << 2) >> 2] = o2;
                o2 = o2 + 1 | 0;
                if ((o2 | 0) >= (c[Y2 >> 2] | 0))
                  break;
                else
                  n2 = m2;
              }
              P2 = ea2 + 56 + 12 | 0;
              Q2 = ea2 + 56 + 4 | 0;
              while (1) {
                f2 = o2 + -1 | 0;
                l2 = c[m2 + (f2 << 2) >> 2] | 0;
                c[5637] = (c[5637] | 0) + 1;
                h2 = qG(23) | 0;
                if (!h2)
                  h2 = 0;
                else {
                  c[(h2 + 4 + 15 & -16) + -4 >> 2] = h2;
                  h2 = h2 + 4 + 15 & -16;
                }
                c[h2 >> 2] = l2;
                X2 = c[Z2 >> 2] | 0;
                r2 = +g[X2 + (l2 * 36 | 0) + 20 >> 2];
                s2 = +g[X2 + (l2 * 36 | 0) + 24 >> 2];
                q2 = +g[X2 + (l2 * 36 | 0) + 28 >> 2];
                c:
                  do
                    if ((o2 | 0) > 1) {
                      n2 = 1;
                      p2 = 1;
                      l2 = h2;
                      h2 = f2;
                      z2 = f2;
                      while (1) {
                        y2 = p2;
                        f2 = l2;
                        d:
                          while (1) {
                            l2 = c[Z2 >> 2] | 0;
                            do {
                              X2 = h2;
                              h2 = h2 + -1 | 0;
                              if ((X2 | 0) <= 0) {
                                h2 = l2;
                                K2 = y2;
                                J2 = f2;
                                o2 = z2;
                                break c;
                              }
                              w2 = c[m2 + (h2 << 2) >> 2] | 0;
                            } while (!(r2 * +g[l2 + (w2 * 36 | 0) + 20 >> 2] + s2 * +g[l2 + (w2 * 36 | 0) + 24 >> 2] + q2 * +g[l2 + (w2 * 36 | 0) + 28 >> 2] > 0.9990000128746033));
                            do
                              if ((y2 | 0) == (n2 | 0)) {
                                n2 = y2 | 0 ? y2 << 1 : 1;
                                if ((y2 | 0) < (n2 | 0)) {
                                  do
                                    if (!n2)
                                      o2 = 0;
                                    else {
                                      c[5637] = (c[5637] | 0) + 1;
                                      l2 = qG((n2 << 2 | 3) + 16 | 0) | 0;
                                      if (!l2) {
                                        o2 = 0;
                                        break;
                                      }
                                      c[(l2 + 4 + 15 & -16) + -4 >> 2] = l2;
                                      o2 = l2 + 4 + 15 & -16;
                                    }
                                  while (0);
                                  if ((y2 | 0) <= 0) {
                                    if (!f2) {
                                      f2 = o2;
                                      break;
                                    }
                                  } else {
                                    l2 = 0;
                                    do {
                                      c[o2 + (l2 << 2) >> 2] = c[f2 + (l2 << 2) >> 2];
                                      l2 = l2 + 1 | 0;
                                    } while ((l2 | 0) != (y2 | 0));
                                  }
                                  c[5638] = (c[5638] | 0) + 1;
                                  rG(c[f2 + -4 >> 2] | 0);
                                  f2 = o2;
                                } else
                                  n2 = y2;
                              }
                            while (0);
                            c[f2 + (y2 << 2) >> 2] = w2;
                            y2 = y2 + 1 | 0;
                            l2 = 0;
                            while (1) {
                              p2 = m2 + (l2 << 2) | 0;
                              if ((c[p2 >> 2] | 0) == (w2 | 0))
                                break;
                              l2 = l2 + 1 | 0;
                              if ((l2 | 0) >= (z2 | 0))
                                continue d;
                            }
                            if ((l2 | 0) < (z2 | 0))
                              break;
                          }
                        o2 = z2 + -1 | 0;
                        X2 = m2 + (o2 << 2) | 0;
                        c[p2 >> 2] = c[X2 >> 2];
                        c[X2 >> 2] = w2;
                        if ((z2 | 0) > 1) {
                          p2 = y2;
                          l2 = f2;
                          z2 = o2;
                        } else {
                          p2 = y2;
                          l2 = f2;
                          $2 = 161;
                          break;
                        }
                      }
                    } else {
                      n2 = 1;
                      p2 = 1;
                      l2 = h2;
                      h2 = f2;
                      o2 = f2;
                      $2 = 161;
                    }
                  while (0);
                e:
                  do
                    if (($2 | 0) == 161) {
                      $2 = 0;
                      y2 = p2;
                      w2 = l2;
                      while (1) {
                        l2 = c[Z2 >> 2] | 0;
                        do {
                          X2 = h2;
                          h2 = h2 + -1 | 0;
                          if ((X2 | 0) <= 0) {
                            h2 = l2;
                            K2 = y2;
                            J2 = w2;
                            break e;
                          }
                          f2 = c[m2 + (h2 << 2) >> 2] | 0;
                        } while (!(r2 * +g[l2 + (f2 * 36 | 0) + 20 >> 2] + s2 * +g[l2 + (f2 * 36 | 0) + 24 >> 2] + q2 * +g[l2 + (f2 * 36 | 0) + 28 >> 2] > 0.9990000128746033));
                        do
                          if ((y2 | 0) == (n2 | 0)) {
                            n2 = y2 | 0 ? y2 << 1 : 1;
                            if ((y2 | 0) < (n2 | 0)) {
                              do
                                if (!n2)
                                  l2 = 0;
                                else {
                                  c[5637] = (c[5637] | 0) + 1;
                                  l2 = qG((n2 << 2 | 3) + 16 | 0) | 0;
                                  if (!l2) {
                                    l2 = 0;
                                    break;
                                  }
                                  c[(l2 + 4 + 15 & -16) + -4 >> 2] = l2;
                                  l2 = l2 + 4 + 15 & -16;
                                }
                              while (0);
                              if ((y2 | 0) <= 0) {
                                if (!w2)
                                  break;
                              } else {
                                p2 = 0;
                                do {
                                  c[l2 + (p2 << 2) >> 2] = c[w2 + (p2 << 2) >> 2];
                                  p2 = p2 + 1 | 0;
                                } while ((p2 | 0) != (y2 | 0));
                              }
                              c[5638] = (c[5638] | 0) + 1;
                              rG(c[w2 + -4 >> 2] | 0);
                            } else {
                              n2 = y2;
                              l2 = w2;
                            }
                          } else
                            l2 = w2;
                        while (0);
                        c[l2 + (y2 << 2) >> 2] = f2;
                        y2 = y2 + 1 | 0;
                        w2 = l2;
                      }
                    }
                  while (0);
                if ((K2 | 0) > 1) {
                  a[ea2 + 56 + 16 >> 0] = 1;
                  c[P2 >> 2] = 0;
                  c[Q2 >> 2] = 0;
                  c[ea2 + 56 + 8 >> 2] = 0;
                  q2 = 0;
                  r2 = 0;
                  s2 = 0;
                  n2 = 0;
                  B2 = 0;
                  do {
                    l2 = c[J2 + (B2 << 2) >> 2] | 0;
                    q2 = +g[h2 + (l2 * 36 | 0) + 20 >> 2] + q2;
                    r2 = +g[h2 + (l2 * 36 | 0) + 24 >> 2] + r2;
                    s2 = +g[h2 + (l2 * 36 | 0) + 28 >> 2] + s2;
                    A2 = h2 + (l2 * 36 | 0) + 4 | 0;
                    if ((c[A2 >> 2] | 0) > 0) {
                      z2 = h2 + (l2 * 36 | 0) + 12 | 0;
                      h2 = n2;
                      y2 = 0;
                      while (1) {
                        w2 = c[(c[z2 >> 2] | 0) + (y2 << 2) >> 2] | 0;
                        X2 = (c[(c[d2 + 56 >> 2] | 0) + 16 >> 2] | 0) + (w2 << 4) | 0;
                        c[ea2 + 216 >> 2] = c[X2 >> 2];
                        c[ea2 + 216 + 4 >> 2] = c[X2 + 4 >> 2];
                        c[ea2 + 216 + 8 >> 2] = c[X2 + 8 >> 2];
                        c[ea2 + 216 + 12 >> 2] = c[X2 + 12 >> 2];
                        f:
                          do
                            if ((h2 | 0) > 0) {
                              l2 = c[P2 >> 2] | 0;
                              n2 = 0;
                              while (1) {
                                if ((c[l2 + (n2 * 24 | 0) + 20 >> 2] | 0) == (w2 | 0))
                                  break f;
                                n2 = n2 + 1 | 0;
                                if ((n2 | 0) >= (h2 | 0)) {
                                  $2 = 263;
                                  break;
                                }
                              }
                            } else
                              $2 = 263;
                          while (0);
                        if (($2 | 0) == 263) {
                          $2 = 0;
                          c[ea2 >> 2] = c[ea2 + 216 >> 2];
                          c[ea2 + 4 >> 2] = c[ea2 + 216 + 4 >> 2];
                          c[ea2 + 8 >> 2] = c[ea2 + 216 + 8 >> 2];
                          c[ea2 + 12 >> 2] = c[ea2 + 216 + 12 >> 2];
                          do
                            if ((h2 | 0) == (c[ea2 + 56 + 8 >> 2] | 0)) {
                              f2 = h2 | 0 ? h2 << 1 : 1;
                              if ((h2 | 0) >= (f2 | 0))
                                break;
                              if (!f2)
                                p2 = 0;
                              else {
                                c[5637] = (c[5637] | 0) + 1;
                                h2 = qG((f2 * 24 | 3) + 16 | 0) | 0;
                                if (!h2)
                                  h2 = 0;
                                else {
                                  c[(h2 + 4 + 15 & -16) + -4 >> 2] = h2;
                                  h2 = h2 + 4 + 15 & -16;
                                }
                                p2 = h2;
                                h2 = c[Q2 >> 2] | 0;
                              }
                              n2 = c[P2 >> 2] | 0;
                              if ((h2 | 0) <= 0) {
                                if (n2)
                                  $2 = 272;
                              } else {
                                l2 = 0;
                                do {
                                  $2 = p2 + (l2 * 24 | 0) | 0;
                                  X2 = n2 + (l2 * 24 | 0) | 0;
                                  c[$2 >> 2] = c[X2 >> 2];
                                  c[$2 + 4 >> 2] = c[X2 + 4 >> 2];
                                  c[$2 + 8 >> 2] = c[X2 + 8 >> 2];
                                  c[$2 + 12 >> 2] = c[X2 + 12 >> 2];
                                  c[$2 + 16 >> 2] = c[X2 + 16 >> 2];
                                  c[$2 + 20 >> 2] = c[X2 + 20 >> 2];
                                  l2 = l2 + 1 | 0;
                                } while ((l2 | 0) != (h2 | 0));
                                $2 = 272;
                              }
                              if (($2 | 0) == 272) {
                                $2 = 0;
                                if (a[ea2 + 56 + 16 >> 0] | 0) {
                                  c[5638] = (c[5638] | 0) + 1;
                                  rG(c[n2 + -4 >> 2] | 0);
                                  h2 = c[Q2 >> 2] | 0;
                                }
                                c[P2 >> 2] = 0;
                              }
                              a[ea2 + 56 + 16 >> 0] = 1;
                              c[P2 >> 2] = p2;
                              c[ea2 + 56 + 8 >> 2] = f2;
                            }
                          while (0);
                          X2 = c[P2 >> 2] | 0;
                          W2 = X2 + (h2 * 24 | 0) | 0;
                          c[W2 >> 2] = c[ea2 >> 2];
                          c[W2 + 4 >> 2] = c[ea2 + 4 >> 2];
                          c[W2 + 8 >> 2] = c[ea2 + 8 >> 2];
                          c[W2 + 12 >> 2] = c[ea2 + 12 >> 2];
                          c[W2 + 16 >> 2] = c[ea2 + 16 >> 2];
                          c[X2 + (h2 * 24 | 0) + 20 >> 2] = w2;
                          h2 = (c[Q2 >> 2] | 0) + 1 | 0;
                          c[Q2 >> 2] = h2;
                        }
                        y2 = y2 + 1 | 0;
                        if ((y2 | 0) >= (c[A2 >> 2] | 0)) {
                          n2 = h2;
                          break;
                        }
                      }
                    }
                    B2 = B2 + 1 | 0;
                    h2 = c[Z2 >> 2] | 0;
                  } while ((B2 | 0) < (K2 | 0));
                  a[ea2 + 20 + 16 >> 0] = 1;
                  c[ea2 + 20 + 12 >> 2] = 0;
                  c[ea2 + 20 + 4 >> 2] = 0;
                  c[ea2 + 20 + 8 >> 2] = 0;
                  X2 = h2 + 20 + ((c[J2 >> 2] | 0) * 9 << 2) | 0;
                  c[ea2 + 20 + 20 >> 2] = c[X2 >> 2];
                  c[ea2 + 20 + 20 + 4 >> 2] = c[X2 + 4 >> 2];
                  c[ea2 + 20 + 20 + 8 >> 2] = c[X2 + 8 >> 2];
                  c[ea2 + 20 + 20 + 12 >> 2] = c[X2 + 12 >> 2];
                  I2 = 1 / +O(+(q2 * q2 + r2 * r2 + s2 * s2));
                  M2 = q2 * I2;
                  L2 = r2 * I2;
                  I2 = s2 * I2;
                  if (+N(+I2) > 0.7071067690849304) {
                    H2 = 1 / +O(+(I2 * I2 + L2 * L2));
                    u2 = M2 * -(I2 * H2);
                    v2 = 0;
                    x2 = L2 * H2;
                    E2 = -(I2 * H2);
                    F2 = (I2 * I2 + L2 * L2) * H2;
                    H2 = -(M2 * (L2 * H2));
                  } else {
                    H2 = 1 / +O(+(M2 * M2 + L2 * L2));
                    u2 = (M2 * M2 + L2 * L2) * H2;
                    v2 = -(L2 * H2);
                    x2 = 0;
                    E2 = M2 * H2;
                    F2 = -(I2 * (M2 * H2));
                    H2 = I2 * -(L2 * H2);
                  }
                  if ((n2 | 0) < 2)
                    if ((n2 | 0) > 0) {
                      h2 = n2;
                      n2 = 0;
                      p2 = 0;
                      y2 = 0;
                      while (1) {
                        z2 = c[P2 >> 2] | 0;
                        do
                          if ((n2 | 0) == (p2 | 0)) {
                            w2 = p2 | 0 ? p2 << 1 : 1;
                            if ((p2 | 0) >= (w2 | 0)) {
                              f2 = p2;
                              l2 = y2;
                              break;
                            }
                            do
                              if (!w2)
                                l2 = 0;
                              else {
                                c[5637] = (c[5637] | 0) + 1;
                                h2 = qG((w2 * 24 | 3) + 16 | 0) | 0;
                                if (!h2) {
                                  l2 = 0;
                                  p2 = n2;
                                  break;
                                }
                                c[(h2 + 4 + 15 & -16) + -4 >> 2] = h2;
                                l2 = h2 + 4 + 15 & -16;
                                p2 = n2;
                              }
                            while (0);
                            if ((p2 | 0) <= 0) {
                              if (y2 | 0)
                                $2 = 209;
                            } else {
                              h2 = 0;
                              do {
                                $2 = l2 + (h2 * 24 | 0) | 0;
                                X2 = y2 + (h2 * 24 | 0) | 0;
                                c[$2 >> 2] = c[X2 >> 2];
                                c[$2 + 4 >> 2] = c[X2 + 4 >> 2];
                                c[$2 + 8 >> 2] = c[X2 + 8 >> 2];
                                c[$2 + 12 >> 2] = c[X2 + 12 >> 2];
                                c[$2 + 16 >> 2] = c[X2 + 16 >> 2];
                                c[$2 + 20 >> 2] = c[X2 + 20 >> 2];
                                h2 = h2 + 1 | 0;
                              } while ((h2 | 0) != (p2 | 0));
                              $2 = 209;
                            }
                            if (($2 | 0) == 209) {
                              $2 = 0;
                              c[5638] = (c[5638] | 0) + 1;
                              rG(c[y2 + -4 >> 2] | 0);
                            }
                            f2 = n2;
                            h2 = c[Q2 >> 2] | 0;
                            p2 = w2;
                          } else {
                            f2 = n2;
                            l2 = y2;
                          }
                        while (0);
                        X2 = l2 + (f2 * 24 | 0) | 0;
                        c[X2 >> 2] = c[z2 >> 2];
                        c[X2 + 4 >> 2] = c[z2 + 4 >> 2];
                        c[X2 + 8 >> 2] = c[z2 + 8 >> 2];
                        c[X2 + 12 >> 2] = c[z2 + 12 >> 2];
                        c[X2 + 16 >> 2] = c[z2 + 16 >> 2];
                        c[X2 + 20 >> 2] = c[z2 + 20 >> 2];
                        n2 = n2 + 1 | 0;
                        if ((n2 | 0) < (h2 | 0))
                          y2 = l2;
                        else {
                          $2 = 278;
                          break;
                        }
                      }
                    } else {
                      h2 = 0;
                      l2 = 0;
                      $2 = 307;
                    }
                  else {
                    h2 = c[P2 >> 2] | 0;
                    l2 = n2;
                    p2 = 0;
                    do {
                      if (v2 * +g[h2 + (p2 * 24 | 0) >> 2] + E2 * +g[h2 + (p2 * 24 | 0) + 4 >> 2] + x2 * +g[h2 + (p2 * 24 | 0) + 8 >> 2] < v2 * +g[h2 >> 2] + E2 * +g[h2 + 4 >> 2] + x2 * +g[h2 + 8 >> 2]) {
                        c[ea2 + 216 >> 2] = c[h2 >> 2];
                        c[ea2 + 216 + 4 >> 2] = c[h2 + 4 >> 2];
                        c[ea2 + 216 + 8 >> 2] = c[h2 + 8 >> 2];
                        c[ea2 + 216 + 12 >> 2] = c[h2 + 12 >> 2];
                        c[ea2 + 216 + 16 >> 2] = c[h2 + 16 >> 2];
                        c[ea2 + 216 + 20 >> 2] = c[h2 + 20 >> 2];
                        l2 = h2 + (p2 * 24 | 0) | 0;
                        c[h2 >> 2] = c[l2 >> 2];
                        c[h2 + 4 >> 2] = c[l2 + 4 >> 2];
                        c[h2 + 8 >> 2] = c[l2 + 8 >> 2];
                        c[h2 + 12 >> 2] = c[l2 + 12 >> 2];
                        c[h2 + 16 >> 2] = c[l2 + 16 >> 2];
                        c[h2 + 20 >> 2] = c[l2 + 20 >> 2];
                        l2 = h2 + (p2 * 24 | 0) | 0;
                        c[l2 >> 2] = c[ea2 + 216 >> 2];
                        c[l2 + 4 >> 2] = c[ea2 + 216 + 4 >> 2];
                        c[l2 + 8 >> 2] = c[ea2 + 216 + 8 >> 2];
                        c[l2 + 12 >> 2] = c[ea2 + 216 + 12 >> 2];
                        c[l2 + 16 >> 2] = c[ea2 + 216 + 16 >> 2];
                        c[l2 + 20 >> 2] = c[ea2 + 216 + 20 >> 2];
                        l2 = n2;
                      }
                      p2 = p2 + 1 | 0;
                    } while ((p2 | 0) < (l2 | 0));
                    g[h2 + 16 >> 2] = -10000000150474662e14;
                    if ((l2 | 0) > 1) {
                      h2 = c[P2 >> 2] | 0;
                      l2 = c[Q2 >> 2] | 0;
                      s2 = +g[h2 + 4 >> 2];
                      n2 = 1;
                      do {
                        r2 = +g[h2 + (n2 * 24 | 0) >> 2] - +g[h2 >> 2];
                        fa2 = +g[h2 + (n2 * 24 | 0) + 4 >> 2] - s2;
                        q2 = +g[h2 + (n2 * 24 | 0) + 8 >> 2] - +g[h2 + 8 >> 2];
                        t2 = F2 * r2 + H2 * fa2 + u2 * q2;
                        q2 = v2 * r2 + E2 * fa2 + x2 * q2;
                        if (t2 * t2 + q2 * q2 < 11920928955078125e-23)
                          g[h2 + (n2 * 24 | 0) + 16 >> 2] = 0;
                        else {
                          r2 = +N(+t2);
                          if (!(q2 >= 0))
                            q2 = 2.356194496154785 - (q2 + r2) / (r2 - q2) * 0.7853981852531433;
                          else
                            q2 = 0.7853981852531433 - (q2 - r2) / (q2 + r2) * 0.7853981852531433;
                          g[h2 + (n2 * 24 | 0) + 16 >> 2] = t2 < 0 ? -q2 : q2;
                        }
                        n2 = n2 + 1 | 0;
                      } while ((n2 | 0) < (l2 | 0));
                    }
                    ;
                    c[ea2 + 216 >> 2] = c[h2 >> 2];
                    c[ea2 + 216 + 4 >> 2] = c[h2 + 4 >> 2];
                    c[ea2 + 216 + 8 >> 2] = c[h2 + 8 >> 2];
                    c[ea2 + 216 + 12 >> 2] = c[h2 + 12 >> 2];
                    jm(ea2 + 56 | 0, ea2 + 216 | 0, 1, (c[Q2 >> 2] | 0) + -1 | 0);
                    l2 = c[P2 >> 2] | 0;
                    c[5637] = (c[5637] | 0) + 1;
                    h2 = qG(43) | 0;
                    if (!h2)
                      p2 = 0;
                    else {
                      c[(h2 + 4 + 15 & -16) + -4 >> 2] = h2;
                      p2 = h2 + 4 + 15 & -16;
                    }
                    n2 = c[P2 >> 2] | 0;
                    c[p2 >> 2] = c[l2 >> 2];
                    c[p2 + 4 >> 2] = c[l2 + 4 >> 2];
                    c[p2 + 8 >> 2] = c[l2 + 8 >> 2];
                    c[p2 + 12 >> 2] = c[l2 + 12 >> 2];
                    c[p2 + 16 >> 2] = c[l2 + 16 >> 2];
                    c[p2 + 20 >> 2] = c[l2 + 20 >> 2];
                    c[5637] = (c[5637] | 0) + 1;
                    h2 = qG(67) | 0;
                    if (!h2)
                      l2 = 0;
                    else {
                      c[(h2 + 4 + 15 & -16) + -4 >> 2] = h2;
                      l2 = h2 + 4 + 15 & -16;
                    }
                    ;
                    c[l2 >> 2] = c[p2 >> 2];
                    c[l2 + 4 >> 2] = c[p2 + 4 >> 2];
                    c[l2 + 8 >> 2] = c[p2 + 8 >> 2];
                    c[l2 + 12 >> 2] = c[p2 + 12 >> 2];
                    c[l2 + 16 >> 2] = c[p2 + 16 >> 2];
                    c[l2 + 20 >> 2] = c[p2 + 20 >> 2];
                    if (p2 | 0) {
                      c[5638] = (c[5638] | 0) + 1;
                      rG(c[p2 + -4 >> 2] | 0);
                    }
                    X2 = l2 + 24 | 0;
                    c[X2 >> 2] = c[n2 + 24 >> 2];
                    c[X2 + 4 >> 2] = c[n2 + 24 + 4 >> 2];
                    c[X2 + 8 >> 2] = c[n2 + 24 + 8 >> 2];
                    c[X2 + 12 >> 2] = c[n2 + 24 + 12 >> 2];
                    c[X2 + 16 >> 2] = c[n2 + 24 + 16 >> 2];
                    c[X2 + 20 >> 2] = c[n2 + 24 + 20 >> 2];
                    if ((c[Q2 >> 2] | 0) == 2) {
                      h2 = 2;
                      n2 = 2;
                    } else {
                      f2 = 2;
                      n2 = 2;
                      w2 = 2;
                      h2 = 2;
                      do {
                        g:
                          do
                            if ((f2 | 0) > 1) {
                              X2 = c[P2 >> 2] | 0;
                              A2 = X2 + (h2 * 24 | 0) | 0;
                              q2 = +g[A2 >> 2];
                              r2 = +g[X2 + (h2 * 24 | 0) + 4 >> 2];
                              s2 = +g[X2 + (h2 * 24 | 0) + 8 >> 2];
                              while (1) {
                                X2 = f2 + -2 | 0;
                                p2 = f2 + -1 | 0;
                                F2 = +g[l2 + (X2 * 24 | 0) >> 2];
                                H2 = F2 - +g[l2 + (p2 * 24 | 0) >> 2];
                                x2 = +g[l2 + (X2 * 24 | 0) + 4 >> 2];
                                v2 = x2 - +g[l2 + (p2 * 24 | 0) + 4 >> 2];
                                fa2 = +g[l2 + (X2 * 24 | 0) + 8 >> 2];
                                E2 = fa2 - +g[l2 + (p2 * 24 | 0) + 8 >> 2];
                                if ((H2 * (x2 - r2) - v2 * (F2 - q2)) * I2 + (M2 * (v2 * (fa2 - s2) - E2 * (x2 - r2)) + L2 * (E2 * (F2 - q2) - H2 * (fa2 - s2))) > 0)
                                  break;
                                if ((p2 | 0) > 1) {
                                  f2 = p2;
                                  n2 = p2;
                                } else {
                                  f2 = p2;
                                  n2 = p2;
                                  break g;
                                }
                              }
                              do
                                if ((f2 | 0) == (w2 | 0)) {
                                  z2 = w2 << 1;
                                  if ((w2 | 0) >= (z2 | 0)) {
                                    f2 = w2;
                                    break;
                                  }
                                  if (w2) {
                                    c[5637] = (c[5637] | 0) + 1;
                                    p2 = qG((w2 * 48 | 3) + 16 | 0) | 0;
                                    if (!p2)
                                      p2 = 0;
                                    else {
                                      c[(p2 + 4 + 15 & -16) + -4 >> 2] = p2;
                                      p2 = p2 + 4 + 15 & -16;
                                    }
                                    if ((n2 | 0) > 0) {
                                      y2 = p2;
                                      f2 = n2;
                                      $2 = 236;
                                    }
                                  } else {
                                    y2 = 0;
                                    p2 = 0;
                                    f2 = 0;
                                    $2 = 236;
                                  }
                                  if (($2 | 0) == 236) {
                                    $2 = 0;
                                    w2 = 0;
                                    do {
                                      X2 = p2 + (w2 * 24 | 0) | 0;
                                      W2 = l2 + (w2 * 24 | 0) | 0;
                                      c[X2 >> 2] = c[W2 >> 2];
                                      c[X2 + 4 >> 2] = c[W2 + 4 >> 2];
                                      c[X2 + 8 >> 2] = c[W2 + 8 >> 2];
                                      c[X2 + 12 >> 2] = c[W2 + 12 >> 2];
                                      c[X2 + 16 >> 2] = c[W2 + 16 >> 2];
                                      c[X2 + 20 >> 2] = c[W2 + 20 >> 2];
                                      w2 = w2 + 1 | 0;
                                    } while ((w2 | 0) != (f2 | 0));
                                    p2 = y2;
                                  }
                                  c[5638] = (c[5638] | 0) + 1;
                                  rG(c[l2 + -4 >> 2] | 0);
                                  f2 = n2;
                                  w2 = z2;
                                  l2 = p2;
                                }
                              while (0);
                              f2 = l2 + (f2 * 24 | 0) | 0;
                              c[f2 >> 2] = c[A2 >> 2];
                              c[f2 + 4 >> 2] = c[A2 + 4 >> 2];
                              c[f2 + 8 >> 2] = c[A2 + 8 >> 2];
                              c[f2 + 12 >> 2] = c[A2 + 12 >> 2];
                              c[f2 + 16 >> 2] = c[A2 + 16 >> 2];
                              c[f2 + 20 >> 2] = c[A2 + 20 >> 2];
                              n2 = n2 + 1 | 0;
                              f2 = n2;
                            }
                          while (0);
                        if ((f2 | 0) == 1) {
                          y2 = (c[P2 >> 2] | 0) + (h2 * 24 | 0) | 0;
                          do
                            if ((w2 | 0) == 1) {
                              c[5637] = (c[5637] | 0) + 1;
                              p2 = qG(67) | 0;
                              if (!p2)
                                f2 = 0;
                              else {
                                c[(p2 + 4 + 15 & -16) + -4 >> 2] = p2;
                                f2 = p2 + 4 + 15 & -16;
                              }
                              if ((n2 | 0) <= 0) {
                                if (!l2) {
                                  p2 = n2;
                                  w2 = 2;
                                  l2 = f2;
                                  break;
                                }
                              } else {
                                p2 = 0;
                                do {
                                  X2 = f2 + (p2 * 24 | 0) | 0;
                                  W2 = l2 + (p2 * 24 | 0) | 0;
                                  c[X2 >> 2] = c[W2 >> 2];
                                  c[X2 + 4 >> 2] = c[W2 + 4 >> 2];
                                  c[X2 + 8 >> 2] = c[W2 + 8 >> 2];
                                  c[X2 + 12 >> 2] = c[W2 + 12 >> 2];
                                  c[X2 + 16 >> 2] = c[W2 + 16 >> 2];
                                  c[X2 + 20 >> 2] = c[W2 + 20 >> 2];
                                  p2 = p2 + 1 | 0;
                                } while ((p2 | 0) != (n2 | 0));
                              }
                              c[5638] = (c[5638] | 0) + 1;
                              rG(c[l2 + -4 >> 2] | 0);
                              p2 = n2;
                              w2 = 2;
                              l2 = f2;
                            } else
                              p2 = 1;
                          while (0);
                          f2 = l2 + (p2 * 24 | 0) | 0;
                          c[f2 >> 2] = c[y2 >> 2];
                          c[f2 + 4 >> 2] = c[y2 + 4 >> 2];
                          c[f2 + 8 >> 2] = c[y2 + 8 >> 2];
                          c[f2 + 12 >> 2] = c[y2 + 12 >> 2];
                          c[f2 + 16 >> 2] = c[y2 + 16 >> 2];
                          c[f2 + 20 >> 2] = c[y2 + 20 >> 2];
                          n2 = n2 + 1 | 0;
                          f2 = n2;
                        }
                        h2 = h2 + 1 | 0;
                      } while ((h2 | 0) != (c[Q2 >> 2] | 0));
                    }
                    $2 = 278;
                  }
                  h:
                    do
                      if (($2 | 0) == 278) {
                        $2 = 0;
                        if ((n2 | 0) > 0) {
                          D2 = 0;
                          A2 = 0;
                          f2 = 0;
                          h2 = 0;
                          G2 = 0;
                          while (1) {
                            B2 = l2 + (G2 * 24 | 0) + 20 | 0;
                            do
                              if ((D2 | 0) == (A2 | 0)) {
                                w2 = A2 | 0 ? A2 << 1 : 1;
                                if ((A2 | 0) >= (w2 | 0)) {
                                  C2 = f2;
                                  break;
                                }
                                do
                                  if (!w2)
                                    p2 = 0;
                                  else {
                                    c[5637] = (c[5637] | 0) + 1;
                                    h2 = qG((w2 << 2 | 3) + 16 | 0) | 0;
                                    if (!h2) {
                                      p2 = 0;
                                      break;
                                    }
                                    c[(h2 + 4 + 15 & -16) + -4 >> 2] = h2;
                                    p2 = h2 + 4 + 15 & -16;
                                  }
                                while (0);
                                if ((A2 | 0) <= 0) {
                                  if (f2 | 0)
                                    $2 = 299;
                                } else {
                                  h2 = 0;
                                  do {
                                    c[p2 + (h2 << 2) >> 2] = c[f2 + (h2 << 2) >> 2];
                                    h2 = h2 + 1 | 0;
                                  } while ((h2 | 0) != (A2 | 0));
                                  $2 = 299;
                                }
                                if (($2 | 0) == 299) {
                                  $2 = 0;
                                  c[5638] = (c[5638] | 0) + 1;
                                  rG(c[f2 + -4 >> 2] | 0);
                                  c[ea2 + 20 + 12 >> 2] = 0;
                                }
                                a[ea2 + 20 + 16 >> 0] = 1;
                                c[ea2 + 20 + 12 >> 2] = p2;
                                c[ea2 + 20 + 8 >> 2] = w2;
                                C2 = p2;
                                h2 = p2;
                                A2 = w2;
                              } else
                                C2 = f2;
                            while (0);
                            c[C2 + (D2 << 2) >> 2] = c[B2 >> 2];
                            D2 = (c[ea2 + 20 + 4 >> 2] | 0) + 1 | 0;
                            c[ea2 + 20 + 4 >> 2] = D2;
                            y2 = c[Q2 >> 2] | 0;
                            i:
                              do
                                if ((y2 | 0) > 0) {
                                  z2 = c[P2 >> 2] | 0;
                                  p2 = c[B2 >> 2] | 0;
                                  w2 = 0;
                                  while (1) {
                                    f2 = z2 + (w2 * 24 | 0) + 20 | 0;
                                    w2 = w2 + 1 | 0;
                                    if ((c[f2 >> 2] | 0) == (p2 | 0))
                                      break;
                                    if ((w2 | 0) >= (y2 | 0))
                                      break i;
                                  }
                                  c[f2 >> 2] = -1;
                                }
                              while (0);
                            G2 = G2 + 1 | 0;
                            if ((G2 | 0) >= (n2 | 0)) {
                              D2 = y2;
                              break;
                            } else
                              f2 = C2;
                          }
                        } else {
                          D2 = h2;
                          h2 = 0;
                        }
                        if ((D2 | 0) <= 0) {
                          $2 = 307;
                          break;
                        }
                        w2 = c[P2 >> 2] | 0;
                        y2 = c[Y2 >> 2] | 0;
                        z2 = c[Z2 >> 2] | 0;
                        if ((y2 | 0) > 0)
                          B2 = 0;
                        else {
                          $2 = 307;
                          break;
                        }
                        while (1) {
                          A2 = c[w2 + (B2 * 24 | 0) + 20 >> 2] | 0;
                          if ((A2 | 0) != -1) {
                            C2 = 0;
                            do {
                              n2 = 0;
                              while (1) {
                                if ((c[J2 + (n2 << 2) >> 2] | 0) == (C2 | 0))
                                  break;
                                n2 = n2 + 1 | 0;
                                if ((n2 | 0) >= (K2 | 0)) {
                                  $2 = 285;
                                  break;
                                }
                              }
                              do
                                if (($2 | 0) == 285) {
                                  $2 = 0;
                                  n2 = c[z2 + (C2 * 36 | 0) + 4 >> 2] | 0;
                                  if ((n2 | 0) <= 0)
                                    break;
                                  p2 = c[z2 + (C2 * 36 | 0) + 12 >> 2] | 0;
                                  f2 = 0;
                                  do {
                                    if ((c[p2 + (f2 << 2) >> 2] | 0) == (A2 | 0)) {
                                      n2 = 1;
                                      break h;
                                    }
                                    f2 = f2 + 1 | 0;
                                  } while ((f2 | 0) < (n2 | 0));
                                }
                              while (0);
                              C2 = C2 + 1 | 0;
                            } while ((C2 | 0) < (y2 | 0));
                          }
                          B2 = B2 + 1 | 0;
                          if ((B2 | 0) >= (D2 | 0)) {
                            $2 = 307;
                            break;
                          }
                        }
                      }
                    while (0);
                  if (($2 | 0) == 307) {
                    $2 = 0;
                    km((c[d2 + 56 >> 2] | 0) + 24 | 0, ea2 + 20 | 0);
                    n2 = 0;
                  }
                  if (l2 | 0) {
                    c[5638] = (c[5638] | 0) + 1;
                    rG(c[l2 + -4 >> 2] | 0);
                  }
                  if (h2 | 0) {
                    c[5638] = (c[5638] | 0) + 1;
                    rG(c[h2 + -4 >> 2] | 0);
                    c[ea2 + 20 + 12 >> 2] = 0;
                  }
                  h2 = c[P2 >> 2] | 0;
                  if (h2 | 0) {
                    if (a[ea2 + 56 + 16 >> 0] | 0) {
                      c[5638] = (c[5638] | 0) + 1;
                      rG(c[h2 + -4 >> 2] | 0);
                    }
                    c[P2 >> 2] = 0;
                  }
                  if (n2 & (K2 | 0) > 0) {
                    y2 = 0;
                    $2 = 317;
                  }
                } else if ((K2 | 0) > 0) {
                  y2 = 0;
                  $2 = 317;
                }
                if (($2 | 0) == 317)
                  while (1) {
                    $2 = 0;
                    f2 = c[J2 + (y2 << 2) >> 2] | 0;
                    w2 = c[Z2 >> 2] | 0;
                    a[ea2 + 216 + 16 >> 0] = 1;
                    c[ea2 + 216 + 12 >> 2] = 0;
                    c[ea2 + 216 + 4 >> 2] = 0;
                    c[ea2 + 216 + 8 >> 2] = 0;
                    p2 = c[w2 + (f2 * 36 | 0) + 4 >> 2] | 0;
                    if ((p2 | 0) > 0) {
                      c[5637] = (c[5637] | 0) + 1;
                      h2 = qG((p2 << 2 | 3) + 16 | 0) | 0;
                      if (!h2)
                        h2 = 0;
                      else {
                        c[(h2 + 4 + 15 & -16) + -4 >> 2] = h2;
                        h2 = h2 + 4 + 15 & -16;
                      }
                      a[ea2 + 216 + 16 >> 0] = 1;
                      c[ea2 + 216 + 12 >> 2] = h2;
                      c[ea2 + 216 + 8 >> 2] = p2;
                      ZG(h2 | 0, 0, p2 << 2 | 0) | 0;
                      l2 = c[w2 + (f2 * 36 | 0) + 12 >> 2] | 0;
                      c[ea2 + 216 + 4 >> 2] = p2;
                      n2 = 0;
                      do {
                        c[h2 + (n2 << 2) >> 2] = c[l2 + (n2 << 2) >> 2];
                        n2 = n2 + 1 | 0;
                      } while ((n2 | 0) != (p2 | 0));
                    } else {
                      c[ea2 + 216 + 4 >> 2] = p2;
                      h2 = 0;
                    }
                    c[ea2 + 216 + 20 >> 2] = c[w2 + (f2 * 36 | 0) + 20 >> 2];
                    c[ea2 + 216 + 20 + 4 >> 2] = c[w2 + (f2 * 36 | 0) + 20 + 4 >> 2];
                    c[ea2 + 216 + 20 + 8 >> 2] = c[w2 + (f2 * 36 | 0) + 20 + 8 >> 2];
                    c[ea2 + 216 + 20 + 12 >> 2] = c[w2 + (f2 * 36 | 0) + 20 + 12 >> 2];
                    km((c[d2 + 56 >> 2] | 0) + 24 | 0, ea2 + 216 | 0);
                    if (h2 | 0) {
                      c[5638] = (c[5638] | 0) + 1;
                      rG(c[h2 + -4 >> 2] | 0);
                      c[ea2 + 216 + 12 >> 2] = 0;
                    }
                    y2 = y2 + 1 | 0;
                    if ((y2 | 0) >= (K2 | 0))
                      break;
                    else
                      $2 = 317;
                  }
                if (J2 | 0) {
                  c[5638] = (c[5638] | 0) + 1;
                  rG(c[J2 + -4 >> 2] | 0);
                }
                if (!o2)
                  break;
              }
            } else
              m2 = 0;
            X2 = c[d2 + 56 >> 2] | 0;
            c[X2 + 64 >> 2] = 0;
            c[X2 + 64 + 4 >> 2] = 0;
            c[X2 + 64 + 8 >> 2] = 0;
            c[X2 + 64 + 12 >> 2] = 0;
            h2 = c[X2 + 28 >> 2] | 0;
            if ((h2 | 0) > 0) {
              z2 = 0;
              l2 = 0;
              n2 = 0;
              D2 = 0;
              B2 = 0;
              w2 = 0;
              o2 = 0;
              C2 = 0;
              y2 = 0;
              p2 = 0;
              A2 = 0;
              G2 = 0;
              W2 = 0;
              while (1) {
                f2 = c[X2 + 36 >> 2] | 0;
                V2 = c[f2 + (W2 * 36 | 0) + 4 >> 2] | 0;
                if ((V2 | 0) > 0) {
                  T2 = W2 & 65535;
                  U2 = W2 | -65536;
                  R2 = w2;
                  P2 = y2;
                  K2 = G2;
                  h2 = 0;
                  while (1) {
                    S2 = h2 + 1 | 0;
                    J2 = c[f2 + (W2 * 36 | 0) + 12 >> 2] | 0;
                    w2 = c[J2 + (h2 << 2) >> 2] & 65535;
                    J2 = c[J2 + (((S2 | 0) == (V2 | 0) ? 0 : S2) << 2) >> 2] & 65535;
                    Q2 = J2 << 16 >> 16 > w2 << 16 >> 16 ? w2 : J2;
                    d2 = J2 << 16 >> 16 > w2 << 16 >> 16 ? J2 : w2;
                    f2 = J2 << 16 >> 16 > w2 << 16 >> 16 ? w2 : J2;
                    w2 = J2 << 16 >> 16 > w2 << 16 >> 16 ? J2 : w2;
                    J2 = P2 + -1 | 0;
                    j:
                      do
                        if ((((f2 & 65535) << 16) + (w2 << 16 >> 16) & J2) >>> 0 < D2 >>> 0 ? (_2 = c[n2 + ((((f2 & 65535) << 16) + (w2 << 16 >> 16) & J2) << 2) >> 2] | 0, (_2 | 0) != -1) : 0) {
                          h2 = _2;
                          while (1) {
                            if (w2 << 16 >> 16 == (b[l2 + (h2 << 2) >> 1] | 0) ? f2 << 16 >> 16 == (b[l2 + (h2 << 2) + 2 >> 1] | 0) : 0)
                              break;
                            h2 = c[o2 + (h2 << 2) >> 2] | 0;
                            if ((h2 | 0) == -1) {
                              G2 = 0;
                              break j;
                            }
                          }
                          G2 = p2 + (h2 << 2) | 0;
                        } else
                          G2 = 0;
                      while (0);
                    h2 = c[X2 + 16 >> 2] | 0;
                    u2 = +g[h2 + (f2 << 16 >> 16 << 4) >> 2] - +g[h2 + (w2 << 16 >> 16 << 4) >> 2];
                    v2 = +g[h2 + (f2 << 16 >> 16 << 4) + 4 >> 2] - +g[h2 + (w2 << 16 >> 16 << 4) + 4 >> 2];
                    s2 = +g[h2 + (f2 << 16 >> 16 << 4) + 8 >> 2] - +g[h2 + (w2 << 16 >> 16 << 4) + 8 >> 2];
                    t2 = 1 / +O(+(u2 * u2 + v2 * v2 + s2 * s2));
                    h2 = c[X2 + 48 >> 2] | 0;
                    k:
                      do
                        if ((h2 | 0) > 0) {
                          f2 = c[X2 + 56 >> 2] | 0;
                          w2 = 0;
                          while (1) {
                            q2 = +g[f2 + (w2 << 4) >> 2];
                            r2 = +g[f2 + (w2 << 4) + 8 >> 2];
                            do
                              if (!(+N(+(q2 - u2 * t2)) > 1e-6)) {
                                if (+N(+(+g[f2 + (w2 << 4) + 4 >> 2] - v2 * t2)) > 1e-6)
                                  break;
                                if (!(+N(+(r2 - s2 * t2)) > 1e-6))
                                  break k;
                              }
                            while (0);
                            do
                              if (!(+N(+(u2 * t2 + q2)) > 1e-6)) {
                                if (+N(+(v2 * t2 + +g[f2 + (w2 << 4) + 4 >> 2])) > 1e-6)
                                  break;
                                if (!(+N(+(s2 * t2 + r2)) > 1e-6))
                                  break k;
                              }
                            while (0);
                            w2 = w2 + 1 | 0;
                            if ((w2 | 0) >= (h2 | 0)) {
                              $2 = 353;
                              break;
                            }
                          }
                        } else
                          $2 = 353;
                      while (0);
                    if (($2 | 0) == 353) {
                      $2 = 0;
                      do
                        if ((h2 | 0) == (c[X2 + 52 >> 2] | 0)) {
                          y2 = h2 | 0 ? h2 << 1 : 1;
                          if ((h2 | 0) >= (y2 | 0))
                            break;
                          if (!y2)
                            w2 = 0;
                          else {
                            c[5637] = (c[5637] | 0) + 1;
                            h2 = qG((y2 << 4 | 3) + 16 | 0) | 0;
                            if (!h2)
                              h2 = 0;
                            else {
                              c[(h2 + 4 + 15 & -16) + -4 >> 2] = h2;
                              h2 = h2 + 4 + 15 & -16;
                            }
                            w2 = h2;
                            h2 = c[X2 + 48 >> 2] | 0;
                          }
                          if ((h2 | 0) > 0) {
                            f2 = 0;
                            do {
                              ga2 = w2 + (f2 << 4) | 0;
                              ha2 = (c[X2 + 56 >> 2] | 0) + (f2 << 4) | 0;
                              c[ga2 >> 2] = c[ha2 >> 2];
                              c[ga2 + 4 >> 2] = c[ha2 + 4 >> 2];
                              c[ga2 + 8 >> 2] = c[ha2 + 8 >> 2];
                              c[ga2 + 12 >> 2] = c[ha2 + 12 >> 2];
                              f2 = f2 + 1 | 0;
                            } while ((f2 | 0) != (h2 | 0));
                          }
                          h2 = c[X2 + 56 >> 2] | 0;
                          if (h2 | 0) {
                            if (a[X2 + 60 >> 0] | 0) {
                              c[5638] = (c[5638] | 0) + 1;
                              rG(c[h2 + -4 >> 2] | 0);
                            }
                            c[X2 + 56 >> 2] = 0;
                          }
                          a[X2 + 60 >> 0] = 1;
                          c[X2 + 56 >> 2] = w2;
                          c[X2 + 52 >> 2] = y2;
                          h2 = c[X2 + 48 >> 2] | 0;
                        }
                      while (0);
                      ha2 = c[X2 + 56 >> 2] | 0;
                      g[ha2 + (h2 << 4) >> 2] = u2 * t2;
                      g[ha2 + (h2 << 4) + 4 >> 2] = v2 * t2;
                      g[ha2 + (h2 << 4) + 8 >> 2] = s2 * t2;
                      g[ha2 + (h2 << 4) + 12 >> 2] = 0;
                      c[X2 + 48 >> 2] = (c[X2 + 48 >> 2] | 0) + 1;
                    }
                    l:
                      do
                        if (!G2) {
                          h2 = ((Q2 & 65535) << 16) + (d2 << 16 >> 16) & J2;
                          m:
                            do
                              if (h2 >>> 0 < D2 >>> 0) {
                                f2 = c[n2 + (h2 << 2) >> 2] | 0;
                                if ((f2 | 0) == -1)
                                  break;
                                while (1) {
                                  if (d2 << 16 >> 16 == (b[l2 + (f2 << 2) >> 1] | 0) ? Q2 << 16 >> 16 == (b[l2 + (f2 << 2) + 2 >> 1] | 0) : 0)
                                    break;
                                  f2 = c[o2 + (f2 << 2) >> 2] | 0;
                                  if ((f2 | 0) == -1)
                                    break m;
                                }
                                w2 = p2 + (f2 << 2) | 0;
                                b[w2 >> 1] = U2;
                                b[w2 + 2 >> 1] = U2 >>> 16;
                                w2 = R2;
                                y2 = P2;
                                G2 = K2;
                                break l;
                              }
                            while (0);
                          do
                            if ((C2 | 0) == (P2 | 0)) {
                              y2 = C2 | 0 ? C2 << 1 : 1;
                              if ((C2 | 0) >= (y2 | 0)) {
                                y2 = C2;
                                break;
                              }
                              do
                                if (!y2)
                                  w2 = 0;
                                else {
                                  c[5637] = (c[5637] | 0) + 1;
                                  f2 = qG((y2 << 2 | 3) + 16 | 0) | 0;
                                  if (!f2) {
                                    w2 = 0;
                                    break;
                                  }
                                  c[(f2 + 4 + 15 & -16) + -4 >> 2] = f2;
                                  w2 = f2 + 4 + 15 & -16;
                                }
                              while (0);
                              if ((C2 | 0) <= 0) {
                                if (!p2) {
                                  p2 = w2;
                                  break;
                                }
                              } else {
                                f2 = 0;
                                do {
                                  ha2 = w2 + (f2 << 2) | 0;
                                  ga2 = p2 + (f2 << 2) | 0;
                                  ga2 = e[ga2 >> 1] | e[ga2 + 2 >> 1] << 16;
                                  b[ha2 >> 1] = ga2;
                                  b[ha2 + 2 >> 1] = ga2 >>> 16;
                                  f2 = f2 + 1 | 0;
                                } while ((f2 | 0) != (C2 | 0));
                              }
                              c[5638] = (c[5638] | 0) + 1;
                              rG(c[p2 + -4 >> 2] | 0);
                              p2 = w2;
                            } else
                              y2 = P2;
                          while (0);
                          J2 = p2 + (C2 << 2) | 0;
                          b[J2 >> 1] = U2;
                          b[J2 + 2 >> 1] = U2 >>> 16;
                          J2 = C2 + 1 | 0;
                          do
                            if ((K2 | 0) == (z2 | 0)) {
                              z2 = K2 | 0 ? K2 << 1 : 1;
                              if ((K2 | 0) >= (z2 | 0)) {
                                z2 = K2;
                                break;
                              }
                              do
                                if (!z2)
                                  w2 = 0;
                                else {
                                  c[5637] = (c[5637] | 0) + 1;
                                  f2 = qG((z2 << 2 | 3) + 16 | 0) | 0;
                                  if (!f2) {
                                    w2 = 0;
                                    break;
                                  }
                                  c[(f2 + 4 + 15 & -16) + -4 >> 2] = f2;
                                  w2 = f2 + 4 + 15 & -16;
                                }
                              while (0);
                              if ((K2 | 0) <= 0) {
                                if (!l2) {
                                  l2 = w2;
                                  break;
                                }
                              } else {
                                f2 = 0;
                                do {
                                  ha2 = w2 + (f2 << 2) | 0;
                                  ga2 = l2 + (f2 << 2) | 0;
                                  ga2 = e[ga2 >> 1] | e[ga2 + 2 >> 1] << 16;
                                  b[ha2 >> 1] = ga2;
                                  b[ha2 + 2 >> 1] = ga2 >>> 16;
                                  f2 = f2 + 1 | 0;
                                } while ((f2 | 0) != (K2 | 0));
                              }
                              c[5638] = (c[5638] | 0) + 1;
                              rG(c[l2 + -4 >> 2] | 0);
                              l2 = w2;
                            }
                          while (0);
                          G2 = l2 + (K2 << 2) | 0;
                          b[G2 >> 1] = (Q2 & 65535) << 16 | d2 & 65535;
                          b[G2 + 2 >> 1] = ((Q2 & 65535) << 16 | d2 & 65535) >>> 16;
                          G2 = K2 + 1 | 0;
                          if ((P2 | 0) < (y2 | 0)) {
                            do
                              if ((y2 | 0) > (D2 | 0)) {
                                if ((y2 | 0) >= (D2 | 0)) {
                                  do
                                    if ((A2 | 0) < (y2 | 0)) {
                                      do
                                        if (!y2)
                                          h2 = 0;
                                        else {
                                          c[5637] = (c[5637] | 0) + 1;
                                          h2 = qG((y2 << 2 | 3) + 16 | 0) | 0;
                                          if (!h2) {
                                            h2 = 0;
                                            break;
                                          }
                                          c[(h2 + 4 + 15 & -16) + -4 >> 2] = h2;
                                          h2 = h2 + 4 + 15 & -16;
                                        }
                                      while (0);
                                      if ((D2 | 0) <= 0) {
                                        if (!n2) {
                                          n2 = h2;
                                          h2 = y2;
                                          break;
                                        }
                                      } else {
                                        f2 = 0;
                                        do {
                                          c[h2 + (f2 << 2) >> 2] = c[n2 + (f2 << 2) >> 2];
                                          f2 = f2 + 1 | 0;
                                        } while ((f2 | 0) != (D2 | 0));
                                      }
                                      c[5638] = (c[5638] | 0) + 1;
                                      rG(c[n2 + -4 >> 2] | 0);
                                      n2 = h2;
                                      h2 = y2;
                                    } else
                                      h2 = A2;
                                  while (0);
                                  ZG(n2 + (D2 << 2) | 0, 0, y2 - D2 << 2 | 0) | 0;
                                  A2 = h2;
                                }
                                if ((y2 | 0) > (B2 | 0)) {
                                  do
                                    if ((R2 | 0) < (y2 | 0)) {
                                      do
                                        if (!y2)
                                          f2 = 0;
                                        else {
                                          c[5637] = (c[5637] | 0) + 1;
                                          h2 = qG((y2 << 2 | 3) + 16 | 0) | 0;
                                          if (!h2) {
                                            f2 = 0;
                                            break;
                                          }
                                          c[(h2 + 4 + 15 & -16) + -4 >> 2] = h2;
                                          f2 = h2 + 4 + 15 & -16;
                                        }
                                      while (0);
                                      if ((B2 | 0) <= 0) {
                                        if (!o2) {
                                          h2 = y2;
                                          o2 = f2;
                                          break;
                                        }
                                      } else {
                                        h2 = 0;
                                        do {
                                          c[f2 + (h2 << 2) >> 2] = c[o2 + (h2 << 2) >> 2];
                                          h2 = h2 + 1 | 0;
                                        } while ((h2 | 0) != (B2 | 0));
                                      }
                                      c[5638] = (c[5638] | 0) + 1;
                                      rG(c[o2 + -4 >> 2] | 0);
                                      h2 = y2;
                                      o2 = f2;
                                    } else
                                      h2 = R2;
                                  while (0);
                                  ZG(o2 + (B2 << 2) | 0, 0, y2 - B2 << 2 | 0) | 0;
                                  w2 = h2;
                                } else
                                  w2 = R2;
                                if ((y2 | 0) > 0) {
                                  ha2 = y2 << 2;
                                  ZG(n2 | 0, -1, ha2 | 0) | 0;
                                  ZG(o2 | 0, -1, ha2 | 0) | 0;
                                }
                                if ((D2 | 0) <= 0) {
                                  f2 = y2;
                                  B2 = y2;
                                  h2 = A2;
                                  break;
                                }
                                h2 = y2 + -1 | 0;
                                f2 = 0;
                                do {
                                  ha2 = n2 + (((e[l2 + (f2 << 2) + 2 >> 1] << 16) + (b[l2 + (f2 << 2) >> 1] | 0) & h2) << 2) | 0;
                                  c[o2 + (f2 << 2) >> 2] = c[ha2 >> 2];
                                  c[ha2 >> 2] = f2;
                                  f2 = f2 + 1 | 0;
                                } while ((f2 | 0) != (D2 | 0));
                                f2 = y2;
                                B2 = y2;
                                h2 = A2;
                              } else {
                                f2 = D2;
                                w2 = R2;
                                h2 = A2;
                              }
                            while (0);
                            A2 = h2;
                            h2 = ((Q2 & 65535) << 16) + (d2 << 16 >> 16) & y2 + -1;
                          } else {
                            f2 = D2;
                            w2 = R2;
                          }
                          D2 = n2 + (h2 << 2) | 0;
                          c[o2 + (C2 << 2) >> 2] = c[D2 >> 2];
                          c[D2 >> 2] = C2;
                          D2 = f2;
                          C2 = J2;
                        } else {
                          b[G2 + 2 >> 1] = T2;
                          w2 = R2;
                          y2 = P2;
                          G2 = K2;
                        }
                      while (0);
                    if ((S2 | 0) >= (V2 | 0))
                      break;
                    f2 = c[X2 + 36 >> 2] | 0;
                    R2 = w2;
                    P2 = y2;
                    K2 = G2;
                    h2 = S2;
                  }
                  h2 = c[X2 + 28 >> 2] | 0;
                  f2 = G2;
                } else
                  f2 = G2;
                W2 = W2 + 1 | 0;
                if ((W2 | 0) >= (h2 | 0))
                  break;
                else
                  G2 = f2;
              }
              if ((h2 | 0) > 0) {
                A2 = c[X2 + 36 >> 2] | 0;
                B2 = c[X2 + 16 >> 2] | 0;
                q2 = 0;
                C2 = 0;
                do {
                  w2 = c[A2 + (C2 * 36 | 0) + 4 >> 2] | 0;
                  y2 = c[A2 + (C2 * 36 | 0) + 12 >> 2] | 0;
                  z2 = c[y2 >> 2] | 0;
                  if ((w2 + -2 | 0) >= 1) {
                    r2 = +g[X2 + 64 >> 2];
                    s2 = +g[X2 + 68 >> 2];
                    t2 = +g[X2 + 72 >> 2];
                    f2 = 1;
                    do {
                      ga2 = c[y2 + (f2 << 2) >> 2] | 0;
                      f2 = f2 + 1 | 0;
                      ha2 = c[y2 + (((f2 | 0) % (w2 | 0) | 0) << 2) >> 2] | 0;
                      u2 = +g[B2 + (z2 << 4) >> 2];
                      v2 = +g[B2 + (ga2 << 4) >> 2];
                      E2 = +g[B2 + (z2 << 4) + 4 >> 2];
                      F2 = +g[B2 + (ga2 << 4) + 4 >> 2];
                      I2 = +g[B2 + (z2 << 4) + 8 >> 2];
                      L2 = +g[B2 + (ga2 << 4) + 8 >> 2];
                      x2 = +g[B2 + (ha2 << 4) >> 2];
                      H2 = +g[B2 + (ha2 << 4) + 4 >> 2];
                      M2 = +g[B2 + (ha2 << 4) + 8 >> 2];
                      fa2 = +O(+(((u2 - v2) * (E2 - H2) - (E2 - F2) * (u2 - x2)) * ((u2 - v2) * (E2 - H2) - (E2 - F2) * (u2 - x2)) + (((E2 - F2) * (I2 - M2) - (I2 - L2) * (E2 - H2)) * ((E2 - F2) * (I2 - M2) - (I2 - L2) * (E2 - H2)) + ((I2 - L2) * (u2 - x2) - (u2 - v2) * (I2 - M2)) * ((I2 - L2) * (u2 - x2) - (u2 - v2) * (I2 - M2))))) * 0.5;
                      r2 = r2 + (u2 + v2 + x2) * 0.3333333432674408 * fa2;
                      g[X2 + 64 >> 2] = r2;
                      s2 = (E2 + F2 + H2) * 0.3333333432674408 * fa2 + s2;
                      g[X2 + 68 >> 2] = s2;
                      t2 = fa2 * ((I2 + L2 + M2) * 0.3333333432674408) + t2;
                      g[X2 + 72 >> 2] = t2;
                      q2 = q2 + fa2;
                    } while ((f2 | 0) != (w2 + -1 | 0));
                  }
                  C2 = C2 + 1 | 0;
                } while ((C2 | 0) != (h2 | 0));
                f2 = X2 + 64 | 0;
                w2 = 1;
                z2 = l2;
                y2 = n2;
              } else
                $2 = 332;
            } else {
              l2 = 0;
              n2 = 0;
              o2 = 0;
              p2 = 0;
              $2 = 332;
            }
            if (($2 | 0) == 332) {
              f2 = X2 + 64 | 0;
              w2 = 0;
              q2 = 0;
              z2 = l2;
              y2 = n2;
            }
            t2 = 1 / q2;
            u2 = t2 * +g[f2 >> 2];
            g[f2 >> 2] = u2;
            s2 = t2 * +g[X2 + 68 >> 2];
            g[X2 + 68 >> 2] = s2;
            t2 = t2 * +g[X2 + 72 >> 2];
            g[X2 + 72 >> 2] = t2;
            g[X2 + 96 >> 2] = 34028234663852886e22;
            if (w2) {
              l2 = c[X2 + 36 >> 2] | 0;
              r2 = 34028234663852886e22;
              n2 = 0;
              while (1) {
                q2 = +N(+(+g[l2 + (n2 * 36 | 0) + 32 >> 2] + (+g[l2 + (n2 * 36 | 0) + 20 >> 2] * u2 + +g[l2 + (n2 * 36 | 0) + 24 >> 2] * s2 + +g[l2 + (n2 * 36 | 0) + 28 >> 2] * t2)));
                if (q2 < r2)
                  g[X2 + 96 >> 2] = q2;
                else
                  q2 = r2;
                n2 = n2 + 1 | 0;
                if ((n2 | 0) >= (h2 | 0))
                  break;
                else
                  r2 = q2;
              }
            } else
              q2 = 34028234663852886e22;
            h2 = c[X2 + 8 >> 2] | 0;
            if ((h2 | 0) > 0) {
              l2 = c[X2 + 16 >> 2] | 0;
              x2 = -34028234663852886e22;
              v2 = -34028234663852886e22;
              u2 = -34028234663852886e22;
              t2 = 34028234663852886e22;
              s2 = 34028234663852886e22;
              r2 = 34028234663852886e22;
              n2 = 0;
              do {
                fa2 = +g[l2 + (n2 << 4) >> 2];
                t2 = fa2 < t2 ? fa2 : t2;
                x2 = fa2 > x2 ? fa2 : x2;
                fa2 = +g[l2 + (n2 << 4) + 4 >> 2];
                s2 = fa2 < s2 ? fa2 : s2;
                v2 = fa2 > v2 ? fa2 : v2;
                fa2 = +g[l2 + (n2 << 4) + 8 >> 2];
                r2 = fa2 < r2 ? fa2 : r2;
                u2 = fa2 > u2 ? fa2 : u2;
                n2 = n2 + 1 | 0;
              } while ((n2 | 0) != (h2 | 0));
            } else {
              x2 = -34028234663852886e22;
              v2 = -34028234663852886e22;
              u2 = -34028234663852886e22;
              t2 = 34028234663852886e22;
              s2 = 34028234663852886e22;
              r2 = 34028234663852886e22;
            }
            g[X2 + 100 >> 2] = x2 + t2;
            g[X2 + 104 >> 2] = s2 + v2;
            g[X2 + 108 >> 2] = r2 + u2;
            g[X2 + 112 >> 2] = 0;
            fa2 = x2 - t2;
            M2 = v2 - s2;
            r2 = u2 - r2;
            g[X2 + 116 >> 2] = fa2;
            g[X2 + 120 >> 2] = M2;
            g[X2 + 124 >> 2] = r2;
            g[X2 + 128 >> 2] = 0;
            s2 = q2 / 1.7320507764816284;
            f2 = fa2 < M2 ? M2 < r2 ? 2 : 1 : fa2 < r2 ? 2 : 0;
            q2 = (+g[X2 + 116 + (f2 << 2) >> 2] * 0.5 - s2) * 9765625e-10;
            g[X2 + 88 >> 2] = s2;
            g[X2 + 84 >> 2] = s2;
            g[X2 + 80 >> 2] = s2;
            r2 = +g[X2 + 116 + (f2 << 2) >> 2] * 0.5;
            g[X2 + 80 + (f2 << 2) >> 2] = r2;
            h2 = 0;
            while (1) {
              if (bl(X2) | 0) {
                $2 = 440;
                break;
              }
              r2 = r2 - q2;
              g[X2 + 80 + (f2 << 2) >> 2] = r2;
              h2 = h2 + 1 | 0;
              if ((h2 | 0) >= 1024) {
                $2 = 439;
                break;
              }
            }
            n:
              do
                if (($2 | 0) == 439) {
                  g[X2 + 88 >> 2] = s2;
                  g[X2 + 84 >> 2] = s2;
                  g[X2 + 80 >> 2] = s2;
                } else if (($2 | 0) == 440) {
                  q2 = (+g[X2 + 96 >> 2] - s2) * 9765625e-10;
                  l2 = c[X2 + 80 + ((1 << (1 << f2 & 3) & 3) << 2) >> 2] | 0;
                  n2 = 0;
                  while (1) {
                    h2 = c[X2 + 80 + ((1 << f2 & 3) << 2) >> 2] | 0;
                    g[X2 + 80 + ((1 << f2 & 3) << 2) >> 2] = q2 + (c[k >> 2] = h2, +g[k >> 2]);
                    r2 = q2 + +g[X2 + 80 + ((1 << (1 << f2 & 3) & 3) << 2) >> 2];
                    g[X2 + 80 + ((1 << (1 << f2 & 3) & 3) << 2) >> 2] = r2;
                    n2 = n2 + 1 | 0;
                    if (!(bl(X2) | 0))
                      break;
                    if ((n2 | 0) >= 1024)
                      break n;
                    else
                      l2 = (g[k >> 2] = r2, c[k >> 2] | 0);
                  }
                  c[X2 + 80 + ((1 << f2 & 3) << 2) >> 2] = h2;
                  c[X2 + 80 + ((1 << (1 << f2 & 3) & 3) << 2) >> 2] = l2;
                }
              while (0);
            if (z2 | 0) {
              c[5638] = (c[5638] | 0) + 1;
              rG(c[z2 + -4 >> 2] | 0);
            }
            if (p2 | 0) {
              c[5638] = (c[5638] | 0) + 1;
              rG(c[p2 + -4 >> 2] | 0);
            }
            if (o2 | 0) {
              c[5638] = (c[5638] | 0) + 1;
              rG(c[o2 + -4 >> 2] | 0);
            }
            if (y2 | 0) {
              c[5638] = (c[5638] | 0) + 1;
              rG(c[y2 + -4 >> 2] | 0);
            }
            if (m2 | 0) {
              c[5638] = (c[5638] | 0) + 1;
              rG(c[m2 + -4 >> 2] | 0);
            }
            p2 = c[Y2 >> 2] | 0;
            f2 = c[Z2 >> 2] | 0;
            if ((p2 | 0) <= 0) {
              if (f2 | 0)
                $2 = 461;
            } else {
              o2 = 0;
              do {
                l2 = f2 + (o2 * 36 | 0) + 4 | 0;
                m2 = f2 + (o2 * 36 | 0) + 12 | 0;
                n2 = c[m2 >> 2] | 0;
                h2 = f2 + (o2 * 36 | 0) + 16 | 0;
                if (n2 | 0) {
                  if (a[h2 >> 0] | 0) {
                    c[5638] = (c[5638] | 0) + 1;
                    rG(c[n2 + -4 >> 2] | 0);
                  }
                  c[m2 >> 2] = 0;
                }
                a[h2 >> 0] = 1;
                c[m2 >> 2] = 0;
                c[l2 >> 2] = 0;
                c[f2 + (o2 * 36 | 0) + 8 >> 2] = 0;
                o2 = o2 + 1 | 0;
              } while ((o2 | 0) != (p2 | 0));
              $2 = 461;
            }
            if (($2 | 0) == 461) {
              if (a[ea2 + 96 + 16 >> 0] | 0) {
                c[5638] = (c[5638] | 0) + 1;
                rG(c[f2 + -4 >> 2] | 0);
              }
              c[Z2 >> 2] = 0;
            }
            if (j2 | 0) {
              c[5638] = (c[5638] | 0) + 1;
              rG(c[j2 + -4 >> 2] | 0);
            }
            h2 = c[aa2 >> 2] | 0;
            if (h2 | 0) {
              if (a[ea2 + 136 + 56 >> 0] | 0) {
                c[5638] = (c[5638] | 0) + 1;
                rG(c[h2 + -4 >> 2] | 0);
              }
              c[aa2 >> 2] = 0;
            }
            a[ea2 + 136 + 56 >> 0] = 1;
            c[aa2 >> 2] = 0;
            c[ea2 + 136 + 44 >> 2] = 0;
            c[ea2 + 136 + 48 >> 2] = 0;
            h2 = c[ba2 >> 2] | 0;
            if (h2 | 0) {
              if (a[ea2 + 136 + 36 >> 0] | 0) {
                c[5638] = (c[5638] | 0) + 1;
                rG(c[h2 + -4 >> 2] | 0);
              }
              c[ba2 >> 2] = 0;
            }
            a[ea2 + 136 + 36 >> 0] = 1;
            c[ba2 >> 2] = 0;
            c[ea2 + 136 + 24 >> 2] = 0;
            c[ea2 + 136 + 28 >> 2] = 0;
            h2 = c[ca2 >> 2] | 0;
            if (h2 | 0) {
              if (a[ea2 + 136 + 16 >> 0] | 0) {
                c[5638] = (c[5638] | 0) + 1;
                rG(c[h2 + -4 >> 2] | 0);
              }
              c[ca2 >> 2] = 0;
            }
            if (!da2) {
              i = ea2;
              return 1;
            }
            c[5638] = (c[5638] | 0) + 1;
            rG(c[da2 + -4 >> 2] | 0);
            i = ea2;
            return 1;
          }
          function im(b2, d2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0;
            if ((c[b2 + 8 >> 2] | 0) >= (d2 | 0))
              return;
            if ((d2 | 0) != 0 ? (c[5637] = (c[5637] | 0) + 1, e2 = qG((d2 * 36 | 3) + 16 | 0) | 0, (e2 | 0) != 0) : 0) {
              c[(e2 + 4 + 15 & -16) + -4 >> 2] = e2;
              o2 = e2 + 4 + 15 & -16;
            } else
              o2 = 0;
            i2 = c[b2 + 4 >> 2] | 0;
            if ((i2 | 0) > 0) {
              m2 = 0;
              do {
                j2 = o2 + (m2 * 36 | 0) | 0;
                k2 = c[b2 + 12 >> 2] | 0;
                a[j2 + 16 >> 0] = 1;
                c[j2 + 12 >> 2] = 0;
                c[j2 + 4 >> 2] = 0;
                c[j2 + 8 >> 2] = 0;
                l2 = c[k2 + (m2 * 36 | 0) + 4 >> 2] | 0;
                if ((l2 | 0) > 0) {
                  c[5637] = (c[5637] | 0) + 1;
                  e2 = qG((l2 << 2 | 3) + 16 | 0) | 0;
                  if (!e2)
                    h2 = 0;
                  else {
                    c[(e2 + 4 + 15 & -16) + -4 >> 2] = e2;
                    h2 = e2 + 4 + 15 & -16;
                  }
                  g2 = c[j2 + 4 >> 2] | 0;
                  f2 = c[j2 + 12 >> 2] | 0;
                  if ((g2 | 0) <= 0)
                    if (!f2) {
                      a[j2 + 16 >> 0] = 1;
                      c[j2 + 12 >> 2] = h2;
                      c[j2 + 8 >> 2] = l2;
                      ZG(h2 | 0, 0, l2 << 2 | 0) | 0;
                    } else
                      n2 = 14;
                  else {
                    e2 = 0;
                    do {
                      c[h2 + (e2 << 2) >> 2] = c[f2 + (e2 << 2) >> 2];
                      e2 = e2 + 1 | 0;
                    } while ((e2 | 0) != (g2 | 0));
                    n2 = 14;
                  }
                  if ((n2 | 0) == 14) {
                    n2 = 0;
                    if (a[j2 + 16 >> 0] | 0) {
                      c[5638] = (c[5638] | 0) + 1;
                      rG(c[f2 + -4 >> 2] | 0);
                    }
                    a[j2 + 16 >> 0] = 1;
                    c[j2 + 12 >> 2] = h2;
                    c[j2 + 8 >> 2] = l2;
                    ZG(h2 | 0, 0, l2 << 2 | 0) | 0;
                  }
                  e2 = c[j2 + 12 >> 2] | 0;
                  c[j2 + 4 >> 2] = l2;
                  f2 = c[k2 + (m2 * 36 | 0) + 12 >> 2] | 0;
                  g2 = 0;
                  do {
                    c[e2 + (g2 << 2) >> 2] = c[f2 + (g2 << 2) >> 2];
                    g2 = g2 + 1 | 0;
                  } while ((g2 | 0) != (l2 | 0));
                } else
                  c[j2 + 4 >> 2] = l2;
                l2 = k2 + (m2 * 36 | 0) + 20 | 0;
                c[j2 + 20 >> 2] = c[l2 >> 2];
                c[j2 + 20 + 4 >> 2] = c[l2 + 4 >> 2];
                c[j2 + 20 + 8 >> 2] = c[l2 + 8 >> 2];
                c[j2 + 20 + 12 >> 2] = c[l2 + 12 >> 2];
                m2 = m2 + 1 | 0;
              } while ((m2 | 0) != (i2 | 0));
              e2 = c[b2 + 4 >> 2] | 0;
              if ((e2 | 0) > 0) {
                k2 = 0;
                do {
                  g2 = c[b2 + 12 >> 2] | 0;
                  h2 = g2 + (k2 * 36 | 0) + 4 | 0;
                  i2 = g2 + (k2 * 36 | 0) + 12 | 0;
                  j2 = c[i2 >> 2] | 0;
                  f2 = g2 + (k2 * 36 | 0) + 16 | 0;
                  if (j2 | 0) {
                    if (a[f2 >> 0] | 0) {
                      c[5638] = (c[5638] | 0) + 1;
                      rG(c[j2 + -4 >> 2] | 0);
                    }
                    c[i2 >> 2] = 0;
                  }
                  a[f2 >> 0] = 1;
                  c[i2 >> 2] = 0;
                  c[h2 >> 2] = 0;
                  c[g2 + (k2 * 36 | 0) + 8 >> 2] = 0;
                  k2 = k2 + 1 | 0;
                } while ((k2 | 0) != (e2 | 0));
              }
            }
            e2 = c[b2 + 12 >> 2] | 0;
            if (e2 | 0) {
              if (a[b2 + 16 >> 0] | 0) {
                c[5638] = (c[5638] | 0) + 1;
                rG(c[e2 + -4 >> 2] | 0);
              }
              c[b2 + 12 >> 2] = 0;
            }
            a[b2 + 16 >> 0] = 1;
            c[b2 + 12 >> 2] = o2;
            c[b2 + 8 >> 2] = d2;
            return;
          }
          function jm(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0;
            w2 = i;
            i = i + 32 | 0;
            s2 = c[a2 + 12 >> 2] | 0;
            t2 = +g[s2 + (((e2 + d2 | 0) / 2 | 0) * 24 | 0) >> 2];
            u2 = +g[s2 + (((e2 + d2 | 0) / 2 | 0) * 24 | 0) + 4 >> 2];
            v2 = +g[s2 + (((e2 + d2 | 0) / 2 | 0) * 24 | 0) + 8 >> 2];
            q2 = +g[s2 + (((e2 + d2 | 0) / 2 | 0) * 24 | 0) + 16 >> 2];
            r2 = c[s2 + (((e2 + d2 | 0) / 2 | 0) * 24 | 0) + 20 >> 2] | 0;
            f2 = d2;
            h2 = e2;
            while (1) {
              m2 = +g[b2 >> 2];
              n2 = +g[b2 + 4 >> 2];
              o2 = +g[b2 + 8 >> 2];
              p2 = (t2 - m2) * (t2 - m2) + (u2 - n2) * (u2 - n2) + (v2 - o2) * (v2 - o2);
              a:
                while (1) {
                  j2 = +g[s2 + (f2 * 24 | 0) + 16 >> 2];
                  do
                    if (j2 != q2) {
                      if (!(j2 < q2))
                        break a;
                    } else {
                      j2 = +g[s2 + (f2 * 24 | 0) >> 2] - m2;
                      k2 = +g[s2 + (f2 * 24 | 0) + 4 >> 2] - n2;
                      l2 = +g[s2 + (f2 * 24 | 0) + 8 >> 2] - o2;
                      if (j2 * j2 + k2 * k2 + l2 * l2 != p2)
                        if (j2 * j2 + k2 * k2 + l2 * l2 < p2)
                          break;
                        else
                          break a;
                      else if ((c[s2 + (f2 * 24 | 0) + 20 >> 2] | 0) < (r2 | 0))
                        break;
                      else
                        break a;
                    }
                  while (0);
                  f2 = f2 + 1 | 0;
                }
              b:
                while (1) {
                  j2 = +g[s2 + (h2 * 24 | 0) + 16 >> 2];
                  do
                    if (q2 != j2) {
                      if (!(q2 < j2))
                        break b;
                    } else {
                      j2 = +g[s2 + (h2 * 24 | 0) >> 2] - m2;
                      k2 = +g[s2 + (h2 * 24 | 0) + 4 >> 2] - n2;
                      l2 = +g[s2 + (h2 * 24 | 0) + 8 >> 2] - o2;
                      if (p2 != j2 * j2 + k2 * k2 + l2 * l2)
                        if (p2 < j2 * j2 + k2 * k2 + l2 * l2)
                          break;
                        else
                          break b;
                      else if ((r2 | 0) < (c[s2 + (h2 * 24 | 0) + 20 >> 2] | 0))
                        break;
                      else
                        break b;
                    }
                  while (0);
                  h2 = h2 + -1 | 0;
                }
              if ((f2 | 0) <= (h2 | 0)) {
                x2 = s2 + (f2 * 24 | 0) | 0;
                c[w2 >> 2] = c[x2 >> 2];
                c[w2 + 4 >> 2] = c[x2 + 4 >> 2];
                c[w2 + 8 >> 2] = c[x2 + 8 >> 2];
                c[w2 + 12 >> 2] = c[x2 + 12 >> 2];
                c[w2 + 16 >> 2] = c[x2 + 16 >> 2];
                c[w2 + 20 >> 2] = c[x2 + 20 >> 2];
                s2 = s2 + (h2 * 24 | 0) | 0;
                c[x2 >> 2] = c[s2 >> 2];
                c[x2 + 4 >> 2] = c[s2 + 4 >> 2];
                c[x2 + 8 >> 2] = c[s2 + 8 >> 2];
                c[x2 + 12 >> 2] = c[s2 + 12 >> 2];
                c[x2 + 16 >> 2] = c[s2 + 16 >> 2];
                c[x2 + 20 >> 2] = c[s2 + 20 >> 2];
                s2 = (c[a2 + 12 >> 2] | 0) + (h2 * 24 | 0) | 0;
                c[s2 >> 2] = c[w2 >> 2];
                c[s2 + 4 >> 2] = c[w2 + 4 >> 2];
                c[s2 + 8 >> 2] = c[w2 + 8 >> 2];
                c[s2 + 12 >> 2] = c[w2 + 12 >> 2];
                c[s2 + 16 >> 2] = c[w2 + 16 >> 2];
                c[s2 + 20 >> 2] = c[w2 + 20 >> 2];
                f2 = f2 + 1 | 0;
                h2 = h2 + -1 | 0;
              }
              if ((f2 | 0) > (h2 | 0))
                break;
              s2 = c[a2 + 12 >> 2] | 0;
            }
            if ((h2 | 0) > (d2 | 0))
              jm(a2, b2, d2, h2);
            if ((f2 | 0) >= (e2 | 0)) {
              i = w2;
              return;
            }
            jm(a2, b2, f2, e2);
            i = w2;
            return;
          }
          function km(b2, d2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0;
            e2 = c[b2 + 4 >> 2] | 0;
            if ((e2 | 0) == (c[b2 + 8 >> 2] | 0)) {
              im(b2, e2 | 0 ? e2 << 1 : 1);
              e2 = c[b2 + 4 >> 2] | 0;
            }
            j2 = (c[b2 + 12 >> 2] | 0) + (e2 * 36 | 0) | 0;
            a[j2 + 16 >> 0] = 1;
            c[j2 + 12 >> 2] = 0;
            c[j2 + 4 >> 2] = 0;
            c[j2 + 8 >> 2] = 0;
            k2 = c[d2 + 4 >> 2] | 0;
            if ((k2 | 0) <= 0) {
              c[j2 + 4 >> 2] = k2;
              k2 = j2 + 20 | 0;
              d2 = d2 + 20 | 0;
              c[k2 >> 2] = c[d2 >> 2];
              c[k2 + 4 >> 2] = c[d2 + 4 >> 2];
              c[k2 + 8 >> 2] = c[d2 + 8 >> 2];
              c[k2 + 12 >> 2] = c[d2 + 12 >> 2];
              d2 = c[b2 + 4 >> 2] | 0;
              d2 = d2 + 1 | 0;
              c[b2 + 4 >> 2] = d2;
              return;
            }
            c[5637] = (c[5637] | 0) + 1;
            e2 = qG((k2 << 2 | 3) + 16 | 0) | 0;
            if (!e2)
              h2 = 0;
            else {
              c[(e2 + 4 + 15 & -16) + -4 >> 2] = e2;
              h2 = e2 + 4 + 15 & -16;
            }
            g2 = c[j2 + 4 >> 2] | 0;
            f2 = c[j2 + 12 >> 2] | 0;
            if ((g2 | 0) <= 0)
              if (!f2) {
                a[j2 + 16 >> 0] = 1;
                c[j2 + 12 >> 2] = h2;
                c[j2 + 8 >> 2] = k2;
                ZG(h2 | 0, 0, k2 << 2 | 0) | 0;
              } else
                i2 = 11;
            else {
              e2 = 0;
              do {
                c[h2 + (e2 << 2) >> 2] = c[f2 + (e2 << 2) >> 2];
                e2 = e2 + 1 | 0;
              } while ((e2 | 0) != (g2 | 0));
              i2 = 11;
            }
            if ((i2 | 0) == 11) {
              if (a[j2 + 16 >> 0] | 0) {
                c[5638] = (c[5638] | 0) + 1;
                rG(c[f2 + -4 >> 2] | 0);
              }
              a[j2 + 16 >> 0] = 1;
              c[j2 + 12 >> 2] = h2;
              c[j2 + 8 >> 2] = k2;
              ZG(h2 | 0, 0, k2 << 2 | 0) | 0;
            }
            e2 = c[j2 + 12 >> 2] | 0;
            c[j2 + 4 >> 2] = k2;
            f2 = c[d2 + 12 >> 2] | 0;
            g2 = 0;
            do {
              c[e2 + (g2 << 2) >> 2] = c[f2 + (g2 << 2) >> 2];
              g2 = g2 + 1 | 0;
            } while ((g2 | 0) != (k2 | 0));
            k2 = j2 + 20 | 0;
            d2 = d2 + 20 | 0;
            c[k2 >> 2] = c[d2 >> 2];
            c[k2 + 4 >> 2] = c[d2 + 4 >> 2];
            c[k2 + 8 >> 2] = c[d2 + 8 >> 2];
            c[k2 + 12 >> 2] = c[d2 + 12 >> 2];
            d2 = c[b2 + 4 >> 2] | 0;
            d2 = d2 + 1 | 0;
            c[b2 + 4 >> 2] = d2;
            return;
          }
          function lm(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0;
            o2 = +Hb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
            u2 = +g[a2 + 76 >> 2];
            t2 = +g[a2 + 60 >> 2];
            r2 = +g[a2 + 80 >> 2];
            q2 = +g[a2 + 64 >> 2];
            n2 = +g[a2 + 84 >> 2];
            m2 = +g[a2 + 68 >> 2];
            E2 = +g[b2 >> 2];
            y2 = +N(+E2);
            D2 = +g[b2 + 4 >> 2];
            x2 = +N(+D2);
            k2 = +g[b2 + 8 >> 2];
            l2 = +N(+k2);
            C2 = +g[b2 + 16 >> 2];
            w2 = +N(+C2);
            B2 = +g[b2 + 20 >> 2];
            v2 = +N(+B2);
            i2 = +g[b2 + 24 >> 2];
            j2 = +N(+i2);
            A2 = +g[b2 + 32 >> 2];
            s2 = +N(+A2);
            z2 = +g[b2 + 36 >> 2];
            p2 = +N(+z2);
            f2 = +g[b2 + 40 >> 2];
            h2 = +N(+f2);
            k2 = (u2 + t2) * 0.5 * E2 + (r2 + q2) * 0.5 * D2 + (n2 + m2) * 0.5 * k2 + +g[b2 + 48 >> 2];
            i2 = (u2 + t2) * 0.5 * C2 + (r2 + q2) * 0.5 * B2 + (n2 + m2) * 0.5 * i2 + +g[b2 + 52 >> 2];
            f2 = (u2 + t2) * 0.5 * A2 + (r2 + q2) * 0.5 * z2 + (n2 + m2) * 0.5 * f2 + +g[b2 + 56 >> 2];
            l2 = (o2 + (u2 - t2) * 0.5) * y2 + (o2 + (r2 - q2) * 0.5) * x2 + (o2 + (n2 - m2) * 0.5) * l2;
            j2 = (o2 + (u2 - t2) * 0.5) * w2 + (o2 + (r2 - q2) * 0.5) * v2 + (o2 + (n2 - m2) * 0.5) * j2;
            h2 = (o2 + (u2 - t2) * 0.5) * s2 + (o2 + (r2 - q2) * 0.5) * p2 + (o2 + (n2 - m2) * 0.5) * h2;
            g[d2 >> 2] = k2 - l2;
            g[d2 + 4 >> 2] = i2 - j2;
            g[d2 + 8 >> 2] = f2 - h2;
            g[d2 + 12 >> 2] = 0;
            g[e2 >> 2] = l2 + k2;
            g[e2 + 4 >> 2] = j2 + i2;
            g[e2 + 8 >> 2] = h2 + f2;
            g[e2 + 12 >> 2] = 0;
            return;
          }
          function mm(b2) {
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, h2 = 0;
            e2 = i;
            i = i + 96 | 0;
            a[b2 + 92 >> 0] = 1;
            if (!(a[19840] | 0)) {
              a[19840] = 1;
              c[4993] = 1065353216;
              c[4994] = 0;
              c[4995] = 0;
              c[4996] = 0;
              c[4997] = 0;
              c[4998] = 1065353216;
              c[4999] = 0;
              c[5e3] = 0;
              c[5001] = 0;
              c[5002] = 0;
              c[5003] = 1065353216;
              g[5004] = 0;
              c[5005] = -1082130432;
              c[5006] = 0;
              c[5007] = 0;
              c[5008] = 0;
              c[5009] = 0;
              c[5010] = -1082130432;
              c[5011] = 0;
              c[5012] = 0;
              c[5013] = 0;
              c[5014] = 0;
              c[5015] = -1082130432;
              g[5016] = 0;
            }
            d2 = e2;
            f2 = d2 + 96 | 0;
            do {
              c[d2 >> 2] = 0;
              d2 = d2 + 4 | 0;
            } while ((d2 | 0) < (f2 | 0));
            bc[c[(c[b2 >> 2] | 0) + 76 >> 2] & 127](b2, 19972, e2, 6);
            h2 = +g[b2 + 48 >> 2];
            g[b2 + 76 >> 2] = +g[e2 >> 2] + h2;
            g[b2 + 60 >> 2] = +g[e2 + 48 >> 2] - h2;
            g[b2 + 80 >> 2] = +g[e2 + 20 >> 2] + h2;
            g[b2 + 64 >> 2] = +g[e2 + 68 >> 2] - h2;
            g[b2 + 84 >> 2] = +g[e2 + 40 >> 2] + h2;
            g[b2 + 68 >> 2] = +g[e2 + 88 >> 2] - h2;
            i = e2;
            return;
          }
          function nm(a2) {
            a2 = a2 | 0;
            if (!a2)
              return;
            c[5638] = (c[5638] | 0) + 1;
            rG(c[a2 + -4 >> 2] | 0);
            return;
          }
          function om(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0;
            i2 = +Hb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
            h2 = +Hb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
            f2 = +Hb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
            k2 = +g[b2 + 52 >> 2] - h2;
            j2 = +g[b2 + 56 >> 2] - f2;
            g[d2 >> 2] = +g[b2 + 48 >> 2] - i2;
            g[d2 + 4 >> 2] = k2;
            g[d2 + 8 >> 2] = j2;
            g[d2 + 12 >> 2] = 0;
            h2 = h2 + +g[b2 + 52 >> 2];
            f2 = f2 + +g[b2 + 56 >> 2];
            g[e2 >> 2] = i2 + +g[b2 + 48 >> 2];
            g[e2 + 4 >> 2] = h2;
            g[e2 + 8 >> 2] = f2;
            g[e2 + 12 >> 2] = 0;
            return;
          }
          function pm(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = +b2;
            d2 = d2 | 0;
            b2 = b2 * 0.4000000059604645 * +Hb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
            b2 = b2 * +Hb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
            g[d2 >> 2] = b2;
            g[d2 + 4 >> 2] = b2;
            g[d2 + 8 >> 2] = b2;
            g[d2 + 12 >> 2] = 0;
            return;
          }
          function qm(a2) {
            a2 = a2 | 0;
            return 13962;
          }
          function rm(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            g[a2 + 48 >> 2] = b2;
            return;
          }
          function sm(a2) {
            a2 = a2 | 0;
            return +(+g[a2 + 32 >> 2] * +g[a2 + 16 >> 2]);
          }
          function tm(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0;
            e2 = i;
            i = i + 16 | 0;
            Zb[c[(c[b2 >> 2] | 0) + 68 >> 2] & 127](e2, b2, d2);
            c[a2 >> 2] = c[e2 >> 2];
            c[a2 + 4 >> 2] = c[e2 + 4 >> 2];
            c[a2 + 8 >> 2] = c[e2 + 8 >> 2];
            c[a2 + 12 >> 2] = c[e2 + 12 >> 2];
            j2 = +g[d2 >> 2];
            h2 = +g[d2 + 4 >> 2];
            f2 = +g[d2 + 8 >> 2];
            l2 = j2 * j2 + h2 * h2 + f2 * f2 < 14210854715202004e-30 ? -1 : j2;
            k2 = j2 * j2 + h2 * h2 + f2 * f2 < 14210854715202004e-30 ? -1 : h2;
            f2 = j2 * j2 + h2 * h2 + f2 * f2 < 14210854715202004e-30 ? -1 : f2;
            h2 = 1 / +O(+(f2 * f2 + (l2 * l2 + k2 * k2)));
            j2 = +Hb[c[(c[b2 >> 2] | 0) + 48 >> 2] & 15](b2);
            g[a2 >> 2] = +g[a2 >> 2] + j2 * (h2 * l2);
            g[a2 + 4 >> 2] = j2 * (h2 * k2) + +g[a2 + 4 >> 2];
            g[a2 + 8 >> 2] = j2 * (h2 * f2) + +g[a2 + 8 >> 2];
            i = e2;
            return;
          }
          function um(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            c[a2 >> 2] = 0;
            c[a2 + 4 >> 2] = 0;
            c[a2 + 8 >> 2] = 0;
            c[a2 + 12 >> 2] = 0;
            return;
          }
          function vm(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            if ((e2 | 0) > 0)
              a2 = 0;
            else
              return;
            do {
              b2 = d2 + (a2 << 4) | 0;
              a2 = a2 + 1 | 0;
              c[b2 >> 2] = 0;
              c[b2 + 4 >> 2] = 0;
              c[b2 + 8 >> 2] = 0;
              c[b2 + 12 >> 2] = 0;
            } while ((a2 | 0) != (e2 | 0));
            return;
          }
          function wm(a2) {
            a2 = a2 | 0;
            return;
          }
          function xm(a2) {
            a2 = a2 | 0;
            if (!a2)
              return;
            c[5638] = (c[5638] | 0) + 1;
            rG(c[a2 + -4 >> 2] | 0);
            return;
          }
          function ym(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            c[d2 >> 2] = -581039253;
            c[d2 + 4 >> 2] = -581039253;
            c[d2 + 8 >> 2] = -581039253;
            g[d2 + 12 >> 2] = 0;
            c[e2 >> 2] = 1566444395;
            c[e2 + 4 >> 2] = 1566444395;
            c[e2 + 8 >> 2] = 1566444395;
            g[e2 + 12 >> 2] = 0;
            return;
          }
          function zm(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c[a2 + 72 >> 2] = c[b2 >> 2];
            c[a2 + 72 + 4 >> 2] = c[b2 + 4 >> 2];
            c[a2 + 72 + 8 >> 2] = c[b2 + 8 >> 2];
            c[a2 + 72 + 12 >> 2] = c[b2 + 12 >> 2];
            return;
          }
          function Am(a2) {
            a2 = a2 | 0;
            return a2 + 72 | 0;
          }
          function Bm(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = +b2;
            d2 = d2 | 0;
            c[d2 >> 2] = 0;
            c[d2 + 4 >> 2] = 0;
            c[d2 + 8 >> 2] = 0;
            c[d2 + 12 >> 2] = 0;
            return;
          }
          function Cm(a2) {
            a2 = a2 | 0;
            return 13990;
          }
          function Dm(a2) {
            a2 = a2 | 0;
            return 52;
          }
          function Em(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0;
            e2 = Ob[c[(c[d2 >> 2] | 0) + 40 >> 2] & 31](d2, a2) | 0;
            f2 = Ob[c[(c[d2 >> 2] | 0) + 28 >> 2] & 31](d2, e2) | 0;
            c[b2 >> 2] = f2;
            if (f2 | 0)
              tb[c[(c[d2 >> 2] | 0) + 48 >> 2] & 127](d2, e2);
            c[b2 + 4 >> 2] = c[a2 + 4 >> 2];
            c[b2 + 12 >> 2] = c[a2 + 72 >> 2];
            c[b2 + 16 >> 2] = c[a2 + 76 >> 2];
            c[b2 + 20 >> 2] = c[a2 + 80 >> 2];
            c[b2 + 24 >> 2] = c[a2 + 84 >> 2];
            c[b2 + 28 >> 2] = c[a2 + 52 >> 2];
            c[b2 + 32 >> 2] = c[a2 + 56 >> 2];
            c[b2 + 36 >> 2] = c[a2 + 60 >> 2];
            c[b2 + 40 >> 2] = c[a2 + 64 >> 2];
            c[b2 + 44 >> 2] = c[a2 + 68 >> 2];
            return 14002;
          }
          function Fm(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0;
            x2 = i;
            i = i + 48 | 0;
            t2 = +g[e2 >> 2];
            u2 = +g[d2 >> 2];
            v2 = +g[e2 + 4 >> 2];
            w2 = +g[d2 + 4 >> 2];
            s2 = +g[e2 + 8 >> 2];
            h2 = +g[d2 + 8 >> 2];
            j2 = +O(+((t2 - u2) * 0.5 * ((t2 - u2) * 0.5) + (v2 - w2) * 0.5 * ((v2 - w2) * 0.5) + (s2 - h2) * 0.5 * ((s2 - h2) * 0.5)));
            k2 = +g[a2 + 60 >> 2];
            d2 = +N(+k2) > 0.7071067690849304;
            l2 = +g[a2 + 56 >> 2];
            if (d2) {
              r2 = 1 / +O(+(k2 * k2 + l2 * l2));
              y2 = +g[a2 + 52 >> 2];
              f2 = y2 * -(k2 * r2);
              m2 = y2;
              n2 = 0;
              o2 = -(k2 * r2);
              p2 = l2 * r2;
              q2 = (k2 * k2 + l2 * l2) * r2;
              r2 = -(y2 * (l2 * r2));
            } else {
              q2 = +g[a2 + 52 >> 2];
              r2 = 1 / +O(+(q2 * q2 + l2 * l2));
              f2 = (q2 * q2 + l2 * l2) * r2;
              m2 = q2;
              n2 = -(l2 * r2);
              o2 = q2 * r2;
              p2 = 0;
              q2 = -(k2 * (q2 * r2));
              r2 = k2 * -(l2 * r2);
            }
            y2 = (t2 + u2) * 0.5 * m2 + (v2 + w2) * 0.5 * l2 + (s2 + h2) * 0.5 * k2 - +g[a2 + 68 >> 2];
            m2 = (t2 + u2) * 0.5 - m2 * y2;
            n2 = j2 * n2;
            o2 = j2 * o2;
            u2 = j2 * p2;
            q2 = j2 * q2;
            r2 = j2 * r2;
            t2 = j2 * f2;
            g[x2 >> 2] = q2 + (n2 + m2);
            g[x2 + 4 >> 2] = r2 + (o2 + ((v2 + w2) * 0.5 - l2 * y2));
            g[x2 + 8 >> 2] = t2 + (u2 + ((s2 + h2) * 0.5 - k2 * y2));
            g[x2 + 12 >> 2] = 0;
            g[x2 + 16 >> 2] = n2 + m2 - q2;
            g[x2 + 20 >> 2] = o2 + ((v2 + w2) * 0.5 - l2 * y2) - r2;
            g[x2 + 24 >> 2] = u2 + ((s2 + h2) * 0.5 - k2 * y2) - t2;
            g[x2 + 28 >> 2] = 0;
            g[x2 + 32 >> 2] = m2 - n2 - q2;
            g[x2 + 36 >> 2] = (v2 + w2) * 0.5 - l2 * y2 - o2 - r2;
            g[x2 + 40 >> 2] = (s2 + h2) * 0.5 - k2 * y2 - u2 - t2;
            g[x2 + 44 >> 2] = 0;
            bc[c[(c[b2 >> 2] | 0) + 8 >> 2] & 127](b2, x2, 0, 0);
            g[x2 >> 2] = m2 - n2 - q2;
            g[x2 + 4 >> 2] = (v2 + w2) * 0.5 - l2 * y2 - o2 - r2;
            g[x2 + 8 >> 2] = (s2 + h2) * 0.5 - k2 * y2 - u2 - t2;
            g[x2 + 12 >> 2] = 0;
            g[x2 + 16 >> 2] = q2 + (m2 - n2);
            g[x2 + 20 >> 2] = r2 + ((v2 + w2) * 0.5 - l2 * y2 - o2);
            g[x2 + 24 >> 2] = t2 + ((s2 + h2) * 0.5 - k2 * y2 - u2);
            g[x2 + 28 >> 2] = 0;
            g[x2 + 32 >> 2] = q2 + (n2 + m2);
            g[x2 + 36 >> 2] = r2 + (o2 + ((v2 + w2) * 0.5 - l2 * y2));
            g[x2 + 40 >> 2] = t2 + (u2 + ((s2 + h2) * 0.5 - k2 * y2));
            g[x2 + 44 >> 2] = 0;
            bc[c[(c[b2 >> 2] | 0) + 8 >> 2] & 127](b2, x2, 0, 1);
            i = x2;
            return;
          }
          function fo(b2, d2, e2, f2, h2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            h2 = h2 | 0;
            var i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0;
            u2 = a[h2 + 16 >> 0] & -16;
            a[h2 + 16 >> 0] = u2;
            w2 = +g[e2 >> 2];
            x2 = +g[d2 >> 2];
            y2 = +g[e2 + 4 >> 2];
            z2 = +g[d2 + 4 >> 2];
            q2 = +g[e2 + 8 >> 2];
            r2 = +g[d2 + 8 >> 2];
            s2 = +g[f2 >> 2];
            t2 = +g[f2 + 4 >> 2];
            v2 = +g[f2 + 8 >> 2];
            m2 = +g[b2 >> 2];
            n2 = +g[b2 + 4 >> 2];
            i2 = +g[b2 + 8 >> 2];
            o2 = (w2 - x2) * (m2 - x2) + (y2 - z2) * (n2 - z2) + (q2 - r2) * (i2 - r2);
            p2 = (s2 - x2) * (m2 - x2) + (t2 - z2) * (n2 - z2) + (v2 - r2) * (i2 - r2);
            if (o2 <= 0 & p2 <= 0) {
              c[h2 >> 2] = c[d2 >> 2];
              c[h2 + 4 >> 2] = c[d2 + 4 >> 2];
              c[h2 + 8 >> 2] = c[d2 + 8 >> 2];
              c[h2 + 12 >> 2] = c[d2 + 12 >> 2];
              a[h2 + 16 >> 0] = u2 | 1;
              g[h2 + 20 >> 2] = 1;
              g[h2 + 24 >> 2] = 0;
              g[h2 + 28 >> 2] = 0;
              g[h2 + 32 >> 2] = 0;
              return;
            }
            k2 = (w2 - x2) * (m2 - w2) + (y2 - z2) * (n2 - y2) + (q2 - r2) * (i2 - q2);
            l2 = (s2 - x2) * (m2 - w2) + (t2 - z2) * (n2 - y2) + (v2 - r2) * (i2 - q2);
            if (!(!(k2 >= 0) | !(l2 <= k2))) {
              c[h2 >> 2] = c[e2 >> 2];
              c[h2 + 4 >> 2] = c[e2 + 4 >> 2];
              c[h2 + 8 >> 2] = c[e2 + 8 >> 2];
              c[h2 + 12 >> 2] = c[e2 + 12 >> 2];
              a[h2 + 16 >> 0] = u2 | 2;
              g[h2 + 20 >> 2] = 0;
              g[h2 + 24 >> 2] = 1;
              g[h2 + 28 >> 2] = 0;
              g[h2 + 32 >> 2] = 0;
              return;
            }
            if (k2 <= 0 & (o2 >= 0 ? o2 * l2 - k2 * p2 <= 0 : 0)) {
              g[h2 >> 2] = x2 + (w2 - x2) * (o2 / (o2 - k2));
              g[h2 + 4 >> 2] = z2 + (y2 - z2) * (o2 / (o2 - k2));
              g[h2 + 8 >> 2] = r2 + (q2 - r2) * (o2 / (o2 - k2));
              g[h2 + 12 >> 2] = 0;
              a[h2 + 16 >> 0] = u2 | 3;
              g[h2 + 20 >> 2] = 1 - o2 / (o2 - k2);
              g[h2 + 24 >> 2] = o2 / (o2 - k2);
              g[h2 + 28 >> 2] = 0;
              g[h2 + 32 >> 2] = 0;
              return;
            }
            j2 = (w2 - x2) * (m2 - s2) + (y2 - z2) * (n2 - t2) + (q2 - r2) * (i2 - v2);
            i2 = (s2 - x2) * (m2 - s2) + (t2 - z2) * (n2 - t2) + (v2 - r2) * (i2 - v2);
            if (!(!(i2 >= 0) | !(j2 <= i2))) {
              c[h2 >> 2] = c[f2 >> 2];
              c[h2 + 4 >> 2] = c[f2 + 4 >> 2];
              c[h2 + 8 >> 2] = c[f2 + 8 >> 2];
              c[h2 + 12 >> 2] = c[f2 + 12 >> 2];
              a[h2 + 16 >> 0] = u2 | 4;
              g[h2 + 20 >> 2] = 0;
              g[h2 + 24 >> 2] = 0;
              g[h2 + 28 >> 2] = 1;
              g[h2 + 32 >> 2] = 0;
              return;
            }
            if (i2 <= 0 & (p2 >= 0 ? j2 * p2 - o2 * i2 <= 0 : 0)) {
              g[h2 >> 2] = x2 + (s2 - x2) * (p2 / (p2 - i2));
              g[h2 + 4 >> 2] = z2 + (t2 - z2) * (p2 / (p2 - i2));
              g[h2 + 8 >> 2] = r2 + (v2 - r2) * (p2 / (p2 - i2));
              g[h2 + 12 >> 2] = 0;
              a[h2 + 16 >> 0] = u2 | 5;
              g[h2 + 20 >> 2] = 1 - p2 / (p2 - i2);
              g[h2 + 24 >> 2] = 0;
              g[h2 + 28 >> 2] = p2 / (p2 - i2);
              g[h2 + 32 >> 2] = 0;
              return;
            }
            if ((k2 * i2 - j2 * l2 <= 0 ? l2 - k2 >= 0 : 0) ? j2 - i2 >= 0 : 0) {
              z2 = (l2 - k2) / (l2 - k2 + (j2 - i2));
              g[h2 >> 2] = w2 + (s2 - w2) * z2;
              g[h2 + 4 >> 2] = y2 + (t2 - y2) * z2;
              g[h2 + 8 >> 2] = q2 + (v2 - q2) * z2;
              g[h2 + 12 >> 2] = 0;
              a[h2 + 16 >> 0] = u2 | 6;
              g[h2 + 20 >> 2] = 0;
              g[h2 + 24 >> 2] = 1 - z2;
              g[h2 + 28 >> 2] = z2;
              g[h2 + 32 >> 2] = 0;
              return;
            }
            m2 = 1 / (o2 * l2 - k2 * p2 + (k2 * i2 - j2 * l2 + (j2 * p2 - o2 * i2)));
            n2 = (j2 * p2 - o2 * i2) * m2;
            p2 = (o2 * l2 - k2 * p2) * m2;
            g[h2 >> 2] = (s2 - x2) * p2 + ((w2 - x2) * n2 + x2);
            g[h2 + 4 >> 2] = (t2 - z2) * p2 + ((y2 - z2) * n2 + z2);
            g[h2 + 8 >> 2] = (v2 - r2) * p2 + ((q2 - r2) * n2 + r2);
            g[h2 + 12 >> 2] = 0;
            a[h2 + 16 >> 0] = u2 | 7;
            g[h2 + 20 >> 2] = 1 - n2 - p2;
            g[h2 + 24 >> 2] = n2;
            g[h2 + 28 >> 2] = p2;
            g[h2 + 32 >> 2] = 0;
            return;
          }
          function go(b2) {
            b2 = b2 | 0;
            var d2 = 0;
            c[b2 >> 2] = 7044;
            d2 = c[b2 + 140 >> 2] | 0;
            if (d2 | 0) {
              if (a[b2 + 144 >> 0] | 0) {
                c[5638] = (c[5638] | 0) + 1;
                rG(c[d2 + -4 >> 2] | 0);
              }
              c[b2 + 140 >> 2] = 0;
            }
            a[b2 + 144 >> 0] = 1;
            c[b2 + 140 >> 2] = 0;
            c[b2 + 132 >> 2] = 0;
            c[b2 + 136 >> 2] = 0;
            return;
          }
          function ho(b2) {
            b2 = b2 | 0;
            var d2 = 0;
            c[b2 >> 2] = 7044;
            d2 = c[b2 + 140 >> 2] | 0;
            if (d2 | 0) {
              if (a[b2 + 144 >> 0] | 0) {
                c[5638] = (c[5638] | 0) + 1;
                rG(c[d2 + -4 >> 2] | 0);
              }
              c[b2 + 140 >> 2] = 0;
            }
            a[b2 + 144 >> 0] = 1;
            c[b2 + 140 >> 2] = 0;
            c[b2 + 132 >> 2] = 0;
            c[b2 + 136 >> 2] = 0;
            c[5638] = (c[5638] | 0) + 1;
            rG(c[b2 + -4 >> 2] | 0);
            return;
          }
          function io(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = +d2;
            tb[c[(c[a2 >> 2] | 0) + 32 >> 2] & 127](a2, b2);
            $b[c[(c[a2 >> 2] | 0) + 36 >> 2] & 7](a2, b2, d2);
            return;
          }
          function jo(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            return;
          }
          function ko(b2, d2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0;
            a[b2 + 171 >> 0] = 1;
            c[b2 + 60 >> 2] = c[d2 >> 2];
            c[b2 + 60 + 4 >> 2] = c[d2 + 4 >> 2];
            c[b2 + 60 + 8 >> 2] = c[d2 + 8 >> 2];
            c[b2 + 60 + 12 >> 2] = c[d2 + 12 >> 2];
            e2 = +g[b2 + 60 >> 2];
            f2 = +g[b2 + 64 >> 2];
            i2 = +g[b2 + 68 >> 2];
            h2 = +O(+(e2 * e2 + f2 * f2 + i2 * i2));
            if (h2 > 11920928955078125e-23) {
              j2 = e2 * (1 / h2);
              f2 = f2 * (1 / h2);
              e2 = i2 * (1 / h2);
              d2 = c[b2 + 72 >> 2] | 0;
            } else {
              j2 = 0;
              f2 = 0;
              e2 = 0;
              d2 = 0;
            }
            g[b2 + 76 >> 2] = j2;
            g[b2 + 80 >> 2] = f2;
            g[b2 + 84 >> 2] = e2;
            c[b2 + 88 >> 2] = d2;
            return;
          }
          function lo(b2, d2, e2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = +e2;
            var f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0;
            a[b2 + 171 >> 0] = 0;
            c[b2 + 60 >> 2] = c[d2 >> 2];
            c[b2 + 60 + 4 >> 2] = c[d2 + 4 >> 2];
            c[b2 + 60 + 8 >> 2] = c[d2 + 8 >> 2];
            c[b2 + 60 + 12 >> 2] = c[d2 + 12 >> 2];
            f2 = +g[b2 + 60 >> 2];
            h2 = +g[b2 + 64 >> 2];
            j2 = +g[b2 + 68 >> 2];
            i2 = +O(+(f2 * f2 + h2 * h2 + j2 * j2));
            if (i2 > 11920928955078125e-23) {
              k2 = f2 * (1 / i2);
              h2 = h2 * (1 / i2);
              f2 = j2 * (1 / i2);
              d2 = c[b2 + 72 >> 2] | 0;
            } else {
              k2 = 0;
              h2 = 0;
              f2 = 0;
              d2 = 0;
            }
            g[b2 + 76 >> 2] = k2;
            g[b2 + 80 >> 2] = h2;
            g[b2 + 84 >> 2] = f2;
            c[b2 + 88 >> 2] = d2;
            g[b2 + 172 >> 2] = +g[b2 + 172 >> 2] + e2;
            return;
          }
          function mo(b2, d2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, h2 = 0;
            g[b2 + 16 >> 2] = 0;
            g[b2 + 20 >> 2] = 0;
            a[b2 + 168 >> 0] = 0;
            a[b2 + 169 >> 0] = 0;
            g[b2 + 172 >> 2] = 0;
            c[b2 + 60 >> 2] = 0;
            c[b2 + 60 + 4 >> 2] = 0;
            c[b2 + 60 + 8 >> 2] = 0;
            c[b2 + 60 + 12 >> 2] = 0;
            b2 = c[(c[b2 + 8 >> 2] | 0) + 308 >> 2] | 0;
            if ((c[(vb[c[(c[b2 >> 2] | 0) + 28 >> 2] & 127](b2) | 0) + 4 >> 2] | 0) <= 0)
              return;
            do {
              f2 = c[b2 >> 2] | 0;
              h2 = c[f2 + 12 >> 2] | 0;
              f2 = c[c[(vb[c[f2 + 28 >> 2] & 127](b2) | 0) + 12 >> 2] >> 2] | 0;
              e2 = c[(c[(vb[c[(c[b2 >> 2] | 0) + 28 >> 2] & 127](b2) | 0) + 12 >> 2] | 0) + 4 >> 2] | 0;
              zb[h2 & 31](b2, f2, e2, c[d2 + 24 >> 2] | 0) | 0;
            } while ((c[(vb[c[(c[b2 >> 2] | 0) + 28 >> 2] & 127](b2) | 0) + 4 >> 2] | 0) > 0);
            return;
          }
          function no(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0;
            d2 = i;
            i = i + 16 | 0;
            c[d2 >> 2] = c[b2 >> 2];
            c[d2 + 4 >> 2] = c[b2 + 4 >> 2];
            c[d2 + 8 >> 2] = c[b2 + 8 >> 2];
            c[d2 + 12 >> 2] = c[b2 + 12 >> 2];
            a2 = c[a2 + 8 >> 2] | 0;
            c[a2 + 284 >> 2] = (c[a2 + 284 >> 2] | 0) + 1;
            c[a2 + 4 >> 2] = 1065353216;
            c[a2 + 8 >> 2] = 0;
            c[a2 + 8 + 4 >> 2] = 0;
            c[a2 + 8 + 8 >> 2] = 0;
            c[a2 + 8 + 12 >> 2] = 0;
            c[a2 + 24 >> 2] = 1065353216;
            c[a2 + 28 >> 2] = 0;
            c[a2 + 28 + 4 >> 2] = 0;
            c[a2 + 28 + 8 >> 2] = 0;
            c[a2 + 28 + 12 >> 2] = 0;
            c[a2 + 44 >> 2] = 1065353216;
            c[a2 + 48 >> 2] = 0;
            c[a2 + 52 >> 2] = c[d2 >> 2];
            c[a2 + 52 + 4 >> 2] = c[d2 + 4 >> 2];
            c[a2 + 52 + 8 >> 2] = c[d2 + 8 >> 2];
            c[a2 + 52 + 12 >> 2] = c[d2 + 12 >> 2];
            i = d2;
            return;
          }
          function oo(b2, d2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            a[b2 + 148 >> 0] = 0;
            if ((((po(b2, d2) | 0 ? (a[b2 + 148 >> 0] = 1, po(b2, d2) | 0) : 0) ? (a[b2 + 148 >> 0] = 1, po(b2, d2) | 0) : 0) ? (a[b2 + 148 >> 0] = 1, po(b2, d2) | 0) : 0) ? (a[b2 + 148 >> 0] = 1, po(b2, d2) | 0) : 0)
              a[b2 + 148 >> 0] = 1;
            d2 = (c[b2 + 8 >> 2] | 0) + 52 | 0;
            c[b2 + 92 >> 2] = c[d2 >> 2];
            c[b2 + 92 + 4 >> 2] = c[d2 + 4 >> 2];
            c[b2 + 92 + 8 >> 2] = c[d2 + 8 >> 2];
            c[b2 + 92 + 12 >> 2] = c[d2 + 12 >> 2];
            cH(b2 + 112 | 0, d2 | 0, 16) | 0;
            return;
          }
          function po(b2, d2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0;
            u2 = i;
            i = i + 96 | 0;
            s2 = c[b2 + 12 >> 2] | 0;
            bc[c[(c[s2 >> 2] | 0) + 8 >> 2] & 127](s2, (c[b2 + 8 >> 2] | 0) + 4 | 0, u2 + 80 | 0, u2 + 64 | 0);
            s2 = c[d2 + 68 >> 2] | 0;
            pb[c[(c[s2 >> 2] | 0) + 16 >> 2] & 31](s2, c[(c[b2 + 8 >> 2] | 0) + 188 >> 2] | 0, u2 + 80 | 0, u2 + 64 | 0, c[d2 + 24 >> 2] | 0);
            s2 = c[d2 + 24 >> 2] | 0;
            bc[c[(c[s2 >> 2] | 0) + 32 >> 2] & 127](s2, c[(c[b2 + 8 >> 2] | 0) + 308 >> 2] | 0, d2 + 28 | 0, s2);
            s2 = c[b2 + 8 >> 2] | 0;
            c[b2 + 92 >> 2] = c[s2 + 52 >> 2];
            c[b2 + 92 + 4 >> 2] = c[s2 + 52 + 4 >> 2];
            c[b2 + 92 + 8 >> 2] = c[s2 + 52 + 8 >> 2];
            c[b2 + 92 + 12 >> 2] = c[s2 + 52 + 12 >> 2];
            s2 = c[s2 + 308 >> 2] | 0;
            if ((vb[c[(c[s2 >> 2] | 0) + 36 >> 2] & 127](s2) | 0) > 0) {
              s2 = 0;
              h2 = 0;
              d2 = 0;
              do {
                e2 = c[b2 + 132 >> 2] | 0;
                if ((e2 | 0) < 0) {
                  if ((c[b2 + 136 >> 2] | 0) < 0) {
                    f2 = c[b2 + 140 >> 2] | 0;
                    if (f2 | 0) {
                      if (a[b2 + 144 >> 0] | 0) {
                        c[5638] = (c[5638] | 0) + 1;
                        rG(c[f2 + -4 >> 2] | 0);
                      }
                      c[b2 + 140 >> 2] = 0;
                    }
                    a[b2 + 144 >> 0] = 1;
                    c[b2 + 140 >> 2] = 0;
                    c[b2 + 136 >> 2] = 0;
                  }
                  do {
                    c[(c[b2 + 140 >> 2] | 0) + (e2 << 2) >> 2] = 0;
                    e2 = e2 + 1 | 0;
                  } while ((e2 | 0) != 0);
                }
                c[b2 + 132 >> 2] = 0;
                e2 = c[(c[b2 + 8 >> 2] | 0) + 308 >> 2] | 0;
                e2 = c[(vb[c[(c[e2 >> 2] | 0) + 28 >> 2] & 127](e2) | 0) + 12 >> 2] | 0;
                r2 = c[c[e2 + (s2 << 4) >> 2] >> 2] | 0;
                f2 = c[c[e2 + (s2 << 4) + 4 >> 2] >> 2] | 0;
                if (!((r2 | 0) != 0 ? (c[r2 + 204 >> 2] & 4 | 0) != 0 : 0))
                  t2 = 14;
                do
                  if ((t2 | 0) == 14) {
                    t2 = 0;
                    if (f2 | 0 ? c[f2 + 204 >> 2] & 4 | 0 : 0)
                      break;
                    e2 = c[e2 + (s2 << 4) + 8 >> 2] | 0;
                    if (e2 | 0)
                      tb[c[(c[e2 >> 2] | 0) + 16 >> 2] & 127](e2, b2 + 128 | 0);
                    q2 = c[b2 + 132 >> 2] | 0;
                    if ((q2 | 0) > 0) {
                      o2 = c[b2 + 140 >> 2] | 0;
                      p2 = c[b2 + 8 >> 2] | 0;
                      r2 = 0;
                      do {
                        m2 = c[o2 + (r2 << 2) >> 2] | 0;
                        n2 = (c[m2 + 740 >> 2] | 0) == (p2 | 0) ? -1 : 1;
                        e2 = c[m2 + 748 >> 2] | 0;
                        if ((e2 | 0) > 0) {
                          l2 = 0;
                          do {
                            k2 = +g[m2 + 4 + (l2 * 184 | 0) + 80 >> 2];
                            if (k2 < 0) {
                              j2 = m2 + 4 + (l2 * 184 | 0) + 64 | 0;
                              if (k2 < h2) {
                                d2 = m2 + 4 + (l2 * 184 | 0) + 68 | 0;
                                v2 = n2 * +g[d2 >> 2];
                                f2 = m2 + 4 + (l2 * 184 | 0) + 72 | 0;
                                h2 = n2 * +g[f2 >> 2];
                                g[b2 + 152 >> 2] = n2 * +g[j2 >> 2];
                                g[b2 + 156 >> 2] = v2;
                                g[b2 + 160 >> 2] = h2;
                                g[b2 + 164 >> 2] = 0;
                                e2 = c[m2 + 748 >> 2] | 0;
                                h2 = k2;
                              } else {
                                d2 = m2 + 4 + (l2 * 184 | 0) + 68 | 0;
                                f2 = m2 + 4 + (l2 * 184 | 0) + 72 | 0;
                              }
                              w2 = k2 * (n2 * +g[d2 >> 2]) * 0.20000000298023224;
                              v2 = k2 * (n2 * +g[f2 >> 2]) * 0.20000000298023224;
                              g[b2 + 92 >> 2] = k2 * (n2 * +g[j2 >> 2]) * 0.20000000298023224 + +g[b2 + 92 >> 2];
                              g[b2 + 96 >> 2] = w2 + +g[b2 + 96 >> 2];
                              g[b2 + 100 >> 2] = v2 + +g[b2 + 100 >> 2];
                              d2 = 1;
                            }
                            l2 = l2 + 1 | 0;
                          } while ((l2 | 0) < (e2 | 0));
                        }
                        r2 = r2 + 1 | 0;
                      } while ((r2 | 0) != (q2 | 0));
                    }
                  }
                while (0);
                s2 = s2 + 1 | 0;
                r2 = c[(c[b2 + 8 >> 2] | 0) + 308 >> 2] | 0;
              } while ((s2 | 0) < (vb[c[(c[r2 >> 2] | 0) + 36 >> 2] & 127](r2) | 0));
            } else
              d2 = 0;
            t2 = c[b2 + 8 >> 2] | 0;
            c[u2 >> 2] = c[t2 + 4 >> 2];
            c[u2 + 4 >> 2] = c[t2 + 4 + 4 >> 2];
            c[u2 + 8 >> 2] = c[t2 + 4 + 8 >> 2];
            c[u2 + 12 >> 2] = c[t2 + 4 + 12 >> 2];
            c[u2 + 16 >> 2] = c[t2 + 20 >> 2];
            c[u2 + 16 + 4 >> 2] = c[t2 + 20 + 4 >> 2];
            c[u2 + 16 + 8 >> 2] = c[t2 + 20 + 8 >> 2];
            c[u2 + 16 + 12 >> 2] = c[t2 + 20 + 12 >> 2];
            c[u2 + 32 >> 2] = c[t2 + 36 >> 2];
            c[u2 + 32 + 4 >> 2] = c[t2 + 36 + 4 >> 2];
            c[u2 + 32 + 8 >> 2] = c[t2 + 36 + 8 >> 2];
            c[u2 + 32 + 12 >> 2] = c[t2 + 36 + 12 >> 2];
            c[u2 + 48 >> 2] = c[b2 + 92 >> 2];
            c[u2 + 48 + 4 >> 2] = c[b2 + 92 + 4 >> 2];
            c[u2 + 48 + 8 >> 2] = c[b2 + 92 + 8 >> 2];
            c[u2 + 48 + 12 >> 2] = c[b2 + 92 + 12 >> 2];
            c[t2 + 284 >> 2] = (c[t2 + 284 >> 2] | 0) + 1;
            c[t2 + 4 >> 2] = c[u2 >> 2];
            c[t2 + 4 + 4 >> 2] = c[u2 + 4 >> 2];
            c[t2 + 4 + 8 >> 2] = c[u2 + 8 >> 2];
            c[t2 + 4 + 12 >> 2] = c[u2 + 12 >> 2];
            c[t2 + 20 >> 2] = c[u2 + 16 >> 2];
            c[t2 + 20 + 4 >> 2] = c[u2 + 16 + 4 >> 2];
            c[t2 + 20 + 8 >> 2] = c[u2 + 16 + 8 >> 2];
            c[t2 + 20 + 12 >> 2] = c[u2 + 16 + 12 >> 2];
            c[t2 + 36 >> 2] = c[u2 + 32 >> 2];
            c[t2 + 36 + 4 >> 2] = c[u2 + 32 + 4 >> 2];
            c[t2 + 36 + 8 >> 2] = c[u2 + 32 + 8 >> 2];
            c[t2 + 36 + 12 >> 2] = c[u2 + 32 + 12 >> 2];
            c[t2 + 52 >> 2] = c[u2 + 48 >> 2];
            c[t2 + 52 + 4 >> 2] = c[u2 + 48 + 4 >> 2];
            c[t2 + 52 + 8 >> 2] = c[u2 + 48 + 8 >> 2];
            c[t2 + 52 + 12 >> 2] = c[u2 + 48 + 12 >> 2];
            i = u2;
            return d2 | 0;
          }
          function qo(d2, e2, f2) {
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = +f2;
            var h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0;
            t2 = i;
            i = i + 528 | 0;
            if (!(a[d2 + 171 >> 0] | 0)) {
              if (+g[d2 + 172 >> 2] <= 0) {
                i = t2;
                return;
              }
              j2 = +g[d2 + 60 >> 2];
              q2 = +g[d2 + 64 >> 2];
              r2 = +g[d2 + 68 >> 2];
              if (j2 * j2 + q2 * q2 + r2 * r2 < 14210854715202004e-30) {
                i = t2;
                return;
              }
            }
            a[d2 + 168 >> 0] = (vb[c[(c[d2 >> 2] | 0) + 48 >> 2] & 127](d2) | 0) & 1;
            j2 = +g[d2 + 16 >> 2] - +g[d2 + 44 >> 2] * f2;
            g[d2 + 16 >> 2] = j2;
            if (j2 > 0 ? (k2 = +g[d2 + 28 >> 2], j2 > k2) : 0) {
              g[d2 + 16 >> 2] = k2;
              j2 = k2;
            }
            if (j2 < 0 ? (r2 = +N(+j2), m2 = +N(+ +g[d2 + 24 >> 2]), r2 > m2) : 0) {
              g[d2 + 16 >> 2] = -m2;
              j2 = -m2;
            }
            g[d2 + 20 >> 2] = j2 * f2;
            h2 = c[d2 + 8 >> 2] | 0;
            c[t2 >> 2] = c[h2 + 4 >> 2];
            c[t2 + 4 >> 2] = c[h2 + 4 + 4 >> 2];
            c[t2 + 8 >> 2] = c[h2 + 4 + 8 >> 2];
            c[t2 + 12 >> 2] = c[h2 + 4 + 12 >> 2];
            c[t2 + 16 >> 2] = c[h2 + 20 >> 2];
            c[t2 + 16 + 4 >> 2] = c[h2 + 20 + 4 >> 2];
            c[t2 + 16 + 8 >> 2] = c[h2 + 20 + 8 >> 2];
            c[t2 + 16 + 12 >> 2] = c[h2 + 20 + 12 >> 2];
            c[t2 + 32 >> 2] = c[h2 + 36 >> 2];
            c[t2 + 32 + 4 >> 2] = c[h2 + 36 + 4 >> 2];
            c[t2 + 32 + 8 >> 2] = c[h2 + 36 + 8 >> 2];
            c[t2 + 32 + 12 >> 2] = c[h2 + 36 + 12 >> 2];
            c[t2 + 48 >> 2] = c[h2 + 52 >> 2];
            c[t2 + 48 + 4 >> 2] = c[h2 + 52 + 4 >> 2];
            c[t2 + 48 + 8 >> 2] = c[h2 + 52 + 8 >> 2];
            c[t2 + 48 + 12 >> 2] = c[h2 + 52 + 12 >> 2];
            h2 = c[d2 + 176 >> 2] | 0;
            if (!(a[19872] | 0)) {
              a[19872] = 1;
              c[5298] = 1065353216;
              c[5299] = 0;
              c[5300] = 0;
              c[5301] = 0;
              c[5302] = 0;
              c[5303] = 1065353216;
              c[5304] = 0;
              c[5305] = 0;
              c[5306] = 0;
              c[5307] = 0;
              c[5308] = 1065353216;
              g[5309] = 0;
            }
            m2 = +g[d2 + 20 >> 2];
            m2 = +g[d2 + 52 >> 2] + (m2 > 0 ? m2 : 0);
            q2 = +g[21192 + (h2 << 4) + 4 >> 2] * m2 + +g[d2 + 96 >> 2];
            r2 = m2 * +g[21192 + (h2 << 4) + 8 >> 2] + +g[d2 + 100 >> 2];
            g[d2 + 112 >> 2] = +g[d2 + 92 >> 2] + +g[21192 + (h2 << 4) >> 2] * m2;
            g[d2 + 116 >> 2] = q2;
            g[d2 + 120 >> 2] = r2;
            g[d2 + 124 >> 2] = 0;
            c[t2 + 456 >> 2] = 1065353216;
            c[t2 + 456 + 4 >> 2] = 0;
            c[t2 + 456 + 4 + 4 >> 2] = 0;
            c[t2 + 456 + 4 + 8 >> 2] = 0;
            c[t2 + 456 + 4 + 12 >> 2] = 0;
            c[t2 + 456 + 20 >> 2] = 1065353216;
            c[t2 + 456 + 24 >> 2] = 0;
            c[t2 + 456 + 24 + 4 >> 2] = 0;
            c[t2 + 456 + 24 + 8 >> 2] = 0;
            c[t2 + 456 + 24 + 12 >> 2] = 0;
            c[t2 + 456 + 40 >> 2] = 1065353216;
            h2 = t2 + 456 + 44 | 0;
            c[h2 >> 2] = 0;
            c[h2 + 4 >> 2] = 0;
            c[h2 + 8 >> 2] = 0;
            c[h2 + 12 >> 2] = 0;
            c[h2 + 16 >> 2] = 0;
            c[t2 + 392 >> 2] = 1065353216;
            c[t2 + 392 + 4 >> 2] = 0;
            c[t2 + 392 + 4 + 4 >> 2] = 0;
            c[t2 + 392 + 4 + 8 >> 2] = 0;
            c[t2 + 392 + 4 + 12 >> 2] = 0;
            c[t2 + 392 + 20 >> 2] = 1065353216;
            c[t2 + 392 + 24 >> 2] = 0;
            c[t2 + 392 + 24 + 4 >> 2] = 0;
            c[t2 + 392 + 24 + 8 >> 2] = 0;
            c[t2 + 392 + 24 + 12 >> 2] = 0;
            c[t2 + 392 + 40 >> 2] = 1065353216;
            h2 = t2 + 392 + 44 | 0;
            c[h2 >> 2] = 0;
            c[h2 + 4 >> 2] = 0;
            c[h2 + 8 >> 2] = 0;
            c[h2 + 12 >> 2] = 0;
            c[h2 + 16 >> 2] = 0;
            h2 = c[d2 + 176 >> 2] | 0;
            if (!(a[19872] | 0)) {
              a[19872] = 1;
              c[5298] = 1065353216;
              c[5299] = 0;
              c[5300] = 0;
              c[5301] = 0;
              c[5302] = 0;
              c[5303] = 1065353216;
              c[5304] = 0;
              c[5305] = 0;
              c[5306] = 0;
              c[5307] = 0;
              c[5308] = 1065353216;
              g[5309] = 0;
            }
            l2 = c[d2 + 12 >> 2] | 0;
            m2 = +Hb[c[(c[l2 >> 2] | 0) + 48 >> 2] & 15](l2);
            m2 = m2 + +g[d2 + 56 >> 2];
            q2 = m2 * +g[21192 + (h2 << 4) + 4 >> 2] + +g[d2 + 96 >> 2];
            r2 = m2 * +g[21192 + (h2 << 4) + 8 >> 2] + +g[d2 + 100 >> 2];
            g[t2 + 456 + 48 >> 2] = +g[21192 + (h2 << 4) >> 2] * m2 + +g[d2 + 92 >> 2];
            g[t2 + 456 + 52 >> 2] = q2;
            g[t2 + 456 + 56 >> 2] = r2;
            g[t2 + 456 + 60 >> 2] = 0;
            c[t2 + 392 + 48 >> 2] = c[d2 + 112 >> 2];
            c[t2 + 392 + 48 + 4 >> 2] = c[d2 + 112 + 4 >> 2];
            c[t2 + 392 + 48 + 8 >> 2] = c[d2 + 112 + 8 >> 2];
            c[t2 + 392 + 48 + 12 >> 2] = c[d2 + 112 + 12 >> 2];
            h2 = c[d2 + 8 >> 2] | 0;
            l2 = c[d2 + 176 >> 2] | 0;
            if (!(a[19872] | 0)) {
              a[19872] = 1;
              c[5298] = 1065353216;
              c[5299] = 0;
              c[5300] = 0;
              c[5301] = 0;
              c[5302] = 0;
              c[5303] = 1065353216;
              c[5304] = 0;
              c[5305] = 0;
              c[5306] = 0;
              c[5307] = 0;
              c[5308] = 1065353216;
              g[5309] = 0;
            }
            m2 = -+g[21192 + (l2 << 4) >> 2];
            q2 = -+g[21192 + (l2 << 4) + 4 >> 2];
            r2 = -+g[21192 + (l2 << 4) + 8 >> 2];
            g[t2 + 288 + 4 >> 2] = 1;
            b[t2 + 288 + 8 >> 1] = 1;
            b[t2 + 288 + 10 >> 1] = -1;
            p2 = t2 + 288 + 12 | 0;
            c[t2 + 288 + 76 >> 2] = 0;
            c[p2 >> 2] = 0;
            c[p2 + 4 >> 2] = 0;
            c[p2 + 8 >> 2] = 0;
            c[p2 + 12 >> 2] = 0;
            c[p2 + 16 >> 2] = 0;
            c[p2 + 20 >> 2] = 0;
            c[p2 + 24 >> 2] = 0;
            c[p2 + 28 >> 2] = 0;
            c[t2 + 288 >> 2] = 7108;
            c[t2 + 288 + 80 >> 2] = h2;
            g[t2 + 288 + 84 >> 2] = m2;
            g[t2 + 288 + 88 >> 2] = q2;
            g[t2 + 288 + 92 >> 2] = r2;
            g[t2 + 288 + 96 >> 2] = 0;
            g[t2 + 288 + 100 >> 2] = 0.707099974155426;
            h2 = c[d2 + 8 >> 2] | 0;
            p2 = c[(c[h2 + 188 >> 2] | 0) + 4 >> 2] | 0;
            b[t2 + 288 + 8 >> 1] = p2;
            b[t2 + 288 + 10 >> 1] = p2 >>> 16;
            if (!(a[d2 + 170 >> 0] | 0))
              Yf(e2, c[d2 + 12 >> 2] | 0, t2 + 456 | 0, t2 + 392 | 0, t2 + 288 | 0, 0);
            else
              pi(h2, c[d2 + 12 >> 2] | 0, t2 + 456 | 0, t2 + 392 | 0, t2 + 288 | 0, +g[e2 + 56 >> 2]);
            if (+g[t2 + 288 + 4 >> 2] < 1) {
              h2 = c[d2 + 176 >> 2] | 0;
              if (!(a[19872] | 0)) {
                a[19872] = 1;
                c[5298] = 1065353216;
                c[5299] = 0;
                c[5300] = 0;
                c[5301] = 0;
                c[5302] = 0;
                c[5303] = 1065353216;
                c[5304] = 0;
                c[5305] = 0;
                c[5306] = 0;
                c[5307] = 0;
                c[5308] = 1065353216;
                g[5309] = 0;
              }
              do
                if (+g[t2 + 288 + 44 >> 2] * +g[21192 + (h2 << 4) >> 2] + +g[t2 + 288 + 48 >> 2] * +g[21192 + (h2 << 4) + 4 >> 2] + +g[t2 + 288 + 52 >> 2] * +g[21192 + (h2 << 4) + 8 >> 2] > 0) {
                  j2 = +g[t2 + 288 + 4 >> 2];
                  g[d2 + 108 >> 2] = +g[d2 + 52 >> 2] * j2;
                  if (!(a[d2 + 180 >> 0] | 0)) {
                    c[d2 + 92 >> 2] = c[d2 + 112 >> 2];
                    c[d2 + 92 + 4 >> 2] = c[d2 + 112 + 4 >> 2];
                    c[d2 + 92 + 8 >> 2] = c[d2 + 112 + 8 >> 2];
                    c[d2 + 92 + 12 >> 2] = c[d2 + 112 + 12 >> 2];
                    break;
                  } else {
                    g[d2 + 92 >> 2] = (1 - j2) * +g[d2 + 92 >> 2] + j2 * +g[d2 + 112 >> 2];
                    g[d2 + 96 >> 2] = (1 - j2) * +g[d2 + 96 >> 2] + j2 * +g[d2 + 116 >> 2];
                    g[d2 + 100 >> 2] = (1 - j2) * +g[d2 + 100 >> 2] + j2 * +g[d2 + 120 >> 2];
                    break;
                  }
                }
              while (0);
              g[d2 + 16 >> 2] = 0;
              g[d2 + 20 >> 2] = 0;
            } else {
              c[d2 + 108 >> 2] = c[d2 + 52 >> 2];
              c[d2 + 92 >> 2] = c[d2 + 112 >> 2];
              c[d2 + 92 + 4 >> 2] = c[d2 + 112 + 4 >> 2];
              c[d2 + 92 + 8 >> 2] = c[d2 + 112 + 8 >> 2];
              c[d2 + 92 + 12 >> 2] = c[d2 + 112 + 12 >> 2];
            }
            if (!(a[d2 + 171 >> 0] | 0)) {
              q2 = +g[d2 + 172 >> 2];
              r2 = q2 > f2 ? f2 : q2;
              g[d2 + 172 >> 2] = q2 - f2;
              uo(d2, e2, r2 * +g[d2 + 60 >> 2], r2 * +g[d2 + 64 >> 2], r2 * +g[d2 + 68 >> 2]);
            } else
              uo(d2, e2, +g[d2 + 60 >> 2], +g[d2 + 64 >> 2], +g[d2 + 68 >> 2]);
            c[t2 + 272 >> 2] = c[d2 + 112 >> 2];
            c[t2 + 272 + 4 >> 2] = c[d2 + 112 + 4 >> 2];
            c[t2 + 272 + 8 >> 2] = c[d2 + 112 + 8 >> 2];
            c[t2 + 272 + 12 >> 2] = c[d2 + 112 + 12 >> 2];
            j2 = +g[d2 + 16 >> 2];
            j2 = (j2 < 0 ? -j2 : 0) * f2;
            if (j2 > 0 ? (o2 = +g[d2 + 24 >> 2], j2 > o2) : 0) {
              p2 = b[d2 + 168 >> 1] | 0;
              j2 = (p2 & 255) << 24 >> 24 != 0 | (p2 & 65535) < 256 ? o2 : j2;
            }
            h2 = c[d2 + 176 >> 2] | 0;
            if (!(a[19872] | 0)) {
              a[19872] = 1;
              c[5298] = 1065353216;
              c[5299] = 0;
              c[5300] = 0;
              c[5301] = 0;
              c[5302] = 0;
              c[5303] = 1065353216;
              c[5304] = 0;
              c[5305] = 0;
              c[5306] = 0;
              c[5307] = 0;
              c[5308] = 1065353216;
              g[5309] = 0;
            }
            o2 = j2 + +g[d2 + 108 >> 2];
            q2 = +g[21192 + (h2 << 4) >> 2] * o2;
            r2 = o2 * +g[21192 + (h2 << 4) + 4 >> 2];
            o2 = o2 * +g[21192 + (h2 << 4) + 8 >> 2];
            g[d2 + 112 >> 2] = +g[d2 + 112 >> 2] - q2;
            g[d2 + 116 >> 2] = +g[d2 + 116 >> 2] - r2;
            g[d2 + 120 >> 2] = +g[d2 + 120 >> 2] - o2;
            h2 = c[d2 + 8 >> 2] | 0;
            l2 = c[d2 + 176 >> 2] | 0;
            if (!(a[19872] | 0)) {
              a[19872] = 1;
              c[5298] = 1065353216;
              c[5299] = 0;
              c[5300] = 0;
              c[5301] = 0;
              c[5302] = 0;
              c[5303] = 1065353216;
              c[5304] = 0;
              c[5305] = 0;
              c[5306] = 0;
              c[5307] = 0;
              c[5308] = 1065353216;
              g[5309] = 0;
            }
            n2 = c[d2 + 40 >> 2] | 0;
            p2 = t2 + 168 + 4 | 0;
            g[p2 >> 2] = 1;
            b[t2 + 168 + 8 >> 1] = 1;
            b[t2 + 168 + 10 >> 1] = -1;
            u2 = t2 + 168 + 12 | 0;
            c[t2 + 168 + 76 >> 2] = 0;
            c[u2 >> 2] = 0;
            c[u2 + 4 >> 2] = 0;
            c[u2 + 8 >> 2] = 0;
            c[u2 + 12 >> 2] = 0;
            c[u2 + 16 >> 2] = 0;
            c[u2 + 20 >> 2] = 0;
            c[u2 + 24 >> 2] = 0;
            c[u2 + 28 >> 2] = 0;
            c[t2 + 168 >> 2] = 7108;
            c[t2 + 168 + 80 >> 2] = h2;
            c[t2 + 168 + 84 >> 2] = c[21192 + (l2 << 4) >> 2];
            c[t2 + 168 + 84 + 4 >> 2] = c[21192 + (l2 << 4) + 4 >> 2];
            c[t2 + 168 + 84 + 8 >> 2] = c[21192 + (l2 << 4) + 8 >> 2];
            c[t2 + 168 + 84 + 12 >> 2] = c[21192 + (l2 << 4) + 12 >> 2];
            c[t2 + 168 + 100 >> 2] = n2;
            h2 = c[d2 + 8 >> 2] | 0;
            l2 = c[(c[h2 + 188 >> 2] | 0) + 4 >> 2] | 0;
            b[t2 + 168 + 8 >> 1] = l2;
            b[t2 + 168 + 10 >> 1] = l2 >>> 16;
            l2 = c[d2 + 176 >> 2] | 0;
            if (!(a[19872] | 0)) {
              a[19872] = 1;
              c[5298] = 1065353216;
              c[5299] = 0;
              c[5300] = 0;
              c[5301] = 0;
              c[5302] = 0;
              c[5303] = 1065353216;
              c[5304] = 0;
              c[5305] = 0;
              c[5306] = 0;
              c[5307] = 0;
              c[5308] = 1065353216;
              g[5309] = 0;
            }
            u2 = c[d2 + 40 >> 2] | 0;
            g[t2 + 64 + 4 >> 2] = 1;
            b[t2 + 64 + 8 >> 1] = 1;
            b[t2 + 64 + 10 >> 1] = -1;
            n2 = t2 + 64 + 12 | 0;
            c[t2 + 64 + 76 >> 2] = 0;
            c[n2 >> 2] = 0;
            c[n2 + 4 >> 2] = 0;
            c[n2 + 8 >> 2] = 0;
            c[n2 + 12 >> 2] = 0;
            c[n2 + 16 >> 2] = 0;
            c[n2 + 20 >> 2] = 0;
            c[n2 + 24 >> 2] = 0;
            c[n2 + 28 >> 2] = 0;
            c[t2 + 64 >> 2] = 7108;
            c[t2 + 64 + 80 >> 2] = h2;
            c[t2 + 64 + 84 >> 2] = c[21192 + (l2 << 4) >> 2];
            c[t2 + 64 + 84 + 4 >> 2] = c[21192 + (l2 << 4) + 4 >> 2];
            c[t2 + 64 + 84 + 8 >> 2] = c[21192 + (l2 << 4) + 8 >> 2];
            c[t2 + 64 + 84 + 12 >> 2] = c[21192 + (l2 << 4) + 12 >> 2];
            c[t2 + 64 + 100 >> 2] = u2;
            h2 = c[(c[(c[d2 + 8 >> 2] | 0) + 188 >> 2] | 0) + 4 >> 2] | 0;
            b[t2 + 64 + 8 >> 1] = h2;
            b[t2 + 64 + 10 >> 1] = h2 >>> 16;
            j2 = +g[d2 + 112 >> 2];
            k2 = +g[d2 + 116 >> 2];
            m2 = +g[d2 + 120 >> 2];
            h2 = 0;
            while (1) {
              c[t2 + 456 >> 2] = 1065353216;
              c[t2 + 456 + 4 >> 2] = 0;
              c[t2 + 456 + 4 + 4 >> 2] = 0;
              c[t2 + 456 + 4 + 8 >> 2] = 0;
              c[t2 + 456 + 4 + 12 >> 2] = 0;
              c[t2 + 456 + 20 >> 2] = 1065353216;
              c[t2 + 456 + 24 >> 2] = 0;
              c[t2 + 456 + 24 + 4 >> 2] = 0;
              c[t2 + 456 + 24 + 8 >> 2] = 0;
              c[t2 + 456 + 24 + 12 >> 2] = 0;
              c[t2 + 456 + 40 >> 2] = 1065353216;
              c[t2 + 456 + 44 >> 2] = 0;
              c[t2 + 392 >> 2] = 1065353216;
              c[t2 + 392 + 4 >> 2] = 0;
              c[t2 + 392 + 4 + 4 >> 2] = 0;
              c[t2 + 392 + 4 + 8 >> 2] = 0;
              c[t2 + 392 + 4 + 12 >> 2] = 0;
              c[t2 + 392 + 20 >> 2] = 1065353216;
              c[t2 + 392 + 24 >> 2] = 0;
              c[t2 + 392 + 24 + 4 >> 2] = 0;
              c[t2 + 392 + 24 + 8 >> 2] = 0;
              c[t2 + 392 + 24 + 12 >> 2] = 0;
              c[t2 + 392 + 40 >> 2] = 1065353216;
              c[t2 + 392 + 44 >> 2] = 0;
              c[t2 + 288 >> 2] = 1065353216;
              c[t2 + 288 + 4 >> 2] = 0;
              c[t2 + 288 + 4 + 4 >> 2] = 0;
              c[t2 + 288 + 4 + 8 >> 2] = 0;
              c[t2 + 288 + 4 + 12 >> 2] = 0;
              c[t2 + 288 + 20 >> 2] = 1065353216;
              c[t2 + 288 + 24 >> 2] = 0;
              c[t2 + 288 + 24 + 4 >> 2] = 0;
              c[t2 + 288 + 24 + 8 >> 2] = 0;
              c[t2 + 288 + 24 + 12 >> 2] = 0;
              c[t2 + 288 + 40 >> 2] = 1065353216;
              c[t2 + 288 + 44 >> 2] = 0;
              c[t2 + 288 + 44 + 4 >> 2] = 0;
              c[t2 + 288 + 44 + 8 >> 2] = 0;
              c[t2 + 456 + 48 >> 2] = c[d2 + 92 >> 2];
              c[t2 + 456 + 48 + 4 >> 2] = c[d2 + 92 + 4 >> 2];
              c[t2 + 456 + 48 + 8 >> 2] = c[d2 + 92 + 8 >> 2];
              c[t2 + 456 + 48 + 12 >> 2] = c[d2 + 92 + 12 >> 2];
              c[t2 + 392 + 48 >> 2] = c[d2 + 112 >> 2];
              c[t2 + 392 + 48 + 4 >> 2] = c[d2 + 112 + 4 >> 2];
              c[t2 + 392 + 48 + 8 >> 2] = c[d2 + 112 + 8 >> 2];
              c[t2 + 392 + 48 + 12 >> 2] = c[d2 + 112 + 12 >> 2];
              g[t2 + 288 + 48 >> 2] = j2 - q2;
              g[t2 + 288 + 52 >> 2] = k2 - r2;
              g[t2 + 288 + 56 >> 2] = m2 - o2;
              g[t2 + 288 + 60 >> 2] = 0;
              if (!(a[d2 + 170 >> 0] | 0)) {
                Yf(e2, c[d2 + 12 >> 2] | 0, t2 + 456 | 0, t2 + 392 | 0, t2 + 168 | 0, +g[e2 + 56 >> 2]);
                if (!(+g[p2 >> 2] < 1))
                  Yf(e2, c[d2 + 12 >> 2] | 0, t2 + 456 | 0, t2 + 288 | 0, t2 + 64 | 0, +g[e2 + 56 >> 2]);
              } else {
                pi(c[d2 + 8 >> 2] | 0, c[d2 + 12 >> 2] | 0, t2 + 456 | 0, t2 + 392 | 0, t2 + 168 | 0, +g[e2 + 56 >> 2]);
                if (!(+g[p2 >> 2] < 1))
                  pi(c[d2 + 8 >> 2] | 0, c[d2 + 12 >> 2] | 0, t2 + 456 | 0, t2 + 288 | 0, t2 + 64 | 0, +g[e2 + 56 >> 2]);
              }
              k2 = +g[d2 + 16 >> 2];
              k2 = (k2 < 0 ? -k2 : 0) * f2;
              n2 = (a[d2 + 182 >> 0] | 0) == 0;
              if (!n2 ? +g[p2 >> 2] < 1 : 0)
                l2 = 1;
              else
                l2 = +g[t2 + 64 + 4 >> 2] < 1;
              if (!(k2 > 0))
                break;
              j2 = +g[d2 + 52 >> 2];
              if (h2 | (!(k2 < j2) | l2 ^ 1))
                break;
              u2 = b[d2 + 168 >> 1] | 0;
              if (!((u2 & 255) << 24 >> 24 != 0 | (u2 & 65535) < 256)) {
                h2 = 0;
                break;
              }
              ;
              c[d2 + 112 >> 2] = c[t2 + 272 >> 2];
              c[d2 + 112 + 4 >> 2] = c[t2 + 272 + 4 >> 2];
              c[d2 + 112 + 8 >> 2] = c[t2 + 272 + 8 >> 2];
              c[d2 + 112 + 12 >> 2] = c[t2 + 272 + 12 >> 2];
              h2 = c[d2 + 176 >> 2] | 0;
              if (!(a[19872] | 0)) {
                a[19872] = 1;
                c[5298] = 1065353216;
                c[5299] = 0;
                c[5300] = 0;
                c[5301] = 0;
                c[5302] = 0;
                c[5303] = 1065353216;
                c[5304] = 0;
                c[5305] = 0;
                c[5306] = 0;
                c[5307] = 0;
                c[5308] = 1065353216;
                g[5309] = 0;
              }
              j2 = j2 + +g[d2 + 108 >> 2];
              k2 = j2 * +g[21192 + (h2 << 4) + 4 >> 2];
              m2 = j2 * +g[21192 + (h2 << 4) + 8 >> 2];
              j2 = +g[d2 + 112 >> 2] - +g[21192 + (h2 << 4) >> 2] * j2;
              g[d2 + 112 >> 2] = j2;
              k2 = +g[d2 + 116 >> 2] - k2;
              g[d2 + 116 >> 2] = k2;
              m2 = +g[d2 + 120 >> 2] - m2;
              g[d2 + 120 >> 2] = m2;
              h2 = 1;
            }
            m2 = +g[p2 >> 2];
            if (h2 | m2 < 1) {
              j2 = +g[d2 + 96 >> 2];
              k2 = (j2 - +g[t2 + 168 + 64 >> 2]) * 0.5;
              do
                if (!n2)
                  if (!(a[d2 + 181 >> 0] | 0)) {
                    g[d2 + 92 >> 2] = (1 - k2) * +g[d2 + 92 >> 2] + k2 * +g[d2 + 112 >> 2];
                    g[d2 + 96 >> 2] = (1 - k2) * j2 + k2 * +g[d2 + 116 >> 2];
                    g[d2 + 100 >> 2] = (1 - k2) * +g[d2 + 100 >> 2] + k2 * +g[d2 + 120 >> 2];
                    h2 = d2 + 181 | 0;
                    break;
                  } else {
                    g[d2 + 92 >> 2] = (1 - m2) * +g[d2 + 92 >> 2] + m2 * +g[d2 + 112 >> 2];
                    g[d2 + 96 >> 2] = (1 - m2) * j2 + m2 * +g[d2 + 116 >> 2];
                    g[d2 + 100 >> 2] = (1 - m2) * +g[d2 + 100 >> 2] + m2 * +g[d2 + 120 >> 2];
                    h2 = d2 + 181 | 0;
                    break;
                  }
                else {
                  g[d2 + 92 >> 2] = (1 - m2) * +g[d2 + 92 >> 2] + m2 * +g[d2 + 112 >> 2];
                  g[d2 + 96 >> 2] = (1 - m2) * j2 + m2 * +g[d2 + 116 >> 2];
                  g[d2 + 100 >> 2] = (1 - m2) * +g[d2 + 100 >> 2] + m2 * +g[d2 + 120 >> 2];
                  h2 = d2 + 181 | 0;
                }
              while (0);
              a[h2 >> 0] = 0;
              g[d2 + 16 >> 2] = 0;
              g[d2 + 20 >> 2] = 0;
              a[d2 + 169 >> 0] = 0;
            } else {
              a[d2 + 181 >> 0] = 1;
              if ((!n2 ? (s2 = +g[d2 + 24 >> 2], k2 > s2) : 0) ? (u2 = b[d2 + 168 >> 1] | 0, (u2 & 255) << 24 >> 24 != 0 | (u2 & 65535) < 256) : 0) {
                g[d2 + 112 >> 2] = q2 + +g[d2 + 112 >> 2];
                g[d2 + 116 >> 2] = r2 + +g[d2 + 116 >> 2];
                g[d2 + 120 >> 2] = o2 + +g[d2 + 120 >> 2];
                h2 = c[d2 + 176 >> 2] | 0;
                if (!(a[19872] | 0)) {
                  a[19872] = 1;
                  c[5298] = 1065353216;
                  c[5299] = 0;
                  c[5300] = 0;
                  c[5301] = 0;
                  c[5302] = 0;
                  c[5303] = 1065353216;
                  c[5304] = 0;
                  c[5305] = 0;
                  c[5306] = 0;
                  c[5307] = 0;
                  c[5308] = 1065353216;
                  g[5309] = 0;
                }
                r2 = s2 + +g[d2 + 108 >> 2];
                f2 = r2 * +g[21192 + (h2 << 4) + 4 >> 2];
                s2 = r2 * +g[21192 + (h2 << 4) + 8 >> 2];
                g[d2 + 112 >> 2] = +g[d2 + 112 >> 2] - +g[21192 + (h2 << 4) >> 2] * r2;
                g[d2 + 116 >> 2] = +g[d2 + 116 >> 2] - f2;
                g[d2 + 120 >> 2] = +g[d2 + 120 >> 2] - s2;
              }
              ;
              c[d2 + 92 >> 2] = c[d2 + 112 >> 2];
              c[d2 + 92 + 4 >> 2] = c[d2 + 112 + 4 >> 2];
              c[d2 + 92 + 8 >> 2] = c[d2 + 112 + 8 >> 2];
              c[d2 + 92 + 12 >> 2] = c[d2 + 112 + 12 >> 2];
            }
            ;
            c[t2 + 48 >> 2] = c[d2 + 92 >> 2];
            c[t2 + 48 + 4 >> 2] = c[d2 + 92 + 4 >> 2];
            c[t2 + 48 + 8 >> 2] = c[d2 + 92 + 8 >> 2];
            c[t2 + 48 + 12 >> 2] = c[d2 + 92 + 12 >> 2];
            u2 = c[d2 + 8 >> 2] | 0;
            c[u2 + 284 >> 2] = (c[u2 + 284 >> 2] | 0) + 1;
            c[u2 + 4 >> 2] = c[t2 >> 2];
            c[u2 + 4 + 4 >> 2] = c[t2 + 4 >> 2];
            c[u2 + 4 + 8 >> 2] = c[t2 + 8 >> 2];
            c[u2 + 4 + 12 >> 2] = c[t2 + 12 >> 2];
            c[u2 + 20 >> 2] = c[t2 + 16 >> 2];
            c[u2 + 20 + 4 >> 2] = c[t2 + 16 + 4 >> 2];
            c[u2 + 20 + 8 >> 2] = c[t2 + 16 + 8 >> 2];
            c[u2 + 20 + 12 >> 2] = c[t2 + 16 + 12 >> 2];
            c[u2 + 36 >> 2] = c[t2 + 32 >> 2];
            c[u2 + 36 + 4 >> 2] = c[t2 + 32 + 4 >> 2];
            c[u2 + 36 + 8 >> 2] = c[t2 + 32 + 8 >> 2];
            c[u2 + 36 + 12 >> 2] = c[t2 + 32 + 12 >> 2];
            c[u2 + 52 >> 2] = c[t2 + 48 >> 2];
            c[u2 + 52 + 4 >> 2] = c[t2 + 48 + 4 >> 2];
            c[u2 + 52 + 8 >> 2] = c[t2 + 48 + 8 >> 2];
            c[u2 + 52 + 12 >> 2] = c[t2 + 48 + 12 >> 2];
            i = t2;
            return;
          }
          function ro(a2) {
            a2 = a2 | 0;
            rG(a2);
            return;
          }
          function so(a2, d2) {
            a2 = a2 | 0;
            d2 = d2 | 0;
            d2 = c[d2 + 4 >> 2] | 0;
            if (!((b[a2 + 10 >> 1] & (d2 & 65535)) << 16 >> 16)) {
              a2 = 0;
              return a2 | 0;
            }
            a2 = (d2 >>> 16 & 65535 & b[a2 + 8 >> 1]) << 16 >> 16 != 0;
            return a2 | 0;
          }
          function to(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0;
            i2 = c[b2 >> 2] | 0;
            if ((i2 | 0) == (c[a2 + 80 >> 2] | 0)) {
              k2 = 1;
              return +k2;
            }
            if (c[i2 + 204 >> 2] & 4 | 0) {
              k2 = 1;
              return +k2;
            }
            h2 = +g[b2 + 8 >> 2];
            f2 = +g[b2 + 12 >> 2];
            e2 = +g[b2 + 16 >> 2];
            if (d2) {
              j2 = h2;
              k2 = f2;
            } else {
              j2 = +g[i2 + 4 >> 2] * h2 + +g[i2 + 8 >> 2] * f2 + +g[i2 + 12 >> 2] * e2;
              k2 = h2 * +g[i2 + 20 >> 2] + f2 * +g[i2 + 24 >> 2] + e2 * +g[i2 + 28 >> 2];
              e2 = h2 * +g[i2 + 36 >> 2] + f2 * +g[i2 + 40 >> 2] + e2 * +g[i2 + 44 >> 2];
            }
            if (j2 * +g[a2 + 84 >> 2] + k2 * +g[a2 + 88 >> 2] + e2 * +g[a2 + 92 >> 2] < +g[a2 + 100 >> 2]) {
              k2 = 1;
              return +k2;
            }
            c[a2 + 4 >> 2] = c[b2 + 40 >> 2];
            c[a2 + 76 >> 2] = i2;
            if (d2) {
              c[a2 + 44 >> 2] = c[b2 + 8 >> 2];
              c[a2 + 44 + 4 >> 2] = c[b2 + 8 + 4 >> 2];
              c[a2 + 44 + 8 >> 2] = c[b2 + 8 + 8 >> 2];
              c[a2 + 44 + 12 >> 2] = c[b2 + 8 + 12 >> 2];
            } else {
              e2 = +g[b2 + 8 >> 2];
              f2 = +g[b2 + 12 >> 2];
              h2 = +g[b2 + 16 >> 2];
              j2 = e2 * +g[i2 + 20 >> 2] + f2 * +g[i2 + 24 >> 2] + h2 * +g[i2 + 28 >> 2];
              k2 = e2 * +g[i2 + 36 >> 2] + f2 * +g[i2 + 40 >> 2] + h2 * +g[i2 + 44 >> 2];
              g[a2 + 44 >> 2] = +g[i2 + 4 >> 2] * e2 + +g[i2 + 8 >> 2] * f2 + +g[i2 + 12 >> 2] * h2;
              g[a2 + 48 >> 2] = j2;
              g[a2 + 52 >> 2] = k2;
              g[a2 + 56 >> 2] = 0;
            }
            c[a2 + 60 >> 2] = c[b2 + 24 >> 2];
            c[a2 + 60 + 4 >> 2] = c[b2 + 24 + 4 >> 2];
            c[a2 + 60 + 8 >> 2] = c[b2 + 24 + 8 >> 2];
            c[a2 + 60 + 12 >> 2] = c[b2 + 24 + 12 >> 2];
            k2 = +g[b2 + 40 >> 2];
            return +k2;
          }
          function uo(d2, e2, f2, h2, j2) {
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = +f2;
            h2 = +h2;
            j2 = +j2;
            var k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0;
            q2 = i;
            i = i + 240 | 0;
            o2 = +g[d2 + 96 >> 2] + h2;
            p2 = +g[d2 + 100 >> 2] + j2;
            g[d2 + 112 >> 2] = +g[d2 + 92 >> 2] + f2;
            g[d2 + 116 >> 2] = o2;
            g[d2 + 120 >> 2] = p2;
            g[d2 + 124 >> 2] = 0;
            c[q2 + 168 >> 2] = 1065353216;
            c[q2 + 168 + 4 >> 2] = 0;
            c[q2 + 168 + 4 + 4 >> 2] = 0;
            c[q2 + 168 + 4 + 8 >> 2] = 0;
            c[q2 + 168 + 4 + 12 >> 2] = 0;
            c[q2 + 168 + 20 >> 2] = 1065353216;
            c[q2 + 168 + 24 >> 2] = 0;
            c[q2 + 168 + 24 + 4 >> 2] = 0;
            c[q2 + 168 + 24 + 8 >> 2] = 0;
            c[q2 + 168 + 24 + 12 >> 2] = 0;
            c[q2 + 168 + 40 >> 2] = 1065353216;
            k2 = q2 + 168 + 44 | 0;
            c[k2 >> 2] = 0;
            c[k2 + 4 >> 2] = 0;
            c[k2 + 8 >> 2] = 0;
            c[k2 + 12 >> 2] = 0;
            c[k2 + 16 >> 2] = 0;
            c[q2 + 104 >> 2] = 1065353216;
            c[q2 + 104 + 4 >> 2] = 0;
            c[q2 + 104 + 4 + 4 >> 2] = 0;
            c[q2 + 104 + 4 + 8 >> 2] = 0;
            c[q2 + 104 + 4 + 12 >> 2] = 0;
            c[q2 + 104 + 20 >> 2] = 1065353216;
            c[q2 + 104 + 24 >> 2] = 0;
            c[q2 + 104 + 24 + 4 >> 2] = 0;
            c[q2 + 104 + 24 + 8 >> 2] = 0;
            c[q2 + 104 + 24 + 12 >> 2] = 0;
            c[q2 + 104 + 40 >> 2] = 1065353216;
            k2 = q2 + 104 + 44 | 0;
            c[k2 >> 2] = 0;
            c[k2 + 4 >> 2] = 0;
            c[k2 + 8 >> 2] = 0;
            c[k2 + 12 >> 2] = 0;
            c[k2 + 16 >> 2] = 0;
            p2 = 1;
            k2 = 10;
            while (1) {
              if ((k2 | 0) <= 0) {
                k2 = 14;
                break;
              }
              ;
              k2 = k2 + -1 | 0;
              c[q2 + 168 + 48 >> 2] = c[d2 + 92 >> 2];
              c[q2 + 168 + 48 + 4 >> 2] = c[d2 + 92 + 4 >> 2];
              c[q2 + 168 + 48 + 8 >> 2] = c[d2 + 92 + 8 >> 2];
              c[q2 + 168 + 48 + 12 >> 2] = c[d2 + 92 + 12 >> 2];
              c[q2 + 104 + 48 >> 2] = c[d2 + 112 >> 2];
              c[q2 + 104 + 48 + 4 >> 2] = c[d2 + 112 + 4 >> 2];
              c[q2 + 104 + 48 + 8 >> 2] = c[d2 + 112 + 8 >> 2];
              c[q2 + 104 + 48 + 12 >> 2] = c[d2 + 112 + 12 >> 2];
              n2 = +g[d2 + 92 >> 2] - +g[d2 + 112 >> 2];
              o2 = +g[d2 + 96 >> 2] - +g[d2 + 116 >> 2];
              f2 = +g[d2 + 100 >> 2] - +g[d2 + 120 >> 2];
              r2 = c[d2 + 8 >> 2] | 0;
              g[q2 + 4 >> 2] = 1;
              b[q2 + 8 >> 1] = 1;
              b[q2 + 10 >> 1] = -1;
              c[q2 + 76 >> 2] = 0;
              c[q2 + 12 >> 2] = 0;
              c[q2 + 12 + 4 >> 2] = 0;
              c[q2 + 12 + 8 >> 2] = 0;
              c[q2 + 12 + 12 >> 2] = 0;
              c[q2 + 12 + 16 >> 2] = 0;
              c[q2 + 12 + 20 >> 2] = 0;
              c[q2 + 12 + 24 >> 2] = 0;
              c[q2 + 12 + 28 >> 2] = 0;
              c[q2 >> 2] = 7108;
              c[q2 + 80 >> 2] = r2;
              g[q2 + 84 >> 2] = n2;
              g[q2 + 88 >> 2] = o2;
              g[q2 + 92 >> 2] = f2;
              g[q2 + 96 >> 2] = 0;
              g[q2 + 100 >> 2] = 0;
              r2 = c[(c[r2 + 188 >> 2] | 0) + 4 >> 2] | 0;
              b[q2 + 8 >> 1] = r2;
              b[q2 + 10 >> 1] = r2 >>> 16;
              r2 = c[d2 + 12 >> 2] | 0;
              f2 = +Hb[c[(c[r2 >> 2] | 0) + 48 >> 2] & 15](r2);
              r2 = c[d2 + 12 >> 2] | 0;
              qb[c[(c[r2 >> 2] | 0) + 44 >> 2] & 31](r2, f2 + +g[d2 + 56 >> 2]);
              if (!(a[d2 + 170 >> 0] | 0))
                Yf(e2, c[d2 + 12 >> 2] | 0, q2 + 168 | 0, q2 + 104 | 0, q2, +g[e2 + 56 >> 2]);
              else
                pi(c[d2 + 8 >> 2] | 0, c[d2 + 12 >> 2] | 0, q2 + 168 | 0, q2 + 104 | 0, q2, +g[e2 + 56 >> 2]);
              r2 = c[d2 + 12 >> 2] | 0;
              qb[c[(c[r2 >> 2] | 0) + 44 >> 2] & 31](r2, f2);
              o2 = +g[q2 + 4 >> 2];
              p2 = p2 - o2;
              if (o2 < 1) {
                h2 = +g[d2 + 112 >> 2];
                m2 = +g[d2 + 92 >> 2];
                j2 = +g[d2 + 116 >> 2];
                n2 = +g[d2 + 96 >> 2];
                l2 = +g[d2 + 120 >> 2];
                o2 = +g[d2 + 100 >> 2];
                f2 = +O(+((h2 - m2) * (h2 - m2) + (j2 - n2) * (j2 - n2) + (l2 - o2) * (l2 - o2)));
                if (f2 > 11920928955078125e-23) {
                  v2 = +g[q2 + 44 >> 2];
                  t2 = +g[q2 + 48 >> 2];
                  x2 = +g[q2 + 52 >> 2];
                  w2 = ((h2 - m2) * (1 / f2) * v2 + (j2 - n2) * (1 / f2) * t2 + (l2 - o2) * (1 / f2) * x2) * 2;
                  u2 = (h2 - m2) * (1 / f2) - v2 * w2;
                  s2 = (j2 - n2) * (1 / f2) - t2 * w2;
                  w2 = (l2 - o2) * (1 / f2) - x2 * w2;
                  l2 = 1 / +O(+(w2 * w2 + (u2 * u2 + s2 * s2)));
                  c[d2 + 112 >> 2] = c[d2 + 92 >> 2];
                  c[d2 + 112 + 4 >> 2] = c[d2 + 92 + 4 >> 2];
                  c[d2 + 112 + 8 >> 2] = c[d2 + 92 + 8 >> 2];
                  c[d2 + 112 + 12 >> 2] = c[d2 + 92 + 12 >> 2];
                  h2 = f2 * (l2 * u2 - v2 * (x2 * (l2 * w2) + (v2 * (l2 * u2) + t2 * (l2 * s2)))) + +g[d2 + 112 >> 2];
                  g[d2 + 112 >> 2] = h2;
                  j2 = f2 * (l2 * s2 - t2 * (x2 * (l2 * w2) + (v2 * (l2 * u2) + t2 * (l2 * s2)))) + +g[d2 + 116 >> 2];
                  g[d2 + 116 >> 2] = j2;
                  l2 = f2 * (l2 * w2 - x2 * (x2 * (l2 * w2) + (v2 * (l2 * u2) + t2 * (l2 * s2)))) + +g[d2 + 120 >> 2];
                  g[d2 + 120 >> 2] = l2;
                  f2 = j2;
                } else
                  f2 = j2;
                j2 = h2 - m2;
                h2 = f2 - n2;
                f2 = l2 - o2;
                if (!(j2 * j2 + h2 * h2 + f2 * f2 > 11920928955078125e-23)) {
                  k2 = 11;
                  break;
                }
                x2 = 1 / +O(+(j2 * j2 + h2 * h2 + f2 * f2));
                if (+g[d2 + 76 >> 2] * (j2 * x2) + h2 * x2 * +g[d2 + 80 >> 2] + f2 * x2 * +g[d2 + 84 >> 2] <= 0) {
                  k2 = 11;
                  break;
                }
              } else {
                c[d2 + 92 >> 2] = c[d2 + 112 >> 2];
                c[d2 + 92 + 4 >> 2] = c[d2 + 112 + 4 >> 2];
                c[d2 + 92 + 8 >> 2] = c[d2 + 112 + 8 >> 2];
                c[d2 + 92 + 12 >> 2] = c[d2 + 112 + 12 >> 2];
              }
              if (!(p2 > 0.009999999776482582)) {
                k2 = 14;
                break;
              }
            }
            if ((k2 | 0) == 11) {
              i = q2;
              return;
            } else if ((k2 | 0) == 14) {
              i = q2;
              return;
            }
          }
          function vo(a2) {
            a2 = a2 | 0;
            return vb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 127](a2) | 0;
          }
          function wo(b2) {
            b2 = b2 | 0;
            if (!(vb[c[(c[b2 >> 2] | 0) + 40 >> 2] & 127](b2) | 0))
              return;
            c[b2 + 16 >> 2] = c[b2 + 28 >> 2];
            a[b2 + 169 >> 0] = 1;
            return;
          }
          function xo(a2) {
            a2 = a2 | 0;
            if (!(+g[a2 + 16 >> 2] == 0)) {
              a2 = 0;
              return a2 | 0;
            }
            a2 = +g[a2 + 20 >> 2] == 0;
            return a2 | 0;
          }
          function yo(b2, c2) {
            b2 = b2 | 0;
            c2 = c2 | 0;
            a[b2 + 180 >> 0] = c2 & 1;
            return;
          }
          function zo(a2) {
            a2 = a2 | 0;
            c[a2 >> 2] = 7188;
            return;
          }
          function Ao(a2) {
            a2 = a2 | 0;
            c[a2 >> 2] = 7188;
            if (!a2)
              return;
            c[5638] = (c[5638] | 0) + 1;
            rG(c[a2 + -4 >> 2] | 0);
            return;
          }
          function Bo(a2) {
            a2 = a2 | 0;
            return;
          }
          function Co(a2, b2, c2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = d2 | 0;
            e2 = +e2;
            return;
          }
          function Do(a2, b2, c2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = +d2;
            return;
          }
          function Eo(a2) {
            a2 = a2 | 0;
            return 52;
          }
          function Fo(a2) {
            a2 = a2 | 0;
            c[a2 >> 2] = 7188;
            if (!a2)
              return;
            c[5638] = (c[5638] | 0) + 1;
            rG(c[a2 + -4 >> 2] | 0);
            return;
          }
          function Go(b2) {
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0;
            v2 = i;
            i = i + 176 | 0;
            if (!(a[b2 + 527 >> 0] | 0)) {
              i = v2;
              return;
            }
            g[b2 + 36 >> 2] = 0;
            g[b2 + 520 >> 2] = 0;
            g[b2 + 516 >> 2] = 0;
            c[b2 + 576 >> 2] = 0;
            c[b2 + 576 + 4 >> 2] = 0;
            c[b2 + 576 + 8 >> 2] = 0;
            c[b2 + 576 + 12 >> 2] = 0;
            if (!(a[b2 + 524 >> 0] | 0)) {
              d2 = c[b2 + 28 >> 2] | 0;
              k2 = +g[b2 + 348 >> 2];
              l2 = +g[b2 + 352 >> 2];
              r2 = +g[b2 + 356 >> 2];
              t2 = k2 * +g[d2 + 20 >> 2] + l2 * +g[d2 + 24 >> 2] + r2 * +g[d2 + 28 >> 2] + +g[d2 + 56 >> 2];
              j2 = c[b2 + 32 >> 2] | 0;
              m2 = +g[b2 + 412 >> 2];
              n2 = +g[b2 + 416 >> 2];
              s2 = +g[b2 + 420 >> 2];
              o2 = +g[j2 + 52 >> 2];
              e2 = +g[j2 + 56 >> 2];
              u2 = m2 * +g[j2 + 20 >> 2] + n2 * +g[j2 + 24 >> 2] + s2 * +g[j2 + 28 >> 2] + e2;
              p2 = m2 * +g[j2 + 36 >> 2] + n2 * +g[j2 + 40 >> 2] + s2 * +g[j2 + 44 >> 2] + +g[j2 + 60 >> 2];
              q2 = k2 * +g[d2 + 4 >> 2] + l2 * +g[d2 + 8 >> 2] + r2 * +g[d2 + 12 >> 2] + +g[d2 + 52 >> 2];
              r2 = k2 * +g[d2 + 36 >> 2] + l2 * +g[d2 + 40 >> 2] + r2 * +g[d2 + 44 >> 2] + +g[d2 + 60 >> 2];
              s2 = m2 * +g[j2 + 4 >> 2] + n2 * +g[j2 + 8 >> 2] + s2 * +g[j2 + 12 >> 2] + o2;
              if ((s2 - q2) * (s2 - q2) + (u2 - t2) * (u2 - t2) + (p2 - r2) * (p2 - r2) > 11920928955078125e-23) {
                h2 = 1 / +O(+((s2 - q2) * (s2 - q2) + (u2 - t2) * (u2 - t2) + (p2 - r2) * (p2 - r2)));
                g[v2 + 128 >> 2] = (s2 - q2) * h2;
                g[v2 + 128 + 4 >> 2] = (u2 - t2) * h2;
                g[v2 + 128 + 8 >> 2] = (p2 - r2) * h2;
                c[v2 + 128 + 12 >> 2] = 0;
                k2 = (p2 - r2) * h2;
                f2 = (u2 - t2) * h2;
                h2 = (s2 - q2) * h2;
              } else {
                c[v2 + 128 >> 2] = 1065353216;
                c[v2 + 128 + 4 >> 2] = 0;
                c[v2 + 128 + 8 >> 2] = 0;
                g[v2 + 128 + 12 >> 2] = 0;
                k2 = 0;
                f2 = 0;
                h2 = 1;
              }
              if (+N(+k2) > 0.7071067690849304) {
                x2 = k2 * k2 + f2 * f2;
                w2 = 1 / +O(+x2);
                m2 = -(w2 * k2);
                k2 = w2 * f2;
                n2 = -(k2 * h2);
                l2 = h2 * m2;
                f2 = x2 * w2;
                h2 = k2;
                k2 = 0;
              } else {
                m2 = h2 * h2 + f2 * f2;
                l2 = 1 / +O(+m2);
                x2 = -(f2 * l2);
                f2 = l2 * h2;
                n2 = k2 * x2;
                l2 = m2 * l2;
                m2 = f2;
                f2 = -(f2 * k2);
                h2 = 0;
                k2 = x2;
              }
              g[v2 + 128 + 16 >> 2] = k2;
              g[v2 + 128 + 20 >> 2] = m2;
              g[v2 + 128 + 24 >> 2] = h2;
              g[v2 + 128 + 32 >> 2] = f2;
              g[v2 + 128 + 36 >> 2] = n2;
              g[v2 + 128 + 40 >> 2] = l2;
              f2 = o2;
              d2 = 0;
              while (1) {
                y2 = c[b2 + 28 >> 2] | 0;
                c[v2 + 80 >> 2] = c[y2 + 4 >> 2];
                c[v2 + 80 + 4 >> 2] = c[y2 + 20 >> 2];
                c[v2 + 80 + 8 >> 2] = c[y2 + 36 >> 2];
                g[v2 + 80 + 12 >> 2] = 0;
                c[v2 + 80 + 16 >> 2] = c[y2 + 8 >> 2];
                c[v2 + 80 + 20 >> 2] = c[y2 + 24 >> 2];
                c[v2 + 80 + 24 >> 2] = c[y2 + 40 >> 2];
                g[v2 + 80 + 28 >> 2] = 0;
                c[v2 + 80 + 32 >> 2] = c[y2 + 12 >> 2];
                c[v2 + 80 + 36 >> 2] = c[y2 + 28 >> 2];
                c[v2 + 80 + 40 >> 2] = c[y2 + 44 >> 2];
                g[v2 + 80 + 44 >> 2] = 0;
                c[v2 + 32 >> 2] = c[j2 + 4 >> 2];
                c[v2 + 32 + 4 >> 2] = c[j2 + 20 >> 2];
                c[v2 + 32 + 8 >> 2] = c[j2 + 36 >> 2];
                g[v2 + 32 + 12 >> 2] = 0;
                c[v2 + 32 + 16 >> 2] = c[j2 + 8 >> 2];
                c[v2 + 32 + 20 >> 2] = c[j2 + 24 >> 2];
                c[v2 + 32 + 24 >> 2] = c[j2 + 40 >> 2];
                g[v2 + 32 + 28 >> 2] = 0;
                c[v2 + 32 + 32 >> 2] = c[j2 + 12 >> 2];
                c[v2 + 32 + 36 >> 2] = c[j2 + 28 >> 2];
                c[v2 + 32 + 40 >> 2] = c[j2 + 44 >> 2];
                g[v2 + 32 + 44 >> 2] = 0;
                w2 = t2 - +g[y2 + 56 >> 2];
                x2 = r2 - +g[y2 + 60 >> 2];
                g[v2 + 16 >> 2] = q2 - +g[y2 + 52 >> 2];
                g[v2 + 16 + 4 >> 2] = w2;
                g[v2 + 16 + 8 >> 2] = x2;
                g[v2 + 16 + 12 >> 2] = 0;
                x2 = p2 - +g[j2 + 60 >> 2];
                g[v2 >> 2] = s2 - f2;
                g[v2 + 4 >> 2] = u2 - e2;
                g[v2 + 8 >> 2] = x2;
                g[v2 + 12 >> 2] = 0;
                y2 = c[b2 + 28 >> 2] | 0;
                j2 = c[b2 + 32 >> 2] | 0;
                Ho(b2 + 48 + (d2 * 84 | 0) | 0, v2 + 80 | 0, v2 + 32 | 0, v2 + 16 | 0, v2, v2 + 128 + (d2 << 4) | 0, y2 + 420 | 0, +g[y2 + 368 >> 2], j2 + 420 | 0, +g[j2 + 368 >> 2]);
                d2 = d2 + 1 | 0;
                if ((d2 | 0) == 3)
                  break;
                y2 = c[b2 + 32 >> 2] | 0;
                j2 = y2;
                f2 = +g[y2 + 52 >> 2];
                e2 = +g[y2 + 56 >> 2];
              }
              d2 = b2 + 32 | 0;
            } else
              d2 = b2 + 32 | 0;
            j2 = c[b2 + 28 >> 2] | 0;
            y2 = c[d2 >> 2] | 0;
            Io(b2, j2 + 4 | 0, y2 + 4 | 0, j2 + 288 | 0, y2 + 288 | 0);
            i = v2;
            return;
          }
          function Ho(a2, b2, d2, e2, f2, h2, i2, j2, k2, l2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            h2 = h2 | 0;
            i2 = i2 | 0;
            j2 = +j2;
            k2 = k2 | 0;
            l2 = +l2;
            var m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0;
            c[a2 >> 2] = c[h2 >> 2];
            c[a2 + 4 >> 2] = c[h2 + 4 >> 2];
            c[a2 + 8 >> 2] = c[h2 + 8 >> 2];
            c[a2 + 12 >> 2] = c[h2 + 12 >> 2];
            s2 = +g[e2 + 4 >> 2];
            v2 = +g[a2 + 8 >> 2];
            w2 = +g[e2 + 8 >> 2];
            p2 = +g[a2 + 4 >> 2];
            m2 = +g[a2 >> 2];
            r2 = +g[e2 >> 2];
            u2 = (s2 * v2 - w2 * p2) * +g[b2 >> 2] + +g[b2 + 4 >> 2] * (w2 * m2 - v2 * r2) + (p2 * r2 - s2 * m2) * +g[b2 + 8 >> 2];
            t2 = (s2 * v2 - w2 * p2) * +g[b2 + 16 >> 2] + (w2 * m2 - v2 * r2) * +g[b2 + 20 >> 2] + (p2 * r2 - s2 * m2) * +g[b2 + 24 >> 2];
            s2 = (s2 * v2 - w2 * p2) * +g[b2 + 32 >> 2] + (w2 * m2 - v2 * r2) * +g[b2 + 36 >> 2] + (p2 * r2 - s2 * m2) * +g[b2 + 40 >> 2];
            g[a2 + 16 >> 2] = u2;
            g[a2 + 20 >> 2] = t2;
            g[a2 + 24 >> 2] = s2;
            g[a2 + 28 >> 2] = 0;
            r2 = +g[f2 + 4 >> 2];
            w2 = +g[f2 + 8 >> 2];
            n2 = +g[f2 >> 2];
            q2 = +g[d2 >> 2] * (r2 * -v2 - w2 * -p2) + +g[d2 + 4 >> 2] * (w2 * -m2 - n2 * -v2) + (n2 * -p2 - r2 * -m2) * +g[d2 + 8 >> 2];
            o2 = (r2 * -v2 - w2 * -p2) * +g[d2 + 16 >> 2] + (w2 * -m2 - n2 * -v2) * +g[d2 + 20 >> 2] + (n2 * -p2 - r2 * -m2) * +g[d2 + 24 >> 2];
            m2 = (r2 * -v2 - w2 * -p2) * +g[d2 + 32 >> 2] + (w2 * -m2 - n2 * -v2) * +g[d2 + 36 >> 2] + (n2 * -p2 - r2 * -m2) * +g[d2 + 40 >> 2];
            g[a2 + 32 >> 2] = q2;
            g[a2 + 36 >> 2] = o2;
            g[a2 + 40 >> 2] = m2;
            g[a2 + 44 >> 2] = 0;
            u2 = +g[i2 >> 2] * u2;
            t2 = +g[i2 + 4 >> 2] * t2;
            s2 = +g[i2 + 8 >> 2] * s2;
            g[a2 + 48 >> 2] = u2;
            g[a2 + 52 >> 2] = t2;
            g[a2 + 56 >> 2] = s2;
            g[a2 + 60 >> 2] = 0;
            r2 = +g[k2 >> 2] * q2;
            p2 = +g[k2 + 4 >> 2] * o2;
            n2 = +g[k2 + 8 >> 2] * m2;
            g[a2 + 64 >> 2] = r2;
            g[a2 + 68 >> 2] = p2;
            g[a2 + 72 >> 2] = n2;
            g[a2 + 76 >> 2] = 0;
            g[a2 + 80 >> 2] = u2 * +g[a2 + 16 >> 2] + t2 * +g[a2 + 20 >> 2] + s2 * +g[a2 + 24 >> 2] + j2 + l2 + (r2 * q2 + p2 * o2 + n2 * m2);
            return;
          }
          function Io(b2, d2, e2, f2, h2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            h2 = h2 | 0;
            var j2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0, P2 = 0, S2 = 0, U2 = 0, V2 = 0, X2 = 0, Y2 = 0, Z2 = 0, _2 = 0, $2 = 0, aa2 = 0, ba2 = 0, ca2 = 0, da2 = 0, ea2 = 0, fa2 = 0, ga2 = 0, ha2 = 0, ia2 = 0, ja2 = 0, ka2 = 0, la2 = 0, ma2 = 0, na2 = 0, oa2 = 0, pa2 = 0, qa2 = 0, ra2 = 0, sa2 = 0, ta2 = 0, ua2 = 0, va2 = 0, wa2 = 0;
            ra2 = i;
            i = i + 144 | 0;
            g[b2 + 504 >> 2] = 0;
            g[b2 + 500 >> 2] = 0;
            a[b2 + 525 >> 0] = 0;
            a[b2 + 526 >> 0] = 0;
            if (a[b2 + 552 >> 0] | 0 ? (a[b2 + 527 >> 0] | 0) == 0 : 0) {
              wa2 = +g[b2 + 556 >> 2];
              ua2 = +g[b2 + 560 >> 2];
              qa2 = +g[b2 + 564 >> 2];
              ta2 = +g[b2 + 568 >> 2];
              fa2 = wa2 * (2 / (wa2 * wa2 + ua2 * ua2 + qa2 * qa2 + ta2 * ta2));
              va2 = ua2 * (2 / (wa2 * wa2 + ua2 * ua2 + qa2 * qa2 + ta2 * ta2));
              sa2 = qa2 * (2 / (wa2 * wa2 + ua2 * ua2 + qa2 * qa2 + ta2 * ta2));
              ga2 = +g[b2 + 300 >> 2];
              Y2 = +g[d2 >> 2];
              ha2 = +g[b2 + 316 >> 2];
              Z2 = +g[d2 + 4 >> 2];
              ia2 = +g[b2 + 332 >> 2];
              _2 = +g[d2 + 8 >> 2];
              ka2 = +g[b2 + 304 >> 2];
              ma2 = +g[b2 + 320 >> 2];
              oa2 = +g[b2 + 336 >> 2];
              ca2 = +g[b2 + 308 >> 2];
              da2 = +g[b2 + 324 >> 2];
              ea2 = +g[b2 + 340 >> 2];
              $2 = +g[d2 + 16 >> 2];
              aa2 = +g[d2 + 20 >> 2];
              ba2 = +g[d2 + 24 >> 2];
              la2 = +g[d2 + 32 >> 2];
              na2 = +g[d2 + 36 >> 2];
              pa2 = +g[d2 + 40 >> 2];
              w2 = +g[b2 + 348 >> 2];
              v2 = +g[b2 + 352 >> 2];
              u2 = +g[b2 + 356 >> 2];
              A2 = +g[b2 + 364 >> 2];
              n2 = +g[e2 >> 2];
              B2 = +g[b2 + 380 >> 2];
              o2 = +g[e2 + 4 >> 2];
              C2 = +g[b2 + 396 >> 2];
              m2 = +g[e2 + 8 >> 2];
              D2 = +g[b2 + 368 >> 2];
              E2 = +g[b2 + 384 >> 2];
              F2 = +g[b2 + 400 >> 2];
              x2 = +g[b2 + 372 >> 2];
              y2 = +g[b2 + 388 >> 2];
              z2 = +g[b2 + 404 >> 2];
              q2 = +g[e2 + 16 >> 2];
              r2 = +g[e2 + 20 >> 2];
              l2 = +g[e2 + 24 >> 2];
              G2 = +g[e2 + 32 >> 2];
              I2 = +g[e2 + 36 >> 2];
              K2 = +g[e2 + 40 >> 2];
              H2 = +g[b2 + 412 >> 2];
              J2 = +g[b2 + 416 >> 2];
              j2 = +g[b2 + 420 >> 2];
              M2 = (1 - (ua2 * va2 + qa2 * sa2)) * (A2 * n2 + B2 * o2 + C2 * m2) + (wa2 * va2 + ta2 * sa2) * (n2 * D2 + o2 * E2 + m2 * F2) + (wa2 * sa2 - ta2 * va2) * (n2 * x2 + o2 * y2 + m2 * z2);
              P2 = (wa2 * va2 - ta2 * sa2) * (A2 * n2 + B2 * o2 + C2 * m2) + (1 - (wa2 * fa2 + qa2 * sa2)) * (n2 * D2 + o2 * E2 + m2 * F2) + (ua2 * sa2 + ta2 * fa2) * (n2 * x2 + o2 * y2 + m2 * z2);
              L2 = (wa2 * sa2 + ta2 * va2) * (A2 * n2 + B2 * o2 + C2 * m2) + (ua2 * sa2 - ta2 * fa2) * (n2 * D2 + o2 * E2 + m2 * F2) + (1 - (wa2 * fa2 + ua2 * va2)) * (n2 * x2 + o2 * y2 + m2 * z2);
              V2 = (wa2 * sa2 - ta2 * va2) * (x2 * q2 + y2 * r2 + z2 * l2) + ((1 - (ua2 * va2 + qa2 * sa2)) * (A2 * q2 + B2 * r2 + C2 * l2) + (wa2 * va2 + ta2 * sa2) * (D2 * q2 + E2 * r2 + F2 * l2));
              X2 = (ua2 * sa2 + ta2 * fa2) * (x2 * q2 + y2 * r2 + z2 * l2) + ((wa2 * va2 - ta2 * sa2) * (A2 * q2 + B2 * r2 + C2 * l2) + (1 - (wa2 * fa2 + qa2 * sa2)) * (D2 * q2 + E2 * r2 + F2 * l2));
              U2 = (1 - (wa2 * fa2 + ua2 * va2)) * (x2 * q2 + y2 * r2 + z2 * l2) + ((wa2 * sa2 + ta2 * va2) * (A2 * q2 + B2 * r2 + C2 * l2) + (ua2 * sa2 - ta2 * fa2) * (D2 * q2 + E2 * r2 + F2 * l2));
              ja2 = (wa2 * sa2 - ta2 * va2) * (x2 * G2 + y2 * I2 + z2 * K2) + ((1 - (ua2 * va2 + qa2 * sa2)) * (A2 * G2 + B2 * I2 + C2 * K2) + (wa2 * va2 + ta2 * sa2) * (D2 * G2 + E2 * I2 + F2 * K2));
              qa2 = (ua2 * sa2 + ta2 * fa2) * (x2 * G2 + y2 * I2 + z2 * K2) + ((wa2 * va2 - ta2 * sa2) * (A2 * G2 + B2 * I2 + C2 * K2) + (1 - (wa2 * fa2 + qa2 * sa2)) * (D2 * G2 + E2 * I2 + F2 * K2));
              fa2 = (1 - (wa2 * fa2 + ua2 * va2)) * (x2 * G2 + y2 * I2 + z2 * K2) + ((wa2 * sa2 + ta2 * va2) * (A2 * G2 + B2 * I2 + C2 * K2) + (ua2 * sa2 - ta2 * fa2) * (D2 * G2 + E2 * I2 + F2 * K2));
              ta2 = -(+g[d2 + 48 >> 2] + (Y2 * w2 + Z2 * v2 + _2 * u2));
              sa2 = -($2 * w2 + aa2 * v2 + ba2 * u2 + +g[d2 + 52 >> 2]);
              u2 = -(la2 * w2 + na2 * v2 + pa2 * u2 + +g[d2 + 56 >> 2]);
              v2 = (ga2 * Y2 + ha2 * Z2 + ia2 * _2) * ta2 + (ga2 * $2 + ha2 * aa2 + ia2 * ba2) * sa2 + (ga2 * la2 + ha2 * na2 + ia2 * pa2) * u2;
              w2 = (Y2 * ka2 + Z2 * ma2 + _2 * oa2) * ta2 + (ka2 * $2 + ma2 * aa2 + oa2 * ba2) * sa2 + (ka2 * la2 + ma2 * na2 + oa2 * pa2) * u2;
              u2 = (Y2 * ca2 + Z2 * da2 + _2 * ea2) * ta2 + (ca2 * $2 + da2 * aa2 + ea2 * ba2) * sa2 + (ca2 * la2 + da2 * na2 + ea2 * pa2) * u2;
              m2 = u2 * L2 + (v2 * M2 + w2 * P2) + ((A2 * n2 + B2 * o2 + C2 * m2) * 0 + (n2 * D2 + o2 * E2 + m2 * F2) * 0 + (n2 * x2 + o2 * y2 + m2 * z2) * 0 + (+g[e2 + 48 >> 2] + (n2 * H2 + o2 * J2 + m2 * j2)));
              l2 = u2 * U2 + (v2 * V2 + w2 * X2) + ((x2 * q2 + y2 * r2 + z2 * l2) * 0 + ((A2 * q2 + B2 * r2 + C2 * l2) * 0 + (D2 * q2 + E2 * r2 + F2 * l2) * 0) + (q2 * H2 + r2 * J2 + l2 * j2 + +g[e2 + 52 >> 2]));
              j2 = u2 * fa2 + (v2 * ja2 + w2 * qa2) + ((x2 * G2 + y2 * I2 + z2 * K2) * 0 + ((A2 * G2 + B2 * I2 + C2 * K2) * 0 + (D2 * G2 + E2 * I2 + F2 * K2) * 0) + (G2 * H2 + I2 * J2 + K2 * j2 + +g[e2 + 56 >> 2]));
              g[ra2 + 80 >> 2] = (Y2 * ca2 + Z2 * da2 + _2 * ea2) * L2 + ((ga2 * Y2 + ha2 * Z2 + ia2 * _2) * M2 + (Y2 * ka2 + Z2 * ma2 + _2 * oa2) * P2);
              g[ra2 + 80 + 4 >> 2] = (ca2 * $2 + da2 * aa2 + ea2 * ba2) * L2 + ((ga2 * $2 + ha2 * aa2 + ia2 * ba2) * M2 + (ka2 * $2 + ma2 * aa2 + oa2 * ba2) * P2);
              g[ra2 + 80 + 8 >> 2] = (ca2 * la2 + da2 * na2 + ea2 * pa2) * L2 + ((ga2 * la2 + ha2 * na2 + ia2 * pa2) * M2 + (ka2 * la2 + ma2 * na2 + oa2 * pa2) * P2);
              g[ra2 + 80 + 12 >> 2] = 0;
              g[ra2 + 80 + 16 >> 2] = (Y2 * ca2 + Z2 * da2 + _2 * ea2) * U2 + ((ga2 * Y2 + ha2 * Z2 + ia2 * _2) * V2 + (Y2 * ka2 + Z2 * ma2 + _2 * oa2) * X2);
              g[ra2 + 80 + 20 >> 2] = (ca2 * $2 + da2 * aa2 + ea2 * ba2) * U2 + ((ga2 * $2 + ha2 * aa2 + ia2 * ba2) * V2 + (ka2 * $2 + ma2 * aa2 + oa2 * ba2) * X2);
              g[ra2 + 80 + 24 >> 2] = (ca2 * la2 + da2 * na2 + ea2 * pa2) * U2 + ((ga2 * la2 + ha2 * na2 + ia2 * pa2) * V2 + (ka2 * la2 + ma2 * na2 + oa2 * pa2) * X2);
              g[ra2 + 80 + 28 >> 2] = 0;
              g[ra2 + 80 + 32 >> 2] = (Y2 * ca2 + Z2 * da2 + _2 * ea2) * fa2 + ((ga2 * Y2 + ha2 * Z2 + ia2 * _2) * ja2 + (Y2 * ka2 + Z2 * ma2 + _2 * oa2) * qa2);
              g[ra2 + 80 + 36 >> 2] = (ca2 * $2 + da2 * aa2 + ea2 * ba2) * fa2 + ((ga2 * $2 + ha2 * aa2 + ia2 * ba2) * ja2 + (ka2 * $2 + ma2 * aa2 + oa2 * ba2) * qa2);
              g[ra2 + 80 + 40 >> 2] = (ca2 * la2 + da2 * na2 + ea2 * pa2) * fa2 + ((ga2 * la2 + ha2 * na2 + ia2 * pa2) * ja2 + (ka2 * la2 + ma2 * na2 + oa2 * pa2) * qa2);
              g[ra2 + 80 + 44 >> 2] = 0;
              g[ra2 + 80 + 48 >> 2] = m2;
              g[ra2 + 80 + 52 >> 2] = l2;
              g[ra2 + 80 + 56 >> 2] = j2;
              g[ra2 + 80 + 60 >> 2] = 0;
              _f(ra2 + 80 | 0, ra2 + 64 | 0);
              j2 = +g[ra2 + 64 >> 2];
              l2 = +g[ra2 + 64 + 4 >> 2];
              m2 = +g[ra2 + 64 + 8 >> 2];
              if (!(+N(+(j2 * j2 + l2 * l2 + m2 * m2)) < 11920928955078125e-23) ? (g[b2 + 472 >> 2] = 0, wa2 = 1 / +O(+(j2 * j2 + l2 * l2 + m2 * m2)), g[b2 + 460 >> 2] = j2 * wa2, g[b2 + 464 >> 2] = l2 * wa2, g[b2 + 468 >> 2] = m2 * wa2, wa2 = +g[ra2 + 64 + 12 >> 2], wa2 = wa2 < -1 ? -1 : wa2, wa2 = +T(+(wa2 > 1 ? 1 : wa2)) * 2, g[b2 + 504 >> 2] = wa2, !(+N(+wa2) < 11920928955078125e-23)) : 0)
                a[b2 + 526 >> 0] = 1;
              i = ra2;
              return;
            }
            _f(d2, ra2 + 48 | 0);
            _f(b2 + 300 | 0, ra2 + 32 | 0);
            _2 = +g[ra2 + 48 + 12 >> 2];
            $2 = +g[ra2 + 32 >> 2];
            aa2 = +g[ra2 + 48 >> 2];
            ba2 = +g[ra2 + 32 + 12 >> 2];
            ca2 = +g[ra2 + 48 + 4 >> 2];
            da2 = +g[ra2 + 32 + 8 >> 2];
            ea2 = +g[ra2 + 48 + 8 >> 2];
            fa2 = +g[ra2 + 32 + 4 >> 2];
            _f(e2, ra2 + 16 | 0);
            _f(b2 + 364 | 0, ra2);
            ga2 = +g[ra2 + 16 + 12 >> 2];
            ha2 = +g[ra2 >> 2];
            ia2 = +g[ra2 + 16 >> 2];
            ja2 = +g[ra2 + 12 >> 2];
            ka2 = +g[ra2 + 16 + 4 >> 2];
            la2 = +g[ra2 + 8 >> 2];
            ma2 = +g[ra2 + 16 + 8 >> 2];
            na2 = +g[ra2 + 4 >> 2];
            oa2 = -(ga2 * ha2 + ia2 * ja2 + ka2 * la2 - ma2 * na2);
            pa2 = -(ha2 * ma2 + (ja2 * ka2 + ga2 * na2) - ia2 * la2);
            qa2 = -(ga2 * la2 + ja2 * ma2 + ia2 * na2 - ha2 * ka2);
            u2 = (_2 * ba2 - $2 * aa2 - ca2 * fa2 - da2 * ea2) * oa2 + (_2 * $2 + aa2 * ba2 + ca2 * da2 - ea2 * fa2) * (ga2 * ja2 - ha2 * ia2 - ka2 * na2 - la2 * ma2) + (_2 * da2 + ba2 * ea2 + aa2 * fa2 - $2 * ca2) * pa2 - ($2 * ea2 + (ba2 * ca2 + _2 * fa2) - aa2 * da2) * qa2;
            v2 = (_2 * $2 + aa2 * ba2 + ca2 * da2 - ea2 * fa2) * qa2 + (($2 * ea2 + (ba2 * ca2 + _2 * fa2) - aa2 * da2) * (ga2 * ja2 - ha2 * ia2 - ka2 * na2 - la2 * ma2) + (_2 * ba2 - $2 * aa2 - ca2 * fa2 - da2 * ea2) * pa2) - (_2 * da2 + ba2 * ea2 + aa2 * fa2 - $2 * ca2) * oa2;
            w2 = ($2 * ea2 + (ba2 * ca2 + _2 * fa2) - aa2 * da2) * oa2 + ((_2 * da2 + ba2 * ea2 + aa2 * fa2 - $2 * ca2) * (ga2 * ja2 - ha2 * ia2 - ka2 * na2 - la2 * ma2) + (_2 * ba2 - $2 * aa2 - ca2 * fa2 - da2 * ea2) * qa2) - (_2 * $2 + aa2 * ba2 + ca2 * da2 - ea2 * fa2) * pa2;
            x2 = (_2 * ba2 - $2 * aa2 - ca2 * fa2 - da2 * ea2) * (ga2 * ja2 - ha2 * ia2 - ka2 * na2 - la2 * ma2) - (_2 * $2 + aa2 * ba2 + ca2 * da2 - ea2 * fa2) * oa2 - ($2 * ea2 + (ba2 * ca2 + _2 * fa2) - aa2 * da2) * pa2 - (_2 * da2 + ba2 * ea2 + aa2 * fa2 - $2 * ca2) * qa2;
            m2 = +g[5310];
            n2 = +g[5312];
            l2 = +g[5311];
            o2 = (m2 * w2 + l2 * x2 - n2 * u2) * -w2 + (x2 * (m2 * x2 + n2 * v2 - l2 * w2) + (-(m2 * u2) - l2 * v2 - n2 * w2) * -u2) - (n2 * x2 + l2 * u2 - m2 * v2) * -v2;
            j2 = (n2 * x2 + l2 * u2 - m2 * v2) * -u2 + (x2 * (m2 * w2 + l2 * x2 - n2 * u2) + (-(m2 * u2) - l2 * v2 - n2 * w2) * -v2) - (m2 * x2 + n2 * v2 - l2 * w2) * -w2;
            q2 = (m2 * x2 + n2 * v2 - l2 * w2) * -v2 + (x2 * (n2 * x2 + l2 * u2 - m2 * v2) + (-(m2 * u2) - l2 * v2 - n2 * w2) * -w2) - (m2 * w2 + l2 * x2 - n2 * u2) * -u2;
            r2 = 1 / +O(+(q2 * q2 + (o2 * o2 + j2 * j2)));
            do
              if (n2 * (r2 * q2) + (l2 * (r2 * j2) + m2 * (r2 * o2)) < -0.9999998807907104)
                if (+N(+n2) > 0.7071067690849304) {
                  j2 = 1 / +O(+(n2 * n2 + l2 * l2));
                  p2 = 0;
                  s2 = (g[k >> 2] = l2 * j2, c[k >> 2] | 0);
                  t2 = 0;
                  j2 = -(n2 * j2);
                  break;
                } else {
                  j2 = 1 / +O(+(m2 * m2 + l2 * l2));
                  p2 = (g[k >> 2] = -(l2 * j2), c[k >> 2] | 0);
                  s2 = 0;
                  t2 = 0;
                  j2 = m2 * j2;
                  break;
                }
              else {
                wa2 = +O(+((n2 * (r2 * q2) + (l2 * (r2 * j2) + m2 * (r2 * o2)) + 1) * 2));
                p2 = (g[k >> 2] = (l2 * (r2 * q2) - n2 * (r2 * j2)) * (1 / wa2), c[k >> 2] | 0);
                s2 = (g[k >> 2] = (m2 * (r2 * j2) - l2 * (r2 * o2)) * (1 / wa2), c[k >> 2] | 0);
                t2 = (g[k >> 2] = wa2 * 0.5, c[k >> 2] | 0);
                j2 = (n2 * (r2 * o2) - m2 * (r2 * q2)) * (1 / wa2);
              }
            while (0);
            m2 = (c[k >> 2] = p2, +g[k >> 2]);
            q2 = (c[k >> 2] = s2, +g[k >> 2]);
            l2 = (c[k >> 2] = t2, +g[k >> 2]);
            n2 = 1 / +O(+(m2 * m2 + j2 * j2 + q2 * q2 + l2 * l2));
            o2 = j2 * n2;
            X2 = w2 * -o2 + (u2 * (l2 * n2) + x2 * -(m2 * n2)) - v2 * -(q2 * n2);
            Y2 = u2 * -(q2 * n2) + (x2 * -o2 + v2 * (l2 * n2)) - w2 * -(m2 * n2);
            Z2 = v2 * -(m2 * n2) + (w2 * (l2 * n2) + x2 * -(q2 * n2)) - u2 * -o2;
            U2 = x2 * (l2 * n2) - u2 * -(m2 * n2) - v2 * -o2 - w2 * -(q2 * n2);
            V2 = 1 / +O(+(U2 * U2 + (Z2 * Z2 + (X2 * X2 + Y2 * Y2))));
            u2 = +g[b2 + 444 >> 2];
            j2 = +g[b2 + 456 >> 2];
            p2 = (g[k >> 2] = u2, c[k >> 2] | 0);
            if (u2 >= j2 ? (y2 = +g[b2 + 448 >> 2], y2 >= j2) : 0) {
              r2 = l2 * n2 < -1 ? -1 : l2 * n2;
              r2 = +T(+(r2 > 1 ? 1 : r2)) * 2;
              if (r2 > 11920928955078125e-23) {
                j2 = 1 / +O(+(q2 * n2 * (q2 * n2) + (m2 * n2 * (m2 * n2) + o2 * o2)));
                if (+N(+(o2 * j2)) > 11920928955078125e-23) {
                  wa2 = +O(+((q2 * n2 * j2 * (q2 * n2 * j2) / (o2 * j2 * (o2 * j2)) + 1) / (1 / (y2 * y2) + q2 * n2 * j2 * (q2 * n2 * j2) / (o2 * j2 * (o2 * j2)) / (u2 * u2))));
                  m2 = m2 * n2 * j2;
                  l2 = q2 * n2 * j2;
                  j2 = o2 * j2;
                  p2 = (g[k >> 2] = wa2, c[k >> 2] | 0);
                } else {
                  m2 = m2 * n2 * j2;
                  l2 = q2 * n2 * j2;
                  j2 = o2 * j2;
                }
              } else {
                m2 = 0;
                l2 = 0;
                j2 = 0;
                p2 = 0;
              }
              n2 = (c[k >> 2] = p2, +g[k >> 2]);
              o2 = +g[b2 + 428 >> 2];
              if (r2 > n2 * o2) {
                a[b2 + 526 >> 0] = 1;
                if (r2 < n2 & o2 < 0.9999998807907104)
                  q2 = (r2 - n2 * o2) / (n2 - n2 * o2);
                else
                  q2 = 1;
                g[b2 + 528 >> 2] = q2;
                g[b2 + 504 >> 2] = r2 - n2 * o2;
                if (+N(+j2) > 11920928955078125e-23) {
                  wa2 = +N(+(j2 * (-l2 / j2 * (y2 / u2))));
                  l2 = l2 < -0 ? wa2 : -wa2;
                  wa2 = 1 / +O(+(m2 * m2 + j2 * j2 + l2 * l2));
                  m2 = m2 * wa2;
                  l2 = -(l2 * wa2);
                  j2 = j2 * wa2;
                }
                va2 = -m2;
                ua2 = -j2;
                sa2 = -l2;
                P2 = (ga2 * ja2 - ha2 * ia2 - ka2 * na2 - la2 * ma2) * va2 + (ha2 * ma2 + (ja2 * ka2 + ga2 * na2) - ia2 * la2) * sa2 - (ga2 * la2 + ja2 * ma2 + ia2 * na2 - ha2 * ka2) * ua2;
                wa2 = (ga2 * la2 + ja2 * ma2 + ia2 * na2 - ha2 * ka2) * va2 + (ga2 * ja2 - ha2 * ia2 - ka2 * na2 - la2 * ma2) * ua2 - (ga2 * ha2 + ia2 * ja2 + ka2 * la2 - ma2 * na2) * sa2;
                ta2 = (ga2 * ha2 + ia2 * ja2 + ka2 * la2 - ma2 * na2) * ua2 + (ga2 * ja2 - ha2 * ia2 - ka2 * na2 - la2 * ma2) * sa2 - (ha2 * ma2 + (ja2 * ka2 + ga2 * na2) - ia2 * la2) * va2;
                sa2 = -((ga2 * ha2 + ia2 * ja2 + ka2 * la2 - ma2 * na2) * va2) - (ha2 * ma2 + (ja2 * ka2 + ga2 * na2) - ia2 * la2) * ua2 - (ga2 * la2 + ja2 * ma2 + ia2 * na2 - ha2 * ka2) * sa2;
                ua2 = wa2 * qa2 + (sa2 * oa2 + (ga2 * ja2 - ha2 * ia2 - ka2 * na2 - la2 * ma2) * P2) - ta2 * pa2;
                va2 = ta2 * oa2 + ((ga2 * ja2 - ha2 * ia2 - ka2 * na2 - la2 * ma2) * wa2 + sa2 * pa2) - P2 * qa2;
                wa2 = P2 * pa2 + (sa2 * qa2 + (ga2 * ja2 - ha2 * ia2 - ka2 * na2 - la2 * ma2) * ta2) - wa2 * oa2;
                g[b2 + 460 >> 2] = ua2;
                g[b2 + 464 >> 2] = va2;
                g[b2 + 468 >> 2] = wa2;
                g[b2 + 472 >> 2] = 0;
                c[b2 + 536 >> 2] = 0;
                c[b2 + 536 + 4 >> 2] = 0;
                c[b2 + 536 + 8 >> 2] = 0;
                c[b2 + 536 + 12 >> 2] = 0;
                g[b2 + 492 >> 2] = 1 / (ua2 * (+g[f2 >> 2] * ua2 + +g[f2 + 16 >> 2] * va2 + +g[f2 + 32 >> 2] * wa2) + va2 * (ua2 * +g[f2 + 4 >> 2] + va2 * +g[f2 + 20 >> 2] + wa2 * +g[f2 + 36 >> 2]) + wa2 * (ua2 * +g[f2 + 8 >> 2] + va2 * +g[f2 + 24 >> 2] + wa2 * +g[f2 + 40 >> 2]) + (ua2 * (ua2 * +g[h2 >> 2] + va2 * +g[h2 + 16 >> 2] + wa2 * +g[h2 + 32 >> 2]) + va2 * (ua2 * +g[h2 + 4 >> 2] + va2 * +g[h2 + 20 >> 2] + wa2 * +g[h2 + 36 >> 2]) + wa2 * (ua2 * +g[h2 + 8 >> 2] + va2 * +g[h2 + 24 >> 2] + wa2 * +g[h2 + 40 >> 2])));
              }
            } else
              S2 = 23;
            a:
              do
                if ((S2 | 0) == 23) {
                  G2 = +g[b2 + 300 >> 2];
                  H2 = +g[b2 + 316 >> 2];
                  I2 = +g[b2 + 332 >> 2];
                  r2 = +g[d2 >> 2];
                  u2 = +g[d2 + 4 >> 2];
                  v2 = +g[d2 + 8 >> 2];
                  w2 = +g[d2 + 16 >> 2];
                  x2 = +g[d2 + 20 >> 2];
                  y2 = +g[d2 + 24 >> 2];
                  J2 = +g[d2 + 32 >> 2];
                  K2 = +g[d2 + 36 >> 2];
                  z2 = +g[d2 + 40 >> 2];
                  A2 = +g[b2 + 304 >> 2];
                  B2 = +g[b2 + 320 >> 2];
                  C2 = +g[b2 + 336 >> 2];
                  D2 = +g[b2 + 308 >> 2];
                  E2 = +g[b2 + 324 >> 2];
                  F2 = +g[b2 + 340 >> 2];
                  n2 = +g[b2 + 364 >> 2];
                  m2 = +g[b2 + 380 >> 2];
                  L2 = +g[b2 + 396 >> 2];
                  M2 = n2 * +g[e2 >> 2] + m2 * +g[e2 + 4 >> 2] + L2 * +g[e2 + 8 >> 2];
                  P2 = n2 * +g[e2 + 16 >> 2] + m2 * +g[e2 + 20 >> 2] + L2 * +g[e2 + 24 >> 2];
                  L2 = n2 * +g[e2 + 32 >> 2] + m2 * +g[e2 + 36 >> 2] + L2 * +g[e2 + 40 >> 2];
                  m2 = (G2 * r2 + H2 * u2 + I2 * v2) * M2 + (G2 * w2 + H2 * x2 + I2 * y2) * P2 + (G2 * J2 + H2 * K2 + I2 * z2) * L2;
                  n2 = (r2 * A2 + u2 * B2 + v2 * C2) * M2 + (w2 * A2 + x2 * B2 + y2 * C2) * P2 + (J2 * A2 + K2 * B2 + z2 * C2) * L2;
                  q2 = (r2 * D2 + u2 * E2 + v2 * F2) * M2 + (w2 * D2 + x2 * E2 + y2 * F2) * P2 + (J2 * D2 + K2 * E2 + z2 * F2) * L2;
                  l2 = +g[b2 + 444 >> 2];
                  j2 = +g[b2 + 456 >> 2];
                  do
                    if (l2 < j2) {
                      o2 = +g[b2 + 448 >> 2];
                      if (o2 < j2) {
                        if (+N(+n2) < 11920928955078125e-23 ? +N(+q2) < 11920928955078125e-23 : 0)
                          break a;
                        a[b2 + 526 >> 0] = 1;
                        g[b2 + 460 >> 2] = -((G2 * J2 + H2 * K2 + I2 * z2) * P2 - (G2 * w2 + H2 * x2 + I2 * y2) * L2);
                        g[b2 + 464 >> 2] = -((G2 * r2 + H2 * u2 + I2 * v2) * L2 - (G2 * J2 + H2 * K2 + I2 * z2) * M2);
                        g[b2 + 468 >> 2] = -((G2 * w2 + H2 * x2 + I2 * y2) * M2 - (G2 * r2 + H2 * u2 + I2 * v2) * P2);
                        g[b2 + 472 >> 2] = 0;
                        break a;
                      }
                      if (+N(+m2) < 11920928955078125e-23 ? +N(+q2) < 11920928955078125e-23 : 0) {
                        l2 = n2;
                        j2 = q2;
                        break;
                      }
                      a[b2 + 526 >> 0] = 1;
                      if (o2 >= j2) {
                        j2 = +W(+q2, +m2);
                        if (j2 > o2) {
                          m2 = +Q(+o2);
                          l2 = 0;
                          j2 = +R(+o2);
                          break;
                        }
                        if (j2 < -o2) {
                          m2 = +Q(+o2);
                          l2 = 0;
                          j2 = -+R(+o2);
                        } else {
                          l2 = 0;
                          j2 = q2;
                        }
                      } else {
                        l2 = n2;
                        j2 = q2;
                      }
                    } else {
                      if (+N(+m2) < 11920928955078125e-23 ? +N(+n2) < 11920928955078125e-23 : 0) {
                        l2 = n2;
                        j2 = q2;
                        break;
                      }
                      a[b2 + 526 >> 0] = 1;
                      if (l2 >= j2) {
                        j2 = +W(+n2, +m2);
                        if (j2 > l2) {
                          m2 = +Q(+l2);
                          l2 = +R(+l2);
                          j2 = 0;
                          break;
                        }
                        if (j2 < -l2) {
                          m2 = +Q(+l2);
                          l2 = -+R(+l2);
                          j2 = 0;
                        } else {
                          l2 = n2;
                          j2 = 0;
                        }
                      } else {
                        l2 = n2;
                        j2 = q2;
                      }
                    }
                  while (0);
                  o2 = (r2 * D2 + u2 * E2 + v2 * F2) * j2 + ((r2 * A2 + u2 * B2 + v2 * C2) * l2 + (G2 * r2 + H2 * u2 + I2 * v2) * m2);
                  n2 = (w2 * D2 + x2 * E2 + y2 * F2) * j2 + ((w2 * A2 + x2 * B2 + y2 * C2) * l2 + (G2 * w2 + H2 * x2 + I2 * y2) * m2);
                  j2 = (J2 * D2 + K2 * E2 + z2 * F2) * j2 + ((J2 * A2 + K2 * B2 + z2 * C2) * l2 + (G2 * J2 + H2 * K2 + I2 * z2) * m2);
                  l2 = 1 / +O(+(j2 * j2 + (o2 * o2 + n2 * n2)));
                  g[b2 + 460 >> 2] = -(P2 * (l2 * j2) - L2 * (l2 * n2));
                  g[b2 + 464 >> 2] = -(L2 * (l2 * o2) - M2 * (l2 * j2));
                  g[b2 + 468 >> 2] = -(M2 * (l2 * n2) - P2 * (l2 * o2));
                  g[b2 + 472 >> 2] = 0;
                  m2 = +O(+((P2 * (l2 * j2) - L2 * (l2 * n2)) * (P2 * (l2 * j2) - L2 * (l2 * n2)) + (L2 * (l2 * o2) - M2 * (l2 * j2)) * (L2 * (l2 * o2) - M2 * (l2 * j2)) + (M2 * (l2 * n2) - P2 * (l2 * o2)) * (M2 * (l2 * n2) - P2 * (l2 * o2))));
                  g[b2 + 504 >> 2] = m2;
                  if (!(+N(+m2) < 11920928955078125e-23)) {
                    g[b2 + 460 >> 2] = 1 / m2 * -(P2 * (l2 * j2) - L2 * (l2 * n2));
                    g[b2 + 464 >> 2] = 1 / m2 * -(L2 * (l2 * o2) - M2 * (l2 * j2));
                    g[b2 + 468 >> 2] = 1 / m2 * -(M2 * (l2 * n2) - P2 * (l2 * o2));
                  }
                }
              while (0);
            r2 = +g[b2 + 452 >> 2];
            if (!(r2 >= 0)) {
              g[b2 + 512 >> 2] = 0;
              i = ra2;
              return;
            }
            j2 = V2 * U2 < -1 ? -1 : V2 * U2;
            j2 = +T(+(j2 > 1 ? 1 : j2)) * 2;
            if (j2 > 3.1415927410125732) {
              q2 = -(V2 * U2) < -1 ? -1 : -(V2 * U2);
              q2 = +T(+(q2 > 1 ? 1 : q2)) * 2;
              l2 = -(V2 * X2);
              m2 = -(V2 * Y2);
              j2 = -(V2 * Z2);
            } else {
              q2 = j2;
              l2 = V2 * X2;
              m2 = V2 * Y2;
              j2 = V2 * Z2;
            }
            g[b2 + 512 >> 2] = q2;
            if (q2 > 11920928955078125e-23) {
              wa2 = 1 / +O(+(l2 * l2 + m2 * m2 + j2 * j2));
              o2 = l2 * wa2;
              n2 = j2 * wa2;
              m2 = m2 * wa2;
            } else {
              o2 = l2;
              n2 = j2;
            }
            j2 = +g[b2 + 428 >> 2];
            if (q2 > r2 * j2) {
              a[b2 + 525 >> 0] = 1;
              l2 = q2 - r2 * j2;
              if (q2 < r2 & j2 < 0.9999998807907104)
                j2 = l2 / (r2 - r2 * j2);
              else
                j2 = 1;
              g[b2 + 532 >> 2] = j2;
              g[b2 + 508 >> 2] = l2;
              va2 = -o2;
              ua2 = -m2;
              sa2 = -n2;
              Z2 = (ga2 * ja2 - ha2 * ia2 - ka2 * na2 - la2 * ma2) * va2 + (ha2 * ma2 + (ja2 * ka2 + ga2 * na2) - ia2 * la2) * sa2 - (ga2 * la2 + ja2 * ma2 + ia2 * na2 - ha2 * ka2) * ua2;
              wa2 = (ga2 * la2 + ja2 * ma2 + ia2 * na2 - ha2 * ka2) * va2 + (ga2 * ja2 - ha2 * ia2 - ka2 * na2 - la2 * ma2) * ua2 - (ga2 * ha2 + ia2 * ja2 + ka2 * la2 - ma2 * na2) * sa2;
              ta2 = (ga2 * ha2 + ia2 * ja2 + ka2 * la2 - ma2 * na2) * ua2 + (ga2 * ja2 - ha2 * ia2 - ka2 * na2 - la2 * ma2) * sa2 - (ha2 * ma2 + (ja2 * ka2 + ga2 * na2) - ia2 * la2) * va2;
              sa2 = -((ga2 * ha2 + ia2 * ja2 + ka2 * la2 - ma2 * na2) * va2) - (ha2 * ma2 + (ja2 * ka2 + ga2 * na2) - ia2 * la2) * ua2 - (ga2 * la2 + ja2 * ma2 + ia2 * na2 - ha2 * ka2) * sa2;
              ua2 = wa2 * qa2 + (sa2 * oa2 + (ga2 * ja2 - ha2 * ia2 - ka2 * na2 - la2 * ma2) * Z2) - ta2 * pa2;
              va2 = ta2 * oa2 + ((ga2 * ja2 - ha2 * ia2 - ka2 * na2 - la2 * ma2) * wa2 + sa2 * pa2) - Z2 * qa2;
              wa2 = Z2 * pa2 + (sa2 * qa2 + (ga2 * ja2 - ha2 * ia2 - ka2 * na2 - la2 * ma2) * ta2) - wa2 * oa2;
              g[b2 + 476 >> 2] = ua2;
              g[b2 + 480 >> 2] = va2;
              g[b2 + 484 >> 2] = wa2;
              g[b2 + 488 >> 2] = 0;
              g[b2 + 496 >> 2] = 1 / (ua2 * (+g[f2 >> 2] * ua2 + +g[f2 + 16 >> 2] * va2 + +g[f2 + 32 >> 2] * wa2) + va2 * (ua2 * +g[f2 + 4 >> 2] + va2 * +g[f2 + 20 >> 2] + wa2 * +g[f2 + 36 >> 2]) + wa2 * (ua2 * +g[f2 + 8 >> 2] + va2 * +g[f2 + 24 >> 2] + wa2 * +g[f2 + 40 >> 2]) + (ua2 * (ua2 * +g[h2 >> 2] + va2 * +g[h2 + 16 >> 2] + wa2 * +g[h2 + 32 >> 2]) + va2 * (ua2 * +g[h2 + 4 >> 2] + va2 * +g[h2 + 20 >> 2] + wa2 * +g[h2 + 36 >> 2]) + wa2 * (ua2 * +g[h2 + 8 >> 2] + va2 * +g[h2 + 24 >> 2] + wa2 * +g[h2 + 40 >> 2])));
            }
            if (!(a[b2 + 526 >> 0] | 0)) {
              i = ra2;
              return;
            }
            qa2 = -o2;
            wa2 = -m2;
            sa2 = -n2;
            pa2 = (_2 * ba2 - $2 * aa2 - ca2 * fa2 - da2 * ea2) * qa2 + ($2 * ea2 + (ba2 * ca2 + _2 * fa2) - aa2 * da2) * sa2 - (_2 * da2 + ba2 * ea2 + aa2 * fa2 - $2 * ca2) * wa2;
            va2 = (_2 * da2 + ba2 * ea2 + aa2 * fa2 - $2 * ca2) * qa2 + (_2 * ba2 - $2 * aa2 - ca2 * fa2 - da2 * ea2) * wa2 - (_2 * $2 + aa2 * ba2 + ca2 * da2 - ea2 * fa2) * sa2;
            ua2 = (_2 * $2 + aa2 * ba2 + ca2 * da2 - ea2 * fa2) * wa2 + (_2 * ba2 - $2 * aa2 - ca2 * fa2 - da2 * ea2) * sa2 - ($2 * ea2 + (ba2 * ca2 + _2 * fa2) - aa2 * da2) * qa2;
            sa2 = -((_2 * $2 + aa2 * ba2 + ca2 * da2 - ea2 * fa2) * qa2) - ($2 * ea2 + (ba2 * ca2 + _2 * fa2) - aa2 * da2) * wa2 - (_2 * da2 + ba2 * ea2 + aa2 * fa2 - $2 * ca2) * sa2;
            wa2 = -(_2 * $2 + aa2 * ba2 + ca2 * da2 - ea2 * fa2);
            qa2 = -($2 * ea2 + (ba2 * ca2 + _2 * fa2) - aa2 * da2);
            ta2 = -(_2 * da2 + ba2 * ea2 + aa2 * fa2 - $2 * ca2);
            g[b2 + 536 >> 2] = va2 * ta2 + (sa2 * wa2 + (_2 * ba2 - $2 * aa2 - ca2 * fa2 - da2 * ea2) * pa2) - ua2 * qa2;
            g[b2 + 540 >> 2] = ua2 * wa2 + ((_2 * ba2 - $2 * aa2 - ca2 * fa2 - da2 * ea2) * va2 + sa2 * qa2) - pa2 * ta2;
            g[b2 + 544 >> 2] = pa2 * qa2 + (sa2 * ta2 + (_2 * ba2 - $2 * aa2 - ca2 * fa2 - da2 * ea2) * ua2) - va2 * wa2;
            g[b2 + 548 >> 2] = 0;
            i = ra2;
            return;
          }
          function Jo(b2, d2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0;
            if (a[b2 + 527 >> 0] | 0) {
              c[d2 >> 2] = 0;
              c[d2 + 4 >> 2] = 0;
              return;
            }
            c[d2 >> 2] = 3;
            c[d2 + 4 >> 2] = 3;
            j2 = c[b2 + 28 >> 2] | 0;
            i2 = c[b2 + 32 >> 2] | 0;
            Io(b2, j2 + 4 | 0, i2 + 4 | 0, j2 + 288 | 0, i2 + 288 | 0);
            if ((a[b2 + 526 >> 0] | 0 ? (e2 = c[d2 >> 2] | 0, c[d2 >> 2] = e2 + 1, f2 = c[d2 + 4 >> 2] | 0, c[d2 + 4 >> 2] = f2 + -1, h2 = +g[b2 + 456 >> 2], +g[b2 + 444 >> 2] < h2) : 0) ? +g[b2 + 448 >> 2] < h2 : 0) {
              c[d2 >> 2] = e2 + 2;
              c[d2 + 4 >> 2] = f2 + -2;
            }
            if (!(a[b2 + 525 >> 0] | 0))
              return;
            c[d2 >> 2] = (c[d2 >> 2] | 0) + 1;
            c[d2 + 4 >> 2] = (c[d2 + 4 >> 2] | 0) + -1;
            return;
          }
          function Ko(b2, d2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0;
            p2 = c[b2 + 28 >> 2] | 0;
            i2 = c[b2 + 32 >> 2] | 0;
            Io(b2, p2 + 4 | 0, i2 + 4 | 0, p2 + 288 | 0, i2 + 288 | 0);
            r2 = c[d2 + 8 >> 2] | 0;
            g[r2 >> 2] = 1;
            q2 = c[d2 + 24 >> 2] | 0;
            g[r2 + (q2 + 1 << 2) >> 2] = 1;
            g[r2 + ((q2 << 1) + 2 << 2) >> 2] = 1;
            m2 = +g[b2 + 348 >> 2];
            v2 = +g[b2 + 352 >> 2];
            o2 = +g[b2 + 356 >> 2];
            t2 = +g[p2 + 4 >> 2] * m2 + +g[p2 + 8 >> 2] * v2 + +g[p2 + 12 >> 2] * o2;
            n2 = m2 * +g[p2 + 20 >> 2] + v2 * +g[p2 + 24 >> 2] + o2 * +g[p2 + 28 >> 2];
            o2 = m2 * +g[p2 + 36 >> 2] + v2 * +g[p2 + 40 >> 2] + o2 * +g[p2 + 44 >> 2];
            r2 = c[d2 + 12 >> 2] | 0;
            c[r2 >> 2] = 0;
            g[r2 + 4 >> 2] = o2;
            g[r2 + 8 >> 2] = -n2;
            g[r2 + 12 >> 2] = 0;
            g[r2 + (q2 << 2) >> 2] = -o2;
            c[r2 + (q2 << 2) + 4 >> 2] = 0;
            g[r2 + (q2 << 2) + 8 >> 2] = t2;
            g[r2 + (q2 << 2) + 12 >> 2] = 0;
            g[r2 + (q2 << 1 << 2) >> 2] = n2;
            g[r2 + (q2 << 1 << 2) + 4 >> 2] = -t2;
            c[r2 + (q2 << 1 << 2) + 8 >> 2] = 0;
            g[r2 + (q2 << 1 << 2) + 12 >> 2] = 0;
            r2 = c[d2 + 16 >> 2] | 0;
            g[r2 >> 2] = -1;
            g[r2 + (q2 + 1 << 2) >> 2] = -1;
            g[r2 + ((q2 << 1) + 2 << 2) >> 2] = -1;
            v2 = +g[b2 + 412 >> 2];
            m2 = +g[b2 + 416 >> 2];
            l2 = +g[b2 + 420 >> 2];
            u2 = +g[i2 + 4 >> 2] * v2 + +g[i2 + 8 >> 2] * m2 + +g[i2 + 12 >> 2] * l2;
            k2 = v2 * +g[i2 + 20 >> 2] + m2 * +g[i2 + 24 >> 2] + l2 * +g[i2 + 28 >> 2];
            l2 = v2 * +g[i2 + 36 >> 2] + m2 * +g[i2 + 40 >> 2] + l2 * +g[i2 + 44 >> 2];
            q2 = c[d2 + 20 >> 2] | 0;
            r2 = c[d2 + 24 >> 2] | 0;
            c[q2 >> 2] = 0;
            g[q2 + 4 >> 2] = -l2;
            g[q2 + 8 >> 2] = k2;
            g[q2 + 12 >> 2] = 0;
            g[q2 + (r2 << 2) >> 2] = l2;
            c[q2 + (r2 << 2) + 4 >> 2] = 0;
            g[q2 + (r2 << 2) + 8 >> 2] = -u2;
            g[q2 + (r2 << 2) + 12 >> 2] = 0;
            g[q2 + (r2 << 1 << 2) >> 2] = -k2;
            g[q2 + (r2 << 1 << 2) + 4 >> 2] = u2;
            c[q2 + (r2 << 1 << 2) + 8 >> 2] = 0;
            g[q2 + (r2 << 1 << 2) + 12 >> 2] = 0;
            r2 = c[b2 + 592 >> 2] | 0;
            m2 = +g[((r2 & 2 | 0) == 0 ? d2 + 4 | 0 : b2 + 600 | 0) >> 2] * +g[d2 >> 2];
            s2 = c[d2 + 24 >> 2] | 0;
            j2 = c[d2 + 28 >> 2] | 0;
            f2 = c[d2 + 36 >> 2] | 0;
            e2 = c[d2 + 40 >> 2] | 0;
            g[j2 >> 2] = m2 * (u2 + +g[i2 + 52 >> 2] - t2 - +g[p2 + 52 >> 2]);
            g[f2 >> 2] = -34028234663852886e22;
            g[e2 >> 2] = 34028234663852886e22;
            if (!(r2 & 1)) {
              g[j2 + (s2 << 2) >> 2] = m2 * (k2 + +g[i2 + 56 >> 2] - n2 - +g[p2 + 56 >> 2]);
              g[f2 + (s2 << 2) >> 2] = -34028234663852886e22;
              g[e2 + (s2 << 2) >> 2] = 34028234663852886e22;
              g[j2 + (s2 << 1 << 2) >> 2] = m2 * (l2 + +g[i2 + 60 >> 2] - o2 - +g[p2 + 60 >> 2]);
              g[f2 + (s2 << 1 << 2) >> 2] = -34028234663852886e22;
              g[e2 + (s2 << 1 << 2) >> 2] = 34028234663852886e22;
            } else {
              w2 = c[d2 + 32 >> 2] | 0;
              c[w2 >> 2] = c[b2 + 596 >> 2];
              g[j2 + (s2 << 2) >> 2] = m2 * (k2 + +g[i2 + 56 >> 2] - n2 - +g[p2 + 56 >> 2]);
              g[f2 + (s2 << 2) >> 2] = -34028234663852886e22;
              g[e2 + (s2 << 2) >> 2] = 34028234663852886e22;
              c[w2 + (s2 << 2) >> 2] = c[b2 + 596 >> 2];
              g[j2 + (s2 << 1 << 2) >> 2] = m2 * (l2 + +g[i2 + 60 >> 2] - o2 - +g[p2 + 60 >> 2]);
              g[f2 + (s2 << 1 << 2) >> 2] = -34028234663852886e22;
              g[e2 + (s2 << 1 << 2) >> 2] = 34028234663852886e22;
              c[w2 + (s2 << 1 << 2) >> 2] = c[b2 + 596 >> 2];
            }
            do
              if (!(a[b2 + 526 >> 0] | 0))
                i2 = s2 * 3 | 0;
              else {
                i2 = c[d2 + 12 >> 2] | 0;
                v2 = +g[b2 + 456 >> 2];
                if (+g[b2 + 444 >> 2] < v2 ? +g[b2 + 448 >> 2] < v2 : 0) {
                  z2 = +g[p2 + 4 >> 2];
                  y2 = +g[p2 + 8 >> 2];
                  x2 = +g[p2 + 12 >> 2];
                  D2 = +g[b2 + 304 >> 2];
                  C2 = +g[b2 + 320 >> 2];
                  B2 = +g[b2 + 336 >> 2];
                  m2 = +g[b2 + 308 >> 2];
                  o2 = +g[b2 + 324 >> 2];
                  u2 = +g[b2 + 340 >> 2];
                  h2 = +g[p2 + 20 >> 2];
                  k2 = +g[p2 + 24 >> 2];
                  l2 = +g[p2 + 28 >> 2];
                  n2 = +g[p2 + 36 >> 2];
                  t2 = +g[p2 + 40 >> 2];
                  v2 = +g[p2 + 44 >> 2];
                  g[i2 + (s2 * 3 << 2) >> 2] = z2 * D2 + y2 * C2 + x2 * B2;
                  g[i2 + ((s2 * 3 | 0) + 1 << 2) >> 2] = D2 * h2 + C2 * k2 + B2 * l2;
                  g[i2 + ((s2 * 3 | 0) + 2 << 2) >> 2] = D2 * n2 + C2 * t2 + B2 * v2;
                  g[i2 + (s2 << 2 << 2) >> 2] = z2 * m2 + y2 * o2 + x2 * u2;
                  g[i2 + ((s2 << 2 | 1) << 2) >> 2] = m2 * h2 + o2 * k2 + u2 * l2;
                  g[i2 + ((s2 << 2 | 2) << 2) >> 2] = m2 * n2 + o2 * t2 + u2 * v2;
                  g[q2 + (s2 * 3 << 2) >> 2] = -(z2 * D2 + y2 * C2 + x2 * B2);
                  g[q2 + ((s2 * 3 | 0) + 1 << 2) >> 2] = -(D2 * h2 + C2 * k2 + B2 * l2);
                  g[q2 + ((s2 * 3 | 0) + 2 << 2) >> 2] = -(D2 * n2 + C2 * t2 + B2 * v2);
                  g[q2 + (s2 << 2 << 2) >> 2] = -(z2 * m2 + y2 * o2 + x2 * u2);
                  g[q2 + ((s2 << 2 | 1) << 2) >> 2] = -(m2 * h2 + o2 * k2 + u2 * l2);
                  g[q2 + ((s2 << 2 | 2) << 2) >> 2] = -(m2 * n2 + o2 * t2 + u2 * v2);
                  A2 = +g[d2 >> 2] * +g[b2 + 436 >> 2];
                  j2 = c[d2 + 28 >> 2] | 0;
                  g[j2 + (s2 * 3 << 2) >> 2] = A2 * ((z2 * D2 + y2 * C2 + x2 * B2) * +g[b2 + 460 >> 2] + (D2 * h2 + C2 * k2 + B2 * l2) * +g[b2 + 464 >> 2] + (D2 * n2 + C2 * t2 + B2 * v2) * +g[b2 + 468 >> 2]);
                  g[j2 + (s2 << 2 << 2) >> 2] = A2 * ((z2 * m2 + y2 * o2 + x2 * u2) * +g[b2 + 460 >> 2] + (m2 * h2 + o2 * k2 + u2 * l2) * +g[b2 + 464 >> 2] + (m2 * n2 + o2 * t2 + u2 * v2) * +g[b2 + 468 >> 2]);
                  f2 = c[d2 + 36 >> 2] | 0;
                  g[f2 + (s2 * 3 << 2) >> 2] = -34028234663852886e22;
                  e2 = c[d2 + 40 >> 2] | 0;
                  g[e2 + (s2 * 3 << 2) >> 2] = 34028234663852886e22;
                  g[f2 + (s2 << 2 << 2) >> 2] = -34028234663852886e22;
                  g[e2 + (s2 << 2 << 2) >> 2] = 34028234663852886e22;
                  i2 = (c[d2 + 24 >> 2] | 0) + (s2 << 2) | 0;
                  break;
                }
                D2 = +g[b2 + 436 >> 2];
                B2 = D2 * (+g[b2 + 460 >> 2] * D2);
                C2 = D2 * (D2 * +g[b2 + 464 >> 2]);
                D2 = D2 * (D2 * +g[b2 + 468 >> 2]);
                g[i2 + (s2 * 3 << 2) >> 2] = B2;
                g[i2 + ((s2 * 3 | 0) + 1 << 2) >> 2] = C2;
                g[i2 + ((s2 * 3 | 0) + 2 << 2) >> 2] = D2;
                g[q2 + (s2 * 3 << 2) >> 2] = -B2;
                g[q2 + ((s2 * 3 | 0) + 1 << 2) >> 2] = -C2;
                g[q2 + ((s2 * 3 | 0) + 2 << 2) >> 2] = -D2;
                g[j2 + (s2 * 3 << 2) >> 2] = +g[d2 >> 2] * +g[b2 + 432 >> 2] * +g[b2 + 504 >> 2];
                if (r2 & 4 | 0)
                  c[(c[d2 + 32 >> 2] | 0) + (s2 * 3 << 2) >> 2] = c[b2 + 604 >> 2];
                g[f2 + (s2 * 3 << 2) >> 2] = 0;
                if (!((a[b2 + 552 >> 0] | 0) != 0 ? (h2 = +g[b2 + 572 >> 2], h2 >= 0) : 0))
                  h2 = 34028234663852886e22;
                g[e2 + (s2 * 3 << 2) >> 2] = h2;
                i2 = s2 << 2;
              }
            while (0);
            if (!(a[b2 + 525 >> 0] | 0))
              return;
            D2 = +g[b2 + 436 >> 2];
            B2 = D2 * (+g[b2 + 476 >> 2] * D2);
            C2 = D2 * (D2 * +g[b2 + 480 >> 2]);
            D2 = D2 * (D2 * +g[b2 + 484 >> 2]);
            q2 = c[d2 + 12 >> 2] | 0;
            s2 = c[d2 + 20 >> 2] | 0;
            g[q2 + (i2 << 2) >> 2] = B2;
            r2 = i2 + 1 | 0;
            g[q2 + (r2 << 2) >> 2] = C2;
            w2 = i2 + 2 | 0;
            g[q2 + (w2 << 2) >> 2] = D2;
            g[s2 + (i2 << 2) >> 2] = -B2;
            g[s2 + (r2 << 2) >> 2] = -C2;
            g[s2 + (w2 << 2) >> 2] = -D2;
            g[j2 + (i2 << 2) >> 2] = +g[d2 >> 2] * +g[b2 + 432 >> 2] * +g[b2 + 508 >> 2];
            if (c[b2 + 592 >> 2] & 4 | 0)
              c[(c[d2 + 32 >> 2] | 0) + (i2 << 2) >> 2] = c[b2 + 604 >> 2];
            if (!(+g[b2 + 452 >> 2] > 0)) {
              g[f2 + (i2 << 2) >> 2] = -34028234663852886e22;
              g[e2 + (i2 << 2) >> 2] = 34028234663852886e22;
              return;
            }
            f2 = f2 + (i2 << 2) | 0;
            e2 = c[d2 + 40 >> 2] | 0;
            if (+g[b2 + 508 >> 2] > 0) {
              g[f2 >> 2] = 0;
              g[e2 + (i2 << 2) >> 2] = 34028234663852886e22;
              return;
            } else {
              g[f2 >> 2] = -34028234663852886e22;
              g[e2 + (i2 << 2) >> 2] = 0;
              return;
            }
          }
          function Lo(b2, d2, e2, f2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = +f2;
            var h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0, N2 = 0, P2 = 0, Q2 = 0, R2 = 0, S2 = 0, T2 = 0, U2 = 0, V2 = 0, W2 = 0, X2 = 0, Y2 = 0, Z2 = 0, _2 = 0, $2 = 0, aa2 = 0;
            P2 = i;
            i = i + 448 | 0;
            if (!(a[b2 + 527 >> 0] | 0)) {
              i = P2;
              return;
            }
            N2 = c[b2 + 28 >> 2] | 0;
            x2 = +g[b2 + 348 >> 2];
            w2 = +g[b2 + 352 >> 2];
            D2 = +g[b2 + 356 >> 2];
            y2 = +g[N2 + 52 >> 2];
            z2 = x2 * +g[N2 + 4 >> 2] + w2 * +g[N2 + 8 >> 2] + D2 * +g[N2 + 12 >> 2] + y2;
            A2 = +g[N2 + 56 >> 2];
            B2 = x2 * +g[N2 + 20 >> 2] + w2 * +g[N2 + 24 >> 2] + D2 * +g[N2 + 28 >> 2] + A2;
            C2 = +g[N2 + 60 >> 2];
            D2 = x2 * +g[N2 + 36 >> 2] + w2 * +g[N2 + 40 >> 2] + D2 * +g[N2 + 44 >> 2] + C2;
            N2 = c[b2 + 32 >> 2] | 0;
            w2 = +g[b2 + 412 >> 2];
            x2 = +g[b2 + 416 >> 2];
            l2 = +g[b2 + 420 >> 2];
            E2 = +g[N2 + 52 >> 2];
            F2 = w2 * +g[N2 + 4 >> 2] + x2 * +g[N2 + 8 >> 2] + l2 * +g[N2 + 12 >> 2] + E2;
            G2 = +g[N2 + 56 >> 2];
            H2 = w2 * +g[N2 + 20 >> 2] + x2 * +g[N2 + 24 >> 2] + l2 * +g[N2 + 28 >> 2] + G2;
            k2 = +g[N2 + 60 >> 2];
            l2 = w2 * +g[N2 + 36 >> 2] + x2 * +g[N2 + 40 >> 2] + l2 * +g[N2 + 44 >> 2] + k2;
            if (!(a[b2 + 524 >> 0] | 0)) {
              u2 = +g[d2 + 192 >> 2] + +g[d2 + 80 >> 2];
              w2 = +g[d2 + 196 >> 2] + +g[d2 + 84 >> 2];
              q2 = +g[d2 + 200 >> 2] + +g[d2 + 88 >> 2];
              x2 = +g[e2 + 192 >> 2] + +g[e2 + 80 >> 2];
              p2 = +g[e2 + 196 >> 2] + +g[e2 + 84 >> 2];
              n2 = +g[e2 + 200 >> 2] + +g[e2 + 88 >> 2];
              m2 = +g[d2 + 176 >> 2] + +g[d2 + 64 >> 2] + ((D2 - C2) * w2 - (B2 - A2) * q2) - (+g[e2 + 176 >> 2] + +g[e2 + 64 >> 2] + ((l2 - k2) * p2 - (H2 - G2) * n2));
              n2 = +g[d2 + 180 >> 2] + +g[d2 + 68 >> 2] + ((z2 - y2) * q2 - (D2 - C2) * u2) - (+g[e2 + 180 >> 2] + +g[e2 + 68 >> 2] + ((F2 - E2) * n2 - (l2 - k2) * x2));
              p2 = +g[d2 + 184 >> 2] + +g[d2 + 72 >> 2] + ((B2 - A2) * u2 - (z2 - y2) * w2) - (+g[e2 + 184 >> 2] + +g[e2 + 72 >> 2] + ((H2 - G2) * x2 - (F2 - E2) * p2));
              o2 = (c[d2 + 240 >> 2] | 0) == 0;
              v2 = 0;
              do {
                x2 = 1 / +g[b2 + 48 + (v2 * 84 | 0) + 80 >> 2];
                r2 = b2 + 48 + (v2 * 84 | 0) | 0;
                w2 = +g[r2 >> 2];
                s2 = b2 + 48 + (v2 * 84 | 0) + 4 | 0;
                u2 = +g[s2 >> 2];
                t2 = b2 + 48 + (v2 * 84 | 0) + 8 | 0;
                q2 = +g[t2 >> 2];
                q2 = x2 * (((z2 - F2) * w2 + (B2 - H2) * u2 + (D2 - l2) * q2) * -0.30000001192092896 / f2) - x2 * (m2 * w2 + n2 * u2 + p2 * q2);
                g[b2 + 36 >> 2] = +g[b2 + 36 >> 2] + q2;
                u2 = +g[t2 >> 2];
                w2 = +g[s2 >> 2];
                x2 = +g[r2 >> 2];
                h2 = c[b2 + 28 >> 2] | 0;
                j2 = +g[h2 + 368 >> 2];
                if (!o2) {
                  S2 = ((B2 - A2) * u2 - (D2 - C2) * w2) * +g[h2 + 320 >> 2] + ((D2 - C2) * x2 - (z2 - y2) * u2) * +g[h2 + 324 >> 2] + ((z2 - y2) * w2 - (B2 - A2) * x2) * +g[h2 + 328 >> 2];
                  Q2 = ((B2 - A2) * u2 - (D2 - C2) * w2) * +g[h2 + 304 >> 2] + ((D2 - C2) * x2 - (z2 - y2) * u2) * +g[h2 + 308 >> 2] + ((z2 - y2) * w2 - (B2 - A2) * x2) * +g[h2 + 312 >> 2];
                  R2 = ((B2 - A2) * u2 - (D2 - C2) * w2) * +g[h2 + 288 >> 2] + ((D2 - C2) * x2 - (z2 - y2) * u2) * +g[h2 + 292 >> 2] + ((z2 - y2) * w2 - (B2 - A2) * x2) * +g[h2 + 296 >> 2];
                  U2 = q2 * (w2 * j2) * +g[d2 + 116 >> 2];
                  T2 = q2 * (u2 * j2) * +g[d2 + 120 >> 2];
                  g[d2 + 64 >> 2] = q2 * (x2 * j2) * +g[d2 + 112 >> 2] + +g[d2 + 64 >> 2];
                  g[d2 + 68 >> 2] = U2 + +g[d2 + 68 >> 2];
                  g[d2 + 72 >> 2] = T2 + +g[d2 + 72 >> 2];
                  Q2 = Q2 * (q2 * +g[d2 + 100 >> 2]);
                  j2 = S2 * (q2 * +g[d2 + 104 >> 2]);
                  g[d2 + 80 >> 2] = R2 * (q2 * +g[d2 + 96 >> 2]) + +g[d2 + 80 >> 2];
                  g[d2 + 84 >> 2] = Q2 + +g[d2 + 84 >> 2];
                  g[d2 + 88 >> 2] = j2 + +g[d2 + 88 >> 2];
                }
                h2 = c[b2 + 32 >> 2] | 0;
                j2 = +g[h2 + 368 >> 2];
                if (c[e2 + 240 >> 2] | 0) {
                  U2 = ((H2 - G2) * u2 - (l2 - k2) * w2) * +g[h2 + 320 >> 2] + ((l2 - k2) * x2 - (F2 - E2) * u2) * +g[h2 + 324 >> 2] + ((F2 - E2) * w2 - (H2 - G2) * x2) * +g[h2 + 328 >> 2];
                  T2 = ((H2 - G2) * u2 - (l2 - k2) * w2) * +g[h2 + 304 >> 2] + ((l2 - k2) * x2 - (F2 - E2) * u2) * +g[h2 + 308 >> 2] + ((F2 - E2) * w2 - (H2 - G2) * x2) * +g[h2 + 312 >> 2];
                  S2 = ((H2 - G2) * u2 - (l2 - k2) * w2) * +g[h2 + 288 >> 2] + ((l2 - k2) * x2 - (F2 - E2) * u2) * +g[h2 + 292 >> 2] + ((F2 - E2) * w2 - (H2 - G2) * x2) * +g[h2 + 296 >> 2];
                  Q2 = j2 * +g[s2 >> 2] * -q2 * +g[e2 + 116 >> 2];
                  R2 = j2 * +g[t2 >> 2] * -q2 * +g[e2 + 120 >> 2];
                  g[e2 + 64 >> 2] = +g[e2 + 112 >> 2] * (j2 * +g[r2 >> 2] * -q2) + +g[e2 + 64 >> 2];
                  g[e2 + 68 >> 2] = Q2 + +g[e2 + 68 >> 2];
                  g[e2 + 72 >> 2] = R2 + +g[e2 + 72 >> 2];
                  T2 = T2 * (+g[e2 + 100 >> 2] * -q2);
                  U2 = U2 * (+g[e2 + 104 >> 2] * -q2);
                  g[e2 + 80 >> 2] = S2 * (+g[e2 + 96 >> 2] * -q2) + +g[e2 + 80 >> 2];
                  g[e2 + 84 >> 2] = T2 + +g[e2 + 84 >> 2];
                  g[e2 + 88 >> 2] = U2 + +g[e2 + 88 >> 2];
                }
                v2 = v2 + 1 | 0;
              } while ((v2 | 0) != 3);
            }
            do
              if (!(a[b2 + 552 >> 0] | 0)) {
                j2 = +g[b2 + 440 >> 2];
                if (!(j2 > 11920928955078125e-23)) {
                  I2 = d2 + 80 | 0;
                  o2 = d2 + 196 | 0;
                  J2 = d2 + 84 | 0;
                  r2 = d2 + 200 | 0;
                  K2 = d2 + 88 | 0;
                  s2 = e2 + 192 | 0;
                  L2 = e2 + 80 | 0;
                  t2 = e2 + 196 | 0;
                  M2 = e2 + 84 | 0;
                  v2 = e2 + 200 | 0;
                  N2 = e2 + 88 | 0;
                  h2 = d2 + 192 | 0;
                  break;
                }
                k2 = +g[e2 + 192 >> 2] + +g[e2 + 80 >> 2] - (+g[d2 + 192 >> 2] + +g[d2 + 80 >> 2]);
                l2 = +g[e2 + 196 >> 2] + +g[e2 + 84 >> 2] - (+g[d2 + 196 >> 2] + +g[d2 + 84 >> 2]);
                m2 = +g[e2 + 200 >> 2] + +g[e2 + 88 >> 2] - (+g[d2 + 200 >> 2] + +g[d2 + 88 >> 2]);
                if (k2 * k2 + l2 * l2 + m2 * m2 > 11920928955078125e-23) {
                  C2 = 1 / +O(+(k2 * k2 + l2 * l2 + m2 * m2));
                  h2 = c[b2 + 28 >> 2] | 0;
                  p2 = +g[h2 + 288 >> 2];
                  q2 = +g[h2 + 304 >> 2];
                  u2 = +g[h2 + 320 >> 2];
                  w2 = +g[h2 + 292 >> 2];
                  x2 = +g[h2 + 308 >> 2];
                  y2 = +g[h2 + 324 >> 2];
                  z2 = +g[h2 + 296 >> 2];
                  A2 = +g[h2 + 312 >> 2];
                  B2 = +g[h2 + 328 >> 2];
                  h2 = c[b2 + 32 >> 2] | 0;
                  j2 = j2 * (1 / (k2 * C2 * (p2 * (k2 * C2) + l2 * C2 * q2 + m2 * C2 * u2) + l2 * C2 * (k2 * C2 * w2 + l2 * C2 * x2 + m2 * C2 * y2) + m2 * C2 * (k2 * C2 * z2 + l2 * C2 * A2 + m2 * C2 * B2) + (k2 * C2 * (k2 * C2 * +g[h2 + 288 >> 2] + l2 * C2 * +g[h2 + 304 >> 2] + m2 * C2 * +g[h2 + 320 >> 2]) + l2 * C2 * (k2 * C2 * +g[h2 + 292 >> 2] + l2 * C2 * +g[h2 + 308 >> 2] + m2 * C2 * +g[h2 + 324 >> 2]) + m2 * C2 * (k2 * C2 * +g[h2 + 296 >> 2] + l2 * C2 * +g[h2 + 312 >> 2] + m2 * C2 * +g[h2 + 328 >> 2]))));
                  C2 = +O(+(m2 * j2 * (m2 * j2) + (k2 * j2 * (k2 * j2) + l2 * j2 * (l2 * j2))));
                  n2 = 1 / C2 * (k2 * j2);
                  k2 = 1 / C2 * (l2 * j2);
                  j2 = 1 / C2 * (m2 * j2);
                  if (c[d2 + 240 >> 2] | 0) {
                    U2 = C2 * 0 * +g[d2 + 116 >> 2];
                    T2 = C2 * 0 * +g[d2 + 120 >> 2];
                    g[d2 + 64 >> 2] = C2 * 0 * +g[d2 + 112 >> 2] + +g[d2 + 64 >> 2];
                    g[d2 + 68 >> 2] = U2 + +g[d2 + 68 >> 2];
                    g[d2 + 72 >> 2] = T2 + +g[d2 + 72 >> 2];
                    T2 = (n2 * q2 + k2 * x2 + j2 * A2) * (C2 * +g[d2 + 100 >> 2]);
                    U2 = (n2 * u2 + k2 * y2 + j2 * B2) * (C2 * +g[d2 + 104 >> 2]);
                    g[d2 + 80 >> 2] = (n2 * p2 + k2 * w2 + j2 * z2) * (C2 * +g[d2 + 96 >> 2]) + +g[d2 + 80 >> 2];
                    g[d2 + 84 >> 2] = T2 + +g[d2 + 84 >> 2];
                    g[d2 + 88 >> 2] = U2 + +g[d2 + 88 >> 2];
                    h2 = c[b2 + 32 >> 2] | 0;
                  }
                  if (c[e2 + 240 >> 2] | 0) {
                    U2 = n2 * +g[h2 + 320 >> 2] + k2 * +g[h2 + 324 >> 2] + j2 * +g[h2 + 328 >> 2];
                    T2 = n2 * +g[h2 + 304 >> 2] + k2 * +g[h2 + 308 >> 2] + j2 * +g[h2 + 312 >> 2];
                    S2 = n2 * +g[h2 + 288 >> 2] + k2 * +g[h2 + 292 >> 2] + j2 * +g[h2 + 296 >> 2];
                    Q2 = C2 * -0 * +g[e2 + 116 >> 2];
                    R2 = C2 * -0 * +g[e2 + 120 >> 2];
                    g[e2 + 64 >> 2] = C2 * -0 * +g[e2 + 112 >> 2] + +g[e2 + 64 >> 2];
                    g[e2 + 68 >> 2] = Q2 + +g[e2 + 68 >> 2];
                    g[e2 + 72 >> 2] = R2 + +g[e2 + 72 >> 2];
                    T2 = T2 * (+g[e2 + 100 >> 2] * -C2);
                    U2 = U2 * (+g[e2 + 104 >> 2] * -C2);
                    g[e2 + 80 >> 2] = S2 * (+g[e2 + 96 >> 2] * -C2) + +g[e2 + 80 >> 2];
                    g[e2 + 84 >> 2] = T2 + +g[e2 + 84 >> 2];
                    g[e2 + 88 >> 2] = U2 + +g[e2 + 88 >> 2];
                    I2 = d2 + 80 | 0;
                    o2 = d2 + 196 | 0;
                    J2 = d2 + 84 | 0;
                    r2 = d2 + 200 | 0;
                    K2 = d2 + 88 | 0;
                    s2 = e2 + 192 | 0;
                    L2 = e2 + 80 | 0;
                    t2 = e2 + 196 | 0;
                    M2 = e2 + 84 | 0;
                    v2 = e2 + 200 | 0;
                    N2 = e2 + 88 | 0;
                    h2 = d2 + 192 | 0;
                  } else {
                    I2 = d2 + 80 | 0;
                    o2 = d2 + 196 | 0;
                    J2 = d2 + 84 | 0;
                    r2 = d2 + 200 | 0;
                    K2 = d2 + 88 | 0;
                    s2 = e2 + 192 | 0;
                    L2 = e2 + 80 | 0;
                    t2 = e2 + 196 | 0;
                    M2 = e2 + 84 | 0;
                    v2 = e2 + 200 | 0;
                    N2 = e2 + 88 | 0;
                    h2 = d2 + 192 | 0;
                  }
                } else {
                  I2 = d2 + 80 | 0;
                  o2 = d2 + 196 | 0;
                  J2 = d2 + 84 | 0;
                  r2 = d2 + 200 | 0;
                  K2 = d2 + 88 | 0;
                  s2 = e2 + 192 | 0;
                  L2 = e2 + 80 | 0;
                  t2 = e2 + 196 | 0;
                  M2 = e2 + 84 | 0;
                  v2 = e2 + 200 | 0;
                  N2 = e2 + 88 | 0;
                  h2 = d2 + 192 | 0;
                }
              } else {
                M2 = c[b2 + 28 >> 2] | 0;
                c[P2 + 352 >> 2] = c[M2 + 4 >> 2];
                c[P2 + 352 + 4 >> 2] = c[M2 + 4 + 4 >> 2];
                c[P2 + 352 + 8 >> 2] = c[M2 + 4 + 8 >> 2];
                c[P2 + 352 + 12 >> 2] = c[M2 + 4 + 12 >> 2];
                c[P2 + 352 + 16 >> 2] = c[M2 + 20 >> 2];
                c[P2 + 352 + 16 + 4 >> 2] = c[M2 + 20 + 4 >> 2];
                c[P2 + 352 + 16 + 8 >> 2] = c[M2 + 20 + 8 >> 2];
                c[P2 + 352 + 16 + 12 >> 2] = c[M2 + 20 + 12 >> 2];
                c[P2 + 352 + 32 >> 2] = c[M2 + 36 >> 2];
                c[P2 + 352 + 32 + 4 >> 2] = c[M2 + 36 + 4 >> 2];
                c[P2 + 352 + 32 + 8 >> 2] = c[M2 + 36 + 8 >> 2];
                c[P2 + 352 + 32 + 12 >> 2] = c[M2 + 36 + 12 >> 2];
                c[P2 + 352 + 48 >> 2] = c[M2 + 52 >> 2];
                c[P2 + 352 + 48 + 4 >> 2] = c[M2 + 52 + 4 >> 2];
                c[P2 + 352 + 48 + 8 >> 2] = c[M2 + 52 + 8 >> 2];
                c[P2 + 352 + 48 + 12 >> 2] = c[M2 + 52 + 12 >> 2];
                M2 = c[b2 + 32 >> 2] | 0;
                c[P2 + 288 >> 2] = c[M2 + 4 >> 2];
                c[P2 + 288 + 4 >> 2] = c[M2 + 4 + 4 >> 2];
                c[P2 + 288 + 8 >> 2] = c[M2 + 4 + 8 >> 2];
                c[P2 + 288 + 12 >> 2] = c[M2 + 4 + 12 >> 2];
                c[P2 + 288 + 16 >> 2] = c[M2 + 20 >> 2];
                c[P2 + 288 + 16 + 4 >> 2] = c[M2 + 20 + 4 >> 2];
                c[P2 + 288 + 16 + 8 >> 2] = c[M2 + 20 + 8 >> 2];
                c[P2 + 288 + 16 + 12 >> 2] = c[M2 + 20 + 12 >> 2];
                c[P2 + 288 + 32 >> 2] = c[M2 + 36 >> 2];
                c[P2 + 288 + 32 + 4 >> 2] = c[M2 + 36 + 4 >> 2];
                c[P2 + 288 + 32 + 8 >> 2] = c[M2 + 36 + 8 >> 2];
                c[P2 + 288 + 32 + 12 >> 2] = c[M2 + 36 + 12 >> 2];
                c[P2 + 288 + 48 >> 2] = c[M2 + 52 >> 2];
                c[P2 + 288 + 48 + 4 >> 2] = c[M2 + 52 + 4 >> 2];
                c[P2 + 288 + 48 + 8 >> 2] = c[M2 + 52 + 8 >> 2];
                c[P2 + 288 + 48 + 12 >> 2] = c[M2 + 52 + 12 >> 2];
                S2 = +g[d2 + 196 >> 2] + +g[d2 + 84 >> 2];
                u2 = +g[d2 + 200 >> 2] + +g[d2 + 88 >> 2];
                g[P2 + 272 >> 2] = +g[d2 + 192 >> 2] + +g[d2 + 80 >> 2];
                g[P2 + 272 + 4 >> 2] = S2;
                g[P2 + 272 + 8 >> 2] = u2;
                g[P2 + 272 + 12 >> 2] = 0;
                u2 = +g[e2 + 196 >> 2] + +g[e2 + 84 >> 2];
                S2 = +g[e2 + 200 >> 2] + +g[e2 + 88 >> 2];
                g[P2 + 256 >> 2] = +g[e2 + 192 >> 2] + +g[e2 + 80 >> 2];
                g[P2 + 256 + 4 >> 2] = u2;
                g[P2 + 256 + 8 >> 2] = S2;
                g[P2 + 256 + 12 >> 2] = 0;
                c[P2 + 192 >> 2] = 1065353216;
                M2 = P2 + 192 + 4 | 0;
                c[M2 >> 2] = 0;
                c[M2 + 4 >> 2] = 0;
                c[M2 + 8 >> 2] = 0;
                c[M2 + 12 >> 2] = 0;
                c[P2 + 192 + 20 >> 2] = 1065353216;
                N2 = P2 + 192 + 24 | 0;
                c[N2 >> 2] = 0;
                c[N2 + 4 >> 2] = 0;
                c[N2 + 8 >> 2] = 0;
                c[N2 + 12 >> 2] = 0;
                c[P2 + 192 + 40 >> 2] = 1065353216;
                K2 = P2 + 192 + 44 | 0;
                c[K2 >> 2] = 0;
                c[K2 + 4 >> 2] = 0;
                c[K2 + 8 >> 2] = 0;
                c[K2 + 12 >> 2] = 0;
                c[K2 + 16 >> 2] = 0;
                xn(P2 + 352 | 0, 0, 0, 0, P2 + 272 | 0, f2, P2 + 192 | 0);
                c[P2 + 128 >> 2] = 1065353216;
                K2 = P2 + 128 + 4 | 0;
                c[K2 >> 2] = 0;
                c[K2 + 4 >> 2] = 0;
                c[K2 + 8 >> 2] = 0;
                c[K2 + 12 >> 2] = 0;
                c[P2 + 128 + 20 >> 2] = 1065353216;
                L2 = P2 + 128 + 24 | 0;
                c[L2 >> 2] = 0;
                c[L2 + 4 >> 2] = 0;
                c[L2 + 8 >> 2] = 0;
                c[L2 + 12 >> 2] = 0;
                c[P2 + 128 + 40 >> 2] = 1065353216;
                J2 = P2 + 128 + 44 | 0;
                c[J2 >> 2] = 0;
                c[J2 + 4 >> 2] = 0;
                c[J2 + 8 >> 2] = 0;
                c[J2 + 12 >> 2] = 0;
                c[J2 + 16 >> 2] = 0;
                xn(P2 + 288 | 0, 0, 0, 0, P2 + 256 | 0, f2, P2 + 128 | 0);
                S2 = +g[b2 + 556 >> 2];
                u2 = +g[b2 + 560 >> 2];
                T2 = +g[b2 + 564 >> 2];
                w2 = +g[b2 + 568 >> 2];
                F2 = S2 * (2 / (S2 * S2 + u2 * u2 + T2 * T2 + w2 * w2));
                A2 = u2 * (2 / (S2 * S2 + u2 * u2 + T2 * T2 + w2 * w2));
                G2 = T2 * (2 / (S2 * S2 + u2 * u2 + T2 * T2 + w2 * w2));
                W2 = +g[b2 + 364 >> 2];
                V2 = +g[b2 + 368 >> 2];
                Z2 = +g[b2 + 372 >> 2];
                k2 = Z2 * (S2 * G2 - w2 * A2) + (V2 * (S2 * A2 + w2 * G2) + W2 * (1 - (u2 * A2 + T2 * G2)));
                l2 = Z2 * (u2 * G2 + w2 * F2) + (W2 * (S2 * A2 - w2 * G2) + V2 * (1 - (S2 * F2 + T2 * G2)));
                m2 = W2 * (S2 * G2 + w2 * A2) + V2 * (u2 * G2 - w2 * F2) + Z2 * (1 - (S2 * F2 + u2 * A2));
                j2 = +g[b2 + 380 >> 2];
                E2 = +g[b2 + 384 >> 2];
                B2 = +g[b2 + 388 >> 2];
                n2 = (S2 * G2 - w2 * A2) * B2 + (E2 * (S2 * A2 + w2 * G2) + j2 * (1 - (u2 * A2 + T2 * G2)));
                p2 = (u2 * G2 + w2 * F2) * B2 + (j2 * (S2 * A2 - w2 * G2) + E2 * (1 - (S2 * F2 + T2 * G2)));
                q2 = j2 * (S2 * G2 + w2 * A2) + E2 * (u2 * G2 - w2 * F2) + B2 * (1 - (S2 * F2 + u2 * A2));
                Q2 = +g[b2 + 396 >> 2];
                C2 = +g[b2 + 400 >> 2];
                z2 = +g[b2 + 404 >> 2];
                R2 = (1 - (u2 * A2 + T2 * G2)) * Q2 + (S2 * A2 + w2 * G2) * C2 + (S2 * G2 - w2 * A2) * z2;
                T2 = (S2 * A2 - w2 * G2) * Q2 + (1 - (S2 * F2 + T2 * G2)) * C2 + (u2 * G2 + w2 * F2) * z2;
                A2 = (S2 * G2 + w2 * A2) * Q2 + (u2 * G2 - w2 * F2) * C2 + (1 - (S2 * F2 + u2 * A2)) * z2;
                u2 = +g[b2 + 300 >> 2];
                F2 = +g[b2 + 316 >> 2];
                S2 = +g[b2 + 332 >> 2];
                w2 = +g[b2 + 304 >> 2];
                G2 = +g[b2 + 320 >> 2];
                U2 = +g[b2 + 336 >> 2];
                D2 = +g[b2 + 308 >> 2];
                H2 = +g[b2 + 324 >> 2];
                y2 = +g[b2 + 340 >> 2];
                x2 = -+g[b2 + 348 >> 2];
                aa2 = -+g[b2 + 352 >> 2];
                Y2 = -+g[b2 + 356 >> 2];
                Z2 = W2 * 0 + V2 * 0 + Z2 * 0 + +g[b2 + 412 >> 2] + (m2 * (D2 * x2 + H2 * aa2 + y2 * Y2) + (k2 * (u2 * x2 + F2 * aa2 + S2 * Y2) + l2 * (w2 * x2 + G2 * aa2 + U2 * Y2)));
                B2 = j2 * 0 + E2 * 0 + B2 * 0 + +g[b2 + 416 >> 2] + (q2 * (D2 * x2 + H2 * aa2 + y2 * Y2) + (n2 * (u2 * x2 + F2 * aa2 + S2 * Y2) + p2 * (w2 * x2 + G2 * aa2 + U2 * Y2)));
                Y2 = Q2 * 0 + C2 * 0 + z2 * 0 + +g[b2 + 420 >> 2] + (A2 * (D2 * x2 + H2 * aa2 + y2 * Y2) + (R2 * (u2 * x2 + F2 * aa2 + S2 * Y2) + T2 * (w2 * x2 + G2 * aa2 + U2 * Y2)));
                aa2 = +g[P2 + 128 >> 2];
                x2 = +g[K2 >> 2];
                z2 = +g[P2 + 128 + 8 >> 2];
                C2 = +g[P2 + 128 + 16 >> 2];
                Q2 = +g[P2 + 128 + 20 >> 2];
                E2 = +g[L2 >> 2];
                j2 = +g[P2 + 128 + 32 >> 2];
                V2 = +g[P2 + 128 + 36 >> 2];
                W2 = +g[P2 + 128 + 40 >> 2];
                X2 = z2 * Y2 + (aa2 * Z2 + x2 * B2) + +g[P2 + 128 + 48 >> 2];
                _2 = C2 * Z2 + B2 * Q2 + Y2 * E2 + +g[P2 + 128 + 52 >> 2];
                $2 = Z2 * j2 + B2 * V2 + Y2 * W2 + +g[P2 + 128 + 56 >> 2];
                g[P2 + 64 >> 2] = (k2 * u2 + l2 * w2 + m2 * D2) * aa2 + (n2 * u2 + p2 * w2 + q2 * D2) * x2 + (R2 * u2 + T2 * w2 + A2 * D2) * z2;
                g[P2 + 64 + 4 >> 2] = (k2 * F2 + l2 * G2 + m2 * H2) * aa2 + (n2 * F2 + p2 * G2 + q2 * H2) * x2 + (R2 * F2 + T2 * G2 + A2 * H2) * z2;
                g[P2 + 64 + 8 >> 2] = (k2 * S2 + l2 * U2 + m2 * y2) * aa2 + (n2 * S2 + p2 * U2 + q2 * y2) * x2 + (R2 * S2 + T2 * U2 + A2 * y2) * z2;
                g[P2 + 64 + 12 >> 2] = 0;
                g[P2 + 64 + 16 >> 2] = (k2 * u2 + l2 * w2 + m2 * D2) * C2 + (n2 * u2 + p2 * w2 + q2 * D2) * Q2 + (R2 * u2 + T2 * w2 + A2 * D2) * E2;
                g[P2 + 64 + 20 >> 2] = (k2 * F2 + l2 * G2 + m2 * H2) * C2 + (n2 * F2 + p2 * G2 + q2 * H2) * Q2 + (R2 * F2 + T2 * G2 + A2 * H2) * E2;
                g[P2 + 64 + 24 >> 2] = (k2 * S2 + l2 * U2 + m2 * y2) * C2 + (n2 * S2 + p2 * U2 + q2 * y2) * Q2 + (R2 * S2 + T2 * U2 + A2 * y2) * E2;
                g[P2 + 64 + 28 >> 2] = 0;
                g[P2 + 64 + 32 >> 2] = (k2 * u2 + l2 * w2 + m2 * D2) * j2 + (n2 * u2 + p2 * w2 + q2 * D2) * V2 + (R2 * u2 + T2 * w2 + A2 * D2) * W2;
                g[P2 + 64 + 36 >> 2] = (k2 * F2 + l2 * G2 + m2 * H2) * j2 + (n2 * F2 + p2 * G2 + q2 * H2) * V2 + (R2 * F2 + T2 * G2 + A2 * H2) * W2;
                g[P2 + 64 + 40 >> 2] = (k2 * S2 + l2 * U2 + m2 * y2) * j2 + (n2 * S2 + p2 * U2 + q2 * y2) * V2 + (R2 * S2 + T2 * U2 + A2 * y2) * W2;
                g[P2 + 64 + 44 >> 2] = 0;
                g[P2 + 64 + 48 >> 2] = X2;
                g[P2 + 64 + 52 >> 2] = _2;
                g[P2 + 64 + 56 >> 2] = $2;
                g[P2 + 64 + 60 >> 2] = 0;
                $2 = (R2 * u2 + T2 * w2 + A2 * D2) * -Y2 + ((k2 * u2 + l2 * w2 + m2 * D2) * -Z2 + (n2 * u2 + p2 * w2 + q2 * D2) * -B2);
                _2 = (R2 * F2 + T2 * G2 + A2 * H2) * -Y2 + ((k2 * F2 + l2 * G2 + m2 * H2) * -Z2 + (n2 * F2 + p2 * G2 + q2 * H2) * -B2);
                B2 = (R2 * S2 + T2 * U2 + A2 * y2) * -Y2 + ((k2 * S2 + l2 * U2 + m2 * y2) * -Z2 + (n2 * S2 + p2 * U2 + q2 * y2) * -B2);
                Z2 = +g[P2 + 192 >> 2];
                Y2 = +g[M2 >> 2];
                X2 = +g[P2 + 192 + 8 >> 2];
                W2 = +g[P2 + 192 + 16 >> 2];
                V2 = +g[P2 + 192 + 20 >> 2];
                j2 = +g[N2 >> 2];
                E2 = +g[P2 + 192 + 32 >> 2];
                Q2 = +g[P2 + 192 + 36 >> 2];
                C2 = +g[P2 + 192 + 40 >> 2];
                z2 = $2 * Z2 + _2 * Y2 + B2 * X2 + +g[P2 + 192 + 48 >> 2];
                x2 = $2 * W2 + _2 * V2 + B2 * j2 + +g[P2 + 192 + 52 >> 2];
                B2 = $2 * E2 + _2 * Q2 + B2 * C2 + +g[P2 + 192 + 56 >> 2];
                g[P2 >> 2] = (k2 * u2 + l2 * w2 + m2 * D2) * Z2 + (k2 * F2 + l2 * G2 + m2 * H2) * Y2 + (k2 * S2 + l2 * U2 + m2 * y2) * X2;
                g[P2 + 4 >> 2] = (n2 * u2 + p2 * w2 + q2 * D2) * Z2 + (n2 * F2 + p2 * G2 + q2 * H2) * Y2 + (n2 * S2 + p2 * U2 + q2 * y2) * X2;
                g[P2 + 8 >> 2] = (R2 * u2 + T2 * w2 + A2 * D2) * Z2 + (R2 * F2 + T2 * G2 + A2 * H2) * Y2 + (R2 * S2 + T2 * U2 + A2 * y2) * X2;
                g[P2 + 12 >> 2] = 0;
                g[P2 + 16 >> 2] = (k2 * u2 + l2 * w2 + m2 * D2) * W2 + (k2 * F2 + l2 * G2 + m2 * H2) * V2 + (k2 * S2 + l2 * U2 + m2 * y2) * j2;
                g[P2 + 20 >> 2] = (n2 * u2 + p2 * w2 + q2 * D2) * W2 + (n2 * F2 + p2 * G2 + q2 * H2) * V2 + (n2 * S2 + p2 * U2 + q2 * y2) * j2;
                g[P2 + 24 >> 2] = (R2 * u2 + T2 * w2 + A2 * D2) * W2 + (R2 * F2 + T2 * G2 + A2 * H2) * V2 + (R2 * S2 + T2 * U2 + A2 * y2) * j2;
                g[P2 + 28 >> 2] = 0;
                g[P2 + 32 >> 2] = (k2 * u2 + l2 * w2 + m2 * D2) * E2 + (k2 * F2 + l2 * G2 + m2 * H2) * Q2 + (k2 * S2 + l2 * U2 + m2 * y2) * C2;
                g[P2 + 36 >> 2] = (n2 * u2 + p2 * w2 + q2 * D2) * E2 + (n2 * F2 + p2 * G2 + q2 * H2) * Q2 + (n2 * S2 + p2 * U2 + q2 * y2) * C2;
                g[P2 + 40 >> 2] = (R2 * u2 + T2 * w2 + A2 * D2) * E2 + (R2 * F2 + T2 * G2 + A2 * H2) * Q2 + (R2 * S2 + T2 * U2 + A2 * y2) * C2;
                g[P2 + 44 >> 2] = 0;
                g[P2 + 48 >> 2] = z2;
                g[P2 + 52 >> 2] = x2;
                g[P2 + 56 >> 2] = B2;
                g[P2 + 60 >> 2] = 0;
                Zf(P2 + 352 | 0, P2 + 64 | 0, P2 + 424 | 0, P2 + 416 | 0);
                B2 = +g[P2 + 416 >> 2];
                x2 = 1 / f2 * (+g[P2 + 424 >> 2] * B2);
                z2 = 1 / f2 * (B2 * +g[P2 + 424 + 4 >> 2]);
                B2 = 1 / f2 * (B2 * +g[P2 + 424 + 8 >> 2]);
                Zf(P2 + 288 | 0, P2, P2 + 424 | 0, P2 + 416 | 0);
                C2 = +g[P2 + 416 >> 2];
                x2 = x2 - +g[P2 + 272 >> 2];
                z2 = z2 - +g[P2 + 272 + 4 >> 2];
                B2 = B2 - +g[P2 + 272 + 8 >> 2];
                y2 = 1 / f2 * (+g[P2 + 424 >> 2] * C2) - +g[P2 + 256 >> 2];
                A2 = 1 / f2 * (C2 * +g[P2 + 424 + 4 >> 2]) - +g[P2 + 256 + 4 >> 2];
                C2 = 1 / f2 * (C2 * +g[P2 + 424 + 8 >> 2]) - +g[P2 + 256 + 8 >> 2];
                if (x2 * x2 + z2 * z2 + B2 * B2 > 11920928955078125e-23) {
                  q2 = 1 / +O(+(x2 * x2 + z2 * z2 + B2 * B2));
                  N2 = c[b2 + 28 >> 2] | 0;
                  j2 = x2 * q2;
                  l2 = z2 * q2;
                  n2 = B2 * q2;
                  q2 = x2 * q2 * (+g[N2 + 288 >> 2] * (x2 * q2) + z2 * q2 * +g[N2 + 304 >> 2] + B2 * q2 * +g[N2 + 320 >> 2]) + z2 * q2 * (x2 * q2 * +g[N2 + 292 >> 2] + z2 * q2 * +g[N2 + 308 >> 2] + B2 * q2 * +g[N2 + 324 >> 2]) + B2 * q2 * (x2 * q2 * +g[N2 + 296 >> 2] + z2 * q2 * +g[N2 + 312 >> 2] + B2 * q2 * +g[N2 + 328 >> 2]);
                } else {
                  j2 = 0;
                  l2 = 0;
                  n2 = 0;
                  q2 = 0;
                }
                if (y2 * y2 + A2 * A2 + C2 * C2 > 11920928955078125e-23) {
                  u2 = 1 / +O(+(y2 * y2 + A2 * A2 + C2 * C2));
                  N2 = c[b2 + 32 >> 2] | 0;
                  k2 = y2 * u2;
                  m2 = A2 * u2;
                  p2 = C2 * u2;
                  u2 = y2 * u2 * (+g[N2 + 288 >> 2] * (y2 * u2) + A2 * u2 * +g[N2 + 304 >> 2] + C2 * u2 * +g[N2 + 320 >> 2]) + A2 * u2 * (y2 * u2 * +g[N2 + 292 >> 2] + A2 * u2 * +g[N2 + 308 >> 2] + C2 * u2 * +g[N2 + 324 >> 2]) + C2 * u2 * (y2 * u2 * +g[N2 + 296 >> 2] + A2 * u2 * +g[N2 + 312 >> 2] + C2 * u2 * +g[N2 + 328 >> 2]);
                } else {
                  k2 = 0;
                  m2 = 0;
                  p2 = 0;
                  u2 = 0;
                }
                w2 = q2 * j2 + u2 * k2;
                k2 = q2 * l2 + u2 * m2;
                j2 = q2 * n2 + u2 * p2;
                if (w2 * w2 + k2 * k2 + j2 * j2 > 11920928955078125e-23) {
                  n2 = 1 / +O(+(w2 * w2 + k2 * k2 + j2 * j2));
                  o2 = c[b2 + 28 >> 2] | 0;
                  l2 = w2 * n2 * (+g[o2 + 288 >> 2] * (w2 * n2) + k2 * n2 * +g[o2 + 304 >> 2] + j2 * n2 * +g[o2 + 320 >> 2]) + k2 * n2 * (w2 * n2 * +g[o2 + 292 >> 2] + k2 * n2 * +g[o2 + 308 >> 2] + j2 * n2 * +g[o2 + 324 >> 2]) + j2 * n2 * (w2 * n2 * +g[o2 + 296 >> 2] + k2 * n2 * +g[o2 + 312 >> 2] + j2 * n2 * +g[o2 + 328 >> 2]);
                  h2 = c[b2 + 32 >> 2] | 0;
                  n2 = w2 * n2 * (w2 * n2 * +g[h2 + 288 >> 2] + k2 * n2 * +g[h2 + 304 >> 2] + j2 * n2 * +g[h2 + 320 >> 2]) + k2 * n2 * (w2 * n2 * +g[h2 + 292 >> 2] + k2 * n2 * +g[h2 + 308 >> 2] + j2 * n2 * +g[h2 + 324 >> 2]) + j2 * n2 * (w2 * n2 * +g[h2 + 296 >> 2] + k2 * n2 * +g[h2 + 312 >> 2] + j2 * n2 * +g[h2 + 328 >> 2]);
                  k2 = (x2 * l2 - y2 * n2) * (1 / ((l2 + n2) * (l2 + n2)));
                  u2 = (z2 * l2 - A2 * n2) * (1 / ((l2 + n2) * (l2 + n2)));
                  n2 = (B2 * l2 - C2 * n2) * (1 / ((l2 + n2) * (l2 + n2)));
                  j2 = +g[b2 + 572 >> 2];
                  if (!(j2 >= 0))
                    j2 = u2;
                  else {
                    l2 = (a[b2 + 553 >> 0] | 0) == 0 ? j2 : j2 / l2;
                    m2 = +g[b2 + 576 >> 2];
                    p2 = +g[b2 + 580 >> 2];
                    q2 = +g[b2 + 584 >> 2];
                    j2 = +O(+((k2 + m2) * (k2 + m2) + (u2 + p2) * (u2 + p2) + (n2 + q2) * (n2 + q2)));
                    if (j2 > l2) {
                      k2 = l2 * ((k2 + m2) * (1 / j2)) - m2;
                      n2 = l2 * ((n2 + q2) * (1 / j2)) - q2;
                      j2 = l2 * ((u2 + p2) * (1 / j2)) - p2;
                    } else
                      j2 = u2;
                    g[b2 + 576 >> 2] = k2 + m2;
                    g[b2 + 580 >> 2] = j2 + p2;
                    g[b2 + 584 >> 2] = n2 + q2;
                  }
                  m2 = +O(+(k2 * k2 + j2 * j2 + n2 * n2));
                  l2 = k2 * (1 / m2);
                  k2 = j2 * (1 / m2);
                  j2 = n2 * (1 / m2);
                  if (c[d2 + 240 >> 2] | 0) {
                    aa2 = l2 * +g[o2 + 320 >> 2] + k2 * +g[o2 + 324 >> 2] + j2 * +g[o2 + 328 >> 2];
                    $2 = l2 * +g[o2 + 304 >> 2] + k2 * +g[o2 + 308 >> 2] + j2 * +g[o2 + 312 >> 2];
                    _2 = l2 * +g[o2 + 288 >> 2] + k2 * +g[o2 + 292 >> 2] + j2 * +g[o2 + 296 >> 2];
                    Y2 = m2 * 0 * +g[d2 + 116 >> 2];
                    Z2 = m2 * 0 * +g[d2 + 120 >> 2];
                    g[d2 + 64 >> 2] = m2 * 0 * +g[d2 + 112 >> 2] + +g[d2 + 64 >> 2];
                    g[d2 + 68 >> 2] = Y2 + +g[d2 + 68 >> 2];
                    g[d2 + 72 >> 2] = Z2 + +g[d2 + 72 >> 2];
                    $2 = $2 * (m2 * +g[d2 + 100 >> 2]);
                    aa2 = aa2 * (m2 * +g[d2 + 104 >> 2]);
                    g[d2 + 80 >> 2] = _2 * (m2 * +g[d2 + 96 >> 2]) + +g[d2 + 80 >> 2];
                    g[d2 + 84 >> 2] = $2 + +g[d2 + 84 >> 2];
                    g[d2 + 88 >> 2] = aa2 + +g[d2 + 88 >> 2];
                    h2 = c[b2 + 32 >> 2] | 0;
                  }
                  if (c[e2 + 240 >> 2] | 0) {
                    aa2 = l2 * +g[h2 + 320 >> 2] + k2 * +g[h2 + 324 >> 2] + j2 * +g[h2 + 328 >> 2];
                    $2 = l2 * +g[h2 + 304 >> 2] + k2 * +g[h2 + 308 >> 2] + j2 * +g[h2 + 312 >> 2];
                    _2 = l2 * +g[h2 + 288 >> 2] + k2 * +g[h2 + 292 >> 2] + j2 * +g[h2 + 296 >> 2];
                    Y2 = m2 * -0 * +g[e2 + 116 >> 2];
                    Z2 = m2 * -0 * +g[e2 + 120 >> 2];
                    g[e2 + 64 >> 2] = m2 * -0 * +g[e2 + 112 >> 2] + +g[e2 + 64 >> 2];
                    g[e2 + 68 >> 2] = Y2 + +g[e2 + 68 >> 2];
                    g[e2 + 72 >> 2] = Z2 + +g[e2 + 72 >> 2];
                    $2 = $2 * (+g[e2 + 100 >> 2] * -m2);
                    aa2 = aa2 * (+g[e2 + 104 >> 2] * -m2);
                    g[e2 + 80 >> 2] = _2 * (+g[e2 + 96 >> 2] * -m2) + +g[e2 + 80 >> 2];
                    g[e2 + 84 >> 2] = $2 + +g[e2 + 84 >> 2];
                    g[e2 + 88 >> 2] = aa2 + +g[e2 + 88 >> 2];
                  }
                }
                I2 = d2 + 80 | 0;
                o2 = d2 + 196 | 0;
                J2 = d2 + 84 | 0;
                r2 = d2 + 200 | 0;
                K2 = d2 + 88 | 0;
                s2 = e2 + 192 | 0;
                L2 = e2 + 80 | 0;
                t2 = e2 + 196 | 0;
                M2 = e2 + 84 | 0;
                v2 = e2 + 200 | 0;
                N2 = e2 + 88 | 0;
                h2 = d2 + 192 | 0;
              }
            while (0);
            z2 = +g[h2 >> 2] + +g[I2 >> 2];
            y2 = +g[o2 >> 2] + +g[J2 >> 2];
            x2 = +g[r2 >> 2] + +g[K2 >> 2];
            w2 = +g[s2 >> 2] + +g[L2 >> 2];
            u2 = +g[t2 >> 2] + +g[M2 >> 2];
            q2 = +g[v2 >> 2] + +g[N2 >> 2];
            if (a[b2 + 526 >> 0] | 0) {
              k2 = +g[b2 + 528 >> 2];
              j2 = k2 * +g[b2 + 504 >> 2] * +g[b2 + 432 >> 2] / f2;
              l2 = +g[b2 + 460 >> 2];
              m2 = +g[b2 + 464 >> 2];
              n2 = +g[b2 + 468 >> 2];
              if ((w2 - z2) * l2 + (u2 - y2) * m2 + (q2 - x2) * n2 > 0)
                j2 = j2 + k2 * ((w2 - z2) * l2 + (u2 - y2) * m2 + (q2 - x2) * n2) * +g[b2 + 436 >> 2];
              $2 = +g[b2 + 516 >> 2];
              _2 = $2 + j2 * +g[b2 + 492 >> 2];
              _2 = _2 > 0 ? _2 : 0;
              g[b2 + 516 >> 2] = _2;
              Z2 = +g[b2 + 536 >> 2];
              k2 = +g[b2 + 540 >> 2];
              aa2 = +g[b2 + 544 >> 2];
              j2 = l2 * (_2 - $2) * Z2 + m2 * (_2 - $2) * k2 + (_2 - $2) * n2 * aa2;
              p2 = +O(+(((_2 - $2) * n2 - aa2 * j2) * ((_2 - $2) * n2 - aa2 * j2) + ((l2 * (_2 - $2) - Z2 * j2) * (l2 * (_2 - $2) - Z2 * j2) + (m2 * (_2 - $2) - k2 * j2) * (m2 * (_2 - $2) - k2 * j2))));
              l2 = 1 / p2 * (l2 * (_2 - $2) - Z2 * j2);
              k2 = 1 / p2 * (m2 * (_2 - $2) - k2 * j2);
              j2 = 1 / p2 * ((_2 - $2) * n2 - aa2 * j2);
              h2 = c[b2 + 28 >> 2] | 0;
              if (c[d2 + 240 >> 2] | 0) {
                aa2 = l2 * +g[h2 + 320 >> 2] + k2 * +g[h2 + 324 >> 2] + j2 * +g[h2 + 328 >> 2];
                $2 = l2 * +g[h2 + 304 >> 2] + k2 * +g[h2 + 308 >> 2] + j2 * +g[h2 + 312 >> 2];
                _2 = l2 * +g[h2 + 288 >> 2] + k2 * +g[h2 + 292 >> 2] + j2 * +g[h2 + 296 >> 2];
                Y2 = p2 * 0 * +g[d2 + 116 >> 2];
                Z2 = p2 * 0 * +g[d2 + 120 >> 2];
                g[d2 + 64 >> 2] = p2 * 0 * +g[d2 + 112 >> 2] + +g[d2 + 64 >> 2];
                g[d2 + 68 >> 2] = Y2 + +g[d2 + 68 >> 2];
                g[d2 + 72 >> 2] = Z2 + +g[d2 + 72 >> 2];
                $2 = $2 * (p2 * +g[d2 + 100 >> 2]);
                aa2 = aa2 * (p2 * +g[d2 + 104 >> 2]);
                g[I2 >> 2] = _2 * (p2 * +g[d2 + 96 >> 2]) + +g[I2 >> 2];
                g[J2 >> 2] = $2 + +g[J2 >> 2];
                g[K2 >> 2] = aa2 + +g[K2 >> 2];
              }
              h2 = c[b2 + 32 >> 2] | 0;
              if (c[e2 + 240 >> 2] | 0) {
                aa2 = l2 * +g[h2 + 320 >> 2] + k2 * +g[h2 + 324 >> 2] + j2 * +g[h2 + 328 >> 2];
                $2 = l2 * +g[h2 + 304 >> 2] + k2 * +g[h2 + 308 >> 2] + j2 * +g[h2 + 312 >> 2];
                _2 = l2 * +g[h2 + 288 >> 2] + k2 * +g[h2 + 292 >> 2] + j2 * +g[h2 + 296 >> 2];
                Y2 = p2 * -0 * +g[e2 + 116 >> 2];
                Z2 = p2 * -0 * +g[e2 + 120 >> 2];
                g[e2 + 64 >> 2] = p2 * -0 * +g[e2 + 112 >> 2] + +g[e2 + 64 >> 2];
                g[e2 + 68 >> 2] = Y2 + +g[e2 + 68 >> 2];
                g[e2 + 72 >> 2] = Z2 + +g[e2 + 72 >> 2];
                $2 = $2 * (+g[e2 + 100 >> 2] * -p2);
                aa2 = aa2 * (+g[e2 + 104 >> 2] * -p2);
                g[L2 >> 2] = _2 * (+g[e2 + 96 >> 2] * -p2) + +g[L2 >> 2];
                g[M2 >> 2] = $2 + +g[M2 >> 2];
                g[N2 >> 2] = aa2 + +g[N2 >> 2];
              }
            }
            if (!(a[b2 + 525 >> 0] | 0)) {
              i = P2;
              return;
            }
            n2 = +g[b2 + 532 >> 2];
            m2 = n2 * +g[b2 + 508 >> 2] * +g[b2 + 432 >> 2] / f2;
            l2 = +g[b2 + 476 >> 2];
            k2 = +g[b2 + 480 >> 2];
            j2 = +g[b2 + 484 >> 2];
            if ((w2 - z2) * l2 + (u2 - y2) * k2 + (q2 - x2) * j2 > 0)
              m2 = m2 + n2 * ((w2 - z2) * l2 + (u2 - y2) * k2 + (q2 - x2) * j2) * +g[b2 + 436 >> 2];
            n2 = +g[b2 + 520 >> 2];
            m2 = n2 + m2 * +g[b2 + 496 >> 2];
            m2 = m2 > 0 ? m2 : 0;
            g[b2 + 520 >> 2] = m2;
            h2 = c[b2 + 28 >> 2] | 0;
            if (c[d2 + 240 >> 2] | 0) {
              aa2 = l2 * +g[h2 + 320 >> 2] + k2 * +g[h2 + 324 >> 2] + j2 * +g[h2 + 328 >> 2];
              $2 = l2 * +g[h2 + 304 >> 2] + k2 * +g[h2 + 308 >> 2] + j2 * +g[h2 + 312 >> 2];
              j2 = l2 * +g[h2 + 288 >> 2] + k2 * +g[h2 + 292 >> 2] + j2 * +g[h2 + 296 >> 2];
              l2 = (m2 - n2) * 0 * +g[d2 + 116 >> 2];
              k2 = (m2 - n2) * 0 * +g[d2 + 120 >> 2];
              g[d2 + 64 >> 2] = (m2 - n2) * 0 * +g[d2 + 112 >> 2] + +g[d2 + 64 >> 2];
              g[d2 + 68 >> 2] = l2 + +g[d2 + 68 >> 2];
              g[d2 + 72 >> 2] = k2 + +g[d2 + 72 >> 2];
              k2 = $2 * ((m2 - n2) * +g[d2 + 100 >> 2]);
              l2 = aa2 * ((m2 - n2) * +g[d2 + 104 >> 2]);
              g[I2 >> 2] = j2 * ((m2 - n2) * +g[d2 + 96 >> 2]) + +g[I2 >> 2];
              g[J2 >> 2] = k2 + +g[J2 >> 2];
              g[K2 >> 2] = l2 + +g[K2 >> 2];
              l2 = +g[b2 + 476 >> 2];
              k2 = +g[b2 + 480 >> 2];
              j2 = +g[b2 + 484 >> 2];
            }
            h2 = c[b2 + 32 >> 2] | 0;
            if (!(c[e2 + 240 >> 2] | 0)) {
              i = P2;
              return;
            }
            aa2 = l2 * +g[h2 + 320 >> 2] + k2 * +g[h2 + 324 >> 2] + j2 * +g[h2 + 328 >> 2];
            $2 = l2 * +g[h2 + 304 >> 2] + k2 * +g[h2 + 308 >> 2] + j2 * +g[h2 + 312 >> 2];
            _2 = l2 * +g[h2 + 288 >> 2] + k2 * +g[h2 + 292 >> 2] + j2 * +g[h2 + 296 >> 2];
            Y2 = (m2 - n2) * -0 * +g[e2 + 116 >> 2];
            Z2 = (m2 - n2) * -0 * +g[e2 + 120 >> 2];
            g[e2 + 64 >> 2] = (m2 - n2) * -0 * +g[e2 + 112 >> 2] + +g[e2 + 64 >> 2];
            g[e2 + 68 >> 2] = Y2 + +g[e2 + 68 >> 2];
            g[e2 + 72 >> 2] = Z2 + +g[e2 + 72 >> 2];
            $2 = $2 * (+g[e2 + 100 >> 2] * -(m2 - n2));
            aa2 = aa2 * (+g[e2 + 104 >> 2] * -(m2 - n2));
            g[L2 >> 2] = _2 * (+g[e2 + 96 >> 2] * -(m2 - n2)) + +g[L2 >> 2];
            g[M2 >> 2] = $2 + +g[M2 >> 2];
            g[N2 >> 2] = aa2 + +g[N2 >> 2];
            i = P2;
            return;
          }
          function Mo(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = +d2;
            e2 = e2 | 0;
            switch (b2 | 0) {
              case 2:
              case 1:
                if (e2 >>> 0 < 3) {
                  g[a2 + 600 >> 2] = d2;
                  c[a2 + 592 >> 2] = c[a2 + 592 >> 2] | 2;
                  return;
                } else {
                  g[a2 + 432 >> 2] = d2;
                  return;
                }
              case 4:
              case 3:
                if (e2 >>> 0 < 3) {
                  g[a2 + 596 >> 2] = d2;
                  c[a2 + 592 >> 2] = c[a2 + 592 >> 2] | 1;
                  return;
                } else {
                  g[a2 + 604 >> 2] = d2;
                  c[a2 + 592 >> 2] = c[a2 + 592 >> 2] | 4;
                  return;
                }
              default:
                return;
            }
          }
          function No(a2, b2, c2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            var d2 = 0;
            a:
              do
                switch (b2 | 0) {
                  case 2:
                  case 1: {
                    if (c2 >>> 0 < 3) {
                      d2 = +g[a2 + 600 >> 2];
                      break a;
                    }
                    if ((c2 + -3 | 0) >>> 0 < 3)
                      d2 = +g[a2 + 432 >> 2];
                    else
                      d2 = 0;
                    break;
                  }
                  case 4:
                  case 3: {
                    if (c2 >>> 0 < 3) {
                      d2 = +g[a2 + 596 >> 2];
                      break a;
                    }
                    if ((c2 + -3 | 0) >>> 0 < 3)
                      d2 = +g[a2 + 604 >> 2];
                    else
                      d2 = 0;
                    break;
                  }
                  default:
                    d2 = 0;
                }
              while (0);
            return +d2;
          }
          function Oo(a2) {
            a2 = a2 | 0;
            return 212;
          }
          function Po(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            Aq(a2, b2, d2) | 0;
            c[b2 + 52 >> 2] = c[a2 + 300 >> 2];
            c[b2 + 56 >> 2] = c[a2 + 304 >> 2];
            c[b2 + 60 >> 2] = c[a2 + 308 >> 2];
            c[b2 + 64 >> 2] = c[a2 + 312 >> 2];
            c[b2 + 68 >> 2] = c[a2 + 316 >> 2];
            c[b2 + 72 >> 2] = c[a2 + 320 >> 2];
            c[b2 + 76 >> 2] = c[a2 + 324 >> 2];
            c[b2 + 80 >> 2] = c[a2 + 328 >> 2];
            c[b2 + 84 >> 2] = c[a2 + 332 >> 2];
            c[b2 + 88 >> 2] = c[a2 + 336 >> 2];
            c[b2 + 92 >> 2] = c[a2 + 340 >> 2];
            c[b2 + 96 >> 2] = c[a2 + 344 >> 2];
            c[b2 + 100 >> 2] = c[a2 + 348 >> 2];
            c[b2 + 104 >> 2] = c[a2 + 352 >> 2];
            c[b2 + 108 >> 2] = c[a2 + 356 >> 2];
            c[b2 + 112 >> 2] = c[a2 + 360 >> 2];
            c[b2 + 116 >> 2] = c[a2 + 364 >> 2];
            c[b2 + 120 >> 2] = c[a2 + 368 >> 2];
            c[b2 + 124 >> 2] = c[a2 + 372 >> 2];
            c[b2 + 128 >> 2] = c[a2 + 376 >> 2];
            c[b2 + 132 >> 2] = c[a2 + 380 >> 2];
            c[b2 + 136 >> 2] = c[a2 + 384 >> 2];
            c[b2 + 140 >> 2] = c[a2 + 388 >> 2];
            c[b2 + 144 >> 2] = c[a2 + 392 >> 2];
            c[b2 + 148 >> 2] = c[a2 + 396 >> 2];
            c[b2 + 152 >> 2] = c[a2 + 400 >> 2];
            c[b2 + 156 >> 2] = c[a2 + 404 >> 2];
            c[b2 + 160 >> 2] = c[a2 + 408 >> 2];
            c[b2 + 164 >> 2] = c[a2 + 412 >> 2];
            c[b2 + 168 >> 2] = c[a2 + 416 >> 2];
            c[b2 + 172 >> 2] = c[a2 + 420 >> 2];
            c[b2 + 176 >> 2] = c[a2 + 424 >> 2];
            c[b2 + 180 >> 2] = c[a2 + 444 >> 2];
            c[b2 + 184 >> 2] = c[a2 + 448 >> 2];
            c[b2 + 188 >> 2] = c[a2 + 452 >> 2];
            c[b2 + 192 >> 2] = c[a2 + 428 >> 2];
            c[b2 + 196 >> 2] = c[a2 + 432 >> 2];
            c[b2 + 200 >> 2] = c[a2 + 436 >> 2];
            c[b2 + 204 >> 2] = c[a2 + 440 >> 2];
            return 15142;
          }
          function Qo(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            c[a2 + 300 >> 2] = c[b2 >> 2];
            c[a2 + 300 + 4 >> 2] = c[b2 + 4 >> 2];
            c[a2 + 300 + 8 >> 2] = c[b2 + 8 >> 2];
            c[a2 + 300 + 12 >> 2] = c[b2 + 12 >> 2];
            c[a2 + 316 >> 2] = c[b2 + 16 >> 2];
            c[a2 + 316 + 4 >> 2] = c[b2 + 16 + 4 >> 2];
            c[a2 + 316 + 8 >> 2] = c[b2 + 16 + 8 >> 2];
            c[a2 + 316 + 12 >> 2] = c[b2 + 16 + 12 >> 2];
            c[a2 + 332 >> 2] = c[b2 + 32 >> 2];
            c[a2 + 332 + 4 >> 2] = c[b2 + 32 + 4 >> 2];
            c[a2 + 332 + 8 >> 2] = c[b2 + 32 + 8 >> 2];
            c[a2 + 332 + 12 >> 2] = c[b2 + 32 + 12 >> 2];
            c[a2 + 348 >> 2] = c[b2 + 48 >> 2];
            c[a2 + 348 + 4 >> 2] = c[b2 + 48 + 4 >> 2];
            c[a2 + 348 + 8 >> 2] = c[b2 + 48 + 8 >> 2];
            c[a2 + 348 + 12 >> 2] = c[b2 + 48 + 12 >> 2];
            c[a2 + 364 >> 2] = c[d2 >> 2];
            c[a2 + 364 + 4 >> 2] = c[d2 + 4 >> 2];
            c[a2 + 364 + 8 >> 2] = c[d2 + 8 >> 2];
            c[a2 + 364 + 12 >> 2] = c[d2 + 12 >> 2];
            c[a2 + 380 >> 2] = c[d2 + 16 >> 2];
            c[a2 + 380 + 4 >> 2] = c[d2 + 16 + 4 >> 2];
            c[a2 + 380 + 8 >> 2] = c[d2 + 16 + 8 >> 2];
            c[a2 + 380 + 12 >> 2] = c[d2 + 16 + 12 >> 2];
            c[a2 + 396 >> 2] = c[d2 + 32 >> 2];
            c[a2 + 396 + 4 >> 2] = c[d2 + 32 + 4 >> 2];
            c[a2 + 396 + 8 >> 2] = c[d2 + 32 + 8 >> 2];
            c[a2 + 396 + 12 >> 2] = c[d2 + 32 + 12 >> 2];
            c[a2 + 412 >> 2] = c[d2 + 48 >> 2];
            c[a2 + 412 + 4 >> 2] = c[d2 + 48 + 4 >> 2];
            c[a2 + 412 + 8 >> 2] = c[d2 + 48 + 8 >> 2];
            c[a2 + 412 + 12 >> 2] = c[d2 + 48 + 12 >> 2];
            rb[c[(c[a2 >> 2] | 0) + 8 >> 2] & 255](a2);
            return;
          }
          function Ro() {
            c[5310] = 1065353216;
            c[5311] = 0;
            c[5312] = 0;
            g[5313] = 0;
            return;
          }
          function So(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = +d2;
            e2 = +e2;
            var f2 = 0, h2 = 0, i2 = 0, j2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0;
            j2 = +Q(+d2);
            i2 = +R(+d2);
            f2 = c[b2 + 444 >> 2] | 0;
            l2 = +N(+j2) > 11920928955078125e-23;
            d2 = (c[k >> 2] = f2, +g[k >> 2]);
            if (l2) {
              m2 = +g[b2 + 448 >> 2];
              m2 = +O(+((i2 * i2 / (j2 * j2) + 1) / (1 / (m2 * m2) + i2 * i2 / (j2 * j2) / (d2 * d2))));
              d2 = i2 * i2;
              h2 = j2 * j2;
              f2 = (g[k >> 2] = m2, c[k >> 2] | 0);
            } else {
              d2 = i2 * i2;
              h2 = j2 * j2;
            }
            m2 = +O(+(h2 + 0 + d2));
            n2 = (c[k >> 2] = f2, +g[k >> 2]) * 0.5;
            m2 = +R(+n2) / m2;
            n2 = +Q(+n2);
            o2 = n2 * e2 + j2 * m2 * 0 - i2 * m2 * -0;
            h2 = n2 * 0 - i2 * m2 * e2 - m2 * 0 * 0;
            d2 = n2 * 0 + m2 * 0 * 0 - j2 * m2 * e2;
            e2 = -(m2 * 0 * e2) - j2 * m2 * 0 - i2 * m2 * -0;
            g[a2 >> 2] = i2 * m2 * h2 + (n2 * o2 + e2 * -(m2 * 0)) - d2 * -(j2 * m2);
            g[a2 + 4 >> 2] = d2 * -(m2 * 0) + (n2 * h2 + e2 * -(j2 * m2)) - i2 * m2 * o2;
            g[a2 + 8 >> 2] = o2 * -(j2 * m2) + (i2 * m2 * e2 + n2 * d2) - h2 * -(m2 * 0);
            g[a2 + 12 >> 2] = 0;
            return;
          }
          function To(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0;
            c[a2 + 556 >> 2] = c[b2 >> 2];
            c[a2 + 556 + 4 >> 2] = c[b2 + 4 >> 2];
            c[a2 + 556 + 8 >> 2] = c[b2 + 8 >> 2];
            c[a2 + 556 + 12 >> 2] = c[b2 + 12 >> 2];
            s2 = +g[a2 + 568 >> 2];
            j2 = +g[5310];
            t2 = +g[a2 + 560 >> 2];
            f2 = +g[5312];
            q2 = +g[a2 + 564 >> 2];
            i2 = +g[5311];
            r2 = +g[a2 + 556 >> 2];
            l2 = (j2 * q2 + s2 * i2 - f2 * r2) * -q2 + (s2 * (s2 * j2 + t2 * f2 - q2 * i2) + (-(j2 * r2) - t2 * i2 - f2 * q2) * -r2) - (s2 * f2 + i2 * r2 - j2 * t2) * -t2;
            m2 = (s2 * f2 + i2 * r2 - j2 * t2) * -r2 + (s2 * (j2 * q2 + s2 * i2 - f2 * r2) + (-(j2 * r2) - t2 * i2 - f2 * q2) * -t2) - (s2 * j2 + t2 * f2 - q2 * i2) * -q2;
            d2 = (s2 * j2 + t2 * f2 - q2 * i2) * -t2 + ((-(j2 * r2) - t2 * i2 - f2 * q2) * -q2 + s2 * (s2 * f2 + i2 * r2 - j2 * t2)) - (j2 * q2 + s2 * i2 - f2 * r2) * -r2;
            do
              if (f2 * d2 + (i2 * m2 + j2 * l2) < -0.9999998807907104)
                if (+N(+f2) > 0.7071067690849304) {
                  d2 = 1 / +O(+(f2 * f2 + i2 * i2));
                  e2 = 0;
                  f2 = -(f2 * d2);
                  b2 = (g[k >> 2] = i2 * d2, c[k >> 2] | 0);
                  d2 = 0;
                  break;
                } else {
                  f2 = 1 / +O(+(j2 * j2 + i2 * i2));
                  e2 = (g[k >> 2] = -(i2 * f2), c[k >> 2] | 0);
                  f2 = j2 * f2;
                  b2 = 0;
                  d2 = 0;
                  break;
                }
              else {
                C2 = +O(+((f2 * d2 + (i2 * m2 + j2 * l2) + 1) * 2));
                e2 = (g[k >> 2] = (i2 * d2 - f2 * m2) * (1 / C2), c[k >> 2] | 0);
                f2 = (f2 * l2 - j2 * d2) * (1 / C2);
                b2 = (g[k >> 2] = (j2 * m2 - i2 * l2) * (1 / C2), c[k >> 2] | 0);
                d2 = C2 * 0.5;
              }
            while (0);
            j2 = (c[k >> 2] = e2, +g[k >> 2]);
            m2 = (c[k >> 2] = b2, +g[k >> 2]);
            u2 = 1 / +O(+(d2 * d2 + (j2 * j2 + f2 * f2 + m2 * m2)));
            o2 = (g[k >> 2] = j2 * u2, c[k >> 2] | 0);
            x2 = f2 * u2;
            w2 = (g[k >> 2] = m2 * u2, c[k >> 2] | 0);
            d2 = d2 * u2;
            v2 = (g[k >> 2] = d2, c[k >> 2] | 0);
            A2 = r2 * d2 + s2 * -(j2 * u2) + q2 * -x2 - t2 * -(m2 * u2);
            B2 = r2 * -(m2 * u2) + (s2 * -x2 + d2 * t2) - q2 * -(j2 * u2);
            C2 = s2 * -(m2 * u2) + d2 * q2 + t2 * -(j2 * u2) - r2 * -x2;
            q2 = d2 * s2 - r2 * -(j2 * u2) - t2 * -x2 - q2 * -(m2 * u2);
            r2 = 1 / +O(+(q2 * q2 + (C2 * C2 + (A2 * A2 + B2 * B2))));
            h2 = (g[k >> 2] = A2 * r2, c[k >> 2] | 0);
            b2 = (g[k >> 2] = r2 * B2, c[k >> 2] | 0);
            e2 = (g[k >> 2] = r2 * C2, c[k >> 2] | 0);
            f2 = +g[a2 + 444 >> 2];
            n2 = (g[k >> 2] = f2, c[k >> 2] | 0);
            if (f2 >= 0.05000000074505806 ? (z2 = +g[a2 + 448 >> 2], z2 >= 0.05000000074505806) : 0) {
              d2 = d2 < -1 ? -1 : d2;
              d2 = +T(+(d2 > 1 ? 1 : d2)) * 2;
              if (d2 > 11920928955078125e-23) {
                i2 = 1 / +O(+(m2 * u2 * (m2 * u2) + (j2 * u2 * (j2 * u2) + x2 * x2)));
                if (+N(+(x2 * i2)) > 11920928955078125e-23) {
                  z2 = +O(+((m2 * u2 * i2 * (m2 * u2 * i2) / (x2 * i2 * (x2 * i2)) + 1) / (1 / (z2 * z2) + m2 * u2 * i2 * (m2 * u2 * i2) / (x2 * i2 * (x2 * i2)) / (f2 * f2))));
                  j2 = j2 * u2 * i2;
                  l2 = x2 * i2;
                  i2 = m2 * u2 * i2;
                  n2 = (g[k >> 2] = z2, c[k >> 2] | 0);
                } else {
                  j2 = j2 * u2 * i2;
                  l2 = x2 * i2;
                  i2 = m2 * u2 * i2;
                }
              } else {
                j2 = 0;
                l2 = 0;
                i2 = 0;
                n2 = 0;
              }
              if (+N(+d2) > 11920928955078125e-23) {
                f2 = (c[k >> 2] = n2, +g[k >> 2]);
                if (!(d2 > f2)) {
                  if (d2 < -f2)
                    d2 = -f2;
                } else
                  d2 = f2;
                z2 = d2 * 0.5;
                x2 = +R(+z2) / +O(+(j2 * j2 + l2 * l2 + i2 * i2));
                z2 = +Q(+z2);
                y2 = (g[k >> 2] = j2 * x2, c[k >> 2] | 0);
                w2 = (g[k >> 2] = i2 * x2, c[k >> 2] | 0);
                x2 = l2 * x2;
                v2 = (g[k >> 2] = z2, c[k >> 2] | 0);
              } else
                y2 = o2;
            } else
              y2 = o2;
            d2 = +g[a2 + 452 >> 2];
            if (d2 >= 0.05000000074505806) {
              f2 = r2 * q2 < -1 ? -1 : r2 * q2;
              f2 = +T(+(f2 > 1 ? 1 : f2)) * 2;
              if (f2 > 3.1415927410125732) {
                p2 = (g[k >> 2] = -(A2 * r2), c[k >> 2] | 0);
                o2 = (g[k >> 2] = -(r2 * B2), c[k >> 2] | 0);
                f2 = -(r2 * q2) < -1 ? -1 : -(r2 * q2);
                n2 = (g[k >> 2] = -(r2 * C2), c[k >> 2] | 0);
                f2 = +T(+(f2 > 1 ? 1 : f2)) * 2;
              } else {
                p2 = h2;
                o2 = b2;
                n2 = e2;
              }
              i2 = (c[k >> 2] = p2, +g[k >> 2]);
              j2 = (c[k >> 2] = o2, +g[k >> 2]);
              l2 = (c[k >> 2] = n2, +g[k >> 2]);
              if (f2 > 11920928955078125e-23) {
                C2 = 1 / +O(+(i2 * i2 + j2 * j2 + l2 * l2));
                p2 = (g[k >> 2] = i2 * C2, c[k >> 2] | 0);
                o2 = (g[k >> 2] = j2 * C2, c[k >> 2] | 0);
                n2 = (g[k >> 2] = l2 * C2, c[k >> 2] | 0);
              }
              if (+N(+f2) > 11920928955078125e-23) {
                if (!(f2 > d2))
                  if (f2 < -d2)
                    d2 = -d2;
                  else
                    d2 = f2;
                z2 = (c[k >> 2] = p2, +g[k >> 2]);
                A2 = (c[k >> 2] = o2, +g[k >> 2]);
                B2 = (c[k >> 2] = n2, +g[k >> 2]);
                d2 = d2 * 0.5;
                C2 = +R(+d2) / +O(+(B2 * B2 + (A2 * A2 + z2 * z2)));
                d2 = +Q(+d2);
                h2 = (g[k >> 2] = z2 * C2, c[k >> 2] | 0);
                b2 = (g[k >> 2] = A2 * C2, c[k >> 2] | 0);
                e2 = (g[k >> 2] = B2 * C2, c[k >> 2] | 0);
              } else
                d2 = r2 * q2;
            } else
              d2 = r2 * q2;
            t2 = (c[k >> 2] = v2, +g[k >> 2]);
            z2 = (c[k >> 2] = h2, +g[k >> 2]);
            u2 = (c[k >> 2] = y2, +g[k >> 2]);
            C2 = (c[k >> 2] = e2, +g[k >> 2]);
            B2 = (c[k >> 2] = w2, +g[k >> 2]);
            A2 = (c[k >> 2] = b2, +g[k >> 2]);
            g[a2 + 556 >> 2] = x2 * C2 + (t2 * z2 + u2 * d2) - B2 * A2;
            g[a2 + 560 >> 2] = B2 * z2 + (t2 * A2 + x2 * d2) - u2 * C2;
            g[a2 + 564 >> 2] = u2 * A2 + (t2 * C2 + B2 * d2) - x2 * z2;
            g[a2 + 568 >> 2] = t2 * d2 - u2 * z2 - x2 * A2 - B2 * C2;
            return;
          }
          function Uo(a2, b2, c2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0;
            d2 = +g[a2 + 368 >> 2];
            if (!(d2 != 0))
              return;
            h2 = +g[a2 + 372 >> 2];
            j2 = +g[a2 + 376 >> 2];
            k2 = +g[a2 + 380 >> 2];
            l2 = d2 * (+g[b2 + 4 >> 2] * j2);
            f2 = d2 * (+g[b2 + 8 >> 2] * k2);
            g[a2 + 336 >> 2] = d2 * (+g[b2 >> 2] * h2) + +g[a2 + 336 >> 2];
            g[a2 + 340 >> 2] = l2 + +g[a2 + 340 >> 2];
            g[a2 + 344 >> 2] = f2 + +g[a2 + 344 >> 2];
            h2 = +g[b2 >> 2] * h2;
            j2 = +g[b2 + 4 >> 2] * j2;
            k2 = +g[b2 + 8 >> 2] * k2;
            f2 = +g[c2 + 4 >> 2];
            l2 = +g[c2 + 8 >> 2];
            i2 = +g[c2 >> 2];
            e2 = ((f2 * k2 - j2 * l2) * +g[a2 + 304 >> 2] + (h2 * l2 - k2 * i2) * +g[a2 + 308 >> 2] + (j2 * i2 - h2 * f2) * +g[a2 + 312 >> 2]) * +g[a2 + 572 >> 2];
            d2 = ((f2 * k2 - j2 * l2) * +g[a2 + 320 >> 2] + (h2 * l2 - k2 * i2) * +g[a2 + 324 >> 2] + (j2 * i2 - h2 * f2) * +g[a2 + 328 >> 2]) * +g[a2 + 576 >> 2];
            g[a2 + 352 >> 2] = (+g[a2 + 288 >> 2] * (f2 * k2 - j2 * l2) + +g[a2 + 292 >> 2] * (h2 * l2 - k2 * i2) + (j2 * i2 - h2 * f2) * +g[a2 + 296 >> 2]) * +g[a2 + 568 >> 2] + +g[a2 + 352 >> 2];
            g[a2 + 356 >> 2] = e2 + +g[a2 + 356 >> 2];
            g[a2 + 360 >> 2] = d2 + +g[a2 + 360 >> 2];
            return;
          }
          function Vo(a2) {
            a2 = a2 | 0;
            return;
          }
          function Wo(a2) {
            a2 = a2 | 0;
            return 644;
          }
          function Xo(b2, d2, e2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            Aq(b2, d2, e2) | 0;
            c[d2 + 52 >> 2] = c[b2 + 48 >> 2];
            c[d2 + 56 >> 2] = c[b2 + 52 >> 2];
            c[d2 + 60 >> 2] = c[b2 + 56 >> 2];
            c[d2 + 64 >> 2] = c[b2 + 60 >> 2];
            c[d2 + 68 >> 2] = c[b2 + 64 >> 2];
            c[d2 + 72 >> 2] = c[b2 + 68 >> 2];
            c[d2 + 76 >> 2] = c[b2 + 72 >> 2];
            c[d2 + 80 >> 2] = c[b2 + 76 >> 2];
            c[d2 + 84 >> 2] = c[b2 + 80 >> 2];
            c[d2 + 88 >> 2] = c[b2 + 84 >> 2];
            c[d2 + 92 >> 2] = c[b2 + 88 >> 2];
            c[d2 + 96 >> 2] = c[b2 + 92 >> 2];
            c[d2 + 100 >> 2] = c[b2 + 96 >> 2];
            c[d2 + 104 >> 2] = c[b2 + 100 >> 2];
            c[d2 + 108 >> 2] = c[b2 + 104 >> 2];
            c[d2 + 112 >> 2] = c[b2 + 108 >> 2];
            c[d2 + 116 >> 2] = c[b2 + 112 >> 2];
            c[d2 + 120 >> 2] = c[b2 + 116 >> 2];
            c[d2 + 124 >> 2] = c[b2 + 120 >> 2];
            c[d2 + 128 >> 2] = c[b2 + 124 >> 2];
            c[d2 + 132 >> 2] = c[b2 + 128 >> 2];
            c[d2 + 136 >> 2] = c[b2 + 132 >> 2];
            c[d2 + 140 >> 2] = c[b2 + 136 >> 2];
            c[d2 + 144 >> 2] = c[b2 + 140 >> 2];
            c[d2 + 148 >> 2] = c[b2 + 144 >> 2];
            c[d2 + 152 >> 2] = c[b2 + 148 >> 2];
            c[d2 + 156 >> 2] = c[b2 + 152 >> 2];
            c[d2 + 160 >> 2] = c[b2 + 156 >> 2];
            c[d2 + 164 >> 2] = c[b2 + 160 >> 2];
            c[d2 + 168 >> 2] = c[b2 + 164 >> 2];
            c[d2 + 172 >> 2] = c[b2 + 168 >> 2];
            c[d2 + 176 >> 2] = c[b2 + 172 >> 2];
            e2 = 0;
            do {
              c[d2 + 428 + (e2 << 2) >> 2] = c[b2 + 968 + (e2 * 88 | 0) >> 2];
              c[d2 + 412 + (e2 << 2) >> 2] = c[b2 + 968 + (e2 * 88 | 0) + 4 >> 2];
              c[d2 + 444 + (e2 << 2) >> 2] = c[b2 + 968 + (e2 * 88 | 0) + 8 >> 2];
              c[d2 + 460 + (e2 << 2) >> 2] = c[b2 + 968 + (e2 * 88 | 0) + 12 >> 2];
              c[d2 + 476 + (e2 << 2) >> 2] = c[b2 + 968 + (e2 * 88 | 0) + 16 >> 2];
              c[d2 + 492 + (e2 << 2) >> 2] = c[b2 + 968 + (e2 * 88 | 0) + 20 >> 2];
              c[d2 + 508 + (e2 << 2) >> 2] = c[b2 + 968 + (e2 * 88 | 0) + 24 >> 2];
              c[d2 + 524 + (e2 << 2) >> 2] = c[b2 + 968 + (e2 * 88 | 0) + 32 >> 2];
              c[d2 + 540 + (e2 << 2) >> 2] = c[b2 + 968 + (e2 * 88 | 0) + 36 >> 2];
              c[d2 + 556 + (e2 << 2) >> 2] = c[b2 + 968 + (e2 * 88 | 0) + 44 >> 2];
              c[d2 + 572 + (e2 << 2) >> 2] = c[b2 + 968 + (e2 * 88 | 0) + 52 >> 2];
              c[d2 + 588 + (e2 << 2) >> 2] = c[b2 + 968 + (e2 * 88 | 0) + 60 >> 2];
              c[d2 + 604 + (e2 << 2) >> 2] = c[b2 + 968 + (e2 * 88 | 0) + 68 >> 2];
              e2 = e2 + 1 | 0;
            } while ((e2 | 0) != 3);
            g[d2 + 440 >> 2] = 0;
            g[d2 + 424 >> 2] = 0;
            g[d2 + 456 >> 2] = 0;
            g[d2 + 472 >> 2] = 0;
            g[d2 + 488 >> 2] = 0;
            g[d2 + 504 >> 2] = 0;
            g[d2 + 520 >> 2] = 0;
            g[d2 + 536 >> 2] = 0;
            g[d2 + 552 >> 2] = 0;
            g[d2 + 568 >> 2] = 0;
            g[d2 + 584 >> 2] = 0;
            g[d2 + 600 >> 2] = 0;
            g[d2 + 616 >> 2] = 0;
            a[d2 + 620 >> 0] = a[b2 + 996 >> 0] | 0;
            a[d2 + 624 >> 0] = a[b2 + 1008 >> 0] | 0;
            a[d2 + 628 >> 0] = a[b2 + 1016 >> 0] | 0;
            a[d2 + 632 >> 0] = a[b2 + 1024 >> 0] | 0;
            a[d2 + 636 >> 0] = a[b2 + 1032 >> 0] | 0;
            a[d2 + 621 >> 0] = a[b2 + 1084 >> 0] | 0;
            a[d2 + 625 >> 0] = a[b2 + 1096 >> 0] | 0;
            a[d2 + 629 >> 0] = a[b2 + 1104 >> 0] | 0;
            a[d2 + 633 >> 0] = a[b2 + 1112 >> 0] | 0;
            a[d2 + 637 >> 0] = a[b2 + 1120 >> 0] | 0;
            a[d2 + 622 >> 0] = a[b2 + 1172 >> 0] | 0;
            a[d2 + 626 >> 0] = a[b2 + 1184 >> 0] | 0;
            a[d2 + 630 >> 0] = a[b2 + 1192 >> 0] | 0;
            a[d2 + 634 >> 0] = a[b2 + 1200 >> 0] | 0;
            a[d2 + 638 >> 0] = a[b2 + 1208 >> 0] | 0;
            a[d2 + 623 >> 0] = 0;
            a[d2 + 627 >> 0] = 0;
            a[d2 + 631 >> 0] = 0;
            a[d2 + 635 >> 0] = 0;
            a[d2 + 639 >> 0] = 0;
            c[d2 + 196 >> 2] = c[b2 + 680 >> 2];
            c[d2 + 200 >> 2] = c[b2 + 684 >> 2];
            c[d2 + 204 >> 2] = c[b2 + 688 >> 2];
            c[d2 + 208 >> 2] = c[b2 + 692 >> 2];
            c[d2 + 180 >> 2] = c[b2 + 696 >> 2];
            c[d2 + 184 >> 2] = c[b2 + 700 >> 2];
            c[d2 + 188 >> 2] = c[b2 + 704 >> 2];
            c[d2 + 192 >> 2] = c[b2 + 708 >> 2];
            c[d2 + 212 >> 2] = c[b2 + 712 >> 2];
            c[d2 + 216 >> 2] = c[b2 + 716 >> 2];
            c[d2 + 220 >> 2] = c[b2 + 720 >> 2];
            c[d2 + 224 >> 2] = c[b2 + 724 >> 2];
            c[d2 + 228 >> 2] = c[b2 + 728 >> 2];
            c[d2 + 232 >> 2] = c[b2 + 732 >> 2];
            c[d2 + 236 >> 2] = c[b2 + 736 >> 2];
            c[d2 + 240 >> 2] = c[b2 + 740 >> 2];
            c[d2 + 244 >> 2] = c[b2 + 744 >> 2];
            c[d2 + 248 >> 2] = c[b2 + 748 >> 2];
            c[d2 + 252 >> 2] = c[b2 + 752 >> 2];
            c[d2 + 256 >> 2] = c[b2 + 756 >> 2];
            c[d2 + 260 >> 2] = c[b2 + 760 >> 2];
            c[d2 + 264 >> 2] = c[b2 + 764 >> 2];
            c[d2 + 268 >> 2] = c[b2 + 768 >> 2];
            c[d2 + 272 >> 2] = c[b2 + 772 >> 2];
            c[d2 + 276 >> 2] = c[b2 + 776 >> 2];
            c[d2 + 280 >> 2] = c[b2 + 780 >> 2];
            c[d2 + 284 >> 2] = c[b2 + 784 >> 2];
            c[d2 + 288 >> 2] = c[b2 + 788 >> 2];
            c[d2 + 292 >> 2] = c[b2 + 876 >> 2];
            c[d2 + 296 >> 2] = c[b2 + 880 >> 2];
            c[d2 + 300 >> 2] = c[b2 + 884 >> 2];
            c[d2 + 304 >> 2] = c[b2 + 888 >> 2];
            c[d2 + 308 >> 2] = c[b2 + 892 >> 2];
            c[d2 + 312 >> 2] = c[b2 + 896 >> 2];
            c[d2 + 316 >> 2] = c[b2 + 900 >> 2];
            c[d2 + 320 >> 2] = c[b2 + 904 >> 2];
            c[d2 + 324 >> 2] = c[b2 + 804 >> 2];
            c[d2 + 328 >> 2] = c[b2 + 808 >> 2];
            c[d2 + 332 >> 2] = c[b2 + 812 >> 2];
            c[d2 + 336 >> 2] = c[b2 + 816 >> 2];
            c[d2 + 340 >> 2] = c[b2 + 820 >> 2];
            c[d2 + 344 >> 2] = c[b2 + 824 >> 2];
            c[d2 + 348 >> 2] = c[b2 + 828 >> 2];
            c[d2 + 352 >> 2] = c[b2 + 832 >> 2];
            c[d2 + 356 >> 2] = c[b2 + 840 >> 2];
            c[d2 + 360 >> 2] = c[b2 + 844 >> 2];
            c[d2 + 364 >> 2] = c[b2 + 848 >> 2];
            c[d2 + 368 >> 2] = c[b2 + 852 >> 2];
            c[d2 + 372 >> 2] = c[b2 + 860 >> 2];
            c[d2 + 376 >> 2] = c[b2 + 864 >> 2];
            c[d2 + 380 >> 2] = c[b2 + 868 >> 2];
            c[d2 + 384 >> 2] = c[b2 + 872 >> 2];
            a[d2 + 388 >> 0] = a[b2 + 792 >> 0] | 0;
            a[d2 + 392 >> 0] = a[b2 + 795 >> 0] | 0;
            a[d2 + 396 >> 0] = a[b2 + 798 >> 0] | 0;
            a[d2 + 400 >> 0] = a[b2 + 836 >> 0] | 0;
            a[d2 + 404 >> 0] = a[b2 + 856 >> 0] | 0;
            a[d2 + 389 >> 0] = a[b2 + 793 >> 0] | 0;
            a[d2 + 393 >> 0] = a[b2 + 796 >> 0] | 0;
            a[d2 + 397 >> 0] = a[b2 + 799 >> 0] | 0;
            a[d2 + 401 >> 0] = a[b2 + 837 >> 0] | 0;
            a[d2 + 405 >> 0] = a[b2 + 857 >> 0] | 0;
            a[d2 + 390 >> 0] = a[b2 + 794 >> 0] | 0;
            a[d2 + 394 >> 0] = a[b2 + 797 >> 0] | 0;
            a[d2 + 398 >> 0] = a[b2 + 800 >> 0] | 0;
            a[d2 + 402 >> 0] = a[b2 + 838 >> 0] | 0;
            a[d2 + 406 >> 0] = a[b2 + 858 >> 0] | 0;
            a[d2 + 391 >> 0] = 0;
            a[d2 + 395 >> 0] = 0;
            a[d2 + 399 >> 0] = 0;
            a[d2 + 403 >> 0] = 0;
            a[d2 + 407 >> 0] = 0;
            c[d2 + 640 >> 2] = c[b2 + 1232 >> 2];
            return 15168;
          }
          function Yo(a2) {
            a2 = a2 | 0;
            c[a2 >> 2] = 7188;
            if (!a2)
              return;
            c[5638] = (c[5638] | 0) + 1;
            rG(c[a2 + -4 >> 2] | 0);
            return;
          }
          function Zo(b2) {
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0;
            k2 = i;
            i = i + 16 | 0;
            if (!(a[b2 + 1308 >> 0] | 0)) {
              i = k2;
              return;
            }
            g[b2 + 928 >> 2] = 0;
            g[b2 + 992 >> 2] = 0;
            g[b2 + 1056 >> 2] = 0;
            c[b2 + 712 >> 2] = 0;
            c[b2 + 712 + 4 >> 2] = 0;
            c[b2 + 712 + 8 >> 2] = 0;
            c[b2 + 712 + 12 >> 2] = 0;
            _o(b2, (c[b2 + 28 >> 2] | 0) + 4 | 0, (c[b2 + 32 >> 2] | 0) + 4 | 0);
            rb[c[(c[b2 >> 2] | 0) + 44 >> 2] & 255](b2);
            e2 = +g[b2 + 1284 >> 2];
            f2 = +g[b2 + 1288 >> 2];
            h2 = +g[b2 + 1292 >> 2];
            if (+g[b2 + 696 >> 2] >= +g[b2 + 680 >> 2]) {
              l2 = (a[b2 + 1300 >> 0] | 0) == 0;
              j2 = c[(l2 ? b2 + 1160 | 0 : b2 + 1096 | 0) >> 2] | 0;
              d2 = c[(l2 ? b2 + 1144 | 0 : b2 + 1080 | 0) >> 2] | 0;
              c[k2 >> 2] = c[(l2 ? b2 + 1128 | 0 : b2 + 1064 | 0) >> 2];
              c[k2 + 4 >> 2] = d2;
              c[k2 + 8 >> 2] = j2;
              g[k2 + 12 >> 2] = 0;
              $o(c[b2 + 28 >> 2] | 0, c[b2 + 32 >> 2] | 0, b2 + 176 | 0, k2, e2, f2, h2, e2, f2, h2);
            }
            if (+g[b2 + 700 >> 2] >= +g[b2 + 684 >> 2]) {
              d2 = (a[b2 + 1300 >> 0] | 0) == 0;
              l2 = c[(d2 ? b2 + 1164 | 0 : b2 + 1100 | 0) >> 2] | 0;
              j2 = c[(d2 ? b2 + 1148 | 0 : b2 + 1084 | 0) >> 2] | 0;
              c[k2 >> 2] = c[(d2 ? b2 + 1132 | 0 : b2 + 1068 | 0) >> 2];
              c[k2 + 4 >> 2] = j2;
              c[k2 + 8 >> 2] = l2;
              g[k2 + 12 >> 2] = 0;
              $o(c[b2 + 28 >> 2] | 0, c[b2 + 32 >> 2] | 0, b2 + 260 | 0, k2, e2, f2, h2, e2, f2, h2);
            }
            if (+g[b2 + 704 >> 2] >= +g[b2 + 688 >> 2]) {
              d2 = (a[b2 + 1300 >> 0] | 0) == 0;
              l2 = c[(d2 ? b2 + 1168 | 0 : b2 + 1104 | 0) >> 2] | 0;
              j2 = c[(d2 ? b2 + 1152 | 0 : b2 + 1088 | 0) >> 2] | 0;
              c[k2 >> 2] = c[(d2 ? b2 + 1136 | 0 : b2 + 1072 | 0) >> 2];
              c[k2 + 4 >> 2] = j2;
              c[k2 + 8 >> 2] = l2;
              g[k2 + 12 >> 2] = 0;
              $o(c[b2 + 28 >> 2] | 0, c[b2 + 32 >> 2] | 0, b2 + 344 | 0, k2, e2, f2, h2, e2, f2, h2);
            }
            j2 = 0;
            do {
              e2 = +g[b2 + 868 + (j2 << 6) >> 2];
              f2 = +g[b2 + 868 + (j2 << 6) + 4 >> 2];
              h2 = +ap(+g[b2 + 1192 + (j2 << 2) >> 2], e2, f2);
              g[b2 + 868 + (j2 << 6) + 52 >> 2] = h2;
              do
                if (!(e2 > f2)) {
                  if (e2 > h2) {
                    c[b2 + 868 + (j2 << 6) + 56 >> 2] = 1;
                    d2 = b2 + 868 + (j2 << 6) + 48 | 0;
                    g[d2 >> 2] = h2 - e2;
                    if (h2 - e2 > 3.1415927410125732) {
                      g[d2 >> 2] = h2 - e2 + -6.2831854820251465;
                      d2 = 19;
                      break;
                    }
                    if (!(h2 - e2 < -3.1415927410125732)) {
                      d2 = 19;
                      break;
                    }
                    g[d2 >> 2] = h2 - e2 + 6.2831854820251465;
                    d2 = 19;
                    break;
                  }
                  d2 = b2 + 868 + (j2 << 6) + 56 | 0;
                  if (!(f2 < h2)) {
                    c[d2 >> 2] = 0;
                    d2 = 18;
                    break;
                  }
                  c[d2 >> 2] = 2;
                  d2 = b2 + 868 + (j2 << 6) + 48 | 0;
                  g[d2 >> 2] = h2 - f2;
                  if (h2 - f2 > 3.1415927410125732) {
                    g[d2 >> 2] = h2 - f2 + -6.2831854820251465;
                    d2 = 19;
                    break;
                  }
                  if (h2 - f2 < -3.1415927410125732) {
                    g[d2 >> 2] = h2 - f2 + 6.2831854820251465;
                    d2 = 19;
                  } else
                    d2 = 19;
                } else {
                  c[b2 + 868 + (j2 << 6) + 56 >> 2] = 0;
                  d2 = 18;
                }
              while (0);
              if ((d2 | 0) == 18 ? (d2 = 0, a[b2 + 868 + (j2 << 6) + 44 >> 0] | 0) : 0)
                d2 = 19;
              if ((d2 | 0) == 19) {
                K2 = b2 + 1208 + (j2 << 4) | 0;
                c[k2 >> 2] = c[K2 >> 2];
                c[k2 + 4 >> 2] = c[K2 + 4 >> 2];
                c[k2 + 8 >> 2] = c[K2 + 8 >> 2];
                c[k2 + 12 >> 2] = c[K2 + 12 >> 2];
                K2 = b2 + 428 + (j2 * 84 | 0) | 0;
                d2 = c[b2 + 28 >> 2] | 0;
                J2 = +g[d2 + 4 >> 2];
                I2 = +g[d2 + 20 >> 2];
                H2 = +g[d2 + 36 >> 2];
                F2 = +g[d2 + 8 >> 2];
                E2 = +g[d2 + 24 >> 2];
                D2 = +g[d2 + 40 >> 2];
                B2 = +g[d2 + 12 >> 2];
                A2 = +g[d2 + 28 >> 2];
                z2 = +g[d2 + 44 >> 2];
                l2 = c[b2 + 32 >> 2] | 0;
                x2 = +g[l2 + 4 >> 2];
                w2 = +g[l2 + 20 >> 2];
                v2 = +g[l2 + 36 >> 2];
                t2 = +g[l2 + 8 >> 2];
                s2 = +g[l2 + 24 >> 2];
                r2 = +g[l2 + 40 >> 2];
                p2 = +g[l2 + 12 >> 2];
                n2 = +g[l2 + 28 >> 2];
                e2 = +g[l2 + 44 >> 2];
                c[K2 >> 2] = 0;
                c[K2 + 4 >> 2] = 0;
                c[K2 + 8 >> 2] = 0;
                c[K2 + 12 >> 2] = 0;
                o2 = +g[k2 >> 2];
                m2 = +g[k2 + 4 >> 2];
                f2 = +g[k2 + 8 >> 2];
                g[b2 + 428 + (j2 * 84 | 0) + 16 >> 2] = J2 * o2 + I2 * m2 + H2 * f2;
                g[b2 + 428 + (j2 * 84 | 0) + 20 >> 2] = F2 * o2 + E2 * m2 + D2 * f2;
                g[b2 + 428 + (j2 * 84 | 0) + 24 >> 2] = B2 * o2 + A2 * m2 + z2 * f2;
                g[b2 + 428 + (j2 * 84 | 0) + 28 >> 2] = 0;
                g[b2 + 428 + (j2 * 84 | 0) + 32 >> 2] = x2 * -o2 + w2 * -m2 + v2 * -f2;
                g[b2 + 428 + (j2 * 84 | 0) + 36 >> 2] = t2 * -o2 + s2 * -m2 + r2 * -f2;
                g[b2 + 428 + (j2 * 84 | 0) + 40 >> 2] = p2 * -o2 + n2 * -m2 + e2 * -f2;
                g[b2 + 428 + (j2 * 84 | 0) + 44 >> 2] = 0;
                G2 = (J2 * o2 + I2 * m2 + H2 * f2) * +g[d2 + 420 >> 2];
                C2 = (F2 * o2 + E2 * m2 + D2 * f2) * +g[d2 + 424 >> 2];
                y2 = (B2 * o2 + A2 * m2 + z2 * f2) * +g[d2 + 428 >> 2];
                g[b2 + 428 + (j2 * 84 | 0) + 48 >> 2] = G2;
                g[b2 + 428 + (j2 * 84 | 0) + 52 >> 2] = C2;
                g[b2 + 428 + (j2 * 84 | 0) + 56 >> 2] = y2;
                g[b2 + 428 + (j2 * 84 | 0) + 60 >> 2] = 0;
                u2 = (x2 * -o2 + w2 * -m2 + v2 * -f2) * +g[l2 + 420 >> 2];
                q2 = (t2 * -o2 + s2 * -m2 + r2 * -f2) * +g[l2 + 424 >> 2];
                h2 = (p2 * -o2 + n2 * -m2 + e2 * -f2) * +g[l2 + 428 >> 2];
                g[b2 + 428 + (j2 * 84 | 0) + 64 >> 2] = u2;
                g[b2 + 428 + (j2 * 84 | 0) + 68 >> 2] = q2;
                g[b2 + 428 + (j2 * 84 | 0) + 72 >> 2] = h2;
                g[b2 + 428 + (j2 * 84 | 0) + 76 >> 2] = 0;
                g[b2 + 428 + (j2 * 84 | 0) + 80 >> 2] = (J2 * o2 + I2 * m2 + H2 * f2) * G2 + (F2 * o2 + E2 * m2 + D2 * f2) * C2 + (B2 * o2 + A2 * m2 + z2 * f2) * y2 + ((x2 * -o2 + w2 * -m2 + v2 * -f2) * u2 + (t2 * -o2 + s2 * -m2 + r2 * -f2) * q2 + (p2 * -o2 + n2 * -m2 + e2 * -f2) * h2);
              }
              j2 = j2 + 1 | 0;
            } while ((j2 | 0) != 3);
            i = k2;
            return;
          }
          function _o(b2, d2, e2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0;
            C2 = +g[b2 + 48 >> 2];
            i2 = +g[d2 >> 2];
            D2 = +g[b2 + 64 >> 2];
            j2 = +g[d2 + 4 >> 2];
            E2 = +g[b2 + 80 >> 2];
            p2 = +g[d2 + 8 >> 2];
            s2 = +g[b2 + 52 >> 2];
            r2 = +g[b2 + 68 >> 2];
            q2 = +g[b2 + 84 >> 2];
            w2 = +g[b2 + 56 >> 2];
            y2 = +g[b2 + 72 >> 2];
            z2 = +g[b2 + 88 >> 2];
            v2 = +g[d2 + 16 >> 2];
            u2 = +g[d2 + 20 >> 2];
            t2 = +g[d2 + 24 >> 2];
            x2 = +g[d2 + 32 >> 2];
            F2 = +g[d2 + 36 >> 2];
            G2 = +g[d2 + 40 >> 2];
            k2 = +g[b2 + 96 >> 2];
            h2 = +g[b2 + 100 >> 2];
            B2 = +g[b2 + 104 >> 2];
            A2 = +g[d2 + 48 >> 2] + (i2 * k2 + j2 * h2 + p2 * B2);
            f2 = v2 * k2 + u2 * h2 + t2 * B2 + +g[d2 + 52 >> 2];
            B2 = x2 * k2 + F2 * h2 + G2 * B2 + +g[d2 + 56 >> 2];
            g[b2 + 1064 >> 2] = C2 * i2 + D2 * j2 + E2 * p2;
            g[b2 + 1068 >> 2] = i2 * s2 + j2 * r2 + p2 * q2;
            g[b2 + 1072 >> 2] = i2 * w2 + j2 * y2 + p2 * z2;
            g[b2 + 1076 >> 2] = 0;
            g[b2 + 1080 >> 2] = C2 * v2 + D2 * u2 + E2 * t2;
            g[b2 + 1084 >> 2] = s2 * v2 + r2 * u2 + q2 * t2;
            g[b2 + 1088 >> 2] = w2 * v2 + y2 * u2 + z2 * t2;
            g[b2 + 1092 >> 2] = 0;
            g[b2 + 1096 >> 2] = C2 * x2 + D2 * F2 + E2 * G2;
            g[b2 + 1100 >> 2] = s2 * x2 + r2 * F2 + q2 * G2;
            g[b2 + 1104 >> 2] = w2 * x2 + y2 * F2 + z2 * G2;
            g[b2 + 1108 >> 2] = 0;
            g[b2 + 1112 >> 2] = A2;
            g[b2 + 1116 >> 2] = f2;
            g[b2 + 1120 >> 2] = B2;
            g[b2 + 1124 >> 2] = 0;
            B2 = +g[b2 + 112 >> 2];
            f2 = +g[e2 >> 2];
            A2 = +g[b2 + 128 >> 2];
            G2 = +g[e2 + 4 >> 2];
            z2 = +g[b2 + 144 >> 2];
            F2 = +g[e2 + 8 >> 2];
            y2 = +g[b2 + 116 >> 2];
            x2 = +g[b2 + 132 >> 2];
            w2 = +g[b2 + 148 >> 2];
            q2 = +g[b2 + 120 >> 2];
            r2 = +g[b2 + 136 >> 2];
            s2 = +g[b2 + 152 >> 2];
            E2 = +g[e2 + 16 >> 2];
            D2 = +g[e2 + 20 >> 2];
            C2 = +g[e2 + 24 >> 2];
            t2 = +g[e2 + 32 >> 2];
            u2 = +g[e2 + 36 >> 2];
            v2 = +g[e2 + 40 >> 2];
            p2 = +g[b2 + 160 >> 2];
            j2 = +g[b2 + 164 >> 2];
            i2 = +g[b2 + 168 >> 2];
            h2 = +g[e2 + 48 >> 2] + (f2 * p2 + G2 * j2 + F2 * i2);
            k2 = E2 * p2 + D2 * j2 + C2 * i2 + +g[e2 + 52 >> 2];
            i2 = t2 * p2 + u2 * j2 + v2 * i2 + +g[e2 + 56 >> 2];
            g[b2 + 1128 >> 2] = B2 * f2 + A2 * G2 + z2 * F2;
            g[b2 + 1132 >> 2] = f2 * y2 + G2 * x2 + F2 * w2;
            g[b2 + 1136 >> 2] = f2 * q2 + G2 * r2 + F2 * s2;
            g[b2 + 1140 >> 2] = 0;
            g[b2 + 1144 >> 2] = B2 * E2 + A2 * D2 + z2 * C2;
            g[b2 + 1148 >> 2] = y2 * E2 + x2 * D2 + w2 * C2;
            g[b2 + 1152 >> 2] = q2 * E2 + r2 * D2 + s2 * C2;
            g[b2 + 1156 >> 2] = 0;
            g[b2 + 1160 >> 2] = B2 * t2 + A2 * u2 + z2 * v2;
            g[b2 + 1164 >> 2] = y2 * t2 + x2 * u2 + w2 * v2;
            g[b2 + 1168 >> 2] = q2 * t2 + r2 * u2 + s2 * v2;
            g[b2 + 1172 >> 2] = 0;
            g[b2 + 1176 >> 2] = h2;
            g[b2 + 1180 >> 2] = k2;
            g[b2 + 1184 >> 2] = i2;
            g[b2 + 1188 >> 2] = 0;
            h2 = h2 - +g[b2 + 1112 >> 2];
            k2 = k2 - +g[b2 + 1116 >> 2];
            i2 = i2 - +g[b2 + 1120 >> 2];
            w2 = +g[b2 + 1084 >> 2];
            x2 = +g[b2 + 1104 >> 2];
            y2 = +g[b2 + 1088 >> 2];
            z2 = +g[b2 + 1100 >> 2];
            A2 = +g[b2 + 1096 >> 2];
            B2 = +g[b2 + 1080 >> 2];
            C2 = +g[b2 + 1064 >> 2];
            D2 = +g[b2 + 1068 >> 2];
            E2 = +g[b2 + 1072 >> 2];
            F2 = 1 / ((w2 * x2 - y2 * z2) * C2 + D2 * (y2 * A2 - x2 * B2) + (z2 * B2 - w2 * A2) * E2);
            G2 = (z2 * B2 - w2 * A2) * F2;
            f2 = i2 * ((y2 * D2 - w2 * E2) * F2) + (h2 * ((w2 * x2 - y2 * z2) * F2) + k2 * ((z2 * E2 - x2 * D2) * F2));
            j2 = i2 * ((B2 * E2 - y2 * C2) * F2) + (h2 * ((y2 * A2 - x2 * B2) * F2) + k2 * ((x2 * C2 - A2 * E2) * F2));
            k2 = i2 * ((w2 * C2 - B2 * D2) * F2) + (h2 * G2 + k2 * ((A2 * D2 - z2 * C2) * F2));
            g[b2 + 1256 >> 2] = f2;
            g[b2 + 1260 >> 2] = j2;
            g[b2 + 1264 >> 2] = k2;
            g[b2 + 1268 >> 2] = 0;
            g[b2 + 840 >> 2] = f2;
            h2 = +g[b2 + 680 >> 2];
            i2 = +g[b2 + 696 >> 2];
            do
              if (!(h2 > i2)) {
                if (h2 > f2) {
                  c[b2 + 856 >> 2] = 2;
                  g[b2 + 824 >> 2] = f2 - h2;
                  break;
                }
                if (i2 < f2) {
                  c[b2 + 856 >> 2] = 1;
                  g[b2 + 824 >> 2] = f2 - i2;
                  break;
                } else {
                  c[b2 + 856 >> 2] = 0;
                  g[b2 + 824 >> 2] = 0;
                  break;
                }
              } else {
                c[b2 + 856 >> 2] = 0;
                g[b2 + 824 >> 2] = 0;
              }
            while (0);
            g[b2 + 844 >> 2] = j2;
            f2 = +g[b2 + 684 >> 2];
            h2 = +g[b2 + 700 >> 2];
            do
              if (!(f2 > h2)) {
                if (f2 > j2) {
                  c[b2 + 860 >> 2] = 2;
                  g[b2 + 828 >> 2] = j2 - f2;
                  break;
                }
                if (h2 < j2) {
                  c[b2 + 860 >> 2] = 1;
                  g[b2 + 828 >> 2] = j2 - h2;
                  break;
                } else {
                  c[b2 + 860 >> 2] = 0;
                  g[b2 + 828 >> 2] = 0;
                  break;
                }
              } else {
                c[b2 + 860 >> 2] = 0;
                g[b2 + 828 >> 2] = 0;
              }
            while (0);
            g[b2 + 848 >> 2] = k2;
            f2 = +g[b2 + 688 >> 2];
            h2 = +g[b2 + 704 >> 2];
            do
              if (!(f2 > h2)) {
                if (f2 > k2) {
                  c[b2 + 864 >> 2] = 2;
                  g[b2 + 832 >> 2] = k2 - f2;
                  break;
                }
                if (h2 < k2) {
                  c[b2 + 864 >> 2] = 1;
                  g[b2 + 832 >> 2] = k2 - h2;
                  break;
                } else {
                  c[b2 + 864 >> 2] = 0;
                  g[b2 + 832 >> 2] = 0;
                  break;
                }
              } else {
                c[b2 + 864 >> 2] = 0;
                g[b2 + 832 >> 2] = 0;
              }
            while (0);
            h2 = +g[b2 + 1128 >> 2];
            i2 = +g[b2 + 1144 >> 2];
            j2 = +g[b2 + 1160 >> 2];
            k2 = +g[b2 + 1132 >> 2];
            l2 = +g[b2 + 1148 >> 2];
            m2 = +g[b2 + 1164 >> 2];
            n2 = (w2 * x2 - y2 * z2) * F2 * k2 + (z2 * E2 - x2 * D2) * F2 * l2 + (y2 * D2 - w2 * E2) * F2 * m2;
            o2 = k2 * ((y2 * A2 - x2 * B2) * F2) + (x2 * C2 - A2 * E2) * F2 * l2 + (B2 * E2 - y2 * C2) * F2 * m2;
            p2 = j2 * ((w2 * C2 - B2 * D2) * F2) + (h2 * G2 + i2 * ((A2 * D2 - z2 * C2) * F2));
            f2 = G2 * +g[b2 + 1136 >> 2] + (A2 * D2 - z2 * C2) * F2 * +g[b2 + 1152 >> 2] + (w2 * C2 - B2 * D2) * F2 * (q2 * t2 + r2 * u2 + s2 * v2);
            do
              if (p2 < 1)
                if (p2 > -1) {
                  g[b2 + 1192 >> 2] = +W(+-(k2 * G2 + (A2 * D2 - z2 * C2) * F2 * l2 + (w2 * C2 - B2 * D2) * F2 * m2), +f2);
                  G2 = p2 < -1 ? -1 : p2;
                  g[b2 + 1196 >> 2] = +U(+(G2 > 1 ? 1 : G2));
                  g[b2 + 1200 >> 2] = +W(+-(j2 * ((B2 * E2 - y2 * C2) * F2) + (h2 * ((y2 * A2 - x2 * B2) * F2) + i2 * ((x2 * C2 - A2 * E2) * F2))), +(j2 * ((y2 * D2 - w2 * E2) * F2) + (h2 * ((w2 * x2 - y2 * z2) * F2) + i2 * ((z2 * E2 - x2 * D2) * F2))));
                  break;
                } else {
                  g[b2 + 1192 >> 2] = -+W(+n2, +o2);
                  g[b2 + 1196 >> 2] = -1.5707963705062866;
                  g[b2 + 1200 >> 2] = 0;
                  break;
                }
              else {
                g[b2 + 1192 >> 2] = +W(+n2, +o2);
                g[b2 + 1196 >> 2] = 1.5707963705062866;
                g[b2 + 1200 >> 2] = 0;
              }
            while (0);
            g[b2 + 1236 >> 2] = 0;
            z2 = x2 * (h2 * x2 - j2 * E2) - y2 * (i2 * E2 - h2 * y2);
            A2 = E2 * (i2 * E2 - h2 * y2) - x2 * (j2 * y2 - i2 * x2);
            B2 = y2 * (j2 * y2 - i2 * x2) - E2 * (h2 * x2 - j2 * E2);
            g[b2 + 1220 >> 2] = 0;
            C2 = i2 * (i2 * E2 - h2 * y2) - j2 * (h2 * x2 - j2 * E2);
            D2 = j2 * (j2 * y2 - i2 * x2) - h2 * (i2 * E2 - h2 * y2);
            F2 = h2 * (h2 * x2 - j2 * E2) - i2 * (j2 * y2 - i2 * x2);
            g[b2 + 1252 >> 2] = 0;
            G2 = 1 / +O(+(z2 * z2 + A2 * A2 + B2 * B2));
            g[b2 + 1208 >> 2] = z2 * G2;
            g[b2 + 1212 >> 2] = A2 * G2;
            g[b2 + 1216 >> 2] = B2 * G2;
            G2 = 1 / +O(+((j2 * y2 - i2 * x2) * (j2 * y2 - i2 * x2) + (h2 * x2 - j2 * E2) * (h2 * x2 - j2 * E2) + (i2 * E2 - h2 * y2) * (i2 * E2 - h2 * y2)));
            g[b2 + 1224 >> 2] = (j2 * y2 - i2 * x2) * G2;
            g[b2 + 1228 >> 2] = (h2 * x2 - j2 * E2) * G2;
            g[b2 + 1232 >> 2] = (i2 * E2 - h2 * y2) * G2;
            G2 = 1 / +O(+(C2 * C2 + D2 * D2 + F2 * F2));
            g[b2 + 1240 >> 2] = C2 * G2;
            g[b2 + 1244 >> 2] = D2 * G2;
            g[b2 + 1248 >> 2] = F2 * G2;
            if (!(a[b2 + 1301 >> 0] | 0))
              return;
            F2 = +g[(c[b2 + 28 >> 2] | 0) + 368 >> 2];
            G2 = +g[(c[b2 + 32 >> 2] | 0) + 368 >> 2];
            a[b2 + 1280 >> 0] = (F2 < 11920928955078125e-23 | G2 < 11920928955078125e-23) & 1;
            G2 = F2 + G2 > 0 ? G2 / (F2 + G2) : 0.5;
            g[b2 + 1272 >> 2] = G2;
            g[b2 + 1276 >> 2] = 1 - G2;
            return;
          }
          function $o(a2, b2, d2, e2, f2, h2, j2, k2, l2, m2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = +f2;
            h2 = +h2;
            j2 = +j2;
            k2 = +k2;
            l2 = +l2;
            m2 = +m2;
            var n2 = 0;
            n2 = i;
            i = i + 128 | 0;
            c[n2 + 80 >> 2] = c[a2 + 4 >> 2];
            c[n2 + 80 + 4 >> 2] = c[a2 + 20 >> 2];
            c[n2 + 80 + 8 >> 2] = c[a2 + 36 >> 2];
            g[n2 + 80 + 12 >> 2] = 0;
            c[n2 + 80 + 16 >> 2] = c[a2 + 8 >> 2];
            c[n2 + 80 + 20 >> 2] = c[a2 + 24 >> 2];
            c[n2 + 80 + 24 >> 2] = c[a2 + 40 >> 2];
            g[n2 + 80 + 28 >> 2] = 0;
            c[n2 + 80 + 32 >> 2] = c[a2 + 12 >> 2];
            c[n2 + 80 + 36 >> 2] = c[a2 + 28 >> 2];
            c[n2 + 80 + 40 >> 2] = c[a2 + 44 >> 2];
            g[n2 + 80 + 44 >> 2] = 0;
            c[n2 + 32 >> 2] = c[b2 + 4 >> 2];
            c[n2 + 32 + 4 >> 2] = c[b2 + 20 >> 2];
            c[n2 + 32 + 8 >> 2] = c[b2 + 36 >> 2];
            g[n2 + 32 + 12 >> 2] = 0;
            c[n2 + 32 + 16 >> 2] = c[b2 + 8 >> 2];
            c[n2 + 32 + 20 >> 2] = c[b2 + 24 >> 2];
            c[n2 + 32 + 24 >> 2] = c[b2 + 40 >> 2];
            g[n2 + 32 + 28 >> 2] = 0;
            c[n2 + 32 + 32 >> 2] = c[b2 + 12 >> 2];
            c[n2 + 32 + 36 >> 2] = c[b2 + 28 >> 2];
            c[n2 + 32 + 40 >> 2] = c[b2 + 44 >> 2];
            g[n2 + 32 + 44 >> 2] = 0;
            h2 = h2 - +g[a2 + 56 >> 2];
            j2 = j2 - +g[a2 + 60 >> 2];
            g[n2 + 16 >> 2] = f2 - +g[a2 + 52 >> 2];
            g[n2 + 16 + 4 >> 2] = h2;
            g[n2 + 16 + 8 >> 2] = j2;
            g[n2 + 16 + 12 >> 2] = 0;
            l2 = l2 - +g[b2 + 56 >> 2];
            m2 = m2 - +g[b2 + 60 >> 2];
            g[n2 >> 2] = k2 - +g[b2 + 52 >> 2];
            g[n2 + 4 >> 2] = l2;
            g[n2 + 8 >> 2] = m2;
            g[n2 + 12 >> 2] = 0;
            Ho(d2, n2 + 80 | 0, n2 + 32 | 0, n2 + 16 | 0, n2, e2, a2 + 420 | 0, +g[a2 + 368 >> 2], b2 + 420 | 0, +g[b2 + 368 >> 2]);
            i = n2;
            return;
          }
          function ap(a2, b2, c2) {
            a2 = +a2;
            b2 = +b2;
            c2 = +c2;
            var d2 = 0, e2 = 0, f2 = 0;
            if (b2 >= c2)
              return +a2;
            if (a2 < b2) {
              d2 = +oG(b2 - a2);
              if (!(d2 < -3.1415927410125732)) {
                if (d2 > 3.1415927410125732)
                  d2 = d2 + -6.2831854820251465;
              } else
                d2 = d2 + 6.2831854820251465;
              e2 = +N(+d2);
              d2 = +oG(c2 - a2);
              if (!(d2 < -3.1415927410125732)) {
                if (d2 > 3.1415927410125732)
                  d2 = d2 + -6.2831854820251465;
              } else
                d2 = d2 + 6.2831854820251465;
              f2 = e2 < +N(+d2);
              a2 = f2 ? a2 : a2 + 6.2831854820251465;
              return +a2;
            }
            if (!(a2 > c2))
              return +a2;
            d2 = +oG(a2 - c2);
            if (!(d2 < -3.1415927410125732)) {
              if (d2 > 3.1415927410125732)
                d2 = d2 + -6.2831854820251465;
            } else
              d2 = d2 + 6.2831854820251465;
            e2 = +N(+d2);
            d2 = +oG(a2 - b2);
            if (!(d2 < -3.1415927410125732)) {
              if (d2 > 3.1415927410125732)
                d2 = d2 + -6.2831854820251465;
            } else
              d2 = d2 + 6.2831854820251465;
            f2 = +N(+d2) < e2;
            a2 = f2 ? a2 + -6.2831854820251465 : a2;
            return +a2;
          }
          function bp(b2, d2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0;
            if (a[b2 + 1308 >> 0] | 0) {
              c[d2 >> 2] = 0;
              c[d2 + 4 >> 2] = 0;
              return;
            }
            _o(b2, (c[b2 + 28 >> 2] | 0) + 4 | 0, (c[b2 + 32 >> 2] | 0) + 4 | 0);
            c[d2 >> 2] = 0;
            c[d2 + 4 >> 2] = 6;
            if ((c[b2 + 856 >> 2] | 0) == 0 ? (a[b2 + 788 >> 0] | 0) == 0 : 0) {
              e2 = 0;
              f2 = 6;
            } else {
              c[d2 >> 2] = 1;
              c[d2 + 4 >> 2] = 5;
              e2 = 1;
              f2 = 5;
            }
            if (!((c[b2 + 860 >> 2] | 0) == 0 ? (a[b2 + 789 >> 0] | 0) == 0 : 0)) {
              e2 = e2 + 1 | 0;
              c[d2 >> 2] = e2;
              f2 = f2 + -1 | 0;
              c[d2 + 4 >> 2] = f2;
            }
            if ((c[b2 + 864 >> 2] | 0) == 0 ? (a[b2 + 790 >> 0] | 0) == 0 : 0)
              l2 = 0;
            else {
              e2 = e2 + 1 | 0;
              c[d2 >> 2] = e2;
              f2 = f2 + -1 | 0;
              c[d2 + 4 >> 2] = f2;
              l2 = 0;
            }
            do {
              i2 = +g[b2 + 868 + (l2 << 6) >> 2];
              j2 = +g[b2 + 868 + (l2 << 6) + 4 >> 2];
              k2 = +ap(+g[b2 + 1192 + (l2 << 2) >> 2], i2, j2);
              g[b2 + 868 + (l2 << 6) + 52 >> 2] = k2;
              do
                if (!(i2 > j2)) {
                  if (i2 > k2) {
                    c[b2 + 868 + (l2 << 6) + 56 >> 2] = 1;
                    h2 = b2 + 868 + (l2 << 6) + 48 | 0;
                    g[h2 >> 2] = k2 - i2;
                    if (k2 - i2 > 3.1415927410125732) {
                      g[h2 >> 2] = k2 - i2 + -6.2831854820251465;
                      h2 = 21;
                      break;
                    }
                    if (!(k2 - i2 < -3.1415927410125732)) {
                      h2 = 21;
                      break;
                    }
                    g[h2 >> 2] = k2 - i2 + 6.2831854820251465;
                    h2 = 21;
                    break;
                  }
                  h2 = b2 + 868 + (l2 << 6) + 56 | 0;
                  if (!(j2 < k2)) {
                    c[h2 >> 2] = 0;
                    h2 = 20;
                    break;
                  }
                  c[h2 >> 2] = 2;
                  h2 = b2 + 868 + (l2 << 6) + 48 | 0;
                  g[h2 >> 2] = k2 - j2;
                  if (k2 - j2 > 3.1415927410125732) {
                    g[h2 >> 2] = k2 - j2 + -6.2831854820251465;
                    h2 = 21;
                    break;
                  }
                  if (k2 - j2 < -3.1415927410125732) {
                    g[h2 >> 2] = k2 - j2 + 6.2831854820251465;
                    h2 = 21;
                  } else
                    h2 = 21;
                } else {
                  c[b2 + 868 + (l2 << 6) + 56 >> 2] = 0;
                  h2 = 20;
                }
              while (0);
              if ((h2 | 0) == 20) {
                h2 = 0;
                if (a[b2 + 868 + (l2 << 6) + 44 >> 0] | 0)
                  h2 = 21;
              }
              if ((h2 | 0) == 21) {
                e2 = e2 + 1 | 0;
                c[d2 >> 2] = e2;
                f2 = f2 + -1 | 0;
                c[d2 + 4 >> 2] = f2;
              }
              l2 = l2 + 1 | 0;
            } while ((l2 | 0) != 3);
            return;
          }
          function cp(b2, d2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0;
            l2 = i;
            i = i + 16 | 0;
            j2 = c[b2 + 28 >> 2] | 0;
            k2 = c[b2 + 32 >> 2] | 0;
            if (!(a[b2 + 1301 >> 0] | 0)) {
              h2 = 0;
              e2 = ep(b2, d2, 0, j2 + 4 | 0, k2 + 4 | 0, j2 + 336 | 0, k2 + 336 | 0, j2 + 352 | 0, k2 + 352 | 0) | 0;
              do {
                f2 = b2 + 868 + (h2 << 6) | 0;
                if (!((c[b2 + 868 + (h2 << 6) + 56 >> 2] | 0) == 0 ? (a[b2 + 868 + (h2 << 6) + 44 >> 0] | 0) == 0 : 0)) {
                  g2 = b2 + 1208 + (h2 << 4) | 0;
                  c[l2 >> 2] = c[g2 >> 2];
                  c[l2 + 4 >> 2] = c[g2 + 4 >> 2];
                  c[l2 + 8 >> 2] = c[g2 + 8 >> 2];
                  c[l2 + 12 >> 2] = c[g2 + 12 >> 2];
                  g2 = c[b2 + 1304 >> 2] >> (h2 * 3 | 0) + 9;
                  if (!(g2 & 1))
                    c[b2 + 868 + (h2 << 6) + 28 >> 2] = c[c[d2 + 32 >> 2] >> 2];
                  if (!(g2 & 2))
                    c[b2 + 868 + (h2 << 6) + 36 >> 2] = c[c[d2 + 32 >> 2] >> 2];
                  if (!(g2 & 4))
                    c[b2 + 868 + (h2 << 6) + 32 >> 2] = c[d2 + 4 >> 2];
                  e2 = (dp(b2, f2, j2 + 4 | 0, k2 + 4 | 0, j2 + 336 | 0, k2 + 336 | 0, j2 + 352 | 0, k2 + 352 | 0, d2, e2, l2, 1, 0) | 0) + e2 | 0;
                }
                h2 = h2 + 1 | 0;
              } while ((h2 | 0) != 3);
              i = l2;
              return;
            }
            h2 = 0;
            e2 = 0;
            do {
              f2 = b2 + 868 + (h2 << 6) | 0;
              if (!((c[b2 + 868 + (h2 << 6) + 56 >> 2] | 0) == 0 ? (a[b2 + 868 + (h2 << 6) + 44 >> 0] | 0) == 0 : 0)) {
                g2 = b2 + 1208 + (h2 << 4) | 0;
                c[l2 >> 2] = c[g2 >> 2];
                c[l2 + 4 >> 2] = c[g2 + 4 >> 2];
                c[l2 + 8 >> 2] = c[g2 + 8 >> 2];
                c[l2 + 12 >> 2] = c[g2 + 12 >> 2];
                g2 = c[b2 + 1304 >> 2] >> (h2 * 3 | 0) + 9;
                if (!(g2 & 1))
                  c[b2 + 868 + (h2 << 6) + 28 >> 2] = c[c[d2 + 32 >> 2] >> 2];
                if (!(g2 & 2))
                  c[b2 + 868 + (h2 << 6) + 36 >> 2] = c[c[d2 + 32 >> 2] >> 2];
                if (!(g2 & 4))
                  c[b2 + 868 + (h2 << 6) + 32 >> 2] = c[d2 + 4 >> 2];
                e2 = (dp(b2, f2, j2 + 4 | 0, k2 + 4 | 0, j2 + 336 | 0, k2 + 336 | 0, j2 + 352 | 0, k2 + 352 | 0, d2, e2, l2, 1, 0) | 0) + e2 | 0;
              }
              h2 = h2 + 1 | 0;
            } while ((h2 | 0) != 3);
            ep(b2, d2, e2, j2 + 4 | 0, k2 + 4 | 0, j2 + 336 | 0, k2 + 336 | 0, j2 + 352 | 0, k2 + 352 | 0) | 0;
            i = l2;
            return;
          }
          function dp(b2, d2, e2, f2, h2, i2, j2, k2, l2, m2, n2, o2, p2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            h2 = h2 | 0;
            i2 = i2 | 0;
            j2 = j2 | 0;
            k2 = k2 | 0;
            l2 = l2 | 0;
            m2 = m2 | 0;
            n2 = n2 | 0;
            o2 = o2 | 0;
            p2 = p2 | 0;
            var q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0;
            A2 = _(c[l2 + 24 >> 2] | 0, m2) | 0;
            m2 = a[d2 + 44 >> 0] | 0;
            z2 = c[d2 + 56 >> 2] | 0;
            if (!(m2 << 24 >> 24 != 0 | (z2 | 0) != 0)) {
              A2 = 0;
              return A2 | 0;
            }
            C2 = c[(o2 | 0 ? l2 + 12 | 0 : l2 + 8 | 0) >> 2] | 0;
            B2 = c[(o2 | 0 ? l2 + 20 | 0 : l2 + 16 | 0) >> 2] | 0;
            c[C2 + (A2 << 2) >> 2] = c[n2 >> 2];
            c[C2 + (A2 + 1 << 2) >> 2] = c[n2 + 4 >> 2];
            c[C2 + (A2 + 2 << 2) >> 2] = c[n2 + 8 >> 2];
            g[B2 + (A2 << 2) >> 2] = -+g[n2 >> 2];
            g[B2 + (A2 + 1 << 2) >> 2] = -+g[n2 + 4 >> 2];
            g[B2 + (A2 + 2 << 2) >> 2] = -+g[n2 + 8 >> 2];
            do
              if (!o2) {
                q2 = +g[b2 + 1176 >> 2];
                if (!(a[b2 + 1301 >> 0] | 0)) {
                  t2 = q2 - +g[e2 + 48 >> 2];
                  w2 = +g[b2 + 1180 >> 2] - +g[e2 + 52 >> 2];
                  x2 = +g[b2 + 1184 >> 2] - +g[e2 + 56 >> 2];
                  v2 = +g[n2 + 8 >> 2];
                  s2 = +g[n2 + 4 >> 2];
                  u2 = +g[n2 >> 2];
                  C2 = c[l2 + 12 >> 2] | 0;
                  g[C2 + (A2 << 2) >> 2] = w2 * v2 - x2 * s2;
                  g[C2 + (A2 + 1 << 2) >> 2] = x2 * u2 - t2 * v2;
                  g[C2 + (A2 + 2 << 2) >> 2] = t2 * s2 - w2 * u2;
                  u2 = +g[b2 + 1176 >> 2] - +g[f2 + 48 >> 2];
                  w2 = +g[b2 + 1180 >> 2] - +g[f2 + 52 >> 2];
                  s2 = +g[b2 + 1184 >> 2] - +g[f2 + 56 >> 2];
                  t2 = +g[n2 + 8 >> 2];
                  v2 = +g[n2 + 4 >> 2];
                  x2 = +g[n2 >> 2];
                  C2 = c[l2 + 20 >> 2] | 0;
                  g[C2 + (A2 << 2) >> 2] = -(w2 * t2 - s2 * v2);
                  g[C2 + (A2 + 1 << 2) >> 2] = -(s2 * x2 - u2 * t2);
                  g[C2 + (A2 + 2 << 2) >> 2] = -(u2 * v2 - w2 * x2);
                  break;
                }
                I2 = q2 - +g[f2 + 48 >> 2];
                H2 = +g[b2 + 1180 >> 2] - +g[f2 + 52 >> 2];
                F2 = +g[b2 + 1184 >> 2] - +g[f2 + 56 >> 2];
                u2 = +g[n2 >> 2];
                G2 = +g[n2 + 4 >> 2];
                E2 = +g[n2 + 8 >> 2];
                K2 = +g[b2 + 1112 >> 2] - +g[e2 + 48 >> 2];
                t2 = +g[b2 + 1116 >> 2] - +g[e2 + 52 >> 2];
                q2 = +g[b2 + 1120 >> 2] - +g[e2 + 56 >> 2];
                v2 = +g[d2 + 52 >> 2] - +g[d2 + 48 >> 2];
                J2 = u2 * (u2 * K2 + G2 * t2 + E2 * q2) + u2 * v2 - u2 * (I2 * u2 + H2 * G2 + F2 * E2);
                D2 = G2 * (u2 * K2 + G2 * t2 + E2 * q2) + G2 * v2 - G2 * (I2 * u2 + H2 * G2 + F2 * E2);
                v2 = E2 * (u2 * K2 + G2 * t2 + E2 * q2) + E2 * v2 - E2 * (I2 * u2 + H2 * G2 + F2 * E2);
                x2 = +g[b2 + 1272 >> 2];
                w2 = +g[b2 + 1276 >> 2];
                s2 = E2 * (t2 - G2 * (u2 * K2 + G2 * t2 + E2 * q2) + x2 * D2) - G2 * (q2 - E2 * (u2 * K2 + G2 * t2 + E2 * q2) + x2 * v2);
                r2 = u2 * (q2 - E2 * (u2 * K2 + G2 * t2 + E2 * q2) + x2 * v2) - E2 * (K2 - u2 * (u2 * K2 + G2 * t2 + E2 * q2) + x2 * J2);
                q2 = G2 * (K2 - u2 * (u2 * K2 + G2 * t2 + E2 * q2) + x2 * J2) - u2 * (t2 - G2 * (u2 * K2 + G2 * t2 + E2 * q2) + x2 * D2);
                t2 = (H2 - G2 * (I2 * u2 + H2 * G2 + F2 * E2) - w2 * D2) * E2 - (F2 - E2 * (I2 * u2 + H2 * G2 + F2 * E2) - w2 * v2) * G2;
                v2 = (F2 - E2 * (I2 * u2 + H2 * G2 + F2 * E2) - w2 * v2) * u2 - (I2 - u2 * (I2 * u2 + H2 * G2 + F2 * E2) - w2 * J2) * E2;
                u2 = (I2 - u2 * (I2 * u2 + H2 * G2 + F2 * E2) - w2 * J2) * G2 - (H2 - G2 * (I2 * u2 + H2 * G2 + F2 * E2) - w2 * D2) * u2;
                if (!((p2 | 0) != 0 | (a[b2 + 1280 >> 0] | 0) == 0)) {
                  t2 = w2 * t2;
                  v2 = w2 * v2;
                  u2 = w2 * u2;
                  s2 = x2 * s2;
                  r2 = x2 * r2;
                  q2 = x2 * q2;
                }
                C2 = (c[l2 + 12 >> 2] | 0) + (A2 << 2) | 0;
                g[C2 >> 2] = s2;
                g[C2 + 4 >> 2] = r2;
                g[C2 + 8 >> 2] = q2;
                C2 = c[l2 + 20 >> 2] | 0;
                g[C2 + (A2 << 2) >> 2] = -t2;
                g[C2 + (A2 + 1 << 2) >> 2] = -v2;
                g[C2 + (A2 + 2 << 2) >> 2] = -u2;
              }
            while (0);
            if (z2 | 0 ? +g[d2 >> 2] == +g[d2 + 4 >> 2] : 0) {
              m2 = c[l2 + 28 >> 2] | 0;
              g[m2 + (A2 << 2) >> 2] = 0;
              q2 = 0;
              e2 = l2 + 28 | 0;
            } else
              y2 = 11;
            do
              if ((y2 | 0) == 11) {
                e2 = c[l2 + 28 >> 2] | 0;
                g[e2 + (A2 << 2) >> 2] = 0;
                if (!(m2 << 24 >> 24)) {
                  if (z2 | 0) {
                    m2 = e2;
                    q2 = 0;
                    e2 = l2 + 28 | 0;
                    break;
                  } else
                    m2 = 1;
                  return m2 | 0;
                }
                c[(c[l2 + 32 >> 2] | 0) + (A2 << 2) >> 2] = c[d2 + 28 >> 2];
                if (z2 | 0) {
                  m2 = e2;
                  q2 = +g[e2 + (A2 << 2) >> 2];
                  e2 = l2 + 28 | 0;
                  break;
                }
                v2 = +g[d2 + 8 >> 2];
                q2 = o2 | 0 ? v2 : -v2;
                r2 = +g[d2 + 52 >> 2];
                s2 = +g[d2 >> 2];
                t2 = +g[d2 + 4 >> 2];
                u2 = +g[l2 >> 2] * +g[d2 + 32 >> 2];
                do
                  if (!(s2 > t2))
                    if (!(s2 == t2)) {
                      if (q2 / u2 < 0)
                        if (r2 >= s2 ? s2 - q2 / u2 > r2 : 0) {
                          q2 = (s2 - r2) / (q2 / u2);
                          break;
                        } else {
                          q2 = r2 < s2 ? 0 : 1;
                          break;
                        }
                      if (q2 / u2 > 0)
                        if (r2 <= t2 ? t2 - q2 / u2 < r2 : 0) {
                          q2 = (t2 - r2) / (q2 / u2);
                          break;
                        } else {
                          q2 = r2 > t2 ? 0 : 1;
                          break;
                        }
                      else
                        q2 = 0;
                    } else
                      q2 = 0;
                  else
                    q2 = 1;
                while (0);
                g[e2 + (A2 << 2) >> 2] = q2 * v2 + +g[e2 + (A2 << 2) >> 2];
                g[(c[l2 + 36 >> 2] | 0) + (A2 << 2) >> 2] = -+g[d2 + 12 >> 2];
                c[(c[l2 + 40 >> 2] | 0) + (A2 << 2) >> 2] = c[d2 + 12 >> 2];
                C2 = 1;
                return C2 | 0;
              }
            while (0);
            K2 = +g[l2 >> 2] * +g[d2 + 32 >> 2] * +g[d2 + 48 >> 2];
            g[m2 + (A2 << 2) >> 2] = q2 + (o2 | 0 ? -K2 : K2);
            c[(c[l2 + 32 >> 2] | 0) + (A2 << 2) >> 2] = c[d2 + 36 >> 2];
            if (+g[d2 >> 2] == +g[d2 + 4 >> 2]) {
              g[(c[l2 + 36 >> 2] | 0) + (A2 << 2) >> 2] = -34028234663852886e22;
              g[(c[l2 + 40 >> 2] | 0) + (A2 << 2) >> 2] = 34028234663852886e22;
              C2 = 1;
              return C2 | 0;
            }
            C2 = c[l2 + 40 >> 2] | 0;
            g[(c[l2 + 36 >> 2] | 0) + (A2 << 2) >> 2] = (z2 | 0) == 1 ? 0 : -34028234663852886e22;
            g[C2 + (A2 << 2) >> 2] = (z2 | 0) == 1 ? 34028234663852886e22 : 0;
            r2 = +g[d2 + 40 >> 2];
            if (!(r2 > 0)) {
              C2 = 1;
              return C2 | 0;
            }
            if (o2 | 0) {
              J2 = +g[n2 >> 2];
              K2 = +g[n2 + 4 >> 2];
              q2 = +g[n2 + 8 >> 2];
              q2 = +g[j2 >> 2] * J2 + +g[j2 + 4 >> 2] * K2 + +g[j2 + 8 >> 2] * q2 - (J2 * +g[k2 >> 2] + K2 * +g[k2 + 4 >> 2] + q2 * +g[k2 + 8 >> 2]);
            } else {
              J2 = +g[n2 >> 2];
              K2 = +g[n2 + 4 >> 2];
              q2 = +g[n2 + 8 >> 2];
              q2 = +g[h2 >> 2] * J2 + +g[h2 + 4 >> 2] * K2 + +g[h2 + 8 >> 2] * q2 - (J2 * +g[i2 >> 2] + K2 * +g[i2 + 4 >> 2] + q2 * +g[i2 + 8 >> 2]);
            }
            if ((z2 | 0) == 1) {
              if (!(q2 < 0)) {
                C2 = 1;
                return C2 | 0;
              }
              q2 = -(q2 * r2);
              m2 = (c[e2 >> 2] | 0) + (A2 << 2) | 0;
              if (!(+g[m2 >> 2] < q2)) {
                C2 = 1;
                return C2 | 0;
              }
              g[m2 >> 2] = q2;
              C2 = 1;
              return C2 | 0;
            } else {
              if (!(q2 > 0)) {
                C2 = 1;
                return C2 | 0;
              }
              q2 = -(q2 * r2);
              m2 = (c[e2 >> 2] | 0) + (A2 << 2) | 0;
              if (!(+g[m2 >> 2] > q2)) {
                C2 = 1;
                return C2 | 0;
              }
              g[m2 >> 2] = q2;
              C2 = 1;
              return C2 | 0;
            }
            return 0;
          }
          function ep(b2, d2, e2, f2, h2, j2, k2, l2, m2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            h2 = h2 | 0;
            j2 = j2 | 0;
            k2 = k2 | 0;
            l2 = l2 | 0;
            m2 = m2 | 0;
            var n2 = 0, o2 = 0, p2 = 0, q2 = 0;
            q2 = i;
            i = i + 80 | 0;
            g[q2 + 16 + 60 >> 2] = 0;
            g[q2 + 16 + 8 >> 2] = 0;
            g[q2 + 16 + 12 >> 2] = 0.10000000149011612;
            g[q2 + 16 + 16 >> 2] = 300;
            g[q2 + 16 >> 2] = 1;
            g[q2 + 16 + 4 >> 2] = -1;
            g[q2 + 16 + 28 >> 2] = 0;
            g[q2 + 16 + 32 >> 2] = 0.20000000298023224;
            g[q2 + 16 + 36 >> 2] = 0;
            g[q2 + 16 + 40 >> 2] = 0;
            g[q2 + 16 + 20 >> 2] = 1;
            g[q2 + 16 + 24 >> 2] = 0.5;
            c[q2 + 16 + 56 >> 2] = 0;
            g[q2 + 16 + 48 >> 2] = 0;
            a[q2 + 16 + 44 >> 0] = 0;
            p2 = 0;
            do {
              n2 = c[b2 + 856 + (p2 << 2) >> 2] | 0;
              o2 = a[b2 + 788 + p2 >> 0] | 0;
              if (!((n2 | 0) == 0 & o2 << 24 >> 24 == 0)) {
                g[q2 + 16 + 40 >> 2] = 0;
                c[q2 + 16 + 56 >> 2] = n2;
                c[q2 + 16 + 52 >> 2] = c[b2 + 840 + (p2 << 2) >> 2];
                c[q2 + 16 + 48 >> 2] = c[b2 + 824 + (p2 << 2) >> 2];
                c[q2 + 16 + 20 >> 2] = c[b2 + 732 >> 2];
                a[q2 + 16 + 44 >> 0] = o2;
                c[q2 + 16 + 4 >> 2] = c[b2 + 696 + (p2 << 2) >> 2];
                c[q2 + 16 + 24 >> 2] = c[b2 + 728 >> 2];
                c[q2 + 16 >> 2] = c[b2 + 680 + (p2 << 2) >> 2];
                g[q2 + 16 + 16 >> 2] = 0;
                c[q2 + 16 + 12 >> 2] = c[b2 + 808 + (p2 << 2) >> 2];
                c[q2 + 16 + 8 >> 2] = c[b2 + 792 + (p2 << 2) >> 2];
                c[q2 >> 2] = c[b2 + 1064 + (p2 << 2) >> 2];
                c[q2 + 4 >> 2] = c[b2 + 1080 + (p2 << 2) >> 2];
                c[q2 + 8 >> 2] = c[b2 + 1096 + (p2 << 2) >> 2];
                g[q2 + 12 >> 2] = 0;
                o2 = c[b2 + 1304 >> 2] >> p2 * 3;
                if (!(o2 & 1))
                  n2 = c[d2 + 32 >> 2] | 0;
                else
                  n2 = b2 + 740 + (p2 << 2) | 0;
                c[q2 + 16 + 28 >> 2] = c[n2 >> 2];
                if (!(o2 & 2))
                  n2 = c[d2 + 32 >> 2] | 0;
                else
                  n2 = b2 + 772 + (p2 << 2) | 0;
                c[q2 + 16 + 36 >> 2] = c[n2 >> 2];
                c[q2 + 16 + 32 >> 2] = c[((o2 & 4 | 0) == 0 ? d2 + 4 | 0 : b2 + 756 + (p2 << 2) | 0) >> 2];
                if (!(a[b2 + 1301 >> 0] | 0))
                  n2 = dp(b2, q2 + 16 | 0, f2, h2, j2, k2, l2, m2, d2, e2, q2, 0, 0) | 0;
                else {
                  o2 = p2 + 1 | 0;
                  if (!(c[b2 + 868 + (((o2 | 0) == 3 ? 0 : o2) << 6) + 56 >> 2] | 0))
                    n2 = 1;
                  else
                    n2 = (c[b2 + 868 + (((p2 + 2 | 0) % 3 | 0) << 6) + 56 >> 2] | 0) == 0 & 1;
                  n2 = dp(b2, q2 + 16 | 0, f2, h2, j2, k2, l2, m2, d2, e2, q2, 0, n2) | 0;
                }
                e2 = n2 + e2 | 0;
              }
              p2 = p2 + 1 | 0;
            } while ((p2 | 0) != 3);
            i = q2;
            return e2 | 0;
          }
          function fp(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = +d2;
            e2 = e2 | 0;
            if (e2 >>> 0 < 3)
              switch (b2 | 0) {
                case 2: {
                  g[a2 + 756 + (e2 << 2) >> 2] = d2;
                  c[a2 + 1304 >> 2] = c[a2 + 1304 >> 2] | 4 << e2 * 3;
                  return;
                }
                case 4: {
                  g[a2 + 772 + (e2 << 2) >> 2] = d2;
                  c[a2 + 1304 >> 2] = c[a2 + 1304 >> 2] | 2 << e2 * 3;
                  return;
                }
                case 3: {
                  g[a2 + 740 + (e2 << 2) >> 2] = d2;
                  c[a2 + 1304 >> 2] = c[a2 + 1304 >> 2] | 1 << e2 * 3;
                  return;
                }
                default:
                  return;
              }
            if ((e2 + -3 | 0) >>> 0 >= 3)
              return;
            switch (b2 | 0) {
              case 2: {
                g[a2 + 868 + (e2 + -3 << 6) + 32 >> 2] = d2;
                c[a2 + 1304 >> 2] = c[a2 + 1304 >> 2] | 4 << e2 * 3;
                return;
              }
              case 4: {
                g[a2 + 868 + (e2 + -3 << 6) + 36 >> 2] = d2;
                c[a2 + 1304 >> 2] = c[a2 + 1304 >> 2] | 2 << e2 * 3;
                return;
              }
              case 3: {
                g[a2 + 868 + (e2 + -3 << 6) + 28 >> 2] = d2;
                c[a2 + 1304 >> 2] = c[a2 + 1304 >> 2] | 1 << e2 * 3;
                return;
              }
              default:
                return;
            }
          }
          function gp(a2, b2, c2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            var d2 = 0;
            a:
              do
                if (c2 >>> 0 >= 3)
                  if ((c2 + -3 | 0) >>> 0 < 3)
                    switch (b2 | 0) {
                      case 2: {
                        d2 = +g[a2 + 868 + (c2 + -3 << 6) + 32 >> 2];
                        break a;
                      }
                      case 4: {
                        d2 = +g[a2 + 868 + (c2 + -3 << 6) + 36 >> 2];
                        break a;
                      }
                      case 3: {
                        d2 = +g[a2 + 868 + (c2 + -3 << 6) + 28 >> 2];
                        break a;
                      }
                      default: {
                        d2 = 0;
                        break a;
                      }
                    }
                  else
                    d2 = 0;
                else
                  switch (b2 | 0) {
                    case 2: {
                      d2 = +g[a2 + 756 + (c2 << 2) >> 2];
                      break a;
                    }
                    case 4: {
                      d2 = +g[a2 + 772 + (c2 << 2) >> 2];
                      break a;
                    }
                    case 3: {
                      d2 = +g[a2 + 740 + (c2 << 2) >> 2];
                      break a;
                    }
                    default: {
                      d2 = 0;
                      break a;
                    }
                  }
              while (0);
            return +d2;
          }
          function hp(a2) {
            a2 = a2 | 0;
            return 252;
          }
          function ip(a2, d2, e2) {
            a2 = a2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            Aq(a2, d2, e2) | 0;
            c[d2 + 52 >> 2] = c[a2 + 48 >> 2];
            c[d2 + 56 >> 2] = c[a2 + 52 >> 2];
            c[d2 + 60 >> 2] = c[a2 + 56 >> 2];
            c[d2 + 64 >> 2] = c[a2 + 60 >> 2];
            c[d2 + 68 >> 2] = c[a2 + 64 >> 2];
            c[d2 + 72 >> 2] = c[a2 + 68 >> 2];
            c[d2 + 76 >> 2] = c[a2 + 72 >> 2];
            c[d2 + 80 >> 2] = c[a2 + 76 >> 2];
            c[d2 + 84 >> 2] = c[a2 + 80 >> 2];
            c[d2 + 88 >> 2] = c[a2 + 84 >> 2];
            c[d2 + 92 >> 2] = c[a2 + 88 >> 2];
            c[d2 + 96 >> 2] = c[a2 + 92 >> 2];
            c[d2 + 100 >> 2] = c[a2 + 96 >> 2];
            c[d2 + 104 >> 2] = c[a2 + 100 >> 2];
            c[d2 + 108 >> 2] = c[a2 + 104 >> 2];
            c[d2 + 112 >> 2] = c[a2 + 108 >> 2];
            c[d2 + 116 >> 2] = c[a2 + 112 >> 2];
            c[d2 + 120 >> 2] = c[a2 + 116 >> 2];
            c[d2 + 124 >> 2] = c[a2 + 120 >> 2];
            c[d2 + 128 >> 2] = c[a2 + 124 >> 2];
            c[d2 + 132 >> 2] = c[a2 + 128 >> 2];
            c[d2 + 136 >> 2] = c[a2 + 132 >> 2];
            c[d2 + 140 >> 2] = c[a2 + 136 >> 2];
            c[d2 + 144 >> 2] = c[a2 + 140 >> 2];
            c[d2 + 148 >> 2] = c[a2 + 144 >> 2];
            c[d2 + 152 >> 2] = c[a2 + 148 >> 2];
            c[d2 + 156 >> 2] = c[a2 + 152 >> 2];
            c[d2 + 160 >> 2] = c[a2 + 156 >> 2];
            c[d2 + 164 >> 2] = c[a2 + 160 >> 2];
            c[d2 + 168 >> 2] = c[a2 + 164 >> 2];
            c[d2 + 172 >> 2] = c[a2 + 168 >> 2];
            c[d2 + 176 >> 2] = c[a2 + 172 >> 2];
            c[d2 + 228 >> 2] = c[a2 + 868 >> 2];
            c[d2 + 212 >> 2] = c[a2 + 872 >> 2];
            c[d2 + 196 >> 2] = c[a2 + 680 >> 2];
            c[d2 + 180 >> 2] = c[a2 + 696 >> 2];
            c[d2 + 232 >> 2] = c[a2 + 932 >> 2];
            c[d2 + 216 >> 2] = c[a2 + 936 >> 2];
            c[d2 + 200 >> 2] = c[a2 + 684 >> 2];
            c[d2 + 184 >> 2] = c[a2 + 700 >> 2];
            c[d2 + 236 >> 2] = c[a2 + 996 >> 2];
            c[d2 + 220 >> 2] = c[a2 + 1e3 >> 2];
            c[d2 + 204 >> 2] = c[a2 + 688 >> 2];
            c[d2 + 188 >> 2] = c[a2 + 704 >> 2];
            a2 = b[a2 + 1300 >> 1] | 0;
            c[d2 + 244 >> 2] = a2 & 255;
            c[d2 + 248 >> 2] = (a2 & 65535) >>> 8 & 65535;
            return 15229;
          }
          function jp(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0, e2 = 0, f2 = 0;
            b2 = +g[(c[a2 + 28 >> 2] | 0) + 368 >> 2];
            d2 = +g[(c[a2 + 32 >> 2] | 0) + 368 >> 2];
            if (d2 == 0)
              b2 = 1;
            else
              b2 = b2 / (b2 + d2);
            f2 = 1 - b2;
            e2 = b2 * +g[a2 + 1116 >> 2] + f2 * +g[a2 + 1180 >> 2];
            d2 = b2 * +g[a2 + 1120 >> 2] + f2 * +g[a2 + 1184 >> 2];
            g[a2 + 1284 >> 2] = b2 * +g[a2 + 1112 >> 2] + f2 * +g[a2 + 1176 >> 2];
            g[a2 + 1288 >> 2] = e2;
            g[a2 + 1292 >> 2] = d2;
            g[a2 + 1296 >> 2] = 0;
            return;
          }
          function kp(a2) {
            a2 = a2 | 0;
            return c[a2 + 1304 >> 2] | 0;
          }
          function lp(b2, d2, e2, f2, h2, i2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            h2 = h2 | 0;
            i2 = i2 | 0;
            c[b2 + 4 >> 2] = 6;
            c[b2 + 8 >> 2] = -1;
            c[b2 + 12 >> 2] = -1;
            g[b2 + 16 >> 2] = 34028234663852886e22;
            a[b2 + 20 >> 0] = 1;
            a[b2 + 21 >> 0] = 0;
            c[b2 + 24 >> 2] = -1;
            c[b2 + 28 >> 2] = d2;
            c[b2 + 32 >> 2] = e2;
            g[b2 + 36 >> 2] = 0;
            g[b2 + 40 >> 2] = 0.30000001192092896;
            c[b2 + 44 >> 2] = 0;
            c[b2 >> 2] = 7240;
            c[b2 + 48 >> 2] = c[f2 >> 2];
            c[b2 + 48 + 4 >> 2] = c[f2 + 4 >> 2];
            c[b2 + 48 + 8 >> 2] = c[f2 + 8 >> 2];
            c[b2 + 48 + 12 >> 2] = c[f2 + 12 >> 2];
            c[b2 + 64 >> 2] = c[f2 + 16 >> 2];
            c[b2 + 64 + 4 >> 2] = c[f2 + 16 + 4 >> 2];
            c[b2 + 64 + 8 >> 2] = c[f2 + 16 + 8 >> 2];
            c[b2 + 64 + 12 >> 2] = c[f2 + 16 + 12 >> 2];
            c[b2 + 80 >> 2] = c[f2 + 32 >> 2];
            c[b2 + 80 + 4 >> 2] = c[f2 + 32 + 4 >> 2];
            c[b2 + 80 + 8 >> 2] = c[f2 + 32 + 8 >> 2];
            c[b2 + 80 + 12 >> 2] = c[f2 + 32 + 12 >> 2];
            c[b2 + 96 >> 2] = c[f2 + 48 >> 2];
            c[b2 + 96 + 4 >> 2] = c[f2 + 48 + 4 >> 2];
            c[b2 + 96 + 8 >> 2] = c[f2 + 48 + 8 >> 2];
            c[b2 + 96 + 12 >> 2] = c[f2 + 48 + 12 >> 2];
            c[b2 + 112 >> 2] = c[h2 >> 2];
            c[b2 + 112 + 4 >> 2] = c[h2 + 4 >> 2];
            c[b2 + 112 + 8 >> 2] = c[h2 + 8 >> 2];
            c[b2 + 112 + 12 >> 2] = c[h2 + 12 >> 2];
            c[b2 + 128 >> 2] = c[h2 + 16 >> 2];
            c[b2 + 128 + 4 >> 2] = c[h2 + 16 + 4 >> 2];
            c[b2 + 128 + 8 >> 2] = c[h2 + 16 + 8 >> 2];
            c[b2 + 128 + 12 >> 2] = c[h2 + 16 + 12 >> 2];
            c[b2 + 144 >> 2] = c[h2 + 32 >> 2];
            c[b2 + 144 + 4 >> 2] = c[h2 + 32 + 4 >> 2];
            c[b2 + 144 + 8 >> 2] = c[h2 + 32 + 8 >> 2];
            c[b2 + 144 + 12 >> 2] = c[h2 + 32 + 12 >> 2];
            c[b2 + 160 >> 2] = c[h2 + 48 >> 2];
            c[b2 + 160 + 4 >> 2] = c[h2 + 48 + 4 >> 2];
            c[b2 + 160 + 8 >> 2] = c[h2 + 48 + 8 >> 2];
            c[b2 + 160 + 12 >> 2] = c[h2 + 48 + 12 >> 2];
            f2 = b2 + 680 | 0;
            h2 = f2 + 48 | 0;
            do {
              c[f2 >> 2] = 0;
              f2 = f2 + 4 | 0;
            } while ((f2 | 0) < (h2 | 0));
            c[b2 + 740 >> 2] = 0;
            c[b2 + 740 + 4 >> 2] = 0;
            c[b2 + 740 + 8 >> 2] = 0;
            c[b2 + 740 + 12 >> 2] = 0;
            c[b2 + 756 >> 2] = 1045220557;
            c[b2 + 760 >> 2] = 1045220557;
            c[b2 + 764 >> 2] = 1045220557;
            c[b2 + 768 >> 2] = 0;
            c[b2 + 768 + 4 >> 2] = 0;
            c[b2 + 768 + 8 >> 2] = 0;
            c[b2 + 768 + 12 >> 2] = 0;
            c[b2 + 768 + 16 >> 2] = 0;
            g[b2 + 728 >> 2] = 0.699999988079071;
            g[b2 + 732 >> 2] = 1;
            g[b2 + 736 >> 2] = 0.5;
            a[b2 + 788 >> 0] = 0;
            g[b2 + 792 >> 2] = 0;
            g[b2 + 808 >> 2] = 0;
            a[b2 + 789 >> 0] = 0;
            g[b2 + 796 >> 2] = 0;
            g[b2 + 812 >> 2] = 0;
            a[b2 + 790 >> 0] = 0;
            g[b2 + 800 >> 2] = 0;
            g[b2 + 816 >> 2] = 0;
            g[b2 + 928 >> 2] = 0;
            g[b2 + 876 >> 2] = 0;
            g[b2 + 880 >> 2] = 0.10000000149011612;
            g[b2 + 884 >> 2] = 300;
            g[b2 + 868 >> 2] = 1;
            g[b2 + 872 >> 2] = -1;
            g[b2 + 896 >> 2] = 0;
            g[b2 + 900 >> 2] = 0.20000000298023224;
            g[b2 + 904 >> 2] = 0;
            g[b2 + 908 >> 2] = 0;
            g[b2 + 888 >> 2] = 1;
            g[b2 + 892 >> 2] = 0.5;
            c[b2 + 924 >> 2] = 0;
            g[b2 + 916 >> 2] = 0;
            a[b2 + 912 >> 0] = 0;
            g[b2 + 992 >> 2] = 0;
            g[b2 + 940 >> 2] = 0;
            g[b2 + 944 >> 2] = 0.10000000149011612;
            g[b2 + 948 >> 2] = 300;
            g[b2 + 932 >> 2] = 1;
            g[b2 + 936 >> 2] = -1;
            g[b2 + 960 >> 2] = 0;
            g[b2 + 964 >> 2] = 0.20000000298023224;
            g[b2 + 968 >> 2] = 0;
            g[b2 + 972 >> 2] = 0;
            g[b2 + 952 >> 2] = 1;
            g[b2 + 956 >> 2] = 0.5;
            c[b2 + 988 >> 2] = 0;
            g[b2 + 980 >> 2] = 0;
            a[b2 + 976 >> 0] = 0;
            g[b2 + 1056 >> 2] = 0;
            g[b2 + 1004 >> 2] = 0;
            g[b2 + 1008 >> 2] = 0.10000000149011612;
            g[b2 + 1012 >> 2] = 300;
            g[b2 + 996 >> 2] = 1;
            g[b2 + 1e3 >> 2] = -1;
            g[b2 + 1024 >> 2] = 0;
            g[b2 + 1028 >> 2] = 0.20000000298023224;
            g[b2 + 1032 >> 2] = 0;
            g[b2 + 1036 >> 2] = 0;
            g[b2 + 1016 >> 2] = 1;
            g[b2 + 1020 >> 2] = 0.5;
            c[b2 + 1052 >> 2] = 0;
            g[b2 + 1044 >> 2] = 0;
            a[b2 + 1040 >> 0] = 0;
            a[b2 + 1300 >> 0] = i2 & 1;
            a[b2 + 1301 >> 0] = 1;
            c[b2 + 1304 >> 2] = 0;
            a[b2 + 1308 >> 0] = 0;
            _o(b2, (c[b2 + 28 >> 2] | 0) + 4 | 0, (c[b2 + 32 >> 2] | 0) + 4 | 0);
            return;
          }
          function mp(b2, d2, e2, f2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            var h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0;
            j2 = i;
            i = i + 16 | 0;
            if (!(a[19880] | 0)) {
              a[19880] = 1;
              c[j2 >> 2] = 0;
              c[j2 + 4 >> 2] = 0;
              c[j2 + 8 >> 2] = 0;
              c[j2 + 12 >> 2] = 0;
              Cr(21260, 0, 0, 0, j2);
            }
            c[5366] = c[5366] | 1;
            g[5407] = 0;
            k2 = +g[5417] * 0;
            l2 = +g[5418] * 0;
            g[5412] = +g[5416] * 0;
            g[5413] = k2;
            g[5414] = l2;
            g[5415] = 0;
            c[5420] = 0;
            c[5421] = 0;
            c[5422] = 0;
            c[5423] = 0;
            l2 = +g[5409] * 0;
            k2 = +g[5410] * 0;
            g[5461] = +g[5408] * 0;
            g[5462] = l2;
            g[5463] = k2;
            g[5464] = 0;
            c[b2 + 4 >> 2] = 6;
            c[b2 + 8 >> 2] = -1;
            c[b2 + 12 >> 2] = -1;
            g[b2 + 16 >> 2] = 34028234663852886e22;
            a[b2 + 20 >> 0] = 1;
            a[b2 + 21 >> 0] = 0;
            c[b2 + 24 >> 2] = -1;
            c[b2 + 28 >> 2] = 21260;
            c[b2 + 32 >> 2] = d2;
            g[b2 + 36 >> 2] = 0;
            g[b2 + 40 >> 2] = 0.30000001192092896;
            c[b2 + 44 >> 2] = 0;
            c[b2 >> 2] = 7240;
            c[b2 + 112 >> 2] = c[e2 >> 2];
            c[b2 + 112 + 4 >> 2] = c[e2 + 4 >> 2];
            c[b2 + 112 + 8 >> 2] = c[e2 + 8 >> 2];
            c[b2 + 112 + 12 >> 2] = c[e2 + 12 >> 2];
            c[b2 + 128 >> 2] = c[e2 + 16 >> 2];
            c[b2 + 128 + 4 >> 2] = c[e2 + 16 + 4 >> 2];
            c[b2 + 128 + 8 >> 2] = c[e2 + 16 + 8 >> 2];
            c[b2 + 128 + 12 >> 2] = c[e2 + 16 + 12 >> 2];
            c[b2 + 144 >> 2] = c[e2 + 32 >> 2];
            c[b2 + 144 + 4 >> 2] = c[e2 + 32 + 4 >> 2];
            c[b2 + 144 + 8 >> 2] = c[e2 + 32 + 8 >> 2];
            c[b2 + 144 + 12 >> 2] = c[e2 + 32 + 12 >> 2];
            c[b2 + 160 >> 2] = c[e2 + 48 >> 2];
            c[b2 + 160 + 4 >> 2] = c[e2 + 48 + 4 >> 2];
            c[b2 + 160 + 8 >> 2] = c[e2 + 48 + 8 >> 2];
            c[b2 + 160 + 12 >> 2] = c[e2 + 48 + 12 >> 2];
            e2 = b2 + 680 | 0;
            h2 = e2 + 48 | 0;
            do {
              c[e2 >> 2] = 0;
              e2 = e2 + 4 | 0;
            } while ((e2 | 0) < (h2 | 0));
            c[b2 + 740 >> 2] = 0;
            c[b2 + 740 + 4 >> 2] = 0;
            c[b2 + 740 + 8 >> 2] = 0;
            c[b2 + 740 + 12 >> 2] = 0;
            c[b2 + 756 >> 2] = 1045220557;
            c[b2 + 760 >> 2] = 1045220557;
            c[b2 + 764 >> 2] = 1045220557;
            c[b2 + 768 >> 2] = 0;
            c[b2 + 768 + 4 >> 2] = 0;
            c[b2 + 768 + 8 >> 2] = 0;
            c[b2 + 768 + 12 >> 2] = 0;
            c[b2 + 768 + 16 >> 2] = 0;
            g[b2 + 728 >> 2] = 0.699999988079071;
            g[b2 + 732 >> 2] = 1;
            g[b2 + 736 >> 2] = 0.5;
            a[b2 + 788 >> 0] = 0;
            g[b2 + 792 >> 2] = 0;
            g[b2 + 808 >> 2] = 0;
            a[b2 + 789 >> 0] = 0;
            g[b2 + 796 >> 2] = 0;
            g[b2 + 812 >> 2] = 0;
            a[b2 + 790 >> 0] = 0;
            g[b2 + 800 >> 2] = 0;
            g[b2 + 816 >> 2] = 0;
            g[b2 + 928 >> 2] = 0;
            g[b2 + 876 >> 2] = 0;
            g[b2 + 880 >> 2] = 0.10000000149011612;
            g[b2 + 884 >> 2] = 300;
            g[b2 + 868 >> 2] = 1;
            g[b2 + 872 >> 2] = -1;
            g[b2 + 896 >> 2] = 0;
            g[b2 + 900 >> 2] = 0.20000000298023224;
            g[b2 + 904 >> 2] = 0;
            g[b2 + 908 >> 2] = 0;
            g[b2 + 888 >> 2] = 1;
            g[b2 + 892 >> 2] = 0.5;
            c[b2 + 924 >> 2] = 0;
            g[b2 + 916 >> 2] = 0;
            a[b2 + 912 >> 0] = 0;
            g[b2 + 992 >> 2] = 0;
            g[b2 + 940 >> 2] = 0;
            g[b2 + 944 >> 2] = 0.10000000149011612;
            g[b2 + 948 >> 2] = 300;
            g[b2 + 932 >> 2] = 1;
            g[b2 + 936 >> 2] = -1;
            g[b2 + 960 >> 2] = 0;
            g[b2 + 964 >> 2] = 0.20000000298023224;
            g[b2 + 968 >> 2] = 0;
            g[b2 + 972 >> 2] = 0;
            g[b2 + 952 >> 2] = 1;
            g[b2 + 956 >> 2] = 0.5;
            c[b2 + 988 >> 2] = 0;
            g[b2 + 980 >> 2] = 0;
            a[b2 + 976 >> 0] = 0;
            g[b2 + 1056 >> 2] = 0;
            g[b2 + 1004 >> 2] = 0;
            g[b2 + 1008 >> 2] = 0.10000000149011612;
            g[b2 + 1012 >> 2] = 300;
            g[b2 + 996 >> 2] = 1;
            g[b2 + 1e3 >> 2] = -1;
            g[b2 + 1024 >> 2] = 0;
            g[b2 + 1028 >> 2] = 0.20000000298023224;
            g[b2 + 1032 >> 2] = 0;
            g[b2 + 1036 >> 2] = 0;
            g[b2 + 1016 >> 2] = 1;
            g[b2 + 1020 >> 2] = 0.5;
            c[b2 + 1052 >> 2] = 0;
            g[b2 + 1044 >> 2] = 0;
            a[b2 + 1040 >> 0] = 0;
            a[b2 + 1300 >> 0] = f2 & 1;
            a[b2 + 1301 >> 0] = 1;
            c[b2 + 1304 >> 2] = 0;
            a[b2 + 1308 >> 0] = 0;
            y2 = +g[b2 + 112 >> 2];
            E2 = +g[d2 + 4 >> 2];
            x2 = +g[b2 + 128 >> 2];
            D2 = +g[d2 + 8 >> 2];
            w2 = +g[b2 + 144 >> 2];
            C2 = +g[d2 + 12 >> 2];
            v2 = +g[b2 + 116 >> 2];
            u2 = +g[b2 + 132 >> 2];
            t2 = +g[b2 + 148 >> 2];
            s2 = +g[b2 + 120 >> 2];
            q2 = +g[b2 + 136 >> 2];
            o2 = +g[b2 + 152 >> 2];
            B2 = +g[d2 + 20 >> 2];
            A2 = +g[d2 + 24 >> 2];
            z2 = +g[d2 + 28 >> 2];
            r2 = +g[d2 + 36 >> 2];
            p2 = +g[d2 + 40 >> 2];
            n2 = +g[d2 + 44 >> 2];
            G2 = +g[b2 + 160 >> 2];
            F2 = +g[b2 + 164 >> 2];
            l2 = +g[b2 + 168 >> 2];
            m2 = +g[d2 + 52 >> 2] + (E2 * G2 + D2 * F2 + C2 * l2);
            k2 = B2 * G2 + A2 * F2 + z2 * l2 + +g[d2 + 56 >> 2];
            l2 = r2 * G2 + p2 * F2 + n2 * l2 + +g[d2 + 60 >> 2];
            g[b2 + 48 >> 2] = y2 * E2 + x2 * D2 + w2 * C2;
            g[b2 + 52 >> 2] = E2 * v2 + D2 * u2 + C2 * t2;
            g[b2 + 56 >> 2] = E2 * s2 + D2 * q2 + C2 * o2;
            g[b2 + 60 >> 2] = 0;
            g[b2 + 64 >> 2] = y2 * B2 + x2 * A2 + w2 * z2;
            g[b2 + 68 >> 2] = v2 * B2 + u2 * A2 + t2 * z2;
            g[b2 + 72 >> 2] = s2 * B2 + q2 * A2 + o2 * z2;
            g[b2 + 76 >> 2] = 0;
            g[b2 + 80 >> 2] = y2 * r2 + x2 * p2 + w2 * n2;
            g[b2 + 84 >> 2] = v2 * r2 + u2 * p2 + t2 * n2;
            g[b2 + 88 >> 2] = s2 * r2 + q2 * p2 + o2 * n2;
            g[b2 + 92 >> 2] = 0;
            g[b2 + 96 >> 2] = m2;
            g[b2 + 100 >> 2] = k2;
            g[b2 + 104 >> 2] = l2;
            g[b2 + 108 >> 2] = 0;
            _o(b2, (c[b2 + 28 >> 2] | 0) + 4 | 0, (c[b2 + 32 >> 2] | 0) + 4 | 0);
            i = j2;
            return;
          }
          function np(a2) {
            a2 = a2 | 0;
            c[a2 >> 2] = 7188;
            if (!a2)
              return;
            c[5638] = (c[5638] | 0) + 1;
            rG(c[a2 + -4 >> 2] | 0);
            return;
          }
          function op(b2, d2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0;
            pp(b2, (c[b2 + 28 >> 2] | 0) + 4 | 0, (c[b2 + 32 >> 2] | 0) + 4 | 0);
            c[d2 >> 2] = 0;
            c[d2 + 4 >> 2] = 0;
            switch (c[b2 + 956 >> 2] | 0) {
              case 4: {
                c[d2 >> 2] = 2;
                e2 = 2;
                break;
              }
              case 0: {
                e2 = 0;
                break;
              }
              default: {
                c[d2 >> 2] = 1;
                e2 = 1;
              }
            }
            if (a[b2 + 792 >> 0] | 0) {
              e2 = e2 + 1 | 0;
              c[d2 >> 2] = e2;
            }
            if (a[b2 + 798 >> 0] | 0) {
              e2 = e2 + 1 | 0;
              c[d2 >> 2] = e2;
            }
            switch (c[b2 + 960 >> 2] | 0) {
              case 4: {
                e2 = e2 + 2 | 0;
                c[d2 >> 2] = e2;
                break;
              }
              case 0:
                break;
              default: {
                e2 = e2 + 1 | 0;
                c[d2 >> 2] = e2;
              }
            }
            if (a[b2 + 793 >> 0] | 0) {
              e2 = e2 + 1 | 0;
              c[d2 >> 2] = e2;
            }
            if (a[b2 + 799 >> 0] | 0) {
              e2 = e2 + 1 | 0;
              c[d2 >> 2] = e2;
            }
            switch (c[b2 + 964 >> 2] | 0) {
              case 4: {
                e2 = e2 + 2 | 0;
                c[d2 >> 2] = e2;
                break;
              }
              case 0:
                break;
              default: {
                e2 = e2 + 1 | 0;
                c[d2 >> 2] = e2;
              }
            }
            if (a[b2 + 794 >> 0] | 0) {
              e2 = e2 + 1 | 0;
              c[d2 >> 2] = e2;
            }
            if (!(a[b2 + 800 >> 0] | 0))
              j2 = 0;
            else {
              e2 = e2 + 1 | 0;
              c[d2 >> 2] = e2;
              j2 = 0;
            }
            do {
              f2 = +g[b2 + 968 + (j2 * 88 | 0) >> 2];
              h2 = +g[b2 + 968 + (j2 * 88 | 0) + 4 >> 2];
              i2 = +ap(+g[b2 + 1364 + (j2 << 2) >> 2], f2, h2);
              g[b2 + 968 + (j2 * 88 | 0) + 80 >> 2] = i2;
              do
                if (!(f2 > h2)) {
                  g[b2 + 968 + (j2 * 88 | 0) + 72 >> 2] = i2 - f2;
                  if (f2 == h2) {
                    c[b2 + 968 + (j2 * 88 | 0) + 84 >> 2] = 3;
                    e2 = e2 + 1 | 0;
                    c[d2 >> 2] = e2;
                    break;
                  } else {
                    g[b2 + 968 + (j2 * 88 | 0) + 76 >> 2] = i2 - h2;
                    c[b2 + 968 + (j2 * 88 | 0) + 84 >> 2] = 4;
                    e2 = e2 + 2 | 0;
                    c[d2 >> 2] = e2;
                    break;
                  }
                } else {
                  c[b2 + 968 + (j2 * 88 | 0) + 84 >> 2] = 0;
                  g[b2 + 968 + (j2 * 88 | 0) + 72 >> 2] = 0;
                }
              while (0);
              if (a[b2 + 968 + (j2 * 88 | 0) + 28 >> 0] | 0) {
                e2 = e2 + 1 | 0;
                c[d2 >> 2] = e2;
              }
              if (a[b2 + 968 + (j2 * 88 | 0) + 48 >> 0] | 0) {
                e2 = e2 + 1 | 0;
                c[d2 >> 2] = e2;
              }
              j2 = j2 + 1 | 0;
            } while ((j2 | 0) != 3);
            return;
          }
          function pp(b2, d2, e2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0, N2 = 0, P2 = 0, Q2 = 0, R2 = 0, S2 = 0, T2 = 0, V2 = 0, X2 = 0, Y2 = 0;
            V2 = +g[b2 + 48 >> 2];
            i2 = +g[d2 >> 2];
            X2 = +g[b2 + 64 >> 2];
            y2 = +g[d2 + 4 >> 2];
            Y2 = +g[b2 + 80 >> 2];
            f2 = +g[d2 + 8 >> 2];
            B2 = +g[b2 + 52 >> 2];
            A2 = +g[b2 + 68 >> 2];
            z2 = +g[b2 + 84 >> 2];
            Q2 = +g[b2 + 56 >> 2];
            S2 = +g[b2 + 72 >> 2];
            N2 = +g[b2 + 88 >> 2];
            E2 = +g[d2 + 16 >> 2];
            D2 = +g[d2 + 20 >> 2];
            C2 = +g[d2 + 24 >> 2];
            R2 = +g[d2 + 32 >> 2];
            x2 = +g[d2 + 36 >> 2];
            s2 = +g[d2 + 40 >> 2];
            k2 = +g[b2 + 96 >> 2];
            h2 = +g[b2 + 100 >> 2];
            T2 = +g[b2 + 104 >> 2];
            P2 = +g[d2 + 48 >> 2] + (i2 * k2 + y2 * h2 + f2 * T2);
            w2 = E2 * k2 + D2 * h2 + C2 * T2 + +g[d2 + 52 >> 2];
            T2 = R2 * k2 + x2 * h2 + s2 * T2 + +g[d2 + 56 >> 2];
            g[b2 + 1236 >> 2] = V2 * i2 + X2 * y2 + Y2 * f2;
            g[b2 + 1240 >> 2] = i2 * B2 + y2 * A2 + f2 * z2;
            g[b2 + 1244 >> 2] = i2 * Q2 + y2 * S2 + f2 * N2;
            g[b2 + 1248 >> 2] = 0;
            g[b2 + 1252 >> 2] = V2 * E2 + X2 * D2 + Y2 * C2;
            g[b2 + 1256 >> 2] = B2 * E2 + A2 * D2 + z2 * C2;
            g[b2 + 1260 >> 2] = Q2 * E2 + S2 * D2 + N2 * C2;
            g[b2 + 1264 >> 2] = 0;
            g[b2 + 1268 >> 2] = V2 * R2 + X2 * x2 + Y2 * s2;
            g[b2 + 1272 >> 2] = B2 * R2 + A2 * x2 + z2 * s2;
            g[b2 + 1276 >> 2] = Q2 * R2 + S2 * x2 + N2 * s2;
            g[b2 + 1280 >> 2] = 0;
            g[b2 + 1284 >> 2] = P2;
            g[b2 + 1288 >> 2] = w2;
            g[b2 + 1292 >> 2] = T2;
            g[b2 + 1296 >> 2] = 0;
            T2 = +g[b2 + 112 >> 2];
            w2 = +g[e2 >> 2];
            P2 = +g[b2 + 128 >> 2];
            s2 = +g[e2 + 4 >> 2];
            N2 = +g[b2 + 144 >> 2];
            x2 = +g[e2 + 8 >> 2];
            S2 = +g[b2 + 116 >> 2];
            R2 = +g[b2 + 132 >> 2];
            Q2 = +g[b2 + 148 >> 2];
            z2 = +g[b2 + 120 >> 2];
            A2 = +g[b2 + 136 >> 2];
            B2 = +g[b2 + 152 >> 2];
            Y2 = +g[e2 + 16 >> 2];
            X2 = +g[e2 + 20 >> 2];
            V2 = +g[e2 + 24 >> 2];
            C2 = +g[e2 + 32 >> 2];
            D2 = +g[e2 + 36 >> 2];
            E2 = +g[e2 + 40 >> 2];
            f2 = +g[b2 + 160 >> 2];
            y2 = +g[b2 + 164 >> 2];
            i2 = +g[b2 + 168 >> 2];
            h2 = +g[e2 + 48 >> 2] + (w2 * f2 + s2 * y2 + x2 * i2);
            k2 = Y2 * f2 + X2 * y2 + V2 * i2 + +g[e2 + 52 >> 2];
            i2 = C2 * f2 + D2 * y2 + E2 * i2 + +g[e2 + 56 >> 2];
            g[b2 + 1300 >> 2] = T2 * w2 + P2 * s2 + N2 * x2;
            g[b2 + 1304 >> 2] = w2 * S2 + s2 * R2 + x2 * Q2;
            g[b2 + 1308 >> 2] = w2 * z2 + s2 * A2 + x2 * B2;
            g[b2 + 1312 >> 2] = 0;
            g[b2 + 1316 >> 2] = T2 * Y2 + P2 * X2 + N2 * V2;
            g[b2 + 1320 >> 2] = S2 * Y2 + R2 * X2 + Q2 * V2;
            g[b2 + 1324 >> 2] = z2 * Y2 + A2 * X2 + B2 * V2;
            g[b2 + 1328 >> 2] = 0;
            g[b2 + 1332 >> 2] = T2 * C2 + P2 * D2 + N2 * E2;
            g[b2 + 1336 >> 2] = S2 * C2 + R2 * D2 + Q2 * E2;
            g[b2 + 1340 >> 2] = z2 * C2 + A2 * D2 + B2 * E2;
            g[b2 + 1344 >> 2] = 0;
            g[b2 + 1348 >> 2] = h2;
            g[b2 + 1352 >> 2] = k2;
            g[b2 + 1356 >> 2] = i2;
            g[b2 + 1360 >> 2] = 0;
            h2 = h2 - +g[b2 + 1284 >> 2];
            k2 = k2 - +g[b2 + 1288 >> 2];
            i2 = i2 - +g[b2 + 1292 >> 2];
            Q2 = +g[b2 + 1256 >> 2];
            R2 = +g[b2 + 1276 >> 2];
            S2 = +g[b2 + 1260 >> 2];
            N2 = +g[b2 + 1272 >> 2];
            P2 = +g[b2 + 1268 >> 2];
            T2 = +g[b2 + 1252 >> 2];
            V2 = +g[b2 + 1236 >> 2];
            X2 = +g[b2 + 1240 >> 2];
            Y2 = +g[b2 + 1244 >> 2];
            x2 = 1 / ((Q2 * R2 - S2 * N2) * V2 + X2 * (S2 * P2 - R2 * T2) + (N2 * T2 - Q2 * P2) * Y2);
            s2 = (Q2 * R2 - S2 * N2) * x2;
            w2 = (S2 * P2 - R2 * T2) * x2;
            y2 = (N2 * T2 - Q2 * P2) * x2;
            f2 = i2 * ((S2 * X2 - Q2 * Y2) * x2) + (h2 * s2 + k2 * ((N2 * Y2 - R2 * X2) * x2));
            j2 = i2 * ((T2 * Y2 - S2 * V2) * x2) + (h2 * w2 + k2 * ((R2 * V2 - P2 * Y2) * x2));
            k2 = i2 * ((Q2 * V2 - T2 * X2) * x2) + (h2 * y2 + k2 * ((P2 * X2 - N2 * V2) * x2));
            g[b2 + 1428 >> 2] = f2;
            g[b2 + 1432 >> 2] = j2;
            g[b2 + 1436 >> 2] = k2;
            g[b2 + 1440 >> 2] = 0;
            g[b2 + 940 >> 2] = f2;
            h2 = +g[b2 + 680 >> 2];
            i2 = +g[b2 + 696 >> 2];
            do
              if (!(h2 > i2)) {
                g[b2 + 908 >> 2] = f2 - h2;
                if (h2 == i2) {
                  c[b2 + 956 >> 2] = 3;
                  break;
                } else {
                  g[b2 + 924 >> 2] = f2 - i2;
                  c[b2 + 956 >> 2] = 4;
                  break;
                }
              } else {
                g[b2 + 908 >> 2] = 0;
                c[b2 + 956 >> 2] = 0;
              }
            while (0);
            g[b2 + 944 >> 2] = j2;
            f2 = +g[b2 + 684 >> 2];
            h2 = +g[b2 + 700 >> 2];
            do
              if (!(f2 > h2)) {
                g[b2 + 912 >> 2] = j2 - f2;
                if (f2 == h2) {
                  c[b2 + 960 >> 2] = 3;
                  break;
                } else {
                  g[b2 + 928 >> 2] = j2 - h2;
                  c[b2 + 960 >> 2] = 4;
                  break;
                }
              } else {
                g[b2 + 912 >> 2] = 0;
                c[b2 + 960 >> 2] = 0;
              }
            while (0);
            g[b2 + 948 >> 2] = k2;
            f2 = +g[b2 + 688 >> 2];
            h2 = +g[b2 + 704 >> 2];
            do
              if (!(f2 > h2)) {
                g[b2 + 916 >> 2] = k2 - f2;
                if (f2 == h2) {
                  c[b2 + 964 >> 2] = 3;
                  break;
                } else {
                  g[b2 + 932 >> 2] = k2 - h2;
                  c[b2 + 964 >> 2] = 4;
                  break;
                }
              } else {
                g[b2 + 916 >> 2] = 0;
                c[b2 + 964 >> 2] = 0;
              }
            while (0);
            H2 = +g[b2 + 1300 >> 2];
            I2 = +g[b2 + 1316 >> 2];
            J2 = +g[b2 + 1332 >> 2];
            u2 = J2 * ((S2 * X2 - Q2 * Y2) * x2) + (H2 * s2 + I2 * ((N2 * Y2 - R2 * X2) * x2));
            K2 = +g[b2 + 1304 >> 2];
            L2 = +g[b2 + 1320 >> 2];
            M2 = +g[b2 + 1336 >> 2];
            v2 = s2 * K2 + (N2 * Y2 - R2 * X2) * x2 * L2 + (S2 * X2 - Q2 * Y2) * x2 * M2;
            F2 = +g[b2 + 1308 >> 2];
            G2 = +g[b2 + 1324 >> 2];
            k2 = s2 * F2 + (N2 * Y2 - R2 * X2) * x2 * G2 + (S2 * X2 - Q2 * Y2) * x2 * (z2 * C2 + A2 * D2 + B2 * E2);
            s2 = J2 * ((T2 * Y2 - S2 * V2) * x2) + (H2 * w2 + I2 * ((R2 * V2 - P2 * Y2) * x2));
            t2 = K2 * w2 + (R2 * V2 - P2 * Y2) * x2 * L2 + (T2 * Y2 - S2 * V2) * x2 * M2;
            h2 = w2 * F2 + (R2 * V2 - P2 * Y2) * x2 * G2 + (T2 * Y2 - S2 * V2) * x2 * (z2 * C2 + A2 * D2 + B2 * E2);
            i2 = J2 * ((Q2 * V2 - T2 * X2) * x2) + (H2 * y2 + I2 * ((P2 * X2 - N2 * V2) * x2));
            j2 = K2 * y2 + (P2 * X2 - N2 * V2) * x2 * L2 + (Q2 * V2 - T2 * X2) * x2 * M2;
            f2 = y2 * F2 + (P2 * X2 - N2 * V2) * x2 * G2 + (Q2 * V2 - T2 * X2) * x2 * (z2 * C2 + A2 * D2 + B2 * E2);
            switch (c[b2 + 1232 >> 2] | 0) {
              case 0: {
                do
                  if (i2 < 1)
                    if (i2 > -1) {
                      g[b2 + 1364 >> 2] = +W(+-j2, +f2);
                      X2 = i2 < -1 ? -1 : i2;
                      g[b2 + 1368 >> 2] = +U(+(X2 > 1 ? 1 : X2));
                      g[b2 + 1372 >> 2] = +W(+-s2, +u2);
                      break;
                    } else {
                      g[b2 + 1364 >> 2] = -+W(+v2, +t2);
                      g[b2 + 1368 >> 2] = -1.5707963705062866;
                      g[b2 + 1372 >> 2] = 0;
                      break;
                    }
                  else {
                    g[b2 + 1364 >> 2] = +W(+v2, +t2);
                    g[b2 + 1368 >> 2] = 1.5707963705062866;
                    g[b2 + 1372 >> 2] = 0;
                  }
                while (0);
                g[b2 + 1396 >> 2] = J2 * S2 - I2 * R2;
                g[b2 + 1400 >> 2] = H2 * R2 - J2 * Y2;
                g[b2 + 1404 >> 2] = I2 * Y2 - H2 * S2;
                g[b2 + 1408 >> 2] = 0;
                g[b2 + 1380 >> 2] = R2 * (H2 * R2 - J2 * Y2) - S2 * (I2 * Y2 - H2 * S2);
                g[b2 + 1384 >> 2] = Y2 * (I2 * Y2 - H2 * S2) - R2 * (J2 * S2 - I2 * R2);
                g[b2 + 1388 >> 2] = S2 * (J2 * S2 - I2 * R2) - Y2 * (H2 * R2 - J2 * Y2);
                g[b2 + 1392 >> 2] = 0;
                g[b2 + 1412 >> 2] = I2 * (I2 * Y2 - H2 * S2) - J2 * (H2 * R2 - J2 * Y2);
                g[b2 + 1416 >> 2] = J2 * (J2 * S2 - I2 * R2) - H2 * (I2 * Y2 - H2 * S2);
                g[b2 + 1420 >> 2] = H2 * (H2 * R2 - J2 * Y2) - I2 * (J2 * S2 - I2 * R2);
                g[b2 + 1424 >> 2] = 0;
                d2 = b2 + 1380 | 0;
                e2 = b2 + 1384 | 0;
                l2 = b2 + 1388 | 0;
                m2 = b2 + 1396 | 0;
                n2 = b2 + 1400 | 0;
                o2 = b2 + 1404 | 0;
                p2 = b2 + 1412 | 0;
                q2 = b2 + 1416 | 0;
                r2 = b2 + 1420 | 0;
                i2 = R2 * (H2 * R2 - J2 * Y2) - S2 * (I2 * Y2 - H2 * S2);
                j2 = Y2 * (I2 * Y2 - H2 * S2) - R2 * (J2 * S2 - I2 * R2);
                k2 = S2 * (J2 * S2 - I2 * R2) - Y2 * (H2 * R2 - J2 * Y2);
                s2 = J2 * S2 - I2 * R2;
                t2 = H2 * R2 - J2 * Y2;
                u2 = I2 * Y2 - H2 * S2;
                v2 = I2 * (I2 * Y2 - H2 * S2) - J2 * (H2 * R2 - J2 * Y2);
                h2 = J2 * (J2 * S2 - I2 * R2) - H2 * (I2 * Y2 - H2 * S2);
                f2 = H2 * (H2 * R2 - J2 * Y2) - I2 * (J2 * S2 - I2 * R2);
                break;
              }
              case 1: {
                do
                  if (s2 < 1)
                    if (s2 > -1) {
                      g[b2 + 1364 >> 2] = +W(+h2, +t2);
                      g[b2 + 1368 >> 2] = +W(+i2, +u2);
                      Y2 = -s2 < -1 ? -1 : -s2;
                      g[b2 + 1372 >> 2] = +U(+(Y2 > 1 ? 1 : Y2));
                      break;
                    } else {
                      g[b2 + 1364 >> 2] = -+W(+-k2, +f2);
                      g[b2 + 1368 >> 2] = 0;
                      g[b2 + 1372 >> 2] = 1.5707963705062866;
                      break;
                    }
                  else {
                    g[b2 + 1364 >> 2] = +W(+-k2, +f2);
                    g[b2 + 1368 >> 2] = 0;
                    g[b2 + 1372 >> 2] = -1.5707963705062866;
                  }
                while (0);
                g[b2 + 1412 >> 2] = I2 * N2 - J2 * Q2;
                g[b2 + 1416 >> 2] = J2 * X2 - H2 * N2;
                g[b2 + 1420 >> 2] = H2 * Q2 - I2 * X2;
                g[b2 + 1424 >> 2] = 0;
                g[b2 + 1380 >> 2] = Q2 * (H2 * Q2 - I2 * X2) - N2 * (J2 * X2 - H2 * N2);
                g[b2 + 1384 >> 2] = N2 * (I2 * N2 - J2 * Q2) - X2 * (H2 * Q2 - I2 * X2);
                g[b2 + 1388 >> 2] = X2 * (J2 * X2 - H2 * N2) - Q2 * (I2 * N2 - J2 * Q2);
                g[b2 + 1392 >> 2] = 0;
                g[b2 + 1396 >> 2] = J2 * (J2 * X2 - H2 * N2) - I2 * (H2 * Q2 - I2 * X2);
                g[b2 + 1400 >> 2] = H2 * (H2 * Q2 - I2 * X2) - J2 * (I2 * N2 - J2 * Q2);
                g[b2 + 1404 >> 2] = I2 * (I2 * N2 - J2 * Q2) - H2 * (J2 * X2 - H2 * N2);
                g[b2 + 1408 >> 2] = 0;
                d2 = b2 + 1380 | 0;
                e2 = b2 + 1384 | 0;
                l2 = b2 + 1388 | 0;
                m2 = b2 + 1396 | 0;
                n2 = b2 + 1400 | 0;
                o2 = b2 + 1404 | 0;
                p2 = b2 + 1412 | 0;
                q2 = b2 + 1416 | 0;
                r2 = b2 + 1420 | 0;
                i2 = Q2 * (H2 * Q2 - I2 * X2) - N2 * (J2 * X2 - H2 * N2);
                j2 = N2 * (I2 * N2 - J2 * Q2) - X2 * (H2 * Q2 - I2 * X2);
                k2 = X2 * (J2 * X2 - H2 * N2) - Q2 * (I2 * N2 - J2 * Q2);
                s2 = J2 * (J2 * X2 - H2 * N2) - I2 * (H2 * Q2 - I2 * X2);
                t2 = H2 * (H2 * Q2 - I2 * X2) - J2 * (I2 * N2 - J2 * Q2);
                u2 = I2 * (I2 * N2 - J2 * Q2) - H2 * (J2 * X2 - H2 * N2);
                v2 = I2 * N2 - J2 * Q2;
                h2 = J2 * X2 - H2 * N2;
                f2 = H2 * Q2 - I2 * X2;
                break;
              }
              case 2: {
                do
                  if (j2 < 1)
                    if (j2 > -1) {
                      X2 = -j2 < -1 ? -1 : -j2;
                      g[b2 + 1364 >> 2] = +U(+(X2 > 1 ? 1 : X2));
                      g[b2 + 1368 >> 2] = +W(+i2, +f2);
                      g[b2 + 1372 >> 2] = +W(+v2, +t2);
                      break;
                    } else {
                      g[b2 + 1364 >> 2] = 1.5707963705062866;
                      g[b2 + 1368 >> 2] = -+W(+-s2, +u2);
                      g[b2 + 1372 >> 2] = 0;
                      break;
                    }
                  else {
                    g[b2 + 1364 >> 2] = -1.5707963705062866;
                    g[b2 + 1368 >> 2] = +W(+-s2, +u2);
                    g[b2 + 1372 >> 2] = 0;
                  }
                while (0);
                g[b2 + 1380 >> 2] = L2 * R2 - M2 * S2;
                g[b2 + 1384 >> 2] = M2 * Y2 - K2 * R2;
                g[b2 + 1388 >> 2] = K2 * S2 - L2 * Y2;
                g[b2 + 1392 >> 2] = 0;
                g[b2 + 1396 >> 2] = S2 * (K2 * S2 - L2 * Y2) - R2 * (M2 * Y2 - K2 * R2);
                g[b2 + 1400 >> 2] = R2 * (L2 * R2 - M2 * S2) - Y2 * (K2 * S2 - L2 * Y2);
                g[b2 + 1404 >> 2] = Y2 * (M2 * Y2 - K2 * R2) - S2 * (L2 * R2 - M2 * S2);
                g[b2 + 1408 >> 2] = 0;
                g[b2 + 1412 >> 2] = M2 * (M2 * Y2 - K2 * R2) - L2 * (K2 * S2 - L2 * Y2);
                g[b2 + 1416 >> 2] = K2 * (K2 * S2 - L2 * Y2) - M2 * (L2 * R2 - M2 * S2);
                g[b2 + 1420 >> 2] = L2 * (L2 * R2 - M2 * S2) - K2 * (M2 * Y2 - K2 * R2);
                g[b2 + 1424 >> 2] = 0;
                d2 = b2 + 1380 | 0;
                e2 = b2 + 1384 | 0;
                l2 = b2 + 1388 | 0;
                m2 = b2 + 1396 | 0;
                n2 = b2 + 1400 | 0;
                o2 = b2 + 1404 | 0;
                p2 = b2 + 1412 | 0;
                q2 = b2 + 1416 | 0;
                r2 = b2 + 1420 | 0;
                i2 = L2 * R2 - M2 * S2;
                j2 = M2 * Y2 - K2 * R2;
                k2 = K2 * S2 - L2 * Y2;
                s2 = S2 * (K2 * S2 - L2 * Y2) - R2 * (M2 * Y2 - K2 * R2);
                t2 = R2 * (L2 * R2 - M2 * S2) - Y2 * (K2 * S2 - L2 * Y2);
                u2 = Y2 * (M2 * Y2 - K2 * R2) - S2 * (L2 * R2 - M2 * S2);
                v2 = M2 * (M2 * Y2 - K2 * R2) - L2 * (K2 * S2 - L2 * Y2);
                h2 = K2 * (K2 * S2 - L2 * Y2) - M2 * (L2 * R2 - M2 * S2);
                f2 = L2 * (L2 * R2 - M2 * S2) - K2 * (M2 * Y2 - K2 * R2);
                break;
              }
              case 3: {
                do
                  if (v2 < 1)
                    if (v2 > -1) {
                      g[b2 + 1364 >> 2] = +W(+-j2, +t2);
                      g[b2 + 1368 >> 2] = +W(+-k2, +u2);
                      Y2 = v2 < -1 ? -1 : v2;
                      g[b2 + 1372 >> 2] = +U(+(Y2 > 1 ? 1 : Y2));
                      break;
                    } else {
                      g[b2 + 1364 >> 2] = 0;
                      g[b2 + 1368 >> 2] = -+W(+h2, +f2);
                      g[b2 + 1372 >> 2] = -1.5707963705062866;
                      break;
                    }
                  else {
                    g[b2 + 1364 >> 2] = 0;
                    g[b2 + 1368 >> 2] = +W(+h2, +f2);
                    g[b2 + 1372 >> 2] = 1.5707963705062866;
                  }
                while (0);
                g[b2 + 1412 >> 2] = T2 * M2 - P2 * L2;
                g[b2 + 1416 >> 2] = P2 * K2 - V2 * M2;
                g[b2 + 1420 >> 2] = V2 * L2 - T2 * K2;
                g[b2 + 1424 >> 2] = 0;
                g[b2 + 1380 >> 2] = L2 * (V2 * L2 - T2 * K2) - M2 * (P2 * K2 - V2 * M2);
                g[b2 + 1384 >> 2] = M2 * (T2 * M2 - P2 * L2) - K2 * (V2 * L2 - T2 * K2);
                g[b2 + 1388 >> 2] = K2 * (P2 * K2 - V2 * M2) - L2 * (T2 * M2 - P2 * L2);
                g[b2 + 1392 >> 2] = 0;
                g[b2 + 1396 >> 2] = P2 * (P2 * K2 - V2 * M2) - T2 * (V2 * L2 - T2 * K2);
                g[b2 + 1400 >> 2] = V2 * (V2 * L2 - T2 * K2) - P2 * (T2 * M2 - P2 * L2);
                g[b2 + 1404 >> 2] = T2 * (T2 * M2 - P2 * L2) - V2 * (P2 * K2 - V2 * M2);
                g[b2 + 1408 >> 2] = 0;
                d2 = b2 + 1380 | 0;
                e2 = b2 + 1384 | 0;
                l2 = b2 + 1388 | 0;
                m2 = b2 + 1396 | 0;
                n2 = b2 + 1400 | 0;
                o2 = b2 + 1404 | 0;
                p2 = b2 + 1412 | 0;
                q2 = b2 + 1416 | 0;
                r2 = b2 + 1420 | 0;
                i2 = L2 * (V2 * L2 - T2 * K2) - M2 * (P2 * K2 - V2 * M2);
                j2 = M2 * (T2 * M2 - P2 * L2) - K2 * (V2 * L2 - T2 * K2);
                k2 = K2 * (P2 * K2 - V2 * M2) - L2 * (T2 * M2 - P2 * L2);
                s2 = P2 * (P2 * K2 - V2 * M2) - T2 * (V2 * L2 - T2 * K2);
                t2 = V2 * (V2 * L2 - T2 * K2) - P2 * (T2 * M2 - P2 * L2);
                u2 = T2 * (T2 * M2 - P2 * L2) - V2 * (P2 * K2 - V2 * M2);
                v2 = T2 * M2 - P2 * L2;
                h2 = P2 * K2 - V2 * M2;
                f2 = V2 * L2 - T2 * K2;
                break;
              }
              case 4: {
                do
                  if (h2 < 1)
                    if (h2 > -1) {
                      Y2 = h2 < -1 ? -1 : h2;
                      g[b2 + 1364 >> 2] = +U(+(Y2 > 1 ? 1 : Y2));
                      g[b2 + 1368 >> 2] = +W(+-k2, +f2);
                      g[b2 + 1372 >> 2] = +W(+-s2, +t2);
                      break;
                    } else {
                      g[b2 + 1364 >> 2] = -1.5707963705062866;
                      g[b2 + 1368 >> 2] = 0;
                      g[b2 + 1372 >> 2] = -+W(+i2, +u2);
                      break;
                    }
                  else {
                    g[b2 + 1364 >> 2] = 1.5707963705062866;
                    g[b2 + 1368 >> 2] = 0;
                    g[b2 + 1372 >> 2] = +W(+i2, +u2);
                  }
                while (0);
                Y2 = Q2 * (z2 * C2 + A2 * D2 + B2 * E2) - N2 * G2;
                f2 = N2 * F2 - X2 * (z2 * C2 + A2 * D2 + B2 * E2);
                g[b2 + 1380 >> 2] = Y2;
                g[b2 + 1384 >> 2] = f2;
                g[b2 + 1388 >> 2] = X2 * G2 - Q2 * F2;
                g[b2 + 1392 >> 2] = 0;
                s2 = G2 * (X2 * G2 - Q2 * F2) - (z2 * C2 + A2 * D2 + B2 * E2) * f2;
                t2 = (z2 * C2 + A2 * D2 + B2 * E2) * Y2 - F2 * (X2 * G2 - Q2 * F2);
                g[b2 + 1396 >> 2] = s2;
                g[b2 + 1400 >> 2] = t2;
                g[b2 + 1404 >> 2] = F2 * f2 - G2 * Y2;
                g[b2 + 1408 >> 2] = 0;
                g[b2 + 1412 >> 2] = N2 * f2 - Q2 * (X2 * G2 - Q2 * F2);
                g[b2 + 1416 >> 2] = X2 * (X2 * G2 - Q2 * F2) - N2 * Y2;
                g[b2 + 1420 >> 2] = Q2 * Y2 - X2 * f2;
                g[b2 + 1424 >> 2] = 0;
                d2 = b2 + 1380 | 0;
                e2 = b2 + 1384 | 0;
                l2 = b2 + 1388 | 0;
                m2 = b2 + 1396 | 0;
                n2 = b2 + 1400 | 0;
                o2 = b2 + 1404 | 0;
                p2 = b2 + 1412 | 0;
                q2 = b2 + 1416 | 0;
                r2 = b2 + 1420 | 0;
                i2 = Y2;
                j2 = f2;
                k2 = X2 * G2 - Q2 * F2;
                u2 = F2 * f2 - G2 * Y2;
                v2 = N2 * f2 - Q2 * (X2 * G2 - Q2 * F2);
                h2 = X2 * (X2 * G2 - Q2 * F2) - N2 * Y2;
                f2 = Q2 * Y2 - X2 * f2;
                break;
              }
              case 5: {
                do
                  if (k2 < 1)
                    if (k2 > -1) {
                      g[b2 + 1364 >> 2] = +W(+h2, +f2);
                      Y2 = -k2 < -1 ? -1 : -k2;
                      g[b2 + 1368 >> 2] = +U(+(Y2 > 1 ? 1 : Y2));
                      g[b2 + 1372 >> 2] = +W(+v2, +u2);
                      break;
                    } else {
                      g[b2 + 1364 >> 2] = 0;
                      g[b2 + 1368 >> 2] = 1.5707963705062866;
                      g[b2 + 1372 >> 2] = -+W(+s2, +i2);
                      break;
                    }
                  else {
                    g[b2 + 1364 >> 2] = 0;
                    g[b2 + 1368 >> 2] = -1.5707963705062866;
                    g[b2 + 1372 >> 2] = +W(+-s2, +-i2);
                  }
                while (0);
                f2 = P2 * G2 - T2 * (z2 * C2 + A2 * D2 + B2 * E2);
                Y2 = V2 * (z2 * C2 + A2 * D2 + B2 * E2) - P2 * F2;
                g[b2 + 1396 >> 2] = f2;
                g[b2 + 1400 >> 2] = Y2;
                g[b2 + 1404 >> 2] = T2 * F2 - V2 * G2;
                g[b2 + 1408 >> 2] = 0;
                i2 = (z2 * C2 + A2 * D2 + B2 * E2) * Y2 - G2 * (T2 * F2 - V2 * G2);
                j2 = F2 * (T2 * F2 - V2 * G2) - (z2 * C2 + A2 * D2 + B2 * E2) * f2;
                g[b2 + 1380 >> 2] = i2;
                g[b2 + 1384 >> 2] = j2;
                g[b2 + 1388 >> 2] = G2 * f2 - F2 * Y2;
                g[b2 + 1392 >> 2] = 0;
                g[b2 + 1412 >> 2] = T2 * (T2 * F2 - V2 * G2) - P2 * Y2;
                g[b2 + 1416 >> 2] = P2 * f2 - V2 * (T2 * F2 - V2 * G2);
                g[b2 + 1420 >> 2] = V2 * Y2 - T2 * f2;
                g[b2 + 1424 >> 2] = 0;
                d2 = b2 + 1380 | 0;
                e2 = b2 + 1384 | 0;
                l2 = b2 + 1388 | 0;
                m2 = b2 + 1396 | 0;
                n2 = b2 + 1400 | 0;
                o2 = b2 + 1404 | 0;
                p2 = b2 + 1412 | 0;
                q2 = b2 + 1416 | 0;
                r2 = b2 + 1420 | 0;
                k2 = G2 * f2 - F2 * Y2;
                s2 = f2;
                t2 = Y2;
                u2 = T2 * F2 - V2 * G2;
                v2 = T2 * (T2 * F2 - V2 * G2) - P2 * Y2;
                h2 = P2 * f2 - V2 * (T2 * F2 - V2 * G2);
                f2 = V2 * Y2 - T2 * f2;
                break;
              }
              default: {
                d2 = b2 + 1380 | 0;
                e2 = b2 + 1384 | 0;
                l2 = b2 + 1388 | 0;
                m2 = b2 + 1396 | 0;
                n2 = b2 + 1400 | 0;
                o2 = b2 + 1404 | 0;
                p2 = b2 + 1412 | 0;
                q2 = b2 + 1416 | 0;
                r2 = b2 + 1420 | 0;
                i2 = +g[b2 + 1380 >> 2];
                j2 = +g[b2 + 1384 >> 2];
                k2 = +g[b2 + 1388 >> 2];
                s2 = +g[b2 + 1396 >> 2];
                t2 = +g[b2 + 1400 >> 2];
                u2 = +g[b2 + 1404 >> 2];
                v2 = +g[b2 + 1412 >> 2];
                h2 = +g[b2 + 1416 >> 2];
                f2 = +g[b2 + 1420 >> 2];
              }
            }
            X2 = 1 / +O(+(i2 * i2 + j2 * j2 + k2 * k2));
            g[d2 >> 2] = i2 * X2;
            g[e2 >> 2] = j2 * X2;
            g[l2 >> 2] = k2 * X2;
            X2 = 1 / +O(+(s2 * s2 + t2 * t2 + u2 * u2));
            g[m2 >> 2] = s2 * X2;
            g[n2 >> 2] = t2 * X2;
            g[o2 >> 2] = u2 * X2;
            X2 = 1 / +O(+(v2 * v2 + h2 * h2 + f2 * f2));
            g[p2 >> 2] = v2 * X2;
            g[q2 >> 2] = h2 * X2;
            g[r2 >> 2] = f2 * X2;
            X2 = +g[(c[b2 + 28 >> 2] | 0) + 368 >> 2];
            Y2 = +g[(c[b2 + 32 >> 2] | 0) + 368 >> 2];
            a[b2 + 1452 >> 0] = (X2 < 11920928955078125e-23 | Y2 < 11920928955078125e-23) & 1;
            Y2 = X2 + Y2 > 0 ? Y2 / (X2 + Y2) : 0.5;
            g[b2 + 1444 >> 2] = Y2;
            g[b2 + 1448 >> 2] = 1 - Y2;
            return;
          }
          function qp(b2, d2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0;
            p2 = i;
            i = i + 112 | 0;
            m2 = c[b2 + 28 >> 2] | 0;
            n2 = c[b2 + 32 >> 2] | 0;
            c[p2 + 16 >> 2] = c[1836];
            c[p2 + 16 + 4 >> 2] = c[1837];
            c[p2 + 16 + 8 >> 2] = c[1838];
            switch (c[b2 + 1232 >> 2] | 0) {
              case 0: {
                c[p2 + 16 >> 2] = 0;
                c[p2 + 16 + 4 >> 2] = 1;
                c[p2 + 16 + 8 >> 2] = 2;
                e2 = 0;
                break;
              }
              case 1: {
                c[p2 + 16 >> 2] = 0;
                c[p2 + 16 + 4 >> 2] = 2;
                c[p2 + 16 + 8 >> 2] = 1;
                e2 = 0;
                break;
              }
              case 2: {
                c[p2 + 16 >> 2] = 1;
                c[p2 + 16 + 4 >> 2] = 0;
                c[p2 + 16 + 8 >> 2] = 2;
                e2 = 1;
                break;
              }
              case 3: {
                c[p2 + 16 >> 2] = 1;
                c[p2 + 16 + 4 >> 2] = 2;
                c[p2 + 16 + 8 >> 2] = 0;
                e2 = 1;
                break;
              }
              case 4: {
                c[p2 + 16 >> 2] = 2;
                c[p2 + 16 + 4 >> 2] = 0;
                c[p2 + 16 + 8 >> 2] = 1;
                e2 = 2;
                break;
              }
              case 5: {
                c[p2 + 16 >> 2] = 2;
                c[p2 + 16 + 4 >> 2] = 1;
                c[p2 + 16 + 8 >> 2] = 0;
                e2 = 2;
                break;
              }
              default:
                e2 = 0;
            }
            f2 = 0;
            k2 = 0;
            while (1) {
              h2 = b2 + 968 + (e2 * 88 | 0) | 0;
              if (!(((c[b2 + 968 + (e2 * 88 | 0) + 84 >> 2] | 0) == 0 ? (a[b2 + 968 + (e2 * 88 | 0) + 28 >> 0] | 0) == 0 : 0) ? (a[b2 + 968 + (e2 * 88 | 0) + 48 >> 0] | 0) == 0 : 0)) {
                j2 = b2 + 1380 + (e2 << 4) | 0;
                c[p2 >> 2] = c[j2 >> 2];
                c[p2 + 4 >> 2] = c[j2 + 4 >> 2];
                c[p2 + 8 >> 2] = c[j2 + 8 >> 2];
                c[p2 + 12 >> 2] = c[j2 + 12 >> 2];
                j2 = c[b2 + 1456 >> 2] >> (e2 << 2) + 12;
                if (!(j2 & 1))
                  c[b2 + 968 + (e2 * 88 | 0) + 16 >> 2] = c[c[d2 + 32 >> 2] >> 2];
                if (!(j2 & 2))
                  c[b2 + 968 + (e2 * 88 | 0) + 12 >> 2] = c[d2 + 4 >> 2];
                if (!(j2 & 4))
                  c[b2 + 968 + (e2 * 88 | 0) + 24 >> 2] = c[c[d2 + 32 >> 2] >> 2];
                if (!(j2 & 8))
                  c[b2 + 968 + (e2 * 88 | 0) + 20 >> 2] = c[d2 + 4 >> 2];
                k2 = (rp(b2, h2, m2 + 4 | 0, n2 + 4 | 0, m2 + 336 | 0, n2 + 336 | 0, m2 + 352 | 0, n2 + 352 | 0, d2, k2, p2, 1, 0) | 0) + k2 | 0;
              }
              f2 = f2 + 1 | 0;
              if ((f2 | 0) == 3)
                break;
              e2 = c[p2 + 16 + (f2 << 2) >> 2] | 0;
            }
            g[p2 + 16 >> 2] = 1;
            g[p2 + 16 + 4 >> 2] = -1;
            g[p2 + 16 + 8 >> 2] = 0;
            g[p2 + 16 + 12 >> 2] = 0.20000000298023224;
            g[p2 + 16 + 16 >> 2] = 0;
            g[p2 + 16 + 20 >> 2] = 0.8999999761581421;
            g[p2 + 16 + 24 >> 2] = 0;
            a[p2 + 16 + 28 >> 0] = 0;
            g[p2 + 16 + 32 >> 2] = 0;
            g[p2 + 16 + 36 >> 2] = 0.10000000149011612;
            a[p2 + 16 + 40 >> 0] = 0;
            g[p2 + 16 + 44 >> 2] = 0;
            a[p2 + 16 + 48 >> 0] = 0;
            g[p2 + 16 + 52 >> 2] = 0;
            a[p2 + 16 + 56 >> 0] = 0;
            g[p2 + 16 + 60 >> 2] = 0;
            a[p2 + 16 + 64 >> 0] = 0;
            l2 = p2 + 16 + 68 | 0;
            c[l2 >> 2] = 0;
            c[l2 + 4 >> 2] = 0;
            c[l2 + 8 >> 2] = 0;
            c[l2 + 12 >> 2] = 0;
            c[l2 + 16 >> 2] = 0;
            f2 = k2;
            k2 = 0;
            while (1) {
              h2 = c[b2 + 956 + (k2 << 2) >> 2] | 0;
              e2 = a[b2 + 792 + k2 >> 0] | 0;
              j2 = a[b2 + 798 + k2 >> 0] | 0;
              if ((h2 | 0) == 0 & e2 << 24 >> 24 == 0)
                if (!(j2 << 24 >> 24))
                  e2 = k2 + 1 | 0;
                else {
                  e2 = 0;
                  o2 = 27;
                }
              else
                o2 = 27;
              if ((o2 | 0) == 27) {
                o2 = 0;
                c[p2 + 16 + 8 >> 2] = c[b2 + 712 + (k2 << 2) >> 2];
                c[p2 + 16 + 84 >> 2] = h2;
                c[p2 + 16 + 80 >> 2] = c[b2 + 940 + (k2 << 2) >> 2];
                c[p2 + 16 + 72 >> 2] = c[b2 + 908 + (k2 << 2) >> 2];
                c[p2 + 16 + 76 >> 2] = c[b2 + 924 + (k2 << 2) >> 2];
                a[p2 + 16 + 28 >> 0] = e2;
                a[p2 + 16 + 40 >> 0] = a[b2 + 795 + k2 >> 0] | 0;
                c[p2 + 16 + 44 >> 2] = c[b2 + 804 + (k2 << 2) >> 2];
                a[p2 + 16 + 48 >> 0] = j2;
                c[p2 + 16 + 52 >> 2] = c[b2 + 820 + (k2 << 2) >> 2];
                a[p2 + 16 + 56 >> 0] = a[b2 + 836 + k2 >> 0] | 0;
                c[p2 + 16 + 60 >> 2] = c[b2 + 840 + (k2 << 2) >> 2];
                a[p2 + 16 + 64 >> 0] = a[b2 + 856 + k2 >> 0] | 0;
                c[l2 >> 2] = c[b2 + 860 + (k2 << 2) >> 2];
                c[p2 + 16 + 4 >> 2] = c[b2 + 696 + (k2 << 2) >> 2];
                c[p2 + 16 >> 2] = c[b2 + 680 + (k2 << 2) >> 2];
                c[p2 + 16 + 36 >> 2] = c[b2 + 892 + (k2 << 2) >> 2];
                c[p2 + 16 + 32 >> 2] = c[b2 + 876 + (k2 << 2) >> 2];
                c[p2 >> 2] = c[b2 + 1236 + (k2 << 2) >> 2];
                c[p2 + 4 >> 2] = c[b2 + 1252 + (k2 << 2) >> 2];
                c[p2 + 8 >> 2] = c[b2 + 1268 + (k2 << 2) >> 2];
                g[p2 + 12 >> 2] = 0;
                h2 = c[b2 + 1456 >> 2] >> (k2 << 2);
                if (!(h2 & 1))
                  e2 = c[d2 + 32 >> 2] | 0;
                else
                  e2 = b2 + 744 + (k2 << 2) | 0;
                c[p2 + 16 + 16 >> 2] = c[e2 >> 2];
                c[p2 + 16 + 12 >> 2] = c[((h2 & 2 | 0) == 0 ? d2 + 4 | 0 : b2 + 728 + (k2 << 2) | 0) >> 2];
                if (!(h2 & 4))
                  e2 = c[d2 + 32 >> 2] | 0;
                else
                  e2 = b2 + 776 + (k2 << 2) | 0;
                c[p2 + 16 + 24 >> 2] = c[e2 >> 2];
                c[p2 + 16 + 20 >> 2] = c[((h2 & 8 | 0) == 0 ? d2 + 4 | 0 : b2 + 760 + (k2 << 2) | 0) >> 2];
                e2 = k2 + 1 | 0;
                j2 = (e2 | 0) == 3 ? 0 : e2;
                k2 = (k2 + 2 | 0) % 3 | 0;
                h2 = c[b2 + 968 + (j2 * 88 | 0) + 84 >> 2] | 0;
                switch (h2 | 0) {
                  case 2:
                  case 1: {
                    j2 = 1;
                    break;
                  }
                  case 3: {
                    q2 = +g[b2 + 968 + (j2 * 88 | 0) + 72 >> 2];
                    j2 = q2 < -1e-3 | q2 > 1e-3;
                    break;
                  }
                  default:
                    if ((h2 | 0) == 4)
                      if (+g[b2 + 968 + (j2 * 88 | 0) + 72 >> 2] < -1e-3)
                        j2 = 1;
                      else
                        j2 = +g[b2 + 968 + (j2 * 88 | 0) + 76 >> 2] > 1e-3;
                    else
                      j2 = 0;
                }
                switch (c[b2 + 968 + (k2 * 88 | 0) + 84 >> 2] | 0) {
                  case 2:
                  case 1: {
                    o2 = 42;
                    break;
                  }
                  case 3: {
                    q2 = +g[b2 + 968 + (k2 * 88 | 0) + 72 >> 2];
                    if (q2 < -1e-3 | q2 > 1e-3)
                      o2 = 42;
                    else
                      h2 = 1;
                    break;
                  }
                  case 4: {
                    if (!(+g[b2 + 968 + (k2 * 88 | 0) + 72 >> 2] < -1e-3) ? !(+g[b2 + 968 + (k2 * 88 | 0) + 76 >> 2] > 1e-3) : 0)
                      h2 = 1;
                    else
                      o2 = 42;
                    break;
                  }
                  default:
                    h2 = 1;
                }
                if ((o2 | 0) == 42) {
                  o2 = 0;
                  h2 = 0;
                }
                f2 = (rp(b2, p2 + 16 | 0, m2 + 4 | 0, n2 + 4 | 0, m2 + 336 | 0, n2 + 336 | 0, m2 + 352 | 0, n2 + 352 | 0, d2, f2, p2, 0, j2 ? h2 : 1) | 0) + f2 | 0;
              }
              if ((e2 | 0) == 3)
                break;
              else
                k2 = e2;
            }
            i = p2;
            return;
          }
          function Zg(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = +d2;
            var e2 = 0, f2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0;
            k2 = i;
            i = i + 32 | 0;
            n2 = +g[a2 + 60 >> 2];
            r2 = +g[a2 + 76 >> 2] - n2;
            m2 = +g[a2 + 64 >> 2];
            p2 = +g[a2 + 80 >> 2] - m2;
            l2 = +g[a2 + 68 >> 2];
            s2 = +g[a2 + 84 >> 2] - l2;
            o2 = +g[a2 + 92 >> 2] - n2;
            q2 = +g[a2 + 96 >> 2] - m2;
            h2 = +g[a2 + 100 >> 2] - l2;
            j2 = 1 / +O(+((r2 * q2 - p2 * o2) * (r2 * q2 - p2 * o2) + ((p2 * h2 - s2 * q2) * (p2 * h2 - s2 * q2) + (s2 * o2 - r2 * h2) * (s2 * o2 - r2 * h2))));
            f2 = j2 * (p2 * h2 - s2 * q2);
            h2 = j2 * (s2 * o2 - r2 * h2);
            j2 = (r2 * q2 - p2 * o2) * j2;
            l2 = j2 * +g[b2 + 8 >> 2] + (+g[b2 >> 2] * f2 + +g[b2 + 4 >> 2] * h2) - (f2 * n2 + h2 * m2 + j2 * l2);
            if (!(l2 >= -d2) | !(l2 <= d2)) {
              a2 = 0;
              i = k2;
              return a2 | 0;
            }
            e2 = 0;
            while (1) {
              bc[c[(c[a2 >> 2] | 0) + 104 >> 2] & 127](a2, e2, k2 + 16 | 0, k2);
              n2 = +g[k2 + 16 >> 2];
              s2 = +g[k2 >> 2] - n2;
              p2 = +g[k2 + 16 + 4 >> 2];
              o2 = +g[k2 + 4 >> 2] - p2;
              m2 = +g[k2 + 16 + 8 >> 2];
              r2 = +g[k2 + 8 >> 2] - m2;
              q2 = 1 / +O(+((h2 * s2 - f2 * o2) * (h2 * s2 - f2 * o2) + ((j2 * o2 - h2 * r2) * (j2 * o2 - h2 * r2) + (f2 * r2 - j2 * s2) * (f2 * r2 - j2 * s2))));
              e2 = e2 + 1 | 0;
              if ((h2 * s2 - f2 * o2) * q2 * +g[b2 + 8 >> 2] + (+g[b2 >> 2] * (q2 * (j2 * o2 - h2 * r2)) + +g[b2 + 4 >> 2] * (q2 * (f2 * r2 - j2 * s2))) - (m2 * ((h2 * s2 - f2 * o2) * q2) + (n2 * (q2 * (j2 * o2 - h2 * r2)) + p2 * (q2 * (f2 * r2 - j2 * s2)))) < -d2) {
                e2 = 0;
                b2 = 5;
                break;
              }
              if ((e2 | 0) >= 3) {
                e2 = 1;
                b2 = 5;
                break;
              }
            }
            if ((b2 | 0) == 5) {
              i = k2;
              return e2 | 0;
            }
            return 0;
          }
          function _g(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0;
            h2 = +g[a2 + 60 >> 2];
            k2 = +g[a2 + 76 >> 2] - h2;
            j2 = +g[a2 + 64 >> 2];
            i2 = +g[a2 + 80 >> 2] - j2;
            l2 = +g[a2 + 68 >> 2];
            m2 = +g[a2 + 84 >> 2] - l2;
            h2 = +g[a2 + 92 >> 2] - h2;
            j2 = +g[a2 + 96 >> 2] - j2;
            l2 = +g[a2 + 100 >> 2] - l2;
            g[d2 + 12 >> 2] = 0;
            f2 = 1 / +O(+((k2 * j2 - i2 * h2) * (k2 * j2 - i2 * h2) + ((i2 * l2 - m2 * j2) * (i2 * l2 - m2 * j2) + (m2 * h2 - k2 * l2) * (m2 * h2 - k2 * l2))));
            g[d2 >> 2] = (i2 * l2 - m2 * j2) * f2;
            g[d2 + 4 >> 2] = (m2 * h2 - k2 * l2) * f2;
            g[d2 + 8 >> 2] = (k2 * j2 - i2 * h2) * f2;
            c[e2 >> 2] = c[a2 + 60 >> 2];
            c[e2 + 4 >> 2] = c[a2 + 60 + 4 >> 2];
            c[e2 + 8 >> 2] = c[a2 + 60 + 8 >> 2];
            c[e2 + 12 >> 2] = c[a2 + 60 + 12 >> 2];
            return;
          }
          function $g(a2) {
            a2 = a2 | 0;
            var b2 = 0;
            c[a2 >> 2] = 3720;
            c[a2 + 12 >> 2] = 3748;
            b2 = c[a2 + 60 >> 2] | 0;
            tb[c[(c[b2 >> 2] | 0) + 20 >> 2] & 127](b2, c[a2 + 76 >> 2] | 0);
            b2 = c[a2 + 60 >> 2] | 0;
            tb[c[(c[b2 >> 2] | 0) + 16 >> 2] & 127](b2, c[a2 + 76 >> 2] | 0);
            rG(a2);
            return;
          }
          function ah(b2, d2, e2, f2, h2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            h2 = h2 | 0;
            var j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0;
            k2 = i;
            i = i + 64 | 0;
            l2 = (a[b2 + 8 >> 0] | 0) != 0;
            j2 = l2 ? e2 : d2;
            d2 = l2 ? d2 : e2;
            e2 = c[d2 + 4 >> 2] | 0;
            if (((c[e2 + 4 >> 2] | 0) + -21 | 0) >>> 0 >= 9) {
              i = k2;
              return;
            }
            if ((c[(c[j2 + 4 >> 2] | 0) + 4 >> 2] | 0) >= 20) {
              i = k2;
              return;
            }
            m2 = +Hb[c[(c[e2 >> 2] | 0) + 48 >> 2] & 15](e2);
            c[h2 + 4 >> 2] = c[b2 + 76 >> 2];
            c[b2 + 16 >> 2] = j2;
            c[b2 + 20 >> 2] = d2;
            c[b2 + 64 >> 2] = f2;
            g[b2 + 68 >> 2] = m2;
            c[b2 + 56 >> 2] = h2;
            l2 = c[d2 + 12 >> 2] | 0;
            B2 = +g[l2 >> 2];
            A2 = +g[l2 + 16 >> 2];
            z2 = +g[l2 + 32 >> 2];
            y2 = +g[l2 + 4 >> 2];
            x2 = +g[l2 + 20 >> 2];
            w2 = +g[l2 + 36 >> 2];
            s2 = +g[l2 + 8 >> 2];
            q2 = +g[l2 + 24 >> 2];
            o2 = +g[l2 + 40 >> 2];
            v2 = -+g[l2 + 48 >> 2];
            u2 = -+g[l2 + 52 >> 2];
            t2 = -+g[l2 + 56 >> 2];
            l2 = c[j2 + 12 >> 2] | 0;
            K2 = +g[l2 >> 2];
            J2 = +g[l2 + 16 >> 2];
            I2 = +g[l2 + 32 >> 2];
            H2 = +g[l2 + 4 >> 2];
            G2 = +g[l2 + 20 >> 2];
            F2 = +g[l2 + 36 >> 2];
            E2 = +g[l2 + 8 >> 2];
            D2 = +g[l2 + 24 >> 2];
            C2 = +g[l2 + 40 >> 2];
            r2 = +g[l2 + 48 >> 2];
            p2 = +g[l2 + 52 >> 2];
            n2 = +g[l2 + 56 >> 2];
            g[k2 >> 2] = B2 * K2 + A2 * J2 + z2 * I2;
            g[k2 + 4 >> 2] = B2 * H2 + A2 * G2 + z2 * F2;
            g[k2 + 8 >> 2] = B2 * E2 + A2 * D2 + z2 * C2;
            g[k2 + 12 >> 2] = 0;
            g[k2 + 16 >> 2] = y2 * K2 + x2 * J2 + w2 * I2;
            g[k2 + 20 >> 2] = y2 * H2 + x2 * G2 + w2 * F2;
            g[k2 + 24 >> 2] = y2 * E2 + x2 * D2 + w2 * C2;
            g[k2 + 28 >> 2] = 0;
            g[k2 + 32 >> 2] = s2 * K2 + q2 * J2 + o2 * I2;
            g[k2 + 36 >> 2] = s2 * H2 + q2 * G2 + o2 * F2;
            g[k2 + 40 >> 2] = s2 * E2 + q2 * D2 + o2 * C2;
            g[k2 + 44 >> 2] = 0;
            g[k2 + 48 >> 2] = B2 * v2 + A2 * u2 + z2 * t2 + (B2 * r2 + A2 * p2 + z2 * n2);
            g[k2 + 52 >> 2] = y2 * v2 + x2 * u2 + w2 * t2 + (y2 * r2 + x2 * p2 + w2 * n2);
            g[k2 + 56 >> 2] = s2 * v2 + q2 * u2 + o2 * t2 + (s2 * r2 + q2 * p2 + o2 * n2);
            g[k2 + 60 >> 2] = 0;
            l2 = c[(c[b2 + 16 >> 2] | 0) + 4 >> 2] | 0;
            bc[c[(c[l2 >> 2] | 0) + 8 >> 2] & 127](l2, k2, b2 + 24 | 0, b2 + 40 | 0);
            g[b2 + 40 >> 2] = +g[b2 + 40 >> 2] + m2;
            g[b2 + 44 >> 2] = +g[b2 + 44 >> 2] + m2;
            g[b2 + 48 >> 2] = +g[b2 + 48 >> 2] + m2;
            g[b2 + 24 >> 2] = +g[b2 + 24 >> 2] - m2;
            g[b2 + 28 >> 2] = +g[b2 + 28 >> 2] - m2;
            g[b2 + 32 >> 2] = +g[b2 + 32 >> 2] - m2;
            l2 = c[b2 + 76 >> 2] | 0;
            f2 = c[d2 + 8 >> 2] | 0;
            c[l2 + 740 >> 2] = c[j2 + 8 >> 2];
            c[l2 + 744 >> 2] = f2;
            bc[c[(c[e2 >> 2] | 0) + 64 >> 2] & 127](e2, b2 + 12 | 0, b2 + 24 | 0, b2 + 40 | 0);
            e2 = c[h2 + 4 >> 2] | 0;
            do
              if (c[e2 + 748 >> 2] | 0) {
                j2 = c[e2 + 740 >> 2] | 0;
                f2 = c[(c[h2 + 8 >> 2] | 0) + 8 >> 2] | 0;
                d2 = c[(c[h2 + 12 >> 2] | 0) + 8 >> 2] | 0;
                if ((j2 | 0) == (f2 | 0)) {
                  Xn(e2, j2 + 4 | 0, d2 + 4 | 0);
                  break;
                } else {
                  Xn(e2, d2 + 4 | 0, f2 + 4 | 0);
                  break;
                }
              }
            while (0);
            c[b2 + 16 >> 2] = 0;
            c[b2 + 20 >> 2] = 0;
            i = k2;
            return;
          }
          function bh(b2, d2, e2, f2, h2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            h2 = h2 | 0;
            var j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0, N2 = 0, O2 = 0, P2 = 0, Q2 = 0, R2 = 0, S2 = 0, T2 = 0, U2 = 0, V2 = 0, W2 = 0, X2 = 0, Y2 = 0;
            W2 = i;
            i = i + 240 | 0;
            f2 = (a[b2 + 8 >> 0] | 0) != 0;
            h2 = f2 ? e2 : d2;
            f2 = f2 ? d2 : e2;
            S2 = +g[h2 + 116 >> 2] - +g[h2 + 52 >> 2];
            T2 = +g[h2 + 120 >> 2] - +g[h2 + 56 >> 2];
            U2 = +g[h2 + 124 >> 2] - +g[h2 + 60 >> 2];
            V2 = +g[h2 + 256 >> 2];
            if (S2 * S2 + T2 * T2 + U2 * U2 < V2 * V2) {
              X2 = 1;
              i = W2;
              return +X2;
            }
            F2 = +g[f2 + 4 >> 2];
            G2 = +g[f2 + 20 >> 2];
            H2 = +g[f2 + 36 >> 2];
            I2 = +g[f2 + 8 >> 2];
            J2 = +g[f2 + 24 >> 2];
            K2 = +g[f2 + 40 >> 2];
            L2 = +g[f2 + 12 >> 2];
            M2 = +g[f2 + 28 >> 2];
            N2 = +g[f2 + 44 >> 2];
            k2 = -+g[f2 + 52 >> 2];
            l2 = -+g[f2 + 56 >> 2];
            m2 = -+g[f2 + 60 >> 2];
            O2 = +g[h2 + 4 >> 2];
            P2 = +g[h2 + 20 >> 2];
            Q2 = +g[h2 + 36 >> 2];
            R2 = +g[h2 + 8 >> 2];
            S2 = +g[h2 + 24 >> 2];
            T2 = +g[h2 + 40 >> 2];
            U2 = +g[h2 + 12 >> 2];
            V2 = +g[h2 + 28 >> 2];
            p2 = +g[h2 + 44 >> 2];
            u2 = +g[h2 + 52 >> 2];
            t2 = +g[h2 + 56 >> 2];
            s2 = +g[h2 + 60 >> 2];
            q2 = F2 * k2 + G2 * l2 + H2 * m2 + (F2 * u2 + G2 * t2 + H2 * s2);
            r2 = I2 * k2 + J2 * l2 + K2 * m2 + (I2 * u2 + J2 * t2 + K2 * s2);
            s2 = L2 * k2 + M2 * l2 + N2 * m2 + (L2 * u2 + M2 * t2 + N2 * s2);
            t2 = +g[h2 + 68 >> 2];
            u2 = +g[h2 + 84 >> 2];
            v2 = +g[h2 + 100 >> 2];
            w2 = +g[h2 + 72 >> 2];
            x2 = +g[h2 + 88 >> 2];
            y2 = +g[h2 + 104 >> 2];
            z2 = +g[h2 + 76 >> 2];
            A2 = +g[h2 + 92 >> 2];
            B2 = +g[h2 + 108 >> 2];
            n2 = +g[h2 + 116 >> 2];
            o2 = +g[h2 + 120 >> 2];
            E2 = +g[h2 + 124 >> 2];
            C2 = F2 * k2 + G2 * l2 + H2 * m2 + (F2 * n2 + G2 * o2 + H2 * E2);
            D2 = I2 * k2 + J2 * l2 + K2 * m2 + (I2 * n2 + J2 * o2 + K2 * E2);
            E2 = L2 * k2 + M2 * l2 + N2 * m2 + (L2 * n2 + M2 * o2 + N2 * E2);
            f2 = c[f2 + 192 >> 2] | 0;
            if (((c[f2 + 4 >> 2] | 0) + -21 | 0) >>> 0 >= 9) {
              X2 = 1;
              i = W2;
              return +X2;
            }
            g[W2 + 224 >> 2] = q2;
            g[W2 + 224 + 4 >> 2] = r2;
            g[W2 + 224 + 8 >> 2] = s2;
            g[W2 + 224 + 12 >> 2] = 0;
            if (C2 < q2) {
              g[W2 + 224 >> 2] = C2;
              j2 = C2;
            } else
              j2 = q2;
            if (D2 < r2) {
              g[W2 + 224 + 4 >> 2] = D2;
              k2 = D2;
            } else
              k2 = r2;
            if (E2 < s2) {
              g[W2 + 224 + 8 >> 2] = E2;
              l2 = E2;
            } else
              l2 = s2;
            g[W2 + 208 >> 2] = q2;
            g[W2 + 208 + 4 >> 2] = r2;
            g[W2 + 208 + 8 >> 2] = s2;
            g[W2 + 208 + 12 >> 2] = 0;
            if (q2 < C2) {
              g[W2 + 208 >> 2] = C2;
              m2 = C2;
            } else
              m2 = q2;
            if (r2 < D2) {
              g[W2 + 208 + 4 >> 2] = D2;
              n2 = D2;
            } else
              n2 = r2;
            if (s2 < E2) {
              g[W2 + 208 + 8 >> 2] = E2;
              o2 = E2;
            } else
              o2 = s2;
            Y2 = +g[h2 + 252 >> 2];
            g[W2 + 224 >> 2] = j2 - Y2;
            g[W2 + 224 + 4 >> 2] = k2 - Y2;
            g[W2 + 224 + 8 >> 2] = l2 - Y2;
            g[W2 + 208 >> 2] = Y2 + m2;
            g[W2 + 208 + 4 >> 2] = Y2 + n2;
            g[W2 + 208 + 8 >> 2] = Y2 + o2;
            c[W2 >> 2] = 3904;
            g[W2 + 4 >> 2] = F2 * O2 + G2 * P2 + H2 * Q2;
            g[W2 + 8 >> 2] = F2 * R2 + G2 * S2 + H2 * T2;
            g[W2 + 12 >> 2] = F2 * U2 + G2 * V2 + H2 * p2;
            g[W2 + 16 >> 2] = 0;
            g[W2 + 20 >> 2] = I2 * O2 + J2 * P2 + K2 * Q2;
            g[W2 + 24 >> 2] = I2 * R2 + J2 * S2 + K2 * T2;
            g[W2 + 28 >> 2] = I2 * U2 + J2 * V2 + K2 * p2;
            g[W2 + 32 >> 2] = 0;
            g[W2 + 36 >> 2] = L2 * O2 + M2 * P2 + N2 * Q2;
            g[W2 + 40 >> 2] = L2 * R2 + M2 * S2 + N2 * T2;
            g[W2 + 44 >> 2] = L2 * U2 + M2 * V2 + N2 * p2;
            g[W2 + 48 >> 2] = 0;
            g[W2 + 52 >> 2] = q2;
            g[W2 + 56 >> 2] = r2;
            g[W2 + 60 >> 2] = s2;
            g[W2 + 64 >> 2] = 0;
            g[W2 + 68 >> 2] = F2 * t2 + G2 * u2 + H2 * v2;
            g[W2 + 72 >> 2] = F2 * w2 + G2 * x2 + H2 * y2;
            g[W2 + 76 >> 2] = F2 * z2 + G2 * A2 + H2 * B2;
            g[W2 + 80 >> 2] = 0;
            g[W2 + 84 >> 2] = I2 * t2 + J2 * u2 + K2 * v2;
            g[W2 + 88 >> 2] = I2 * w2 + J2 * x2 + K2 * y2;
            g[W2 + 92 >> 2] = I2 * z2 + J2 * A2 + K2 * B2;
            g[W2 + 96 >> 2] = 0;
            g[W2 + 100 >> 2] = L2 * t2 + M2 * u2 + N2 * v2;
            g[W2 + 104 >> 2] = L2 * w2 + M2 * x2 + N2 * y2;
            g[W2 + 108 >> 2] = L2 * z2 + M2 * A2 + N2 * B2;
            g[W2 + 112 >> 2] = 0;
            g[W2 + 116 >> 2] = C2;
            g[W2 + 120 >> 2] = D2;
            g[W2 + 124 >> 2] = E2;
            g[W2 + 128 >> 2] = 0;
            g[W2 + 196 >> 2] = Y2;
            c[W2 + 200 >> 2] = c[h2 + 248 >> 2];
            if (f2 | 0 ? (bc[c[(c[f2 >> 2] | 0) + 64 >> 2] & 127](f2, W2, W2 + 224 | 0, W2 + 208 | 0), X2 = +g[W2 + 200 >> 2], X2 < +g[h2 + 248 >> 2]) : 0) {
              g[h2 + 248 >> 2] = X2;
              Y2 = X2;
              i = W2;
              return +Y2;
            }
            Y2 = 1;
            i = W2;
            return +Y2;
          }
          function ch(a2) {
            a2 = a2 | 0;
            rG(a2);
            return;
          }
          function dh(b2, d2, e2, f2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            var h2 = 0;
            f2 = i;
            i = i + 784 | 0;
            c[f2 + 720 >> 2] = 1065353216;
            c[f2 + 720 + 4 >> 2] = 0;
            c[f2 + 720 + 4 + 4 >> 2] = 0;
            c[f2 + 720 + 4 + 8 >> 2] = 0;
            c[f2 + 720 + 4 + 12 >> 2] = 0;
            c[f2 + 720 + 20 >> 2] = 1065353216;
            c[f2 + 720 + 24 >> 2] = 0;
            c[f2 + 720 + 24 + 4 >> 2] = 0;
            c[f2 + 720 + 24 + 8 >> 2] = 0;
            c[f2 + 720 + 24 + 12 >> 2] = 0;
            c[f2 + 720 + 40 >> 2] = 1065353216;
            e2 = f2 + 720 + 44 | 0;
            c[e2 >> 2] = 0;
            c[e2 + 4 >> 2] = 0;
            c[e2 + 8 >> 2] = 0;
            c[e2 + 12 >> 2] = 0;
            c[e2 + 16 >> 2] = 0;
            c[f2 + 544 >> 2] = 3316;
            c[f2 + 544 + 168 >> 2] = 0;
            g[f2 + 544 + 172 >> 2] = 0;
            c[f2 + 544 + 164 >> 2] = c[b2 + 200 >> 2];
            e2 = c[b2 + 196 >> 2] | 0;
            c[f2 + 488 + 8 >> 2] = 0;
            c[f2 + 488 + 12 >> 2] = -1;
            c[f2 + 488 + 16 >> 2] = 1065353216;
            c[f2 + 488 + 20 >> 2] = 1065353216;
            c[f2 + 488 + 24 >> 2] = 1065353216;
            g[f2 + 488 + 28 >> 2] = 0;
            c[f2 + 488 >> 2] = 6380;
            c[f2 + 488 + 4 >> 2] = 8;
            c[f2 + 488 + 32 >> 2] = e2;
            c[f2 + 488 + 48 >> 2] = e2;
            c[f2 + 376 + 8 >> 2] = 0;
            c[f2 + 376 + 12 >> 2] = -1;
            c[f2 + 376 + 16 >> 2] = 1065353216;
            c[f2 + 376 + 20 >> 2] = 1065353216;
            c[f2 + 376 + 24 >> 2] = 1065353216;
            g[f2 + 376 + 28 >> 2] = 0;
            g[f2 + 376 + 48 >> 2] = 0.03999999910593033;
            c[f2 + 376 + 56 >> 2] = 0;
            c[f2 + 376 >> 2] = 3768;
            c[f2 + 376 + 4 >> 2] = 1;
            c[f2 + 376 + 60 >> 2] = c[d2 >> 2];
            c[f2 + 376 + 60 + 4 >> 2] = c[d2 + 4 >> 2];
            c[f2 + 376 + 60 + 8 >> 2] = c[d2 + 8 >> 2];
            c[f2 + 376 + 60 + 12 >> 2] = c[d2 + 12 >> 2];
            c[f2 + 376 + 76 >> 2] = c[d2 + 16 >> 2];
            c[f2 + 376 + 76 + 4 >> 2] = c[d2 + 16 + 4 >> 2];
            c[f2 + 376 + 76 + 8 >> 2] = c[d2 + 16 + 8 >> 2];
            c[f2 + 376 + 76 + 12 >> 2] = c[d2 + 16 + 12 >> 2];
            c[f2 + 376 + 92 >> 2] = c[d2 + 32 >> 2];
            c[f2 + 376 + 92 + 4 >> 2] = c[d2 + 32 + 4 >> 2];
            c[f2 + 376 + 92 + 8 >> 2] = c[d2 + 32 + 8 >> 2];
            c[f2 + 376 + 92 + 12 >> 2] = c[d2 + 32 + 12 >> 2];
            g[f2 + 16 + 308 >> 2] = 9999999747378752e-20;
            a[f2 + 16 + 332 >> 0] = 0;
            c[f2 >> 2] = 7024;
            c[f2 + 4 >> 2] = f2 + 16;
            c[f2 + 8 >> 2] = f2 + 488;
            c[f2 + 12 >> 2] = f2 + 376;
            if (co(f2, b2 + 4 | 0, b2 + 68 | 0, f2 + 720 | 0, f2 + 720 | 0, f2 + 544 | 0) | 0 ? (h2 = +g[f2 + 544 + 164 >> 2], +g[b2 + 200 >> 2] > h2) : 0)
              g[b2 + 200 >> 2] = h2;
            c[f2 + 376 >> 2] = 6248;
            e2 = c[f2 + 376 + 56 >> 2] | 0;
            if (!e2) {
              i = f2;
              return;
            }
            rb[c[c[e2 >> 2] >> 2] & 255](e2);
            e2 = c[f2 + 376 + 56 >> 2] | 0;
            if (!e2) {
              i = f2;
              return;
            }
            c[5638] = (c[5638] | 0) + 1;
            rG(c[e2 + -4 >> 2] | 0);
            i = f2;
            return;
          }
          function eh(b2, d2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0;
            e2 = c[b2 + 76 >> 2] | 0;
            if (!e2)
              return;
            f2 = c[d2 + 4 >> 2] | 0;
            if ((f2 | 0) == (c[d2 + 8 >> 2] | 0) ? (h2 = f2 | 0 ? f2 << 1 : 1, (f2 | 0) < (h2 | 0)) : 0) {
              if (!h2)
                e2 = 0;
              else {
                c[5637] = (c[5637] | 0) + 1;
                e2 = qG((h2 << 2 | 3) + 16 | 0) | 0;
                if (!e2)
                  e2 = 0;
                else {
                  c[(e2 + 4 + 15 & -16) + -4 >> 2] = e2;
                  e2 = e2 + 4 + 15 & -16;
                }
                f2 = c[d2 + 4 >> 2] | 0;
              }
              if ((f2 | 0) > 0) {
                g2 = 0;
                do {
                  c[e2 + (g2 << 2) >> 2] = c[(c[d2 + 12 >> 2] | 0) + (g2 << 2) >> 2];
                  g2 = g2 + 1 | 0;
                } while ((g2 | 0) != (f2 | 0));
              }
              g2 = c[d2 + 12 >> 2] | 0;
              if (g2) {
                if (a[d2 + 16 >> 0] | 0) {
                  c[5638] = (c[5638] | 0) + 1;
                  rG(c[g2 + -4 >> 2] | 0);
                  f2 = c[d2 + 4 >> 2] | 0;
                }
                c[d2 + 12 >> 2] = 0;
              }
              a[d2 + 16 >> 0] = 1;
              c[d2 + 12 >> 2] = e2;
              c[d2 + 8 >> 2] = h2;
              e2 = c[b2 + 76 >> 2] | 0;
            }
            c[(c[d2 + 12 >> 2] | 0) + (f2 << 2) >> 2] = e2;
            c[d2 + 4 >> 2] = f2 + 1;
            return;
          }
          function fh(a2) {
            a2 = a2 | 0;
            return;
          }
          function gh(a2) {
            a2 = a2 | 0;
            rG(a2);
            return;
          }
          function hh(b2, d2, e2, f2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            var g2 = 0, h2 = 0, i2 = 0;
            f2 = c[d2 >> 2] | 0;
            f2 = Ob[c[(c[f2 >> 2] | 0) + 56 >> 2] & 31](f2, 36) | 0;
            g2 = c[d2 + 4 >> 2] | 0;
            i2 = c[b2 + 12 >> 2] | 0;
            h2 = c[b2 + 8 >> 2] | 0;
            e2 = c[b2 + 16 >> 2] | 0;
            b2 = c[b2 + 20 >> 2] | 0;
            c[f2 + 4 >> 2] = c[d2 >> 2];
            c[f2 >> 2] = 3944;
            c[f2 + 8 >> 2] = i2;
            c[f2 + 12 >> 2] = h2;
            a[f2 + 16 >> 0] = 0;
            c[f2 + 20 >> 2] = g2;
            a[f2 + 24 >> 0] = 0;
            c[f2 + 28 >> 2] = e2;
            c[f2 + 32 >> 2] = b2;
            return f2 | 0;
          }
          function ih(b2) {
            b2 = b2 | 0;
            var d2 = 0;
            c[b2 >> 2] = 3944;
            if (!(a[b2 + 16 >> 0] | 0))
              return;
            d2 = c[b2 + 20 >> 2] | 0;
            if (!d2)
              return;
            b2 = c[b2 + 4 >> 2] | 0;
            tb[c[(c[b2 >> 2] | 0) + 16 >> 2] & 127](b2, d2);
            return;
          }
          function jh(b2) {
            b2 = b2 | 0;
            var d2 = 0, e2 = 0;
            c[b2 >> 2] = 3944;
            if (!(a[b2 + 16 >> 0] | 0)) {
              rG(b2);
              return;
            }
            d2 = c[b2 + 20 >> 2] | 0;
            if (!d2) {
              rG(b2);
              return;
            }
            e2 = c[b2 + 4 >> 2] | 0;
            tb[c[(c[e2 >> 2] | 0) + 16 >> 2] & 127](e2, d2);
            rG(b2);
            return;
          }
          function kh(b2, d2, e2, f2, h2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            h2 = h2 | 0;
            var j2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0, P2 = 0, S2 = 0, T2 = 0, U2 = 0, V2 = 0, W2 = 0, X2 = 0, Y2 = 0, Z2 = 0, _2 = 0, $2 = 0, aa2 = 0, ba2 = 0, ca2 = 0, da2 = 0, ea2 = 0, fa2 = 0, ga2 = 0, ha2 = 0, ia2 = 0, ja2 = 0, ka2 = 0, la2 = 0, ma2 = 0, na2 = 0, oa2 = 0, pa2 = 0, qa2 = 0, ra2 = 0, sa2 = 0, ta2 = 0, ua2 = 0;
            sa2 = i;
            i = i + 688 | 0;
            l2 = c[b2 + 20 >> 2] | 0;
            if (!l2) {
              l2 = c[b2 + 4 >> 2] | 0;
              l2 = Eb[c[(c[l2 >> 2] | 0) + 12 >> 2] & 63](l2, c[d2 + 8 >> 2] | 0, c[e2 + 8 >> 2] | 0) | 0;
              c[b2 + 20 >> 2] = l2;
              a[b2 + 16 >> 0] = 1;
            }
            c[h2 + 4 >> 2] = l2;
            pa2 = c[d2 + 4 >> 2] | 0;
            qa2 = c[e2 + 4 >> 2] | 0;
            j2 = c[pa2 + 4 >> 2] | 0;
            m2 = c[qa2 + 4 >> 2] | 0;
            if ((j2 | 0) == 10 & (m2 | 0) == 10) {
              M2 = +g[l2 + 752 >> 2];
              na2 = c[pa2 + 56 >> 2] | 0;
              s2 = +g[pa2 + 32 + (na2 << 2) >> 2];
              L2 = +g[pa2 + 32 + (((na2 + 2 | 0) % 3 | 0) << 2) >> 2];
              ra2 = c[qa2 + 56 >> 2] | 0;
              t2 = +g[qa2 + 32 + (ra2 << 2) >> 2];
              J2 = +g[qa2 + 32 + (((ra2 + 2 | 0) % 3 | 0) << 2) >> 2];
              b2 = c[d2 + 12 >> 2] | 0;
              j2 = c[e2 + 12 >> 2] | 0;
              C2 = +g[b2 + (na2 << 2) >> 2];
              F2 = +g[b2 + 16 + (na2 << 2) >> 2];
              D2 = +g[b2 + 32 + (na2 << 2) >> 2];
              q2 = +g[j2 + (ra2 << 2) >> 2];
              r2 = +g[j2 + 16 + (ra2 << 2) >> 2];
              x2 = +g[j2 + 32 + (ra2 << 2) >> 2];
              y2 = +g[j2 + 48 >> 2] - +g[b2 + 48 >> 2];
              z2 = +g[j2 + 52 >> 2] - +g[b2 + 52 >> 2];
              B2 = +g[j2 + 56 >> 2] - +g[b2 + 56 >> 2];
              o2 = 1 - (C2 * q2 + F2 * r2 + D2 * x2) * (C2 * q2 + F2 * r2 + D2 * x2);
              if (!(o2 == 0)) {
                o2 = (C2 * y2 + F2 * z2 + D2 * B2 - (C2 * q2 + F2 * r2 + D2 * x2) * (q2 * y2 + r2 * z2 + x2 * B2)) / o2;
                if (!(o2 < -s2)) {
                  if (o2 > s2)
                    o2 = s2;
                } else
                  o2 = -s2;
              } else
                o2 = 0;
              p2 = (C2 * q2 + F2 * r2 + D2 * x2) * o2 - (q2 * y2 + r2 * z2 + x2 * B2);
              if (p2 < -t2) {
                o2 = (C2 * q2 + F2 * r2 + D2 * x2) * -t2 + (C2 * y2 + F2 * z2 + D2 * B2);
                if (!(o2 < -s2))
                  if (o2 > s2) {
                    o2 = s2;
                    p2 = -t2;
                  } else
                    p2 = -t2;
                else {
                  o2 = -s2;
                  p2 = -t2;
                }
              } else if (p2 > t2) {
                o2 = t2 * (C2 * q2 + F2 * r2 + D2 * x2) + (C2 * y2 + F2 * z2 + D2 * B2);
                if (!(o2 < -s2))
                  if (o2 > s2) {
                    o2 = s2;
                    p2 = t2;
                  } else
                    p2 = t2;
                else {
                  o2 = -s2;
                  p2 = t2;
                }
              }
              v2 = q2 * p2;
              u2 = r2 * p2;
              t2 = x2 * p2;
              p2 = v2 + (y2 - C2 * o2);
              r2 = u2 + (z2 - F2 * o2);
              o2 = t2 + (B2 - D2 * o2);
              s2 = +O(+(o2 * o2 + (p2 * p2 + r2 * r2)));
              if (!(s2 - L2 - J2 > M2)) {
                do
                  if (o2 * o2 + (p2 * p2 + r2 * r2) <= 14210854715202004e-30)
                    if (+N(+D2) > 0.7071067690849304) {
                      o2 = 1 / +O(+(F2 * F2 + D2 * D2));
                      g[sa2 + 280 >> 2] = 0;
                      g[sa2 + 280 + 4 >> 2] = -(D2 * o2);
                      g[sa2 + 280 + 8 >> 2] = F2 * o2;
                      q2 = 0;
                      p2 = -(D2 * o2);
                      o2 = F2 * o2;
                      break;
                    } else {
                      p2 = 1 / +O(+(C2 * C2 + F2 * F2));
                      g[sa2 + 280 >> 2] = -(F2 * p2);
                      g[sa2 + 280 + 4 >> 2] = C2 * p2;
                      g[sa2 + 280 + 8 >> 2] = 0;
                      q2 = -(F2 * p2);
                      p2 = C2 * p2;
                      o2 = 0;
                      break;
                    }
                  else {
                    g[sa2 + 280 >> 2] = p2 * -(1 / s2);
                    g[sa2 + 280 + 4 >> 2] = r2 * -(1 / s2);
                    g[sa2 + 280 + 8 >> 2] = o2 * -(1 / s2);
                    g[sa2 + 280 + 12 >> 2] = 0;
                    q2 = p2 * -(1 / s2);
                    p2 = r2 * -(1 / s2);
                    o2 = o2 * -(1 / s2);
                  }
                while (0);
                ma2 = J2 * p2 + (u2 + +g[j2 + 52 >> 2]);
                oa2 = J2 * o2 + (t2 + +g[j2 + 56 >> 2]);
                g[sa2 + 264 >> 2] = J2 * q2 + (v2 + +g[j2 + 48 >> 2]);
                g[sa2 + 264 + 4 >> 2] = ma2;
                g[sa2 + 264 + 8 >> 2] = oa2;
                g[sa2 + 264 + 12 >> 2] = 0;
              }
              if (s2 - L2 - J2 < M2) {
                Yb[c[(c[h2 >> 2] | 0) + 16 >> 2] & 15](h2, sa2 + 280 | 0, sa2 + 264 | 0, s2 - L2 - J2);
                l2 = c[h2 + 4 >> 2] | 0;
              }
              if (!(c[l2 + 748 >> 2] | 0)) {
                i = sa2;
                return;
              }
              m2 = c[l2 + 740 >> 2] | 0;
              n2 = c[(c[h2 + 8 >> 2] | 0) + 8 >> 2] | 0;
              j2 = c[(c[h2 + 12 >> 2] | 0) + 8 >> 2] | 0;
              if ((m2 | 0) == (n2 | 0)) {
                Xn(l2, m2 + 4 | 0, j2 + 4 | 0);
                i = sa2;
                return;
              } else {
                Xn(l2, j2 + 4 | 0, n2 + 4 | 0);
                i = sa2;
                return;
              }
            }
            g[sa2 + 128 + 128 >> 2] = 999999984306749400;
            E2 = c[b2 + 8 >> 2] | 0;
            w2 = c[b2 + 12 >> 2] | 0;
            c[sa2 + 48 >> 2] = 6928;
            c[sa2 + 48 + 4 >> 2] = 0;
            c[sa2 + 48 + 8 >> 2] = 1065353216;
            c[sa2 + 48 + 12 >> 2] = 0;
            g[sa2 + 48 + 16 >> 2] = 0;
            c[sa2 + 48 + 20 >> 2] = w2;
            c[sa2 + 48 + 24 >> 2] = E2;
            c[sa2 + 48 + 28 >> 2] = pa2;
            c[sa2 + 48 + 32 >> 2] = qa2;
            c[sa2 + 48 + 36 >> 2] = j2;
            c[sa2 + 48 + 40 >> 2] = m2;
            g[sa2 + 48 + 44 >> 2] = +Hb[c[(c[pa2 >> 2] | 0) + 48 >> 2] & 15](pa2);
            g[sa2 + 48 + 48 >> 2] = +Hb[c[(c[qa2 >> 2] | 0) + 48 >> 2] & 15](qa2);
            a[sa2 + 48 + 52 >> 0] = 0;
            c[sa2 + 48 + 60 >> 2] = -1;
            c[sa2 + 48 + 72 >> 2] = 1;
            c[sa2 + 48 + 76 >> 2] = 1;
            c[sa2 + 48 + 28 >> 2] = pa2;
            c[sa2 + 48 + 32 >> 2] = qa2;
            ma2 = +Hb[c[(c[pa2 >> 2] | 0) + 48 >> 2] & 15](pa2);
            oa2 = +Hb[c[(c[qa2 >> 2] | 0) + 48 >> 2] & 15](qa2);
            oa2 = ma2 + oa2 + +g[(c[b2 + 20 >> 2] | 0) + 752 >> 2];
            g[sa2 + 128 + 128 >> 2] = oa2 * oa2;
            E2 = c[d2 + 12 >> 2] | 0;
            c[sa2 + 128 >> 2] = c[E2 >> 2];
            c[sa2 + 128 + 4 >> 2] = c[E2 + 4 >> 2];
            c[sa2 + 128 + 8 >> 2] = c[E2 + 8 >> 2];
            c[sa2 + 128 + 12 >> 2] = c[E2 + 12 >> 2];
            m2 = sa2 + 128 + 16 | 0;
            c[m2 >> 2] = c[E2 + 16 >> 2];
            c[m2 + 4 >> 2] = c[E2 + 16 + 4 >> 2];
            c[m2 + 8 >> 2] = c[E2 + 16 + 8 >> 2];
            c[m2 + 12 >> 2] = c[E2 + 16 + 12 >> 2];
            w2 = sa2 + 128 + 32 | 0;
            c[w2 >> 2] = c[E2 + 32 >> 2];
            c[w2 + 4 >> 2] = c[E2 + 32 + 4 >> 2];
            c[w2 + 8 >> 2] = c[E2 + 32 + 8 >> 2];
            c[w2 + 12 >> 2] = c[E2 + 32 + 12 >> 2];
            A2 = sa2 + 128 + 48 | 0;
            c[A2 >> 2] = c[E2 + 48 >> 2];
            c[A2 + 4 >> 2] = c[E2 + 48 + 4 >> 2];
            c[A2 + 8 >> 2] = c[E2 + 48 + 8 >> 2];
            c[A2 + 12 >> 2] = c[E2 + 48 + 12 >> 2];
            E2 = sa2 + 128 + 64 | 0;
            j2 = c[e2 + 12 >> 2] | 0;
            c[E2 >> 2] = c[j2 >> 2];
            c[E2 + 4 >> 2] = c[j2 + 4 >> 2];
            c[E2 + 8 >> 2] = c[j2 + 8 >> 2];
            c[E2 + 12 >> 2] = c[j2 + 12 >> 2];
            G2 = sa2 + 128 + 80 | 0;
            c[G2 >> 2] = c[j2 + 16 >> 2];
            c[G2 + 4 >> 2] = c[j2 + 16 + 4 >> 2];
            c[G2 + 8 >> 2] = c[j2 + 16 + 8 >> 2];
            c[G2 + 12 >> 2] = c[j2 + 16 + 12 >> 2];
            H2 = sa2 + 128 + 96 | 0;
            c[H2 >> 2] = c[j2 + 32 >> 2];
            c[H2 + 4 >> 2] = c[j2 + 32 + 4 >> 2];
            c[H2 + 8 >> 2] = c[j2 + 32 + 8 >> 2];
            c[H2 + 12 >> 2] = c[j2 + 32 + 12 >> 2];
            I2 = sa2 + 128 + 112 | 0;
            c[I2 >> 2] = c[j2 + 48 >> 2];
            c[I2 + 4 >> 2] = c[j2 + 48 + 4 >> 2];
            c[I2 + 8 >> 2] = c[j2 + 48 + 8 >> 2];
            c[I2 + 12 >> 2] = c[j2 + 48 + 12 >> 2];
            j2 = c[pa2 + 4 >> 2] | 0;
            if ((j2 | 0) < 7 ? (n2 = c[qa2 + 4 >> 2] | 0, (n2 | 0) < 7) : 0) {
              c[sa2 + 40 >> 2] = 3972;
              if (!j2) {
                j2 = n2;
                p2 = 0;
              } else {
                p2 = +Hb[c[(c[pa2 >> 2] | 0) + 48 >> 2] & 15](pa2);
                j2 = c[qa2 + 4 >> 2] | 0;
              }
              if (!j2)
                o2 = 0;
              else
                o2 = +Hb[c[(c[qa2 >> 2] | 0) + 48 >> 2] & 15](qa2);
              c[sa2 >> 2] = 4e3;
              c[sa2 + 4 >> 2] = h2;
              g[sa2 + 24 >> 2] = p2;
              g[sa2 + 28 >> 2] = o2;
              a[sa2 + 36 >> 0] = 0;
              ia2 = c[pa2 + 56 >> 2] | 0;
              a:
                do
                  if (ia2 | 0) {
                    ja2 = c[qa2 + 56 >> 2] | 0;
                    do
                      if (!ja2) {
                        if ((c[qa2 + 4 >> 2] | 0) != 1)
                          break a;
                        A2 = sa2 + 624 + 16 | 0;
                        a[A2 >> 0] = 1;
                        E2 = sa2 + 624 + 12 | 0;
                        c[E2 >> 2] = 0;
                        w2 = sa2 + 624 + 4 | 0;
                        c[w2 >> 2] = 0;
                        n2 = sa2 + 624 + 8 | 0;
                        c[n2 >> 2] = 0;
                        j2 = c[e2 + 12 >> 2] | 0;
                        ma2 = +g[qa2 + 60 >> 2];
                        oa2 = +g[qa2 + 60 + 4 >> 2];
                        q2 = +g[qa2 + 60 + 8 >> 2];
                        o2 = ma2 * +g[j2 >> 2] + oa2 * +g[j2 + 4 >> 2] + q2 * +g[j2 + 8 >> 2] + +g[j2 + 48 >> 2];
                        p2 = ma2 * +g[j2 + 16 >> 2] + oa2 * +g[j2 + 20 >> 2] + q2 * +g[j2 + 24 >> 2] + +g[j2 + 52 >> 2];
                        q2 = ma2 * +g[j2 + 32 >> 2] + oa2 * +g[j2 + 36 >> 2] + q2 * +g[j2 + 40 >> 2] + +g[j2 + 56 >> 2];
                        c[5637] = (c[5637] | 0) + 1;
                        j2 = qG(35) | 0;
                        if (!j2)
                          l2 = 0;
                        else {
                          c[(j2 + 4 + 15 & -16) + -4 >> 2] = j2;
                          l2 = j2 + 4 + 15 & -16;
                        }
                        j2 = c[E2 >> 2] | 0;
                        if (!j2)
                          j2 = 0;
                        else {
                          c[5638] = (c[5638] | 0) + 1;
                          rG(c[j2 + -4 >> 2] | 0);
                          j2 = c[w2 >> 2] | 0;
                          c[E2 >> 2] = 0;
                        }
                        a[A2 >> 0] = 1;
                        c[E2 >> 2] = l2;
                        c[n2 >> 2] = 1;
                        g[l2 + (j2 << 4) >> 2] = o2;
                        g[l2 + (j2 << 4) + 4 >> 2] = p2;
                        g[l2 + (j2 << 4) + 8 >> 2] = q2;
                        g[l2 + (j2 << 4) + 12 >> 2] = 0;
                        j2 = (c[w2 >> 2] | 0) + 1 | 0;
                        c[w2 >> 2] = j2;
                        ra2 = c[e2 + 12 >> 2] | 0;
                        ma2 = +g[qa2 + 60 + 16 >> 2];
                        oa2 = +g[qa2 + 60 + 20 >> 2];
                        q2 = +g[qa2 + 60 + 24 >> 2];
                        o2 = ma2 * +g[ra2 >> 2] + oa2 * +g[ra2 + 4 >> 2] + q2 * +g[ra2 + 8 >> 2] + +g[ra2 + 48 >> 2];
                        p2 = ma2 * +g[ra2 + 16 >> 2] + oa2 * +g[ra2 + 20 >> 2] + q2 * +g[ra2 + 24 >> 2] + +g[ra2 + 52 >> 2];
                        q2 = ma2 * +g[ra2 + 32 >> 2] + oa2 * +g[ra2 + 36 >> 2] + q2 * +g[ra2 + 40 >> 2] + +g[ra2 + 56 >> 2];
                        if ((j2 | 0) == (c[n2 >> 2] | 0) ? (K2 = j2 | 0 ? j2 << 1 : 1, (j2 | 0) < (K2 | 0)) : 0) {
                          if (!K2)
                            m2 = 0;
                          else {
                            c[5637] = (c[5637] | 0) + 1;
                            j2 = qG((K2 << 4 | 3) + 16 | 0) | 0;
                            if (!j2)
                              j2 = 0;
                            else {
                              c[(j2 + 4 + 15 & -16) + -4 >> 2] = j2;
                              j2 = j2 + 4 + 15 & -16;
                            }
                            m2 = j2;
                            j2 = c[w2 >> 2] | 0;
                          }
                          if ((j2 | 0) > 0) {
                            l2 = 0;
                            do {
                              ra2 = m2 + (l2 << 4) | 0;
                              na2 = (c[E2 >> 2] | 0) + (l2 << 4) | 0;
                              c[ra2 >> 2] = c[na2 >> 2];
                              c[ra2 + 4 >> 2] = c[na2 + 4 >> 2];
                              c[ra2 + 8 >> 2] = c[na2 + 8 >> 2];
                              c[ra2 + 12 >> 2] = c[na2 + 12 >> 2];
                              l2 = l2 + 1 | 0;
                            } while ((l2 | 0) != (j2 | 0));
                          }
                          j2 = c[E2 >> 2] | 0;
                          if (j2 | 0) {
                            if (a[A2 >> 0] | 0) {
                              c[5638] = (c[5638] | 0) + 1;
                              rG(c[j2 + -4 >> 2] | 0);
                            }
                            c[E2 >> 2] = 0;
                          }
                          a[A2 >> 0] = 1;
                          c[E2 >> 2] = m2;
                          c[n2 >> 2] = K2;
                          j2 = c[w2 >> 2] | 0;
                        }
                        ra2 = c[E2 >> 2] | 0;
                        g[ra2 + (j2 << 4) >> 2] = o2;
                        g[ra2 + (j2 << 4) + 4 >> 2] = p2;
                        g[ra2 + (j2 << 4) + 8 >> 2] = q2;
                        g[ra2 + (j2 << 4) + 12 >> 2] = 0;
                        j2 = (c[w2 >> 2] | 0) + 1 | 0;
                        c[w2 >> 2] = j2;
                        ra2 = c[e2 + 12 >> 2] | 0;
                        ma2 = +g[qa2 + 60 + 32 >> 2];
                        oa2 = +g[qa2 + 60 + 36 >> 2];
                        q2 = +g[qa2 + 60 + 40 >> 2];
                        o2 = ma2 * +g[ra2 >> 2] + oa2 * +g[ra2 + 4 >> 2] + q2 * +g[ra2 + 8 >> 2] + +g[ra2 + 48 >> 2];
                        p2 = ma2 * +g[ra2 + 16 >> 2] + oa2 * +g[ra2 + 20 >> 2] + q2 * +g[ra2 + 24 >> 2] + +g[ra2 + 52 >> 2];
                        q2 = ma2 * +g[ra2 + 32 >> 2] + oa2 * +g[ra2 + 36 >> 2] + q2 * +g[ra2 + 40 >> 2] + +g[ra2 + 56 >> 2];
                        if ((j2 | 0) == (c[n2 >> 2] | 0) ? (T2 = j2 | 0 ? j2 << 1 : 1, (j2 | 0) < (T2 | 0)) : 0) {
                          if (!T2)
                            m2 = 0;
                          else {
                            c[5637] = (c[5637] | 0) + 1;
                            j2 = qG((T2 << 4 | 3) + 16 | 0) | 0;
                            if (!j2)
                              j2 = 0;
                            else {
                              c[(j2 + 4 + 15 & -16) + -4 >> 2] = j2;
                              j2 = j2 + 4 + 15 & -16;
                            }
                            m2 = j2;
                            j2 = c[w2 >> 2] | 0;
                          }
                          if ((j2 | 0) > 0) {
                            l2 = 0;
                            do {
                              ra2 = m2 + (l2 << 4) | 0;
                              e2 = (c[E2 >> 2] | 0) + (l2 << 4) | 0;
                              c[ra2 >> 2] = c[e2 >> 2];
                              c[ra2 + 4 >> 2] = c[e2 + 4 >> 2];
                              c[ra2 + 8 >> 2] = c[e2 + 8 >> 2];
                              c[ra2 + 12 >> 2] = c[e2 + 12 >> 2];
                              l2 = l2 + 1 | 0;
                            } while ((l2 | 0) != (j2 | 0));
                          }
                          j2 = c[E2 >> 2] | 0;
                          if (j2 | 0) {
                            if (a[A2 >> 0] | 0) {
                              c[5638] = (c[5638] | 0) + 1;
                              rG(c[j2 + -4 >> 2] | 0);
                            }
                            c[E2 >> 2] = 0;
                          }
                          a[A2 >> 0] = 1;
                          c[E2 >> 2] = m2;
                          c[n2 >> 2] = T2;
                          j2 = c[w2 >> 2] | 0;
                        }
                        ra2 = c[E2 >> 2] | 0;
                        g[ra2 + (j2 << 4) >> 2] = o2;
                        g[ra2 + (j2 << 4) + 4 >> 2] = p2;
                        g[ra2 + (j2 << 4) + 8 >> 2] = q2;
                        g[ra2 + (j2 << 4) + 12 >> 2] = 0;
                        c[w2 >> 2] = (c[w2 >> 2] | 0) + 1;
                        r2 = +g[(c[b2 + 20 >> 2] | 0) + 752 >> 2];
                        On(sa2 + 48 | 0, sa2 + 128 | 0, sa2 + 40 | 0, c[f2 + 20 >> 2] | 0, 0);
                        o2 = +g[sa2 + 48 + 4 >> 2];
                        p2 = +g[sa2 + 48 + 8 >> 2];
                        q2 = +g[sa2 + 48 + 12 >> 2];
                        if (o2 * o2 + p2 * p2 + q2 * q2 > 11920928955078125e-23) {
                          ma2 = 1 / (o2 * o2 + p2 * p2 + q2 * q2);
                          g[sa2 + 384 >> 2] = o2 * ma2;
                          g[sa2 + 384 + 4 >> 2] = p2 * ma2;
                          g[sa2 + 384 + 8 >> 2] = q2 * ma2;
                          g[sa2 + 384 + 12 >> 2] = 0;
                          ma2 = +g[sa2 + 48 + 56 >> 2];
                          oa2 = +Hb[c[(c[pa2 >> 2] | 0) + 48 >> 2] & 15](pa2);
                          oa2 = ma2 - oa2 - +Hb[c[(c[qa2 >> 2] | 0) + 48 >> 2] & 15](qa2);
                          Zn(sa2 + 384 | 0, c[pa2 + 56 >> 2] | 0, c[d2 + 12 >> 2] | 0, sa2 + 624 | 0, oa2 - r2, r2, h2);
                        }
                        do
                          if (a[b2 + 16 >> 0] | 0 ? (U2 = c[h2 + 4 >> 2] | 0, c[U2 + 748 >> 2] | 0) : 0) {
                            l2 = c[U2 + 740 >> 2] | 0;
                            m2 = c[(c[h2 + 8 >> 2] | 0) + 8 >> 2] | 0;
                            j2 = c[(c[h2 + 12 >> 2] | 0) + 8 >> 2] | 0;
                            if ((l2 | 0) == (m2 | 0)) {
                              Xn(U2, l2 + 4 | 0, j2 + 4 | 0);
                              break;
                            } else {
                              Xn(U2, j2 + 4 | 0, m2 + 4 | 0);
                              break;
                            }
                          }
                        while (0);
                        j2 = c[E2 >> 2] | 0;
                        if (j2 | 0) {
                          if (a[A2 >> 0] | 0) {
                            c[5638] = (c[5638] | 0) + 1;
                            rG(c[j2 + -4 >> 2] | 0);
                          }
                          c[E2 >> 2] = 0;
                        }
                      } else {
                        oa2 = +g[(c[b2 + 20 >> 2] | 0) + 752 >> 2];
                        b:
                          do
                            if (!(a[f2 + 24 >> 0] | 0)) {
                              On(sa2 + 48 | 0, sa2 + 128 | 0, sa2, c[f2 + 20 >> 2] | 0, 0);
                              o2 = +g[sa2 + 32 >> 2];
                              if (o2 < 0 & (a[sa2 + 36 >> 0] | 0) != 0) {
                                q2 = +g[sa2 + 8 >> 2];
                                r2 = +g[sa2 + 16 >> 2];
                                j2 = c[sa2 + 20 >> 2] | 0;
                                p2 = +g[sa2 + 12 >> 2];
                                na2 = 111;
                              }
                            } else {
                              ga2 = c[d2 + 12 >> 2] | 0;
                              ha2 = c[e2 + 12 >> 2] | 0;
                              c[5297] = (c[5297] | 0) + 1;
                              S2 = +g[ia2 + 64 >> 2];
                              ba2 = +g[ia2 + 68 >> 2];
                              o2 = +g[ga2 + 4 >> 2];
                              ca2 = +g[ia2 + 72 >> 2];
                              p2 = +g[ga2 + 8 >> 2];
                              q2 = +g[ga2 + 16 >> 2];
                              r2 = +g[ga2 + 20 >> 2];
                              s2 = +g[ga2 + 24 >> 2];
                              t2 = +g[ga2 + 32 >> 2];
                              u2 = +g[ga2 + 36 >> 2];
                              v2 = +g[ga2 + 40 >> 2];
                              da2 = +g[ja2 + 64 >> 2];
                              ea2 = +g[ja2 + 68 >> 2];
                              ma2 = +g[ja2 + 72 >> 2];
                              ka2 = S2 * +g[ga2 >> 2] + ba2 * o2 + ca2 * p2 + +g[ga2 + 48 >> 2] - (da2 * +g[ha2 >> 2] + ea2 * +g[ha2 + 4 >> 2] + ma2 * +g[ha2 + 8 >> 2] + +g[ha2 + 48 >> 2]);
                              la2 = S2 * q2 + ba2 * r2 + ca2 * s2 + +g[ga2 + 52 >> 2] - (da2 * +g[ha2 + 16 >> 2] + ea2 * +g[ha2 + 20 >> 2] + ma2 * +g[ha2 + 24 >> 2] + +g[ha2 + 52 >> 2]);
                              ma2 = S2 * t2 + ba2 * u2 + ca2 * v2 + +g[ga2 + 56 >> 2] - (da2 * +g[ha2 + 32 >> 2] + ea2 * +g[ha2 + 36 >> 2] + ma2 * +g[ha2 + 40 >> 2] + +g[ha2 + 56 >> 2]);
                              m2 = c[ia2 + 28 >> 2] | 0;
                              c:
                                do
                                  if ((m2 | 0) > 0) {
                                    B2 = p2;
                                    C2 = q2;
                                    z2 = r2;
                                    D2 = 0;
                                    F2 = 34028234663852886e22;
                                    l2 = 0;
                                    q2 = 0;
                                    r2 = 0;
                                    p2 = 0;
                                    while (1) {
                                      fa2 = c[ia2 + 36 >> 2] | 0;
                                      ca2 = +g[fa2 + (l2 * 36 | 0) + 20 >> 2];
                                      da2 = +g[fa2 + (l2 * 36 | 0) + 24 >> 2];
                                      ea2 = +g[fa2 + (l2 * 36 | 0) + 28 >> 2];
                                      x2 = ca2 * +g[ga2 >> 2] + da2 * o2 + ea2 * B2;
                                      s2 = ca2 * C2 + da2 * z2 + ea2 * s2;
                                      o2 = ca2 * t2 + da2 * u2 + ea2 * v2;
                                      g[sa2 + 296 >> 2] = x2;
                                      g[sa2 + 296 + 4 >> 2] = s2;
                                      g[sa2 + 296 + 8 >> 2] = o2;
                                      g[sa2 + 296 + 12 >> 2] = 0;
                                      if (ka2 * x2 + la2 * s2 + ma2 * o2 < 0) {
                                        g[sa2 + 296 >> 2] = -x2;
                                        g[sa2 + 296 + 4 >> 2] = -s2;
                                        g[sa2 + 296 + 8 >> 2] = -o2;
                                        y2 = -x2;
                                        s2 = -s2;
                                        o2 = -o2;
                                      } else
                                        y2 = x2;
                                      c[5295] = (c[5295] | 0) + 1;
                                      if (Yn(ga2, ha2, ka2, la2, ma2, y2, s2, o2, ia2, ja2, F2) | 0) {
                                        c[5296] = (c[5296] | 0) + 1;
                                        cl(ia2, ga2, sa2 + 296 | 0, sa2 + 624 | 0, sa2 + 384 | 0, sa2 + 360 | 0, sa2 + 344 | 0);
                                        cl(ja2, ha2, sa2 + 296 | 0, sa2 + 380 | 0, sa2 + 376 | 0, sa2 + 328 | 0, sa2 + 312 | 0);
                                        t2 = +g[sa2 + 384 >> 2];
                                        u2 = +g[sa2 + 380 >> 2];
                                        do
                                          if (t2 < u2) {
                                            j2 = 0;
                                            u2 = D2;
                                          } else {
                                            v2 = +g[sa2 + 376 >> 2];
                                            x2 = +g[sa2 + 624 >> 2];
                                            if (v2 < x2) {
                                              j2 = 0;
                                              u2 = D2;
                                              break;
                                            }
                                            j2 = 1;
                                            u2 = t2 - u2 < v2 - x2 ? t2 - u2 : v2 - x2;
                                          }
                                        while (0);
                                        if (!j2)
                                          break;
                                        if (u2 < F2) {
                                          t2 = u2;
                                          q2 = y2;
                                          r2 = o2;
                                          p2 = s2;
                                        } else
                                          t2 = F2;
                                        y2 = u2;
                                        x2 = t2;
                                      } else {
                                        y2 = D2;
                                        x2 = F2;
                                      }
                                      j2 = l2 + 1 | 0;
                                      if ((j2 | 0) >= (m2 | 0)) {
                                        o2 = x2;
                                        break c;
                                      }
                                      o2 = +g[ga2 + 4 >> 2];
                                      B2 = +g[ga2 + 8 >> 2];
                                      C2 = +g[ga2 + 16 >> 2];
                                      z2 = +g[ga2 + 20 >> 2];
                                      s2 = +g[ga2 + 24 >> 2];
                                      t2 = +g[ga2 + 32 >> 2];
                                      u2 = +g[ga2 + 36 >> 2];
                                      v2 = +g[ga2 + 40 >> 2];
                                      D2 = y2;
                                      F2 = x2;
                                      l2 = j2;
                                    }
                                    break b;
                                  } else {
                                    o2 = 34028234663852886e22;
                                    q2 = 0;
                                    r2 = 0;
                                    p2 = 0;
                                  }
                                while (0);
                              m2 = c[ja2 + 28 >> 2] | 0;
                              d:
                                do
                                  if ((m2 | 0) > 0) {
                                    B2 = 0;
                                    l2 = 0;
                                    while (1) {
                                      fa2 = c[ja2 + 36 >> 2] | 0;
                                      da2 = +g[fa2 + (l2 * 36 | 0) + 20 >> 2];
                                      ea2 = +g[fa2 + (l2 * 36 | 0) + 24 >> 2];
                                      u2 = +g[fa2 + (l2 * 36 | 0) + 28 >> 2];
                                      s2 = da2 * +g[ha2 >> 2] + ea2 * +g[ha2 + 4 >> 2] + u2 * +g[ha2 + 8 >> 2];
                                      t2 = da2 * +g[ha2 + 16 >> 2] + ea2 * +g[ha2 + 20 >> 2] + u2 * +g[ha2 + 24 >> 2];
                                      u2 = da2 * +g[ha2 + 32 >> 2] + ea2 * +g[ha2 + 36 >> 2] + u2 * +g[ha2 + 40 >> 2];
                                      g[sa2 + 296 >> 2] = s2;
                                      g[sa2 + 296 + 4 >> 2] = t2;
                                      g[sa2 + 296 + 8 >> 2] = u2;
                                      g[sa2 + 296 + 12 >> 2] = 0;
                                      if (ka2 * s2 + la2 * t2 + ma2 * u2 < 0) {
                                        g[sa2 + 296 >> 2] = -s2;
                                        g[sa2 + 296 + 4 >> 2] = -t2;
                                        g[sa2 + 296 + 8 >> 2] = -u2;
                                        s2 = -s2;
                                        t2 = -t2;
                                        u2 = -u2;
                                      }
                                      c[5295] = (c[5295] | 0) + 1;
                                      if (Yn(ga2, ha2, ka2, la2, ma2, s2, t2, u2, ia2, ja2, o2) | 0) {
                                        c[5296] = (c[5296] | 0) + 1;
                                        cl(ia2, ga2, sa2 + 296 | 0, sa2 + 624 | 0, sa2 + 384 | 0, sa2 + 360 | 0, sa2 + 344 | 0);
                                        cl(ja2, ha2, sa2 + 296 | 0, sa2 + 380 | 0, sa2 + 376 | 0, sa2 + 328 | 0, sa2 + 312 | 0);
                                        v2 = +g[sa2 + 384 >> 2];
                                        x2 = +g[sa2 + 380 >> 2];
                                        do
                                          if (v2 < x2) {
                                            j2 = 0;
                                            v2 = B2;
                                          } else {
                                            y2 = +g[sa2 + 376 >> 2];
                                            z2 = +g[sa2 + 624 >> 2];
                                            if (y2 < z2) {
                                              j2 = 0;
                                              v2 = B2;
                                              break;
                                            }
                                            j2 = 1;
                                            v2 = v2 - x2 < y2 - z2 ? v2 - x2 : y2 - z2;
                                          }
                                        while (0);
                                        if (!j2)
                                          break;
                                        if (v2 < o2) {
                                          o2 = v2;
                                          q2 = s2;
                                          r2 = u2;
                                          p2 = t2;
                                        }
                                      } else
                                        v2 = B2;
                                      l2 = l2 + 1 | 0;
                                      if ((l2 | 0) >= (m2 | 0))
                                        break d;
                                      else
                                        B2 = v2;
                                    }
                                    break b;
                                  }
                                while (0);
                              j2 = c[ia2 + 48 >> 2] | 0;
                              e:
                                do
                                  if ((j2 | 0) > 0) {
                                    V2 = c[ja2 + 48 >> 2] | 0;
                                    s2 = 0;
                                    fa2 = 0;
                                    G2 = -1;
                                    E2 = -1;
                                    H2 = 0;
                                    I2 = 0;
                                    K2 = 0;
                                    T2 = 0;
                                    U2 = 0;
                                    f2 = 0;
                                    n2 = 0;
                                    w2 = 0;
                                    A2 = 0;
                                    W2 = 0;
                                    l2 = 0;
                                    m2 = 0;
                                    M2 = 0;
                                    P2 = 0;
                                    S2 = 0;
                                    v2 = 0;
                                    x2 = 0;
                                    J2 = 0;
                                    f:
                                      while (1) {
                                        aa2 = c[ia2 + 56 >> 2] | 0;
                                        L2 = +g[aa2 + (fa2 << 4) >> 2];
                                        ba2 = +g[aa2 + (fa2 << 4) + 4 >> 2];
                                        ea2 = +g[aa2 + (fa2 << 4) + 8 >> 2];
                                        ca2 = L2 * +g[ga2 >> 2] + ba2 * +g[ga2 + 4 >> 2] + ea2 * +g[ga2 + 8 >> 2];
                                        da2 = L2 * +g[ga2 + 16 >> 2] + ba2 * +g[ga2 + 20 >> 2] + ea2 * +g[ga2 + 24 >> 2];
                                        ea2 = L2 * +g[ga2 + 32 >> 2] + ba2 * +g[ga2 + 36 >> 2] + ea2 * +g[ga2 + 40 >> 2];
                                        if ((V2 | 0) > 0) {
                                          D2 = s2;
                                          V2 = 0;
                                          ba2 = q2;
                                          L2 = r2;
                                          F2 = p2;
                                          while (1) {
                                            aa2 = c[ja2 + 56 >> 2] | 0;
                                            u2 = +g[aa2 + (V2 << 4) >> 2];
                                            y2 = +g[aa2 + (V2 << 4) + 4 >> 2];
                                            C2 = +g[aa2 + (V2 << 4) + 8 >> 2];
                                            z2 = u2 * +g[ha2 >> 2] + y2 * +g[ha2 + 4 >> 2] + C2 * +g[ha2 + 8 >> 2];
                                            B2 = u2 * +g[ha2 + 16 >> 2] + y2 * +g[ha2 + 20 >> 2] + C2 * +g[ha2 + 24 >> 2];
                                            C2 = u2 * +g[ha2 + 32 >> 2] + y2 * +g[ha2 + 36 >> 2] + C2 * +g[ha2 + 40 >> 2];
                                            g[sa2 + 296 >> 2] = da2 * C2 - ea2 * B2;
                                            g[sa2 + 296 + 4 >> 2] = ea2 * z2 - ca2 * C2;
                                            g[sa2 + 296 + 8 >> 2] = ca2 * B2 - da2 * z2;
                                            g[sa2 + 296 + 12 >> 2] = 0;
                                            do
                                              if (!(+N(+(da2 * C2 - ea2 * B2)) > 1e-6)) {
                                                if (+N(+(ea2 * z2 - ca2 * C2)) > 1e-6) {
                                                  na2 = 75;
                                                  break;
                                                }
                                                if (!(+N(+(ca2 * B2 - da2 * z2)) > 1e-6)) {
                                                  t2 = D2;
                                                  q2 = ba2;
                                                  r2 = L2;
                                                  p2 = F2;
                                                  X2 = H2;
                                                  Y2 = I2;
                                                  Z2 = K2;
                                                  _2 = T2;
                                                  $2 = U2;
                                                  aa2 = f2;
                                                } else
                                                  na2 = 75;
                                              } else
                                                na2 = 75;
                                            while (0);
                                            do
                                              if ((na2 | 0) == 75) {
                                                na2 = 0;
                                                r2 = 1 / +O(+((da2 * C2 - ea2 * B2) * (da2 * C2 - ea2 * B2) + (ea2 * z2 - ca2 * C2) * (ea2 * z2 - ca2 * C2) + (ca2 * B2 - da2 * z2) * (ca2 * B2 - da2 * z2)));
                                                q2 = (da2 * C2 - ea2 * B2) * r2;
                                                g[sa2 + 296 >> 2] = q2;
                                                p2 = (ea2 * z2 - ca2 * C2) * r2;
                                                g[sa2 + 296 + 4 >> 2] = p2;
                                                r2 = (ca2 * B2 - da2 * z2) * r2;
                                                g[sa2 + 296 + 8 >> 2] = r2;
                                                if (q2 * ka2 + p2 * la2 + ma2 * r2 < 0) {
                                                  g[sa2 + 296 >> 2] = -q2;
                                                  g[sa2 + 296 + 4 >> 2] = -p2;
                                                  g[sa2 + 296 + 8 >> 2] = -r2;
                                                  q2 = -q2;
                                                  p2 = -p2;
                                                  r2 = -r2;
                                                }
                                                c[5295] = (c[5295] | 0) + 1;
                                                if (!(Yn(ga2, ha2, ka2, la2, ma2, q2, p2, r2, ia2, ja2, o2) | 0)) {
                                                  t2 = D2;
                                                  q2 = ba2;
                                                  r2 = L2;
                                                  p2 = F2;
                                                  X2 = H2;
                                                  Y2 = I2;
                                                  Z2 = K2;
                                                  _2 = T2;
                                                  $2 = U2;
                                                  aa2 = f2;
                                                  break;
                                                }
                                                c[5296] = (c[5296] | 0) + 1;
                                                cl(ia2, ga2, sa2 + 296 | 0, sa2 + 624 | 0, sa2 + 384 | 0, sa2 + 360 | 0, sa2 + 344 | 0);
                                                cl(ja2, ha2, sa2 + 296 | 0, sa2 + 380 | 0, sa2 + 376 | 0, sa2 + 328 | 0, sa2 + 312 | 0);
                                                s2 = +g[sa2 + 384 >> 2];
                                                t2 = +g[sa2 + 380 >> 2];
                                                do
                                                  if (!(s2 < t2)) {
                                                    u2 = +g[sa2 + 376 >> 2];
                                                    y2 = +g[sa2 + 624 >> 2];
                                                    if (u2 < y2) {
                                                      j2 = 0;
                                                      s2 = D2;
                                                      break;
                                                    }
                                                    if (s2 - t2 < u2 - y2) {
                                                      j2 = 1;
                                                      s2 = s2 - t2;
                                                      H2 = c[sa2 + 344 >> 2] | 0;
                                                      I2 = c[sa2 + 344 + 4 >> 2] | 0;
                                                      K2 = c[sa2 + 344 + 8 >> 2] | 0;
                                                      T2 = c[sa2 + 328 >> 2] | 0;
                                                      U2 = c[sa2 + 328 + 4 >> 2] | 0;
                                                      f2 = c[sa2 + 328 + 8 >> 2] | 0;
                                                      break;
                                                    } else {
                                                      j2 = 1;
                                                      s2 = u2 - y2;
                                                      H2 = c[sa2 + 360 >> 2] | 0;
                                                      I2 = c[sa2 + 360 + 4 >> 2] | 0;
                                                      K2 = c[sa2 + 360 + 8 >> 2] | 0;
                                                      T2 = c[sa2 + 312 >> 2] | 0;
                                                      U2 = c[sa2 + 312 + 4 >> 2] | 0;
                                                      f2 = c[sa2 + 312 + 8 >> 2] | 0;
                                                      break;
                                                    }
                                                  } else {
                                                    j2 = 0;
                                                    s2 = D2;
                                                  }
                                                while (0);
                                                if (!j2)
                                                  break f;
                                                if (!(s2 < o2)) {
                                                  t2 = s2;
                                                  q2 = ba2;
                                                  r2 = L2;
                                                  p2 = F2;
                                                  X2 = H2;
                                                  Y2 = I2;
                                                  Z2 = K2;
                                                  _2 = T2;
                                                  $2 = U2;
                                                  aa2 = f2;
                                                  break;
                                                }
                                                t2 = s2;
                                                o2 = s2;
                                                G2 = fa2;
                                                E2 = V2;
                                                X2 = H2;
                                                Y2 = I2;
                                                Z2 = K2;
                                                _2 = T2;
                                                $2 = U2;
                                                aa2 = f2;
                                                n2 = H2;
                                                w2 = I2;
                                                A2 = K2;
                                                W2 = T2;
                                                l2 = U2;
                                                m2 = f2;
                                                M2 = ca2;
                                                P2 = da2;
                                                S2 = ea2;
                                                v2 = z2;
                                                x2 = B2;
                                                J2 = C2;
                                              }
                                            while (0);
                                            V2 = V2 + 1 | 0;
                                            j2 = c[ja2 + 48 >> 2] | 0;
                                            if ((V2 | 0) >= (j2 | 0))
                                              break;
                                            else {
                                              D2 = t2;
                                              ba2 = q2;
                                              L2 = r2;
                                              F2 = p2;
                                              H2 = X2;
                                              I2 = Y2;
                                              K2 = Z2;
                                              T2 = _2;
                                              U2 = $2;
                                              f2 = aa2;
                                            }
                                          }
                                          V2 = j2;
                                          j2 = c[ia2 + 48 >> 2] | 0;
                                          s2 = t2;
                                          H2 = X2;
                                          I2 = Y2;
                                          K2 = Z2;
                                          T2 = _2;
                                          U2 = $2;
                                          f2 = aa2;
                                        }
                                        fa2 = fa2 + 1 | 0;
                                        if ((fa2 | 0) >= (j2 | 0)) {
                                          j2 = W2;
                                          break e;
                                        }
                                      }
                                    break b;
                                  } else {
                                    G2 = -1;
                                    E2 = -1;
                                    n2 = 0;
                                    w2 = 0;
                                    A2 = 0;
                                    j2 = 0;
                                    l2 = 0;
                                    m2 = 0;
                                    M2 = 0;
                                    P2 = 0;
                                    S2 = 0;
                                    v2 = 0;
                                    x2 = 0;
                                    J2 = 0;
                                  }
                                while (0);
                              if ((E2 | G2 | 0) > -1) {
                                L2 = (c[k >> 2] = j2, +g[k >> 2]);
                                C2 = L2 - (c[k >> 2] = n2, +g[k >> 2]);
                                F2 = (c[k >> 2] = l2, +g[k >> 2]);
                                B2 = F2 - (c[k >> 2] = w2, +g[k >> 2]);
                                D2 = (c[k >> 2] = m2, +g[k >> 2]);
                                z2 = D2 - (c[k >> 2] = A2, +g[k >> 2]);
                                s2 = v2 * M2 + x2 * P2 + J2 * S2;
                                t2 = C2 * M2 + B2 * P2 + z2 * S2;
                                o2 = C2 * v2 + B2 * x2 + z2 * J2;
                                do
                                  if (1 - s2 * s2 == 0)
                                    u2 = 0;
                                  else {
                                    if ((t2 - o2 * s2) / (1 - s2 * s2) < -10000000150474662e14) {
                                      u2 = -10000000150474662e14;
                                      break;
                                    }
                                    if (!((t2 - o2 * s2) / (1 - s2 * s2) > 10000000150474662e14)) {
                                      u2 = (t2 - o2 * s2) / (1 - s2 * s2);
                                      break;
                                    }
                                    u2 = 10000000150474662e14;
                                  }
                                while (0);
                                o2 = s2 * u2 - o2;
                                do
                                  if (o2 < -10000000150474662e14) {
                                    if (t2 - s2 * 10000000150474662e14 < -10000000150474662e14) {
                                      s2 = -10000000150474662e14;
                                      o2 = -10000000150474662e14;
                                      break;
                                    }
                                    if (!(t2 - s2 * 10000000150474662e14 > 10000000150474662e14)) {
                                      s2 = t2 - s2 * 10000000150474662e14;
                                      o2 = -10000000150474662e14;
                                      break;
                                    }
                                    s2 = 10000000150474662e14;
                                    o2 = -10000000150474662e14;
                                  } else {
                                    if (!(o2 > 10000000150474662e14)) {
                                      s2 = u2;
                                      break;
                                    }
                                    if (t2 + s2 * 10000000150474662e14 < -10000000150474662e14) {
                                      s2 = -10000000150474662e14;
                                      o2 = 10000000150474662e14;
                                      break;
                                    }
                                    if (!(t2 + s2 * 10000000150474662e14 > 10000000150474662e14)) {
                                      s2 = t2 + s2 * 10000000150474662e14;
                                      o2 = 10000000150474662e14;
                                      break;
                                    }
                                    s2 = 10000000150474662e14;
                                    o2 = 10000000150474662e14;
                                  }
                                while (0);
                                y2 = v2 * o2;
                                x2 = x2 * o2;
                                v2 = J2 * o2;
                                u2 = y2 + (C2 - M2 * s2);
                                t2 = x2 + (B2 - P2 * s2);
                                o2 = v2 + (z2 - S2 * s2);
                                g[sa2 + 624 >> 2] = u2;
                                g[sa2 + 624 + 4 >> 2] = t2;
                                g[sa2 + 624 + 8 >> 2] = o2;
                                g[sa2 + 624 + 12 >> 2] = 0;
                                if (u2 * u2 + t2 * t2 + o2 * o2 > 11920928955078125e-23) {
                                  s2 = +O(+(u2 * u2 + t2 * t2 + o2 * o2));
                                  g[sa2 + 624 >> 2] = u2 * (1 / s2);
                                  g[sa2 + 624 + 4 >> 2] = 1 / s2 * t2;
                                  g[sa2 + 624 + 8 >> 2] = 1 / s2 * o2;
                                  if (u2 * (1 / s2) * ka2 + 1 / s2 * t2 * la2 + 1 / s2 * o2 * ma2 < 0) {
                                    g[sa2 + 624 >> 2] = -(u2 * (1 / s2));
                                    g[sa2 + 624 + 4 >> 2] = -(1 / s2 * t2);
                                    g[sa2 + 624 + 8 >> 2] = -(1 / s2 * o2);
                                  }
                                  g[sa2 + 384 >> 2] = L2 + y2;
                                  g[sa2 + 384 + 4 >> 2] = F2 + x2;
                                  g[sa2 + 384 + 8 >> 2] = D2 + v2;
                                  g[sa2 + 384 + 12 >> 2] = 0;
                                  Yb[c[(c[h2 >> 2] | 0) + 16 >> 2] & 15](h2, sa2 + 624 | 0, sa2 + 384 | 0, -s2);
                                }
                              }
                              if (ka2 * q2 + la2 * p2 + ma2 * r2 < 0) {
                                o2 = -10000000150474662e14;
                                q2 = -q2;
                                r2 = -r2;
                                j2 = 0;
                                p2 = -p2;
                                na2 = 111;
                              } else {
                                o2 = -10000000150474662e14;
                                j2 = 0;
                                na2 = 111;
                              }
                            }
                          while (0);
                        if ((na2 | 0) == 111) {
                          V2 = c[pa2 + 56 >> 2] | 0;
                          f2 = c[qa2 + 56 >> 2] | 0;
                          U2 = c[d2 + 12 >> 2] | 0;
                          T2 = c[e2 + 12 >> 2] | 0;
                          L2 = o2 - oa2;
                          D2 = 1 / +O(+(q2 * q2 + p2 * p2 + r2 * r2));
                          J2 = q2 * D2;
                          F2 = p2 * D2;
                          D2 = r2 * D2;
                          g[sa2 + 624 >> 2] = J2;
                          g[sa2 + 624 + 4 >> 2] = F2;
                          g[sa2 + 624 + 8 >> 2] = D2;
                          c[sa2 + 624 + 12 >> 2] = j2;
                          l2 = c[f2 + 28 >> 2] | 0;
                          w2 = c[f2 + 36 >> 2] | 0;
                          if ((l2 | 0) > 0) {
                            o2 = +g[T2 >> 2];
                            p2 = +g[T2 + 4 >> 2];
                            q2 = +g[T2 + 8 >> 2];
                            r2 = +g[T2 + 16 >> 2];
                            s2 = +g[T2 + 20 >> 2];
                            t2 = +g[T2 + 24 >> 2];
                            u2 = +g[T2 + 32 >> 2];
                            v2 = +g[T2 + 36 >> 2];
                            x2 = +g[T2 + 40 >> 2];
                            j2 = -1;
                            C2 = -34028234663852886e22;
                            n2 = 0;
                            while (1) {
                              y2 = +g[w2 + (n2 * 36 | 0) + 20 >> 2];
                              z2 = +g[w2 + (n2 * 36 | 0) + 24 >> 2];
                              B2 = +g[w2 + (n2 * 36 | 0) + 28 >> 2];
                              m2 = (y2 * o2 + z2 * p2 + B2 * q2) * J2 + (y2 * r2 + z2 * s2 + B2 * t2) * F2 + (y2 * u2 + z2 * v2 + B2 * x2) * D2 > C2;
                              j2 = m2 ? n2 : j2;
                              n2 = n2 + 1 | 0;
                              if ((n2 | 0) == (l2 | 0)) {
                                I2 = j2;
                                break;
                              } else
                                C2 = m2 ? (y2 * o2 + z2 * p2 + B2 * q2) * J2 + (y2 * r2 + z2 * s2 + B2 * t2) * F2 + (y2 * u2 + z2 * v2 + B2 * x2) * D2 : C2;
                            }
                          } else
                            I2 = -1;
                          a[sa2 + 384 + 16 >> 0] = 1;
                          K2 = sa2 + 384 + 12 | 0;
                          c[K2 >> 2] = 0;
                          G2 = sa2 + 384 + 4 | 0;
                          c[G2 >> 2] = 0;
                          c[sa2 + 384 + 8 >> 2] = 0;
                          H2 = c[w2 + (I2 * 36 | 0) + 4 >> 2] | 0;
                          g:
                            do
                              if ((H2 | 0) > 0) {
                                E2 = w2 + (I2 * 36 | 0) + 12 | 0;
                                j2 = 0;
                                m2 = 0;
                                l2 = 0;
                                while (1) {
                                  d2 = c[(c[E2 >> 2] | 0) + (l2 << 2) >> 2] | 0;
                                  e2 = c[f2 + 16 >> 2] | 0;
                                  la2 = +g[e2 + (d2 << 4) >> 2];
                                  ma2 = +g[e2 + (d2 << 4) + 4 >> 2];
                                  q2 = +g[e2 + (d2 << 4) + 8 >> 2];
                                  o2 = la2 * +g[T2 >> 2] + ma2 * +g[T2 + 4 >> 2] + q2 * +g[T2 + 8 >> 2] + +g[T2 + 48 >> 2];
                                  p2 = la2 * +g[T2 + 16 >> 2] + ma2 * +g[T2 + 20 >> 2] + q2 * +g[T2 + 24 >> 2] + +g[T2 + 52 >> 2];
                                  q2 = la2 * +g[T2 + 32 >> 2] + ma2 * +g[T2 + 36 >> 2] + q2 * +g[T2 + 40 >> 2] + +g[T2 + 56 >> 2];
                                  if ((j2 | 0) == (m2 | 0)) {
                                    A2 = m2 | 0 ? m2 << 1 : 1;
                                    if ((m2 | 0) < (A2 | 0)) {
                                      if (!A2) {
                                        w2 = 0;
                                        j2 = m2;
                                      } else {
                                        c[5637] = (c[5637] | 0) + 1;
                                        j2 = qG((A2 << 4 | 3) + 16 | 0) | 0;
                                        if (!j2)
                                          j2 = 0;
                                        else {
                                          c[(j2 + 4 + 15 & -16) + -4 >> 2] = j2;
                                          j2 = j2 + 4 + 15 & -16;
                                        }
                                        w2 = j2;
                                        j2 = c[G2 >> 2] | 0;
                                      }
                                      n2 = c[K2 >> 2] | 0;
                                      if ((j2 | 0) <= 0) {
                                        if (n2)
                                          na2 = 126;
                                      } else {
                                        m2 = 0;
                                        do {
                                          d2 = w2 + (m2 << 4) | 0;
                                          e2 = n2 + (m2 << 4) | 0;
                                          c[d2 >> 2] = c[e2 >> 2];
                                          c[d2 + 4 >> 2] = c[e2 + 4 >> 2];
                                          c[d2 + 8 >> 2] = c[e2 + 8 >> 2];
                                          c[d2 + 12 >> 2] = c[e2 + 12 >> 2];
                                          m2 = m2 + 1 | 0;
                                        } while ((m2 | 0) != (j2 | 0));
                                        na2 = 126;
                                      }
                                      if ((na2 | 0) == 126) {
                                        na2 = 0;
                                        if (a[sa2 + 384 + 16 >> 0] | 0) {
                                          c[5638] = (c[5638] | 0) + 1;
                                          rG(c[n2 + -4 >> 2] | 0);
                                          j2 = c[G2 >> 2] | 0;
                                        }
                                        c[K2 >> 2] = 0;
                                      }
                                      a[sa2 + 384 + 16 >> 0] = 1;
                                      c[K2 >> 2] = w2;
                                      c[sa2 + 384 + 8 >> 2] = A2;
                                    } else
                                      j2 = m2;
                                  }
                                  d2 = c[K2 >> 2] | 0;
                                  g[d2 + (j2 << 4) >> 2] = o2;
                                  g[d2 + (j2 << 4) + 4 >> 2] = p2;
                                  g[d2 + (j2 << 4) + 8 >> 2] = q2;
                                  g[d2 + (j2 << 4) + 12 >> 2] = 0;
                                  j2 = (c[G2 >> 2] | 0) + 1 | 0;
                                  c[G2 >> 2] = j2;
                                  l2 = l2 + 1 | 0;
                                  if ((l2 | 0) >= (H2 | 0))
                                    break g;
                                  m2 = c[sa2 + 384 + 8 >> 2] | 0;
                                }
                              }
                            while (0);
                          if ((I2 | 0) > -1)
                            Zn(sa2 + 624 | 0, V2, U2, sa2 + 384 | 0, L2, oa2, h2);
                          j2 = c[K2 >> 2] | 0;
                          if (j2 | 0) {
                            if (a[sa2 + 384 + 16 >> 0] | 0) {
                              c[5638] = (c[5638] | 0) + 1;
                              rG(c[j2 + -4 >> 2] | 0);
                            }
                            c[K2 >> 2] = 0;
                          }
                        }
                        if (a[b2 + 16 >> 0] | 0 ? (ra2 = c[h2 + 4 >> 2] | 0, c[ra2 + 748 >> 2] | 0) : 0) {
                          m2 = c[ra2 + 740 >> 2] | 0;
                          l2 = c[(c[h2 + 8 >> 2] | 0) + 8 >> 2] | 0;
                          j2 = c[(c[h2 + 12 >> 2] | 0) + 8 >> 2] | 0;
                          if ((m2 | 0) == (l2 | 0)) {
                            Xn(ra2, m2 + 4 | 0, j2 + 4 | 0);
                            break;
                          } else {
                            Xn(ra2, j2 + 4 | 0, l2 + 4 | 0);
                            break;
                          }
                        }
                      }
                    while (0);
                    i = sa2;
                    return;
                  }
                while (0);
            }
            On(sa2 + 48 | 0, sa2 + 128 | 0, h2, c[f2 + 20 >> 2] | 0, 0);
            if ((c[b2 + 28 >> 2] | 0 ? (c[(c[h2 + 4 >> 2] | 0) + 748 >> 2] | 0) < (c[b2 + 32 >> 2] | 0) : 0) ? (L2 = +g[sa2 + 48 + 4 >> 2], M2 = +g[sa2 + 48 + 8 >> 2], P2 = +g[sa2 + 48 + 12 >> 2], L2 * L2 + M2 * M2 + P2 * P2 > 11920928955078125e-23) : 0) {
              C2 = 1 / (L2 * L2 + M2 * M2 + P2 * P2);
              if (+N(+(P2 * C2)) > 0.7071067690849304) {
                J2 = 1 / +O(+(P2 * C2 * (P2 * C2) + M2 * C2 * (M2 * C2)));
                D2 = 0;
                F2 = M2 * C2 * J2;
                J2 = -(P2 * C2 * J2);
              } else {
                J2 = 1 / +O(+(L2 * C2 * (L2 * C2) + M2 * C2 * (M2 * C2)));
                D2 = -(M2 * C2 * J2);
                F2 = 0;
                J2 = L2 * C2 * J2;
              }
              B2 = +Hb[c[(c[pa2 >> 2] | 0) + 16 >> 2] & 15](pa2);
              y2 = +Hb[c[(c[qa2 >> 2] | 0) + 16 >> 2] & 15](qa2);
              o2 = 0.019999999552965164 / (B2 < y2 ? B2 : y2);
              if (B2 < y2) {
                c[sa2 + 624 >> 2] = c[sa2 + 128 >> 2];
                c[sa2 + 624 + 4 >> 2] = c[sa2 + 128 + 4 >> 2];
                c[sa2 + 624 + 8 >> 2] = c[sa2 + 128 + 8 >> 2];
                c[sa2 + 624 + 12 >> 2] = c[sa2 + 128 + 12 >> 2];
                c[sa2 + 624 + 16 >> 2] = c[m2 >> 2];
                c[sa2 + 624 + 16 + 4 >> 2] = c[m2 + 4 >> 2];
                c[sa2 + 624 + 16 + 8 >> 2] = c[m2 + 8 >> 2];
                c[sa2 + 624 + 16 + 12 >> 2] = c[m2 + 12 >> 2];
                c[sa2 + 624 + 32 >> 2] = c[w2 >> 2];
                c[sa2 + 624 + 32 + 4 >> 2] = c[w2 + 4 >> 2];
                c[sa2 + 624 + 32 + 8 >> 2] = c[w2 + 8 >> 2];
                c[sa2 + 624 + 32 + 12 >> 2] = c[w2 + 12 >> 2];
                c[sa2 + 624 + 48 >> 2] = c[A2 >> 2];
                c[sa2 + 624 + 48 + 4 >> 2] = c[A2 + 4 >> 2];
                c[sa2 + 624 + 48 + 8 >> 2] = c[A2 + 8 >> 2];
                c[sa2 + 624 + 48 + 12 >> 2] = c[A2 + 12 >> 2];
              } else {
                c[sa2 + 624 >> 2] = c[E2 >> 2];
                c[sa2 + 624 + 4 >> 2] = c[E2 + 4 >> 2];
                c[sa2 + 624 + 8 >> 2] = c[E2 + 8 >> 2];
                c[sa2 + 624 + 12 >> 2] = c[E2 + 12 >> 2];
                c[sa2 + 624 + 16 >> 2] = c[G2 >> 2];
                c[sa2 + 624 + 16 + 4 >> 2] = c[G2 + 4 >> 2];
                c[sa2 + 624 + 16 + 8 >> 2] = c[G2 + 8 >> 2];
                c[sa2 + 624 + 16 + 12 >> 2] = c[G2 + 12 >> 2];
                c[sa2 + 624 + 32 >> 2] = c[H2 >> 2];
                c[sa2 + 624 + 32 + 4 >> 2] = c[H2 + 4 >> 2];
                c[sa2 + 624 + 32 + 8 >> 2] = c[H2 + 8 >> 2];
                c[sa2 + 624 + 32 + 12 >> 2] = c[H2 + 12 >> 2];
                c[sa2 + 624 + 48 >> 2] = c[I2 >> 2];
                c[sa2 + 624 + 48 + 4 >> 2] = c[I2 + 4 >> 2];
                c[sa2 + 624 + 48 + 8 >> 2] = c[I2 + 8 >> 2];
                c[sa2 + 624 + 48 + 12 >> 2] = c[I2 + 12 >> 2];
              }
              j2 = c[b2 + 28 >> 2] | 0;
              if ((j2 | 0) > 0) {
                z2 = D2 * D2 + J2 * J2 + F2 * F2;
                x2 = (o2 > 0.39269909262657166 ? 0.39269909262657166 : o2) * 0.5;
                l2 = 0;
                do {
                  if (z2 > 11920928955078125e-23) {
                    u2 = +R(+x2) / +O(+z2);
                    s2 = D2 * u2;
                    t2 = J2 * u2;
                    u2 = F2 * u2;
                    v2 = +Q(+x2);
                    r2 = +(l2 | 0) * (6.2831854820251465 / +(j2 | 0)) * 0.5;
                    q2 = +R(+r2) / +O(+(P2 * C2 * (P2 * C2) + (L2 * C2 * (L2 * C2) + M2 * C2 * (M2 * C2))));
                    o2 = L2 * C2 * q2;
                    p2 = M2 * C2 * q2;
                    q2 = P2 * C2 * q2;
                    r2 = +Q(+r2);
                    if (B2 < y2) {
                      ea2 = q2 * (s2 * -q2 + (t2 * r2 + v2 * -p2) - u2 * -o2) + (o2 * (v2 * r2 - s2 * -o2 - t2 * -p2 - u2 * -q2) + r2 * (u2 * -p2 + (s2 * r2 + v2 * -o2) - t2 * -q2)) - p2 * (t2 * -o2 + (u2 * r2 + v2 * -q2) - s2 * -p2);
                      la2 = o2 * (t2 * -o2 + (u2 * r2 + v2 * -q2) - s2 * -p2) + (r2 * (s2 * -q2 + (t2 * r2 + v2 * -p2) - u2 * -o2) + p2 * (v2 * r2 - s2 * -o2 - t2 * -p2 - u2 * -q2)) - q2 * (u2 * -p2 + (s2 * r2 + v2 * -o2) - t2 * -q2);
                      ta2 = p2 * (u2 * -p2 + (s2 * r2 + v2 * -o2) - t2 * -q2) + (q2 * (v2 * r2 - s2 * -o2 - t2 * -p2 - u2 * -q2) + r2 * (t2 * -o2 + (u2 * r2 + v2 * -q2) - s2 * -p2)) - o2 * (s2 * -q2 + (t2 * r2 + v2 * -p2) - u2 * -o2);
                      ca2 = r2 * (v2 * r2 - s2 * -o2 - t2 * -p2 - u2 * -q2) - o2 * (u2 * -p2 + (s2 * r2 + v2 * -o2) - t2 * -q2) - p2 * (s2 * -q2 + (t2 * r2 + v2 * -p2) - u2 * -o2) - q2 * (t2 * -o2 + (u2 * r2 + v2 * -q2) - s2 * -p2);
                      ka2 = ea2 * (2 / (ca2 * ca2 + (ta2 * ta2 + (ea2 * ea2 + la2 * la2))));
                      ma2 = la2 * (2 / (ca2 * ca2 + (ta2 * ta2 + (ea2 * ea2 + la2 * la2))));
                      ba2 = ta2 * (2 / (ca2 * ca2 + (ta2 * ta2 + (ea2 * ea2 + la2 * la2))));
                      ra2 = c[d2 + 12 >> 2] | 0;
                      q2 = +g[ra2 >> 2];
                      r2 = +g[ra2 + 16 >> 2];
                      s2 = +g[ra2 + 32 >> 2];
                      t2 = +g[ra2 + 4 >> 2];
                      u2 = +g[ra2 + 20 >> 2];
                      v2 = +g[ra2 + 36 >> 2];
                      S2 = +g[ra2 + 8 >> 2];
                      da2 = +g[ra2 + 24 >> 2];
                      oa2 = +g[ra2 + 40 >> 2];
                      g[sa2 + 128 >> 2] = (1 - (la2 * ma2 + ta2 * ba2)) * q2 + (ea2 * ma2 - ca2 * ba2) * r2 + (ea2 * ba2 + ca2 * ma2) * s2;
                      g[sa2 + 128 + 4 >> 2] = (1 - (la2 * ma2 + ta2 * ba2)) * t2 + (ea2 * ma2 - ca2 * ba2) * u2 + (ea2 * ba2 + ca2 * ma2) * v2;
                      g[sa2 + 128 + 8 >> 2] = (1 - (la2 * ma2 + ta2 * ba2)) * S2 + (ea2 * ma2 - ca2 * ba2) * da2 + (ea2 * ba2 + ca2 * ma2) * oa2;
                      g[sa2 + 128 + 12 >> 2] = 0;
                      g[sa2 + 128 + 16 >> 2] = (ea2 * ma2 + ca2 * ba2) * q2 + (1 - (ea2 * ka2 + ta2 * ba2)) * r2 + (la2 * ba2 - ca2 * ka2) * s2;
                      g[sa2 + 128 + 20 >> 2] = (ea2 * ma2 + ca2 * ba2) * t2 + (1 - (ea2 * ka2 + ta2 * ba2)) * u2 + (la2 * ba2 - ca2 * ka2) * v2;
                      g[sa2 + 128 + 24 >> 2] = (ea2 * ma2 + ca2 * ba2) * S2 + (1 - (ea2 * ka2 + ta2 * ba2)) * da2 + (la2 * ba2 - ca2 * ka2) * oa2;
                      g[sa2 + 128 + 28 >> 2] = 0;
                      g[sa2 + 128 + 32 >> 2] = (ea2 * ba2 - ca2 * ma2) * q2 + (la2 * ba2 + ca2 * ka2) * r2 + (1 - (ea2 * ka2 + la2 * ma2)) * s2;
                      g[sa2 + 128 + 36 >> 2] = (ea2 * ba2 - ca2 * ma2) * t2 + (la2 * ba2 + ca2 * ka2) * u2 + (1 - (ea2 * ka2 + la2 * ma2)) * v2;
                      g[sa2 + 128 + 40 >> 2] = (ea2 * ba2 - ca2 * ma2) * S2 + (la2 * ba2 + ca2 * ka2) * da2 + (1 - (ea2 * ka2 + la2 * ma2)) * oa2;
                      g[sa2 + 128 + 44 >> 2] = 0;
                      ra2 = c[e2 + 12 >> 2] | 0;
                      c[E2 >> 2] = c[ra2 >> 2];
                      c[E2 + 4 >> 2] = c[ra2 + 4 >> 2];
                      c[E2 + 8 >> 2] = c[ra2 + 8 >> 2];
                      c[E2 + 12 >> 2] = c[ra2 + 12 >> 2];
                      c[G2 >> 2] = c[ra2 + 16 >> 2];
                      c[G2 + 4 >> 2] = c[ra2 + 16 + 4 >> 2];
                      c[G2 + 8 >> 2] = c[ra2 + 16 + 8 >> 2];
                      c[G2 + 12 >> 2] = c[ra2 + 16 + 12 >> 2];
                      c[H2 >> 2] = c[ra2 + 32 >> 2];
                      c[H2 + 4 >> 2] = c[ra2 + 32 + 4 >> 2];
                      c[H2 + 8 >> 2] = c[ra2 + 32 + 8 >> 2];
                      c[H2 + 12 >> 2] = c[ra2 + 32 + 12 >> 2];
                      c[I2 >> 2] = c[ra2 + 48 >> 2];
                      c[I2 + 4 >> 2] = c[ra2 + 48 + 4 >> 2];
                      c[I2 + 8 >> 2] = c[ra2 + 48 + 8 >> 2];
                      c[I2 + 12 >> 2] = c[ra2 + 48 + 12 >> 2];
                    } else {
                      ra2 = c[d2 + 12 >> 2] | 0;
                      c[sa2 + 128 >> 2] = c[ra2 >> 2];
                      c[sa2 + 128 + 4 >> 2] = c[ra2 + 4 >> 2];
                      c[sa2 + 128 + 8 >> 2] = c[ra2 + 8 >> 2];
                      c[sa2 + 128 + 12 >> 2] = c[ra2 + 12 >> 2];
                      c[m2 >> 2] = c[ra2 + 16 >> 2];
                      c[m2 + 4 >> 2] = c[ra2 + 16 + 4 >> 2];
                      c[m2 + 8 >> 2] = c[ra2 + 16 + 8 >> 2];
                      c[m2 + 12 >> 2] = c[ra2 + 16 + 12 >> 2];
                      c[w2 >> 2] = c[ra2 + 32 >> 2];
                      c[w2 + 4 >> 2] = c[ra2 + 32 + 4 >> 2];
                      c[w2 + 8 >> 2] = c[ra2 + 32 + 8 >> 2];
                      c[w2 + 12 >> 2] = c[ra2 + 32 + 12 >> 2];
                      c[A2 >> 2] = c[ra2 + 48 >> 2];
                      c[A2 + 4 >> 2] = c[ra2 + 48 + 4 >> 2];
                      c[A2 + 8 >> 2] = c[ra2 + 48 + 8 >> 2];
                      c[A2 + 12 >> 2] = c[ra2 + 48 + 12 >> 2];
                      ka2 = q2 * (s2 * -q2 + (t2 * r2 + v2 * -p2) - u2 * -o2) + (o2 * (v2 * r2 - s2 * -o2 - t2 * -p2 - u2 * -q2) + r2 * (u2 * -p2 + (s2 * r2 + v2 * -o2) - t2 * -q2)) - p2 * (t2 * -o2 + (u2 * r2 + v2 * -q2) - s2 * -p2);
                      ma2 = o2 * (t2 * -o2 + (u2 * r2 + v2 * -q2) - s2 * -p2) + (r2 * (s2 * -q2 + (t2 * r2 + v2 * -p2) - u2 * -o2) + p2 * (v2 * r2 - s2 * -o2 - t2 * -p2 - u2 * -q2)) - q2 * (u2 * -p2 + (s2 * r2 + v2 * -o2) - t2 * -q2);
                      ua2 = p2 * (u2 * -p2 + (s2 * r2 + v2 * -o2) - t2 * -q2) + (q2 * (v2 * r2 - s2 * -o2 - t2 * -p2 - u2 * -q2) + r2 * (t2 * -o2 + (u2 * r2 + v2 * -q2) - s2 * -p2)) - o2 * (s2 * -q2 + (t2 * r2 + v2 * -p2) - u2 * -o2);
                      da2 = r2 * (v2 * r2 - s2 * -o2 - t2 * -p2 - u2 * -q2) - o2 * (u2 * -p2 + (s2 * r2 + v2 * -o2) - t2 * -q2) - p2 * (s2 * -q2 + (t2 * r2 + v2 * -p2) - u2 * -o2) - q2 * (t2 * -o2 + (u2 * r2 + v2 * -q2) - s2 * -p2);
                      la2 = ka2 * (2 / (da2 * da2 + (ua2 * ua2 + (ka2 * ka2 + ma2 * ma2))));
                      oa2 = ma2 * (2 / (da2 * da2 + (ua2 * ua2 + (ka2 * ka2 + ma2 * ma2))));
                      ca2 = ua2 * (2 / (da2 * da2 + (ua2 * ua2 + (ka2 * ka2 + ma2 * ma2))));
                      ra2 = c[e2 + 12 >> 2] | 0;
                      r2 = +g[ra2 >> 2];
                      s2 = +g[ra2 + 16 >> 2];
                      t2 = +g[ra2 + 32 >> 2];
                      u2 = +g[ra2 + 4 >> 2];
                      v2 = +g[ra2 + 20 >> 2];
                      S2 = +g[ra2 + 36 >> 2];
                      ba2 = +g[ra2 + 8 >> 2];
                      ea2 = +g[ra2 + 24 >> 2];
                      ta2 = +g[ra2 + 40 >> 2];
                      g[sa2 + 128 + 64 >> 2] = (1 - (ma2 * oa2 + ua2 * ca2)) * r2 + (ka2 * oa2 - da2 * ca2) * s2 + (ka2 * ca2 + da2 * oa2) * t2;
                      g[sa2 + 128 + 68 >> 2] = (1 - (ma2 * oa2 + ua2 * ca2)) * u2 + (ka2 * oa2 - da2 * ca2) * v2 + (ka2 * ca2 + da2 * oa2) * S2;
                      g[sa2 + 128 + 72 >> 2] = (1 - (ma2 * oa2 + ua2 * ca2)) * ba2 + (ka2 * oa2 - da2 * ca2) * ea2 + (ka2 * ca2 + da2 * oa2) * ta2;
                      g[sa2 + 128 + 76 >> 2] = 0;
                      g[sa2 + 128 + 80 >> 2] = (ka2 * oa2 + da2 * ca2) * r2 + (1 - (ka2 * la2 + ua2 * ca2)) * s2 + (ma2 * ca2 - da2 * la2) * t2;
                      g[sa2 + 128 + 84 >> 2] = (ka2 * oa2 + da2 * ca2) * u2 + (1 - (ka2 * la2 + ua2 * ca2)) * v2 + (ma2 * ca2 - da2 * la2) * S2;
                      g[sa2 + 128 + 88 >> 2] = (ka2 * oa2 + da2 * ca2) * ba2 + (1 - (ka2 * la2 + ua2 * ca2)) * ea2 + (ma2 * ca2 - da2 * la2) * ta2;
                      g[sa2 + 128 + 92 >> 2] = 0;
                      g[sa2 + 128 + 96 >> 2] = (ka2 * ca2 - da2 * oa2) * r2 + (ma2 * ca2 + da2 * la2) * s2 + (1 - (ka2 * la2 + ma2 * oa2)) * t2;
                      g[sa2 + 128 + 100 >> 2] = (ka2 * ca2 - da2 * oa2) * u2 + (ma2 * ca2 + da2 * la2) * v2 + (1 - (ka2 * la2 + ma2 * oa2)) * S2;
                      g[sa2 + 128 + 104 >> 2] = (ka2 * ca2 - da2 * oa2) * ba2 + (ma2 * ca2 + da2 * la2) * ea2 + (1 - (ka2 * la2 + ma2 * oa2)) * ta2;
                      g[sa2 + 128 + 108 >> 2] = 0;
                    }
                    j2 = c[f2 + 20 >> 2] | 0;
                    c[sa2 + 384 >> 2] = 4028;
                    c[sa2 + 384 + 32 >> 2] = h2;
                    c[sa2 + 384 + 36 >> 2] = c[sa2 + 128 >> 2];
                    c[sa2 + 384 + 36 + 4 >> 2] = c[sa2 + 128 + 4 >> 2];
                    c[sa2 + 384 + 36 + 8 >> 2] = c[sa2 + 128 + 8 >> 2];
                    c[sa2 + 384 + 36 + 12 >> 2] = c[sa2 + 128 + 12 >> 2];
                    c[sa2 + 384 + 52 >> 2] = c[m2 >> 2];
                    c[sa2 + 384 + 52 + 4 >> 2] = c[m2 + 4 >> 2];
                    c[sa2 + 384 + 52 + 8 >> 2] = c[m2 + 8 >> 2];
                    c[sa2 + 384 + 52 + 12 >> 2] = c[m2 + 12 >> 2];
                    c[sa2 + 384 + 68 >> 2] = c[w2 >> 2];
                    c[sa2 + 384 + 68 + 4 >> 2] = c[w2 + 4 >> 2];
                    c[sa2 + 384 + 68 + 8 >> 2] = c[w2 + 8 >> 2];
                    c[sa2 + 384 + 68 + 12 >> 2] = c[w2 + 12 >> 2];
                    c[sa2 + 384 + 84 >> 2] = c[A2 >> 2];
                    c[sa2 + 384 + 84 + 4 >> 2] = c[A2 + 4 >> 2];
                    c[sa2 + 384 + 84 + 8 >> 2] = c[A2 + 8 >> 2];
                    c[sa2 + 384 + 84 + 12 >> 2] = c[A2 + 12 >> 2];
                    c[sa2 + 384 + 100 >> 2] = c[E2 >> 2];
                    c[sa2 + 384 + 100 + 4 >> 2] = c[E2 + 4 >> 2];
                    c[sa2 + 384 + 100 + 8 >> 2] = c[E2 + 8 >> 2];
                    c[sa2 + 384 + 100 + 12 >> 2] = c[E2 + 12 >> 2];
                    c[sa2 + 384 + 116 >> 2] = c[G2 >> 2];
                    c[sa2 + 384 + 116 + 4 >> 2] = c[G2 + 4 >> 2];
                    c[sa2 + 384 + 116 + 8 >> 2] = c[G2 + 8 >> 2];
                    c[sa2 + 384 + 116 + 12 >> 2] = c[G2 + 12 >> 2];
                    c[sa2 + 384 + 132 >> 2] = c[H2 >> 2];
                    c[sa2 + 384 + 132 + 4 >> 2] = c[H2 + 4 >> 2];
                    c[sa2 + 384 + 132 + 8 >> 2] = c[H2 + 8 >> 2];
                    c[sa2 + 384 + 132 + 12 >> 2] = c[H2 + 12 >> 2];
                    c[sa2 + 384 + 148 >> 2] = c[I2 >> 2];
                    c[sa2 + 384 + 148 + 4 >> 2] = c[I2 + 4 >> 2];
                    c[sa2 + 384 + 148 + 8 >> 2] = c[I2 + 8 >> 2];
                    c[sa2 + 384 + 148 + 12 >> 2] = c[I2 + 12 >> 2];
                    c[sa2 + 384 + 164 >> 2] = c[sa2 + 624 >> 2];
                    c[sa2 + 384 + 164 + 4 >> 2] = c[sa2 + 624 + 4 >> 2];
                    c[sa2 + 384 + 164 + 8 >> 2] = c[sa2 + 624 + 8 >> 2];
                    c[sa2 + 384 + 164 + 12 >> 2] = c[sa2 + 624 + 12 >> 2];
                    c[sa2 + 384 + 180 >> 2] = c[sa2 + 624 + 16 >> 2];
                    c[sa2 + 384 + 180 + 4 >> 2] = c[sa2 + 624 + 16 + 4 >> 2];
                    c[sa2 + 384 + 180 + 8 >> 2] = c[sa2 + 624 + 16 + 8 >> 2];
                    c[sa2 + 384 + 180 + 12 >> 2] = c[sa2 + 624 + 16 + 12 >> 2];
                    c[sa2 + 384 + 196 >> 2] = c[sa2 + 624 + 32 >> 2];
                    c[sa2 + 384 + 196 + 4 >> 2] = c[sa2 + 624 + 32 + 4 >> 2];
                    c[sa2 + 384 + 196 + 8 >> 2] = c[sa2 + 624 + 32 + 8 >> 2];
                    c[sa2 + 384 + 196 + 12 >> 2] = c[sa2 + 624 + 32 + 12 >> 2];
                    c[sa2 + 384 + 212 >> 2] = c[sa2 + 624 + 48 >> 2];
                    c[sa2 + 384 + 212 + 4 >> 2] = c[sa2 + 624 + 48 + 4 >> 2];
                    c[sa2 + 384 + 212 + 8 >> 2] = c[sa2 + 624 + 48 + 8 >> 2];
                    c[sa2 + 384 + 212 + 12 >> 2] = c[sa2 + 624 + 48 + 12 >> 2];
                    a[sa2 + 384 + 228 >> 0] = B2 < y2 & 1;
                    c[sa2 + 384 + 232 >> 2] = j2;
                    On(sa2 + 48 | 0, sa2 + 128 | 0, sa2 + 384 | 0, j2, 0);
                    j2 = c[b2 + 28 >> 2] | 0;
                  }
                  l2 = l2 + 1 | 0;
                } while ((l2 | 0) < (j2 | 0));
              }
            }
            if (!(a[b2 + 16 >> 0] | 0)) {
              i = sa2;
              return;
            }
            l2 = c[h2 + 4 >> 2] | 0;
            if (!(c[l2 + 748 >> 2] | 0)) {
              i = sa2;
              return;
            }
            m2 = c[l2 + 740 >> 2] | 0;
            n2 = c[(c[h2 + 8 >> 2] | 0) + 8 >> 2] | 0;
            j2 = c[(c[h2 + 12 >> 2] | 0) + 8 >> 2] | 0;
            if ((m2 | 0) == (n2 | 0)) {
              Xn(l2, m2 + 4 | 0, j2 + 4 | 0);
              i = sa2;
              return;
            } else {
              Xn(l2, j2 + 4 | 0, n2 + 4 | 0);
              i = sa2;
              return;
            }
          }
          function lh(a2) {
            a2 = a2 | 0;
            rG(a2);
            return;
          }
          function mh(a2, b2, c2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            return;
          }
          function nh(a2, b2, c2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            return;
          }
          function oh(a2, b2, c2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = +d2;
            return;
          }
          function ph(a2) {
            a2 = a2 | 0;
            rG(a2);
            return;
          }
          function qh(a2, b2, c2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            return;
          }
          function rh(a2, b2, c2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            return;
          }
          function sh(b2, d2, e2, f2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = +f2;
            var h2 = 0, j2 = 0, k2 = 0, l2 = 0;
            h2 = i;
            i = i + 16 | 0;
            g[b2 + 32 >> 2] = f2;
            c[b2 + 8 >> 2] = c[d2 >> 2];
            c[b2 + 8 + 4 >> 2] = c[d2 + 4 >> 2];
            c[b2 + 8 + 8 >> 2] = c[d2 + 8 >> 2];
            c[b2 + 8 + 12 >> 2] = c[d2 + 12 >> 2];
            j2 = +g[b2 + 28 >> 2];
            l2 = +g[e2 + 4 >> 2] - j2 * +g[d2 + 4 >> 2];
            k2 = +g[e2 + 8 >> 2] - j2 * +g[d2 + 8 >> 2];
            g[h2 >> 2] = +g[e2 >> 2] - +g[d2 >> 2] * j2;
            g[h2 + 4 >> 2] = l2;
            g[h2 + 8 >> 2] = k2;
            g[h2 + 12 >> 2] = 0;
            f2 = +g[b2 + 24 >> 2] + j2 + f2;
            g[b2 + 32 >> 2] = f2;
            if (!(f2 < 0)) {
              b2 = b2 + 4 | 0;
              b2 = c[b2 >> 2] | 0;
              e2 = c[b2 >> 2] | 0;
              e2 = e2 + 16 | 0;
              e2 = c[e2 >> 2] | 0;
              Yb[e2 & 15](b2, d2, h2, f2);
              i = h2;
              return;
            }
            a[b2 + 36 >> 0] = 1;
            b2 = b2 + 4 | 0;
            b2 = c[b2 >> 2] | 0;
            e2 = c[b2 >> 2] | 0;
            e2 = e2 + 16 | 0;
            e2 = c[e2 >> 2] | 0;
            Yb[e2 & 15](b2, d2, h2, f2);
            i = h2;
            return;
          }
          function th(a2) {
            a2 = a2 | 0;
            rG(a2);
            return;
          }
          function uh(b2, d2, e2, f2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = +f2;
            var h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0, I2 = 0, J2 = 0;
            o2 = i;
            i = i + 16 | 0;
            l2 = +g[d2 >> 2];
            m2 = +g[d2 + 4 >> 2];
            n2 = +g[d2 + 8 >> 2];
            j2 = +g[e2 >> 2];
            k2 = +g[e2 + 4 >> 2];
            h2 = +g[e2 + 8 >> 2];
            if (!(a[b2 + 228 >> 0] | 0)) {
              z2 = +g[b2 + 100 >> 2];
              w2 = +g[b2 + 116 >> 2];
              C2 = +g[b2 + 132 >> 2];
              y2 = +g[b2 + 104 >> 2];
              u2 = +g[b2 + 120 >> 2];
              B2 = +g[b2 + 136 >> 2];
              x2 = +g[b2 + 108 >> 2];
              p2 = +g[b2 + 124 >> 2];
              A2 = +g[b2 + 140 >> 2];
              F2 = -+g[b2 + 148 >> 2];
              E2 = -+g[b2 + 152 >> 2];
              D2 = -+g[b2 + 156 >> 2];
              J2 = +g[b2 + 164 >> 2];
              I2 = +g[b2 + 168 >> 2];
              s2 = +g[b2 + 172 >> 2];
              H2 = +g[b2 + 180 >> 2];
              G2 = +g[b2 + 184 >> 2];
              r2 = +g[b2 + 188 >> 2];
              v2 = +g[b2 + 196 >> 2];
              t2 = +g[b2 + 200 >> 2];
              q2 = +g[b2 + 204 >> 2];
              s2 = h2 * (C2 * J2 + B2 * I2 + A2 * s2) + (j2 * (z2 * J2 + y2 * I2 + x2 * s2) + k2 * (w2 * J2 + u2 * I2 + p2 * s2)) + (J2 * (z2 * F2 + w2 * E2 + C2 * D2) + (y2 * F2 + u2 * E2 + B2 * D2) * I2 + (x2 * F2 + p2 * E2 + A2 * D2) * s2 + +g[b2 + 212 >> 2]);
              r2 = h2 * (C2 * H2 + B2 * G2 + A2 * r2) + (j2 * (z2 * H2 + y2 * G2 + x2 * r2) + k2 * (w2 * H2 + u2 * G2 + p2 * r2)) + ((z2 * F2 + w2 * E2 + C2 * D2) * H2 + (y2 * F2 + u2 * E2 + B2 * D2) * G2 + (x2 * F2 + p2 * E2 + A2 * D2) * r2 + +g[b2 + 216 >> 2]);
              q2 = (z2 * F2 + w2 * E2 + C2 * D2) * v2 + (y2 * F2 + u2 * E2 + B2 * D2) * t2 + (x2 * F2 + p2 * E2 + A2 * D2) * q2 + +g[b2 + 220 >> 2] + (h2 * (C2 * v2 + B2 * t2 + A2 * q2) + (j2 * (z2 * v2 + y2 * t2 + x2 * q2) + k2 * (w2 * v2 + u2 * t2 + p2 * q2)));
              g[o2 >> 2] = s2;
              g[o2 + 4 >> 2] = r2;
              p2 = q2;
              f2 = (l2 * f2 + j2 - s2) * +g[d2 >> 2] + (m2 * f2 + k2 - r2) * +g[d2 + 4 >> 2] + (n2 * f2 + h2 - q2) * +g[d2 + 8 >> 2];
              e2 = o2 + 8 | 0;
              g[e2 >> 2] = p2;
              e2 = o2 + 12 | 0;
              g[e2 >> 2] = 0;
              b2 = b2 + 32 | 0;
              b2 = c[b2 >> 2] | 0;
              e2 = c[b2 >> 2] | 0;
              e2 = e2 + 16 | 0;
              e2 = c[e2 >> 2] | 0;
              Yb[e2 & 15](b2, d2, o2, f2);
              i = o2;
              return;
            } else {
              z2 = +g[b2 + 36 >> 2];
              C2 = +g[b2 + 52 >> 2];
              w2 = +g[b2 + 68 >> 2];
              A2 = +g[b2 + 40 >> 2];
              E2 = +g[b2 + 56 >> 2];
              x2 = +g[b2 + 72 >> 2];
              B2 = +g[b2 + 44 >> 2];
              I2 = +g[b2 + 60 >> 2];
              y2 = +g[b2 + 76 >> 2];
              t2 = -+g[b2 + 84 >> 2];
              u2 = -+g[b2 + 88 >> 2];
              v2 = -+g[b2 + 92 >> 2];
              p2 = +g[b2 + 164 >> 2];
              q2 = +g[b2 + 168 >> 2];
              G2 = +g[b2 + 172 >> 2];
              r2 = +g[b2 + 180 >> 2];
              s2 = +g[b2 + 184 >> 2];
              H2 = +g[b2 + 188 >> 2];
              D2 = +g[b2 + 196 >> 2];
              F2 = +g[b2 + 200 >> 2];
              J2 = +g[b2 + 204 >> 2];
              G2 = (n2 * f2 + h2) * (w2 * p2 + x2 * q2 + y2 * G2) + ((l2 * f2 + j2) * (z2 * p2 + A2 * q2 + B2 * G2) + (m2 * f2 + k2) * (C2 * p2 + E2 * q2 + I2 * G2)) + (p2 * (z2 * t2 + C2 * u2 + w2 * v2) + (A2 * t2 + E2 * u2 + x2 * v2) * q2 + (B2 * t2 + I2 * u2 + y2 * v2) * G2 + +g[b2 + 212 >> 2]);
              H2 = (n2 * f2 + h2) * (w2 * r2 + x2 * s2 + y2 * H2) + ((l2 * f2 + j2) * (z2 * r2 + A2 * s2 + B2 * H2) + (m2 * f2 + k2) * (C2 * r2 + E2 * s2 + I2 * H2)) + ((z2 * t2 + C2 * u2 + w2 * v2) * r2 + (A2 * t2 + E2 * u2 + x2 * v2) * s2 + (B2 * t2 + I2 * u2 + y2 * v2) * H2 + +g[b2 + 216 >> 2]);
              J2 = (z2 * t2 + C2 * u2 + w2 * v2) * D2 + (A2 * t2 + E2 * u2 + x2 * v2) * F2 + (B2 * t2 + I2 * u2 + y2 * v2) * J2 + +g[b2 + 220 >> 2] + ((n2 * f2 + h2) * (w2 * D2 + x2 * F2 + y2 * J2) + ((l2 * f2 + j2) * (z2 * D2 + A2 * F2 + B2 * J2) + (m2 * f2 + k2) * (C2 * D2 + E2 * F2 + I2 * J2)));
              g[o2 >> 2] = G2 + l2 * (l2 * (G2 - j2) + m2 * (H2 - k2) + n2 * (J2 - h2));
              g[o2 + 4 >> 2] = H2 + m2 * (l2 * (G2 - j2) + m2 * (H2 - k2) + n2 * (J2 - h2));
              I2 = J2 + n2 * (l2 * (G2 - j2) + m2 * (H2 - k2) + n2 * (J2 - h2));
              J2 = l2 * (G2 - j2) + m2 * (H2 - k2) + n2 * (J2 - h2);
              e2 = o2 + 8 | 0;
              g[e2 >> 2] = I2;
              e2 = o2 + 12 | 0;
              g[e2 >> 2] = 0;
              b2 = b2 + 32 | 0;
              b2 = c[b2 >> 2] | 0;
              e2 = c[b2 >> 2] | 0;
              e2 = e2 + 16 | 0;
              e2 = c[e2 >> 2] | 0;
              Yb[e2 & 15](b2, d2, o2, J2);
              i = o2;
              return;
            }
          }
          function vh(b2, d2, e2, f2, h2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            h2 = h2 | 0;
            var j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0;
            f2 = i;
            i = i + 608 | 0;
            p2 = +g[d2 + 116 >> 2] - +g[d2 + 52 >> 2];
            o2 = +g[d2 + 120 >> 2] - +g[d2 + 56 >> 2];
            n2 = +g[d2 + 124 >> 2] - +g[d2 + 60 >> 2];
            j2 = +g[e2 + 116 >> 2] - +g[e2 + 52 >> 2];
            k2 = +g[e2 + 120 >> 2] - +g[e2 + 56 >> 2];
            l2 = +g[e2 + 124 >> 2] - +g[e2 + 60 >> 2];
            m2 = +g[d2 + 256 >> 2];
            if (p2 * p2 + o2 * o2 + n2 * n2 < m2 * m2 ? (p2 = +g[e2 + 256 >> 2], j2 * j2 + k2 * k2 + l2 * l2 < p2 * p2) : 0) {
              p2 = 1;
              i = f2;
              return +p2;
            }
            b2 = c[d2 + 192 >> 2] | 0;
            h2 = c[e2 + 252 >> 2] | 0;
            c[f2 + 552 + 8 >> 2] = 0;
            c[f2 + 552 + 12 >> 2] = -1;
            c[f2 + 552 + 16 >> 2] = 1065353216;
            c[f2 + 552 + 20 >> 2] = 1065353216;
            c[f2 + 552 + 24 >> 2] = 1065353216;
            g[f2 + 552 + 28 >> 2] = 0;
            c[f2 + 552 >> 2] = 6380;
            c[f2 + 552 + 4 >> 2] = 8;
            c[f2 + 552 + 32 >> 2] = h2;
            c[f2 + 552 + 48 >> 2] = h2;
            c[f2 + 376 >> 2] = 3316;
            g[f2 + 376 + 164 >> 2] = 999999984306749400;
            c[f2 + 376 + 168 >> 2] = 0;
            g[f2 + 376 + 172 >> 2] = 0;
            g[f2 + 16 + 308 >> 2] = 9999999747378752e-20;
            a[f2 + 16 + 332 >> 0] = 0;
            c[f2 >> 2] = 6864;
            c[f2 + 4 >> 2] = f2 + 16;
            c[f2 + 8 >> 2] = b2;
            c[f2 + 12 >> 2] = f2 + 552;
            if (An(f2, d2 + 4 | 0, d2 + 68 | 0, e2 + 4 | 0, e2 + 68 | 0, f2 + 376 | 0) | 0) {
              j2 = +g[f2 + 376 + 164 >> 2];
              if (+g[d2 + 248 >> 2] > j2)
                g[d2 + 248 >> 2] = j2;
              if (+g[e2 + 248 >> 2] > j2)
                g[e2 + 248 >> 2] = j2;
              if (j2 < 1)
                k2 = j2;
              else
                k2 = 1;
            } else
              k2 = 1;
            b2 = c[e2 + 192 >> 2] | 0;
            h2 = c[d2 + 252 >> 2] | 0;
            c[f2 + 552 + 8 >> 2] = 0;
            c[f2 + 552 + 12 >> 2] = -1;
            c[f2 + 552 + 16 >> 2] = 1065353216;
            c[f2 + 552 + 20 >> 2] = 1065353216;
            c[f2 + 552 + 24 >> 2] = 1065353216;
            g[f2 + 552 + 28 >> 2] = 0;
            c[f2 + 552 >> 2] = 6380;
            c[f2 + 552 + 4 >> 2] = 8;
            c[f2 + 552 + 32 >> 2] = h2;
            c[f2 + 552 + 48 >> 2] = h2;
            c[f2 + 376 >> 2] = 3316;
            g[f2 + 376 + 164 >> 2] = 999999984306749400;
            c[f2 + 376 + 168 >> 2] = 0;
            g[f2 + 376 + 172 >> 2] = 0;
            g[f2 + 16 + 308 >> 2] = 9999999747378752e-20;
            a[f2 + 16 + 332 >> 0] = 0;
            c[f2 >> 2] = 6864;
            c[f2 + 4 >> 2] = f2 + 16;
            c[f2 + 8 >> 2] = f2 + 552;
            c[f2 + 12 >> 2] = b2;
            if (An(f2, d2 + 4 | 0, d2 + 68 | 0, e2 + 4 | 0, e2 + 68 | 0, f2 + 376 | 0) | 0) {
              j2 = +g[f2 + 376 + 164 >> 2];
              if (+g[d2 + 248 >> 2] > j2)
                g[d2 + 248 >> 2] = j2;
              if (+g[e2 + 248 >> 2] > j2)
                g[e2 + 248 >> 2] = j2;
              if (!(k2 > j2))
                j2 = k2;
            } else
              j2 = k2;
            p2 = j2;
            i = f2;
            return +p2;
          }
          function wh(b2, d2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0;
            e2 = c[b2 + 20 >> 2] | 0;
            if (!e2)
              return;
            if (!(a[b2 + 16 >> 0] | 0))
              return;
            f2 = c[d2 + 4 >> 2] | 0;
            if ((f2 | 0) == (c[d2 + 8 >> 2] | 0) ? (h2 = f2 | 0 ? f2 << 1 : 1, (f2 | 0) < (h2 | 0)) : 0) {
              if (!h2)
                e2 = 0;
              else {
                c[5637] = (c[5637] | 0) + 1;
                e2 = qG((h2 << 2 | 3) + 16 | 0) | 0;
                if (!e2)
                  e2 = 0;
                else {
                  c[(e2 + 4 + 15 & -16) + -4 >> 2] = e2;
                  e2 = e2 + 4 + 15 & -16;
                }
                f2 = c[d2 + 4 >> 2] | 0;
              }
              if ((f2 | 0) > 0) {
                g2 = 0;
                do {
                  c[e2 + (g2 << 2) >> 2] = c[(c[d2 + 12 >> 2] | 0) + (g2 << 2) >> 2];
                  g2 = g2 + 1 | 0;
                } while ((g2 | 0) != (f2 | 0));
              }
              g2 = c[d2 + 12 >> 2] | 0;
              if (g2) {
                if (a[d2 + 16 >> 0] | 0) {
                  c[5638] = (c[5638] | 0) + 1;
                  rG(c[g2 + -4 >> 2] | 0);
                  f2 = c[d2 + 4 >> 2] | 0;
                }
                c[d2 + 12 >> 2] = 0;
              }
              a[d2 + 16 >> 0] = 1;
              c[d2 + 12 >> 2] = e2;
              c[d2 + 8 >> 2] = h2;
              e2 = c[b2 + 20 >> 2] | 0;
            }
            c[(c[d2 + 12 >> 2] | 0) + (f2 << 2) >> 2] = e2;
            c[d2 + 4 >> 2] = f2 + 1;
            return;
          }
          function xh(b2) {
            b2 = b2 | 0;
            var d2 = 0;
            c[b2 >> 2] = 4056;
            if (!(a[b2 + 8 >> 0] | 0))
              return;
            d2 = c[b2 + 12 >> 2] | 0;
            if (!d2)
              return;
            b2 = c[b2 + 4 >> 2] | 0;
            tb[c[(c[b2 >> 2] | 0) + 16 >> 2] & 127](b2, d2);
            return;
          }
          function yh(b2) {
            b2 = b2 | 0;
            var d2 = 0, e2 = 0;
            c[b2 >> 2] = 4056;
            if (!(a[b2 + 8 >> 0] | 0)) {
              rG(b2);
              return;
            }
            d2 = c[b2 + 12 >> 2] | 0;
            if (!d2) {
              rG(b2);
              return;
            }
            e2 = c[b2 + 4 >> 2] | 0;
            tb[c[(c[e2 >> 2] | 0) + 16 >> 2] & 127](e2, d2);
            rG(b2);
            return;
          }
          function zh(b2, d2, e2, f2, h2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            h2 = h2 | 0;
            var j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0, P2 = 0, S2 = 0, T2 = 0, U2 = 0, V2 = 0, W2 = 0, X2 = 0, Y2 = 0, Z2 = 0, _2 = 0, $2 = 0, aa2 = 0, ba2 = 0, ca2 = 0, da2 = 0, ea2 = 0, fa2 = 0, ga2 = 0, ha2 = 0, ia2 = 0, ja2 = 0, ka2 = 0, la2 = 0, ma2 = 0, na2 = 0, oa2 = 0;
            I2 = i;
            i = i + 96 | 0;
            if (!(c[b2 + 12 >> 2] | 0)) {
              i = I2;
              return;
            }
            f2 = (a[b2 + 16 >> 0] | 0) != 0;
            L2 = f2 ? e2 : d2;
            f2 = f2 ? d2 : e2;
            j2 = c[L2 + 4 >> 2] | 0;
            k2 = c[f2 + 4 >> 2] | 0;
            L2 = c[L2 + 12 >> 2] | 0;
            aa2 = +g[L2 >> 2];
            $2 = +g[L2 + 16 >> 2];
            _2 = +g[L2 + 32 >> 2];
            Z2 = +g[L2 + 4 >> 2];
            Y2 = +g[L2 + 20 >> 2];
            o2 = +g[L2 + 36 >> 2];
            l2 = +g[L2 + 8 >> 2];
            r2 = +g[L2 + 24 >> 2];
            y2 = +g[L2 + 40 >> 2];
            T2 = +g[L2 + 48 >> 2];
            S2 = +g[L2 + 52 >> 2];
            P2 = +g[L2 + 56 >> 2];
            K2 = c[f2 + 12 >> 2] | 0;
            X2 = +g[K2 >> 2];
            W2 = +g[K2 + 16 >> 2];
            p2 = +g[K2 + 32 >> 2];
            V2 = +g[K2 + 4 >> 2];
            U2 = +g[K2 + 20 >> 2];
            q2 = +g[K2 + 36 >> 2];
            x2 = +g[K2 + 8 >> 2];
            v2 = +g[K2 + 24 >> 2];
            t2 = +g[K2 + 40 >> 2];
            M2 = -+g[K2 + 48 >> 2];
            E2 = -+g[K2 + 52 >> 2];
            F2 = -+g[K2 + 56 >> 2];
            G2 = +g[L2 >> 2];
            H2 = +g[L2 + 16 >> 2];
            D2 = +g[L2 + 32 >> 2];
            B2 = +g[L2 + 4 >> 2];
            A2 = +g[L2 + 20 >> 2];
            z2 = +g[L2 + 36 >> 2];
            w2 = +g[L2 + 8 >> 2];
            u2 = +g[L2 + 24 >> 2];
            s2 = +g[L2 + 40 >> 2];
            L2 = c[(c[j2 >> 2] | 0) + 64 >> 2] | 0;
            n2 = -+g[k2 + 52 >> 2];
            m2 = -+g[k2 + 56 >> 2];
            C2 = -+g[k2 + 60 >> 2];
            g[I2 >> 2] = (aa2 * X2 + $2 * W2 + _2 * p2) * n2 + (aa2 * V2 + $2 * U2 + _2 * q2) * m2 + (aa2 * x2 + $2 * v2 + _2 * t2) * C2;
            g[I2 + 4 >> 2] = (Z2 * X2 + Y2 * W2 + o2 * p2) * n2 + (Z2 * V2 + Y2 * U2 + o2 * q2) * m2 + (Z2 * x2 + Y2 * v2 + o2 * t2) * C2;
            g[I2 + 8 >> 2] = (l2 * X2 + r2 * W2 + y2 * p2) * n2 + (l2 * V2 + r2 * U2 + y2 * q2) * m2 + (l2 * x2 + r2 * v2 + y2 * t2) * C2;
            g[I2 + 12 >> 2] = 0;
            Zb[L2 & 127](I2 + 16 | 0, j2, I2);
            C2 = +g[I2 + 16 >> 2];
            y2 = +g[I2 + 16 + 4 >> 2];
            r2 = +g[I2 + 16 + 8 >> 2];
            l2 = +g[k2 + 52 >> 2];
            m2 = +g[k2 + 56 >> 2];
            n2 = +g[k2 + 60 >> 2];
            o2 = n2 * (T2 * x2 + S2 * v2 + P2 * t2 + (x2 * M2 + v2 * E2 + t2 * F2) + ((x2 * G2 + v2 * H2 + t2 * D2) * C2 + (x2 * B2 + v2 * A2 + t2 * z2) * y2 + (x2 * w2 + v2 * u2 + t2 * s2) * r2)) + (l2 * (T2 * X2 + S2 * W2 + P2 * p2 + (X2 * M2 + W2 * E2 + p2 * F2) + ((X2 * G2 + W2 * H2 + p2 * D2) * C2 + (X2 * B2 + W2 * A2 + p2 * z2) * y2 + (X2 * w2 + W2 * u2 + p2 * s2) * r2)) + m2 * (T2 * V2 + S2 * U2 + P2 * q2 + (V2 * M2 + U2 * E2 + q2 * F2) + ((V2 * G2 + U2 * H2 + q2 * D2) * C2 + (V2 * B2 + U2 * A2 + q2 * z2) * y2 + (V2 * w2 + U2 * u2 + q2 * s2) * r2))) - +g[k2 + 68 >> 2];
            p2 = T2 * X2 + S2 * W2 + P2 * p2 + (X2 * M2 + W2 * E2 + p2 * F2) + ((X2 * G2 + W2 * H2 + p2 * D2) * C2 + (X2 * B2 + W2 * A2 + p2 * z2) * y2 + (X2 * w2 + W2 * u2 + p2 * s2) * r2) - l2 * o2;
            q2 = T2 * V2 + S2 * U2 + P2 * q2 + (V2 * M2 + U2 * E2 + q2 * F2) + ((V2 * G2 + U2 * H2 + q2 * D2) * C2 + (V2 * B2 + U2 * A2 + q2 * z2) * y2 + (V2 * w2 + U2 * u2 + q2 * s2) * r2) - m2 * o2;
            r2 = T2 * x2 + S2 * v2 + P2 * t2 + (x2 * M2 + v2 * E2 + t2 * F2) + ((x2 * G2 + v2 * H2 + t2 * D2) * C2 + (x2 * B2 + v2 * A2 + t2 * z2) * y2 + (x2 * w2 + v2 * u2 + t2 * s2) * r2) - n2 * o2;
            L2 = c[f2 + 12 >> 2] | 0;
            s2 = +g[L2 >> 2];
            t2 = +g[L2 + 4 >> 2];
            u2 = +g[L2 + 8 >> 2];
            v2 = +g[L2 + 16 >> 2];
            w2 = +g[L2 + 20 >> 2];
            x2 = +g[L2 + 24 >> 2];
            y2 = +g[L2 + 32 >> 2];
            z2 = +g[L2 + 36 >> 2];
            A2 = +g[L2 + 40 >> 2];
            B2 = +g[L2 + 48 >> 2];
            C2 = +g[L2 + 52 >> 2];
            D2 = +g[L2 + 56 >> 2];
            L2 = c[b2 + 12 >> 2] | 0;
            K2 = o2 < +g[L2 + 752 >> 2];
            c[h2 + 4 >> 2] = L2;
            if (K2) {
              L2 = c[f2 + 12 >> 2] | 0;
              $2 = l2 * +g[L2 + 16 >> 2] + m2 * +g[L2 + 20 >> 2] + n2 * +g[L2 + 24 >> 2];
              aa2 = l2 * +g[L2 + 32 >> 2] + m2 * +g[L2 + 36 >> 2] + n2 * +g[L2 + 40 >> 2];
              g[I2 + 80 >> 2] = +g[L2 >> 2] * l2 + +g[L2 + 4 >> 2] * m2 + +g[L2 + 8 >> 2] * n2;
              g[I2 + 80 + 4 >> 2] = $2;
              g[I2 + 80 + 8 >> 2] = aa2;
              g[I2 + 80 + 12 >> 2] = 0;
              g[I2 + 64 >> 2] = u2 * r2 + (s2 * p2 + t2 * q2) + B2;
              g[I2 + 64 + 4 >> 2] = p2 * v2 + q2 * w2 + r2 * x2 + C2;
              g[I2 + 64 + 8 >> 2] = p2 * y2 + q2 * z2 + r2 * A2 + D2;
              g[I2 + 64 + 12 >> 2] = 0;
              Yb[c[(c[h2 >> 2] | 0) + 16 >> 2] & 15](h2, I2 + 80 | 0, I2 + 64 | 0, o2);
            }
            if ((c[j2 + 4 >> 2] | 0) < 7 ? (c[(c[h2 + 4 >> 2] | 0) + 748 >> 2] | 0) < (c[b2 + 24 >> 2] | 0) : 0) {
              l2 = +g[k2 + 60 >> 2];
              if (+N(+l2) > 0.7071067690849304) {
                n2 = +g[k2 + 56 >> 2];
                aa2 = 1 / +O(+(l2 * l2 + n2 * n2));
                m2 = 0;
                n2 = n2 * aa2;
                l2 = -(l2 * aa2);
              } else {
                aa2 = +g[k2 + 52 >> 2];
                m2 = +g[k2 + 56 >> 2];
                l2 = 1 / +O(+(aa2 * aa2 + m2 * m2));
                m2 = -(m2 * l2);
                n2 = 0;
                l2 = aa2 * l2;
              }
              F2 = 0.019999999552965164 / +Hb[c[(c[j2 >> 2] | 0) + 16 >> 2] & 15](j2);
              F2 = (F2 > 0.39269909262657166 ? 0.39269909262657166 : F2) * 0.5;
              E2 = +R(+F2) / +O(+(m2 * m2 + l2 * l2 + n2 * n2));
              H2 = m2 * E2;
              G2 = l2 * E2;
              E2 = n2 * E2;
              F2 = +Q(+F2);
              f2 = c[b2 + 20 >> 2] | 0;
              if ((f2 | 0) > 0) {
                j2 = 0;
                do {
                  v2 = +g[k2 + 52 >> 2];
                  aa2 = +g[k2 + 56 >> 2];
                  B2 = +g[k2 + 60 >> 2];
                  z2 = +(j2 | 0) * (6.2831854820251465 / +(f2 | 0)) * 0.5;
                  $2 = +R(+z2) / +O(+(v2 * v2 + aa2 * aa2 + B2 * B2));
                  z2 = +Q(+z2);
                  A2 = E2 * -(aa2 * $2) + (H2 * z2 + F2 * -(v2 * $2)) - G2 * -(B2 * $2);
                  x2 = H2 * -(B2 * $2) + (G2 * z2 + F2 * -(aa2 * $2)) - E2 * -(v2 * $2);
                  da2 = G2 * -(v2 * $2) + (E2 * z2 + F2 * -(B2 * $2)) - H2 * -(aa2 * $2);
                  D2 = F2 * z2 - H2 * -(v2 * $2) - G2 * -(aa2 * $2) - E2 * -(B2 * $2);
                  ia2 = B2 * $2 * x2 + (v2 * $2 * D2 + z2 * A2) - aa2 * $2 * da2;
                  ha2 = v2 * $2 * da2 + (z2 * x2 + aa2 * $2 * D2) - B2 * $2 * A2;
                  la2 = aa2 * $2 * A2 + (B2 * $2 * D2 + z2 * da2) - v2 * $2 * x2;
                  da2 = z2 * D2 - v2 * $2 * A2 - aa2 * $2 * x2 - B2 * $2 * da2;
                  f2 = (a[b2 + 16 >> 0] | 0) != 0;
                  ba2 = f2 ? e2 : d2;
                  f2 = f2 ? d2 : e2;
                  L2 = c[ba2 + 4 >> 2] | 0;
                  K2 = c[f2 + 4 >> 2] | 0;
                  ba2 = c[ba2 + 12 >> 2] | 0;
                  $2 = +g[ba2 >> 2];
                  B2 = +g[ba2 + 4 >> 2];
                  x2 = +g[ba2 + 8 >> 2];
                  aa2 = +g[ba2 + 16 >> 2];
                  A2 = +g[ba2 + 20 >> 2];
                  v2 = +g[ba2 + 24 >> 2];
                  D2 = +g[ba2 + 32 >> 2];
                  z2 = +g[ba2 + 36 >> 2];
                  t2 = +g[ba2 + 40 >> 2];
                  V2 = +g[ba2 + 48 >> 2];
                  W2 = +g[ba2 + 52 >> 2];
                  X2 = +g[ba2 + 56 >> 2];
                  ba2 = c[f2 + 12 >> 2] | 0;
                  P2 = +g[ba2 >> 2];
                  S2 = +g[ba2 + 16 >> 2];
                  p2 = +g[ba2 + 32 >> 2];
                  T2 = +g[ba2 + 4 >> 2];
                  U2 = +g[ba2 + 20 >> 2];
                  q2 = +g[ba2 + 36 >> 2];
                  w2 = +g[ba2 + 8 >> 2];
                  u2 = +g[ba2 + 24 >> 2];
                  s2 = +g[ba2 + 40 >> 2];
                  Y2 = -+g[ba2 + 48 >> 2];
                  Z2 = -+g[ba2 + 52 >> 2];
                  _2 = -+g[ba2 + 56 >> 2];
                  ga2 = ia2 * (2 / (ia2 * ia2 + ha2 * ha2 + la2 * la2 + da2 * da2));
                  n2 = ha2 * (2 / (ia2 * ia2 + ha2 * ha2 + la2 * la2 + da2 * da2));
                  ca2 = la2 * (2 / (ia2 * ia2 + ha2 * ha2 + la2 * la2 + da2 * da2));
                  na2 = x2 * (ia2 * ca2 - da2 * n2) + (B2 * (ia2 * n2 + da2 * ca2) + $2 * (1 - (ha2 * n2 + la2 * ca2)));
                  ka2 = x2 * (ha2 * ca2 + da2 * ga2) + ($2 * (ia2 * n2 - da2 * ca2) + B2 * (1 - (ia2 * ga2 + la2 * ca2)));
                  l2 = $2 * (ia2 * ca2 + da2 * n2) + B2 * (ha2 * ca2 - da2 * ga2) + x2 * (1 - (ia2 * ga2 + ha2 * n2));
                  ma2 = v2 * (ia2 * ca2 - da2 * n2) + (A2 * (ia2 * n2 + da2 * ca2) + aa2 * (1 - (ha2 * n2 + la2 * ca2)));
                  ja2 = v2 * (ha2 * ca2 + da2 * ga2) + (aa2 * (ia2 * n2 - da2 * ca2) + A2 * (1 - (ia2 * ga2 + la2 * ca2)));
                  y2 = aa2 * (ia2 * ca2 + da2 * n2) + A2 * (ha2 * ca2 - da2 * ga2) + v2 * (1 - (ia2 * ga2 + ha2 * n2));
                  oa2 = t2 * (ia2 * ca2 - da2 * n2) + (z2 * (ia2 * n2 + da2 * ca2) + D2 * (1 - (ha2 * n2 + la2 * ca2)));
                  la2 = t2 * (ha2 * ca2 + da2 * ga2) + (D2 * (ia2 * n2 - da2 * ca2) + z2 * (1 - (ia2 * ga2 + la2 * ca2)));
                  n2 = D2 * (ia2 * ca2 + da2 * n2) + z2 * (ha2 * ca2 - da2 * ga2) + t2 * (1 - (ia2 * ga2 + ha2 * n2));
                  ha2 = +g[ba2 >> 2];
                  ga2 = +g[ba2 + 16 >> 2];
                  ia2 = +g[ba2 + 32 >> 2];
                  da2 = +g[ba2 + 4 >> 2];
                  ca2 = +g[ba2 + 20 >> 2];
                  ea2 = +g[ba2 + 36 >> 2];
                  m2 = +g[ba2 + 8 >> 2];
                  r2 = +g[ba2 + 24 >> 2];
                  o2 = +g[ba2 + 40 >> 2];
                  ba2 = c[(c[L2 >> 2] | 0) + 64 >> 2] | 0;
                  fa2 = -+g[K2 + 52 >> 2];
                  M2 = -+g[K2 + 56 >> 2];
                  C2 = -+g[K2 + 60 >> 2];
                  g[I2 + 64 >> 2] = (ia2 * oa2 + (ha2 * na2 + ga2 * ma2)) * fa2 + (ea2 * oa2 + (da2 * na2 + ca2 * ma2)) * M2 + (o2 * oa2 + (m2 * na2 + r2 * ma2)) * C2;
                  g[I2 + 64 + 4 >> 2] = (ia2 * la2 + (ha2 * ka2 + ga2 * ja2)) * fa2 + (ea2 * la2 + (da2 * ka2 + ca2 * ja2)) * M2 + (o2 * la2 + (m2 * ka2 + r2 * ja2)) * C2;
                  g[I2 + 64 + 8 >> 2] = (ia2 * n2 + (ha2 * l2 + ga2 * y2)) * fa2 + (ea2 * n2 + (da2 * l2 + ca2 * y2)) * M2 + (o2 * n2 + (m2 * l2 + r2 * y2)) * C2;
                  g[I2 + 64 + 12 >> 2] = 0;
                  Zb[ba2 & 127](I2 + 80 | 0, L2, I2 + 64 | 0);
                  C2 = +g[I2 + 80 >> 2];
                  y2 = +g[I2 + 80 + 4 >> 2];
                  r2 = +g[I2 + 80 + 8 >> 2];
                  l2 = +g[K2 + 52 >> 2];
                  m2 = +g[K2 + 56 >> 2];
                  n2 = +g[K2 + 60 >> 2];
                  o2 = n2 * (V2 * w2 + W2 * u2 + X2 * s2 + (w2 * Y2 + u2 * Z2 + s2 * _2) + (($2 * w2 + aa2 * u2 + D2 * s2) * C2 + (B2 * w2 + A2 * u2 + z2 * s2) * y2 + (x2 * w2 + v2 * u2 + t2 * s2) * r2)) + (l2 * (V2 * P2 + W2 * S2 + X2 * p2 + (P2 * Y2 + S2 * Z2 + p2 * _2) + (($2 * P2 + aa2 * S2 + D2 * p2) * C2 + (B2 * P2 + A2 * S2 + z2 * p2) * y2 + (x2 * P2 + v2 * S2 + t2 * p2) * r2)) + m2 * (V2 * T2 + W2 * U2 + X2 * q2 + (T2 * Y2 + U2 * Z2 + q2 * _2) + (($2 * T2 + aa2 * U2 + D2 * q2) * C2 + (B2 * T2 + A2 * U2 + z2 * q2) * y2 + (x2 * T2 + v2 * U2 + t2 * q2) * r2))) - +g[K2 + 68 >> 2];
                  p2 = V2 * P2 + W2 * S2 + X2 * p2 + (P2 * Y2 + S2 * Z2 + p2 * _2) + (($2 * P2 + aa2 * S2 + D2 * p2) * C2 + (B2 * P2 + A2 * S2 + z2 * p2) * y2 + (x2 * P2 + v2 * S2 + t2 * p2) * r2) - l2 * o2;
                  q2 = V2 * T2 + W2 * U2 + X2 * q2 + (T2 * Y2 + U2 * Z2 + q2 * _2) + (($2 * T2 + aa2 * U2 + D2 * q2) * C2 + (B2 * T2 + A2 * U2 + z2 * q2) * y2 + (x2 * T2 + v2 * U2 + t2 * q2) * r2) - m2 * o2;
                  r2 = V2 * w2 + W2 * u2 + X2 * s2 + (w2 * Y2 + u2 * Z2 + s2 * _2) + (($2 * w2 + aa2 * u2 + D2 * s2) * C2 + (B2 * w2 + A2 * u2 + z2 * s2) * y2 + (x2 * w2 + v2 * u2 + t2 * s2) * r2) - n2 * o2;
                  K2 = c[f2 + 12 >> 2] | 0;
                  s2 = +g[K2 >> 2];
                  t2 = +g[K2 + 4 >> 2];
                  u2 = +g[K2 + 8 >> 2];
                  v2 = +g[K2 + 16 >> 2];
                  w2 = +g[K2 + 20 >> 2];
                  x2 = +g[K2 + 24 >> 2];
                  y2 = +g[K2 + 32 >> 2];
                  z2 = +g[K2 + 36 >> 2];
                  A2 = +g[K2 + 40 >> 2];
                  B2 = +g[K2 + 48 >> 2];
                  C2 = +g[K2 + 52 >> 2];
                  D2 = +g[K2 + 56 >> 2];
                  K2 = c[b2 + 12 >> 2] | 0;
                  L2 = o2 < +g[K2 + 752 >> 2];
                  c[h2 + 4 >> 2] = K2;
                  if (L2) {
                    ba2 = c[f2 + 12 >> 2] | 0;
                    na2 = l2 * +g[ba2 + 16 >> 2] + m2 * +g[ba2 + 20 >> 2] + n2 * +g[ba2 + 24 >> 2];
                    oa2 = l2 * +g[ba2 + 32 >> 2] + m2 * +g[ba2 + 36 >> 2] + n2 * +g[ba2 + 40 >> 2];
                    g[I2 + 48 >> 2] = +g[ba2 >> 2] * l2 + +g[ba2 + 4 >> 2] * m2 + +g[ba2 + 8 >> 2] * n2;
                    g[I2 + 48 + 4 >> 2] = na2;
                    g[I2 + 48 + 8 >> 2] = oa2;
                    g[I2 + 48 + 12 >> 2] = 0;
                    g[I2 + 32 >> 2] = u2 * r2 + (s2 * p2 + t2 * q2) + B2;
                    g[I2 + 32 + 4 >> 2] = p2 * v2 + q2 * w2 + r2 * x2 + C2;
                    g[I2 + 32 + 8 >> 2] = p2 * y2 + q2 * z2 + r2 * A2 + D2;
                    g[I2 + 32 + 12 >> 2] = 0;
                    Yb[c[(c[h2 >> 2] | 0) + 16 >> 2] & 15](h2, I2 + 48 | 0, I2 + 32 | 0, o2);
                  }
                  j2 = j2 + 1 | 0;
                  f2 = c[b2 + 20 >> 2] | 0;
                } while ((j2 | 0) < (f2 | 0));
              }
            }
            do
              if ((a[b2 + 8 >> 0] | 0 ? c[(c[b2 + 12 >> 2] | 0) + 748 >> 2] | 0 : 0) ? (J2 = c[h2 + 4 >> 2] | 0, c[J2 + 748 >> 2] | 0) : 0) {
                j2 = c[J2 + 740 >> 2] | 0;
                k2 = c[(c[h2 + 8 >> 2] | 0) + 8 >> 2] | 0;
                f2 = c[(c[h2 + 12 >> 2] | 0) + 8 >> 2] | 0;
                if ((j2 | 0) == (k2 | 0)) {
                  Xn(J2, j2 + 4 | 0, f2 + 4 | 0);
                  break;
                } else {
                  Xn(J2, f2 + 4 | 0, k2 + 4 | 0);
                  break;
                }
              }
            while (0);
            i = I2;
            return;
          }
          function Ah(a2, b2, c2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            return 1;
          }
          function Bh(b2, d2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0;
            e2 = c[b2 + 12 >> 2] | 0;
            if (!e2)
              return;
            if (!(a[b2 + 8 >> 0] | 0))
              return;
            f2 = c[d2 + 4 >> 2] | 0;
            if ((f2 | 0) == (c[d2 + 8 >> 2] | 0) ? (h2 = f2 | 0 ? f2 << 1 : 1, (f2 | 0) < (h2 | 0)) : 0) {
              if (!h2)
                e2 = 0;
              else {
                c[5637] = (c[5637] | 0) + 1;
                e2 = qG((h2 << 2 | 3) + 16 | 0) | 0;
                if (!e2)
                  e2 = 0;
                else {
                  c[(e2 + 4 + 15 & -16) + -4 >> 2] = e2;
                  e2 = e2 + 4 + 15 & -16;
                }
                f2 = c[d2 + 4 >> 2] | 0;
              }
              if ((f2 | 0) > 0) {
                g2 = 0;
                do {
                  c[e2 + (g2 << 2) >> 2] = c[(c[d2 + 12 >> 2] | 0) + (g2 << 2) >> 2];
                  g2 = g2 + 1 | 0;
                } while ((g2 | 0) != (f2 | 0));
              }
              g2 = c[d2 + 12 >> 2] | 0;
              if (g2) {
                if (a[d2 + 16 >> 0] | 0) {
                  c[5638] = (c[5638] | 0) + 1;
                  rG(c[g2 + -4 >> 2] | 0);
                  f2 = c[d2 + 4 >> 2] | 0;
                }
                c[d2 + 12 >> 2] = 0;
              }
              a[d2 + 16 >> 0] = 1;
              c[d2 + 12 >> 2] = e2;
              c[d2 + 8 >> 2] = h2;
              e2 = c[b2 + 12 >> 2] | 0;
            }
            c[(c[d2 + 12 >> 2] | 0) + (f2 << 2) >> 2] = e2;
            c[d2 + 4 >> 2] = f2 + 1;
            return;
          }
          function Ch(b2) {
            b2 = b2 | 0;
            var d2 = 0, e2 = 0;
            c[b2 >> 2] = 4084;
            if (a[b2 + 20 >> 0] | 0) {
              d2 = c[b2 + 16 >> 2] | 0;
              e2 = c[d2 + 16 >> 2] | 0;
              if (e2) {
                c[5638] = (c[5638] | 0) + 1;
                rG(c[e2 + -4 >> 2] | 0);
                d2 = c[b2 + 16 >> 2] | 0;
              }
              if (d2 | 0) {
                c[5638] = (c[5638] | 0) + 1;
                rG(c[d2 + -4 >> 2] | 0);
              }
            }
            if (a[b2 + 12 >> 0] | 0) {
              d2 = c[b2 + 8 >> 2] | 0;
              e2 = c[d2 + 16 >> 2] | 0;
              if (e2) {
                c[5638] = (c[5638] | 0) + 1;
                rG(c[e2 + -4 >> 2] | 0);
                d2 = c[b2 + 8 >> 2] | 0;
              }
              if (d2 | 0) {
                c[5638] = (c[5638] | 0) + 1;
                rG(c[d2 + -4 >> 2] | 0);
              }
            }
            d2 = c[b2 + 32 >> 2] | 0;
            rb[c[c[d2 >> 2] >> 2] & 255](d2);
            d2 = c[b2 + 32 >> 2] | 0;
            if (d2 | 0) {
              c[5638] = (c[5638] | 0) + 1;
              rG(c[d2 + -4 >> 2] | 0);
            }
            d2 = c[b2 + 36 >> 2] | 0;
            rb[c[c[d2 >> 2] >> 2] & 255](d2);
            d2 = c[b2 + 36 >> 2] | 0;
            if (d2 | 0) {
              c[5638] = (c[5638] | 0) + 1;
              rG(c[d2 + -4 >> 2] | 0);
            }
            d2 = c[b2 + 40 >> 2] | 0;
            rb[c[c[d2 >> 2] >> 2] & 255](d2);
            d2 = c[b2 + 40 >> 2] | 0;
            if (d2 | 0) {
              c[5638] = (c[5638] | 0) + 1;
              rG(c[d2 + -4 >> 2] | 0);
            }
            d2 = c[b2 + 44 >> 2] | 0;
            rb[c[c[d2 >> 2] >> 2] & 255](d2);
            d2 = c[b2 + 44 >> 2] | 0;
            if (d2 | 0) {
              c[5638] = (c[5638] | 0) + 1;
              rG(c[d2 + -4 >> 2] | 0);
            }
            d2 = c[b2 + 48 >> 2] | 0;
            rb[c[c[d2 >> 2] >> 2] & 255](d2);
            d2 = c[b2 + 48 >> 2] | 0;
            if (d2 | 0) {
              c[5638] = (c[5638] | 0) + 1;
              rG(c[d2 + -4 >> 2] | 0);
            }
            d2 = c[b2 + 52 >> 2] | 0;
            rb[c[c[d2 >> 2] >> 2] & 255](d2);
            d2 = c[b2 + 52 >> 2] | 0;
            if (d2 | 0) {
              c[5638] = (c[5638] | 0) + 1;
              rG(c[d2 + -4 >> 2] | 0);
            }
            d2 = c[b2 + 56 >> 2] | 0;
            rb[c[c[d2 >> 2] >> 2] & 255](d2);
            d2 = c[b2 + 56 >> 2] | 0;
            if (d2 | 0) {
              c[5638] = (c[5638] | 0) + 1;
              rG(c[d2 + -4 >> 2] | 0);
            }
            d2 = c[b2 + 60 >> 2] | 0;
            rb[c[c[d2 >> 2] >> 2] & 255](d2);
            d2 = c[b2 + 60 >> 2] | 0;
            if (d2 | 0) {
              c[5638] = (c[5638] | 0) + 1;
              rG(c[d2 + -4 >> 2] | 0);
            }
            d2 = c[b2 + 76 >> 2] | 0;
            rb[c[c[d2 >> 2] >> 2] & 255](d2);
            d2 = c[b2 + 76 >> 2] | 0;
            if (d2 | 0) {
              c[5638] = (c[5638] | 0) + 1;
              rG(c[d2 + -4 >> 2] | 0);
            }
            d2 = c[b2 + 80 >> 2] | 0;
            rb[c[c[d2 >> 2] >> 2] & 255](d2);
            d2 = c[b2 + 80 >> 2] | 0;
            if (d2 | 0) {
              c[5638] = (c[5638] | 0) + 1;
              rG(c[d2 + -4 >> 2] | 0);
            }
            d2 = c[b2 + 72 >> 2] | 0;
            rb[c[c[d2 >> 2] >> 2] & 255](d2);
            d2 = c[b2 + 72 >> 2] | 0;
            if (d2 | 0) {
              c[5638] = (c[5638] | 0) + 1;
              rG(c[d2 + -4 >> 2] | 0);
            }
            d2 = c[b2 + 88 >> 2] | 0;
            rb[c[c[d2 >> 2] >> 2] & 255](d2);
            d2 = c[b2 + 88 >> 2] | 0;
            if (d2 | 0) {
              c[5638] = (c[5638] | 0) + 1;
              rG(c[d2 + -4 >> 2] | 0);
            }
            d2 = c[b2 + 84 >> 2] | 0;
            rb[c[c[d2 >> 2] >> 2] & 255](d2);
            d2 = c[b2 + 84 >> 2] | 0;
            if (d2 | 0) {
              c[5638] = (c[5638] | 0) + 1;
              rG(c[d2 + -4 >> 2] | 0);
            }
            d2 = c[b2 + 24 >> 2] | 0;
            if (d2 | 0) {
              c[5638] = (c[5638] | 0) + 1;
              rG(c[d2 + -4 >> 2] | 0);
            }
            d2 = c[b2 + 28 >> 2] | 0;
            rb[c[c[d2 >> 2] >> 2] & 255](d2);
            d2 = c[b2 + 28 >> 2] | 0;
            if (!d2)
              return;
            c[5638] = (c[5638] | 0) + 1;
            rG(c[d2 + -4 >> 2] | 0);
            return;
          }
          function Dh(a2) {
            a2 = a2 | 0;
            Ch(a2);
            rG(a2);
            return;
          }
          function Eh(a2) {
            a2 = a2 | 0;
            return c[a2 + 8 >> 2] | 0;
          }
          function Fh(a2) {
            a2 = a2 | 0;
            return c[a2 + 16 >> 2] | 0;
          }
          function Gh(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            do
              if (!((b2 | 0) == 8 & (d2 | 0) == 8)) {
                if ((b2 | 0) == 8 & (d2 | 0) == 1) {
                  b2 = a2 + 76 | 0;
                  break;
                }
                if ((b2 | 0) == 1 & (d2 | 0) == 8) {
                  b2 = a2 + 80 | 0;
                  break;
                }
                if (!(d2 | b2)) {
                  b2 = a2 + 72 | 0;
                  break;
                }
                if ((b2 | 0) < 20 & (d2 | 0) == 28) {
                  b2 = a2 + 88 | 0;
                  break;
                }
                if ((b2 | 0) == 28 & (d2 | 0) < 20) {
                  b2 = a2 + 84 | 0;
                  break;
                }
                if ((b2 | 0) < 20) {
                  if ((d2 | 0) < 20) {
                    b2 = a2 + 32 | 0;
                    break;
                  }
                  if ((d2 + -21 | 0) >>> 0 < 9) {
                    b2 = a2 + 36 | 0;
                    break;
                  }
                } else {
                  if ((d2 | 0) < 20 & (b2 + -21 | 0) >>> 0 < 9) {
                    b2 = a2 + 40 | 0;
                    break;
                  }
                  if ((b2 | 0) == 31)
                    if ((d2 | 0) == 31) {
                      b2 = a2 + 48 | 0;
                      break;
                    } else {
                      b2 = a2 + 44 | 0;
                      break;
                    }
                }
                if ((d2 | 0) == 31) {
                  b2 = a2 + 52 | 0;
                  break;
                } else {
                  b2 = a2 + 56 | 0;
                  break;
                }
              } else
                b2 = a2 + 60 | 0;
            while (0);
            return c[b2 >> 2] | 0;
          }
          function Hh(a2) {
            a2 = a2 | 0;
            return c[a2 + 24 >> 2] | 0;
          }
          function Ih(b2, d2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0;
            c[b2 >> 2] = 4084;
            c[5637] = (c[5637] | 0) + 1;
            e2 = qG(379) | 0;
            if (!e2)
              e2 = 0;
            else {
              c[(e2 + 4 + 15 & -16) + -4 >> 2] = e2;
              e2 = e2 + 4 + 15 & -16;
            }
            g[e2 + 308 >> 2] = 9999999747378752e-20;
            f2 = e2 + 332 | 0;
            a[f2 >> 0] = a[f2 >> 0] & -16;
            c[b2 + 24 >> 2] = e2;
            f2 = (c[d2 + 20 >> 2] | 0) == 0;
            c[5637] = (c[5637] | 0) + 1;
            e2 = qG(23) | 0;
            if (!e2)
              e2 = 0;
            else {
              c[(e2 + 4 + 15 & -16) + -4 >> 2] = e2;
              e2 = e2 + 4 + 15 & -16;
            }
            if (f2) {
              c[e2 >> 2] = 6948;
              c[b2 + 28 >> 2] = e2;
              f2 = b2 + 28 | 0;
            } else {
              c[e2 >> 2] = 6908;
              c[b2 + 28 >> 2] = e2;
              f2 = b2 + 28 | 0;
            }
            c[5637] = (c[5637] | 0) + 1;
            e2 = qG(43) | 0;
            if (!e2)
              e2 = 0;
            else {
              c[(e2 + 4 + 15 & -16) + -4 >> 2] = e2;
              e2 = e2 + 4 + 15 & -16;
            }
            k2 = c[b2 + 24 >> 2] | 0;
            l2 = c[f2 >> 2] | 0;
            a[e2 + 4 >> 0] = 0;
            c[e2 >> 2] = 3924;
            c[e2 + 16 >> 2] = 0;
            c[e2 + 20 >> 2] = 3;
            c[e2 + 12 >> 2] = k2;
            c[e2 + 8 >> 2] = l2;
            c[b2 + 32 >> 2] = e2;
            c[5637] = (c[5637] | 0) + 1;
            e2 = qG(27) | 0;
            if (!e2)
              e2 = 0;
            else {
              c[(e2 + 4 + 15 & -16) + -4 >> 2] = e2;
              e2 = e2 + 4 + 15 & -16;
            }
            a[e2 + 4 >> 0] = 0;
            c[e2 >> 2] = 4116;
            c[b2 + 36 >> 2] = e2;
            c[5637] = (c[5637] | 0) + 1;
            e2 = qG(27) | 0;
            if (!e2)
              e2 = 0;
            else {
              c[(e2 + 4 + 15 & -16) + -4 >> 2] = e2;
              e2 = e2 + 4 + 15 & -16;
            }
            a[e2 + 4 >> 0] = 0;
            c[e2 >> 2] = 4136;
            c[b2 + 40 >> 2] = e2;
            c[5637] = (c[5637] | 0) + 1;
            e2 = qG(27) | 0;
            if (!e2)
              e2 = 0;
            else {
              c[(e2 + 4 + 15 & -16) + -4 >> 2] = e2;
              e2 = e2 + 4 + 15 & -16;
            }
            a[e2 + 4 >> 0] = 0;
            c[e2 >> 2] = 4156;
            c[b2 + 44 >> 2] = e2;
            c[5637] = (c[5637] | 0) + 1;
            e2 = qG(27) | 0;
            if (!e2)
              e2 = 0;
            else {
              c[(e2 + 4 + 15 & -16) + -4 >> 2] = e2;
              e2 = e2 + 4 + 15 & -16;
            }
            a[e2 + 4 >> 0] = 0;
            c[e2 >> 2] = 4176;
            c[b2 + 48 >> 2] = e2;
            c[5637] = (c[5637] | 0) + 1;
            e2 = qG(27) | 0;
            if (!e2)
              e2 = 0;
            else {
              c[(e2 + 4 + 15 & -16) + -4 >> 2] = e2;
              e2 = e2 + 4 + 15 & -16;
            }
            a[e2 + 4 >> 0] = 0;
            c[e2 >> 2] = 4196;
            c[b2 + 52 >> 2] = e2;
            c[5637] = (c[5637] | 0) + 1;
            e2 = qG(27) | 0;
            if (!e2)
              e2 = 0;
            else {
              c[(e2 + 4 + 15 & -16) + -4 >> 2] = e2;
              e2 = e2 + 4 + 15 & -16;
            }
            a[e2 + 4 >> 0] = 0;
            c[e2 >> 2] = 4216;
            c[b2 + 56 >> 2] = e2;
            c[5637] = (c[5637] | 0) + 1;
            e2 = qG(27) | 0;
            if (!e2)
              e2 = 0;
            else {
              c[(e2 + 4 + 15 & -16) + -4 >> 2] = e2;
              e2 = e2 + 4 + 15 & -16;
            }
            a[e2 + 4 >> 0] = 0;
            c[e2 >> 2] = 4236;
            c[b2 + 60 >> 2] = e2;
            c[5637] = (c[5637] | 0) + 1;
            e2 = qG(27) | 0;
            if (!e2)
              e2 = 0;
            else {
              c[(e2 + 4 + 15 & -16) + -4 >> 2] = e2;
              e2 = e2 + 4 + 15 & -16;
            }
            a[e2 + 4 >> 0] = 0;
            c[e2 >> 2] = 4256;
            c[b2 + 76 >> 2] = e2;
            c[5637] = (c[5637] | 0) + 1;
            e2 = qG(27) | 0;
            if (!e2)
              e2 = 0;
            else {
              c[(e2 + 4 + 15 & -16) + -4 >> 2] = e2;
              e2 = e2 + 4 + 15 & -16;
            }
            c[e2 >> 2] = 4256;
            c[b2 + 80 >> 2] = e2;
            a[e2 + 4 >> 0] = 1;
            c[5637] = (c[5637] | 0) + 1;
            e2 = qG(27) | 0;
            if (!e2)
              e2 = 0;
            else {
              c[(e2 + 4 + 15 & -16) + -4 >> 2] = e2;
              e2 = e2 + 4 + 15 & -16;
            }
            a[e2 + 4 >> 0] = 0;
            c[e2 >> 2] = 4276;
            c[b2 + 72 >> 2] = e2;
            c[5637] = (c[5637] | 0) + 1;
            e2 = qG(35) | 0;
            if (!e2)
              e2 = 0;
            else {
              c[(e2 + 4 + 15 & -16) + -4 >> 2] = e2;
              e2 = e2 + 4 + 15 & -16;
            }
            a[e2 + 4 >> 0] = 0;
            c[e2 >> 2] = 4296;
            c[e2 + 8 >> 2] = 1;
            c[e2 + 12 >> 2] = 0;
            c[b2 + 88 >> 2] = e2;
            c[5637] = (c[5637] | 0) + 1;
            e2 = qG(35) | 0;
            if (!e2)
              e2 = 0;
            else {
              c[(e2 + 4 + 15 & -16) + -4 >> 2] = e2;
              e2 = e2 + 4 + 15 & -16;
            }
            c[e2 >> 2] = 4296;
            c[e2 + 8 >> 2] = 1;
            c[e2 + 12 >> 2] = 0;
            c[b2 + 84 >> 2] = e2;
            a[e2 + 4 >> 0] = 1;
            l2 = c[d2 + 16 >> 2] | 0;
            l2 = (l2 | 0) > 80 ? l2 : 80;
            e2 = c[d2 >> 2] | 0;
            if (!e2) {
              a[b2 + 12 >> 0] = 1;
              c[5637] = (c[5637] | 0) + 1;
              e2 = qG(39) | 0;
              if (!e2)
                k2 = 0;
              else {
                c[(e2 + 4 + 15 & -16) + -4 >> 2] = e2;
                k2 = e2 + 4 + 15 & -16;
              }
              e2 = c[d2 + 8 >> 2] | 0;
              c[k2 >> 2] = 772;
              f2 = k2 + 4 | 0;
              c[f2 >> 2] = e2;
              c[5637] = (c[5637] | 0) + 1;
              e2 = qG((e2 * 772 | 3) + 16 | 0) | 0;
              if (!e2)
                e2 = 0;
              else {
                c[(e2 + 4 + 15 & -16) + -4 >> 2] = e2;
                e2 = e2 + 4 + 15 & -16;
              }
              c[k2 + 16 >> 2] = e2;
              c[k2 + 12 >> 2] = e2;
              f2 = c[f2 >> 2] | 0;
              c[k2 + 8 >> 2] = f2;
              if (f2 + -1 | 0) {
                h2 = c[k2 >> 2] | 0;
                i2 = f2 + -1 | 0;
                j2 = e2;
                do {
                  m2 = j2;
                  j2 = j2 + h2 | 0;
                  c[m2 >> 2] = j2;
                  i2 = i2 + -1 | 0;
                } while ((i2 | 0) != 0);
                e2 = e2 + (_(h2, f2 + -1 | 0) | 0) | 0;
              }
              c[e2 >> 2] = 0;
              c[b2 + 8 >> 2] = k2;
            } else {
              a[b2 + 12 >> 0] = 0;
              c[b2 + 8 >> 2] = e2;
            }
            e2 = c[d2 + 4 >> 2] | 0;
            if (e2 | 0) {
              a[b2 + 20 >> 0] = 0;
              c[b2 + 16 >> 2] = e2;
              return;
            }
            a[b2 + 20 >> 0] = 1;
            c[5637] = (c[5637] | 0) + 1;
            e2 = qG(39) | 0;
            if (!e2)
              k2 = 0;
            else {
              c[(e2 + 4 + 15 & -16) + -4 >> 2] = e2;
              k2 = e2 + 4 + 15 & -16;
            }
            e2 = c[d2 + 12 >> 2] | 0;
            c[k2 >> 2] = l2;
            f2 = k2 + 4 | 0;
            c[f2 >> 2] = e2;
            e2 = _(e2, l2) | 0;
            c[5637] = (c[5637] | 0) + 1;
            e2 = qG(e2 + 19 | 0) | 0;
            if (!e2)
              e2 = 0;
            else {
              c[(e2 + 4 + 15 & -16) + -4 >> 2] = e2;
              e2 = e2 + 4 + 15 & -16;
            }
            c[k2 + 16 >> 2] = e2;
            c[k2 + 12 >> 2] = e2;
            f2 = c[f2 >> 2] | 0;
            c[k2 + 8 >> 2] = f2;
            if (f2 + -1 | 0) {
              h2 = c[k2 >> 2] | 0;
              i2 = f2 + -1 | 0;
              j2 = e2;
              do {
                m2 = j2;
                j2 = j2 + h2 | 0;
                c[m2 >> 2] = j2;
                i2 = i2 + -1 | 0;
              } while ((i2 | 0) != 0);
              e2 = e2 + (_(h2, f2 + -1 | 0) | 0) | 0;
            }
            c[e2 >> 2] = 0;
            c[b2 + 16 >> 2] = k2;
            return;
          }
          function Jh(a2) {
            a2 = a2 | 0;
            return;
          }
          function Kh(a2) {
            a2 = a2 | 0;
            rG(a2);
            return;
          }
          function Lh(b2, d2, e2, f2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            b2 = c[d2 >> 2] | 0;
            b2 = Ob[c[(c[b2 >> 2] | 0) + 56 >> 2] & 31](b2, 80) | 0;
            d2 = c[d2 >> 2] | 0;
            c[b2 + 4 >> 2] = d2;
            c[b2 >> 2] = 3720;
            a[b2 + 8 >> 0] = 0;
            c[b2 + 12 >> 2] = 3748;
            c[b2 + 60 >> 2] = d2;
            c[b2 + 64 >> 2] = 0;
            c[b2 + 16 >> 2] = e2;
            c[b2 + 20 >> 2] = f2;
            d2 = Eb[c[(c[d2 >> 2] | 0) + 12 >> 2] & 63](d2, c[e2 + 8 >> 2] | 0, c[f2 + 8 >> 2] | 0) | 0;
            c[b2 + 76 >> 2] = d2;
            f2 = c[b2 + 60 >> 2] | 0;
            tb[c[(c[f2 >> 2] | 0) + 20 >> 2] & 127](f2, d2);
            return b2 | 0;
          }
          function Mh(a2) {
            a2 = a2 | 0;
            rG(a2);
            return;
          }
          function Nh(b2, d2, e2, f2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            b2 = c[d2 >> 2] | 0;
            b2 = Ob[c[(c[b2 >> 2] | 0) + 56 >> 2] & 31](b2, 80) | 0;
            d2 = c[d2 >> 2] | 0;
            c[b2 + 4 >> 2] = d2;
            c[b2 >> 2] = 3720;
            a[b2 + 8 >> 0] = 1;
            c[b2 + 12 >> 2] = 3748;
            c[b2 + 60 >> 2] = d2;
            c[b2 + 64 >> 2] = 0;
            c[b2 + 16 >> 2] = f2;
            c[b2 + 20 >> 2] = e2;
            d2 = Eb[c[(c[d2 >> 2] | 0) + 12 >> 2] & 63](d2, c[f2 + 8 >> 2] | 0, c[e2 + 8 >> 2] | 0) | 0;
            c[b2 + 76 >> 2] = d2;
            f2 = c[b2 + 60 >> 2] | 0;
            tb[c[(c[f2 >> 2] | 0) + 20 >> 2] & 127](f2, d2);
            return b2 | 0;
          }
          function Oh(a2) {
            a2 = a2 | 0;
            rG(a2);
            return;
          }
          function Ph(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            a2 = c[b2 >> 2] | 0;
            a2 = Ob[c[(c[a2 >> 2] | 0) + 56 >> 2] & 31](a2, 44) | 0;
            sg(a2, b2, d2, e2, 0);
            return a2 | 0;
          }
          function Qh(a2) {
            a2 = a2 | 0;
            rG(a2);
            return;
          }
          function Rh(b2, d2, e2, f2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            var g2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0;
            l2 = c[d2 >> 2] | 0;
            l2 = Ob[c[(c[l2 >> 2] | 0) + 56 >> 2] & 31](l2, 76) | 0;
            sg(l2, d2, e2, f2, 0);
            c[l2 >> 2] = 3656;
            a[l2 + 64 >> 0] = 1;
            c[l2 + 60 >> 2] = 0;
            c[l2 + 52 >> 2] = 0;
            c[l2 + 56 >> 2] = 0;
            c[5637] = (c[5637] | 0) + 1;
            b2 = qG(83) | 0;
            if (!b2)
              k2 = 0;
            else {
              c[(b2 + 4 + 15 & -16) + -4 >> 2] = b2;
              k2 = b2 + 4 + 15 & -16;
            }
            c[k2 >> 2] = 4432;
            h2 = k2 + 20 | 0;
            a[h2 >> 0] = 1;
            i2 = k2 + 16 | 0;
            c[i2 >> 2] = 0;
            d2 = k2 + 8 | 0;
            c[d2 >> 2] = 0;
            j2 = k2 + 12 | 0;
            c[j2 >> 2] = 0;
            a[k2 + 40 >> 0] = 1;
            c[k2 + 36 >> 2] = 0;
            c[k2 + 28 >> 2] = 0;
            c[k2 + 32 >> 2] = 0;
            a[k2 + 60 >> 0] = 1;
            c[k2 + 56 >> 2] = 0;
            c[k2 + 48 >> 2] = 0;
            c[k2 + 52 >> 2] = 0;
            c[5637] = (c[5637] | 0) + 1;
            b2 = qG(43) | 0;
            if (!b2)
              g2 = 0;
            else {
              c[(b2 + 4 + 15 & -16) + -4 >> 2] = b2;
              g2 = b2 + 4 + 15 & -16;
            }
            b2 = c[d2 >> 2] | 0;
            if ((b2 | 0) > 0) {
              d2 = 0;
              do {
                m2 = g2 + (d2 * 12 | 0) | 0;
                n2 = (c[i2 >> 2] | 0) + (d2 * 12 | 0) | 0;
                c[m2 >> 2] = c[n2 >> 2];
                c[m2 + 4 >> 2] = c[n2 + 4 >> 2];
                c[m2 + 8 >> 2] = c[n2 + 8 >> 2];
                d2 = d2 + 1 | 0;
              } while ((d2 | 0) != (b2 | 0));
            }
            b2 = c[i2 >> 2] | 0;
            if (!b2) {
              a[h2 >> 0] = 1;
              c[i2 >> 2] = g2;
              c[j2 >> 2] = 2;
              ui(k2);
              n2 = l2 + 44 | 0;
              c[n2 >> 2] = k2;
              n2 = e2 + 4 | 0;
              n2 = c[n2 >> 2] | 0;
              n2 = n2 + 72 | 0;
              n2 = c[n2 >> 2] | 0;
              m2 = l2 + 68 | 0;
              c[m2 >> 2] = n2;
              m2 = f2 + 4 | 0;
              m2 = c[m2 >> 2] | 0;
              m2 = m2 + 72 | 0;
              m2 = c[m2 >> 2] | 0;
              n2 = l2 + 72 | 0;
              c[n2 >> 2] = m2;
              return l2 | 0;
            }
            if (a[h2 >> 0] | 0) {
              c[5638] = (c[5638] | 0) + 1;
              rG(c[b2 + -4 >> 2] | 0);
            }
            c[i2 >> 2] = 0;
            a[h2 >> 0] = 1;
            c[i2 >> 2] = g2;
            c[j2 >> 2] = 2;
            ui(k2);
            n2 = l2 + 44 | 0;
            c[n2 >> 2] = k2;
            n2 = e2 + 4 | 0;
            n2 = c[n2 >> 2] | 0;
            n2 = n2 + 72 | 0;
            n2 = c[n2 >> 2] | 0;
            m2 = l2 + 68 | 0;
            c[m2 >> 2] = n2;
            m2 = f2 + 4 | 0;
            m2 = c[m2 >> 2] | 0;
            m2 = m2 + 72 | 0;
            m2 = c[m2 >> 2] | 0;
            n2 = l2 + 72 | 0;
            c[n2 >> 2] = m2;
            return l2 | 0;
          }
          function Sh(a2) {
            a2 = a2 | 0;
            rG(a2);
            return;
          }
          function Th(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            a2 = c[b2 >> 2] | 0;
            a2 = Ob[c[(c[a2 >> 2] | 0) + 56 >> 2] & 31](a2, 44) | 0;
            sg(a2, b2, d2, e2, 1);
            return a2 | 0;
          }
          function Uh(a2) {
            a2 = a2 | 0;
            rG(a2);
            return;
          }
          function Vh(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            a2 = c[b2 >> 2] | 0;
            a2 = Ob[c[(c[a2 >> 2] | 0) + 56 >> 2] & 31](a2, 8) | 0;
            c[a2 + 4 >> 2] = c[b2 >> 2];
            c[a2 >> 2] = 4316;
            return a2 | 0;
          }
          function Wh(a2) {
            a2 = a2 | 0;
            rG(a2);
            return;
          }
          function Xh(b2, d2, e2, f2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            b2 = c[d2 >> 2] | 0;
            b2 = Ob[c[(c[b2 >> 2] | 0) + 56 >> 2] & 31](b2, 16) | 0;
            d2 = c[d2 >> 2] | 0;
            c[b2 + 4 >> 2] = d2;
            c[b2 >> 2] = 4512;
            a[b2 + 8 >> 0] = 0;
            c[b2 + 12 >> 2] = 0;
            c[b2 + 12 >> 2] = Eb[c[(c[d2 >> 2] | 0) + 12 >> 2] & 63](d2, c[e2 + 8 >> 2] | 0, c[f2 + 8 >> 2] | 0) | 0;
            a[b2 + 8 >> 0] = 1;
            return b2 | 0;
          }
          function Yh(a2) {
            a2 = a2 | 0;
            rG(a2);
            return;
          }
          function Zh(b2, d2, e2, f2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            var g2 = 0, h2 = 0;
            g2 = c[d2 >> 2] | 0;
            g2 = Ob[c[(c[g2 >> 2] | 0) + 56 >> 2] & 31](g2, 20) | 0;
            h2 = c[d2 + 4 >> 2] | 0;
            b2 = a[b2 + 4 >> 0] | 0;
            d2 = c[d2 >> 2] | 0;
            c[g2 + 4 >> 2] = d2;
            c[g2 >> 2] = 4540;
            a[g2 + 8 >> 0] = 0;
            c[g2 + 12 >> 2] = h2;
            a[g2 + 16 >> 0] = b2;
            if (h2 | 0)
              return g2 | 0;
            c[g2 + 12 >> 2] = Eb[c[(c[d2 >> 2] | 0) + 12 >> 2] & 63](d2, c[e2 + 8 >> 2] | 0, c[f2 + 8 >> 2] | 0) | 0;
            a[g2 + 8 >> 0] = 1;
            return g2 | 0;
          }
          function _h(a2) {
            a2 = a2 | 0;
            rG(a2);
            return;
          }
          function $h(b2, d2, e2, f2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            b2 = c[d2 >> 2] | 0;
            b2 = Ob[c[(c[b2 >> 2] | 0) + 56 >> 2] & 31](b2, 16) | 0;
            d2 = c[d2 >> 2] | 0;
            c[b2 + 4 >> 2] = d2;
            c[b2 >> 2] = 3016;
            a[b2 + 8 >> 0] = 0;
            c[b2 + 12 >> 2] = 0;
            if (!(Eb[c[(c[d2 >> 2] | 0) + 24 >> 2] & 63](d2, c[e2 + 8 >> 2] | 0, c[f2 + 8 >> 2] | 0) | 0))
              return b2 | 0;
            d2 = c[b2 + 4 >> 2] | 0;
            c[b2 + 12 >> 2] = Eb[c[(c[d2 >> 2] | 0) + 12 >> 2] & 63](d2, c[e2 + 8 >> 2] | 0, c[f2 + 8 >> 2] | 0) | 0;
            a[b2 + 8 >> 0] = 1;
            return b2 | 0;
          }
          function ai(a2) {
            a2 = a2 | 0;
            rG(a2);
            return;
          }
          function bi(b2, d2, e2, f2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            var g2 = 0, h2 = 0, i2 = 0, j2 = 0;
            h2 = c[d2 >> 2] | 0;
            h2 = Ob[c[(c[h2 >> 2] | 0) + 56 >> 2] & 31](h2, 28) | 0;
            j2 = (a[b2 + 4 >> 0] | 0) == 0;
            i2 = c[b2 + 8 >> 2] | 0;
            g2 = c[b2 + 12 >> 2] | 0;
            b2 = c[d2 >> 2] | 0;
            c[h2 + 4 >> 2] = b2;
            c[h2 >> 2] = 4056;
            a[h2 + 8 >> 0] = 0;
            c[h2 + 12 >> 2] = 0;
            if (j2) {
              a[h2 + 16 >> 0] = 0;
              c[h2 + 20 >> 2] = i2;
              c[h2 + 24 >> 2] = g2;
              if (!(Eb[c[(c[b2 >> 2] | 0) + 24 >> 2] & 63](b2, c[e2 + 8 >> 2] | 0, c[f2 + 8 >> 2] | 0) | 0))
                return h2 | 0;
              j2 = c[h2 + 4 >> 2] | 0;
              c[h2 + 12 >> 2] = Eb[c[(c[j2 >> 2] | 0) + 12 >> 2] & 63](j2, c[e2 + 8 >> 2] | 0, c[f2 + 8 >> 2] | 0) | 0;
              a[h2 + 8 >> 0] = 1;
              return h2 | 0;
            } else {
              a[h2 + 16 >> 0] = 1;
              c[h2 + 20 >> 2] = i2;
              c[h2 + 24 >> 2] = g2;
              if (!(Eb[c[(c[b2 >> 2] | 0) + 24 >> 2] & 63](b2, c[f2 + 8 >> 2] | 0, c[e2 + 8 >> 2] | 0) | 0))
                return h2 | 0;
              j2 = c[h2 + 4 >> 2] | 0;
              c[h2 + 12 >> 2] = Eb[c[(c[j2 >> 2] | 0) + 12 >> 2] & 63](j2, c[f2 + 8 >> 2] | 0, c[e2 + 8 >> 2] | 0) | 0;
              a[h2 + 8 >> 0] = 1;
              return h2 | 0;
            }
            return 0;
          }
          function ci(a2) {
            a2 = a2 | 0;
            rG(a2);
            return;
          }
          function di(a2, b2, c2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            return;
          }
          function ei(a2, b2, c2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            return 1;
          }
          function fi(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            return;
          }
          function gi(b2) {
            b2 = b2 | 0;
            var d2 = 0;
            c[b2 >> 2] = 4344;
            d2 = c[b2 + 300 >> 2] | 0;
            if (d2 | 0) {
              if (a[b2 + 304 >> 0] | 0) {
                c[5638] = (c[5638] | 0) + 1;
                rG(c[d2 + -4 >> 2] | 0);
              }
              c[b2 + 300 >> 2] = 0;
            }
            a[b2 + 304 >> 0] = 1;
            c[b2 + 300 >> 2] = 0;
            c[b2 + 292 >> 2] = 0;
            c[b2 + 296 >> 2] = 0;
            c[b2 >> 2] = 3156;
            d2 = c[b2 + 276 >> 2] | 0;
            if (!d2) {
              a[b2 + 280 >> 0] = 1;
              c[b2 + 276 >> 2] = 0;
              c[b2 + 268 >> 2] = 0;
              b2 = b2 + 272 | 0;
              c[b2 >> 2] = 0;
              return;
            }
            if (a[b2 + 280 >> 0] | 0) {
              c[5638] = (c[5638] | 0) + 1;
              rG(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 276 >> 2] = 0;
            a[b2 + 280 >> 0] = 1;
            c[b2 + 276 >> 2] = 0;
            c[b2 + 268 >> 2] = 0;
            b2 = b2 + 272 | 0;
            c[b2 >> 2] = 0;
            return;
          }
          function hi(b2) {
            b2 = b2 | 0;
            var d2 = 0;
            c[b2 >> 2] = 4344;
            d2 = c[b2 + 300 >> 2] | 0;
            if (d2 | 0) {
              if (a[b2 + 304 >> 0] | 0) {
                c[5638] = (c[5638] | 0) + 1;
                rG(c[d2 + -4 >> 2] | 0);
              }
              c[b2 + 300 >> 2] = 0;
            }
            a[b2 + 304 >> 0] = 1;
            c[b2 + 300 >> 2] = 0;
            c[b2 + 292 >> 2] = 0;
            c[b2 + 296 >> 2] = 0;
            c[b2 >> 2] = 3156;
            d2 = c[b2 + 276 >> 2] | 0;
            if (d2 | 0) {
              if (a[b2 + 280 >> 0] | 0) {
                c[5638] = (c[5638] | 0) + 1;
                rG(c[d2 + -4 >> 2] | 0);
              }
              c[b2 + 276 >> 2] = 0;
            }
            a[b2 + 280 >> 0] = 1;
            c[b2 + 276 >> 2] = 0;
            c[b2 + 268 >> 2] = 0;
            c[b2 + 272 >> 2] = 0;
            c[5638] = (c[5638] | 0) + 1;
            rG(c[b2 + -4 >> 2] | 0);
            return;
          }
          function ii(b2, d2, e2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, g2 = 0, h2 = 0;
            g2 = c[d2 >> 2] | 0;
            d2 = c[b2 + 292 >> 2] | 0;
            a:
              do
                if ((d2 | 0) > 0) {
                  f2 = c[b2 + 300 >> 2] | 0;
                  e2 = 0;
                  while (1) {
                    if ((c[f2 + (e2 << 2) >> 2] | 0) == (g2 | 0))
                      break;
                    e2 = e2 + 1 | 0;
                    if ((e2 | 0) >= (d2 | 0))
                      break a;
                  }
                  if ((e2 | 0) != (d2 | 0))
                    return;
                }
              while (0);
            if ((d2 | 0) == (c[b2 + 296 >> 2] | 0) ? (h2 = d2 | 0 ? d2 << 1 : 1, (d2 | 0) < (h2 | 0)) : 0) {
              if (!h2)
                f2 = 0;
              else {
                c[5637] = (c[5637] | 0) + 1;
                d2 = qG((h2 << 2 | 3) + 16 | 0) | 0;
                if (!d2)
                  d2 = 0;
                else {
                  c[(d2 + 4 + 15 & -16) + -4 >> 2] = d2;
                  d2 = d2 + 4 + 15 & -16;
                }
                f2 = d2;
                d2 = c[b2 + 292 >> 2] | 0;
              }
              if ((d2 | 0) > 0) {
                e2 = 0;
                do {
                  c[f2 + (e2 << 2) >> 2] = c[(c[b2 + 300 >> 2] | 0) + (e2 << 2) >> 2];
                  e2 = e2 + 1 | 0;
                } while ((e2 | 0) != (d2 | 0));
              }
              e2 = c[b2 + 300 >> 2] | 0;
              if (e2) {
                if (a[b2 + 304 >> 0] | 0) {
                  c[5638] = (c[5638] | 0) + 1;
                  rG(c[e2 + -4 >> 2] | 0);
                  d2 = c[b2 + 292 >> 2] | 0;
                }
                c[b2 + 300 >> 2] = 0;
              }
              a[b2 + 304 >> 0] = 1;
              c[b2 + 300 >> 2] = f2;
              c[b2 + 296 >> 2] = h2;
            }
            c[(c[b2 + 300 >> 2] | 0) + (d2 << 2) >> 2] = g2;
            c[b2 + 292 >> 2] = d2 + 1;
            return;
          }
          function ji(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, g2 = 0, h2 = 0;
            g2 = c[a2 + 292 >> 2] | 0;
            if ((g2 | 0) <= 0)
              return;
            b2 = c[b2 >> 2] | 0;
            f2 = c[a2 + 300 >> 2] | 0;
            d2 = 0;
            while (1) {
              e2 = f2 + (d2 << 2) | 0;
              if ((c[e2 >> 2] | 0) == (b2 | 0))
                break;
              d2 = d2 + 1 | 0;
              if ((d2 | 0) >= (g2 | 0)) {
                h2 = 7;
                break;
              }
            }
            if ((h2 | 0) == 7)
              return;
            if ((d2 | 0) >= (g2 | 0))
              return;
            c[e2 >> 2] = c[f2 + (g2 + -1 << 2) >> 2];
            c[a2 + 292 >> 2] = g2 + -1;
            return;
          }
          function ki(b2) {
            b2 = b2 | 0;
            var d2 = 0;
            c[b2 >> 2] = 4388;
            d2 = c[b2 + 308 >> 2] | 0;
            rb[c[c[d2 >> 2] >> 2] & 255](d2);
            d2 = c[b2 + 308 >> 2] | 0;
            if (d2 | 0) {
              c[5638] = (c[5638] | 0) + 1;
              rG(c[d2 + -4 >> 2] | 0);
            }
            c[b2 >> 2] = 4344;
            d2 = c[b2 + 300 >> 2] | 0;
            if (d2 | 0) {
              if (a[b2 + 304 >> 0] | 0) {
                c[5638] = (c[5638] | 0) + 1;
                rG(c[d2 + -4 >> 2] | 0);
              }
              c[b2 + 300 >> 2] = 0;
            }
            a[b2 + 304 >> 0] = 1;
            c[b2 + 300 >> 2] = 0;
            c[b2 + 292 >> 2] = 0;
            c[b2 + 296 >> 2] = 0;
            c[b2 >> 2] = 3156;
            d2 = c[b2 + 276 >> 2] | 0;
            if (!d2) {
              a[b2 + 280 >> 0] = 1;
              c[b2 + 276 >> 2] = 0;
              c[b2 + 268 >> 2] = 0;
              b2 = b2 + 272 | 0;
              c[b2 >> 2] = 0;
              return;
            }
            if (a[b2 + 280 >> 0] | 0) {
              c[5638] = (c[5638] | 0) + 1;
              rG(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 276 >> 2] = 0;
            a[b2 + 280 >> 0] = 1;
            c[b2 + 276 >> 2] = 0;
            c[b2 + 268 >> 2] = 0;
            b2 = b2 + 272 | 0;
            c[b2 >> 2] = 0;
            return;
          }
          function li(a2) {
            a2 = a2 | 0;
            ki(a2);
            if (!a2)
              return;
            c[5638] = (c[5638] | 0) + 1;
            rG(c[a2 + -4 >> 2] | 0);
            return;
          }
          function mi(b2, d2, e2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, g2 = 0, h2 = 0, i2 = 0, j2 = 0;
            if (!e2)
              e2 = c[b2 + 188 >> 2] | 0;
            j2 = c[d2 >> 2] | 0;
            f2 = c[b2 + 292 >> 2] | 0;
            a:
              do
                if ((f2 | 0) > 0) {
                  h2 = c[b2 + 300 >> 2] | 0;
                  g2 = 0;
                  while (1) {
                    if ((c[h2 + (g2 << 2) >> 2] | 0) == (j2 | 0))
                      break;
                    g2 = g2 + 1 | 0;
                    if ((g2 | 0) >= (f2 | 0))
                      break a;
                  }
                  if ((g2 | 0) != (f2 | 0))
                    return;
                }
              while (0);
            if ((f2 | 0) == (c[b2 + 296 >> 2] | 0) ? (i2 = f2 | 0 ? f2 << 1 : 1, (f2 | 0) < (i2 | 0)) : 0) {
              if (!i2)
                h2 = 0;
              else {
                c[5637] = (c[5637] | 0) + 1;
                f2 = qG((i2 << 2 | 3) + 16 | 0) | 0;
                if (!f2)
                  f2 = 0;
                else {
                  c[(f2 + 4 + 15 & -16) + -4 >> 2] = f2;
                  f2 = f2 + 4 + 15 & -16;
                }
                h2 = f2;
                f2 = c[b2 + 292 >> 2] | 0;
              }
              if ((f2 | 0) > 0) {
                g2 = 0;
                do {
                  c[h2 + (g2 << 2) >> 2] = c[(c[b2 + 300 >> 2] | 0) + (g2 << 2) >> 2];
                  g2 = g2 + 1 | 0;
                } while ((g2 | 0) != (f2 | 0));
              }
              g2 = c[b2 + 300 >> 2] | 0;
              if (g2) {
                if (a[b2 + 304 >> 0] | 0) {
                  c[5638] = (c[5638] | 0) + 1;
                  rG(c[g2 + -4 >> 2] | 0);
                  f2 = c[b2 + 292 >> 2] | 0;
                }
                c[b2 + 300 >> 2] = 0;
              }
              a[b2 + 304 >> 0] = 1;
              c[b2 + 300 >> 2] = h2;
              c[b2 + 296 >> 2] = i2;
            }
            c[(c[b2 + 300 >> 2] | 0) + (f2 << 2) >> 2] = j2;
            c[b2 + 292 >> 2] = f2 + 1;
            b2 = c[b2 + 308 >> 2] | 0;
            Eb[c[(c[b2 >> 2] | 0) + 8 >> 2] & 63](b2, e2, d2) | 0;
            return;
          }
          function ni(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, g2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0;
            j2 = c[b2 >> 2] | 0;
            if (!e2)
              e2 = c[a2 + 188 >> 2] | 0;
            h2 = c[a2 + 292 >> 2] | 0;
            if ((h2 | 0) <= 0)
              return;
            i2 = c[a2 + 300 >> 2] | 0;
            f2 = 0;
            while (1) {
              g2 = i2 + (f2 << 2) | 0;
              if ((c[g2 >> 2] | 0) == (j2 | 0))
                break;
              f2 = f2 + 1 | 0;
              if ((f2 | 0) >= (h2 | 0)) {
                k2 = 9;
                break;
              }
            }
            if ((k2 | 0) == 9)
              return;
            if ((f2 | 0) >= (h2 | 0))
              return;
            c[g2 >> 2] = c[i2 + (h2 + -1 << 2) >> 2];
            c[a2 + 292 >> 2] = h2 + -1;
            k2 = c[a2 + 308 >> 2] | 0;
            zb[c[(c[k2 >> 2] | 0) + 12 >> 2] & 31](k2, e2, b2, d2) | 0;
            return;
          }
          function oi(b2) {
            b2 = b2 | 0;
            var d2 = 0;
            c[b2 + 164 >> 2] = 1065353216;
            c[b2 + 168 >> 2] = 1065353216;
            c[b2 + 172 >> 2] = 1065353216;
            g[b2 + 176 >> 2] = 0;
            c[b2 + 180 >> 2] = 0;
            g[b2 + 184 >> 2] = 999999984306749400;
            c[b2 + 188 >> 2] = 0;
            c[b2 + 188 + 4 >> 2] = 0;
            c[b2 + 188 + 8 >> 2] = 0;
            c[b2 + 188 + 12 >> 2] = 0;
            c[b2 + 204 >> 2] = 1;
            c[b2 + 208 >> 2] = -1;
            c[b2 + 212 >> 2] = -1;
            c[b2 + 216 >> 2] = 1;
            g[b2 + 220 >> 2] = 0;
            g[b2 + 224 >> 2] = 0.5;
            g[b2 + 228 >> 2] = 0;
            g[b2 + 232 >> 2] = 0;
            c[b2 + 240 >> 2] = 0;
            c[b2 + 244 >> 2] = -1;
            g[b2 + 248 >> 2] = 1;
            g[b2 + 252 >> 2] = 0;
            g[b2 + 256 >> 2] = 0;
            c[b2 + 260 >> 2] = 0;
            a[b2 + 280 >> 0] = 1;
            c[b2 + 276 >> 2] = 0;
            c[b2 + 268 >> 2] = 0;
            c[b2 + 272 >> 2] = 0;
            c[b2 + 284 >> 2] = 0;
            c[b2 + 4 >> 2] = 1065353216;
            c[b2 + 8 >> 2] = 0;
            c[b2 + 8 + 4 >> 2] = 0;
            c[b2 + 8 + 8 >> 2] = 0;
            c[b2 + 8 + 12 >> 2] = 0;
            c[b2 + 24 >> 2] = 1065353216;
            c[b2 + 28 >> 2] = 0;
            c[b2 + 28 + 4 >> 2] = 0;
            c[b2 + 28 + 8 >> 2] = 0;
            c[b2 + 28 + 12 >> 2] = 0;
            c[b2 + 44 >> 2] = 1065353216;
            c[b2 + 48 >> 2] = 0;
            c[b2 + 48 + 4 >> 2] = 0;
            c[b2 + 48 + 8 >> 2] = 0;
            c[b2 + 48 + 12 >> 2] = 0;
            c[b2 + 48 + 16 >> 2] = 0;
            a[b2 + 304 >> 0] = 1;
            c[b2 + 300 >> 2] = 0;
            c[b2 + 292 >> 2] = 0;
            c[b2 + 296 >> 2] = 0;
            c[b2 + 236 >> 2] = 4;
            c[b2 >> 2] = 4388;
            c[5637] = (c[5637] | 0) + 1;
            d2 = qG(91) | 0;
            if (!d2) {
              d2 = 0;
              de(d2);
              b2 = b2 + 308 | 0;
              c[b2 >> 2] = d2;
              return;
            }
            c[(d2 + 4 + 15 & -16) + -4 >> 2] = d2;
            d2 = d2 + 4 + 15 & -16;
            de(d2);
            b2 = b2 + 308 | 0;
            c[b2 >> 2] = d2;
            return;
          }
          function pi(a2, b2, d2, e2, f2, h2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            h2 = +h2;
            var j2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0, N2 = 0, O2 = 0;
            K2 = i;
            i = i + 288 | 0;
            c[K2 + 144 >> 2] = c[d2 >> 2];
            c[K2 + 144 + 4 >> 2] = c[d2 + 4 >> 2];
            c[K2 + 144 + 8 >> 2] = c[d2 + 8 >> 2];
            c[K2 + 144 + 12 >> 2] = c[d2 + 12 >> 2];
            c[K2 + 144 + 16 >> 2] = c[d2 + 16 >> 2];
            c[K2 + 144 + 16 + 4 >> 2] = c[d2 + 16 + 4 >> 2];
            c[K2 + 144 + 16 + 8 >> 2] = c[d2 + 16 + 8 >> 2];
            c[K2 + 144 + 16 + 12 >> 2] = c[d2 + 16 + 12 >> 2];
            c[K2 + 144 + 32 >> 2] = c[d2 + 32 >> 2];
            c[K2 + 144 + 32 + 4 >> 2] = c[d2 + 32 + 4 >> 2];
            c[K2 + 144 + 32 + 8 >> 2] = c[d2 + 32 + 8 >> 2];
            c[K2 + 144 + 32 + 12 >> 2] = c[d2 + 32 + 12 >> 2];
            c[K2 + 144 + 48 >> 2] = c[d2 + 48 >> 2];
            c[K2 + 144 + 48 + 4 >> 2] = c[d2 + 48 + 4 >> 2];
            c[K2 + 144 + 48 + 8 >> 2] = c[d2 + 48 + 8 >> 2];
            c[K2 + 144 + 48 + 12 >> 2] = c[d2 + 48 + 12 >> 2];
            c[K2 + 80 >> 2] = c[e2 >> 2];
            c[K2 + 80 + 4 >> 2] = c[e2 + 4 >> 2];
            c[K2 + 80 + 8 >> 2] = c[e2 + 8 >> 2];
            c[K2 + 80 + 12 >> 2] = c[e2 + 12 >> 2];
            c[K2 + 80 + 16 >> 2] = c[e2 + 16 >> 2];
            c[K2 + 80 + 16 + 4 >> 2] = c[e2 + 16 + 4 >> 2];
            c[K2 + 80 + 16 + 8 >> 2] = c[e2 + 16 + 8 >> 2];
            c[K2 + 80 + 16 + 12 >> 2] = c[e2 + 16 + 12 >> 2];
            c[K2 + 80 + 32 >> 2] = c[e2 + 32 >> 2];
            c[K2 + 80 + 32 + 4 >> 2] = c[e2 + 32 + 4 >> 2];
            c[K2 + 80 + 32 + 8 >> 2] = c[e2 + 32 + 8 >> 2];
            c[K2 + 80 + 32 + 12 >> 2] = c[e2 + 32 + 12 >> 2];
            c[K2 + 80 + 48 >> 2] = c[e2 + 48 >> 2];
            c[K2 + 80 + 48 + 4 >> 2] = c[e2 + 48 + 4 >> 2];
            c[K2 + 80 + 48 + 8 >> 2] = c[e2 + 48 + 8 >> 2];
            c[K2 + 80 + 48 + 12 >> 2] = c[e2 + 48 + 12 >> 2];
            m2 = +g[K2 + 80 + 52 >> 2] - +g[K2 + 144 + 52 >> 2];
            O2 = +g[K2 + 80 + 56 >> 2] - +g[K2 + 144 + 56 >> 2];
            g[K2 + 32 >> 2] = +g[K2 + 80 + 48 >> 2] - +g[K2 + 144 + 48 >> 2];
            g[K2 + 32 + 4 >> 2] = m2;
            g[K2 + 32 + 8 >> 2] = O2;
            g[K2 + 32 + 12 >> 2] = 0;
            Zf(K2 + 144 | 0, K2 + 80 | 0, K2 + 224 | 0, K2 + 208 | 0);
            O2 = +g[K2 + 208 >> 2];
            m2 = O2 * +g[K2 + 224 + 4 >> 2];
            L2 = O2 * +g[K2 + 224 + 8 >> 2];
            g[K2 + 16 >> 2] = +g[K2 + 224 >> 2] * O2;
            g[K2 + 16 + 4 >> 2] = m2;
            g[K2 + 16 + 8 >> 2] = L2;
            g[K2 + 16 + 12 >> 2] = 0;
            c[K2 + 224 + 4 >> 2] = 0;
            c[K2 + 224 + 4 + 4 >> 2] = 0;
            c[K2 + 224 + 24 >> 2] = 0;
            c[K2 + 224 + 24 + 4 >> 2] = 0;
            J2 = K2 + 224 + 44 | 0;
            c[J2 >> 2] = 0;
            c[J2 + 4 >> 2] = 0;
            c[J2 + 8 >> 2] = 0;
            c[J2 + 12 >> 2] = 0;
            c[J2 + 16 >> 2] = 0;
            _f(K2 + 144 | 0, K2);
            L2 = +g[K2 >> 2];
            m2 = +g[K2 + 4 >> 2];
            O2 = +g[K2 + 8 >> 2];
            M2 = +g[K2 + 12 >> 2];
            j2 = L2 * (2 / (L2 * L2 + m2 * m2 + O2 * O2 + M2 * M2));
            o2 = m2 * (2 / (L2 * L2 + m2 * m2 + O2 * O2 + M2 * M2));
            N2 = O2 * (2 / (L2 * L2 + m2 * m2 + O2 * O2 + M2 * M2));
            g[K2 + 224 >> 2] = 1 - (m2 * o2 + O2 * N2);
            g[K2 + 224 + 4 >> 2] = L2 * o2 - M2 * N2;
            g[K2 + 224 + 8 >> 2] = L2 * N2 + M2 * o2;
            g[K2 + 224 + 12 >> 2] = 0;
            g[K2 + 224 + 16 >> 2] = L2 * o2 + M2 * N2;
            g[K2 + 224 + 20 >> 2] = 1 - (L2 * j2 + O2 * N2);
            g[K2 + 224 + 24 >> 2] = m2 * N2 - M2 * j2;
            g[K2 + 224 + 28 >> 2] = 0;
            g[K2 + 224 + 32 >> 2] = L2 * N2 - M2 * o2;
            g[K2 + 224 + 36 >> 2] = m2 * N2 + M2 * j2;
            g[K2 + 224 + 40 >> 2] = 1 - (L2 * j2 + m2 * o2);
            g[J2 >> 2] = 0;
            _j(b2, K2 + 224 | 0, K2 + 32 | 0, K2 + 16 | 0, K2 + 64 | 0, K2 + 48 | 0);
            if ((c[a2 + 292 >> 2] | 0) <= 0) {
              i = K2;
              return;
            }
            I2 = 0;
            do {
              p2 = c[(c[a2 + 300 >> 2] | 0) + (I2 << 2) >> 2] | 0;
              if (Ob[c[(c[f2 >> 2] | 0) + 8 >> 2] & 31](f2, c[p2 + 188 >> 2] | 0) | 0 ? (C2 = c[p2 + 192 >> 2] | 0, bc[c[(c[C2 >> 2] | 0) + 8 >> 2] & 127](C2, p2 + 4 | 0, K2 + 208 | 0, K2 + 32 | 0), q2 = +g[K2 + 208 >> 2] + +g[K2 + 64 >> 2], r2 = +g[K2 + 208 + 4 >> 2] + +g[K2 + 64 + 4 >> 2], s2 = +g[K2 + 208 + 8 >> 2] + +g[K2 + 64 + 8 >> 2], g[K2 + 208 >> 2] = q2, g[K2 + 208 + 4 >> 2] = r2, g[K2 + 208 + 8 >> 2] = s2, g[K2 + 208 + 12 >> 2] = 0, t2 = +g[K2 + 32 >> 2] + +g[K2 + 48 >> 2], u2 = +g[K2 + 32 + 4 >> 2] + +g[K2 + 48 + 4 >> 2], v2 = +g[K2 + 32 + 8 >> 2] + +g[K2 + 48 + 8 >> 2], g[K2 + 32 >> 2] = t2, g[K2 + 32 + 4 >> 2] = u2, g[K2 + 32 + 8 >> 2] = v2, g[K2 + 32 + 12 >> 2] = 0, w2 = +g[d2 + 48 >> 2] - (t2 + q2) * 0.5, x2 = +g[d2 + 52 >> 2] - (u2 + r2) * 0.5, y2 = +g[d2 + 56 >> 2] - (v2 + s2) * 0.5, z2 = +g[e2 + 48 >> 2] - (t2 + q2) * 0.5, A2 = +g[e2 + 52 >> 2] - (u2 + r2) * 0.5, B2 = +g[e2 + 56 >> 2] - (v2 + s2) * 0.5, C2 = w2 < -((t2 - q2) * 0.5) | (w2 > (t2 - q2) * 0.5 ? 8 : 0) | (x2 < -((u2 - r2) * 0.5) ? 2 : 0) | (x2 > (u2 - r2) * 0.5 ? 16 : 0) | (y2 < -((v2 - s2) * 0.5) ? 4 : 0) | (y2 > (v2 - s2) * 0.5 ? 32 : 0), D2 = z2 < -((t2 - q2) * 0.5) | (z2 > (t2 - q2) * 0.5 ? 8 : 0) | (A2 < -((u2 - r2) * 0.5) ? 2 : 0) | (A2 > (u2 - r2) * 0.5 ? 16 : 0) | (B2 < -((v2 - s2) * 0.5) ? 4 : 0) | (B2 > (v2 - s2) * 0.5 ? 32 : 0), (C2 & D2 | 0) == 0) : 0) {
                H2 = 1;
                J2 = 0;
                j2 = 0;
                l2 = 1065353216;
                o2 = 1;
                while (1) {
                  if (!(H2 & C2)) {
                    if ((H2 & D2 | 0) != 0 ? (E2 = (-w2 - o2 * ((t2 - q2) * 0.5)) / (z2 - w2), E2 < (c[k >> 2] = l2, +g[k >> 2])) : 0)
                      l2 = (g[k >> 2] = E2, c[k >> 2] | 0);
                  } else {
                    m2 = (-w2 - o2 * ((t2 - q2) * 0.5)) / (z2 - w2);
                    if (j2 <= m2)
                      j2 = m2;
                  }
                  n2 = H2 << 1;
                  if (!(n2 & C2))
                    if ((n2 & D2 | 0) != 0 ? (F2 = (-x2 - o2 * ((u2 - r2) * 0.5)) / (A2 - x2), F2 < (c[k >> 2] = l2, +g[k >> 2])) : 0) {
                      m2 = j2;
                      l2 = (g[k >> 2] = F2, c[k >> 2] | 0);
                    } else
                      m2 = j2;
                  else {
                    m2 = (-x2 - o2 * ((u2 - r2) * 0.5)) / (A2 - x2);
                    if (!(j2 <= m2))
                      m2 = j2;
                  }
                  n2 = H2 << 2;
                  if (!(n2 & C2))
                    if ((n2 & D2 | 0) != 0 ? (G2 = (-y2 - o2 * ((v2 - s2) * 0.5)) / (B2 - y2), G2 < (c[k >> 2] = l2, +g[k >> 2])) : 0) {
                      j2 = m2;
                      l2 = (g[k >> 2] = G2, c[k >> 2] | 0);
                    } else
                      j2 = m2;
                  else {
                    j2 = (-y2 - o2 * ((v2 - s2) * 0.5)) / (B2 - y2);
                    if (!(m2 <= j2))
                      j2 = m2;
                  }
                  J2 = J2 + 1 | 0;
                  if ((J2 | 0) == 2)
                    break;
                  else {
                    H2 = H2 << 3;
                    o2 = -1;
                  }
                }
                if (j2 <= (c[k >> 2] = l2, +g[k >> 2])) {
                  J2 = c[p2 + 192 >> 2] | 0;
                  c[K2 + 224 >> 2] = 0;
                  c[K2 + 224 + 4 >> 2] = J2;
                  c[K2 + 224 + 8 >> 2] = p2;
                  c[K2 + 224 + 12 >> 2] = p2 + 4;
                  c[K2 + 224 + 16 >> 2] = -1;
                  c[K2 + 224 + 20 >> 2] = -1;
                  Pf(b2, K2 + 144 | 0, K2 + 80 | 0, K2 + 224 | 0, f2, h2);
                }
              }
              I2 = I2 + 1 | 0;
            } while ((I2 | 0) < (c[a2 + 292 >> 2] | 0));
            i = K2;
            return;
          }
          function qi(b2) {
            b2 = b2 | 0;
            var d2 = 0;
            c[b2 >> 2] = 4432;
            d2 = c[b2 + 56 >> 2] | 0;
            if (d2 | 0) {
              if (a[b2 + 60 >> 0] | 0) {
                c[5638] = (c[5638] | 0) + 1;
                rG(c[d2 + -4 >> 2] | 0);
              }
              c[b2 + 56 >> 2] = 0;
            }
            a[b2 + 60 >> 0] = 1;
            c[b2 + 56 >> 2] = 0;
            c[b2 + 48 >> 2] = 0;
            c[b2 + 52 >> 2] = 0;
            d2 = c[b2 + 36 >> 2] | 0;
            if (d2 | 0) {
              if (a[b2 + 40 >> 0] | 0) {
                c[5638] = (c[5638] | 0) + 1;
                rG(c[d2 + -4 >> 2] | 0);
              }
              c[b2 + 36 >> 2] = 0;
            }
            a[b2 + 40 >> 0] = 1;
            c[b2 + 36 >> 2] = 0;
            c[b2 + 28 >> 2] = 0;
            c[b2 + 32 >> 2] = 0;
            d2 = c[b2 + 16 >> 2] | 0;
            if (!d2) {
              a[b2 + 20 >> 0] = 1;
              c[b2 + 16 >> 2] = 0;
              c[b2 + 8 >> 2] = 0;
              b2 = b2 + 12 | 0;
              c[b2 >> 2] = 0;
              return;
            }
            if (a[b2 + 20 >> 0] | 0) {
              c[5638] = (c[5638] | 0) + 1;
              rG(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 16 >> 2] = 0;
            a[b2 + 20 >> 0] = 1;
            c[b2 + 16 >> 2] = 0;
            c[b2 + 8 >> 2] = 0;
            b2 = b2 + 12 | 0;
            c[b2 >> 2] = 0;
            return;
          }
          function ri(a2) {
            a2 = a2 | 0;
            qi(a2);
            rG(a2);
            return;
          }
          function si(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0;
            c[4990] = (c[4990] | 0) + 1;
            g2 = ((d2 << 16 | b2) + ~((d2 << 16 | b2) << 15) >> 10 ^ (d2 << 16 | b2) + ~((d2 << 16 | b2) << 15)) * 9 | 0;
            l2 = c[a2 + 36 >> 2] | 0;
            g2 = l2 + (((c[a2 + 12 >> 2] | 0) + -1 & ((g2 >> 6 ^ g2) + ~((g2 >> 6 ^ g2) << 11) >> 16 ^ (g2 >> 6 ^ g2) + ~((g2 >> 6 ^ g2) << 11))) << 2) | 0;
            f2 = c[g2 >> 2] | 0;
            if ((f2 | 0) == -1) {
              n2 = 0;
              return n2 | 0;
            }
            m2 = c[a2 + 16 >> 2] | 0;
            e2 = f2;
            while (1) {
              k2 = m2 + (e2 * 12 | 0) | 0;
              if ((c[k2 >> 2] | 0) == (b2 | 0) ? (c[m2 + (e2 * 12 | 0) + 4 >> 2] | 0) == (d2 | 0) : 0)
                break;
              e2 = c[(c[a2 + 56 >> 2] | 0) + (e2 << 2) >> 2] | 0;
              if ((e2 | 0) == -1) {
                e2 = 0;
                n2 = 21;
                break;
              }
            }
            if ((n2 | 0) == 21)
              return e2 | 0;
            if (!k2) {
              n2 = 0;
              return n2 | 0;
            }
            j2 = c[m2 + (e2 * 12 | 0) + 8 >> 2] | 0;
            i2 = (e2 * 12 | 0) / 12 | 0;
            b2 = c[a2 + 56 >> 2] | 0;
            if ((f2 | 0) != (i2 | 0)) {
              while (1) {
                d2 = b2 + (f2 << 2) | 0;
                e2 = c[d2 >> 2] | 0;
                if ((e2 | 0) == (i2 | 0))
                  break;
                else
                  f2 = e2;
              }
              e2 = c[b2 + (i2 << 2) >> 2] | 0;
              if ((f2 | 0) == -1)
                n2 = 11;
              else
                c[d2 >> 2] = e2;
            } else {
              e2 = c[b2 + (f2 << 2) >> 2] | 0;
              n2 = 11;
            }
            if ((n2 | 0) == 11)
              c[g2 >> 2] = e2;
            g2 = (c[a2 + 8 >> 2] | 0) + -1 | 0;
            if ((g2 | 0) == (i2 | 0)) {
              c[a2 + 8 >> 2] = i2;
              n2 = j2;
              return n2 | 0;
            }
            h2 = c[m2 + (g2 * 12 | 0) + 4 >> 2] << 16 | c[m2 + (g2 * 12 | 0) >> 2];
            h2 = (h2 + ~(h2 << 15) >> 10 ^ h2 + ~(h2 << 15)) * 9 | 0;
            h2 = ((h2 >> 6 ^ h2) + ~((h2 >> 6 ^ h2) << 11) >> 16 ^ (h2 >> 6 ^ h2) + ~((h2 >> 6 ^ h2) << 11)) & (c[a2 + 12 >> 2] | 0) + -1;
            e2 = c[l2 + (h2 << 2) >> 2] | 0;
            b2 = c[a2 + 56 >> 2] | 0;
            if ((e2 | 0) != (g2 | 0)) {
              f2 = e2;
              while (1) {
                d2 = b2 + (f2 << 2) | 0;
                e2 = c[d2 >> 2] | 0;
                if ((e2 | 0) == (g2 | 0))
                  break;
                else
                  f2 = e2;
              }
              e2 = c[b2 + (g2 << 2) >> 2] | 0;
              if ((f2 | 0) == -1)
                n2 = 19;
              else
                c[d2 >> 2] = e2;
            } else {
              e2 = c[b2 + (g2 << 2) >> 2] | 0;
              n2 = 19;
            }
            if ((n2 | 0) == 19)
              c[l2 + (h2 << 2) >> 2] = e2;
            c[k2 >> 2] = c[m2 + (g2 * 12 | 0) >> 2];
            c[k2 + 4 >> 2] = c[m2 + (g2 * 12 | 0) + 4 >> 2];
            c[k2 + 8 >> 2] = c[m2 + (g2 * 12 | 0) + 8 >> 2];
            n2 = (c[a2 + 36 >> 2] | 0) + (h2 << 2) | 0;
            c[(c[a2 + 56 >> 2] | 0) + (i2 << 2) >> 2] = c[n2 >> 2];
            c[n2 >> 2] = i2;
            c[a2 + 8 >> 2] = (c[a2 + 8 >> 2] | 0) + -1;
            n2 = j2;
            return n2 | 0;
          }
          function ti(b2, d2, e2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, g2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0;
            c[4991] = (c[4991] | 0) + 1;
            k2 = ((e2 << 16 | d2) + ~((e2 << 16 | d2) << 15) >> 10 ^ (e2 << 16 | d2) + ~((e2 << 16 | d2) << 15)) * 9 | 0;
            k2 = (k2 >> 6 ^ k2) + ~((k2 >> 6 ^ k2) << 11) >> 16 ^ (k2 >> 6 ^ k2) + ~((k2 >> 6 ^ k2) << 11);
            l2 = c[b2 + 12 >> 2] | 0;
            f2 = c[(c[b2 + 36 >> 2] | 0) + ((l2 + -1 & k2) << 2) >> 2] | 0;
            a:
              do
                if ((f2 | 0) != -1) {
                  h2 = c[b2 + 16 >> 2] | 0;
                  while (1) {
                    g2 = h2 + (f2 * 12 | 0) | 0;
                    if ((c[g2 >> 2] | 0) == (d2 | 0) ? (c[h2 + (f2 * 12 | 0) + 4 >> 2] | 0) == (e2 | 0) : 0)
                      break;
                    f2 = c[(c[b2 + 56 >> 2] | 0) + (f2 << 2) >> 2] | 0;
                    if ((f2 | 0) == -1)
                      break a;
                  }
                  if (g2 | 0) {
                    b2 = g2;
                    return b2 | 0;
                  }
                }
              while (0);
            j2 = c[b2 + 8 >> 2] | 0;
            if ((j2 | 0) == (l2 | 0)) {
              h2 = l2 | 0 ? l2 << 1 : 1;
              if ((l2 | 0) < (h2 | 0)) {
                if (!h2) {
                  f2 = 0;
                  g2 = l2;
                } else {
                  c[5637] = (c[5637] | 0) + 1;
                  f2 = qG((h2 * 12 | 3) + 16 | 0) | 0;
                  if (!f2)
                    f2 = 0;
                  else {
                    c[(f2 + 4 + 15 & -16) + -4 >> 2] = f2;
                    f2 = f2 + 4 + 15 & -16;
                  }
                  g2 = c[b2 + 8 >> 2] | 0;
                }
                if ((g2 | 0) > 0) {
                  i2 = 0;
                  do {
                    m2 = f2 + (i2 * 12 | 0) | 0;
                    n2 = (c[b2 + 16 >> 2] | 0) + (i2 * 12 | 0) | 0;
                    c[m2 >> 2] = c[n2 >> 2];
                    c[m2 + 4 >> 2] = c[n2 + 4 >> 2];
                    c[m2 + 8 >> 2] = c[n2 + 8 >> 2];
                    i2 = i2 + 1 | 0;
                  } while ((i2 | 0) != (g2 | 0));
                }
                g2 = c[b2 + 16 >> 2] | 0;
                if (g2 | 0) {
                  if (a[b2 + 20 >> 0] | 0) {
                    c[5638] = (c[5638] | 0) + 1;
                    rG(c[g2 + -4 >> 2] | 0);
                  }
                  c[b2 + 16 >> 2] = 0;
                }
                a[b2 + 20 >> 0] = 1;
                c[b2 + 16 >> 2] = f2;
                c[b2 + 12 >> 2] = h2;
                f2 = c[b2 + 8 >> 2] | 0;
              } else {
                f2 = l2;
                h2 = l2;
              }
            } else {
              f2 = j2;
              h2 = l2;
            }
            c[b2 + 8 >> 2] = f2 + 1;
            g2 = c[b2 + 16 >> 2] | 0;
            if ((l2 | 0) < (h2 | 0)) {
              ui(b2);
              f2 = (c[b2 + 12 >> 2] | 0) + -1 & k2;
            } else
              f2 = l2 + -1 & k2;
            c[g2 + (j2 * 12 | 0) >> 2] = d2;
            c[g2 + (j2 * 12 | 0) + 4 >> 2] = e2;
            c[g2 + (j2 * 12 | 0) + 8 >> 2] = 0;
            n2 = (c[b2 + 36 >> 2] | 0) + (f2 << 2) | 0;
            c[(c[b2 + 56 >> 2] | 0) + (j2 << 2) >> 2] = c[n2 >> 2];
            c[n2 >> 2] = j2;
            n2 = g2 + (j2 * 12 | 0) | 0;
            return n2 | 0;
          }
          function ui(b2) {
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0, i2 = 0, j2 = 0;
            i2 = c[b2 + 12 >> 2] | 0;
            j2 = c[b2 + 28 >> 2] | 0;
            if ((i2 | 0) <= (j2 | 0))
              return;
            if ((i2 | 0) >= (j2 | 0)) {
              do
                if ((c[b2 + 32 >> 2] | 0) < (i2 | 0)) {
                  if (!i2) {
                    d2 = 0;
                    e2 = j2;
                  } else {
                    c[5637] = (c[5637] | 0) + 1;
                    d2 = qG((i2 << 2 | 3) + 16 | 0) | 0;
                    if (!d2)
                      d2 = 0;
                    else {
                      c[(d2 + 4 + 15 & -16) + -4 >> 2] = d2;
                      d2 = d2 + 4 + 15 & -16;
                    }
                    e2 = c[b2 + 28 >> 2] | 0;
                  }
                  f2 = c[b2 + 36 >> 2] | 0;
                  if ((e2 | 0) <= 0) {
                    if (!f2) {
                      a[b2 + 40 >> 0] = 1;
                      c[b2 + 36 >> 2] = d2;
                      c[b2 + 32 >> 2] = i2;
                      break;
                    }
                  } else {
                    g2 = 0;
                    do {
                      c[d2 + (g2 << 2) >> 2] = c[f2 + (g2 << 2) >> 2];
                      g2 = g2 + 1 | 0;
                    } while ((g2 | 0) != (e2 | 0));
                  }
                  if (a[b2 + 40 >> 0] | 0) {
                    c[5638] = (c[5638] | 0) + 1;
                    rG(c[f2 + -4 >> 2] | 0);
                  }
                  a[b2 + 40 >> 0] = 1;
                  c[b2 + 36 >> 2] = d2;
                  c[b2 + 32 >> 2] = i2;
                } else
                  d2 = c[b2 + 36 >> 2] | 0;
              while (0);
              ZG(d2 + (j2 << 2) | 0, 0, i2 - j2 << 2 | 0) | 0;
            }
            c[b2 + 28 >> 2] = i2;
            h2 = c[b2 + 48 >> 2] | 0;
            if ((i2 | 0) > (h2 | 0)) {
              do
                if ((c[b2 + 52 >> 2] | 0) < (i2 | 0)) {
                  if (!i2) {
                    d2 = 0;
                    e2 = h2;
                  } else {
                    c[5637] = (c[5637] | 0) + 1;
                    d2 = qG((i2 << 2 | 3) + 16 | 0) | 0;
                    if (!d2)
                      d2 = 0;
                    else {
                      c[(d2 + 4 + 15 & -16) + -4 >> 2] = d2;
                      d2 = d2 + 4 + 15 & -16;
                    }
                    e2 = c[b2 + 48 >> 2] | 0;
                  }
                  f2 = c[b2 + 56 >> 2] | 0;
                  if ((e2 | 0) <= 0) {
                    if (!f2) {
                      a[b2 + 60 >> 0] = 1;
                      c[b2 + 56 >> 2] = d2;
                      c[b2 + 52 >> 2] = i2;
                      break;
                    }
                  } else {
                    g2 = 0;
                    do {
                      c[d2 + (g2 << 2) >> 2] = c[f2 + (g2 << 2) >> 2];
                      g2 = g2 + 1 | 0;
                    } while ((g2 | 0) != (e2 | 0));
                  }
                  if (a[b2 + 60 >> 0] | 0) {
                    c[5638] = (c[5638] | 0) + 1;
                    rG(c[f2 + -4 >> 2] | 0);
                  }
                  a[b2 + 60 >> 0] = 1;
                  c[b2 + 56 >> 2] = d2;
                  c[b2 + 52 >> 2] = i2;
                } else
                  d2 = c[b2 + 56 >> 2] | 0;
              while (0);
              ZG(d2 + (h2 << 2) | 0, 0, i2 - h2 << 2 | 0) | 0;
            }
            c[b2 + 48 >> 2] = i2;
            if ((i2 | 0) > 0) {
              ZG(c[b2 + 36 >> 2] | 0, -1, i2 << 2 | 0) | 0;
              ZG(c[b2 + 56 >> 2] | 0, -1, i2 << 2 | 0) | 0;
            }
            if ((j2 | 0) <= 0)
              return;
            d2 = c[b2 + 16 >> 2] | 0;
            e2 = c[b2 + 36 >> 2] | 0;
            f2 = c[b2 + 56 >> 2] | 0;
            g2 = 0;
            do {
              i2 = c[d2 + (g2 * 12 | 0) + 4 >> 2] << 16 | c[d2 + (g2 * 12 | 0) >> 2];
              i2 = (i2 + ~(i2 << 15) >> 10 ^ i2 + ~(i2 << 15)) * 9 | 0;
              i2 = e2 + ((((i2 >> 6 ^ i2) + ~((i2 >> 6 ^ i2) << 11) >> 16 ^ (i2 >> 6 ^ i2) + ~((i2 >> 6 ^ i2) << 11)) & (c[b2 + 12 >> 2] | 0) + -1) << 2) | 0;
              c[f2 + (g2 << 2) >> 2] = c[i2 >> 2];
              c[i2 >> 2] = g2;
              g2 = g2 + 1 | 0;
            } while ((g2 | 0) != (j2 | 0));
            return;
          }
          function vi(a2) {
            a2 = a2 | 0;
            return c[a2 + 16 >> 2] | 0;
          }
          function wi(b2) {
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0;
            d2 = c[b2 + 16 >> 2] | 0;
            if (d2 | 0) {
              if (a[b2 + 20 >> 0] | 0) {
                c[5638] = (c[5638] | 0) + 1;
                rG(c[d2 + -4 >> 2] | 0);
              }
              c[b2 + 16 >> 2] = 0;
            }
            a[b2 + 20 >> 0] = 1;
            c[b2 + 16 >> 2] = 0;
            c[b2 + 8 >> 2] = 0;
            c[b2 + 12 >> 2] = 0;
            d2 = c[b2 + 36 >> 2] | 0;
            if (d2 | 0) {
              if (a[b2 + 40 >> 0] | 0) {
                c[5638] = (c[5638] | 0) + 1;
                rG(c[d2 + -4 >> 2] | 0);
              }
              c[b2 + 36 >> 2] = 0;
            }
            a[b2 + 40 >> 0] = 1;
            c[b2 + 36 >> 2] = 0;
            c[b2 + 28 >> 2] = 0;
            c[b2 + 32 >> 2] = 0;
            d2 = c[b2 + 56 >> 2] | 0;
            if (d2 | 0) {
              if (a[b2 + 60 >> 0] | 0) {
                c[5638] = (c[5638] | 0) + 1;
                rG(c[d2 + -4 >> 2] | 0);
              }
              c[b2 + 56 >> 2] = 0;
            }
            a[b2 + 60 >> 0] = 1;
            c[b2 + 56 >> 2] = 0;
            c[b2 + 48 >> 2] = 0;
            c[b2 + 52 >> 2] = 0;
            if ((c[b2 + 12 >> 2] | 0) >= 2) {
              ui(b2);
              return;
            }
            c[5637] = (c[5637] | 0) + 1;
            d2 = qG(43) | 0;
            if (!d2)
              f2 = 0;
            else {
              c[(d2 + 4 + 15 & -16) + -4 >> 2] = d2;
              f2 = d2 + 4 + 15 & -16;
            }
            d2 = c[b2 + 8 >> 2] | 0;
            if ((d2 | 0) > 0) {
              e2 = 0;
              do {
                g2 = f2 + (e2 * 12 | 0) | 0;
                h2 = (c[b2 + 16 >> 2] | 0) + (e2 * 12 | 0) | 0;
                c[g2 >> 2] = c[h2 >> 2];
                c[g2 + 4 >> 2] = c[h2 + 4 >> 2];
                c[g2 + 8 >> 2] = c[h2 + 8 >> 2];
                e2 = e2 + 1 | 0;
              } while ((e2 | 0) != (d2 | 0));
            }
            d2 = c[b2 + 16 >> 2] | 0;
            if (d2 | 0) {
              if (a[b2 + 20 >> 0] | 0) {
                c[5638] = (c[5638] | 0) + 1;
                rG(c[d2 + -4 >> 2] | 0);
              }
              c[b2 + 16 >> 2] = 0;
            }
            a[b2 + 20 >> 0] = 1;
            c[b2 + 16 >> 2] = f2;
            c[b2 + 12 >> 2] = 2;
            ui(b2);
            return;
          }
          function xi(a2) {
            a2 = a2 | 0;
            rG(a2);
            return;
          }
          function yi(b2, d2, e2, f2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = +f2;
            var h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0;
            C2 = i;
            i = i + 192 | 0;
            z2 = c[b2 + 4 >> 2] | 0;
            if (+g[z2 + 752 >> 2] < f2) {
              i = C2;
              return;
            }
            B2 = c[z2 + 740 >> 2] | 0;
            y2 = (c[b2 + 8 >> 2] | 0) + 8 | 0;
            A2 = c[y2 >> 2] | 0;
            j2 = +g[e2 >> 2];
            r2 = +g[d2 >> 2] * f2 + j2;
            k2 = +g[e2 + 4 >> 2];
            s2 = +g[d2 + 4 >> 2] * f2 + k2;
            h2 = +g[e2 + 8 >> 2];
            t2 = +g[d2 + 8 >> 2] * f2 + h2;
            x2 = (c[b2 + 12 >> 2] | 0) + 8 | 0;
            p2 = c[x2 >> 2] | 0;
            l2 = +g[p2 + 52 >> 2];
            m2 = +g[p2 + 56 >> 2];
            if ((B2 | 0) != (A2 | 0)) {
              w2 = t2 - +g[p2 + 60 >> 2];
              j2 = j2 - +g[A2 + 52 >> 2];
              k2 = k2 - +g[A2 + 56 >> 2];
              h2 = h2 - +g[A2 + 60 >> 2];
              u2 = (r2 - l2) * +g[p2 + 4 >> 2] + (s2 - m2) * +g[p2 + 20 >> 2] + w2 * +g[p2 + 36 >> 2];
              v2 = (r2 - l2) * +g[p2 + 8 >> 2] + (s2 - m2) * +g[p2 + 24 >> 2] + w2 * +g[p2 + 40 >> 2];
              w2 = (r2 - l2) * +g[p2 + 12 >> 2] + (s2 - m2) * +g[p2 + 28 >> 2] + w2 * +g[p2 + 44 >> 2];
              n2 = j2 * +g[A2 + 4 >> 2] + k2 * +g[A2 + 20 >> 2] + h2 * +g[A2 + 36 >> 2];
              o2 = j2 * +g[A2 + 8 >> 2] + k2 * +g[A2 + 24 >> 2] + h2 * +g[A2 + 40 >> 2];
              h2 = j2 * +g[A2 + 12 >> 2] + k2 * +g[A2 + 28 >> 2] + h2 * +g[A2 + 44 >> 2];
            } else {
              o2 = r2 - +g[B2 + 52 >> 2];
              n2 = s2 - +g[B2 + 56 >> 2];
              w2 = t2 - +g[B2 + 60 >> 2];
              h2 = h2 - +g[p2 + 60 >> 2];
              u2 = o2 * +g[B2 + 4 >> 2] + n2 * +g[B2 + 20 >> 2] + w2 * +g[B2 + 36 >> 2];
              v2 = o2 * +g[B2 + 8 >> 2] + n2 * +g[B2 + 24 >> 2] + w2 * +g[B2 + 40 >> 2];
              w2 = o2 * +g[B2 + 12 >> 2] + n2 * +g[B2 + 28 >> 2] + w2 * +g[B2 + 44 >> 2];
              n2 = (j2 - l2) * +g[p2 + 4 >> 2] + (k2 - m2) * +g[p2 + 20 >> 2] + h2 * +g[p2 + 36 >> 2];
              o2 = (j2 - l2) * +g[p2 + 8 >> 2] + (k2 - m2) * +g[p2 + 24 >> 2] + h2 * +g[p2 + 40 >> 2];
              h2 = (j2 - l2) * +g[p2 + 12 >> 2] + (k2 - m2) * +g[p2 + 28 >> 2] + h2 * +g[p2 + 44 >> 2];
            }
            g[C2 >> 2] = u2;
            g[C2 + 4 >> 2] = v2;
            g[C2 + 8 >> 2] = w2;
            g[C2 + 12 >> 2] = 0;
            g[C2 + 16 >> 2] = n2;
            g[C2 + 20 >> 2] = o2;
            g[C2 + 24 >> 2] = h2;
            g[C2 + 28 >> 2] = 0;
            c[C2 + 64 >> 2] = c[d2 >> 2];
            c[C2 + 64 + 4 >> 2] = c[d2 + 4 >> 2];
            c[C2 + 64 + 8 >> 2] = c[d2 + 8 >> 2];
            c[C2 + 64 + 12 >> 2] = c[d2 + 12 >> 2];
            g[C2 + 80 >> 2] = f2;
            g[C2 + 84 >> 2] = 0;
            g[C2 + 88 >> 2] = 0;
            g[C2 + 92 >> 2] = 0;
            c[C2 + 112 >> 2] = 0;
            a[C2 + 116 >> 0] = 0;
            c[C2 + 120 >> 2] = 0;
            c[C2 + 120 + 4 >> 2] = 0;
            c[C2 + 120 + 8 >> 2] = 0;
            c[C2 + 120 + 12 >> 2] = 0;
            c[C2 + 120 + 16 >> 2] = 0;
            c[C2 + 120 + 20 >> 2] = 0;
            c[C2 + 120 + 24 >> 2] = 0;
            c[C2 + 120 + 28 >> 2] = 0;
            g[C2 + 48 >> 2] = r2;
            g[C2 + 52 >> 2] = s2;
            g[C2 + 56 >> 2] = t2;
            g[C2 + 60 >> 2] = 0;
            c[C2 + 32 >> 2] = c[e2 >> 2];
            c[C2 + 32 + 4 >> 2] = c[e2 + 4 >> 2];
            c[C2 + 32 + 8 >> 2] = c[e2 + 8 >> 2];
            c[C2 + 32 + 12 >> 2] = c[e2 + 12 >> 2];
            h2 = +g[z2 + 752 >> 2];
            e2 = c[z2 + 748 >> 2] | 0;
            if ((e2 | 0) > 0) {
              q2 = 0;
              p2 = -1;
              l2 = h2 * h2;
              while (1) {
                h2 = +g[z2 + 4 + (q2 * 184 | 0) >> 2] - u2;
                j2 = +g[z2 + 4 + (q2 * 184 | 0) + 4 >> 2] - v2;
                k2 = +g[z2 + 4 + (q2 * 184 | 0) + 8 >> 2] - w2;
                d2 = h2 * h2 + j2 * j2 + k2 * k2 < l2;
                p2 = d2 ? q2 : p2;
                q2 = q2 + 1 | 0;
                if ((q2 | 0) == (e2 | 0))
                  break;
                else
                  l2 = d2 ? h2 * h2 + j2 * j2 + k2 * k2 : l2;
              }
            } else
              p2 = -1;
            q2 = c[y2 >> 2] | 0;
            y2 = c[x2 >> 2] | 0;
            h2 = +g[q2 + 224 >> 2] * +g[y2 + 224 >> 2];
            h2 = h2 < -10 ? -10 : h2;
            g[C2 + 84 >> 2] = h2 > 10 ? 10 : h2;
            g[C2 + 92 >> 2] = +g[q2 + 228 >> 2] * +g[y2 + 228 >> 2];
            h2 = +g[q2 + 232 >> 2] * +g[y2 + 232 >> 2];
            h2 = h2 < -10 ? -10 : h2;
            g[C2 + 88 >> 2] = h2 > 10 ? 10 : h2;
            h2 = +g[C2 + 72 >> 2];
            y2 = +N(+h2) > 0.7071067690849304;
            l2 = +g[C2 + 68 >> 2];
            if (y2) {
              w2 = 1 / +O(+(h2 * h2 + l2 * l2));
              n2 = +g[C2 + 64 >> 2];
              m2 = -(w2 * l2 * n2);
              n2 = n2 * -(w2 * h2);
              o2 = -(w2 * h2);
              j2 = (h2 * h2 + l2 * l2) * w2;
              k2 = 0;
              h2 = w2 * l2;
            } else {
              j2 = +g[C2 + 64 >> 2];
              k2 = 1 / +O(+(j2 * j2 + l2 * l2));
              m2 = h2 * -(l2 * k2);
              n2 = (j2 * j2 + l2 * l2) * k2;
              o2 = k2 * j2;
              j2 = -(k2 * j2 * h2);
              k2 = -(l2 * k2);
              h2 = 0;
            }
            g[C2 + 152 >> 2] = k2;
            g[C2 + 156 >> 2] = o2;
            g[C2 + 160 >> 2] = h2;
            g[C2 + 168 >> 2] = j2;
            g[C2 + 172 >> 2] = m2;
            g[C2 + 176 >> 2] = n2;
            x2 = c[b2 + 20 >> 2] | 0;
            q2 = c[b2 + 16 >> 2] | 0;
            y2 = c[b2 + 28 >> 2] | 0;
            b2 = c[b2 + 24 >> 2] | 0;
            c[C2 + 96 >> 2] = (B2 | 0) != (A2 | 0) ? x2 : q2;
            c[C2 + 100 >> 2] = (B2 | 0) != (A2 | 0) ? q2 : x2;
            c[C2 + 104 >> 2] = (B2 | 0) != (A2 | 0) ? y2 : b2;
            c[C2 + 108 >> 2] = (B2 | 0) != (A2 | 0) ? b2 : y2;
            if ((p2 | 0) > -1) {
              b2 = z2 + 4 + (p2 * 184 | 0) + 148 | 0;
              B2 = c[b2 >> 2] | 0;
              e2 = z2 + 4 + (p2 * 184 | 0) + 120 | 0;
              d2 = c[e2 >> 2] | 0;
              x2 = z2 + 4 + (p2 * 184 | 0) + 124 | 0;
              q2 = c[x2 >> 2] | 0;
              A2 = z2 + 4 + (p2 * 184 | 0) + 128 | 0;
              y2 = c[A2 >> 2] | 0;
              D2 = z2 + 4 + (p2 * 184 | 0) + 112 | 0;
              E2 = c[D2 >> 2] | 0;
              bH(z2 + 4 + (p2 * 184 | 0) | 0, C2 | 0, 184) | 0;
              c[D2 >> 2] = E2;
              c[e2 >> 2] = d2;
              c[x2 >> 2] = q2;
              c[A2 >> 2] = y2;
              c[b2 >> 2] = B2;
            } else
              Wn(z2, C2) | 0;
            i = C2;
            return;
          }
          function zi(b2) {
            b2 = b2 | 0;
            var d2 = 0;
            c[b2 >> 2] = 4488;
            d2 = c[b2 + 56 >> 2] | 0;
            if (d2 | 0) {
              if (a[b2 + 60 >> 0] | 0) {
                c[5638] = (c[5638] | 0) + 1;
                rG(c[d2 + -4 >> 2] | 0);
              }
              c[b2 + 56 >> 2] = 0;
            }
            a[b2 + 60 >> 0] = 1;
            c[b2 + 56 >> 2] = 0;
            c[b2 + 48 >> 2] = 0;
            c[b2 + 52 >> 2] = 0;
            d2 = c[b2 + 36 >> 2] | 0;
            if (d2 | 0) {
              if (a[b2 + 40 >> 0] | 0) {
                c[5638] = (c[5638] | 0) + 1;
                rG(c[d2 + -4 >> 2] | 0);
              }
              c[b2 + 36 >> 2] = 0;
            }
            a[b2 + 40 >> 0] = 1;
            c[b2 + 36 >> 2] = 0;
            c[b2 + 28 >> 2] = 0;
            c[b2 + 32 >> 2] = 0;
            d2 = c[b2 + 16 >> 2] | 0;
            if (!d2) {
              d2 = b2 + 12 | 0;
              a[b2 + 20 >> 0] = 1;
              c[b2 + 16 >> 2] = 0;
              c[b2 + 8 >> 2] = 0;
              c[d2 >> 2] = 0;
              return;
            }
            if (a[b2 + 20 >> 0] | 0) {
              c[5638] = (c[5638] | 0) + 1;
              rG(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 16 >> 2] = 0;
            d2 = b2 + 12 | 0;
            a[b2 + 20 >> 0] = 1;
            c[b2 + 16 >> 2] = 0;
            c[b2 + 8 >> 2] = 0;
            c[d2 >> 2] = 0;
            return;
          }
          function Ai(a2) {
            a2 = a2 | 0;
            zi(a2);
            rG(a2);
            return;
          }
          function Bi(b2, d2, e2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0;
            f2 = c[d2 + 8 >> 2] | 0;
            if ((f2 | 0) > 0) {
              h2 = c[d2 + 16 >> 2] | 0;
              j2 = 0;
              e2 = 0;
              do {
                i2 = c[h2 + (j2 << 2) >> 2] | 0;
                if (!(c[i2 + 204 >> 2] & 3)) {
                  c[i2 + 208 >> 2] = e2;
                  e2 = e2 + 1 | 0;
                }
                c[i2 + 212 >> 2] = -1;
                g[i2 + 248 >> 2] = 1;
                j2 = j2 + 1 | 0;
              } while ((j2 | 0) != (f2 | 0));
              j2 = e2;
            } else
              j2 = 0;
            i2 = c[b2 + 8 >> 2] | 0;
            if ((i2 | 0) < (j2 | 0)) {
              if ((c[b2 + 12 >> 2] | 0) < (j2 | 0)) {
                if (!j2) {
                  e2 = 0;
                  f2 = i2;
                } else {
                  c[5637] = (c[5637] | 0) + 1;
                  e2 = qG((j2 << 3 | 3) + 16 | 0) | 0;
                  if (!e2)
                    e2 = 0;
                  else {
                    c[(e2 + 4 + 15 & -16) + -4 >> 2] = e2;
                    e2 = e2 + 4 + 15 & -16;
                  }
                  f2 = c[b2 + 8 >> 2] | 0;
                }
                if ((f2 | 0) > 0) {
                  h2 = 0;
                  do {
                    m2 = (c[b2 + 16 >> 2] | 0) + (h2 << 3) | 0;
                    k2 = c[m2 + 4 >> 2] | 0;
                    l2 = e2 + (h2 << 3) | 0;
                    c[l2 >> 2] = c[m2 >> 2];
                    c[l2 + 4 >> 2] = k2;
                    h2 = h2 + 1 | 0;
                  } while ((h2 | 0) != (f2 | 0));
                }
                f2 = c[b2 + 16 >> 2] | 0;
                if (f2 | 0) {
                  if (a[b2 + 20 >> 0] | 0) {
                    c[5638] = (c[5638] | 0) + 1;
                    rG(c[f2 + -4 >> 2] | 0);
                  }
                  c[b2 + 16 >> 2] = 0;
                }
                a[b2 + 20 >> 0] = 1;
                c[b2 + 16 >> 2] = e2;
                c[b2 + 12 >> 2] = j2;
                f2 = b2 + 16 | 0;
              } else
                f2 = b2 + 16 | 0;
              e2 = i2;
              do {
                m2 = (c[f2 >> 2] | 0) + (e2 << 3) | 0;
                c[m2 >> 2] = 0;
                c[m2 + 4 >> 2] = 0;
                e2 = e2 + 1 | 0;
              } while ((e2 | 0) != (j2 | 0));
            }
            c[b2 + 8 >> 2] = j2;
            if ((j2 | 0) > 0) {
              e2 = c[b2 + 16 >> 2] | 0;
              f2 = 0;
              do {
                c[e2 + (f2 << 3) >> 2] = f2;
                c[e2 + (f2 << 3) + 4 >> 2] = 1;
                f2 = f2 + 1 | 0;
              } while ((f2 | 0) != (j2 | 0));
            }
            e2 = c[d2 + 68 >> 2] | 0;
            e2 = vb[c[(c[e2 >> 2] | 0) + 36 >> 2] & 127](e2) | 0;
            l2 = vb[c[(c[e2 >> 2] | 0) + 36 >> 2] & 127](e2) | 0;
            if (!l2)
              return;
            d2 = vb[c[(c[e2 >> 2] | 0) + 20 >> 2] & 127](e2) | 0;
            if ((l2 | 0) <= 0)
              return;
            k2 = 0;
            do {
              e2 = c[c[d2 + (k2 << 4) >> 2] >> 2] | 0;
              f2 = c[c[d2 + (k2 << 4) + 4 >> 2] >> 2] | 0;
              if ((e2 | 0 ? f2 | 0 ? (c[e2 + 204 >> 2] & 7 | 0) == 0 : 0 : 0) ? (c[f2 + 204 >> 2] & 7 | 0) == 0 : 0) {
                i2 = c[e2 + 208 >> 2] | 0;
                e2 = c[f2 + 208 >> 2] | 0;
                j2 = c[b2 + 16 >> 2] | 0;
                f2 = c[j2 + (i2 << 3) >> 2] | 0;
                if ((f2 | 0) != (i2 | 0)) {
                  h2 = j2 + (i2 << 3) | 0;
                  do {
                    i2 = j2 + (f2 << 3) | 0;
                    c[h2 >> 2] = c[i2 >> 2];
                    i2 = c[i2 >> 2] | 0;
                    h2 = j2 + (i2 << 3) | 0;
                    f2 = c[h2 >> 2] | 0;
                  } while ((i2 | 0) != (f2 | 0));
                }
                f2 = c[j2 + (e2 << 3) >> 2] | 0;
                if ((f2 | 0) != (e2 | 0)) {
                  h2 = j2 + (e2 << 3) | 0;
                  do {
                    e2 = j2 + (f2 << 3) | 0;
                    c[h2 >> 2] = c[e2 >> 2];
                    e2 = c[e2 >> 2] | 0;
                    h2 = j2 + (e2 << 3) | 0;
                    f2 = c[h2 >> 2] | 0;
                  } while ((e2 | 0) != (f2 | 0));
                }
                if ((i2 | 0) != (e2 | 0)) {
                  c[j2 + (i2 << 3) >> 2] = e2;
                  m2 = j2 + (e2 << 3) + 4 | 0;
                  c[m2 >> 2] = (c[m2 >> 2] | 0) + (c[j2 + (i2 << 3) + 4 >> 2] | 0);
                }
              }
              k2 = k2 + 1 | 0;
            } while ((k2 | 0) != (l2 | 0));
            return;
          }
          function Ci(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0;
            k2 = c[b2 + 8 >> 2] | 0;
            if ((k2 | 0) <= 0)
              return;
            i2 = c[b2 + 16 >> 2] | 0;
            j2 = 0;
            b2 = 0;
            do {
              h2 = c[i2 + (j2 << 2) >> 2] | 0;
              if (!(c[h2 + 204 >> 2] & 3)) {
                g2 = c[a2 + 16 >> 2] | 0;
                e2 = g2 + (b2 << 3) | 0;
                d2 = c[e2 >> 2] | 0;
                if ((d2 | 0) == (b2 | 0))
                  d2 = b2;
                else {
                  f2 = d2;
                  do {
                    d2 = g2 + (f2 << 3) | 0;
                    c[e2 >> 2] = c[d2 >> 2];
                    d2 = c[d2 >> 2] | 0;
                    e2 = g2 + (d2 << 3) | 0;
                    f2 = c[e2 >> 2] | 0;
                  } while ((d2 | 0) != (f2 | 0));
                }
                c[h2 + 208 >> 2] = d2;
                c[g2 + (b2 << 3) + 4 >> 2] = j2;
                c[h2 + 212 >> 2] = -1;
                b2 = b2 + 1 | 0;
              } else {
                c[h2 + 208 >> 2] = -1;
                c[h2 + 212 >> 2] = -2;
              }
              j2 = j2 + 1 | 0;
            } while ((j2 | 0) != (k2 | 0));
            return;
          }
          function Di(b2, d2, e2, f2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            var h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0;
            u2 = i;
            i = i + 16 | 0;
            fs(12530);
            h2 = c[b2 + 28 >> 2] | 0;
            if ((h2 | 0) < 0) {
              if ((c[b2 + 32 >> 2] | 0) < 0) {
                j2 = c[b2 + 36 >> 2] | 0;
                if (j2 | 0) {
                  if (a[b2 + 40 >> 0] | 0) {
                    c[5638] = (c[5638] | 0) + 1;
                    rG(c[j2 + -4 >> 2] | 0);
                  }
                  c[b2 + 36 >> 2] = 0;
                }
                a[b2 + 40 >> 0] = 1;
                c[b2 + 36 >> 2] = 0;
                c[b2 + 32 >> 2] = 0;
              }
              do {
                c[(c[b2 + 36 >> 2] | 0) + (h2 << 2) >> 2] = 0;
                h2 = h2 + 1 | 0;
              } while ((h2 | 0) != 0);
            }
            c[b2 + 28 >> 2] = 0;
            l2 = c[b2 + 8 >> 2] | 0;
            if ((l2 | 0) > 0) {
              m2 = c[b2 + 16 >> 2] | 0;
              o2 = 0;
              do {
                n2 = m2 + (o2 << 3) | 0;
                h2 = c[n2 >> 2] | 0;
                if ((h2 | 0) == (o2 | 0))
                  h2 = o2;
                else {
                  j2 = h2;
                  k2 = n2;
                  do {
                    h2 = m2 + (j2 << 3) | 0;
                    c[k2 >> 2] = c[h2 >> 2];
                    h2 = c[h2 >> 2] | 0;
                    k2 = m2 + (h2 << 3) | 0;
                    j2 = c[k2 >> 2] | 0;
                  } while ((h2 | 0) != (j2 | 0));
                }
                c[n2 >> 2] = h2;
                o2 = o2 + 1 | 0;
              } while ((o2 | 0) != (l2 | 0));
              if ((l2 | 0) > 1) {
                Pi(b2 + 4 | 0, 0, l2 + -1 | 0);
                l2 = c[b2 + 8 >> 2] | 0;
              }
              if ((l2 | 0) > 0) {
                o2 = c[b2 + 16 >> 2] | 0;
                j2 = 0;
                while (1) {
                  p2 = c[o2 + (j2 << 3) >> 2] | 0;
                  s2 = j2;
                  while (1) {
                    r2 = s2 + 1 | 0;
                    if ((r2 | 0) >= (l2 | 0)) {
                      n2 = 0;
                      break;
                    }
                    if ((c[o2 + (r2 << 3) >> 2] | 0) == (p2 | 0))
                      s2 = r2;
                    else {
                      n2 = 1;
                      break;
                    }
                  }
                  a:
                    do
                      if ((j2 | 0) <= (s2 | 0)) {
                        q2 = c[e2 + 16 >> 2] | 0;
                        h2 = 1;
                        m2 = j2;
                        while (1) {
                          k2 = c[q2 + (c[o2 + (m2 << 3) + 4 >> 2] << 2) >> 2] | 0;
                          if ((c[k2 + 208 >> 2] | 0) == (p2 | 0)) {
                            k2 = c[k2 + 216 >> 2] | 0;
                            h2 = (k2 | 0) != 4 & (h2 & (k2 | 0) != 1);
                          }
                          if ((m2 | 0) < (s2 | 0))
                            m2 = m2 + 1 | 0;
                          else
                            break;
                        }
                        if (h2) {
                          h2 = o2;
                          while (1) {
                            h2 = c[q2 + (c[h2 + (j2 << 3) + 4 >> 2] << 2) >> 2] | 0;
                            if ((c[h2 + 208 >> 2] | 0) == (p2 | 0) ? (c[h2 + 216 >> 2] & -2 | 0) != 4 : 0)
                              c[h2 + 216 >> 2] = 2;
                            if ((j2 | 0) >= (s2 | 0))
                              break a;
                            h2 = c[b2 + 16 >> 2] | 0;
                            j2 = j2 + 1 | 0;
                          }
                        } else {
                          h2 = o2;
                          while (1) {
                            h2 = c[q2 + (c[h2 + (j2 << 3) + 4 >> 2] << 2) >> 2] | 0;
                            if ((c[h2 + 208 >> 2] | 0) == (p2 | 0) ? (c[h2 + 216 >> 2] | 0) == 2 : 0) {
                              c[h2 + 216 >> 2] = 3;
                              g[h2 + 220 >> 2] = 0;
                            }
                            if ((j2 | 0) >= (s2 | 0))
                              break a;
                            h2 = c[b2 + 16 >> 2] | 0;
                            j2 = j2 + 1 | 0;
                          }
                        }
                      }
                    while (0);
                  if (n2)
                    j2 = r2;
                  else
                    break;
                }
              }
            }
            m2 = vb[c[(c[d2 >> 2] | 0) + 36 >> 2] & 127](d2) | 0;
            if ((m2 | 0) > 0) {
              n2 = 0;
              do {
                l2 = Ob[c[(c[d2 >> 2] | 0) + 40 >> 2] & 31](d2, n2) | 0;
                j2 = c[l2 + 740 >> 2] | 0;
                k2 = c[l2 + 744 >> 2] | 0;
                if ((j2 | 0) != 0 ? (c[j2 + 216 >> 2] | 0) != 2 : 0)
                  h2 = 44;
                else
                  h2 = 42;
                if (((h2 | 0) == 42 ? (h2 = 0, k2 | 0) : 0) ? (c[k2 + 216 >> 2] | 0) != 2 : 0)
                  h2 = 44;
                if ((h2 | 0) == 44) {
                  h2 = c[j2 + 204 >> 2] | 0;
                  if ((h2 & 2 | 0 ? (h2 & 4 | 0) == 0 ? (c[j2 + 216 >> 2] | 0) != 2 : 0 : 0) ? (c[k2 + 204 >> 2] & 3 | 0) == 0 : 0) {
                    if ((c[k2 + 216 >> 2] & -2 | 0) != 4)
                      c[k2 + 216 >> 2] = 1;
                    g[k2 + 220 >> 2] = 0;
                  }
                  s2 = c[k2 + 204 >> 2] | 0;
                  if (s2 & 2 | 0 ? (s2 & 4 | h2 & 3 | 0) == 0 ? (c[k2 + 216 >> 2] | 0) != 2 : 0 : 0) {
                    if ((c[j2 + 216 >> 2] & -2 | 0) != 4)
                      c[j2 + 216 >> 2] = 1;
                    g[j2 + 220 >> 2] = 0;
                  }
                  if (a[b2 + 64 >> 0] | 0 ? Eb[c[(c[d2 >> 2] | 0) + 28 >> 2] & 63](d2, j2, k2) | 0 : 0) {
                    h2 = c[b2 + 28 >> 2] | 0;
                    if ((h2 | 0) == (c[b2 + 32 >> 2] | 0) ? (t2 = h2 | 0 ? h2 << 1 : 1, (h2 | 0) < (t2 | 0)) : 0) {
                      if (!t2)
                        k2 = 0;
                      else {
                        c[5637] = (c[5637] | 0) + 1;
                        h2 = qG((t2 << 2 | 3) + 16 | 0) | 0;
                        if (!h2)
                          h2 = 0;
                        else {
                          c[(h2 + 4 + 15 & -16) + -4 >> 2] = h2;
                          h2 = h2 + 4 + 15 & -16;
                        }
                        k2 = h2;
                        h2 = c[b2 + 28 >> 2] | 0;
                      }
                      if ((h2 | 0) > 0) {
                        j2 = 0;
                        do {
                          c[k2 + (j2 << 2) >> 2] = c[(c[b2 + 36 >> 2] | 0) + (j2 << 2) >> 2];
                          j2 = j2 + 1 | 0;
                        } while ((j2 | 0) != (h2 | 0));
                      }
                      j2 = c[b2 + 36 >> 2] | 0;
                      if (j2) {
                        if (a[b2 + 40 >> 0] | 0) {
                          c[5638] = (c[5638] | 0) + 1;
                          rG(c[j2 + -4 >> 2] | 0);
                          h2 = c[b2 + 28 >> 2] | 0;
                        }
                        c[b2 + 36 >> 2] = 0;
                      }
                      a[b2 + 40 >> 0] = 1;
                      c[b2 + 36 >> 2] = k2;
                      c[b2 + 32 >> 2] = t2;
                    }
                    c[(c[b2 + 36 >> 2] | 0) + (h2 << 2) >> 2] = l2;
                    c[b2 + 28 >> 2] = h2 + 1;
                  }
                }
                n2 = n2 + 1 | 0;
              } while ((n2 | 0) < (m2 | 0));
            }
            h2 = c[2006] | 0;
            t2 = (c[h2 + 16 >> 2] | 0) + -1 | 0;
            c[h2 + 16 >> 2] = t2;
            do
              if (!t2) {
                if (c[h2 + 4 >> 2] | 0) {
                  kb(u2 | 0, 0) | 0;
                  t2 = c[5649] | 0;
                  g[h2 + 8 >> 2] = +g[h2 + 8 >> 2] + +(((c[u2 + 4 >> 2] | 0) - (c[t2 + 4 >> 2] | 0) + (((c[u2 >> 2] | 0) - (c[t2 >> 2] | 0) | 0) * 1e6 | 0) - (c[h2 + 12 >> 2] | 0) | 0) >>> 0) / 1e3;
                  if (c[h2 + 16 >> 2] | 0)
                    break;
                  h2 = c[2006] | 0;
                }
                c[2006] = c[h2 + 20 >> 2];
              }
            while (0);
            t2 = c[b2 + 8 >> 2] | 0;
            fs(12558);
            if (a[b2 + 64 >> 0] | 0) {
              r2 = c[b2 + 28 >> 2] | 0;
              if ((r2 | 0) > 1)
                Ei(b2 + 24 | 0, 0, r2 + -1 | 0);
              if ((t2 | 0) > 0) {
                p2 = 1;
                j2 = 0;
                s2 = 0;
                while (1) {
                  h2 = c[b2 + 16 >> 2] | 0;
                  q2 = c[h2 + (j2 << 3) >> 2] | 0;
                  b:
                    do
                      if ((j2 | 0) < (t2 | 0)) {
                        m2 = c[b2 + 48 >> 2] | 0;
                        k2 = c[b2 + 52 >> 2] | 0;
                        o2 = 1;
                        while (1) {
                          n2 = c[(c[e2 + 16 >> 2] | 0) + (c[h2 + (j2 << 3) + 4 >> 2] << 2) >> 2] | 0;
                          if ((m2 | 0) == (k2 | 0)) {
                            m2 = k2 | 0 ? k2 << 1 : 1;
                            if ((k2 | 0) < (m2 | 0)) {
                              if (!m2)
                                h2 = 0;
                              else {
                                c[5637] = (c[5637] | 0) + 1;
                                h2 = qG((m2 << 2 | 3) + 16 | 0) | 0;
                                if (!h2)
                                  h2 = 0;
                                else {
                                  c[(h2 + 4 + 15 & -16) + -4 >> 2] = h2;
                                  h2 = h2 + 4 + 15 & -16;
                                }
                                k2 = c[b2 + 48 >> 2] | 0;
                              }
                              if ((k2 | 0) > 0) {
                                l2 = 0;
                                do {
                                  c[h2 + (l2 << 2) >> 2] = c[(c[b2 + 56 >> 2] | 0) + (l2 << 2) >> 2];
                                  l2 = l2 + 1 | 0;
                                } while ((l2 | 0) != (k2 | 0));
                              }
                              l2 = c[b2 + 56 >> 2] | 0;
                              if (l2) {
                                if (a[b2 + 60 >> 0] | 0) {
                                  c[5638] = (c[5638] | 0) + 1;
                                  rG(c[l2 + -4 >> 2] | 0);
                                  k2 = c[b2 + 48 >> 2] | 0;
                                }
                                c[b2 + 56 >> 2] = 0;
                              }
                              a[b2 + 60 >> 0] = 1;
                              c[b2 + 56 >> 2] = h2;
                              c[b2 + 52 >> 2] = m2;
                              h2 = k2;
                              k2 = m2;
                            } else
                              h2 = k2;
                          } else
                            h2 = m2;
                          c[(c[b2 + 56 >> 2] | 0) + (h2 << 2) >> 2] = n2;
                          m2 = h2 + 1 | 0;
                          c[b2 + 48 >> 2] = m2;
                          l2 = c[n2 + 216 >> 2] | 0;
                          l2 = o2 & ((l2 | 0) == 2 | (l2 | 0) == 5);
                          j2 = j2 + 1 | 0;
                          if ((j2 | 0) >= (t2 | 0)) {
                            o2 = j2;
                            break b;
                          }
                          h2 = c[b2 + 16 >> 2] | 0;
                          if ((c[h2 + (j2 << 3) >> 2] | 0) != (q2 | 0)) {
                            o2 = j2;
                            break;
                          } else
                            o2 = l2;
                        }
                      } else {
                        o2 = j2;
                        l2 = 1;
                      }
                    while (0);
                  if ((s2 | 0) < (r2 | 0)) {
                    n2 = c[b2 + 36 >> 2] | 0;
                    h2 = n2 + (s2 << 2) | 0;
                    k2 = c[h2 >> 2] | 0;
                    j2 = c[(c[k2 + 740 >> 2] | 0) + 208 >> 2] | 0;
                    if ((j2 | 0) <= -1)
                      j2 = c[(c[k2 + 744 >> 2] | 0) + 208 >> 2] | 0;
                    if ((j2 | 0) == (q2 | 0)) {
                      m2 = s2;
                      do {
                        m2 = m2 + 1 | 0;
                        if ((m2 | 0) >= (r2 | 0))
                          break;
                        k2 = c[n2 + (m2 << 2) >> 2] | 0;
                        j2 = c[(c[k2 + 740 >> 2] | 0) + 208 >> 2] | 0;
                        if ((j2 | 0) <= -1)
                          j2 = c[(c[k2 + 744 >> 2] | 0) + 208 >> 2] | 0;
                      } while ((q2 | 0) == (j2 | 0));
                      k2 = m2;
                      j2 = m2 - s2 | 0;
                    } else {
                      k2 = p2;
                      j2 = 0;
                      h2 = 0;
                    }
                  } else {
                    k2 = p2;
                    j2 = 0;
                    h2 = 0;
                  }
                  if (!l2)
                    Fb[c[(c[f2 >> 2] | 0) + 8 >> 2] & 7](f2, c[b2 + 56 >> 2] | 0, c[b2 + 48 >> 2] | 0, h2, j2, q2);
                  s2 = (j2 | 0) == 0 ? s2 : k2;
                  h2 = c[b2 + 48 >> 2] | 0;
                  if ((h2 | 0) < 0) {
                    if ((c[b2 + 52 >> 2] | 0) < 0) {
                      j2 = c[b2 + 56 >> 2] | 0;
                      if (j2 | 0) {
                        if (a[b2 + 60 >> 0] | 0) {
                          c[5638] = (c[5638] | 0) + 1;
                          rG(c[j2 + -4 >> 2] | 0);
                        }
                        c[b2 + 56 >> 2] = 0;
                      }
                      a[b2 + 60 >> 0] = 1;
                      c[b2 + 56 >> 2] = 0;
                      c[b2 + 52 >> 2] = 0;
                    }
                    do {
                      c[(c[b2 + 56 >> 2] | 0) + (h2 << 2) >> 2] = 0;
                      h2 = h2 + 1 | 0;
                    } while ((h2 | 0) != 0);
                  }
                  c[b2 + 48 >> 2] = 0;
                  if ((o2 | 0) >= (t2 | 0))
                    break;
                  else {
                    p2 = k2;
                    j2 = o2;
                  }
                }
              }
            } else {
              t2 = vb[c[(c[d2 >> 2] | 0) + 44 >> 2] & 127](d2) | 0;
              b2 = vb[c[(c[d2 >> 2] | 0) + 36 >> 2] & 127](d2) | 0;
              Fb[c[(c[f2 >> 2] | 0) + 8 >> 2] & 7](f2, c[e2 + 16 >> 2] | 0, c[e2 + 8 >> 2] | 0, t2, b2, -1);
            }
            h2 = c[2006] | 0;
            b2 = (c[h2 + 16 >> 2] | 0) + -1 | 0;
            c[h2 + 16 >> 2] = b2;
            if (b2 | 0) {
              i = u2;
              return;
            }
            do
              if (c[h2 + 4 >> 2] | 0) {
                kb(u2 | 0, 0) | 0;
                b2 = c[5649] | 0;
                g[h2 + 8 >> 2] = +g[h2 + 8 >> 2] + +(((c[u2 + 4 >> 2] | 0) - (c[b2 + 4 >> 2] | 0) + (((c[u2 >> 2] | 0) - (c[b2 >> 2] | 0) | 0) * 1e6 | 0) - (c[h2 + 12 >> 2] | 0) | 0) >>> 0) / 1e3;
                if (!(c[h2 + 16 >> 2] | 0)) {
                  h2 = c[2006] | 0;
                  break;
                } else {
                  i = u2;
                  return;
                }
              }
            while (0);
            c[2006] = c[h2 + 20 >> 2];
            i = u2;
            return;
          }
          function Ei(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0;
            while (1) {
              k2 = c[a2 + 12 >> 2] | 0;
              l2 = c[k2 + (((b2 + d2 | 0) / 2 | 0) << 2) >> 2] | 0;
              e2 = b2;
              f2 = d2;
              while (1) {
                j2 = c[(c[l2 + 740 >> 2] | 0) + 208 >> 2] | 0;
                if ((j2 | 0) > -1)
                  while (1) {
                    h2 = c[k2 + (e2 << 2) >> 2] | 0;
                    g2 = c[(c[h2 + 740 >> 2] | 0) + 208 >> 2] | 0;
                    if ((g2 | 0) <= -1)
                      g2 = c[(c[h2 + 744 >> 2] | 0) + 208 >> 2] | 0;
                    if ((g2 | 0) < (j2 | 0))
                      e2 = e2 + 1 | 0;
                    else
                      break;
                  }
                else {
                  i2 = c[(c[l2 + 744 >> 2] | 0) + 208 >> 2] | 0;
                  while (1) {
                    h2 = c[k2 + (e2 << 2) >> 2] | 0;
                    g2 = c[(c[h2 + 740 >> 2] | 0) + 208 >> 2] | 0;
                    if ((g2 | 0) <= -1)
                      g2 = c[(c[h2 + 744 >> 2] | 0) + 208 >> 2] | 0;
                    if ((g2 | 0) < (i2 | 0))
                      e2 = e2 + 1 | 0;
                    else
                      break;
                  }
                }
                if ((j2 | 0) > -1)
                  while (1) {
                    h2 = c[k2 + (f2 << 2) >> 2] | 0;
                    g2 = c[(c[h2 + 740 >> 2] | 0) + 208 >> 2] | 0;
                    if ((g2 | 0) <= -1)
                      g2 = c[(c[h2 + 744 >> 2] | 0) + 208 >> 2] | 0;
                    if ((j2 | 0) < (g2 | 0))
                      f2 = f2 + -1 | 0;
                    else
                      break;
                  }
                else {
                  i2 = c[(c[l2 + 744 >> 2] | 0) + 208 >> 2] | 0;
                  while (1) {
                    h2 = c[k2 + (f2 << 2) >> 2] | 0;
                    g2 = c[(c[h2 + 740 >> 2] | 0) + 208 >> 2] | 0;
                    if ((g2 | 0) <= -1)
                      g2 = c[(c[h2 + 744 >> 2] | 0) + 208 >> 2] | 0;
                    if ((i2 | 0) < (g2 | 0))
                      f2 = f2 + -1 | 0;
                    else
                      break;
                  }
                }
                if ((e2 | 0) <= (f2 | 0)) {
                  i2 = k2 + (e2 << 2) | 0;
                  j2 = c[i2 >> 2] | 0;
                  c[i2 >> 2] = c[k2 + (f2 << 2) >> 2];
                  c[(c[a2 + 12 >> 2] | 0) + (f2 << 2) >> 2] = j2;
                  e2 = e2 + 1 | 0;
                  f2 = f2 + -1 | 0;
                }
                if ((e2 | 0) > (f2 | 0))
                  break;
                k2 = c[a2 + 12 >> 2] | 0;
              }
              if ((f2 | 0) > (b2 | 0))
                Ei(a2, b2, f2);
              if ((e2 | 0) < (d2 | 0))
                b2 = e2;
              else
                break;
            }
            return;
          }
          function Fi(b2) {
            b2 = b2 | 0;
            var d2 = 0;
            c[b2 >> 2] = 4512;
            if (!(a[b2 + 8 >> 0] | 0))
              return;
            d2 = c[b2 + 12 >> 2] | 0;
            if (!d2)
              return;
            b2 = c[b2 + 4 >> 2] | 0;
            tb[c[(c[b2 >> 2] | 0) + 16 >> 2] & 127](b2, d2);
            return;
          }
          function Gi(b2) {
            b2 = b2 | 0;
            var d2 = 0, e2 = 0;
            c[b2 >> 2] = 4512;
            if (!(a[b2 + 8 >> 0] | 0)) {
              rG(b2);
              return;
            }
            d2 = c[b2 + 12 >> 2] | 0;
            if (!d2) {
              rG(b2);
              return;
            }
            e2 = c[b2 + 4 >> 2] | 0;
            tb[c[(c[e2 >> 2] | 0) + 16 >> 2] & 127](e2, d2);
            rG(b2);
            return;
          }
          function Hi(a2, b2, d2, e2, f2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            var h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0;
            q2 = i;
            i = i + 32 | 0;
            p2 = c[a2 + 12 >> 2] | 0;
            if (!p2) {
              i = q2;
              return;
            }
            c[f2 + 4 >> 2] = p2;
            a2 = c[b2 + 4 >> 2] | 0;
            r2 = c[d2 + 4 >> 2] | 0;
            b2 = c[b2 + 12 >> 2] | 0;
            e2 = c[d2 + 12 >> 2] | 0;
            h2 = +g[b2 + 48 >> 2] - +g[e2 + 48 >> 2];
            j2 = +g[b2 + 52 >> 2] - +g[e2 + 52 >> 2];
            l2 = +g[b2 + 56 >> 2] - +g[e2 + 56 >> 2];
            m2 = +O(+(h2 * h2 + j2 * j2 + l2 * l2));
            n2 = +g[r2 + 32 >> 2] * +g[r2 + 16 >> 2];
            o2 = +g[a2 + 32 >> 2] * +g[a2 + 16 >> 2] + n2;
            if (m2 > o2) {
              if (!(c[p2 + 748 >> 2] | 0)) {
                i = q2;
                return;
              }
              a2 = c[p2 + 740 >> 2] | 0;
              b2 = c[(c[f2 + 8 >> 2] | 0) + 8 >> 2] | 0;
              e2 = c[(c[f2 + 12 >> 2] | 0) + 8 >> 2] | 0;
              if ((a2 | 0) == (b2 | 0)) {
                Xn(p2, a2 + 4 | 0, e2 + 4 | 0);
                i = q2;
                return;
              } else {
                Xn(p2, e2 + 4 | 0, b2 + 4 | 0);
                i = q2;
                return;
              }
            }
            c[q2 + 16 >> 2] = 1065353216;
            c[q2 + 16 + 4 >> 2] = 0;
            c[q2 + 16 + 8 >> 2] = 0;
            g[q2 + 16 + 12 >> 2] = 0;
            if (m2 > 11920928955078125e-23) {
              g[q2 + 16 >> 2] = h2 * (1 / m2);
              g[q2 + 16 + 4 >> 2] = j2 * (1 / m2);
              g[q2 + 16 + 8 >> 2] = l2 * (1 / m2);
              g[q2 + 16 + 12 >> 2] = 0;
              k2 = h2 * (1 / m2);
              j2 = j2 * (1 / m2);
              h2 = l2 * (1 / m2);
            } else {
              k2 = 1;
              j2 = 0;
              h2 = 0;
            }
            j2 = n2 * j2 + +g[e2 + 52 >> 2];
            l2 = n2 * h2 + +g[e2 + 56 >> 2];
            g[q2 >> 2] = n2 * k2 + +g[e2 + 48 >> 2];
            g[q2 + 4 >> 2] = j2;
            g[q2 + 8 >> 2] = l2;
            g[q2 + 12 >> 2] = 0;
            Yb[c[(c[f2 >> 2] | 0) + 16 >> 2] & 15](f2, q2 + 16 | 0, q2, m2 - o2);
            a2 = c[f2 + 4 >> 2] | 0;
            do
              if (c[a2 + 748 >> 2] | 0) {
                b2 = c[a2 + 740 >> 2] | 0;
                d2 = c[(c[f2 + 8 >> 2] | 0) + 8 >> 2] | 0;
                e2 = c[(c[f2 + 12 >> 2] | 0) + 8 >> 2] | 0;
                if ((b2 | 0) == (d2 | 0)) {
                  Xn(a2, b2 + 4 | 0, e2 + 4 | 0);
                  break;
                } else {
                  Xn(a2, e2 + 4 | 0, d2 + 4 | 0);
                  break;
                }
              }
            while (0);
            i = q2;
            return;
          }
          function Ii(a2, b2, c2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            return 1;
          }
          function Ji(b2, d2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0;
            e2 = c[b2 + 12 >> 2] | 0;
            if (!e2)
              return;
            if (!(a[b2 + 8 >> 0] | 0))
              return;
            f2 = c[d2 + 4 >> 2] | 0;
            if ((f2 | 0) == (c[d2 + 8 >> 2] | 0) ? (h2 = f2 | 0 ? f2 << 1 : 1, (f2 | 0) < (h2 | 0)) : 0) {
              if (!h2)
                e2 = 0;
              else {
                c[5637] = (c[5637] | 0) + 1;
                e2 = qG((h2 << 2 | 3) + 16 | 0) | 0;
                if (!e2)
                  e2 = 0;
                else {
                  c[(e2 + 4 + 15 & -16) + -4 >> 2] = e2;
                  e2 = e2 + 4 + 15 & -16;
                }
                f2 = c[d2 + 4 >> 2] | 0;
              }
              if ((f2 | 0) > 0) {
                g2 = 0;
                do {
                  c[e2 + (g2 << 2) >> 2] = c[(c[d2 + 12 >> 2] | 0) + (g2 << 2) >> 2];
                  g2 = g2 + 1 | 0;
                } while ((g2 | 0) != (f2 | 0));
              }
              g2 = c[d2 + 12 >> 2] | 0;
              if (g2) {
                if (a[d2 + 16 >> 0] | 0) {
                  c[5638] = (c[5638] | 0) + 1;
                  rG(c[g2 + -4 >> 2] | 0);
                  f2 = c[d2 + 4 >> 2] | 0;
                }
                c[d2 + 12 >> 2] = 0;
              }
              a[d2 + 16 >> 0] = 1;
              c[d2 + 12 >> 2] = e2;
              c[d2 + 8 >> 2] = h2;
              e2 = c[b2 + 12 >> 2] | 0;
            }
            c[(c[d2 + 12 >> 2] | 0) + (f2 << 2) >> 2] = e2;
            c[d2 + 4 >> 2] = f2 + 1;
            return;
          }
          function Ki(b2) {
            b2 = b2 | 0;
            var d2 = 0;
            c[b2 >> 2] = 4540;
            if (!(a[b2 + 8 >> 0] | 0))
              return;
            d2 = c[b2 + 12 >> 2] | 0;
            if (!d2)
              return;
            b2 = c[b2 + 4 >> 2] | 0;
            tb[c[(c[b2 >> 2] | 0) + 16 >> 2] & 127](b2, d2);
            return;
          }
          function Li(b2) {
            b2 = b2 | 0;
            var d2 = 0, e2 = 0;
            c[b2 >> 2] = 4540;
            if (!(a[b2 + 8 >> 0] | 0)) {
              rG(b2);
              return;
            }
            d2 = c[b2 + 12 >> 2] | 0;
            if (!d2) {
              rG(b2);
              return;
            }
            e2 = c[b2 + 4 >> 2] | 0;
            tb[c[(c[e2 >> 2] | 0) + 16 >> 2] & 127](e2, d2);
            rG(b2);
            return;
          }
          function Mi(b2, d2, e2, f2, h2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            h2 = h2 | 0;
            var j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0;
            l2 = i;
            i = i + 160 | 0;
            j2 = c[b2 + 12 >> 2] | 0;
            if (!j2) {
              i = l2;
              return;
            }
            m2 = (a[b2 + 16 >> 0] | 0) != 0;
            n2 = m2 ? e2 : d2;
            e2 = m2 ? d2 : e2;
            p2 = c[n2 + 4 >> 2] | 0;
            o2 = c[e2 + 4 >> 2] | 0;
            c[h2 + 4 >> 2] = j2;
            d2 = c[j2 + 752 >> 2] | 0;
            c[l2 + 136 >> 2] = 4568;
            c[l2 + 136 + 4 >> 2] = p2;
            c[l2 + 136 + 8 >> 2] = o2;
            c[l2 + 136 + 12 >> 2] = d2;
            g[l2 + 128 >> 2] = 999999984306749400;
            d2 = c[n2 + 12 >> 2] | 0;
            c[l2 >> 2] = c[d2 >> 2];
            c[l2 + 4 >> 2] = c[d2 + 4 >> 2];
            c[l2 + 8 >> 2] = c[d2 + 8 >> 2];
            c[l2 + 12 >> 2] = c[d2 + 12 >> 2];
            c[l2 + 16 >> 2] = c[d2 + 16 >> 2];
            c[l2 + 16 + 4 >> 2] = c[d2 + 16 + 4 >> 2];
            c[l2 + 16 + 8 >> 2] = c[d2 + 16 + 8 >> 2];
            c[l2 + 16 + 12 >> 2] = c[d2 + 16 + 12 >> 2];
            c[l2 + 32 >> 2] = c[d2 + 32 >> 2];
            c[l2 + 32 + 4 >> 2] = c[d2 + 32 + 4 >> 2];
            c[l2 + 32 + 8 >> 2] = c[d2 + 32 + 8 >> 2];
            c[l2 + 32 + 12 >> 2] = c[d2 + 32 + 12 >> 2];
            c[l2 + 48 >> 2] = c[d2 + 48 >> 2];
            c[l2 + 48 + 4 >> 2] = c[d2 + 48 + 4 >> 2];
            c[l2 + 48 + 8 >> 2] = c[d2 + 48 + 8 >> 2];
            c[l2 + 48 + 12 >> 2] = c[d2 + 48 + 12 >> 2];
            e2 = c[e2 + 12 >> 2] | 0;
            c[l2 + 64 >> 2] = c[e2 >> 2];
            c[l2 + 64 + 4 >> 2] = c[e2 + 4 >> 2];
            c[l2 + 64 + 8 >> 2] = c[e2 + 8 >> 2];
            c[l2 + 64 + 12 >> 2] = c[e2 + 12 >> 2];
            c[l2 + 80 >> 2] = c[e2 + 16 >> 2];
            c[l2 + 80 + 4 >> 2] = c[e2 + 16 + 4 >> 2];
            c[l2 + 80 + 8 >> 2] = c[e2 + 16 + 8 >> 2];
            c[l2 + 80 + 12 >> 2] = c[e2 + 16 + 12 >> 2];
            c[l2 + 96 >> 2] = c[e2 + 32 >> 2];
            c[l2 + 96 + 4 >> 2] = c[e2 + 32 + 4 >> 2];
            c[l2 + 96 + 8 >> 2] = c[e2 + 32 + 8 >> 2];
            c[l2 + 96 + 12 >> 2] = c[e2 + 32 + 12 >> 2];
            c[l2 + 112 >> 2] = c[e2 + 48 >> 2];
            c[l2 + 112 + 4 >> 2] = c[e2 + 48 + 4 >> 2];
            c[l2 + 112 + 8 >> 2] = c[e2 + 48 + 8 >> 2];
            c[l2 + 112 + 12 >> 2] = c[e2 + 48 + 12 >> 2];
            Ri(l2 + 136 | 0, l2, h2, c[f2 + 20 >> 2] | 0, m2);
            do
              if (a[b2 + 8 >> 0] | 0 ? (k2 = c[h2 + 4 >> 2] | 0, c[k2 + 748 >> 2] | 0) : 0) {
                d2 = c[k2 + 740 >> 2] | 0;
                e2 = c[(c[h2 + 8 >> 2] | 0) + 8 >> 2] | 0;
                j2 = c[(c[h2 + 12 >> 2] | 0) + 8 >> 2] | 0;
                if ((d2 | 0) == (e2 | 0)) {
                  Xn(k2, d2 + 4 | 0, j2 + 4 | 0);
                  break;
                } else {
                  Xn(k2, j2 + 4 | 0, e2 + 4 | 0);
                  break;
                }
              }
            while (0);
            i = l2;
            return;
          }
          function Ni(a2, b2, c2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            return 1;
          }
          function Oi(b2, d2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0;
            e2 = c[b2 + 12 >> 2] | 0;
            if (!e2)
              return;
            if (!(a[b2 + 8 >> 0] | 0))
              return;
            f2 = c[d2 + 4 >> 2] | 0;
            if ((f2 | 0) == (c[d2 + 8 >> 2] | 0) ? (h2 = f2 | 0 ? f2 << 1 : 1, (f2 | 0) < (h2 | 0)) : 0) {
              if (!h2)
                e2 = 0;
              else {
                c[5637] = (c[5637] | 0) + 1;
                e2 = qG((h2 << 2 | 3) + 16 | 0) | 0;
                if (!e2)
                  e2 = 0;
                else {
                  c[(e2 + 4 + 15 & -16) + -4 >> 2] = e2;
                  e2 = e2 + 4 + 15 & -16;
                }
                f2 = c[d2 + 4 >> 2] | 0;
              }
              if ((f2 | 0) > 0) {
                g2 = 0;
                do {
                  c[e2 + (g2 << 2) >> 2] = c[(c[d2 + 12 >> 2] | 0) + (g2 << 2) >> 2];
                  g2 = g2 + 1 | 0;
                } while ((g2 | 0) != (f2 | 0));
              }
              g2 = c[d2 + 12 >> 2] | 0;
              if (g2) {
                if (a[d2 + 16 >> 0] | 0) {
                  c[5638] = (c[5638] | 0) + 1;
                  rG(c[g2 + -4 >> 2] | 0);
                  f2 = c[d2 + 4 >> 2] | 0;
                }
                c[d2 + 12 >> 2] = 0;
              }
              a[d2 + 16 >> 0] = 1;
              c[d2 + 12 >> 2] = e2;
              c[d2 + 8 >> 2] = h2;
              e2 = c[b2 + 12 >> 2] | 0;
            }
            c[(c[d2 + 12 >> 2] | 0) + (f2 << 2) >> 2] = e2;
            c[d2 + 4 >> 2] = f2 + 1;
            return;
          }
          function Pi(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0;
            while (1) {
              j2 = c[a2 + 12 >> 2] | 0;
              k2 = c[j2 + (((b2 + d2 | 0) / 2 | 0) << 3) >> 2] | 0;
              e2 = b2;
              f2 = d2;
              while (1) {
                while (1) {
                  h2 = e2 + 1 | 0;
                  if ((c[j2 + (e2 << 3) >> 2] | 0) < (k2 | 0))
                    e2 = h2;
                  else {
                    i2 = f2;
                    break;
                  }
                }
                while (1) {
                  g2 = j2 + (i2 << 3) | 0;
                  f2 = i2 + -1 | 0;
                  if ((k2 | 0) < (c[g2 >> 2] | 0))
                    i2 = f2;
                  else
                    break;
                }
                if ((e2 | 0) > (i2 | 0))
                  f2 = i2;
                else {
                  e2 = j2 + (e2 << 3) | 0;
                  l2 = c[e2 >> 2] | 0;
                  j2 = c[e2 + 4 >> 2] | 0;
                  m2 = c[g2 + 4 >> 2] | 0;
                  c[e2 >> 2] = c[g2 >> 2];
                  c[e2 + 4 >> 2] = m2;
                  e2 = (c[a2 + 12 >> 2] | 0) + (i2 << 3) | 0;
                  c[e2 >> 2] = l2;
                  c[e2 + 4 >> 2] = j2;
                  e2 = h2;
                }
                if ((e2 | 0) > (f2 | 0))
                  break;
                j2 = c[a2 + 12 >> 2] | 0;
              }
              if ((f2 | 0) > (b2 | 0))
                Pi(a2, b2, f2);
              if ((e2 | 0) < (d2 | 0))
                b2 = e2;
              else
                break;
            }
            return;
          }
          function Qi(a2) {
            a2 = a2 | 0;
            rG(a2);
            return;
          }
          function Ri(a2, b2, d2, e2, f2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            var h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0;
            E2 = i;
            i = i + 64 | 0;
            A2 = +g[b2 + 48 >> 2] - +g[b2 + 112 >> 2];
            h2 = +g[b2 + 52 >> 2] - +g[b2 + 116 >> 2];
            D2 = +g[b2 + 56 >> 2] - +g[b2 + 120 >> 2];
            B2 = A2 * +g[b2 + 64 >> 2] + h2 * +g[b2 + 80 >> 2] + D2 * +g[b2 + 96 >> 2];
            C2 = A2 * +g[b2 + 68 >> 2] + h2 * +g[b2 + 84 >> 2] + D2 * +g[b2 + 100 >> 2];
            D2 = A2 * +g[b2 + 72 >> 2] + h2 * +g[b2 + 88 >> 2] + D2 * +g[b2 + 104 >> 2];
            e2 = c[a2 + 8 >> 2] | 0;
            z2 = c[a2 + 4 >> 2] | 0;
            h2 = +g[z2 + 32 >> 2] * +g[z2 + 16 >> 2];
            A2 = h2 + +g[a2 + 12 >> 2];
            p2 = +g[e2 + 76 >> 2];
            q2 = +g[e2 + 60 >> 2];
            r2 = +g[e2 + 80 >> 2];
            s2 = +g[e2 + 64 >> 2];
            t2 = +g[e2 + 84 >> 2];
            u2 = +g[e2 + 68 >> 2];
            v2 = +g[e2 + 92 >> 2];
            w2 = +g[e2 + 96 >> 2];
            x2 = +g[e2 + 100 >> 2];
            k2 = (r2 - s2) * (x2 - u2) - (t2 - u2) * (w2 - s2);
            m2 = (t2 - u2) * (v2 - q2) - (p2 - q2) * (x2 - u2);
            o2 = (p2 - q2) * (w2 - s2) - (r2 - s2) * (v2 - q2);
            n2 = 1 / +O(+(o2 * o2 + (k2 * k2 + m2 * m2)));
            j2 = (B2 - q2) * (n2 * k2) + (C2 - s2) * (n2 * m2) + n2 * o2 * (D2 - u2);
            if (j2 < 0) {
              y2 = -j2;
              l2 = -(n2 * k2);
              j2 = -(n2 * m2);
              k2 = -(n2 * o2);
            } else {
              y2 = j2;
              l2 = n2 * k2;
              j2 = n2 * m2;
              k2 = n2 * o2;
            }
            if (!(y2 < A2)) {
              i = E2;
              return;
            }
            o2 = (D2 - u2) * ((p2 - q2) * j2 - (r2 - s2) * l2) + ((B2 - q2) * ((r2 - s2) * k2 - (t2 - u2) * j2) + (C2 - s2) * ((t2 - u2) * l2 - (p2 - q2) * k2));
            t2 = (D2 - t2) * ((v2 - p2) * j2 - (w2 - r2) * l2) + ((B2 - p2) * ((w2 - r2) * k2 - (x2 - t2) * j2) + (C2 - r2) * ((x2 - t2) * l2 - (v2 - p2) * k2));
            x2 = (D2 - x2) * ((q2 - v2) * j2 - (s2 - w2) * l2) + ((B2 - v2) * ((s2 - w2) * k2 - (u2 - x2) * j2) + (C2 - w2) * ((u2 - x2) * l2 - (q2 - v2) * k2));
            if (!(x2 > 0 & (o2 > 0 & t2 > 0)) ? !(x2 <= 0 & (o2 <= 0 & t2 <= 0)) : 0) {
              if ((vb[c[(c[e2 >> 2] | 0) + 100 >> 2] & 127](e2) | 0) <= 0) {
                i = E2;
                return;
              }
              s2 = 0;
              r2 = 0;
              q2 = 0;
              e2 = 0;
              z2 = 0;
              do {
                F2 = c[a2 + 8 >> 2] | 0;
                bc[c[(c[F2 >> 2] | 0) + 104 >> 2] & 127](F2, z2, E2 + 48 | 0, E2 + 32 | 0);
                m2 = +g[E2 + 48 >> 2];
                w2 = +g[E2 + 48 + 4 >> 2];
                u2 = +g[E2 + 48 + 8 >> 2];
                n2 = +g[E2 + 32 >> 2] - m2;
                x2 = +g[E2 + 32 + 4 >> 2] - w2;
                v2 = +g[E2 + 32 + 8 >> 2] - u2;
                do
                  if ((B2 - m2) * n2 + (C2 - w2) * x2 + (D2 - u2) * v2 > 0)
                    if ((B2 - m2) * n2 + (C2 - w2) * x2 + (D2 - u2) * v2 < n2 * n2 + x2 * x2 + v2 * v2) {
                      y2 = ((B2 - m2) * n2 + (C2 - w2) * x2 + (D2 - u2) * v2) / (n2 * n2 + x2 * x2 + v2 * v2);
                      o2 = B2 - m2 - n2 * y2;
                      p2 = C2 - w2 - x2 * y2;
                      t2 = D2 - u2 - v2 * y2;
                      break;
                    } else {
                      o2 = B2 - m2 - n2;
                      p2 = C2 - w2 - x2;
                      t2 = D2 - u2 - v2;
                      y2 = 1;
                      break;
                    }
                  else {
                    o2 = B2 - m2;
                    p2 = C2 - w2;
                    t2 = D2 - u2;
                    y2 = 0;
                  }
                while (0);
                if (o2 * o2 + p2 * p2 + t2 * t2 < A2 * A2) {
                  s2 = m2 + n2 * y2;
                  r2 = u2 + v2 * y2;
                  q2 = w2 + x2 * y2;
                  e2 = 1;
                }
                z2 = z2 + 1 | 0;
                F2 = c[a2 + 8 >> 2] | 0;
              } while ((z2 | 0) < (vb[c[(c[F2 >> 2] | 0) + 100 >> 2] & 127](F2) | 0));
              if (!(e2 & 1)) {
                i = E2;
                return;
              } else
                p2 = A2 * A2;
            } else {
              p2 = A2 * A2;
              s2 = B2 - y2 * l2;
              r2 = D2 - y2 * k2;
              q2 = C2 - y2 * j2;
            }
            n2 = B2 - s2;
            o2 = C2 - q2;
            m2 = D2 - r2;
            if (!(n2 * n2 + o2 * o2 + m2 * m2 < p2)) {
              i = E2;
              return;
            }
            if (n2 * n2 + o2 * o2 + m2 * m2 > 11920928955078125e-23) {
              j2 = +O(+(n2 * n2 + o2 * o2 + m2 * m2));
              h2 = h2 - j2;
              l2 = n2 * (1 / j2);
              k2 = m2 * (1 / j2);
              j2 = o2 * (1 / j2);
            }
            h2 = -h2;
            if (f2) {
              x2 = +g[b2 + 64 >> 2];
              y2 = +g[b2 + 68 >> 2];
              A2 = +g[b2 + 72 >> 2];
              B2 = x2 * l2 + y2 * j2 + A2 * k2;
              o2 = +g[b2 + 80 >> 2];
              p2 = +g[b2 + 84 >> 2];
              t2 = +g[b2 + 88 >> 2];
              C2 = l2 * o2 + j2 * p2 + k2 * t2;
              u2 = +g[b2 + 96 >> 2];
              v2 = +g[b2 + 100 >> 2];
              w2 = +g[b2 + 104 >> 2];
              D2 = l2 * u2 + j2 * v2 + k2 * w2;
              g[E2 + 48 >> 2] = -B2;
              g[E2 + 48 + 4 >> 2] = -C2;
              g[E2 + 48 + 8 >> 2] = -D2;
              g[E2 + 48 + 12 >> 2] = 0;
              C2 = s2 * o2 + q2 * p2 + r2 * t2 + +g[b2 + 116 >> 2] + C2 * h2;
              D2 = s2 * u2 + q2 * v2 + r2 * w2 + +g[b2 + 120 >> 2] + D2 * h2;
              g[E2 + 32 >> 2] = s2 * x2 + q2 * y2 + r2 * A2 + +g[b2 + 112 >> 2] + B2 * h2;
              g[E2 + 32 + 4 >> 2] = C2;
              g[E2 + 32 + 8 >> 2] = D2;
              g[E2 + 32 + 12 >> 2] = 0;
              Yb[c[(c[d2 >> 2] | 0) + 16 >> 2] & 15](d2, E2 + 48 | 0, E2 + 32 | 0, h2);
              i = E2;
              return;
            } else {
              F2 = c[(c[d2 >> 2] | 0) + 16 >> 2] | 0;
              y2 = +g[b2 + 64 >> 2];
              A2 = +g[b2 + 68 >> 2];
              B2 = +g[b2 + 72 >> 2];
              u2 = +g[b2 + 80 >> 2];
              v2 = +g[b2 + 84 >> 2];
              C2 = +g[b2 + 88 >> 2];
              w2 = +g[b2 + 96 >> 2];
              x2 = +g[b2 + 100 >> 2];
              D2 = +g[b2 + 104 >> 2];
              g[E2 + 16 >> 2] = y2 * l2 + A2 * j2 + B2 * k2;
              g[E2 + 16 + 4 >> 2] = l2 * u2 + j2 * v2 + k2 * C2;
              g[E2 + 16 + 8 >> 2] = l2 * w2 + j2 * x2 + k2 * D2;
              g[E2 + 16 + 12 >> 2] = 0;
              C2 = s2 * u2 + q2 * v2 + r2 * C2 + +g[b2 + 116 >> 2];
              D2 = s2 * w2 + q2 * x2 + r2 * D2 + +g[b2 + 120 >> 2];
              g[E2 >> 2] = s2 * y2 + q2 * A2 + r2 * B2 + +g[b2 + 112 >> 2];
              g[E2 + 4 >> 2] = C2;
              g[E2 + 8 >> 2] = D2;
              g[E2 + 12 >> 2] = 0;
              Yb[F2 & 15](d2, E2 + 16 | 0, E2, h2);
              i = E2;
              return;
            }
          }
          function Si(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0;
            c[a2 >> 2] = 6248;
            b2 = c[a2 + 56 >> 2] | 0;
            if (b2 | 0 ? (rb[c[c[b2 >> 2] >> 2] & 255](b2), d2 = c[a2 + 56 >> 2] | 0, d2 | 0) : 0) {
              c[5638] = (c[5638] | 0) + 1;
              rG(c[d2 + -4 >> 2] | 0);
            }
            c[5638] = (c[5638] | 0) + 1;
            rG(c[a2 + -4 >> 2] | 0);
            return;
          }
          function Ti(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0;
            i2 = +Hb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
            m2 = i2 + +g[a2 + 32 >> 2];
            k2 = i2 + +g[a2 + 36 >> 2];
            i2 = i2 + +g[a2 + 40 >> 2];
            u2 = +N(+ +g[b2 >> 2]);
            t2 = +N(+ +g[b2 + 4 >> 2]);
            s2 = +N(+ +g[b2 + 8 >> 2]);
            q2 = +N(+ +g[b2 + 16 >> 2]);
            p2 = +N(+ +g[b2 + 20 >> 2]);
            o2 = +N(+ +g[b2 + 24 >> 2]);
            l2 = +N(+ +g[b2 + 32 >> 2]);
            j2 = +N(+ +g[b2 + 36 >> 2]);
            h2 = +N(+ +g[b2 + 40 >> 2]);
            r2 = +g[b2 + 48 >> 2];
            n2 = +g[b2 + 52 >> 2];
            f2 = +g[b2 + 56 >> 2];
            g[d2 >> 2] = r2 - (m2 * u2 + k2 * t2 + i2 * s2);
            g[d2 + 4 >> 2] = n2 - (m2 * q2 + k2 * p2 + i2 * o2);
            g[d2 + 8 >> 2] = f2 - (m2 * l2 + k2 * j2 + i2 * h2);
            g[d2 + 12 >> 2] = 0;
            g[e2 >> 2] = m2 * u2 + k2 * t2 + i2 * s2 + r2;
            g[e2 + 4 >> 2] = m2 * q2 + k2 * p2 + i2 * o2 + n2;
            g[e2 + 8 >> 2] = m2 * l2 + k2 * j2 + i2 * h2 + f2;
            g[e2 + 12 >> 2] = 0;
            return;
          }
          function Ui(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0;
            k2 = +Hb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
            h2 = +Hb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
            d2 = +Hb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
            m2 = (k2 + +g[a2 + 32 >> 2]) / +g[a2 + 16 >> 2];
            j2 = (h2 + +g[a2 + 36 >> 2]) / +g[a2 + 20 >> 2];
            f2 = (d2 + +g[a2 + 40 >> 2]) / +g[a2 + 24 >> 2];
            l2 = +N(+ +g[b2 >> 2]);
            i2 = +N(+ +g[b2 + 4 >> 2]);
            e2 = +N(+ +g[b2 + 8 >> 2]);
            g[a2 + 16 >> 2] = l2;
            g[a2 + 20 >> 2] = i2;
            g[a2 + 24 >> 2] = e2;
            g[a2 + 28 >> 2] = 0;
            g[a2 + 32 >> 2] = m2 * l2 - k2;
            g[a2 + 36 >> 2] = j2 * i2 - h2;
            g[a2 + 40 >> 2] = f2 * e2 - d2;
            g[a2 + 44 >> 2] = 0;
            return;
          }
          function Vi(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = +b2;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0;
            i2 = +g[a2 + 32 >> 2];
            f2 = +g[a2 + 36 >> 2];
            j2 = +g[a2 + 40 >> 2];
            h2 = +Hb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
            e2 = +Hb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
            j2 = (j2 + +Hb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2)) * 2;
            g[d2 >> 2] = b2 / 12 * ((f2 + e2) * 2 * ((f2 + e2) * 2) + j2 * j2);
            g[d2 + 4 >> 2] = b2 / 12 * ((i2 + h2) * 2 * ((i2 + h2) * 2) + j2 * j2);
            g[d2 + 8 >> 2] = b2 / 12 * ((i2 + h2) * 2 * ((i2 + h2) * 2) + (f2 + e2) * 2 * ((f2 + e2) * 2));
            g[d2 + 12 >> 2] = 0;
            return;
          }
          function Wi(a2) {
            a2 = a2 | 0;
            return 12683;
          }
          function Xi(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            var d2 = 0, e2 = 0, f2 = 0, h2 = 0, i2 = 0;
            h2 = +Hb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
            e2 = +Hb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
            i2 = +Hb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
            h2 = h2 + +g[a2 + 32 >> 2];
            e2 = e2 + +g[a2 + 36 >> 2];
            i2 = i2 + +g[a2 + 40 >> 2];
            g[a2 + 48 >> 2] = b2;
            f2 = +Hb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
            d2 = +Hb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
            b2 = i2 - +Hb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
            g[a2 + 32 >> 2] = h2 - f2;
            g[a2 + 36 >> 2] = e2 - d2;
            g[a2 + 40 >> 2] = b2;
            g[a2 + 44 >> 2] = 0;
            return;
          }
          function Yi(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0;
            i2 = +g[b2 + 32 >> 2];
            j2 = +g[b2 + 36 >> 2];
            e2 = +g[b2 + 40 >> 2];
            h2 = +Hb[c[(c[b2 >> 2] | 0) + 48 >> 2] & 15](b2);
            f2 = +Hb[c[(c[b2 >> 2] | 0) + 48 >> 2] & 15](b2);
            e2 = e2 + +Hb[c[(c[b2 >> 2] | 0) + 48 >> 2] & 15](b2);
            f2 = +g[d2 + 4 >> 2] >= 0 ? j2 + f2 : -(j2 + f2);
            e2 = +g[d2 + 8 >> 2] >= 0 ? e2 : -e2;
            g[a2 >> 2] = +g[d2 >> 2] >= 0 ? i2 + h2 : -(i2 + h2);
            g[a2 + 4 >> 2] = f2;
            g[a2 + 8 >> 2] = e2;
            g[a2 + 12 >> 2] = 0;
            return;
          }
          function Zi(a2, b2, c2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            var d2 = 0, e2 = 0, f2 = 0;
            f2 = +g[b2 + 32 >> 2];
            e2 = +g[b2 + 36 >> 2];
            e2 = +g[c2 + 4 >> 2] >= 0 ? e2 : -e2;
            d2 = +g[b2 + 40 >> 2];
            d2 = +g[c2 + 8 >> 2] >= 0 ? d2 : -d2;
            g[a2 >> 2] = +g[c2 >> 2] >= 0 ? f2 : -f2;
            g[a2 + 4 >> 2] = e2;
            g[a2 + 8 >> 2] = d2;
            g[a2 + 12 >> 2] = 0;
            return;
          }
          function _i(a2, b2, c2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, h2 = 0, i2 = 0;
            if ((d2 | 0) <= 0)
              return;
            e2 = 0;
            do {
              i2 = +g[a2 + 32 >> 2];
              h2 = +g[a2 + 36 >> 2];
              h2 = +g[b2 + (e2 << 4) + 4 >> 2] >= 0 ? h2 : -h2;
              f2 = +g[a2 + 40 >> 2];
              f2 = +g[b2 + (e2 << 4) + 8 >> 2] >= 0 ? f2 : -f2;
              g[c2 + (e2 << 4) >> 2] = +g[b2 + (e2 << 4) >> 2] >= 0 ? i2 : -i2;
              g[c2 + (e2 << 4) + 4 >> 2] = h2;
              g[c2 + (e2 << 4) + 8 >> 2] = f2;
              g[c2 + (e2 << 4) + 12 >> 2] = 0;
              e2 = e2 + 1 | 0;
            } while ((e2 | 0) != (d2 | 0));
            return;
          }
          function $i(a2) {
            a2 = a2 | 0;
            return 6;
          }
          function aj(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            switch (b2 | 0) {
              case 0: {
                c[d2 >> 2] = 1065353216;
                c[d2 + 4 >> 2] = 0;
                c[d2 + 8 >> 2] = 0;
                g[d2 + 12 >> 2] = 0;
                return;
              }
              case 1: {
                c[d2 >> 2] = -1082130432;
                c[d2 + 4 >> 2] = 0;
                c[d2 + 8 >> 2] = 0;
                g[d2 + 12 >> 2] = 0;
                return;
              }
              case 2: {
                c[d2 >> 2] = 0;
                c[d2 + 4 >> 2] = 1065353216;
                c[d2 + 8 >> 2] = 0;
                g[d2 + 12 >> 2] = 0;
                return;
              }
              case 3: {
                c[d2 >> 2] = 0;
                c[d2 + 4 >> 2] = -1082130432;
                c[d2 + 8 >> 2] = 0;
                g[d2 + 12 >> 2] = 0;
                return;
              }
              case 4: {
                c[d2 >> 2] = 0;
                c[d2 + 4 >> 2] = 0;
                c[d2 + 8 >> 2] = 1065353216;
                g[d2 + 12 >> 2] = 0;
                return;
              }
              case 5: {
                c[d2 >> 2] = 0;
                c[d2 + 4 >> 2] = 0;
                c[d2 + 8 >> 2] = -1082130432;
                g[d2 + 12 >> 2] = 0;
                return;
              }
              default:
                return;
            }
          }
          function bj(a2) {
            a2 = a2 | 0;
            return 8;
          }
          function cj(a2) {
            a2 = a2 | 0;
            return 12;
          }
          function dj(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0;
            do
              switch (b2 | 0) {
                case 0: {
                  f2 = 0;
                  b2 = 1;
                  break;
                }
                case 1: {
                  f2 = 0;
                  b2 = 2;
                  break;
                }
                case 2: {
                  f2 = 1;
                  b2 = 3;
                  break;
                }
                case 3: {
                  f2 = 2;
                  break;
                }
                case 4: {
                  f2 = 0;
                  break;
                }
                case 5: {
                  f2 = 1;
                  break;
                }
                case 6: {
                  f2 = 2;
                  break;
                }
                case 7: {
                  f2 = 3;
                  break;
                }
                case 8: {
                  f2 = 4;
                  b2 = 5;
                  break;
                }
                case 9: {
                  f2 = 4;
                  b2 = 6;
                  break;
                }
                case 10: {
                  f2 = 5;
                  b2 = 7;
                  break;
                }
                case 11: {
                  f2 = 6;
                  b2 = 7;
                  break;
                }
                default: {
                  f2 = 0;
                  b2 = 0;
                }
              }
            while (0);
            Zb[c[(c[a2 >> 2] | 0) + 108 >> 2] & 127](a2, f2, d2);
            Zb[c[(c[a2 >> 2] | 0) + 108 >> 2] & 127](a2, b2, e2);
            return;
          }
          function ej(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0;
            j2 = +g[a2 + 32 >> 2];
            h2 = +g[a2 + 36 >> 2];
            e2 = +g[a2 + 40 >> 2];
            i2 = +Hb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
            f2 = +Hb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
            e2 = e2 + +Hb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
            g[d2 >> 2] = +(b2 & 1 ^ 1 | 0) * (j2 + i2) - +(b2 & 1 | 0) * (j2 + i2);
            g[d2 + 4 >> 2] = +(b2 >>> 1 & 1 ^ 1 | 0) * (h2 + f2) - +(b2 >>> 1 & 1 | 0) * (h2 + f2);
            g[d2 + 8 >> 2] = +(b2 >>> 2 & 1 ^ 1 | 0) * e2 - +(b2 >>> 2 & 1 | 0) * e2;
            g[d2 + 12 >> 2] = 0;
            return;
          }
          function fj(a2) {
            a2 = a2 | 0;
            return 6;
          }
          function gj(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, h2 = 0, j2 = 0, l2 = 0, m2 = 0, n2 = 0;
            f2 = i;
            i = i + 48 | 0;
            Zb[c[(c[a2 >> 2] | 0) + 124 >> 2] & 127](a2, f2 + 32 | 0, e2);
            n2 = c[f2 + 32 >> 2] | 0;
            m2 = c[f2 + 32 + 4 >> 2] | 0;
            e2 = c[f2 + 32 + 8 >> 2] | 0;
            c[b2 >> 2] = n2;
            c[b2 + 4 >> 2] = m2;
            c[b2 + 8 >> 2] = e2;
            g[b2 + 12 >> 2] = 0;
            b2 = c[(c[a2 >> 2] | 0) + 64 >> 2] | 0;
            l2 = -(c[k >> 2] = n2, +g[k >> 2]);
            j2 = -(c[k >> 2] = m2, +g[k >> 2]);
            h2 = -(c[k >> 2] = e2, +g[k >> 2]);
            g[f2 >> 2] = l2;
            g[f2 + 4 >> 2] = j2;
            g[f2 + 8 >> 2] = h2;
            g[f2 + 12 >> 2] = 0;
            Zb[b2 & 127](f2 + 16 | 0, a2, f2);
            c[d2 >> 2] = c[f2 + 16 >> 2];
            c[d2 + 4 >> 2] = c[f2 + 16 + 4 >> 2];
            c[d2 + 8 >> 2] = c[f2 + 16 + 8 >> 2];
            c[d2 + 12 >> 2] = c[f2 + 16 + 12 >> 2];
            i = f2;
            return;
          }
          function hj(a2, b2, c2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = +c2;
            var d2 = 0, e2 = 0, f2 = 0, h2 = 0;
            e2 = +g[a2 + 32 >> 2];
            f2 = +g[a2 + 36 >> 2];
            h2 = +g[a2 + 40 >> 2];
            d2 = +g[b2 >> 2];
            if (!(d2 <= e2 + c2)) {
              b2 = 0;
              return b2 | 0;
            }
            if (!(d2 >= -e2 - c2)) {
              b2 = 0;
              return b2 | 0;
            }
            d2 = +g[b2 + 4 >> 2];
            if (!(d2 <= f2 + c2)) {
              b2 = 0;
              return b2 | 0;
            }
            if (!(d2 >= -f2 - c2)) {
              b2 = 0;
              return b2 | 0;
            }
            d2 = +g[b2 + 8 >> 2];
            if (!(d2 <= h2 + c2)) {
              b2 = 0;
              return b2 | 0;
            }
            b2 = d2 >= -h2 - c2;
            return b2 | 0;
          }
          function ij(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, h2 = 0;
            f2 = +g[a2 + 32 >> 2];
            h2 = +g[a2 + 36 >> 2];
            e2 = +g[a2 + 40 >> 2];
            switch (d2 | 0) {
              case 0: {
                c[b2 >> 2] = 1065353216;
                c[b2 + 4 >> 2] = 0;
                c[b2 + 8 >> 2] = 0;
                g[b2 + 12 >> 2] = -f2;
                return;
              }
              case 1: {
                c[b2 >> 2] = -1082130432;
                c[b2 + 4 >> 2] = 0;
                c[b2 + 8 >> 2] = 0;
                g[b2 + 12 >> 2] = -f2;
                return;
              }
              case 2: {
                c[b2 >> 2] = 0;
                c[b2 + 4 >> 2] = 1065353216;
                c[b2 + 8 >> 2] = 0;
                g[b2 + 12 >> 2] = -h2;
                return;
              }
              case 3: {
                c[b2 >> 2] = 0;
                c[b2 + 4 >> 2] = -1082130432;
                c[b2 + 8 >> 2] = 0;
                g[b2 + 12 >> 2] = -h2;
                return;
              }
              case 4: {
                c[b2 >> 2] = 0;
                c[b2 + 4 >> 2] = 0;
                c[b2 + 8 >> 2] = 1065353216;
                g[b2 + 12 >> 2] = -e2;
                return;
              }
              case 5: {
                c[b2 >> 2] = 0;
                c[b2 + 4 >> 2] = 0;
                c[b2 + 8 >> 2] = -1082130432;
                g[b2 + 12 >> 2] = -e2;
                return;
              }
              default:
                return;
            }
          }
          function jj(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0;
            c[a2 + 8 >> 2] = 0;
            c[a2 + 12 >> 2] = -1;
            c[a2 + 16 >> 2] = 1065353216;
            c[a2 + 20 >> 2] = 1065353216;
            c[a2 + 24 >> 2] = 1065353216;
            g[a2 + 28 >> 2] = 0;
            g[a2 + 48 >> 2] = 0.03999999910593033;
            c[a2 + 56 >> 2] = 0;
            c[a2 >> 2] = 4588;
            c[a2 + 4 >> 2] = 0;
            h2 = +g[b2 >> 2];
            f2 = +g[b2 + 4 >> 2];
            d2 = +g[b2 + 8 >> 2];
            d2 = +g[b2 + ((h2 < f2 ? h2 < d2 ? 0 : 2 : f2 < d2 ? 1 : 2) << 2) >> 2] * 0.10000000149011612;
            if (d2 < 0.03999999910593033) {
              j2 = +Mg(a2);
              i2 = +Hb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
              h2 = +Hb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
              j2 = j2 + +g[a2 + 32 >> 2];
              i2 = i2 + +g[a2 + 36 >> 2];
              h2 = h2 + +g[a2 + 40 >> 2];
              g[a2 + 48 >> 2] = d2;
              d2 = +Hb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
              f2 = +Hb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
              h2 = h2 - +Hb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
              g[a2 + 32 >> 2] = j2 - d2;
              g[a2 + 36 >> 2] = i2 - f2;
              g[a2 + 40 >> 2] = h2;
              g[a2 + 44 >> 2] = 0;
              e2 = c[a2 >> 2] | 0;
            } else
              e2 = 4588;
            h2 = +Hb[c[e2 + 48 >> 2] & 15](a2);
            i2 = +Hb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
            j2 = +Hb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
            i2 = +g[b2 + 4 >> 2] * +g[a2 + 20 >> 2] - i2;
            j2 = +g[b2 + 8 >> 2] * +g[a2 + 24 >> 2] - j2;
            g[a2 + 32 >> 2] = +g[b2 >> 2] * +g[a2 + 16 >> 2] - h2;
            g[a2 + 36 >> 2] = i2;
            g[a2 + 40 >> 2] = j2;
            g[a2 + 44 >> 2] = 0;
            return;
          }
          function kj(b2) {
            b2 = b2 | 0;
            var d2 = 0;
            c[b2 >> 2] = 4724;
            if (!(a[b2 + 65 >> 0] | 0))
              return;
            d2 = c[b2 + 56 >> 2] | 0;
            rb[c[c[d2 >> 2] >> 2] & 255](d2);
            b2 = c[b2 + 56 >> 2] | 0;
            if (!b2)
              return;
            c[5638] = (c[5638] | 0) + 1;
            rG(c[b2 + -4 >> 2] | 0);
            return;
          }
          function lj(b2) {
            b2 = b2 | 0;
            var d2 = 0;
            c[b2 >> 2] = 4724;
            if (a[b2 + 65 >> 0] | 0 ? (d2 = c[b2 + 56 >> 2] | 0, rb[c[c[d2 >> 2] >> 2] & 255](d2), d2 = c[b2 + 56 >> 2] | 0, d2 | 0) : 0) {
              c[5638] = (c[5638] | 0) + 1;
              rG(c[d2 + -4 >> 2] | 0);
            }
            c[5638] = (c[5638] | 0) + 1;
            rG(c[b2 + -4 >> 2] | 0);
            return;
          }
          function mj(b2, d2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0;
            j2 = vb[c[(c[b2 >> 2] | 0) + 28 >> 2] & 127](b2) | 0;
            i2 = +g[j2 >> 2] - +g[d2 >> 2];
            h2 = +g[j2 + 4 >> 2] - +g[d2 + 4 >> 2];
            f2 = +g[j2 + 8 >> 2] - +g[d2 + 8 >> 2];
            if (!(i2 * i2 + h2 * h2 + f2 * f2 > 11920928955078125e-23))
              return;
            fn(b2, d2);
            if ((a[b2 + 65 >> 0] | 0) != 0 ? (e2 = c[b2 + 56 >> 2] | 0, rb[c[c[e2 >> 2] >> 2] & 255](e2), e2 = c[b2 + 56 >> 2] | 0, (e2 | 0) != 0) : 0) {
              c[5638] = (c[5638] | 0) + 1;
              rG(c[e2 + -4 >> 2] | 0);
              d2 = b2 + 56 | 0;
            } else
              d2 = b2 + 56 | 0;
            c[5637] = (c[5637] | 0) + 1;
            e2 = qG(191) | 0;
            if (!e2)
              e2 = 0;
            else {
              c[(e2 + 4 + 15 & -16) + -4 >> 2] = e2;
              e2 = e2 + 4 + 15 & -16;
            }
            c[e2 + 52 >> 2] = 284;
            a[e2 + 60 >> 0] = 0;
            a[e2 + 80 >> 0] = 1;
            c[e2 + 76 >> 2] = 0;
            c[e2 + 68 >> 2] = 0;
            c[e2 + 72 >> 2] = 0;
            a[e2 + 100 >> 0] = 1;
            c[e2 + 96 >> 2] = 0;
            c[e2 + 88 >> 2] = 0;
            c[e2 + 92 >> 2] = 0;
            a[e2 + 120 >> 0] = 1;
            c[e2 + 116 >> 2] = 0;
            c[e2 + 108 >> 2] = 0;
            c[e2 + 112 >> 2] = 0;
            a[e2 + 140 >> 0] = 1;
            c[e2 + 136 >> 2] = 0;
            c[e2 + 128 >> 2] = 0;
            c[e2 + 132 >> 2] = 0;
            c[e2 + 144 >> 2] = 0;
            a[e2 + 164 >> 0] = 1;
            c[e2 + 160 >> 2] = 0;
            c[e2 + 152 >> 2] = 0;
            c[e2 + 156 >> 2] = 0;
            c[e2 + 168 >> 2] = 0;
            c[e2 + 4 >> 2] = -8388609;
            c[e2 + 8 >> 2] = -8388609;
            c[e2 + 12 >> 2] = -8388609;
            g[e2 + 16 >> 2] = 0;
            c[e2 + 20 >> 2] = 2139095039;
            c[e2 + 24 >> 2] = 2139095039;
            c[e2 + 28 >> 2] = 2139095039;
            g[e2 + 32 >> 2] = 0;
            c[e2 >> 2] = 6168;
            c[d2 >> 2] = e2;
            Zl(e2, c[b2 + 52 >> 2] | 0, (a[b2 + 64 >> 0] | 0) != 0, b2 + 20 | 0, b2 + 36 | 0);
            a[b2 + 65 >> 0] = 1;
            return;
          }
          function nj(a2) {
            a2 = a2 | 0;
            return 12712;
          }
          function oj(a2, b2) {
            a2 = a2 | 0;
            b2 = +b2;
            g[a2 + 16 >> 2] = b2;
            return;
          }
          function pj(a2) {
            a2 = a2 | 0;
            return + +g[a2 + 16 >> 2];
          }
          function qj(a2) {
            a2 = a2 | 0;
            return 60;
          }
          function rj(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0;
            e2 = Ob[c[(c[d2 >> 2] | 0) + 40 >> 2] & 31](d2, a2) | 0;
            g2 = Ob[c[(c[d2 >> 2] | 0) + 28 >> 2] & 31](d2, e2) | 0;
            c[b2 >> 2] = g2;
            if (g2 | 0)
              tb[c[(c[d2 >> 2] | 0) + 48 >> 2] & 127](d2, e2);
            c[b2 + 4 >> 2] = c[a2 + 4 >> 2];
            g2 = c[a2 + 52 >> 2] | 0;
            Eb[c[(c[g2 >> 2] | 0) + 56 >> 2] & 63](g2, b2 + 12 | 0, d2) | 0;
            c[b2 + 52 >> 2] = c[a2 + 16 >> 2];
            do
              if ((c[a2 + 56 >> 2] | 0) != 0 ? ((vb[c[(c[d2 >> 2] | 0) + 52 >> 2] & 127](d2) | 0) & 1 | 0) == 0 : 0) {
                e2 = Ob[c[(c[d2 >> 2] | 0) + 24 >> 2] & 31](d2, c[a2 + 56 >> 2] | 0) | 0;
                if (!e2) {
                  c[b2 + 40 >> 2] = Ob[c[(c[d2 >> 2] | 0) + 28 >> 2] & 31](d2, c[a2 + 56 >> 2] | 0) | 0;
                  c[b2 + 44 >> 2] = 0;
                  e2 = c[a2 + 56 >> 2] | 0;
                  e2 = vb[c[(c[e2 >> 2] | 0) + 12 >> 2] & 127](e2) | 0;
                  e2 = Eb[c[(c[d2 >> 2] | 0) + 16 >> 2] & 63](d2, e2, 1) | 0;
                  g2 = c[a2 + 56 >> 2] | 0;
                  g2 = Eb[c[(c[g2 >> 2] | 0) + 16 >> 2] & 63](g2, c[e2 + 8 >> 2] | 0, d2) | 0;
                  pb[c[(c[d2 >> 2] | 0) + 20 >> 2] & 31](d2, e2, g2, 1213612625, c[a2 + 56 >> 2] | 0);
                  break;
                } else {
                  c[b2 + 40 >> 2] = e2;
                  c[b2 + 44 >> 2] = 0;
                  break;
                }
              } else
                f2 = 8;
            while (0);
            if ((f2 | 0) == 8) {
              c[b2 + 40 >> 2] = 0;
              c[b2 + 44 >> 2] = 0;
            }
            if (c[a2 + 60 >> 2] | 0 ? ((vb[c[(c[d2 >> 2] | 0) + 52 >> 2] & 127](d2) | 0) & 2 | 0) == 0 : 0) {
              e2 = Ob[c[(c[d2 >> 2] | 0) + 24 >> 2] & 31](d2, c[a2 + 60 >> 2] | 0) | 0;
              if (!e2) {
                c[b2 + 48 >> 2] = Ob[c[(c[d2 >> 2] | 0) + 28 >> 2] & 31](d2, c[a2 + 60 >> 2] | 0) | 0;
                b2 = c[a2 + 60 >> 2] | 0;
                b2 = vb[c[(c[b2 >> 2] | 0) + 8 >> 2] & 127](b2) | 0;
                b2 = Eb[c[(c[d2 >> 2] | 0) + 16 >> 2] & 63](d2, b2, 1) | 0;
                g2 = c[a2 + 60 >> 2] | 0;
                g2 = Eb[c[(c[g2 >> 2] | 0) + 12 >> 2] & 63](g2, c[b2 + 8 >> 2] | 0, d2) | 0;
                pb[c[(c[d2 >> 2] | 0) + 20 >> 2] & 31](d2, b2, g2, 1346456916, c[a2 + 60 >> 2] | 0);
                return 12728;
              } else {
                c[b2 + 48 >> 2] = e2;
                return 12728;
              }
            }
            c[b2 + 48 >> 2] = 0;
            return 12728;
          }
          function sj(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, g2 = 0;
            f2 = i;
            i = i + 64 | 0;
            g2 = c[a2 + 52 >> 2] | 0;
            c[f2 >> 2] = 4816;
            c[f2 + 4 >> 2] = g2;
            c[f2 + 8 >> 2] = b2;
            me(c[a2 + 56 >> 2] | 0, f2, d2, e2);
            i = f2;
            return;
          }
          function tj(a2) {
            a2 = a2 | 0;
            rG(a2);
            return;
          }
          function uj(a2, b2, f2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            f2 = f2 | 0;
            var j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0;
            t2 = i;
            i = i + 32 | 0;
            o2 = c[a2 + 4 >> 2] | 0;
            Nb[c[(c[o2 >> 2] | 0) + 16 >> 2] & 3](o2, t2 + 28 | 0, t2 + 24 | 0, t2 + 20 | 0, t2 + 16 | 0, t2 + 12 | 0, t2 + 8 | 0, t2 + 4 | 0, t2, b2);
            o2 = (c[t2 + 12 >> 2] | 0) + (_(c[t2 + 8 >> 2] | 0, f2) | 0) | 0;
            s2 = c[a2 + 4 >> 2] | 0;
            n2 = c[t2 >> 2] | 0;
            switch (n2 | 0) {
              case 3: {
                j2 = e[o2 + 4 >> 1] | 0;
                break;
              }
              case 2: {
                j2 = c[o2 + 8 >> 2] | 0;
                break;
              }
              default:
                j2 = d[o2 + 2 >> 0] | 0;
            }
            r2 = (c[t2 + 20 >> 2] | 0) == 0;
            p2 = c[t2 + 28 >> 2] | 0;
            q2 = c[t2 + 16 >> 2] | 0;
            j2 = p2 + (_(q2, j2) | 0) | 0;
            if (r2) {
              l2 = +g[j2 + 8 >> 2] * +g[s2 + 12 >> 2];
              m2 = +g[j2 + 4 >> 2] * +g[s2 + 8 >> 2];
              k2 = +g[j2 >> 2] * +g[s2 + 4 >> 2];
            } else {
              l2 = +h[j2 + 16 >> 3] * +g[s2 + 12 >> 2];
              m2 = +h[j2 + 8 >> 3] * +g[s2 + 8 >> 2];
              k2 = +h[j2 >> 3] * +g[s2 + 4 >> 2];
            }
            g[a2 + 44 >> 2] = k2;
            g[a2 + 48 >> 2] = m2;
            g[a2 + 52 >> 2] = l2;
            g[a2 + 56 >> 2] = 0;
            switch (n2 | 0) {
              case 3: {
                j2 = e[o2 + 2 >> 1] | 0;
                break;
              }
              case 2: {
                j2 = c[o2 + 4 >> 2] | 0;
                break;
              }
              default:
                j2 = d[o2 + 1 >> 0] | 0;
            }
            j2 = p2 + (_(q2, j2) | 0) | 0;
            if (r2) {
              l2 = +g[j2 + 8 >> 2] * +g[s2 + 12 >> 2];
              m2 = +g[j2 + 4 >> 2] * +g[s2 + 8 >> 2];
              k2 = +g[j2 >> 2] * +g[s2 + 4 >> 2];
            } else {
              l2 = +h[j2 + 16 >> 3] * +g[s2 + 12 >> 2];
              m2 = +h[j2 + 8 >> 3] * +g[s2 + 8 >> 2];
              k2 = +h[j2 >> 3] * +g[s2 + 4 >> 2];
            }
            g[a2 + 28 >> 2] = k2;
            g[a2 + 32 >> 2] = m2;
            g[a2 + 36 >> 2] = l2;
            g[a2 + 40 >> 2] = 0;
            switch (n2 | 0) {
              case 3: {
                j2 = e[o2 >> 1] | 0;
                break;
              }
              case 2: {
                j2 = c[o2 >> 2] | 0;
                break;
              }
              default:
                j2 = d[o2 >> 0] | 0;
            }
            j2 = p2 + (_(q2, j2) | 0) | 0;
            if (r2) {
              m2 = +g[j2 + 8 >> 2] * +g[s2 + 12 >> 2];
              l2 = +g[j2 + 4 >> 2] * +g[s2 + 8 >> 2];
              k2 = +g[j2 >> 2] * +g[s2 + 4 >> 2];
              r2 = a2 + 12 | 0;
              g[r2 >> 2] = k2;
              r2 = a2 + 16 | 0;
              g[r2 >> 2] = l2;
              r2 = a2 + 20 | 0;
              g[r2 >> 2] = m2;
              r2 = a2 + 24 | 0;
              g[r2 >> 2] = 0;
              r2 = a2 + 8 | 0;
              r2 = c[r2 >> 2] | 0;
              q2 = c[r2 >> 2] | 0;
              q2 = q2 + 8 | 0;
              q2 = c[q2 >> 2] | 0;
              s2 = a2 + 12 | 0;
              bc[q2 & 127](r2, s2, b2, f2);
              a2 = c[a2 + 4 >> 2] | 0;
              f2 = c[a2 >> 2] | 0;
              f2 = f2 + 24 | 0;
              f2 = c[f2 >> 2] | 0;
              tb[f2 & 127](a2, b2);
              i = t2;
              return;
            } else {
              m2 = +h[j2 + 16 >> 3] * +g[s2 + 12 >> 2];
              l2 = +h[j2 + 8 >> 3] * +g[s2 + 8 >> 2];
              k2 = +h[j2 >> 3] * +g[s2 + 4 >> 2];
              r2 = a2 + 12 | 0;
              g[r2 >> 2] = k2;
              r2 = a2 + 16 | 0;
              g[r2 >> 2] = l2;
              r2 = a2 + 20 | 0;
              g[r2 >> 2] = m2;
              r2 = a2 + 24 | 0;
              g[r2 >> 2] = 0;
              r2 = a2 + 8 | 0;
              r2 = c[r2 >> 2] | 0;
              q2 = c[r2 >> 2] | 0;
              q2 = q2 + 8 | 0;
              q2 = c[q2 >> 2] | 0;
              s2 = a2 + 12 | 0;
              bc[q2 & 127](r2, s2, b2, f2);
              a2 = c[a2 + 4 >> 2] | 0;
              f2 = c[a2 >> 2] | 0;
              f2 = f2 + 24 | 0;
              f2 = c[f2 >> 2] | 0;
              tb[f2 & 127](a2, b2);
              i = t2;
              return;
            }
          }
          function vj(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            Zb[c[(c[b2 >> 2] | 0) + 68 >> 2] & 127](a2, b2, d2);
            return;
          }
          function wj(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0;
            d2 = c[a2 + 56 >> 2] | 0;
            if (!d2)
              return;
            e2 = vb[c[(c[d2 >> 2] | 0) + 12 >> 2] & 127](d2) | 0;
            e2 = Eb[c[(c[b2 >> 2] | 0) + 16 >> 2] & 63](b2, e2, 1) | 0;
            d2 = c[a2 + 56 >> 2] | 0;
            d2 = Eb[c[(c[d2 >> 2] | 0) + 16 >> 2] & 63](d2, c[e2 + 8 >> 2] | 0, b2) | 0;
            pb[c[(c[b2 >> 2] | 0) + 20 >> 2] & 31](b2, e2, d2, 1213612625, c[a2 + 56 >> 2] | 0);
            return;
          }
          function xj(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0;
            d2 = c[a2 + 60 >> 2] | 0;
            if (!d2)
              return;
            e2 = vb[c[(c[d2 >> 2] | 0) + 8 >> 2] & 127](d2) | 0;
            e2 = Eb[c[(c[b2 >> 2] | 0) + 16 >> 2] & 63](b2, e2, 1) | 0;
            d2 = c[a2 + 60 >> 2] | 0;
            d2 = Eb[c[(c[d2 >> 2] | 0) + 12 >> 2] & 63](d2, c[e2 + 8 >> 2] | 0, b2) | 0;
            pb[c[(c[b2 >> 2] | 0) + 20 >> 2] & 31](b2, e2, d2, 1346456916, c[a2 + 60 >> 2] | 0);
            return;
          }
          function yj(b2, d2, e2, f2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            var h2 = 0;
            h2 = i;
            i = i + 48 | 0;
            c[b2 + 8 >> 2] = 0;
            c[b2 + 12 >> 2] = -1;
            g[b2 + 16 >> 2] = 0;
            c[b2 >> 2] = 6692;
            c[b2 + 52 >> 2] = d2;
            c[b2 + 4 >> 2] = 21;
            if (vb[c[(c[d2 >> 2] | 0) + 40 >> 2] & 127](d2) | 0)
              Zb[c[(c[d2 >> 2] | 0) + 48 >> 2] & 127](d2, b2 + 20 | 0, b2 + 36 | 0);
            else {
              c[h2 + 32 >> 2] = 0;
              c[h2 + 32 + 4 >> 2] = 0;
              c[h2 + 32 + 8 >> 2] = 0;
              c[h2 + 32 + 12 >> 2] = 0;
              g[h2 + 32 >> 2] = 1;
              Zb[c[(c[b2 >> 2] | 0) + 68 >> 2] & 127](h2 + 16 | 0, b2, h2 + 32 | 0);
              g[b2 + 36 >> 2] = +g[h2 + 16 >> 2] + +g[b2 + 16 >> 2];
              g[h2 + 32 >> 2] = -1;
              Zb[c[(c[b2 >> 2] | 0) + 68 >> 2] & 127](h2, b2, h2 + 32 | 0);
              c[h2 + 16 >> 2] = c[h2 >> 2];
              c[h2 + 16 + 4 >> 2] = c[h2 + 4 >> 2];
              c[h2 + 16 + 8 >> 2] = c[h2 + 8 >> 2];
              c[h2 + 16 + 12 >> 2] = c[h2 + 12 >> 2];
              g[b2 + 20 >> 2] = +g[h2 + 16 >> 2] - +g[b2 + 16 >> 2];
              c[h2 + 32 >> 2] = 0;
              c[h2 + 32 + 4 >> 2] = 0;
              c[h2 + 32 + 8 >> 2] = 0;
              c[h2 + 32 + 12 >> 2] = 0;
              g[h2 + 32 + 4 >> 2] = 1;
              Zb[c[(c[b2 >> 2] | 0) + 68 >> 2] & 127](h2 + 16 | 0, b2, h2 + 32 | 0);
              g[b2 + 40 >> 2] = +g[h2 + 16 + 4 >> 2] + +g[b2 + 16 >> 2];
              g[h2 + 32 + 4 >> 2] = -1;
              Zb[c[(c[b2 >> 2] | 0) + 68 >> 2] & 127](h2, b2, h2 + 32 | 0);
              c[h2 + 16 >> 2] = c[h2 >> 2];
              c[h2 + 16 + 4 >> 2] = c[h2 + 4 >> 2];
              c[h2 + 16 + 8 >> 2] = c[h2 + 8 >> 2];
              c[h2 + 16 + 12 >> 2] = c[h2 + 12 >> 2];
              g[b2 + 24 >> 2] = +g[h2 + 16 + 4 >> 2] - +g[b2 + 16 >> 2];
              c[h2 + 32 >> 2] = 0;
              c[h2 + 32 + 4 >> 2] = 0;
              c[h2 + 32 + 8 >> 2] = 0;
              c[h2 + 32 + 12 >> 2] = 0;
              g[h2 + 32 + 8 >> 2] = 1;
              Zb[c[(c[b2 >> 2] | 0) + 68 >> 2] & 127](h2 + 16 | 0, b2, h2 + 32 | 0);
              g[b2 + 44 >> 2] = +g[h2 + 16 + 8 >> 2] + +g[b2 + 16 >> 2];
              g[h2 + 32 + 8 >> 2] = -1;
              Zb[c[(c[b2 >> 2] | 0) + 68 >> 2] & 127](h2, b2, h2 + 32 | 0);
              c[h2 + 16 >> 2] = c[h2 >> 2];
              c[h2 + 16 + 4 >> 2] = c[h2 + 4 >> 2];
              c[h2 + 16 + 8 >> 2] = c[h2 + 8 >> 2];
              c[h2 + 16 + 12 >> 2] = c[h2 + 12 >> 2];
              g[b2 + 28 >> 2] = +g[h2 + 16 + 8 >> 2] - +g[b2 + 16 >> 2];
            }
            c[b2 >> 2] = 4724;
            c[b2 + 56 >> 2] = 0;
            c[b2 + 60 >> 2] = 0;
            a[b2 + 64 >> 0] = e2 & 1;
            a[b2 + 65 >> 0] = 0;
            c[b2 + 4 >> 2] = 21;
            if (!f2) {
              i = h2;
              return;
            }
            c[5637] = (c[5637] | 0) + 1;
            f2 = qG(191) | 0;
            if (!f2)
              f2 = 0;
            else {
              c[(f2 + 4 + 15 & -16) + -4 >> 2] = f2;
              f2 = f2 + 4 + 15 & -16;
            }
            c[f2 + 52 >> 2] = 284;
            a[f2 + 60 >> 0] = 0;
            a[f2 + 80 >> 0] = 1;
            c[f2 + 76 >> 2] = 0;
            c[f2 + 68 >> 2] = 0;
            c[f2 + 72 >> 2] = 0;
            a[f2 + 100 >> 0] = 1;
            c[f2 + 96 >> 2] = 0;
            c[f2 + 88 >> 2] = 0;
            c[f2 + 92 >> 2] = 0;
            a[f2 + 120 >> 0] = 1;
            c[f2 + 116 >> 2] = 0;
            c[f2 + 108 >> 2] = 0;
            c[f2 + 112 >> 2] = 0;
            a[f2 + 140 >> 0] = 1;
            c[f2 + 136 >> 2] = 0;
            c[f2 + 128 >> 2] = 0;
            c[f2 + 132 >> 2] = 0;
            c[f2 + 144 >> 2] = 0;
            a[f2 + 164 >> 0] = 1;
            c[f2 + 160 >> 2] = 0;
            c[f2 + 152 >> 2] = 0;
            c[f2 + 156 >> 2] = 0;
            c[f2 + 168 >> 2] = 0;
            c[f2 + 4 >> 2] = -8388609;
            c[f2 + 8 >> 2] = -8388609;
            c[f2 + 12 >> 2] = -8388609;
            g[f2 + 16 >> 2] = 0;
            c[f2 + 20 >> 2] = 2139095039;
            c[f2 + 24 >> 2] = 2139095039;
            c[f2 + 28 >> 2] = 2139095039;
            g[f2 + 32 >> 2] = 0;
            c[f2 >> 2] = 6168;
            c[b2 + 56 >> 2] = f2;
            Zl(f2, c[b2 + 52 >> 2] | 0, (a[b2 + 64 >> 0] | 0) != 0, b2 + 20 | 0, b2 + 36 | 0);
            a[b2 + 65 >> 0] = 1;
            i = h2;
            return;
          }
          function zj(a2) {
            a2 = a2 | 0;
            rG(a2);
            return;
          }
          function cc(a2) {
            a2 = a2 | 0;
            var b2 = 0;
            b2 = i;
            i = i + a2 | 0;
            i = i + 15 & -16;
            return b2 | 0;
          }
          function dc() {
            return i | 0;
          }
          function ec(a2) {
            a2 = a2 | 0;
            i = a2;
          }
          function fc(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            i = a2;
            j = b2;
          }
          function gc(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            if (!n) {
              n = a2;
              o = b2;
            }
          }
          function hc(b2) {
            b2 = b2 | 0;
            a[k >> 0] = a[b2 >> 0];
            a[k + 1 >> 0] = a[b2 + 1 >> 0];
            a[k + 2 >> 0] = a[b2 + 2 >> 0];
            a[k + 3 >> 0] = a[b2 + 3 >> 0];
          }
          function ic(b2) {
            b2 = b2 | 0;
            a[k >> 0] = a[b2 >> 0];
            a[k + 1 >> 0] = a[b2 + 1 >> 0];
            a[k + 2 >> 0] = a[b2 + 2 >> 0];
            a[k + 3 >> 0] = a[b2 + 3 >> 0];
            a[k + 4 >> 0] = a[b2 + 4 >> 0];
            a[k + 5 >> 0] = a[b2 + 5 >> 0];
            a[k + 6 >> 0] = a[b2 + 6 >> 0];
            a[k + 7 >> 0] = a[b2 + 7 >> 0];
          }
          function jc(a2) {
            a2 = a2 | 0;
            C = a2;
          }
          function kc() {
            return C | 0;
          }
          function lc(d2, f2, h2, i2, j2, k2) {
            d2 = d2 | 0;
            f2 = f2 | 0;
            h2 = h2 | 0;
            i2 = i2 | 0;
            j2 = j2 | 0;
            k2 = k2 | 0;
            var l2 = 0, m2 = 0, n2 = 0;
            c[d2 >> 2] = 2552;
            b[d2 + 4 >> 1] = -2;
            b[d2 + 6 >> 1] = -1;
            c[d2 + 92 >> 2] = j2;
            c[d2 + 96 >> 2] = 0;
            a[d2 + 100 >> 0] = 0;
            c[d2 + 104 >> 2] = 0;
            c[d2 + 108 >> 2] = 0;
            if (!j2) {
              c[5637] = (c[5637] | 0) + 1;
              j2 = qG(91) | 0;
              if (!j2)
                j2 = 0;
              else {
                c[(j2 + 4 + 15 & -16) + -4 >> 2] = j2;
                j2 = j2 + 4 + 15 & -16;
              }
              de(j2);
              c[d2 + 92 >> 2] = j2;
              a[d2 + 100 >> 0] = 1;
            }
            if (!k2) {
              c[5637] = (c[5637] | 0) + 1;
              j2 = qG(43) | 0;
              if (!j2)
                j2 = 0;
              else {
                c[(j2 + 4 + 15 & -16) + -4 >> 2] = j2;
                j2 = j2 + 4 + 15 & -16;
              }
              ;
              c[j2 >> 2] = 0;
              c[j2 + 4 >> 2] = 0;
              c[j2 + 8 >> 2] = 0;
              c[j2 + 12 >> 2] = 0;
              c[j2 + 16 >> 2] = 0;
              c[j2 + 20 >> 2] = 0;
              c[j2 >> 2] = 2616;
              a[j2 + 20 >> 0] = 1;
              c[j2 + 16 >> 2] = 0;
              c[j2 + 8 >> 2] = 0;
              c[j2 + 12 >> 2] = 0;
              c[d2 + 112 >> 2] = j2;
              c[5637] = (c[5637] | 0) + 1;
              j2 = qG(215) | 0;
              if (!j2)
                j2 = 0;
              else {
                c[(j2 + 4 + 15 & -16) + -4 >> 2] = j2;
                j2 = j2 + 4 + 15 & -16;
              }
              Gd(j2, c[d2 + 112 >> 2] | 0);
              c[d2 + 108 >> 2] = j2;
              a[j2 + 193 >> 0] = 1;
            }
            ;
            c[d2 + 8 >> 2] = c[f2 >> 2];
            c[d2 + 8 + 4 >> 2] = c[f2 + 4 >> 2];
            c[d2 + 8 + 8 >> 2] = c[f2 + 8 >> 2];
            c[d2 + 8 + 12 >> 2] = c[f2 + 12 >> 2];
            c[d2 + 24 >> 2] = c[h2 >> 2];
            c[d2 + 24 + 4 >> 2] = c[h2 + 4 >> 2];
            c[d2 + 24 + 8 >> 2] = c[h2 + 8 >> 2];
            c[d2 + 24 + 12 >> 2] = c[h2 + 12 >> 2];
            n2 = +(e[d2 + 6 >> 1] | 0);
            m2 = n2 / (+g[d2 + 28 >> 2] - +g[d2 + 12 >> 2]);
            l2 = n2 / (+g[d2 + 32 >> 2] - +g[d2 + 16 >> 2]);
            g[d2 + 40 >> 2] = n2 / (+g[d2 + 24 >> 2] - +g[d2 + 8 >> 2]);
            g[d2 + 44 >> 2] = m2;
            g[d2 + 48 >> 2] = l2;
            g[d2 + 52 >> 2] = 0;
            f2 = (i2 & 65535) + 1 & 65535;
            c[5637] = (c[5637] | 0) + 1;
            j2 = qG(f2 << 6 | 19) | 0;
            if (!j2)
              h2 = 0;
            else {
              c[(j2 + 4 + 15 & -16) + -4 >> 2] = j2;
              h2 = j2 + 4 + 15 & -16;
            }
            if (f2 | 0) {
              j2 = h2 + (f2 << 6) | 0;
              k2 = h2;
              do {
                c[k2 >> 2] = 0;
                c[k2 + 8 >> 2] = 0;
                k2 = k2 + 64 | 0;
              } while ((k2 | 0) != (j2 | 0));
            }
            c[d2 + 60 >> 2] = h2;
            b[d2 + 58 >> 1] = (i2 & 65535) + 1;
            b[d2 + 56 >> 1] = 0;
            b[d2 + 64 >> 1] = 1;
            if (f2 >>> 0 > 1) {
              j2 = 1;
              k2 = 1;
              do {
                b[h2 + (j2 << 6) + 48 >> 1] = j2 + 1;
                k2 = k2 + 1 << 16 >> 16;
                j2 = k2 & 65535;
              } while (j2 >>> 0 < f2 >>> 0);
            }
            b[h2 + (f2 + -1 << 6) + 48 >> 1] = 0;
            c[5637] = (c[5637] | 0) + 1;
            j2 = qG((f2 << 3 | 3) + 16 | 0) | 0;
            if (!j2)
              j2 = 0;
            else {
              c[(j2 + 4 + 15 & -16) + -4 >> 2] = j2;
              j2 = j2 + 4 + 15 & -16;
            }
            c[d2 + 80 >> 2] = j2;
            c[d2 + 68 >> 2] = j2;
            c[5637] = (c[5637] | 0) + 1;
            j2 = qG((f2 << 3 | 3) + 16 | 0) | 0;
            if (!j2)
              j2 = 0;
            else {
              c[(j2 + 4 + 15 & -16) + -4 >> 2] = j2;
              j2 = j2 + 4 + 15 & -16;
            }
            c[d2 + 84 >> 2] = j2;
            c[d2 + 72 >> 2] = j2;
            c[5637] = (c[5637] | 0) + 1;
            j2 = qG((f2 << 3 | 3) + 16 | 0) | 0;
            if (!j2) {
              h2 = 0;
              i2 = d2 + 88 | 0;
              c[i2 >> 2] = h2;
              i2 = d2 + 76 | 0;
              c[i2 >> 2] = h2;
              h2 = c[d2 + 60 >> 2] | 0;
              c[h2 >> 2] = 0;
              f2 = h2 + 48 | 0;
              b[f2 >> 1] = 0;
              f2 = h2 + 54 | 0;
              b[f2 >> 1] = 1;
              f2 = c[d2 + 68 >> 2] | 0;
              b[f2 >> 1] = 0;
              k2 = f2 + 2 | 0;
              b[k2 >> 1] = 0;
              k2 = b[d2 + 6 >> 1] | 0;
              j2 = f2 + 4 | 0;
              b[j2 >> 1] = k2;
              f2 = f2 + 6 | 0;
              b[f2 >> 1] = 0;
              f2 = h2 + 50 | 0;
              b[f2 >> 1] = 0;
              f2 = h2 + 56 | 0;
              b[f2 >> 1] = 1;
              f2 = c[d2 + 72 >> 2] | 0;
              b[f2 >> 1] = 0;
              j2 = f2 + 2 | 0;
              b[j2 >> 1] = 0;
              j2 = b[d2 + 6 >> 1] | 0;
              k2 = f2 + 4 | 0;
              b[k2 >> 1] = j2;
              f2 = f2 + 6 | 0;
              b[f2 >> 1] = 0;
              f2 = h2 + 52 | 0;
              b[f2 >> 1] = 0;
              h2 = h2 + 58 | 0;
              b[h2 >> 1] = 1;
              i2 = c[i2 >> 2] | 0;
              b[i2 >> 1] = 0;
              h2 = i2 + 2 | 0;
              b[h2 >> 1] = 0;
              h2 = b[d2 + 6 >> 1] | 0;
              f2 = i2 + 4 | 0;
              b[f2 >> 1] = h2;
              i2 = i2 + 6 | 0;
              b[i2 >> 1] = 0;
              c[d2 >> 2] = 2488;
              return;
            }
            c[(j2 + 4 + 15 & -16) + -4 >> 2] = j2;
            h2 = j2 + 4 + 15 & -16;
            i2 = d2 + 88 | 0;
            c[i2 >> 2] = h2;
            i2 = d2 + 76 | 0;
            c[i2 >> 2] = h2;
            h2 = c[d2 + 60 >> 2] | 0;
            c[h2 >> 2] = 0;
            f2 = h2 + 48 | 0;
            b[f2 >> 1] = 0;
            f2 = h2 + 54 | 0;
            b[f2 >> 1] = 1;
            f2 = c[d2 + 68 >> 2] | 0;
            b[f2 >> 1] = 0;
            k2 = f2 + 2 | 0;
            b[k2 >> 1] = 0;
            k2 = b[d2 + 6 >> 1] | 0;
            j2 = f2 + 4 | 0;
            b[j2 >> 1] = k2;
            f2 = f2 + 6 | 0;
            b[f2 >> 1] = 0;
            f2 = h2 + 50 | 0;
            b[f2 >> 1] = 0;
            f2 = h2 + 56 | 0;
            b[f2 >> 1] = 1;
            f2 = c[d2 + 72 >> 2] | 0;
            b[f2 >> 1] = 0;
            j2 = f2 + 2 | 0;
            b[j2 >> 1] = 0;
            j2 = b[d2 + 6 >> 1] | 0;
            k2 = f2 + 4 | 0;
            b[k2 >> 1] = j2;
            f2 = f2 + 6 | 0;
            b[f2 >> 1] = 0;
            f2 = h2 + 52 | 0;
            b[f2 >> 1] = 0;
            h2 = h2 + 58 | 0;
            b[h2 >> 1] = 1;
            i2 = c[i2 >> 2] | 0;
            b[i2 >> 1] = 0;
            h2 = i2 + 2 | 0;
            b[h2 >> 1] = 0;
            h2 = b[d2 + 6 >> 1] | 0;
            f2 = i2 + 4 | 0;
            b[f2 >> 1] = h2;
            i2 = i2 + 6 | 0;
            b[i2 >> 1] = 0;
            c[d2 >> 2] = 2488;
            return;
          }
          function mc(b2) {
            b2 = b2 | 0;
            var d2 = 0;
            c[b2 >> 2] = 2552;
            if (c[b2 + 108 >> 2] | 0) {
              d2 = c[b2 + 112 >> 2] | 0;
              rb[c[c[d2 >> 2] >> 2] & 255](d2);
              d2 = c[b2 + 112 >> 2] | 0;
              if (d2 | 0) {
                c[5638] = (c[5638] | 0) + 1;
                rG(c[d2 + -4 >> 2] | 0);
              }
              d2 = c[b2 + 108 >> 2] | 0;
              rb[c[c[d2 >> 2] >> 2] & 255](d2);
              d2 = c[b2 + 108 >> 2] | 0;
              if (d2 | 0) {
                c[5638] = (c[5638] | 0) + 1;
                rG(c[d2 + -4 >> 2] | 0);
              }
            }
            d2 = c[b2 + 88 >> 2] | 0;
            if (d2 | 0) {
              c[5638] = (c[5638] | 0) + 1;
              rG(c[d2 + -4 >> 2] | 0);
            }
            d2 = c[b2 + 84 >> 2] | 0;
            if (d2 | 0) {
              c[5638] = (c[5638] | 0) + 1;
              rG(c[d2 + -4 >> 2] | 0);
            }
            d2 = c[b2 + 80 >> 2] | 0;
            if (d2 | 0) {
              c[5638] = (c[5638] | 0) + 1;
              rG(c[d2 + -4 >> 2] | 0);
            }
            d2 = c[b2 + 60 >> 2] | 0;
            if (d2 | 0) {
              c[5638] = (c[5638] | 0) + 1;
              rG(c[d2 + -4 >> 2] | 0);
            }
            if (!(a[b2 + 100 >> 0] | 0))
              return;
            d2 = c[b2 + 92 >> 2] | 0;
            rb[c[c[d2 >> 2] >> 2] & 255](d2);
            d2 = c[b2 + 92 >> 2] | 0;
            if (!d2)
              return;
            c[5638] = (c[5638] | 0) + 1;
            rG(c[d2 + -4 >> 2] | 0);
            return;
          }
          function nc(a2) {
            a2 = a2 | 0;
            mc(a2);
            if (!a2)
              return;
            c[5638] = (c[5638] | 0) + 1;
            rG(c[a2 + -4 >> 2] | 0);
            return;
          }
          function oc(a2, d2, f2, h2, j2, k2, l2, m2, n2) {
            a2 = a2 | 0;
            d2 = d2 | 0;
            f2 = f2 | 0;
            h2 = h2 | 0;
            j2 = j2 | 0;
            k2 = k2 | 0;
            l2 = l2 | 0;
            m2 = m2 | 0;
            n2 = n2 | 0;
            var o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0;
            w2 = i;
            i = i + 16 | 0;
            Tc(a2, w2 + 6 | 0, +g[d2 >> 2], +g[d2 + 4 >> 2], +g[d2 + 8 >> 2], 0);
            Tc(a2, w2, +g[f2 >> 2], +g[f2 + 4 >> 2], +g[f2 + 8 >> 2], 1);
            v2 = b[a2 + 64 >> 1] | 0;
            u2 = c[a2 + 60 >> 2] | 0;
            b[a2 + 64 >> 1] = b[u2 + ((v2 & 65535) << 6) + 48 >> 1] | 0;
            o2 = (b[a2 + 56 >> 1] | 0) + 1 << 16 >> 16;
            b[a2 + 56 >> 1] = o2;
            c[u2 + ((v2 & 65535) << 6) + 12 >> 2] = v2 & 65535;
            c[u2 + ((v2 & 65535) << 6) >> 2] = j2;
            b[u2 + ((v2 & 65535) << 6) + 4 >> 1] = k2;
            b[u2 + ((v2 & 65535) << 6) + 6 >> 1] = l2;
            c[u2 + ((v2 & 65535) << 6) + 8 >> 2] = n2;
            q2 = (o2 & 65535) << 1 & 65534;
            b[u2 + 54 >> 1] = (e[u2 + 54 >> 1] | 0) + 2;
            p2 = c[a2 + 68 >> 2] | 0;
            n2 = e[p2 + (q2 + -1 << 2) >> 1] | e[p2 + (q2 + -1 << 2) + 2 >> 1] << 16;
            b[p2 + ((q2 | 1) << 2) >> 1] = n2;
            b[p2 + ((q2 | 1) << 2) + 2 >> 1] = n2 >>> 16;
            p2 = c[a2 + 68 >> 2] | 0;
            b[p2 + (q2 + -1 << 2) >> 1] = b[w2 + 6 >> 1] | 0;
            b[p2 + (q2 + -1 << 2) + 2 >> 1] = v2;
            b[p2 + (q2 << 2) >> 1] = b[w2 >> 1] | 0;
            b[p2 + (q2 << 2) + 2 >> 1] = v2;
            b[u2 + ((v2 & 65535) << 6) + 48 >> 1] = q2 + -1;
            b[u2 + ((v2 & 65535) << 6) + 54 >> 1] = (o2 & 65535) << 1;
            p2 = (c[a2 + 60 >> 2] | 0) + 56 | 0;
            b[p2 >> 1] = (e[p2 >> 1] | 0) + 2;
            p2 = c[a2 + 72 >> 2] | 0;
            n2 = e[p2 + (q2 + -1 << 2) >> 1] | e[p2 + (q2 + -1 << 2) + 2 >> 1] << 16;
            b[p2 + ((q2 | 1) << 2) >> 1] = n2;
            b[p2 + ((q2 | 1) << 2) + 2 >> 1] = n2 >>> 16;
            p2 = c[a2 + 72 >> 2] | 0;
            b[p2 + (q2 + -1 << 2) >> 1] = b[w2 + 6 + 2 >> 1] | 0;
            b[p2 + (q2 + -1 << 2) + 2 >> 1] = v2;
            b[p2 + (q2 << 2) >> 1] = b[w2 + 2 >> 1] | 0;
            b[p2 + (q2 << 2) + 2 >> 1] = v2;
            b[u2 + ((v2 & 65535) << 6) + 50 >> 1] = q2 + -1;
            b[u2 + ((v2 & 65535) << 6) + 56 >> 1] = (o2 & 65535) << 1;
            p2 = (c[a2 + 60 >> 2] | 0) + 58 | 0;
            b[p2 >> 1] = (e[p2 >> 1] | 0) + 2;
            p2 = c[a2 + 76 >> 2] | 0;
            n2 = e[p2 + (q2 + -1 << 2) >> 1] | e[p2 + (q2 + -1 << 2) + 2 >> 1] << 16;
            b[p2 + ((q2 | 1) << 2) >> 1] = n2;
            b[p2 + ((q2 | 1) << 2) + 2 >> 1] = n2 >>> 16;
            p2 = c[a2 + 76 >> 2] | 0;
            b[p2 + (q2 + -1 << 2) >> 1] = b[w2 + 6 + 4 >> 1] | 0;
            b[p2 + (q2 + -1 << 2) + 2 >> 1] = v2;
            b[p2 + (q2 << 2) >> 1] = b[w2 + 4 >> 1] | 0;
            b[p2 + (q2 << 2) + 2 >> 1] = v2;
            b[u2 + ((v2 & 65535) << 6) + 52 >> 1] = q2 + -1;
            b[u2 + ((v2 & 65535) << 6) + 58 >> 1] = (o2 & 65535) << 1;
            o2 = c[a2 + 68 >> 2] | 0;
            q2 = e[u2 + ((v2 & 65535) << 6) + 48 >> 1] | 0;
            p2 = c[a2 + 60 >> 2] | 0;
            n2 = b[o2 + (q2 << 2) + -4 >> 1] | 0;
            if ((e[o2 + (q2 << 2) >> 1] | 0) < (n2 & 65535)) {
              s2 = p2 + ((e[o2 + (q2 << 2) + 2 >> 1] | 0) << 6) + 48 | 0;
              r2 = o2 + (q2 << 2) | 0;
              q2 = o2 + (q2 << 2) + -4 | 0;
              while (1) {
                o2 = e[r2 + -2 >> 1] | 0;
                if (!(n2 & 1)) {
                  t2 = p2 + (o2 << 6) + 48 | 0;
                  b[t2 >> 1] = (b[t2 >> 1] | 0) + 1 << 16 >> 16;
                } else {
                  t2 = p2 + (o2 << 6) + 54 | 0;
                  b[t2 >> 1] = (b[t2 >> 1] | 0) + 1 << 16 >> 16;
                }
                b[s2 >> 1] = (b[s2 >> 1] | 0) + -1 << 16 >> 16;
                o2 = e[r2 >> 1] | e[r2 + 2 >> 1] << 16;
                n2 = e[q2 >> 1] | e[q2 + 2 >> 1] << 16;
                b[r2 >> 1] = n2;
                b[r2 + 2 >> 1] = n2 >>> 16;
                b[q2 >> 1] = o2;
                b[q2 + 2 >> 1] = o2 >>> 16;
                o2 = r2 + -4 | 0;
                q2 = q2 + -4 | 0;
                n2 = b[q2 >> 1] | 0;
                if ((e[o2 >> 1] | 0) >= (n2 & 65535))
                  break;
                p2 = c[a2 + 60 >> 2] | 0;
                r2 = o2;
              }
              o2 = c[a2 + 68 >> 2] | 0;
            }
            n2 = e[u2 + ((v2 & 65535) << 6) + 54 >> 1] | 0;
            q2 = o2 + (n2 << 2) | 0;
            p2 = b[q2 + -4 >> 1] | 0;
            a:
              do
                if ((e[q2 >> 1] | 0) < (p2 & 65535)) {
                  s2 = c[a2 + 60 >> 2] | 0;
                  t2 = s2 + ((e[o2 + (n2 << 2) + 2 >> 1] | 0) << 6) + 54 | 0;
                  n2 = p2;
                  r2 = q2;
                  p2 = q2 + -4 | 0;
                  while (1) {
                    o2 = e[r2 + -2 >> 1] | 0;
                    if (!(n2 & 1)) {
                      s2 = s2 + (o2 << 6) + 48 | 0;
                      b[s2 >> 1] = (b[s2 >> 1] | 0) + 1 << 16 >> 16;
                    } else {
                      s2 = s2 + (o2 << 6) + 54 | 0;
                      b[s2 >> 1] = (b[s2 >> 1] | 0) + 1 << 16 >> 16;
                    }
                    b[t2 >> 1] = (b[t2 >> 1] | 0) + -1 << 16 >> 16;
                    o2 = e[r2 >> 1] | e[r2 + 2 >> 1] << 16;
                    n2 = e[p2 >> 1] | e[p2 + 2 >> 1] << 16;
                    b[r2 >> 1] = n2;
                    b[r2 + 2 >> 1] = n2 >>> 16;
                    b[p2 >> 1] = o2;
                    b[p2 + 2 >> 1] = o2 >>> 16;
                    o2 = r2 + -4 | 0;
                    p2 = p2 + -4 | 0;
                    n2 = b[p2 >> 1] | 0;
                    if ((e[o2 >> 1] | 0) >= (n2 & 65535))
                      break a;
                    s2 = c[a2 + 60 >> 2] | 0;
                    r2 = o2;
                  }
                }
              while (0);
            o2 = c[a2 + 72 >> 2] | 0;
            q2 = e[u2 + ((v2 & 65535) << 6) + 50 >> 1] | 0;
            p2 = c[a2 + 60 >> 2] | 0;
            n2 = b[o2 + (q2 << 2) + -4 >> 1] | 0;
            if ((e[o2 + (q2 << 2) >> 1] | 0) < (n2 & 65535)) {
              s2 = p2 + ((e[o2 + (q2 << 2) + 2 >> 1] | 0) << 6) + 50 | 0;
              r2 = o2 + (q2 << 2) | 0;
              q2 = o2 + (q2 << 2) + -4 | 0;
              while (1) {
                o2 = e[r2 + -2 >> 1] | 0;
                if (!(n2 & 1)) {
                  t2 = p2 + (o2 << 6) + 50 | 0;
                  b[t2 >> 1] = (b[t2 >> 1] | 0) + 1 << 16 >> 16;
                } else {
                  t2 = p2 + (o2 << 6) + 56 | 0;
                  b[t2 >> 1] = (b[t2 >> 1] | 0) + 1 << 16 >> 16;
                }
                b[s2 >> 1] = (b[s2 >> 1] | 0) + -1 << 16 >> 16;
                o2 = e[r2 >> 1] | e[r2 + 2 >> 1] << 16;
                n2 = e[q2 >> 1] | e[q2 + 2 >> 1] << 16;
                b[r2 >> 1] = n2;
                b[r2 + 2 >> 1] = n2 >>> 16;
                b[q2 >> 1] = o2;
                b[q2 + 2 >> 1] = o2 >>> 16;
                o2 = r2 + -4 | 0;
                q2 = q2 + -4 | 0;
                n2 = b[q2 >> 1] | 0;
                if ((e[o2 >> 1] | 0) >= (n2 & 65535))
                  break;
                p2 = c[a2 + 60 >> 2] | 0;
                r2 = o2;
              }
              o2 = c[a2 + 72 >> 2] | 0;
            }
            n2 = e[u2 + ((v2 & 65535) << 6) + 56 >> 1] | 0;
            q2 = o2 + (n2 << 2) | 0;
            p2 = b[q2 + -4 >> 1] | 0;
            b:
              do
                if ((e[q2 >> 1] | 0) < (p2 & 65535)) {
                  s2 = c[a2 + 60 >> 2] | 0;
                  t2 = s2 + ((e[o2 + (n2 << 2) + 2 >> 1] | 0) << 6) + 56 | 0;
                  n2 = p2;
                  r2 = q2;
                  p2 = q2 + -4 | 0;
                  while (1) {
                    o2 = e[r2 + -2 >> 1] | 0;
                    if (!(n2 & 1)) {
                      s2 = s2 + (o2 << 6) + 50 | 0;
                      b[s2 >> 1] = (b[s2 >> 1] | 0) + 1 << 16 >> 16;
                    } else {
                      s2 = s2 + (o2 << 6) + 56 | 0;
                      b[s2 >> 1] = (b[s2 >> 1] | 0) + 1 << 16 >> 16;
                    }
                    b[t2 >> 1] = (b[t2 >> 1] | 0) + -1 << 16 >> 16;
                    o2 = e[r2 >> 1] | e[r2 + 2 >> 1] << 16;
                    n2 = e[p2 >> 1] | e[p2 + 2 >> 1] << 16;
                    b[r2 >> 1] = n2;
                    b[r2 + 2 >> 1] = n2 >>> 16;
                    b[p2 >> 1] = o2;
                    b[p2 + 2 >> 1] = o2 >>> 16;
                    o2 = r2 + -4 | 0;
                    p2 = p2 + -4 | 0;
                    n2 = b[p2 >> 1] | 0;
                    if ((e[o2 >> 1] | 0) >= (n2 & 65535))
                      break b;
                    s2 = c[a2 + 60 >> 2] | 0;
                    r2 = o2;
                  }
                }
              while (0);
            Uc(a2, 2, b[u2 + ((v2 & 65535) << 6) + 52 >> 1] | 0);
            Vc(a2, 2, b[u2 + ((v2 & 65535) << 6) + 58 >> 1] | 0, m2);
            o2 = c[a2 + 60 >> 2] | 0;
            n2 = c[a2 + 108 >> 2] | 0;
            if (!n2) {
              j2 = o2 + ((v2 & 65535) << 6) | 0;
              i = w2;
              return j2 | 0;
            }
            c[o2 + ((v2 & 65535) << 6) + 60 >> 2] = Xb[c[(c[n2 >> 2] | 0) + 8 >> 2] & 3](n2, d2, f2, h2, j2, k2, l2, m2, 0) | 0;
            j2 = o2 + ((v2 & 65535) << 6) | 0;
            i = w2;
            return j2 | 0;
          }
          function pc(a2, d2, f2) {
            a2 = a2 | 0;
            d2 = d2 | 0;
            f2 = f2 | 0;
            var g2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0;
            g2 = c[a2 + 108 >> 2] | 0;
            if (g2 | 0)
              Zb[c[(c[g2 >> 2] | 0) + 12 >> 2] & 127](g2, c[d2 + 60 >> 2] | 0, f2);
            q2 = c[d2 + 12 >> 2] | 0;
            p2 = c[a2 + 60 >> 2] | 0;
            o2 = c[a2 + 92 >> 2] | 0;
            if (!(vb[c[(c[o2 >> 2] | 0) + 56 >> 2] & 127](o2) | 0)) {
              o2 = c[a2 + 92 >> 2] | 0;
              Zb[c[(c[o2 >> 2] | 0) + 16 >> 2] & 127](o2, p2 + ((q2 & 65535) << 6) | 0, f2);
            }
            m2 = e[a2 + 56 >> 1] | 0;
            g2 = c[a2 + 60 >> 2] | 0;
            b[g2 + 54 >> 1] = (e[g2 + 54 >> 1] | 0) + 65534;
            b[g2 + 56 >> 1] = (e[g2 + 56 >> 1] | 0) + 65534;
            b[g2 + 58 >> 1] = (e[g2 + 58 >> 1] | 0) + 65534;
            g2 = b[a2 + 6 >> 1] | 0;
            o2 = 0;
            do {
              l2 = a2 + 68 + (o2 << 2) | 0;
              n2 = c[l2 >> 2] | 0;
              f2 = e[p2 + ((q2 & 65535) << 6) + 54 + (o2 << 1) >> 1] | 0;
              b[n2 + (f2 << 2) >> 1] = g2;
              d2 = b[n2 + (f2 << 2) + 6 >> 1] | 0;
              if (!(d2 << 16 >> 16))
                f2 = n2;
              else {
                k2 = (c[a2 + 60 >> 2] | 0) + ((e[n2 + (f2 << 2) + 2 >> 1] | 0) << 6) + 54 + (o2 << 1) | 0;
                i2 = n2 + (f2 << 2) | 0;
                while (1) {
                  j2 = i2;
                  i2 = i2 + 4 | 0;
                  h2 = b[i2 >> 1] | 0;
                  if ((g2 & 65535) < (h2 & 65535))
                    break;
                  f2 = c[a2 + 60 >> 2] | 0;
                  g2 = d2 & 65535;
                  if (!(h2 & 1)) {
                    h2 = f2 + (g2 << 6) + 48 + (o2 << 1) | 0;
                    b[h2 >> 1] = (b[h2 >> 1] | 0) + -1 << 16 >> 16;
                  } else {
                    h2 = f2 + (g2 << 6) + 54 + (o2 << 1) | 0;
                    b[h2 >> 1] = (b[h2 >> 1] | 0) + -1 << 16 >> 16;
                  }
                  b[k2 >> 1] = (b[k2 >> 1] | 0) + 1 << 16 >> 16;
                  g2 = e[j2 >> 1] | e[j2 + 2 >> 1] << 16;
                  d2 = e[i2 >> 1] | e[i2 + 2 >> 1] << 16;
                  b[j2 >> 1] = d2;
                  b[j2 + 2 >> 1] = d2 >>> 16;
                  b[i2 >> 1] = g2;
                  b[i2 + 2 >> 1] = g2 >>> 16;
                  d2 = b[j2 + 10 >> 1] | 0;
                  if (!(d2 << 16 >> 16))
                    break;
                  else
                    g2 = g2 & 65535;
                }
                g2 = b[a2 + 6 >> 1] | 0;
                f2 = c[l2 >> 2] | 0;
              }
              d2 = e[p2 + ((q2 & 65535) << 6) + 48 + (o2 << 1) >> 1] | 0;
              b[n2 + (d2 << 2) >> 1] = g2;
              i2 = f2 + (d2 << 2) | 0;
              h2 = b[i2 + 6 >> 1] | 0;
              if (h2 << 16 >> 16) {
                k2 = (c[a2 + 60 >> 2] | 0) + ((e[f2 + (d2 << 2) + 2 >> 1] | 0) << 6) + 48 + (o2 << 1) | 0;
                g2 = b[i2 >> 1] | 0;
                while (1) {
                  j2 = i2;
                  i2 = i2 + 4 | 0;
                  f2 = b[i2 >> 1] | 0;
                  if ((g2 & 65535) < (f2 & 65535))
                    break;
                  d2 = c[a2 + 60 >> 2] | 0;
                  g2 = h2 & 65535;
                  if (!(f2 & 1)) {
                    l2 = d2 + (g2 << 6) + 48 + (o2 << 1) | 0;
                    b[l2 >> 1] = (b[l2 >> 1] | 0) + -1 << 16 >> 16;
                  } else {
                    l2 = d2 + (g2 << 6) + 54 + (o2 << 1) | 0;
                    b[l2 >> 1] = (b[l2 >> 1] | 0) + -1 << 16 >> 16;
                  }
                  b[k2 >> 1] = (b[k2 >> 1] | 0) + 1 << 16 >> 16;
                  g2 = e[j2 >> 1] | e[j2 + 2 >> 1] << 16;
                  h2 = e[i2 >> 1] | e[i2 + 2 >> 1] << 16;
                  b[j2 >> 1] = h2;
                  b[j2 + 2 >> 1] = h2 >>> 16;
                  b[i2 >> 1] = g2;
                  b[i2 + 2 >> 1] = g2 >>> 16;
                  h2 = b[j2 + 10 >> 1] | 0;
                  if (!(h2 << 16 >> 16))
                    break;
                  else
                    g2 = g2 & 65535;
                }
                g2 = b[a2 + 6 >> 1] | 0;
              }
              b[n2 + ((m2 << 1) + -1 << 2) + 2 >> 1] = 0;
              b[n2 + ((m2 << 1) + -1 << 2) >> 1] = g2;
              o2 = o2 + 1 | 0;
            } while ((o2 | 0) != 3);
            b[(c[a2 + 60 >> 2] | 0) + ((q2 & 65535) << 6) + 48 >> 1] = b[a2 + 64 >> 1] | 0;
            b[a2 + 64 >> 1] = q2;
            b[a2 + 56 >> 1] = (b[a2 + 56 >> 1] | 0) + -1 << 16 >> 16;
            return;
          }
          function qc(a2, d2, f2, h2, j2) {
            a2 = a2 | 0;
            d2 = d2 | 0;
            f2 = f2 | 0;
            h2 = h2 | 0;
            j2 = j2 | 0;
            var k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0, I2 = 0;
            I2 = i;
            i = i + 16 | 0;
            c[d2 + 16 >> 2] = c[f2 >> 2];
            c[d2 + 16 + 4 >> 2] = c[f2 + 4 >> 2];
            c[d2 + 16 + 8 >> 2] = c[f2 + 8 >> 2];
            c[d2 + 16 + 12 >> 2] = c[f2 + 12 >> 2];
            c[d2 + 32 >> 2] = c[h2 >> 2];
            c[d2 + 32 + 4 >> 2] = c[h2 + 4 >> 2];
            c[d2 + 32 + 8 >> 2] = c[h2 + 8 >> 2];
            c[d2 + 32 + 12 >> 2] = c[h2 + 12 >> 2];
            D2 = c[a2 + 60 >> 2] | 0;
            E2 = c[d2 + 12 >> 2] & 65535;
            Tc(a2, I2 + 6 | 0, +g[f2 >> 2], +g[f2 + 4 >> 2], +g[f2 + 8 >> 2], 0);
            Tc(a2, I2, +g[h2 >> 2], +g[h2 + 4 >> 2], +g[h2 + 8 >> 2], 1);
            H2 = 0;
            do {
              t2 = b[D2 + (E2 << 6) + 48 + (H2 << 1) >> 1] | 0;
              w2 = b[D2 + (E2 << 6) + 54 + (H2 << 1) >> 1] | 0;
              q2 = b[I2 + 6 + (H2 << 1) >> 1] | 0;
              l2 = a2 + 68 + (H2 << 2) | 0;
              s2 = c[l2 >> 2] | 0;
              m2 = (q2 & 65535) - (e[s2 + ((t2 & 65535) << 2) >> 1] | 0) | 0;
              r2 = b[I2 + (H2 << 1) >> 1] | 0;
              y2 = (r2 & 65535) - (e[s2 + ((w2 & 65535) << 2) >> 1] | 0) | 0;
              b[s2 + ((t2 & 65535) << 2) >> 1] = q2;
              b[s2 + ((w2 & 65535) << 2) >> 1] = r2;
              if ((m2 | 0) < 0)
                Uc(a2, H2, t2);
              a:
                do
                  if ((y2 | 0) > 0 ? (z2 = c[l2 >> 2] | 0, A2 = c[a2 + 60 >> 2] | 0, B2 = e[z2 + ((w2 & 65535) << 2) + 2 >> 1] | 0, C2 = b[z2 + ((w2 & 65535) << 2) + 6 >> 1] | 0, C2 << 16 >> 16) : 0) {
                    n2 = 1 << H2 & 3;
                    o2 = A2 + (B2 << 6) + 54 + (H2 << 1) | 0;
                    k2 = C2;
                    r2 = z2 + ((w2 & 65535) << 2) | 0;
                    do {
                      s2 = r2;
                      r2 = r2 + 4 | 0;
                      p2 = b[r2 >> 1] | 0;
                      if ((e[s2 >> 1] | 0) < (p2 & 65535))
                        break a;
                      q2 = c[a2 + 60 >> 2] | 0;
                      k2 = k2 & 65535;
                      if (!(p2 & 1)) {
                        if (((((e[A2 + (B2 << 6) + 54 + (n2 << 1) >> 1] | 0) >= (e[q2 + (k2 << 6) + 48 + (n2 << 1) >> 1] | 0) ? (e[q2 + (k2 << 6) + 54 + (n2 << 1) >> 1] | 0) >= (e[A2 + (B2 << 6) + 48 + (n2 << 1) >> 1] | 0) : 0) ? (e[A2 + (B2 << 6) + 54 + ((1 << n2 & 3) << 1) >> 1] | 0) >= (e[q2 + (k2 << 6) + 48 + ((1 << n2 & 3) << 1) >> 1] | 0) : 0) ? (e[q2 + (k2 << 6) + 54 + ((1 << n2 & 3) << 1) >> 1] | 0) >= (e[A2 + (B2 << 6) + 48 + ((1 << n2 & 3) << 1) >> 1] | 0) : 0) ? (G2 = c[a2 + 92 >> 2] | 0, F2 = q2 + ((e[s2 + 2 >> 1] | 0) << 6) | 0, Eb[c[(c[G2 >> 2] | 0) + 8 >> 2] & 63](G2, F2, q2 + (k2 << 6) | 0) | 0, G2 = c[a2 + 96 >> 2] | 0, G2 | 0) : 0)
                          Eb[c[(c[G2 >> 2] | 0) + 8 >> 2] & 63](G2, F2, q2 + (k2 << 6) | 0) | 0;
                        q2 = q2 + (k2 << 6) + 48 + (H2 << 1) | 0;
                        b[q2 >> 1] = (b[q2 >> 1] | 0) + -1 << 16 >> 16;
                      } else {
                        q2 = q2 + (k2 << 6) + 54 + (H2 << 1) | 0;
                        b[q2 >> 1] = (b[q2 >> 1] | 0) + -1 << 16 >> 16;
                      }
                      b[o2 >> 1] = (b[o2 >> 1] | 0) + 1 << 16 >> 16;
                      k2 = e[s2 >> 1] | e[s2 + 2 >> 1] << 16;
                      q2 = e[r2 >> 1] | e[r2 + 2 >> 1] << 16;
                      b[s2 >> 1] = q2;
                      b[s2 + 2 >> 1] = q2 >>> 16;
                      b[r2 >> 1] = k2;
                      b[r2 + 2 >> 1] = k2 >>> 16;
                      k2 = b[s2 + 10 >> 1] | 0;
                    } while (k2 << 16 >> 16 != 0);
                  }
                while (0);
              b:
                do
                  if ((m2 | 0) > 0 ? (u2 = c[l2 >> 2] | 0, v2 = b[u2 + ((t2 & 65535) << 2) + 6 >> 1] | 0, v2 << 16 >> 16) : 0) {
                    p2 = (c[a2 + 60 >> 2] | 0) + ((e[u2 + ((t2 & 65535) << 2) + 2 >> 1] | 0) << 6) + 48 + (H2 << 1) | 0;
                    q2 = 1 << H2 & 3;
                    l2 = v2;
                    n2 = u2 + ((t2 & 65535) << 2) | 0;
                    do {
                      o2 = n2;
                      n2 = n2 + 4 | 0;
                      k2 = b[n2 >> 1] | 0;
                      if ((e[o2 >> 1] | 0) < (k2 & 65535))
                        break b;
                      m2 = c[a2 + 60 >> 2] | 0;
                      l2 = l2 & 65535;
                      if (!(k2 & 1)) {
                        t2 = m2 + (l2 << 6) + 48 + (H2 << 1) | 0;
                        b[t2 >> 1] = (b[t2 >> 1] | 0) + -1 << 16 >> 16;
                      } else {
                        k2 = e[o2 + 2 >> 1] | 0;
                        if (((((e[m2 + (k2 << 6) + 54 + (q2 << 1) >> 1] | 0) >= (e[m2 + (l2 << 6) + 48 + (q2 << 1) >> 1] | 0) ? (e[m2 + (l2 << 6) + 54 + (q2 << 1) >> 1] | 0) >= (e[m2 + (k2 << 6) + 48 + (q2 << 1) >> 1] | 0) : 0) ? (e[m2 + (k2 << 6) + 54 + ((1 << q2 & 3) << 1) >> 1] | 0) >= (e[m2 + (l2 << 6) + 48 + ((1 << q2 & 3) << 1) >> 1] | 0) : 0) ? (e[m2 + (l2 << 6) + 54 + ((1 << q2 & 3) << 1) >> 1] | 0) >= (e[m2 + (k2 << 6) + 48 + ((1 << q2 & 3) << 1) >> 1] | 0) : 0) ? (x2 = c[a2 + 92 >> 2] | 0, zb[c[(c[x2 >> 2] | 0) + 12 >> 2] & 31](x2, m2 + (k2 << 6) | 0, m2 + (l2 << 6) | 0, j2) | 0, x2 = c[a2 + 96 >> 2] | 0, x2 | 0) : 0)
                          zb[c[(c[x2 >> 2] | 0) + 12 >> 2] & 31](x2, m2 + (k2 << 6) | 0, m2 + (l2 << 6) | 0, j2) | 0;
                        t2 = m2 + (l2 << 6) + 54 + (H2 << 1) | 0;
                        b[t2 >> 1] = (b[t2 >> 1] | 0) + -1 << 16 >> 16;
                      }
                      b[p2 >> 1] = (b[p2 >> 1] | 0) + 1 << 16 >> 16;
                      l2 = e[o2 >> 1] | e[o2 + 2 >> 1] << 16;
                      t2 = e[n2 >> 1] | e[n2 + 2 >> 1] << 16;
                      b[o2 >> 1] = t2;
                      b[o2 + 2 >> 1] = t2 >>> 16;
                      b[n2 >> 1] = l2;
                      b[n2 + 2 >> 1] = l2 >>> 16;
                      l2 = b[o2 + 10 >> 1] | 0;
                    } while (l2 << 16 >> 16 != 0);
                  }
                while (0);
              if ((y2 | 0) < 0)
                Vc(a2, H2, w2, j2);
              H2 = H2 + 1 | 0;
            } while ((H2 | 0) != 3);
            k2 = c[a2 + 108 >> 2] | 0;
            if (!k2) {
              i = I2;
              return;
            }
            pb[c[(c[k2 >> 2] | 0) + 16 >> 2] & 31](k2, c[d2 + 60 >> 2] | 0, f2, h2, j2);
            i = I2;
            return;
          }
          function rc(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            c[d2 >> 2] = c[b2 + 16 >> 2];
            c[d2 + 4 >> 2] = c[b2 + 16 + 4 >> 2];
            c[d2 + 8 >> 2] = c[b2 + 16 + 8 >> 2];
            c[d2 + 12 >> 2] = c[b2 + 16 + 12 >> 2];
            c[e2 >> 2] = c[b2 + 32 >> 2];
            c[e2 + 4 >> 2] = c[b2 + 32 + 4 >> 2];
            c[e2 + 8 >> 2] = c[b2 + 32 + 8 >> 2];
            c[e2 + 12 >> 2] = c[b2 + 32 + 12 >> 2];
            return;
          }
          function sc(a2, d2, f2, g2, h2, i2) {
            a2 = a2 | 0;
            d2 = d2 | 0;
            f2 = f2 | 0;
            g2 = g2 | 0;
            h2 = h2 | 0;
            i2 = i2 | 0;
            var j2 = 0;
            j2 = c[a2 + 108 >> 2] | 0;
            if (j2 | 0) {
              Fb[c[(c[j2 >> 2] | 0) + 24 >> 2] & 7](j2, d2, f2, g2, h2, i2);
              return;
            }
            j2 = b[a2 + 56 >> 1] | 0;
            if ((j2 & 65535) << 1 >>> 0 <= 1)
              return;
            d2 = 1;
            h2 = 1;
            do {
              i2 = c[a2 + 68 >> 2] | 0;
              if (b[i2 + (d2 << 2) >> 1] & 1) {
                Ob[c[(c[g2 >> 2] | 0) + 8 >> 2] & 31](g2, (c[a2 + 60 >> 2] | 0) + ((e[i2 + (d2 << 2) + 2 >> 1] | 0) << 6) | 0) | 0;
                j2 = b[a2 + 56 >> 1] | 0;
              }
              h2 = h2 + 1 << 16 >> 16;
              d2 = h2 & 65535;
            } while (d2 >>> 0 < ((j2 & 65535) << 1 | 1) >>> 0);
            return;
          }
          function tc(a2, d2, f2, h2) {
            a2 = a2 | 0;
            d2 = d2 | 0;
            f2 = f2 | 0;
            h2 = h2 | 0;
            var i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0;
            i2 = c[a2 + 108 >> 2] | 0;
            if (i2 | 0) {
              bc[c[(c[i2 >> 2] | 0) + 28 >> 2] & 127](i2, d2, f2, h2);
              return;
            }
            i2 = b[a2 + 56 >> 1] | 0;
            if ((i2 & 65535) << 1 >>> 0 <= 1)
              return;
            k2 = 1;
            m2 = 1;
            do {
              j2 = c[a2 + 68 >> 2] | 0;
              if (b[j2 + (k2 << 2) >> 1] & 1) {
                l2 = c[a2 + 60 >> 2] | 0;
                k2 = e[j2 + (k2 << 2) + 2 >> 1] | 0;
                if (!(+g[d2 >> 2] > +g[l2 + (k2 << 6) + 32 >> 2]) ? !(+g[f2 >> 2] < +g[l2 + (k2 << 6) + 16 >> 2]) : 0)
                  j2 = 1;
                else
                  j2 = 0;
                if (!(!(+g[d2 + 8 >> 2] > +g[l2 + (k2 << 6) + 40 >> 2]) ? !(+g[f2 + 8 >> 2] < +g[l2 + (k2 << 6) + 24 >> 2]) : 0))
                  j2 = 0;
                if (!(+g[d2 + 4 >> 2] > +g[l2 + (k2 << 6) + 36 >> 2]) ? !(+g[f2 + 4 >> 2] < +g[l2 + (k2 << 6) + 20 >> 2] | j2 ^ 1) : 0) {
                  Ob[c[(c[h2 >> 2] | 0) + 8 >> 2] & 31](h2, l2 + (k2 << 6) | 0) | 0;
                  i2 = b[a2 + 56 >> 1] | 0;
                }
              }
              m2 = m2 + 1 << 16 >> 16;
              k2 = m2 & 65535;
            } while (k2 >>> 0 < ((i2 & 65535) << 1 | 1) >>> 0);
            return;
          }
          function uc(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, f2 = 0, g2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0;
            p2 = i;
            i = i + 32 | 0;
            o2 = c[a2 + 92 >> 2] | 0;
            if (!(vb[c[(c[o2 >> 2] | 0) + 56 >> 2] & 127](o2) | 0)) {
              i = p2;
              return;
            }
            o2 = c[a2 + 92 >> 2] | 0;
            o2 = vb[c[(c[o2 >> 2] | 0) + 28 >> 2] & 127](o2) | 0;
            d2 = c[o2 + 4 >> 2] | 0;
            if ((d2 | 0) > 1) {
              Xc(o2, 0, d2 + -1 | 0);
              d2 = c[o2 + 4 >> 2] | 0;
            }
            f2 = d2 - (c[a2 + 104 >> 2] | 0) | 0;
            c[p2 + 16 >> 2] = 0;
            c[p2 + 16 + 4 >> 2] = 0;
            c[p2 + 16 + 8 >> 2] = 0;
            c[p2 + 16 + 12 >> 2] = 0;
            Wc(o2, f2, p2 + 16 | 0);
            c[a2 + 104 >> 2] = 0;
            f2 = c[o2 + 4 >> 2] | 0;
            if ((f2 | 0) > 0) {
              d2 = 0;
              l2 = 0;
              m2 = 0;
              h2 = 0;
              while (1) {
                k2 = c[o2 + 12 >> 2] | 0;
                j2 = k2 + (l2 << 4) | 0;
                q2 = m2;
                m2 = c[j2 >> 2] | 0;
                k2 = k2 + (l2 << 4) + 4 | 0;
                g2 = c[k2 >> 2] | 0;
                if (!((m2 | 0) == (q2 | 0) & (g2 | 0) == (h2 | 0))) {
                  q2 = m2 + 54 | 0;
                  h2 = m2 + 48 | 0;
                  if (!((((((e[q2 >> 1] | 0) >= (e[g2 + 48 >> 1] | 0) ? (e[g2 + 54 >> 1] | 0) >= (e[h2 >> 1] | 0) : 0) ? (e[q2 + 2 >> 1] | 0) >= (e[g2 + 48 + 2 >> 1] | 0) : 0) ? (e[g2 + 54 + 2 >> 1] | 0) >= (e[h2 + 2 >> 1] | 0) : 0) ? (e[q2 + 4 >> 1] | 0) >= (e[g2 + 52 >> 1] | 0) : 0) ? (e[g2 + 54 + 4 >> 1] | 0) >= (e[m2 + 52 >> 1] | 0) : 0))
                    n2 = 13;
                } else {
                  g2 = h2;
                  n2 = 13;
                }
                if ((n2 | 0) == 13) {
                  n2 = 0;
                  d2 = c[a2 + 92 >> 2] | 0;
                  Zb[c[(c[d2 >> 2] | 0) + 32 >> 2] & 127](d2, j2, b2);
                  c[j2 >> 2] = 0;
                  c[k2 >> 2] = 0;
                  d2 = (c[a2 + 104 >> 2] | 0) + 1 | 0;
                  c[a2 + 104 >> 2] = d2;
                  c[4984] = (c[4984] | 0) + -1;
                  f2 = c[o2 + 4 >> 2] | 0;
                }
                l2 = l2 + 1 | 0;
                if ((l2 | 0) >= (f2 | 0))
                  break;
                else
                  h2 = g2;
              }
              if ((f2 | 0) > 1) {
                Xc(o2, 0, f2 + -1 | 0);
                f2 = c[o2 + 4 >> 2] | 0;
                d2 = c[a2 + 104 >> 2] | 0;
              }
            } else
              d2 = 0;
            c[p2 >> 2] = 0;
            c[p2 + 4 >> 2] = 0;
            c[p2 + 8 >> 2] = 0;
            c[p2 + 12 >> 2] = 0;
            Wc(o2, f2 - d2 | 0, p2);
            c[a2 + 104 >> 2] = 0;
            i = p2;
            return;
          }
          function vc(a2) {
            a2 = a2 | 0;
            return c[a2 + 92 >> 2] | 0;
          }
          function wc(a2) {
            a2 = a2 | 0;
            return c[a2 + 92 >> 2] | 0;
          }
          function xc(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            c[b2 >> 2] = c[a2 + 8 >> 2];
            c[b2 + 4 >> 2] = c[a2 + 8 + 4 >> 2];
            c[b2 + 8 >> 2] = c[a2 + 8 + 8 >> 2];
            c[b2 + 12 >> 2] = c[a2 + 8 + 12 >> 2];
            c[d2 >> 2] = c[a2 + 24 >> 2];
            c[d2 + 4 >> 2] = c[a2 + 24 + 4 >> 2];
            c[d2 + 8 >> 2] = c[a2 + 24 + 8 >> 2];
            c[d2 + 12 >> 2] = c[a2 + 24 + 12 >> 2];
            return;
          }
          function yc(a2, d2) {
            a2 = a2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0;
            d2 = c[a2 + 56 >> 2] | 0;
            if ((d2 & 65535) << 16 >> 16)
              return;
            b[a2 + 64 >> 1] = 1;
            g2 = c[a2 + 60 >> 2] | 0;
            if ((d2 >>> 16 & 65535) > 1) {
              e2 = 1;
              d2 = 1;
              while (1) {
                b[g2 + (e2 << 6) + 48 >> 1] = e2 + 1;
                f2 = d2 + 1 << 16 >> 16;
                d2 = b[a2 + 58 >> 1] | 0;
                if ((f2 & 65535) < (d2 & 65535)) {
                  e2 = f2 & 65535;
                  d2 = f2;
                } else
                  break;
              }
            } else
              d2 = d2 >>> 16 & 65535;
            b[g2 + ((d2 & 65535) + -1 << 6) + 48 >> 1] = 0;
            return;
          }
          function zc(a2) {
            a2 = a2 | 0;
            return;
          }
          function Ac(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0;
            d2 = i;
            i = i + 32 | 0;
            Za(a2 | 0) | 0;
            if (cb(23316, 3) | 0)
              vG(19340, d2);
            a2 = bb(c[5830] | 0) | 0;
            if ((a2 | 0 ? (b2 = c[a2 >> 2] | 0, b2 | 0) : 0) ? (c[b2 + 48 >> 2] & -256 | 0) == 1126902528 ? (c[b2 + 48 + 4 >> 2] | 0) == 1129074247 : 0 : 0) {
              _b[c[b2 + 12 >> 2] & 3]();
              vG(19664, d2 + 8 | 0);
            }
            b2 = c[2054] | 0;
            c[2054] = b2 + 0;
            _b[b2 & 3]();
            vG(19664, d2 + 16 | 0);
          }
          function Bc(a2) {
            a2 = a2 | 0;
            mc(a2);
            if (!a2)
              return;
            c[5638] = (c[5638] | 0) + 1;
            rG(c[a2 + -4 >> 2] | 0);
            return;
          }
          function Cc(b2) {
            b2 = b2 | 0;
            var d2 = 0;
            c[b2 >> 2] = 2616;
            d2 = c[b2 + 16 >> 2] | 0;
            if (d2 | 0) {
              if (a[b2 + 20 >> 0] | 0) {
                c[5638] = (c[5638] | 0) + 1;
                rG(c[d2 + -4 >> 2] | 0);
              }
              c[b2 + 16 >> 2] = 0;
            }
            a[b2 + 20 >> 0] = 1;
            c[b2 + 16 >> 2] = 0;
            c[b2 + 8 >> 2] = 0;
            c[b2 + 12 >> 2] = 0;
            return;
          }
          function Dc(b2) {
            b2 = b2 | 0;
            var d2 = 0;
            c[b2 >> 2] = 2616;
            d2 = c[b2 + 16 >> 2] | 0;
            if (!d2) {
              rG(b2);
              return;
            }
            if (!(a[b2 + 20 >> 0] | 0)) {
              rG(b2);
              return;
            }
            c[5638] = (c[5638] | 0) + 1;
            rG(c[d2 + -4 >> 2] | 0);
            rG(b2);
            return;
          }
          function Ec(a2, b2, c2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            return 0;
          }
          function Fc(a2, b2, c2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = d2 | 0;
            return 0;
          }
          function Gc(a2, b2, c2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            return;
          }
          function Hc(a2) {
            a2 = a2 | 0;
            return c[a2 + 16 >> 2] | 0;
          }
          function Ic(a2) {
            a2 = a2 | 0;
            return c[a2 + 16 >> 2] | 0;
          }
          function Jc(a2) {
            a2 = a2 | 0;
            return a2 + 4 | 0;
          }
          function Kc(a2, b2, c2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            return;
          }
          function Lc(a2) {
            a2 = a2 | 0;
            return 0;
          }
          function Mc(a2, b2, c2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            return;
          }
          function Nc(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            return;
          }
          function Oc(a2, b2, c2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            return;
          }
          function Pc(a2, b2, c2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            return 0;
          }
          function Qc(a2) {
            a2 = a2 | 0;
            return 1;
          }
          function Rc(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            return;
          }
          function Sc(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            return;
          }
          function Tc(a2, c2, d2, e2, f2, h2) {
            a2 = a2 | 0;
            c2 = c2 | 0;
            d2 = +d2;
            e2 = +e2;
            f2 = +f2;
            h2 = h2 | 0;
            var i2 = 0, j2 = 0;
            d2 = (d2 - +g[a2 + 8 >> 2]) * +g[a2 + 40 >> 2];
            e2 = (e2 - +g[a2 + 12 >> 2]) * +g[a2 + 44 >> 2];
            f2 = (f2 - +g[a2 + 16 >> 2]) * +g[a2 + 48 >> 2];
            do
              if (!(d2 <= 0)) {
                i2 = b[a2 + 6 >> 1] | 0;
                j2 = b[a2 + 4 >> 1] | 0;
                if (!(d2 >= +(i2 & 65535))) {
                  i2 = j2 & (~~d2 & 65535) & 65535 | h2;
                  break;
                } else {
                  i2 = j2 & i2 & 65535 | h2;
                  break;
                }
              } else
                i2 = h2;
            while (0);
            b[c2 >> 1] = i2;
            do
              if (!(e2 <= 0)) {
                i2 = b[a2 + 6 >> 1] | 0;
                j2 = b[a2 + 4 >> 1] | 0;
                if (!(e2 >= +(i2 & 65535))) {
                  i2 = j2 & (~~e2 & 65535) & 65535 | h2;
                  break;
                } else {
                  i2 = j2 & i2 & 65535 | h2;
                  break;
                }
              } else
                i2 = h2;
            while (0);
            b[c2 + 2 >> 1] = i2;
            if (f2 <= 0) {
              h2 = h2 & 65535;
              c2 = c2 + 4 | 0;
              b[c2 >> 1] = h2;
              return;
            }
            j2 = b[a2 + 6 >> 1] | 0;
            i2 = b[a2 + 4 >> 1] | 0;
            if (!(f2 >= +(j2 & 65535))) {
              h2 = i2 & (~~f2 & 65535) & 65535 | h2;
              h2 = h2 & 65535;
              c2 = c2 + 4 | 0;
              b[c2 >> 1] = h2;
              return;
            } else {
              h2 = i2 & j2 & 65535 | h2;
              h2 = h2 & 65535;
              c2 = c2 + 4 | 0;
              b[c2 >> 1] = h2;
              return;
            }
          }
          function Uc(a2, d2, f2) {
            a2 = a2 | 0;
            d2 = d2 | 0;
            f2 = f2 | 0;
            var g2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0;
            h2 = c[a2 + 68 + (d2 << 2) >> 2] | 0;
            m2 = c[a2 + 60 >> 2] | 0;
            n2 = e[h2 + ((f2 & 65535) << 2) + 2 >> 1] | 0;
            g2 = b[h2 + ((f2 & 65535) << 2) + -4 >> 1] | 0;
            if ((e[h2 + ((f2 & 65535) << 2) >> 1] | 0) >= (g2 & 65535))
              return;
            j2 = m2;
            i2 = h2 + ((f2 & 65535) << 2) | 0;
            f2 = h2 + ((f2 & 65535) << 2) + -4 | 0;
            while (1) {
              h2 = e[i2 + -2 >> 1] | 0;
              if (!(g2 & 1)) {
                j2 = j2 + (h2 << 6) + 48 + (d2 << 1) | 0;
                b[j2 >> 1] = (b[j2 >> 1] | 0) + 1 << 16 >> 16;
              } else {
                if (((((e[m2 + (n2 << 6) + 54 + ((1 << d2 & 3) << 1) >> 1] | 0) >= (e[j2 + (h2 << 6) + 48 + ((1 << d2 & 3) << 1) >> 1] | 0) ? (e[j2 + (h2 << 6) + 54 + ((1 << d2 & 3) << 1) >> 1] | 0) >= (e[m2 + (n2 << 6) + 48 + ((1 << d2 & 3) << 1) >> 1] | 0) : 0) ? (e[m2 + (n2 << 6) + 54 + ((1 << (1 << d2 & 3) & 3) << 1) >> 1] | 0) >= (e[j2 + (h2 << 6) + 48 + ((1 << (1 << d2 & 3) & 3) << 1) >> 1] | 0) : 0) ? (e[j2 + (h2 << 6) + 54 + ((1 << (1 << d2 & 3) & 3) << 1) >> 1] | 0) >= (e[m2 + (n2 << 6) + 48 + ((1 << (1 << d2 & 3) & 3) << 1) >> 1] | 0) : 0) ? (l2 = c[a2 + 92 >> 2] | 0, k2 = j2 + (h2 << 6) | 0, Eb[c[(c[l2 >> 2] | 0) + 8 >> 2] & 63](l2, m2 + (n2 << 6) | 0, k2) | 0, l2 = c[a2 + 96 >> 2] | 0, l2 | 0) : 0)
                  Eb[c[(c[l2 >> 2] | 0) + 8 >> 2] & 63](l2, m2 + (n2 << 6) | 0, k2) | 0;
                j2 = j2 + (h2 << 6) + 54 + (d2 << 1) | 0;
                b[j2 >> 1] = (b[j2 >> 1] | 0) + 1 << 16 >> 16;
              }
              b[m2 + (n2 << 6) + 48 + (d2 << 1) >> 1] = (b[m2 + (n2 << 6) + 48 + (d2 << 1) >> 1] | 0) + -1 << 16 >> 16;
              h2 = e[i2 >> 1] | e[i2 + 2 >> 1] << 16;
              g2 = e[f2 >> 1] | e[f2 + 2 >> 1] << 16;
              b[i2 >> 1] = g2;
              b[i2 + 2 >> 1] = g2 >>> 16;
              b[f2 >> 1] = h2;
              b[f2 + 2 >> 1] = h2 >>> 16;
              h2 = i2 + -4 | 0;
              f2 = f2 + -4 | 0;
              g2 = b[f2 >> 1] | 0;
              if ((e[h2 >> 1] | 0) >= (g2 & 65535))
                break;
              j2 = c[a2 + 60 >> 2] | 0;
              i2 = h2;
            }
            return;
          }
          function Vc(a2, d2, f2, g2) {
            a2 = a2 | 0;
            d2 = d2 | 0;
            f2 = f2 | 0;
            g2 = g2 | 0;
            var h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0;
            i2 = c[a2 + 68 + (d2 << 2) >> 2] | 0;
            h2 = b[i2 + ((f2 & 65535) << 2) + -4 >> 1] | 0;
            if ((e[i2 + ((f2 & 65535) << 2) >> 1] | 0) >= (h2 & 65535))
              return;
            k2 = c[a2 + 60 >> 2] | 0;
            l2 = k2 + ((e[i2 + ((f2 & 65535) << 2) + 2 >> 1] | 0) << 6) + 54 + (d2 << 1) | 0;
            j2 = i2 + ((f2 & 65535) << 2) | 0;
            f2 = i2 + ((f2 & 65535) << 2) + -4 | 0;
            while (1) {
              i2 = e[j2 + -2 >> 1] | 0;
              if (!(h2 & 1)) {
                h2 = e[j2 + 2 >> 1] | 0;
                if (((((e[k2 + (h2 << 6) + 54 + ((1 << d2 & 3) << 1) >> 1] | 0) >= (e[k2 + (i2 << 6) + 48 + ((1 << d2 & 3) << 1) >> 1] | 0) ? (e[k2 + (i2 << 6) + 54 + ((1 << d2 & 3) << 1) >> 1] | 0) >= (e[k2 + (h2 << 6) + 48 + ((1 << d2 & 3) << 1) >> 1] | 0) : 0) ? (e[k2 + (h2 << 6) + 54 + ((1 << (1 << d2 & 3) & 3) << 1) >> 1] | 0) >= (e[k2 + (i2 << 6) + 48 + ((1 << (1 << d2 & 3) & 3) << 1) >> 1] | 0) : 0) ? (e[k2 + (i2 << 6) + 54 + ((1 << (1 << d2 & 3) & 3) << 1) >> 1] | 0) >= (e[k2 + (h2 << 6) + 48 + ((1 << (1 << d2 & 3) & 3) << 1) >> 1] | 0) : 0) ? (o2 = c[a2 + 92 >> 2] | 0, m2 = k2 + (h2 << 6) | 0, n2 = k2 + (i2 << 6) | 0, zb[c[(c[o2 >> 2] | 0) + 12 >> 2] & 31](o2, m2, n2, g2) | 0, o2 = c[a2 + 96 >> 2] | 0, o2 | 0) : 0)
                  zb[c[(c[o2 >> 2] | 0) + 12 >> 2] & 31](o2, m2, n2, g2) | 0;
                k2 = k2 + (i2 << 6) + 48 + (d2 << 1) | 0;
                b[k2 >> 1] = (b[k2 >> 1] | 0) + 1 << 16 >> 16;
              } else {
                k2 = k2 + (i2 << 6) + 54 + (d2 << 1) | 0;
                b[k2 >> 1] = (b[k2 >> 1] | 0) + 1 << 16 >> 16;
              }
              b[l2 >> 1] = (b[l2 >> 1] | 0) + -1 << 16 >> 16;
              i2 = e[j2 >> 1] | e[j2 + 2 >> 1] << 16;
              h2 = e[f2 >> 1] | e[f2 + 2 >> 1] << 16;
              b[j2 >> 1] = h2;
              b[j2 + 2 >> 1] = h2 >>> 16;
              b[f2 >> 1] = i2;
              b[f2 + 2 >> 1] = i2 >>> 16;
              i2 = j2 + -4 | 0;
              f2 = f2 + -4 | 0;
              h2 = b[f2 >> 1] | 0;
              if ((e[i2 >> 1] | 0) >= (h2 & 65535))
                break;
              k2 = c[a2 + 60 >> 2] | 0;
              j2 = i2;
            }
            return;
          }
          function Wc(b2, d2, e2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, g2 = 0, h2 = 0, i2 = 0, j2 = 0;
            i2 = c[b2 + 4 >> 2] | 0;
            if ((i2 | 0) >= (d2 | 0)) {
              c[b2 + 4 >> 2] = d2;
              return;
            }
            if ((c[b2 + 8 >> 2] | 0) < (d2 | 0)) {
              if (!d2) {
                f2 = 0;
                g2 = i2;
              } else {
                c[5637] = (c[5637] | 0) + 1;
                f2 = qG((d2 << 4 | 3) + 16 | 0) | 0;
                if (!f2)
                  f2 = 0;
                else {
                  c[(f2 + 4 + 15 & -16) + -4 >> 2] = f2;
                  f2 = f2 + 4 + 15 & -16;
                }
                g2 = c[b2 + 4 >> 2] | 0;
              }
              if ((g2 | 0) > 0) {
                h2 = 0;
                do {
                  j2 = c[b2 + 12 >> 2] | 0;
                  c[f2 + (h2 << 4) >> 2] = c[j2 + (h2 << 4) >> 2];
                  c[f2 + (h2 << 4) + 4 >> 2] = c[j2 + (h2 << 4) + 4 >> 2];
                  c[f2 + (h2 << 4) + 8 >> 2] = c[j2 + (h2 << 4) + 8 >> 2];
                  c[f2 + (h2 << 4) + 12 >> 2] = c[j2 + (h2 << 4) + 12 >> 2];
                  h2 = h2 + 1 | 0;
                } while ((h2 | 0) != (g2 | 0));
              }
              g2 = c[b2 + 12 >> 2] | 0;
              if (g2 | 0) {
                if (a[b2 + 16 >> 0] | 0) {
                  c[5638] = (c[5638] | 0) + 1;
                  rG(c[g2 + -4 >> 2] | 0);
                }
                c[b2 + 12 >> 2] = 0;
              }
              a[b2 + 16 >> 0] = 1;
              c[b2 + 12 >> 2] = f2;
              c[b2 + 8 >> 2] = d2;
              g2 = b2 + 12 | 0;
            } else
              g2 = b2 + 12 | 0;
            f2 = i2;
            do {
              j2 = c[g2 >> 2] | 0;
              c[j2 + (f2 << 4) >> 2] = c[e2 >> 2];
              c[j2 + (f2 << 4) + 4 >> 2] = c[e2 + 4 >> 2];
              c[j2 + (f2 << 4) + 8 >> 2] = c[e2 + 8 >> 2];
              c[j2 + (f2 << 4) + 12 >> 2] = c[e2 + 12 >> 2];
              f2 = f2 + 1 | 0;
            } while ((f2 | 0) != (d2 | 0));
            c[b2 + 4 >> 2] = d2;
            return;
          }
          function Xc(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0;
            while (1) {
              p2 = (b2 + d2 | 0) / 2 | 0;
              m2 = c[a2 + 12 >> 2] | 0;
              n2 = c[m2 + (p2 << 4) >> 2] | 0;
              o2 = c[m2 + (p2 << 4) + 4 >> 2] | 0;
              p2 = c[m2 + (p2 << 4) + 8 >> 2] | 0;
              e2 = b2;
              f2 = d2;
              while (1) {
                a:
                  do
                    if (!n2)
                      while (1) {
                        j2 = c[m2 + (e2 << 4) >> 2] | 0;
                        if (!j2)
                          g2 = -1;
                        else
                          g2 = c[j2 + 12 >> 2] | 0;
                        k2 = c[m2 + (e2 << 4) + 4 >> 2] | 0;
                        if (!k2)
                          h2 = -1;
                        else
                          h2 = c[k2 + 12 >> 2] | 0;
                        if (!o2)
                          i2 = -1;
                        else
                          i2 = c[o2 + 12 >> 2] | 0;
                        do
                          if ((g2 | 0) <= -1) {
                            g2 = (h2 | 0) > (i2 | 0);
                            if (g2 | (j2 | 0) == 0 ^ 1)
                              if ((j2 | 0) == 0 & g2)
                                break;
                              else
                                break a;
                            if ((k2 | 0) != (o2 | 0))
                              break a;
                            if ((c[m2 + (e2 << 4) + 8 >> 2] | 0) >>> 0 <= p2 >>> 0)
                              break a;
                          }
                        while (0);
                        e2 = e2 + 1 | 0;
                      }
                    else {
                      l2 = c[n2 + 12 >> 2] | 0;
                      if (!o2)
                        while (1) {
                          i2 = c[m2 + (e2 << 4) >> 2] | 0;
                          if (!i2)
                            g2 = -1;
                          else
                            g2 = c[i2 + 12 >> 2] | 0;
                          j2 = c[m2 + (e2 << 4) + 4 >> 2] | 0;
                          if (!j2)
                            h2 = -1;
                          else
                            h2 = c[j2 + 12 >> 2] | 0;
                          do
                            if ((g2 | 0) <= (l2 | 0)) {
                              g2 = (h2 | 0) > -1;
                              if (g2 | (i2 | 0) == (n2 | 0) ^ 1)
                                if ((i2 | 0) == (n2 | 0) & g2)
                                  break;
                                else
                                  break a;
                              if (j2 | 0)
                                break a;
                              if ((c[m2 + (e2 << 4) + 8 >> 2] | 0) >>> 0 <= p2 >>> 0)
                                break a;
                            }
                          while (0);
                          e2 = e2 + 1 | 0;
                        }
                      k2 = c[o2 + 12 >> 2] | 0;
                      while (1) {
                        i2 = c[m2 + (e2 << 4) >> 2] | 0;
                        if (!i2)
                          g2 = -1;
                        else
                          g2 = c[i2 + 12 >> 2] | 0;
                        j2 = c[m2 + (e2 << 4) + 4 >> 2] | 0;
                        if (!j2)
                          h2 = -1;
                        else
                          h2 = c[j2 + 12 >> 2] | 0;
                        do
                          if ((g2 | 0) <= (l2 | 0)) {
                            g2 = (h2 | 0) > (k2 | 0);
                            if (g2 | (i2 | 0) == (n2 | 0) ^ 1)
                              if ((i2 | 0) == (n2 | 0) & g2)
                                break;
                              else
                                break a;
                            if ((j2 | 0) != (o2 | 0))
                              break a;
                            if ((c[m2 + (e2 << 4) + 8 >> 2] | 0) >>> 0 <= p2 >>> 0)
                              break a;
                          }
                        while (0);
                        e2 = e2 + 1 | 0;
                      }
                    }
                  while (0);
                b:
                  do
                    if (!n2)
                      while (1) {
                        j2 = c[m2 + (f2 << 4) >> 2] | 0;
                        if (!j2)
                          g2 = -1;
                        else
                          g2 = c[j2 + 12 >> 2] | 0;
                        if (!o2)
                          h2 = -1;
                        else
                          h2 = c[o2 + 12 >> 2] | 0;
                        k2 = c[m2 + (f2 << 4) + 4 >> 2] | 0;
                        if (!k2)
                          i2 = -1;
                        else
                          i2 = c[k2 + 12 >> 2] | 0;
                        do
                          if ((g2 | 0) >= -1) {
                            g2 = (h2 | 0) > (i2 | 0);
                            if (g2 | (j2 | 0) == 0 ^ 1)
                              if ((j2 | 0) == 0 & g2)
                                break;
                              else
                                break b;
                            if ((o2 | 0) != (k2 | 0))
                              break b;
                            if (p2 >>> 0 <= (c[m2 + (f2 << 4) + 8 >> 2] | 0) >>> 0)
                              break b;
                          }
                        while (0);
                        f2 = f2 + -1 | 0;
                      }
                    else {
                      l2 = c[n2 + 12 >> 2] | 0;
                      if (!o2)
                        while (1) {
                          i2 = c[m2 + (f2 << 4) >> 2] | 0;
                          if (!i2)
                            g2 = -1;
                          else
                            g2 = c[i2 + 12 >> 2] | 0;
                          j2 = c[m2 + (f2 << 4) + 4 >> 2] | 0;
                          if (!j2)
                            h2 = -1;
                          else
                            h2 = c[j2 + 12 >> 2] | 0;
                          do
                            if ((l2 | 0) <= (g2 | 0)) {
                              g2 = (h2 | 0) < -1;
                              if (g2 | (n2 | 0) == (i2 | 0) ^ 1)
                                if ((n2 | 0) == (i2 | 0) & g2)
                                  break;
                                else
                                  break b;
                              if (j2 | 0)
                                break b;
                              if (p2 >>> 0 <= (c[m2 + (f2 << 4) + 8 >> 2] | 0) >>> 0)
                                break b;
                            }
                          while (0);
                          f2 = f2 + -1 | 0;
                        }
                      k2 = c[o2 + 12 >> 2] | 0;
                      while (1) {
                        i2 = c[m2 + (f2 << 4) >> 2] | 0;
                        if (!i2)
                          g2 = -1;
                        else
                          g2 = c[i2 + 12 >> 2] | 0;
                        j2 = c[m2 + (f2 << 4) + 4 >> 2] | 0;
                        if (!j2)
                          h2 = -1;
                        else
                          h2 = c[j2 + 12 >> 2] | 0;
                        do
                          if ((l2 | 0) <= (g2 | 0)) {
                            g2 = (k2 | 0) > (h2 | 0);
                            if (g2 | (n2 | 0) == (i2 | 0) ^ 1)
                              if ((n2 | 0) == (i2 | 0) & g2)
                                break;
                              else
                                break b;
                            if ((o2 | 0) != (j2 | 0))
                              break b;
                            if (p2 >>> 0 <= (c[m2 + (f2 << 4) + 8 >> 2] | 0) >>> 0)
                              break b;
                          }
                        while (0);
                        f2 = f2 + -1 | 0;
                      }
                    }
                  while (0);
                if ((e2 | 0) <= (f2 | 0)) {
                  h2 = m2 + (e2 << 4) | 0;
                  i2 = c[h2 >> 2] | 0;
                  j2 = c[m2 + (e2 << 4) + 4 >> 2] | 0;
                  k2 = c[m2 + (e2 << 4) + 8 >> 2] | 0;
                  l2 = c[m2 + (e2 << 4) + 12 >> 2] | 0;
                  m2 = m2 + (f2 << 4) | 0;
                  c[h2 >> 2] = c[m2 >> 2];
                  c[h2 + 4 >> 2] = c[m2 + 4 >> 2];
                  c[h2 + 8 >> 2] = c[m2 + 8 >> 2];
                  c[h2 + 12 >> 2] = c[m2 + 12 >> 2];
                  m2 = c[a2 + 12 >> 2] | 0;
                  c[m2 + (f2 << 4) >> 2] = i2;
                  c[m2 + (f2 << 4) + 4 >> 2] = j2;
                  c[m2 + (f2 << 4) + 8 >> 2] = k2;
                  c[m2 + (f2 << 4) + 12 >> 2] = l2;
                  e2 = e2 + 1 | 0;
                  f2 = f2 + -1 | 0;
                }
                if ((e2 | 0) > (f2 | 0))
                  break;
                m2 = c[a2 + 12 >> 2] | 0;
              }
              if ((f2 | 0) > (b2 | 0))
                Xc(a2, b2, f2);
              if ((e2 | 0) < (d2 | 0))
                b2 = e2;
              else
                break;
            }
            return;
          }
          function Yc(a2) {
            a2 = a2 | 0;
            return;
          }
          function Zc(b2) {
            b2 = b2 | 0;
            var d2 = 0;
            d2 = c[b2 >> 2] | 0;
            if (d2 | 0)
              _c(b2, d2);
            d2 = c[b2 + 4 >> 2] | 0;
            if (d2 | 0) {
              c[5638] = (c[5638] | 0) + 1;
              rG(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 4 >> 2] = 0;
            c[b2 + 8 >> 2] = -1;
            d2 = c[b2 + 32 >> 2] | 0;
            if (d2 | 0) {
              if (a[b2 + 36 >> 0] | 0) {
                c[5638] = (c[5638] | 0) + 1;
                rG(c[d2 + -4 >> 2] | 0);
              }
              c[b2 + 32 >> 2] = 0;
            }
            a[b2 + 36 >> 0] = 1;
            c[b2 + 32 >> 2] = 0;
            c[b2 + 24 >> 2] = 0;
            c[b2 + 28 >> 2] = 0;
            c[b2 + 16 >> 2] = 0;
            d2 = c[b2 + 52 >> 2] | 0;
            if (!d2) {
              a[b2 + 56 >> 0] = 1;
              c[b2 + 52 >> 2] = 0;
              c[b2 + 44 >> 2] = 0;
              c[b2 + 48 >> 2] = 0;
              a[b2 + 36 >> 0] = 1;
              c[b2 + 32 >> 2] = 0;
              c[b2 + 24 >> 2] = 0;
              c[b2 + 28 >> 2] = 0;
              return;
            }
            if (!(a[b2 + 56 >> 0] | 0)) {
              a[b2 + 56 >> 0] = 1;
              c[b2 + 52 >> 2] = 0;
              c[b2 + 44 >> 2] = 0;
              c[b2 + 48 >> 2] = 0;
              a[b2 + 36 >> 0] = 1;
              c[b2 + 32 >> 2] = 0;
              c[b2 + 24 >> 2] = 0;
              c[b2 + 28 >> 2] = 0;
              return;
            }
            c[5638] = (c[5638] | 0) + 1;
            rG(c[d2 + -4 >> 2] | 0);
            d2 = c[b2 + 32 >> 2] | 0;
            a[b2 + 56 >> 0] = 1;
            c[b2 + 52 >> 2] = 0;
            c[b2 + 44 >> 2] = 0;
            c[b2 + 48 >> 2] = 0;
            if (!d2) {
              a[b2 + 36 >> 0] = 1;
              c[b2 + 32 >> 2] = 0;
              c[b2 + 24 >> 2] = 0;
              c[b2 + 28 >> 2] = 0;
              return;
            }
            if (a[b2 + 36 >> 0] | 0) {
              c[5638] = (c[5638] | 0) + 1;
              rG(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 32 >> 2] = 0;
            a[b2 + 36 >> 0] = 1;
            c[b2 + 32 >> 2] = 0;
            c[b2 + 24 >> 2] = 0;
            c[b2 + 28 >> 2] = 0;
            return;
          }
          function _c(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0;
            if (c[b2 + 40 >> 2] | 0) {
              _c(a2, c[b2 + 36 >> 2] | 0);
              _c(a2, c[b2 + 40 >> 2] | 0);
            }
            if ((c[a2 >> 2] | 0) == (b2 | 0))
              c[a2 >> 2] = 0;
            d2 = c[a2 + 4 >> 2] | 0;
            if (!d2) {
              c[a2 + 4 >> 2] = b2;
              return;
            }
            c[5638] = (c[5638] | 0) + 1;
            rG(c[d2 + -4 >> 2] | 0);
            c[a2 + 4 >> 2] = b2;
            return;
          }
          function $c(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0;
            n2 = i;
            i = i + 32 | 0;
            if ((b2 | 0) < 0)
              b2 = c[a2 + 12 >> 2] | 0;
            d2 = c[a2 >> 2] | 0;
            if (!((b2 | 0) > 0 & (d2 | 0) != 0)) {
              i = n2;
              return;
            }
            while (1) {
              e2 = d2 + 40 | 0;
              if (c[e2 >> 2] | 0) {
                m2 = 0;
                while (1) {
                  l2 = (c[a2 + 16 >> 2] | 0) >>> m2 & 1;
                  f2 = d2 + 32 | 0;
                  g2 = c[f2 >> 2] | 0;
                  if (g2 >>> 0 > d2 >>> 0) {
                    h2 = (c[g2 + 40 >> 2] | 0) == (d2 | 0) & 1;
                    j2 = c[g2 + 36 + ((h2 ^ 1) << 2) >> 2] | 0;
                    k2 = c[g2 + 32 >> 2] | 0;
                    if (!k2)
                      c[a2 >> 2] = d2;
                    else
                      c[k2 + 36 + (((c[k2 + 40 >> 2] | 0) == (g2 | 0) & 1) << 2) >> 2] = d2;
                    c[j2 + 32 >> 2] = d2;
                    c[g2 + 32 >> 2] = d2;
                    c[f2 >> 2] = k2;
                    k2 = d2 + 36 | 0;
                    c[g2 + 36 >> 2] = c[k2 >> 2];
                    c[g2 + 40 >> 2] = c[e2 >> 2];
                    c[(c[k2 >> 2] | 0) + 32 >> 2] = g2;
                    c[(c[e2 >> 2] | 0) + 32 >> 2] = g2;
                    c[d2 + 36 + (h2 << 2) >> 2] = g2;
                    c[d2 + 36 + ((h2 ^ 1) << 2) >> 2] = j2;
                    c[n2 >> 2] = c[g2 >> 2];
                    c[n2 + 4 >> 2] = c[g2 + 4 >> 2];
                    c[n2 + 8 >> 2] = c[g2 + 8 >> 2];
                    c[n2 + 12 >> 2] = c[g2 + 12 >> 2];
                    c[n2 + 16 >> 2] = c[g2 + 16 >> 2];
                    c[n2 + 20 >> 2] = c[g2 + 20 >> 2];
                    c[n2 + 24 >> 2] = c[g2 + 24 >> 2];
                    c[n2 + 28 >> 2] = c[g2 + 28 >> 2];
                    c[g2 >> 2] = c[d2 >> 2];
                    c[g2 + 4 >> 2] = c[d2 + 4 >> 2];
                    c[g2 + 8 >> 2] = c[d2 + 8 >> 2];
                    c[g2 + 12 >> 2] = c[d2 + 12 >> 2];
                    c[g2 + 16 >> 2] = c[d2 + 16 >> 2];
                    c[g2 + 20 >> 2] = c[d2 + 20 >> 2];
                    c[g2 + 24 >> 2] = c[d2 + 24 >> 2];
                    c[g2 + 28 >> 2] = c[d2 + 28 >> 2];
                    c[d2 >> 2] = c[n2 >> 2];
                    c[d2 + 4 >> 2] = c[n2 + 4 >> 2];
                    c[d2 + 8 >> 2] = c[n2 + 8 >> 2];
                    c[d2 + 12 >> 2] = c[n2 + 12 >> 2];
                    c[d2 + 16 >> 2] = c[n2 + 16 >> 2];
                    c[d2 + 20 >> 2] = c[n2 + 20 >> 2];
                    c[d2 + 24 >> 2] = c[n2 + 24 >> 2];
                    c[d2 + 28 >> 2] = c[n2 + 28 >> 2];
                    d2 = g2;
                  }
                  d2 = c[d2 + 36 + (l2 << 2) >> 2] | 0;
                  e2 = d2 + 40 | 0;
                  if (!(c[e2 >> 2] | 0))
                    break;
                  else
                    m2 = m2 + 1 & 31;
                }
              }
              if (!(ad(a2, d2) | 0))
                e2 = 0;
              else
                e2 = c[a2 >> 2] | 0;
              bd(a2, e2, d2);
              c[a2 + 16 >> 2] = (c[a2 + 16 >> 2] | 0) + 1;
              b2 = b2 + -1 | 0;
              if (!b2)
                break;
              d2 = c[a2 >> 2] | 0;
            }
            i = n2;
            return;
          }
          function ad(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0;
            if ((c[a2 >> 2] | 0) == (b2 | 0)) {
              c[a2 >> 2] = 0;
              a2 = 0;
              return a2 | 0;
            }
            e2 = c[b2 + 32 >> 2] | 0;
            d2 = c[e2 + 32 >> 2] | 0;
            b2 = c[e2 + 36 + (((c[e2 + 40 >> 2] | 0) != (b2 | 0) & 1) << 2) >> 2] | 0;
            if (!d2) {
              c[a2 >> 2] = b2;
              c[b2 + 32 >> 2] = 0;
              d2 = c[a2 + 4 >> 2] | 0;
              if (!d2)
                d2 = b2;
              else {
                c[5638] = (c[5638] | 0) + 1;
                rG(c[d2 + -4 >> 2] | 0);
                d2 = c[a2 >> 2] | 0;
              }
              c[a2 + 4 >> 2] = e2;
              a2 = d2;
              return a2 | 0;
            }
            c[d2 + 36 + (((c[d2 + 40 >> 2] | 0) == (e2 | 0) & 1) << 2) >> 2] = b2;
            c[b2 + 32 >> 2] = d2;
            b2 = c[a2 + 4 >> 2] | 0;
            if (b2 | 0) {
              c[5638] = (c[5638] | 0) + 1;
              rG(c[b2 + -4 >> 2] | 0);
            }
            c[a2 + 4 >> 2] = e2;
            do {
              s2 = +g[d2 >> 2];
              x2 = d2 + 4 | 0;
              q2 = +g[x2 >> 2];
              v2 = d2 + 8 | 0;
              o2 = +g[v2 >> 2];
              y2 = d2 + 16 | 0;
              m2 = +g[y2 >> 2];
              w2 = d2 + 20 | 0;
              i2 = +g[w2 >> 2];
              e2 = d2 + 24 | 0;
              k2 = +g[e2 >> 2];
              u2 = c[d2 + 36 >> 2] | 0;
              b2 = c[d2 + 40 >> 2] | 0;
              t2 = +g[u2 >> 2];
              r2 = +g[b2 >> 2];
              r2 = t2 < r2 ? t2 : r2;
              g[d2 >> 2] = r2;
              t2 = +g[u2 + 16 >> 2];
              l2 = +g[b2 + 16 >> 2];
              l2 = t2 > l2 ? t2 : l2;
              g[y2 >> 2] = l2;
              t2 = +g[u2 + 4 >> 2];
              p2 = +g[b2 + 4 >> 2];
              p2 = t2 < p2 ? t2 : p2;
              g[x2 >> 2] = p2;
              t2 = +g[u2 + 20 >> 2];
              h2 = +g[b2 + 20 >> 2];
              h2 = t2 > h2 ? t2 : h2;
              g[w2 >> 2] = h2;
              t2 = +g[u2 + 8 >> 2];
              n2 = +g[b2 + 8 >> 2];
              n2 = t2 < n2 ? t2 : n2;
              g[v2 >> 2] = n2;
              t2 = +g[u2 + 24 >> 2];
              j2 = +g[b2 + 24 >> 2];
              j2 = t2 > j2 ? t2 : j2;
              g[e2 >> 2] = j2;
              if (!(s2 != r2 | q2 != p2 | o2 != n2 | m2 != l2) ? !(k2 != j2 | i2 != h2) : 0) {
                f2 = 14;
                break;
              }
              d2 = c[d2 + 32 >> 2] | 0;
            } while ((d2 | 0) != 0);
            if ((f2 | 0) == 14)
              return d2 | 0;
            y2 = c[a2 >> 2] | 0;
            return y2 | 0;
          }
          function bd(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0;
            if (!(c[a2 >> 2] | 0)) {
              c[a2 >> 2] = d2;
              c[d2 + 32 >> 2] = 0;
              return;
            }
            e2 = c[b2 + 40 >> 2] | 0;
            if (!e2)
              o2 = b2;
            else {
              k2 = +g[d2 >> 2] + +g[d2 + 16 >> 2];
              i2 = +g[d2 + 4 >> 2] + +g[d2 + 20 >> 2];
              j2 = +g[d2 + 8 >> 2] + +g[d2 + 24 >> 2];
              do {
                p2 = c[b2 + 36 >> 2] | 0;
                n2 = +N(+(k2 - (+g[p2 >> 2] + +g[p2 + 16 >> 2]))) + +N(+(i2 - (+g[p2 + 4 >> 2] + +g[p2 + 20 >> 2]))) + +N(+(j2 - (+g[p2 + 8 >> 2] + +g[p2 + 24 >> 2])));
                b2 = c[b2 + 36 + ((!(n2 < +N(+(k2 - (+g[e2 >> 2] + +g[e2 + 16 >> 2]))) + +N(+(i2 - (+g[e2 + 4 >> 2] + +g[e2 + 20 >> 2]))) + +N(+(j2 - (+g[e2 + 8 >> 2] + +g[e2 + 24 >> 2])))) & 1) << 2) >> 2] | 0;
                e2 = c[b2 + 40 >> 2] | 0;
              } while ((e2 | 0) != 0);
              o2 = b2;
            }
            p2 = o2 + 32 | 0;
            e2 = c[p2 >> 2] | 0;
            b2 = c[a2 + 4 >> 2] | 0;
            if (!b2) {
              c[5637] = (c[5637] | 0) + 1;
              b2 = qG(63) | 0;
              if (!b2)
                b2 = 0;
              else {
                c[(b2 + 4 + 15 & -16) + -4 >> 2] = b2;
                b2 = b2 + 4 + 15 & -16;
              }
              f2 = b2;
              h2 = f2 + 44 | 0;
              do {
                c[f2 >> 2] = 0;
                f2 = f2 + 4 | 0;
              } while ((f2 | 0) < (h2 | 0));
            } else
              c[a2 + 4 >> 2] = 0;
            c[b2 + 32 >> 2] = e2;
            c[b2 + 36 >> 2] = 0;
            f2 = b2 + 40 | 0;
            c[f2 >> 2] = 0;
            q2 = +g[d2 >> 2];
            n2 = +g[o2 >> 2];
            n2 = q2 < n2 ? q2 : n2;
            g[b2 >> 2] = n2;
            q2 = +g[d2 + 16 >> 2];
            k2 = +g[o2 + 16 >> 2];
            k2 = q2 > k2 ? q2 : k2;
            g[b2 + 16 >> 2] = k2;
            q2 = +g[d2 + 4 >> 2];
            m2 = +g[o2 + 4 >> 2];
            m2 = q2 < m2 ? q2 : m2;
            g[b2 + 4 >> 2] = m2;
            q2 = +g[d2 + 20 >> 2];
            j2 = +g[o2 + 20 >> 2];
            j2 = q2 > j2 ? q2 : j2;
            g[b2 + 20 >> 2] = j2;
            q2 = +g[d2 + 8 >> 2];
            l2 = +g[o2 + 8 >> 2];
            l2 = q2 < l2 ? q2 : l2;
            g[b2 + 8 >> 2] = l2;
            q2 = +g[d2 + 24 >> 2];
            i2 = +g[o2 + 24 >> 2];
            i2 = q2 > i2 ? q2 : i2;
            g[b2 + 24 >> 2] = i2;
            if (!e2) {
              c[b2 + 36 >> 2] = o2;
              c[p2 >> 2] = b2;
              c[f2 >> 2] = d2;
              c[d2 + 32 >> 2] = b2;
              c[a2 >> 2] = b2;
              return;
            }
            c[e2 + 36 + (((c[(c[p2 >> 2] | 0) + 40 >> 2] | 0) == (o2 | 0) & 1) << 2) >> 2] = b2;
            c[b2 + 36 >> 2] = o2;
            c[p2 >> 2] = b2;
            c[f2 >> 2] = d2;
            c[d2 + 32 >> 2] = b2;
            while (1) {
              b2 = e2 + 4 | 0;
              if (((((+g[e2 >> 2] <= n2 ? +g[b2 >> 2] <= m2 : 0) ? +g[e2 + 8 >> 2] <= l2 : 0) ? +g[e2 + 16 >> 2] >= k2 : 0) ? +g[e2 + 20 >> 2] >= j2 : 0) ? +g[e2 + 24 >> 2] >= i2 : 0) {
                b2 = 21;
                break;
              }
              d2 = c[e2 + 36 >> 2] | 0;
              a2 = c[e2 + 40 >> 2] | 0;
              q2 = +g[d2 >> 2];
              n2 = +g[a2 >> 2];
              n2 = q2 < n2 ? q2 : n2;
              g[e2 >> 2] = n2;
              q2 = +g[d2 + 16 >> 2];
              k2 = +g[a2 + 16 >> 2];
              k2 = q2 > k2 ? q2 : k2;
              g[e2 + 16 >> 2] = k2;
              q2 = +g[d2 + 4 >> 2];
              m2 = +g[a2 + 4 >> 2];
              m2 = q2 < m2 ? q2 : m2;
              g[b2 >> 2] = m2;
              q2 = +g[d2 + 20 >> 2];
              j2 = +g[a2 + 20 >> 2];
              j2 = q2 > j2 ? q2 : j2;
              g[e2 + 20 >> 2] = j2;
              q2 = +g[d2 + 8 >> 2];
              l2 = +g[a2 + 8 >> 2];
              l2 = q2 < l2 ? q2 : l2;
              g[e2 + 8 >> 2] = l2;
              q2 = +g[d2 + 24 >> 2];
              i2 = +g[a2 + 24 >> 2];
              i2 = q2 > i2 ? q2 : i2;
              g[e2 + 24 >> 2] = i2;
              e2 = c[e2 + 32 >> 2] | 0;
              if (!e2) {
                b2 = 21;
                break;
              }
            }
            if ((b2 | 0) == 21)
              return;
          }
          function cd(a2, b2, d2, e2, f2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = +f2;
            var h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0;
            o2 = +g[d2 >> 2];
            if (+g[b2 >> 2] <= o2) {
              i2 = +g[d2 + 4 >> 2];
              if ((((+g[b2 + 4 >> 2] <= i2 ? +g[b2 + 8 >> 2] <= +g[d2 + 8 >> 2] : 0) ? +g[b2 + 16 >> 2] >= +g[d2 + 16 >> 2] : 0) ? +g[b2 + 20 >> 2] >= +g[d2 + 20 >> 2] : 0) ? +g[b2 + 24 >> 2] >= +g[d2 + 24 >> 2] : 0) {
                d2 = 0;
                return d2 | 0;
              } else
                h2 = d2 + 4 | 0;
            } else {
              h2 = d2 + 4 | 0;
              i2 = +g[d2 + 4 >> 2];
            }
            g[d2 >> 2] = o2 - f2;
            m2 = i2 - f2;
            g[h2 >> 2] = m2;
            p2 = +g[d2 + 8 >> 2] - f2;
            g[d2 + 8 >> 2] = p2;
            i2 = +g[d2 + 16 >> 2] + f2;
            g[d2 + 16 >> 2] = i2;
            n2 = +g[d2 + 20 >> 2] + f2;
            g[d2 + 20 >> 2] = n2;
            q2 = +g[d2 + 24 >> 2] + f2;
            g[d2 + 24 >> 2] = q2;
            l2 = +g[e2 >> 2];
            if (l2 > 0)
              g[d2 + 16 >> 2] = l2 + i2;
            else
              g[d2 >> 2] = l2 + (o2 - f2);
            i2 = +g[e2 + 4 >> 2];
            if (i2 > 0)
              g[d2 + 20 >> 2] = i2 + n2;
            else
              g[h2 >> 2] = i2 + m2;
            i2 = +g[e2 + 8 >> 2];
            if (i2 > 0)
              g[d2 + 24 >> 2] = i2 + q2;
            else
              g[d2 + 8 >> 2] = i2 + p2;
            h2 = ad(a2, b2) | 0;
            a:
              do
                if (h2) {
                  j2 = c[a2 + 8 >> 2] | 0;
                  if ((j2 | 0) <= -1) {
                    h2 = c[a2 >> 2] | 0;
                    break;
                  }
                  if ((j2 | 0) > 0) {
                    k2 = 0;
                    while (1) {
                      e2 = c[h2 + 32 >> 2] | 0;
                      k2 = k2 + 1 | 0;
                      if (!e2)
                        break a;
                      if ((k2 | 0) >= (j2 | 0)) {
                        h2 = e2;
                        break;
                      } else
                        h2 = e2;
                    }
                  }
                } else
                  h2 = 0;
              while (0);
            c[b2 >> 2] = c[d2 >> 2];
            c[b2 + 4 >> 2] = c[d2 + 4 >> 2];
            c[b2 + 8 >> 2] = c[d2 + 8 >> 2];
            c[b2 + 12 >> 2] = c[d2 + 12 >> 2];
            c[b2 + 16 >> 2] = c[d2 + 16 >> 2];
            c[b2 + 20 >> 2] = c[d2 + 20 >> 2];
            c[b2 + 24 >> 2] = c[d2 + 24 >> 2];
            c[b2 + 28 >> 2] = c[d2 + 28 >> 2];
            bd(a2, h2, b2);
            d2 = 1;
            return d2 | 0;
          }
          function dd(a2, b2, c2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            return;
          }
          function ed(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = +d2;
            tb[c[(c[a2 >> 2] | 0) + 12 >> 2] & 127](a2, b2);
            return;
          }
          function fd(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            return 1;
          }
          function gd(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            return 1;
          }
          function hd(b2) {
            b2 = b2 | 0;
            var d2 = 0;
            c[b2 >> 2] = 2692;
            if (a[b2 + 192 >> 0] | 0 ? (d2 = c[b2 + 136 >> 2] | 0, rb[c[c[d2 >> 2] >> 2] & 255](d2), d2 = c[b2 + 136 >> 2] | 0, d2 | 0) : 0) {
              c[5638] = (c[5638] | 0) + 1;
              rG(c[d2 + -4 >> 2] | 0);
            }
            Zc(b2 + 64 | 0);
            Zc(b2 + 4 | 0);
            return;
          }
          function id(a2) {
            a2 = a2 | 0;
            hd(a2);
            rG(a2);
            return;
          }
          function jd(d2, e2, f2, g2, h2, j2, k2, l2, m2) {
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            g2 = g2 | 0;
            h2 = h2 | 0;
            j2 = j2 | 0;
            k2 = k2 | 0;
            l2 = l2 | 0;
            m2 = m2 | 0;
            var n2 = 0, o2 = 0;
            o2 = i;
            i = i + 48 | 0;
            c[5637] = (c[5637] | 0) + 1;
            g2 = qG(83) | 0;
            if (!g2)
              n2 = 0;
            else {
              c[(g2 + 4 + 15 & -16) + -4 >> 2] = g2;
              n2 = g2 + 4 + 15 & -16;
            }
            c[n2 >> 2] = h2;
            b[n2 + 4 >> 1] = j2;
            b[n2 + 6 >> 1] = k2;
            j2 = n2 + 16 | 0;
            c[j2 >> 2] = c[e2 >> 2];
            c[j2 + 4 >> 2] = c[e2 + 4 >> 2];
            c[j2 + 8 >> 2] = c[e2 + 8 >> 2];
            c[j2 + 12 >> 2] = c[e2 + 12 >> 2];
            j2 = n2 + 32 | 0;
            c[j2 >> 2] = c[f2 >> 2];
            c[j2 + 4 >> 2] = c[f2 + 4 >> 2];
            c[j2 + 8 >> 2] = c[f2 + 8 >> 2];
            c[j2 + 12 >> 2] = c[f2 + 12 >> 2];
            c[n2 + 8 >> 2] = 0;
            j2 = n2 + 56 | 0;
            c[j2 >> 2] = 0;
            k2 = n2 + 52 | 0;
            c[k2 >> 2] = 0;
            c[o2 + 16 >> 2] = c[e2 >> 2];
            c[o2 + 16 + 4 >> 2] = c[e2 + 4 >> 2];
            c[o2 + 16 + 8 >> 2] = c[e2 + 8 >> 2];
            c[o2 + 16 + 12 >> 2] = c[e2 + 12 >> 2];
            c[o2 + 16 + 16 >> 2] = c[f2 >> 2];
            c[o2 + 16 + 16 + 4 >> 2] = c[f2 + 4 >> 2];
            c[o2 + 16 + 16 + 8 >> 2] = c[f2 + 8 >> 2];
            c[o2 + 16 + 16 + 12 >> 2] = c[f2 + 12 >> 2];
            c[n2 + 60 >> 2] = c[d2 + 144 >> 2];
            g2 = (c[d2 + 188 >> 2] | 0) + 1 | 0;
            c[d2 + 188 >> 2] = g2;
            c[n2 + 12 >> 2] = g2;
            g2 = c[d2 + 8 >> 2] | 0;
            if (!g2) {
              c[5637] = (c[5637] | 0) + 1;
              g2 = qG(63) | 0;
              if (!g2)
                g2 = 0;
              else {
                c[(g2 + 4 + 15 & -16) + -4 >> 2] = g2;
                g2 = g2 + 4 + 15 & -16;
              }
              l2 = g2;
              m2 = l2 + 44 | 0;
              do {
                c[l2 >> 2] = 0;
                l2 = l2 + 4 | 0;
              } while ((l2 | 0) < (m2 | 0));
            } else
              c[d2 + 8 >> 2] = 0;
            c[g2 + 32 >> 2] = 0;
            c[g2 + 36 >> 2] = n2;
            c[g2 + 40 >> 2] = 0;
            c[g2 >> 2] = c[o2 + 16 >> 2];
            c[g2 + 4 >> 2] = c[o2 + 16 + 4 >> 2];
            c[g2 + 8 >> 2] = c[o2 + 16 + 8 >> 2];
            c[g2 + 12 >> 2] = c[o2 + 16 + 12 >> 2];
            c[g2 + 16 >> 2] = c[o2 + 16 + 16 >> 2];
            c[g2 + 20 >> 2] = c[o2 + 16 + 20 >> 2];
            c[g2 + 24 >> 2] = c[o2 + 16 + 24 >> 2];
            c[g2 + 28 >> 2] = c[o2 + 16 + 28 >> 2];
            bd(d2 + 4 | 0, c[d2 + 4 >> 2] | 0, g2);
            c[d2 + 16 >> 2] = (c[d2 + 16 >> 2] | 0) + 1;
            c[n2 + 48 >> 2] = g2;
            l2 = d2 + 124 + (c[d2 + 144 >> 2] << 2) | 0;
            c[k2 >> 2] = 0;
            c[j2 >> 2] = c[l2 >> 2];
            g2 = c[l2 >> 2] | 0;
            if (g2 | 0)
              c[g2 + 52 >> 2] = n2;
            c[l2 >> 2] = n2;
            if (a[d2 + 193 >> 0] | 0) {
              i = o2;
              return n2 | 0;
            }
            c[o2 >> 2] = 2756;
            c[o2 + 4 >> 2] = d2;
            c[o2 + 8 >> 2] = n2;
            od(c[d2 + 4 >> 2] | 0, o2 + 16 | 0, o2);
            od(c[d2 + 64 >> 2] | 0, o2 + 16 | 0, o2);
            i = o2;
            return n2 | 0;
          }
          function kd(a2) {
            a2 = a2 | 0;
            return;
          }
          function ld(a2) {
            a2 = a2 | 0;
            rG(a2);
            return;
          }
          function md(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0;
            if ((b2 | 0) == (d2 | 0))
              return;
            e2 = c[(c[a2 + 4 >> 2] | 0) + 136 >> 2] | 0;
            Eb[c[(c[e2 >> 2] | 0) + 8 >> 2] & 63](e2, c[b2 + 36 >> 2] | 0, c[d2 + 36 >> 2] | 0) | 0;
            a2 = (c[a2 + 4 >> 2] | 0) + 160 | 0;
            c[a2 >> 2] = (c[a2 >> 2] | 0) + 1;
            return;
          }
          function nd(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            Zb[c[(c[a2 >> 2] | 0) + 8 >> 2] & 127](a2, b2, c[(c[a2 + 8 >> 2] | 0) + 48 >> 2] | 0);
            return;
          }
          function od(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0;
            if (!a2)
              return;
            n2 = +g[b2 >> 2];
            o2 = +g[b2 + 4 >> 2];
            q2 = +g[b2 + 8 >> 2];
            s2 = +g[b2 + 16 >> 2];
            m2 = +g[b2 + 20 >> 2];
            l2 = +g[b2 + 24 >> 2];
            c[5637] = (c[5637] | 0) + 1;
            b2 = qG(275) | 0;
            c[(b2 + 4 + 15 & -16) + -4 >> 2] = b2;
            c[(b2 + 4 + 15 & -16) >> 2] = a2;
            k2 = 1;
            a2 = 64;
            b2 = b2 + 4 + 15 & -16;
            while (1) {
              e2 = k2 + -1 | 0;
              i2 = c[b2 + (e2 << 2) >> 2] | 0;
              do
                if (((((+g[i2 >> 2] <= s2 ? +g[i2 + 16 >> 2] >= n2 : 0) ? +g[i2 + 4 >> 2] <= m2 : 0) ? +g[i2 + 20 >> 2] >= o2 : 0) ? +g[i2 + 8 >> 2] <= l2 : 0) ? +g[i2 + 24 >> 2] >= q2 : 0) {
                  if (!(c[i2 + 40 >> 2] | 0)) {
                    tb[c[(c[d2 >> 2] | 0) + 12 >> 2] & 127](d2, i2);
                    break;
                  }
                  j2 = c[i2 + 36 >> 2] | 0;
                  do
                    if ((e2 | 0) == (a2 | 0) ? (p2 = a2 | 0 ? a2 << 1 : 1, (k2 | 0) <= (p2 | 0)) : 0) {
                      if ((p2 | 0) != 0 ? (c[5637] = (c[5637] | 0) + 1, r2 = qG((p2 << 2 | 3) + 16 | 0) | 0, (r2 | 0) != 0) : 0) {
                        c[(r2 + 4 + 15 & -16) + -4 >> 2] = r2;
                        h2 = r2 + 4 + 15 & -16;
                      } else
                        h2 = 0;
                      if ((k2 | 0) <= 1) {
                        if (!b2) {
                          a2 = p2;
                          b2 = h2;
                          break;
                        }
                      } else {
                        f2 = 0;
                        do {
                          c[h2 + (f2 << 2) >> 2] = c[b2 + (f2 << 2) >> 2];
                          f2 = f2 + 1 | 0;
                        } while ((f2 | 0) != (a2 | 0));
                      }
                      c[5638] = (c[5638] | 0) + 1;
                      rG(c[b2 + -4 >> 2] | 0);
                      a2 = p2;
                      b2 = h2;
                    }
                  while (0);
                  c[b2 + (e2 << 2) >> 2] = j2;
                  h2 = c[i2 + 40 >> 2] | 0;
                  do
                    if ((k2 | 0) == (a2 | 0)) {
                      a2 = k2 | 0 ? k2 << 1 : 1;
                      if ((k2 | 0) < (a2 | 0)) {
                        if ((a2 | 0) != 0 ? (c[5637] = (c[5637] | 0) + 1, t2 = qG((a2 << 2 | 3) + 16 | 0) | 0, (t2 | 0) != 0) : 0) {
                          c[(t2 + 4 + 15 & -16) + -4 >> 2] = t2;
                          f2 = t2 + 4 + 15 & -16;
                        } else
                          f2 = 0;
                        if ((k2 | 0) <= 0) {
                          if (!b2) {
                            b2 = f2;
                            break;
                          }
                        } else {
                          e2 = 0;
                          do {
                            c[f2 + (e2 << 2) >> 2] = c[b2 + (e2 << 2) >> 2];
                            e2 = e2 + 1 | 0;
                          } while ((e2 | 0) != (k2 | 0));
                        }
                        c[5638] = (c[5638] | 0) + 1;
                        rG(c[b2 + -4 >> 2] | 0);
                        b2 = f2;
                      } else
                        a2 = k2;
                    }
                  while (0);
                  c[b2 + (k2 << 2) >> 2] = h2;
                  e2 = k2 + 1 | 0;
                }
              while (0);
              if ((e2 | 0) > 0)
                k2 = e2;
              else
                break;
            }
            if (!b2)
              return;
            c[5638] = (c[5638] | 0) + 1;
            rG(c[b2 + -4 >> 2] | 0);
            return;
          }
          function pd(b2, d2, e2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, g2 = 0;
            if ((c[d2 + 60 >> 2] | 0) == 2) {
              f2 = c[d2 + 48 >> 2] | 0;
              ad(b2 + 64 | 0, f2) | 0;
              g2 = c[b2 + 68 >> 2] | 0;
              if (g2 | 0) {
                c[5638] = (c[5638] | 0) + 1;
                rG(c[g2 + -4 >> 2] | 0);
              }
              c[b2 + 68 >> 2] = f2;
              c[b2 + 76 >> 2] = (c[b2 + 76 >> 2] | 0) + -1;
            } else {
              f2 = c[d2 + 48 >> 2] | 0;
              ad(b2 + 4 | 0, f2) | 0;
              g2 = c[b2 + 8 >> 2] | 0;
              if (g2 | 0) {
                c[5638] = (c[5638] | 0) + 1;
                rG(c[g2 + -4 >> 2] | 0);
              }
              c[b2 + 8 >> 2] = f2;
              c[b2 + 16 >> 2] = (c[b2 + 16 >> 2] | 0) + -1;
            }
            f2 = c[d2 + 52 >> 2] | 0;
            g2 = c[d2 + 56 >> 2] | 0;
            if (!f2)
              c[b2 + 124 + (c[d2 + 60 >> 2] << 2) >> 2] = g2;
            else
              c[f2 + 56 >> 2] = g2;
            f2 = c[d2 + 56 >> 2] | 0;
            if (f2 | 0)
              c[f2 + 52 >> 2] = c[d2 + 52 >> 2];
            g2 = c[b2 + 136 >> 2] | 0;
            Zb[c[(c[g2 >> 2] | 0) + 16 >> 2] & 127](g2, d2, e2);
            c[5638] = (c[5638] | 0) + 1;
            rG(c[d2 + -4 >> 2] | 0);
            a[b2 + 194 >> 0] = 1;
            return;
          }
          function qd(b2, d2, e2, f2, h2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            h2 = h2 | 0;
            var j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0;
            s2 = i;
            i = i + 48 | 0;
            c[s2 + 16 >> 2] = c[e2 >> 2];
            c[s2 + 16 + 4 >> 2] = c[e2 + 4 >> 2];
            c[s2 + 16 + 8 >> 2] = c[e2 + 8 >> 2];
            c[s2 + 16 + 12 >> 2] = c[e2 + 12 >> 2];
            c[s2 + 16 + 16 >> 2] = c[f2 >> 2];
            c[s2 + 16 + 16 + 4 >> 2] = c[f2 + 4 >> 2];
            c[s2 + 16 + 16 + 8 >> 2] = c[f2 + 8 >> 2];
            c[s2 + 16 + 16 + 12 >> 2] = c[f2 + 12 >> 2];
            do
              if ((c[d2 + 60 >> 2] | 0) == 2) {
                h2 = c[d2 + 48 >> 2] | 0;
                ad(b2 + 64 | 0, h2) | 0;
                j2 = c[b2 + 68 >> 2] | 0;
                if (j2 | 0) {
                  c[5638] = (c[5638] | 0) + 1;
                  rG(c[j2 + -4 >> 2] | 0);
                }
                c[b2 + 68 >> 2] = h2;
                c[b2 + 76 >> 2] = (c[b2 + 76 >> 2] | 0) + -1;
                h2 = c[b2 + 8 >> 2] | 0;
                if (!h2) {
                  c[5637] = (c[5637] | 0) + 1;
                  h2 = qG(63) | 0;
                  if (!h2)
                    h2 = 0;
                  else {
                    c[(h2 + 4 + 15 & -16) + -4 >> 2] = h2;
                    h2 = h2 + 4 + 15 & -16;
                  }
                  j2 = h2;
                  k2 = j2 + 44 | 0;
                  do {
                    c[j2 >> 2] = 0;
                    j2 = j2 + 4 | 0;
                  } while ((j2 | 0) < (k2 | 0));
                } else
                  c[b2 + 8 >> 2] = 0;
                c[h2 + 32 >> 2] = 0;
                c[h2 + 36 >> 2] = d2;
                c[h2 + 40 >> 2] = 0;
                c[h2 >> 2] = c[s2 + 16 >> 2];
                c[h2 + 4 >> 2] = c[s2 + 16 + 4 >> 2];
                c[h2 + 8 >> 2] = c[s2 + 16 + 8 >> 2];
                c[h2 + 12 >> 2] = c[s2 + 16 + 12 >> 2];
                c[h2 + 16 >> 2] = c[s2 + 16 + 16 >> 2];
                c[h2 + 20 >> 2] = c[s2 + 16 + 20 >> 2];
                c[h2 + 24 >> 2] = c[s2 + 16 + 24 >> 2];
                c[h2 + 28 >> 2] = c[s2 + 16 + 28 >> 2];
                bd(b2 + 4 | 0, c[b2 + 4 >> 2] | 0, h2);
                c[b2 + 16 >> 2] = (c[b2 + 16 >> 2] | 0) + 1;
                c[d2 + 48 >> 2] = h2;
                k2 = 1;
              } else {
                c[b2 + 168 >> 2] = (c[b2 + 168 >> 2] | 0) + 1;
                r2 = c[d2 + 48 >> 2] | 0;
                if (((((+g[r2 >> 2] <= +g[s2 + 16 + 16 >> 2] ? +g[r2 + 16 >> 2] >= +g[s2 + 16 >> 2] : 0) ? +g[r2 + 4 >> 2] <= +g[s2 + 16 + 20 >> 2] : 0) ? +g[r2 + 20 >> 2] >= +g[s2 + 16 + 4 >> 2] : 0) ? +g[r2 + 8 >> 2] <= +g[s2 + 16 + 24 >> 2] : 0) ? +g[r2 + 24 >> 2] >= +g[s2 + 16 + 8 >> 2] : 0) {
                  l2 = +g[d2 + 16 >> 2];
                  t2 = +g[e2 >> 2] - l2;
                  m2 = +g[d2 + 20 >> 2];
                  o2 = +g[e2 + 4 >> 2] - m2;
                  n2 = +g[d2 + 24 >> 2];
                  p2 = +g[e2 + 8 >> 2] - n2;
                  u2 = +g[b2 + 140 >> 2];
                  l2 = (+g[d2 + 32 >> 2] - l2) * 0.5 * u2;
                  m2 = (+g[d2 + 36 >> 2] - m2) * 0.5 * u2;
                  n2 = u2 * ((+g[d2 + 40 >> 2] - n2) * 0.5);
                  g[s2 >> 2] = l2;
                  g[s2 + 4 >> 2] = m2;
                  g[s2 + 8 >> 2] = n2;
                  g[s2 + 12 >> 2] = 0;
                  if (t2 < 0)
                    g[s2 >> 2] = -l2;
                  if (o2 < 0)
                    g[s2 + 4 >> 2] = -m2;
                  if (p2 < 0)
                    g[s2 + 8 >> 2] = -n2;
                  if (cd(b2 + 4 | 0, r2, s2 + 16 | 0, s2, 0.05000000074505806) | 0) {
                    c[b2 + 172 >> 2] = (c[b2 + 172 >> 2] | 0) + 1;
                    h2 = 1;
                  } else
                    h2 = 0;
                  k2 = h2;
                  break;
                }
                h2 = ad(b2 + 4 | 0, r2) | 0;
                a:
                  do
                    if (h2) {
                      k2 = c[b2 + 12 >> 2] | 0;
                      if ((k2 | 0) <= -1) {
                        h2 = c[b2 + 4 >> 2] | 0;
                        break;
                      }
                      if ((k2 | 0) > 0) {
                        q2 = 0;
                        while (1) {
                          j2 = c[h2 + 32 >> 2] | 0;
                          q2 = q2 + 1 | 0;
                          if (!j2)
                            break a;
                          if ((q2 | 0) >= (k2 | 0)) {
                            h2 = j2;
                            break;
                          } else
                            h2 = j2;
                        }
                      }
                    } else
                      h2 = 0;
                  while (0);
                c[r2 >> 2] = c[s2 + 16 >> 2];
                c[r2 + 4 >> 2] = c[s2 + 16 + 4 >> 2];
                c[r2 + 8 >> 2] = c[s2 + 16 + 8 >> 2];
                c[r2 + 12 >> 2] = c[s2 + 16 + 12 >> 2];
                c[r2 + 16 >> 2] = c[s2 + 16 + 16 >> 2];
                c[r2 + 20 >> 2] = c[s2 + 16 + 20 >> 2];
                c[r2 + 24 >> 2] = c[s2 + 16 + 24 >> 2];
                c[r2 + 28 >> 2] = c[s2 + 16 + 28 >> 2];
                bd(b2 + 4 | 0, h2, r2);
                c[b2 + 172 >> 2] = (c[b2 + 172 >> 2] | 0) + 1;
                k2 = 1;
              }
            while (0);
            h2 = c[d2 + 52 >> 2] | 0;
            j2 = c[d2 + 56 >> 2] | 0;
            if (!h2)
              c[b2 + 124 + (c[d2 + 60 >> 2] << 2) >> 2] = j2;
            else
              c[h2 + 56 >> 2] = j2;
            h2 = c[d2 + 56 >> 2] | 0;
            if (h2 | 0)
              c[h2 + 52 >> 2] = c[d2 + 52 >> 2];
            c[d2 + 16 >> 2] = c[e2 >> 2];
            c[d2 + 16 + 4 >> 2] = c[e2 + 4 >> 2];
            c[d2 + 16 + 8 >> 2] = c[e2 + 8 >> 2];
            c[d2 + 16 + 12 >> 2] = c[e2 + 12 >> 2];
            c[d2 + 32 >> 2] = c[f2 >> 2];
            c[d2 + 32 + 4 >> 2] = c[f2 + 4 >> 2];
            c[d2 + 32 + 8 >> 2] = c[f2 + 8 >> 2];
            c[d2 + 32 + 12 >> 2] = c[f2 + 12 >> 2];
            h2 = c[b2 + 144 >> 2] | 0;
            c[d2 + 60 >> 2] = h2;
            c[d2 + 52 >> 2] = 0;
            c[d2 + 56 >> 2] = c[b2 + 124 + (h2 << 2) >> 2];
            j2 = c[b2 + 124 + (h2 << 2) >> 2] | 0;
            if (j2 | 0)
              c[j2 + 52 >> 2] = d2;
            c[b2 + 124 + (h2 << 2) >> 2] = d2;
            if (!k2) {
              i = s2;
              return;
            }
            a[b2 + 194 >> 0] = 1;
            if (a[b2 + 193 >> 0] | 0) {
              i = s2;
              return;
            }
            c[s2 >> 2] = 2756;
            c[s2 + 4 >> 2] = b2;
            rd(b2 + 64 | 0, c[b2 + 64 >> 2] | 0, c[d2 + 48 >> 2] | 0, s2);
            rd(b2 + 4 | 0, c[b2 + 4 >> 2] | 0, c[d2 + 48 >> 2] | 0, s2);
            i = s2;
            return;
          }
          function rd(b2, d2, e2, f2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            var h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0;
            if (!((d2 | 0) != 0 & (e2 | 0) != 0))
              return;
            if ((c[b2 + 24 >> 2] | 0) < 128 ? (c[b2 + 28 >> 2] | 0) < 128 : 0) {
              c[5637] = (c[5637] | 0) + 1;
              h2 = qG(1043) | 0;
              if (!h2)
                j2 = 0;
              else {
                c[(h2 + 4 + 15 & -16) + -4 >> 2] = h2;
                j2 = h2 + 4 + 15 & -16;
              }
              h2 = c[b2 + 24 >> 2] | 0;
              if ((h2 | 0) > 0) {
                i2 = 0;
                do {
                  l2 = (c[b2 + 32 >> 2] | 0) + (i2 << 3) | 0;
                  m2 = c[l2 + 4 >> 2] | 0;
                  n2 = j2 + (i2 << 3) | 0;
                  c[n2 >> 2] = c[l2 >> 2];
                  c[n2 + 4 >> 2] = m2;
                  i2 = i2 + 1 | 0;
                } while ((i2 | 0) != (h2 | 0));
              }
              h2 = c[b2 + 32 >> 2] | 0;
              if (h2 | 0) {
                if (a[b2 + 36 >> 0] | 0) {
                  c[5638] = (c[5638] | 0) + 1;
                  rG(c[h2 + -4 >> 2] | 0);
                }
                c[b2 + 32 >> 2] = 0;
              }
              a[b2 + 36 >> 0] = 1;
              c[b2 + 32 >> 2] = j2;
              c[b2 + 28 >> 2] = 128;
            }
            c[b2 + 24 >> 2] = 128;
            n2 = c[b2 + 32 >> 2] | 0;
            c[n2 >> 2] = d2;
            c[n2 + 4 >> 2] = e2;
            n2 = 1;
            j2 = 124;
            while (1) {
              h2 = n2 + -1 | 0;
              i2 = c[b2 + 32 >> 2] | 0;
              l2 = c[i2 + (h2 << 3) >> 2] | 0;
              m2 = c[i2 + (h2 << 3) + 4 >> 2] | 0;
              if ((h2 | 0) > (j2 | 0)) {
                e2 = c[b2 + 24 >> 2] | 0;
                if ((e2 | 0) < (e2 << 1 | 0) ? (c[b2 + 28 >> 2] | 0) < (e2 << 1 | 0) : 0) {
                  if (e2) {
                    c[5637] = (c[5637] | 0) + 1;
                    i2 = qG((e2 << 4 | 3) + 16 | 0) | 0;
                    if (!i2)
                      i2 = 0;
                    else {
                      c[(i2 + 4 + 15 & -16) + -4 >> 2] = i2;
                      i2 = i2 + 4 + 15 & -16;
                    }
                    j2 = c[b2 + 24 >> 2] | 0;
                    if ((j2 | 0) > 0) {
                      d2 = 0;
                      do {
                        p2 = (c[b2 + 32 >> 2] | 0) + (d2 << 3) | 0;
                        o2 = c[p2 + 4 >> 2] | 0;
                        k2 = i2 + (d2 << 3) | 0;
                        c[k2 >> 2] = c[p2 >> 2];
                        c[k2 + 4 >> 2] = o2;
                        d2 = d2 + 1 | 0;
                      } while ((d2 | 0) != (j2 | 0));
                    }
                  } else
                    i2 = 0;
                  j2 = c[b2 + 32 >> 2] | 0;
                  if (j2 | 0) {
                    if (a[b2 + 36 >> 0] | 0) {
                      c[5638] = (c[5638] | 0) + 1;
                      rG(c[j2 + -4 >> 2] | 0);
                    }
                    c[b2 + 32 >> 2] = 0;
                  }
                  a[b2 + 36 >> 0] = 1;
                  c[b2 + 32 >> 2] = i2;
                  c[b2 + 28 >> 2] = e2 << 1;
                }
                c[b2 + 24 >> 2] = e2 << 1;
                j2 = (e2 << 1) + -4 | 0;
              }
              do
                if ((l2 | 0) == (m2 | 0)) {
                  if (c[l2 + 40 >> 2] | 0) {
                    p2 = c[l2 + 36 >> 2] | 0;
                    c[i2 + (h2 << 3) >> 2] = p2;
                    c[i2 + (h2 << 3) + 4 >> 2] = p2;
                    h2 = n2 + 1 | 0;
                    p2 = c[b2 + 32 >> 2] | 0;
                    o2 = c[l2 + 40 >> 2] | 0;
                    c[p2 + (n2 << 3) >> 2] = o2;
                    c[p2 + (n2 << 3) + 4 >> 2] = o2;
                    p2 = c[b2 + 32 >> 2] | 0;
                    o2 = c[l2 + 40 >> 2] | 0;
                    c[p2 + (h2 << 3) >> 2] = c[l2 + 36 >> 2];
                    c[p2 + (h2 << 3) + 4 >> 2] = o2;
                    h2 = n2 + 2 | 0;
                  }
                } else if (((((+g[l2 >> 2] <= +g[m2 + 16 >> 2] ? +g[l2 + 16 >> 2] >= +g[m2 >> 2] : 0) ? +g[l2 + 4 >> 2] <= +g[m2 + 20 >> 2] : 0) ? +g[l2 + 20 >> 2] >= +g[m2 + 4 >> 2] : 0) ? +g[l2 + 8 >> 2] <= +g[m2 + 24 >> 2] : 0) ? +g[l2 + 24 >> 2] >= +g[m2 + 8 >> 2] : 0) {
                  d2 = (c[m2 + 40 >> 2] | 0) != 0;
                  if (!(c[l2 + 40 >> 2] | 0))
                    if (d2) {
                      p2 = c[m2 + 36 >> 2] | 0;
                      c[i2 + (h2 << 3) >> 2] = l2;
                      c[i2 + (h2 << 3) + 4 >> 2] = p2;
                      h2 = c[b2 + 32 >> 2] | 0;
                      p2 = c[m2 + 40 >> 2] | 0;
                      c[h2 + (n2 << 3) >> 2] = l2;
                      c[h2 + (n2 << 3) + 4 >> 2] = p2;
                      h2 = n2 + 1 | 0;
                      break;
                    } else {
                      Zb[c[(c[f2 >> 2] | 0) + 8 >> 2] & 127](f2, l2, m2);
                      break;
                    }
                  else {
                    e2 = i2 + (h2 << 3) | 0;
                    k2 = c[l2 + 36 >> 2] | 0;
                    if (d2) {
                      p2 = c[m2 + 36 >> 2] | 0;
                      c[e2 >> 2] = k2;
                      c[i2 + (h2 << 3) + 4 >> 2] = p2;
                      p2 = n2 + 1 | 0;
                      h2 = c[b2 + 32 >> 2] | 0;
                      o2 = c[m2 + 36 >> 2] | 0;
                      c[h2 + (n2 << 3) >> 2] = c[l2 + 40 >> 2];
                      c[h2 + (n2 << 3) + 4 >> 2] = o2;
                      h2 = n2 + 2 | 0;
                      o2 = c[b2 + 32 >> 2] | 0;
                      k2 = c[m2 + 40 >> 2] | 0;
                      c[o2 + (p2 << 3) >> 2] = c[l2 + 36 >> 2];
                      c[o2 + (p2 << 3) + 4 >> 2] = k2;
                      p2 = c[b2 + 32 >> 2] | 0;
                      o2 = c[m2 + 40 >> 2] | 0;
                      c[p2 + (h2 << 3) >> 2] = c[l2 + 40 >> 2];
                      c[p2 + (h2 << 3) + 4 >> 2] = o2;
                      h2 = n2 + 3 | 0;
                      break;
                    } else {
                      c[e2 >> 2] = k2;
                      c[i2 + (h2 << 3) + 4 >> 2] = m2;
                      h2 = c[b2 + 32 >> 2] | 0;
                      c[h2 + (n2 << 3) >> 2] = c[l2 + 40 >> 2];
                      c[h2 + (n2 << 3) + 4 >> 2] = m2;
                      h2 = n2 + 1 | 0;
                      break;
                    }
                  }
                }
              while (0);
              if (!h2)
                break;
              else
                n2 = h2;
            }
            return;
          }
          function sd(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            c[d2 >> 2] = c[b2 + 16 >> 2];
            c[d2 + 4 >> 2] = c[b2 + 16 + 4 >> 2];
            c[d2 + 8 >> 2] = c[b2 + 16 + 8 >> 2];
            c[d2 + 12 >> 2] = c[b2 + 16 + 12 >> 2];
            c[e2 >> 2] = c[b2 + 32 >> 2];
            c[e2 + 4 >> 2] = c[b2 + 32 + 4 >> 2];
            c[e2 + 8 >> 2] = c[b2 + 32 + 8 >> 2];
            c[e2 + 12 >> 2] = c[b2 + 32 + 12 >> 2];
            return;
          }
          function td(a2, b2, d2, e2, f2, h2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            h2 = h2 | 0;
            d2 = i;
            i = i + 16 | 0;
            c[d2 >> 2] = 2792;
            c[d2 + 4 >> 2] = e2;
            wd(a2 + 4 | 0, c[a2 + 4 >> 2] | 0, b2, e2 + 4 | 0, e2 + 20 | 0, +g[e2 + 32 >> 2], f2, h2, d2);
            wd(a2 + 64 | 0, c[a2 + 64 >> 2] | 0, b2, e2 + 4 | 0, e2 + 20 | 0, +g[e2 + 32 >> 2], f2, h2, d2);
            i = d2;
            return;
          }
          function ud(a2) {
            a2 = a2 | 0;
            rG(a2);
            return;
          }
          function vd(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            a2 = c[a2 + 4 >> 2] | 0;
            Ob[c[(c[a2 >> 2] | 0) + 8 >> 2] & 31](a2, c[b2 + 36 >> 2] | 0) | 0;
            return;
          }
          function wd(b2, d2, e2, f2, h2, j2, k2, l2, m2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            h2 = h2 | 0;
            j2 = +j2;
            k2 = k2 | 0;
            l2 = l2 | 0;
            m2 = m2 | 0;
            var n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0;
            D2 = i;
            i = i + 32 | 0;
            if (!d2) {
              i = D2;
              return;
            }
            q2 = c[b2 + 44 >> 2] | 0;
            if ((q2 | 0) < 128) {
              if ((c[b2 + 48 >> 2] | 0) < 128) {
                c[5637] = (c[5637] | 0) + 1;
                n2 = qG(531) | 0;
                if (!n2)
                  p2 = 0;
                else {
                  c[(n2 + 4 + 15 & -16) + -4 >> 2] = n2;
                  p2 = n2 + 4 + 15 & -16;
                }
                n2 = c[b2 + 44 >> 2] | 0;
                if ((n2 | 0) > 0) {
                  o2 = 0;
                  do {
                    c[p2 + (o2 << 2) >> 2] = c[(c[b2 + 52 >> 2] | 0) + (o2 << 2) >> 2];
                    o2 = o2 + 1 | 0;
                  } while ((o2 | 0) != (n2 | 0));
                }
                n2 = c[b2 + 52 >> 2] | 0;
                if (n2 | 0) {
                  if (a[b2 + 56 >> 0] | 0) {
                    c[5638] = (c[5638] | 0) + 1;
                    rG(c[n2 + -4 >> 2] | 0);
                  }
                  c[b2 + 52 >> 2] = 0;
                }
                a[b2 + 56 >> 0] = 1;
                c[b2 + 52 >> 2] = p2;
                c[b2 + 48 >> 2] = 128;
                o2 = b2 + 52 | 0;
              } else
                o2 = b2 + 52 | 0;
              n2 = q2;
              do {
                c[(c[o2 >> 2] | 0) + (n2 << 2) >> 2] = 0;
                n2 = n2 + 1 | 0;
              } while ((n2 | 0) != 128);
              y2 = b2 + 48 | 0;
            } else {
              o2 = b2 + 52 | 0;
              y2 = b2 + 48 | 0;
            }
            c[b2 + 44 >> 2] = 128;
            c[c[o2 >> 2] >> 2] = d2;
            x2 = 1;
            n2 = 126;
            while (1) {
              p2 = x2 + -1 | 0;
              q2 = c[o2 >> 2] | 0;
              w2 = c[q2 + (p2 << 2) >> 2] | 0;
              t2 = +g[w2 + 4 >> 2] - +g[l2 + 4 >> 2];
              r2 = +g[w2 + 8 >> 2] - +g[l2 + 8 >> 2];
              g[D2 >> 2] = +g[w2 >> 2] - +g[l2 >> 2];
              g[D2 + 4 >> 2] = t2;
              g[D2 + 8 >> 2] = r2;
              g[D2 + 12 >> 2] = 0;
              r2 = +g[w2 + 20 >> 2] - +g[k2 + 4 >> 2];
              t2 = +g[w2 + 24 >> 2] - +g[k2 + 8 >> 2];
              g[D2 + 16 >> 2] = +g[w2 + 16 >> 2] - +g[k2 >> 2];
              g[D2 + 20 >> 2] = r2;
              g[D2 + 24 >> 2] = t2;
              g[D2 + 28 >> 2] = 0;
              v2 = c[h2 >> 2] | 0;
              t2 = +g[e2 >> 2];
              r2 = +g[f2 >> 2];
              s2 = (+g[D2 + (v2 << 4) >> 2] - t2) * r2;
              t2 = r2 * (+g[D2 + (1 - v2 << 4) >> 2] - t2);
              v2 = c[h2 + 4 >> 2] | 0;
              r2 = +g[e2 + 4 >> 2];
              E2 = +g[f2 + 4 >> 2];
              u2 = (+g[D2 + (v2 << 4) + 4 >> 2] - r2) * E2;
              r2 = E2 * (+g[D2 + (1 - v2 << 4) + 4 >> 2] - r2);
              do
                if ((!(u2 > t2 | s2 > r2) ? (z2 = u2 > s2 ? u2 : s2, C2 = r2 < t2 ? r2 : t2, v2 = c[h2 + 8 >> 2] | 0, B2 = +g[e2 + 8 >> 2], E2 = +g[f2 + 8 >> 2], A2 = (+g[D2 + (v2 << 4) + 8 >> 2] - B2) * E2, B2 = E2 * (+g[D2 + (1 - v2 << 4) + 8 >> 2] - B2), !(A2 > C2 | z2 > B2)) : 0) ? (B2 < C2 ? B2 : C2) > 0 ? (A2 > z2 ? A2 : z2) < j2 : 0 : 0) {
                  if (!(c[w2 + 40 >> 2] | 0)) {
                    tb[c[(c[m2 >> 2] | 0) + 12 >> 2] & 127](m2, w2);
                    break;
                  }
                  if ((p2 | 0) > (n2 | 0)) {
                    v2 = c[b2 + 44 >> 2] | 0;
                    if ((v2 | 0) < (v2 << 1 | 0)) {
                      if ((c[y2 >> 2] | 0) < (v2 << 1 | 0)) {
                        if (v2) {
                          c[5637] = (c[5637] | 0) + 1;
                          n2 = qG((v2 << 3 | 3) + 16 | 0) | 0;
                          if (!n2)
                            n2 = 0;
                          else {
                            c[(n2 + 4 + 15 & -16) + -4 >> 2] = n2;
                            n2 = n2 + 4 + 15 & -16;
                          }
                          q2 = c[b2 + 44 >> 2] | 0;
                          if ((q2 | 0) > 0) {
                            d2 = 0;
                            do {
                              c[n2 + (d2 << 2) >> 2] = c[(c[o2 >> 2] | 0) + (d2 << 2) >> 2];
                              d2 = d2 + 1 | 0;
                            } while ((d2 | 0) != (q2 | 0));
                          }
                        } else
                          n2 = 0;
                        q2 = c[o2 >> 2] | 0;
                        if (q2 | 0) {
                          if (a[b2 + 56 >> 0] | 0) {
                            c[5638] = (c[5638] | 0) + 1;
                            rG(c[q2 + -4 >> 2] | 0);
                          }
                          c[o2 >> 2] = 0;
                        }
                        a[b2 + 56 >> 0] = 1;
                        c[o2 >> 2] = n2;
                        c[y2 >> 2] = v2 << 1;
                        q2 = v2;
                      } else {
                        n2 = q2;
                        q2 = v2;
                      }
                      do {
                        c[n2 + (q2 << 2) >> 2] = 0;
                        q2 = q2 + 1 | 0;
                        n2 = c[o2 >> 2] | 0;
                      } while ((q2 | 0) != (v2 << 1 | 0));
                    } else
                      n2 = q2;
                    c[b2 + 44 >> 2] = v2 << 1;
                    q2 = n2;
                    n2 = (v2 << 1) + -2 | 0;
                  }
                  c[q2 + (p2 << 2) >> 2] = c[w2 + 36 >> 2];
                  c[(c[o2 >> 2] | 0) + (x2 << 2) >> 2] = c[w2 + 40 >> 2];
                  p2 = x2 + 1 | 0;
                }
              while (0);
              if (!p2)
                break;
              else
                x2 = p2;
            }
            i = D2;
            return;
          }
          function xd(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0;
            f2 = i;
            i = i + 48 | 0;
            c[f2 + 32 >> 2] = 2828;
            c[f2 + 32 + 4 >> 2] = e2;
            c[f2 >> 2] = c[b2 >> 2];
            c[f2 + 4 >> 2] = c[b2 + 4 >> 2];
            c[f2 + 8 >> 2] = c[b2 + 8 >> 2];
            c[f2 + 12 >> 2] = c[b2 + 12 >> 2];
            c[f2 + 16 >> 2] = c[d2 >> 2];
            c[f2 + 16 + 4 >> 2] = c[d2 + 4 >> 2];
            c[f2 + 16 + 8 >> 2] = c[d2 + 8 >> 2];
            c[f2 + 16 + 12 >> 2] = c[d2 + 12 >> 2];
            od(c[a2 + 4 >> 2] | 0, f2, f2 + 32 | 0);
            od(c[a2 + 64 >> 2] | 0, f2, f2 + 32 | 0);
            i = f2;
            return;
          }
          function yd(a2) {
            a2 = a2 | 0;
            rG(a2);
            return;
          }
          function zd(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            a2 = c[a2 + 4 >> 2] | 0;
            Ob[c[(c[a2 >> 2] | 0) + 8 >> 2] & 31](a2, c[b2 + 36 >> 2] | 0) | 0;
            return;
          }
          function Ad(b2, d2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0;
            r2 = i;
            i = i + 32 | 0;
            $c(b2 + 4 | 0, ((_(c[b2 + 152 >> 2] | 0, c[b2 + 16 >> 2] | 0) | 0) / 100 | 0) + 1 | 0);
            if (c[b2 + 164 >> 2] | 0) {
              p2 = ((_(c[b2 + 148 >> 2] | 0, c[b2 + 76 >> 2] | 0) | 0) / 100 | 0) + 1 | 0;
              $c(b2 + 64 | 0, p2);
              p2 = (c[b2 + 164 >> 2] | 0) - p2 | 0;
              c[b2 + 164 >> 2] = (p2 | 0) < 0 ? 0 : p2;
            }
            e2 = ((c[b2 + 144 >> 2] | 0) + 1 | 0) % 2 | 0;
            c[b2 + 144 >> 2] = e2;
            e2 = c[b2 + 124 + (e2 << 2) >> 2] | 0;
            if (e2 | 0) {
              do {
                l2 = e2 + 56 | 0;
                m2 = e2;
                e2 = c[l2 >> 2] | 0;
                k2 = c[m2 + 52 >> 2] | 0;
                j2 = e2;
                if (!k2)
                  c[b2 + 124 + (c[m2 + 60 >> 2] << 2) >> 2] = j2;
                else
                  c[k2 + 56 >> 2] = j2;
                j2 = c[l2 >> 2] | 0;
                if (j2 | 0)
                  c[j2 + 52 >> 2] = c[m2 + 52 >> 2];
                c[m2 + 52 >> 2] = 0;
                c[l2 >> 2] = c[b2 + 132 >> 2];
                j2 = c[b2 + 132 >> 2] | 0;
                if (j2 | 0)
                  c[j2 + 52 >> 2] = m2;
                c[b2 + 132 >> 2] = m2;
                j2 = c[m2 + 48 >> 2] | 0;
                ad(b2 + 4 | 0, j2) | 0;
                k2 = c[b2 + 8 >> 2] | 0;
                if (k2 | 0) {
                  c[5638] = (c[5638] | 0) + 1;
                  rG(c[k2 + -4 >> 2] | 0);
                }
                c[b2 + 8 >> 2] = j2;
                c[b2 + 16 >> 2] = (c[b2 + 16 >> 2] | 0) + -1;
                c[r2 >> 2] = c[m2 + 16 >> 2];
                c[r2 + 4 >> 2] = c[m2 + 16 + 4 >> 2];
                c[r2 + 8 >> 2] = c[m2 + 16 + 8 >> 2];
                c[r2 + 12 >> 2] = c[m2 + 16 + 12 >> 2];
                c[r2 + 16 >> 2] = c[m2 + 32 >> 2];
                c[r2 + 16 + 4 >> 2] = c[m2 + 32 + 4 >> 2];
                c[r2 + 16 + 8 >> 2] = c[m2 + 32 + 8 >> 2];
                c[r2 + 16 + 12 >> 2] = c[m2 + 32 + 12 >> 2];
                j2 = c[b2 + 68 >> 2] | 0;
                if (!j2) {
                  c[5637] = (c[5637] | 0) + 1;
                  j2 = qG(63) | 0;
                  if (!j2)
                    j2 = 0;
                  else {
                    c[(j2 + 4 + 15 & -16) + -4 >> 2] = j2;
                    j2 = j2 + 4 + 15 & -16;
                  }
                  k2 = j2;
                  l2 = k2 + 44 | 0;
                  do {
                    c[k2 >> 2] = 0;
                    k2 = k2 + 4 | 0;
                  } while ((k2 | 0) < (l2 | 0));
                } else
                  c[b2 + 68 >> 2] = 0;
                c[j2 + 32 >> 2] = 0;
                c[j2 + 36 >> 2] = m2;
                c[j2 + 40 >> 2] = 0;
                c[j2 >> 2] = c[r2 >> 2];
                c[j2 + 4 >> 2] = c[r2 + 4 >> 2];
                c[j2 + 8 >> 2] = c[r2 + 8 >> 2];
                c[j2 + 12 >> 2] = c[r2 + 12 >> 2];
                c[j2 + 16 >> 2] = c[r2 + 16 >> 2];
                c[j2 + 20 >> 2] = c[r2 + 20 >> 2];
                c[j2 + 24 >> 2] = c[r2 + 24 >> 2];
                c[j2 + 28 >> 2] = c[r2 + 28 >> 2];
                bd(b2 + 64 | 0, c[b2 + 64 >> 2] | 0, j2);
                k2 = (c[b2 + 76 >> 2] | 0) + 1 | 0;
                c[b2 + 76 >> 2] = k2;
                c[m2 + 48 >> 2] = j2;
                c[m2 + 60 >> 2] = 2;
              } while ((e2 | 0) != 0);
              c[b2 + 164 >> 2] = k2;
              a[b2 + 194 >> 0] = 1;
            }
            c[r2 >> 2] = 2756;
            c[r2 + 4 >> 2] = b2;
            if (a[b2 + 193 >> 0] | 0 ? (rd(b2 + 4 | 0, c[b2 + 4 >> 2] | 0, c[b2 + 64 >> 2] | 0, r2), a[b2 + 193 >> 0] | 0) : 0) {
              p2 = c[b2 + 4 >> 2] | 0;
              rd(b2 + 4 | 0, p2, p2, r2);
            }
            if (a[b2 + 194 >> 0] | 0 ? (n2 = c[b2 + 136 >> 2] | 0, n2 = vb[c[(c[n2 >> 2] | 0) + 28 >> 2] & 127](n2) | 0, f2 = c[n2 + 4 >> 2] | 0, (f2 | 0) > 0) : 0) {
              e2 = (_(c[b2 + 156 >> 2] | 0, f2) | 0) / 100 | 0;
              p2 = c[b2 + 160 >> 2] | 0;
              e2 = (p2 | 0) > (e2 | 0) ? p2 : e2;
              e2 = (f2 | 0) < (e2 | 0) ? f2 : e2;
              if ((e2 | 0) > 0) {
                j2 = 0;
                do {
                  l2 = ((c[b2 + 184 >> 2] | 0) + j2 | 0) % (f2 | 0) | 0;
                  o2 = c[n2 + 12 >> 2] | 0;
                  k2 = c[o2 + (l2 << 4) >> 2] | 0;
                  l2 = c[o2 + (l2 << 4) + 4 >> 2] | 0;
                  o2 = c[k2 + 48 >> 2] | 0;
                  p2 = c[l2 + 48 >> 2] | 0;
                  if (!(((((+g[o2 >> 2] <= +g[p2 + 16 >> 2] ? +g[o2 + 16 >> 2] >= +g[p2 >> 2] : 0) ? +g[o2 + 4 >> 2] <= +g[p2 + 20 >> 2] : 0) ? +g[o2 + 20 >> 2] >= +g[p2 + 4 >> 2] : 0) ? +g[o2 + 8 >> 2] <= +g[p2 + 24 >> 2] : 0) ? +g[o2 + 24 >> 2] >= +g[p2 + 8 >> 2] : 0)) {
                    f2 = c[b2 + 136 >> 2] | 0;
                    zb[c[(c[f2 >> 2] | 0) + 12 >> 2] & 31](f2, k2, l2, d2) | 0;
                    f2 = c[n2 + 4 >> 2] | 0;
                    j2 = j2 + -1 | 0;
                    e2 = e2 + -1 | 0;
                  }
                  j2 = j2 + 1 | 0;
                } while ((j2 | 0) < (e2 | 0));
                if ((f2 | 0) > 0)
                  q2 = 37;
                else
                  e2 = 0;
              } else
                q2 = 37;
              if ((q2 | 0) == 37)
                e2 = ((c[b2 + 184 >> 2] | 0) + e2 | 0) % (f2 | 0) | 0;
              c[b2 + 184 >> 2] = e2;
            }
            c[b2 + 180 >> 2] = (c[b2 + 180 >> 2] | 0) + 1;
            c[b2 + 160 >> 2] = 1;
            a[b2 + 194 >> 0] = 0;
            f2 = c[b2 + 168 >> 2] | 0;
            e2 = c[b2 + 172 >> 2] | 0;
            if (!f2)
              h2 = 0;
            else
              h2 = +(e2 >>> 0) / +(f2 >>> 0);
            g[b2 + 176 >> 2] = h2;
            c[b2 + 172 >> 2] = e2 >>> 1;
            c[b2 + 168 >> 2] = f2 >>> 1;
            p2 = c[b2 + 136 >> 2] | 0;
            if (!(vb[c[(c[p2 >> 2] | 0) + 56 >> 2] & 127](p2) | 0)) {
              i = r2;
              return;
            }
            p2 = c[b2 + 136 >> 2] | 0;
            p2 = vb[c[(c[p2 >> 2] | 0) + 28 >> 2] & 127](p2) | 0;
            e2 = c[p2 + 4 >> 2] | 0;
            if ((e2 | 0) > 1) {
              Xc(p2, 0, e2 + -1 | 0);
              j2 = 0;
              k2 = 0;
              l2 = 0;
              f2 = 0;
              q2 = 44;
            } else {
              j2 = 0;
              o2 = 0;
              n2 = 0;
              f2 = 0;
            }
            while (1) {
              if ((q2 | 0) == 44) {
                q2 = 0;
                e2 = c[p2 + 4 >> 2] | 0;
                o2 = k2;
                n2 = l2;
              }
              if ((j2 | 0) >= (e2 | 0))
                break;
              m2 = c[p2 + 12 >> 2] | 0;
              k2 = m2 + (j2 << 4) | 0;
              l2 = c[k2 >> 2] | 0;
              m2 = m2 + (j2 << 4) + 4 | 0;
              e2 = c[m2 >> 2] | 0;
              if (!((l2 | 0) == (n2 | 0) & (e2 | 0) == (f2 | 0))) {
                f2 = c[l2 + 48 >> 2] | 0;
                n2 = c[e2 + 48 >> 2] | 0;
                if (((((+g[f2 >> 2] <= +g[n2 + 16 >> 2] ? +g[f2 + 16 >> 2] >= +g[n2 >> 2] : 0) ? +g[f2 + 4 >> 2] <= +g[n2 + 20 >> 2] : 0) ? +g[f2 + 20 >> 2] >= +g[n2 + 4 >> 2] : 0) ? +g[f2 + 8 >> 2] <= +g[n2 + 24 >> 2] : 0) ? +g[f2 + 24 >> 2] >= +g[n2 + 8 >> 2] : 0) {
                  f2 = e2;
                  e2 = o2;
                } else
                  q2 = 53;
              } else {
                e2 = f2;
                q2 = 53;
              }
              if ((q2 | 0) == 53) {
                f2 = c[b2 + 136 >> 2] | 0;
                Zb[c[(c[f2 >> 2] | 0) + 32 >> 2] & 127](f2, k2, d2);
                c[k2 >> 2] = 0;
                c[m2 >> 2] = 0;
                f2 = e2;
                e2 = o2 + 1 | 0;
              }
              j2 = j2 + 1 | 0;
              k2 = e2;
              q2 = 44;
            }
            if ((e2 | 0) > 1) {
              Xc(p2, 0, e2 + -1 | 0);
              k2 = c[p2 + 4 >> 2] | 0;
            } else
              k2 = e2;
            l2 = k2 - o2 | 0;
            if ((o2 | 0) < 0) {
              if ((c[p2 + 8 >> 2] | 0) < (l2 | 0)) {
                if ((k2 | 0) != (o2 | 0)) {
                  c[5637] = (c[5637] | 0) + 1;
                  e2 = qG((l2 << 4 | 3) + 16 | 0) | 0;
                  if (!e2)
                    e2 = 0;
                  else {
                    c[(e2 + 4 + 15 & -16) + -4 >> 2] = e2;
                    e2 = e2 + 4 + 15 & -16;
                  }
                  f2 = c[p2 + 4 >> 2] | 0;
                  if ((f2 | 0) > 0) {
                    j2 = 0;
                    do {
                      q2 = c[p2 + 12 >> 2] | 0;
                      c[e2 + (j2 << 4) >> 2] = c[q2 + (j2 << 4) >> 2];
                      c[e2 + (j2 << 4) + 4 >> 2] = c[q2 + (j2 << 4) + 4 >> 2];
                      c[e2 + (j2 << 4) + 8 >> 2] = c[q2 + (j2 << 4) + 8 >> 2];
                      c[e2 + (j2 << 4) + 12 >> 2] = c[q2 + (j2 << 4) + 12 >> 2];
                      j2 = j2 + 1 | 0;
                    } while ((j2 | 0) != (f2 | 0));
                    f2 = p2 + 12 | 0;
                  } else
                    f2 = p2 + 12 | 0;
                } else {
                  e2 = 0;
                  f2 = p2 + 12 | 0;
                }
                j2 = c[f2 >> 2] | 0;
                if (j2 | 0) {
                  if (a[p2 + 16 >> 0] | 0) {
                    c[5638] = (c[5638] | 0) + 1;
                    rG(c[j2 + -4 >> 2] | 0);
                  }
                  c[f2 >> 2] = 0;
                }
                a[p2 + 16 >> 0] = 1;
                c[f2 >> 2] = e2;
                c[p2 + 8 >> 2] = l2;
              } else
                f2 = p2 + 12 | 0;
              e2 = k2;
              do {
                q2 = (c[f2 >> 2] | 0) + (e2 << 4) | 0;
                e2 = e2 + 1 | 0;
                c[q2 >> 2] = 0;
                c[q2 + 4 >> 2] = 0;
                c[q2 + 8 >> 2] = 0;
                c[q2 + 12 >> 2] = 0;
              } while ((e2 | 0) != (l2 | 0));
            }
            c[p2 + 4 >> 2] = l2;
            i = r2;
            return;
          }
          function Bd(a2) {
            a2 = a2 | 0;
            return c[a2 + 136 >> 2] | 0;
          }
          function Cd(a2) {
            a2 = a2 | 0;
            return c[a2 + 136 >> 2] | 0;
          }
          function Dd(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0;
            m2 = c[a2 + 4 >> 2] | 0;
            a2 = c[a2 + 64 >> 2] | 0;
            do
              if (!m2)
                if (!a2) {
                  e2 = 0;
                  n2 = 0;
                  j2 = 0;
                  l2 = 0;
                  h2 = 0;
                  k2 = 0;
                  i2 = 0;
                  f2 = 0;
                } else {
                  e2 = +g[a2 >> 2];
                  n2 = +g[a2 + 12 >> 2];
                  j2 = +g[a2 + 16 >> 2];
                  l2 = +g[a2 + 20 >> 2];
                  h2 = +g[a2 + 24 >> 2];
                  k2 = +g[a2 + 28 >> 2];
                  i2 = +g[a2 + 4 >> 2];
                  f2 = +g[a2 + 8 >> 2];
                }
              else {
                e2 = +g[m2 >> 2];
                if (!a2) {
                  n2 = +g[m2 + 12 >> 2];
                  j2 = +g[m2 + 16 >> 2];
                  l2 = +g[m2 + 20 >> 2];
                  h2 = +g[m2 + 24 >> 2];
                  k2 = +g[m2 + 28 >> 2];
                  i2 = +g[m2 + 4 >> 2];
                  f2 = +g[m2 + 8 >> 2];
                  break;
                }
                k2 = +g[a2 >> 2];
                e2 = e2 < k2 ? e2 : k2;
                k2 = +g[m2 + 16 >> 2];
                j2 = +g[a2 + 16 >> 2];
                j2 = k2 > j2 ? k2 : j2;
                k2 = +g[m2 + 4 >> 2];
                i2 = +g[a2 + 4 >> 2];
                i2 = k2 < i2 ? k2 : i2;
                k2 = +g[m2 + 20 >> 2];
                l2 = +g[a2 + 20 >> 2];
                l2 = k2 > l2 ? k2 : l2;
                k2 = +g[m2 + 8 >> 2];
                f2 = +g[a2 + 8 >> 2];
                f2 = k2 < f2 ? k2 : f2;
                k2 = +g[m2 + 24 >> 2];
                h2 = +g[a2 + 24 >> 2];
                if (k2 > h2) {
                  n2 = 0;
                  h2 = k2;
                  k2 = 0;
                } else {
                  n2 = 0;
                  k2 = 0;
                }
              }
            while (0);
            g[b2 >> 2] = e2;
            g[b2 + 4 >> 2] = i2;
            g[b2 + 8 >> 2] = f2;
            g[b2 + 12 >> 2] = n2;
            g[d2 >> 2] = j2;
            g[d2 + 4 >> 2] = l2;
            g[d2 + 8 >> 2] = h2;
            g[d2 + 12 >> 2] = k2;
            return;
          }
          function Ed(b2, d2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            if ((c[b2 + 16 >> 2] | 0) != (0 - (c[b2 + 76 >> 2] | 0) | 0))
              return;
            d2 = c[b2 + 4 >> 2] | 0;
            if (d2 | 0)
              _c(b2 + 4 | 0, d2);
            d2 = c[b2 + 8 >> 2] | 0;
            if (d2 | 0) {
              c[5638] = (c[5638] | 0) + 1;
              rG(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 8 >> 2] = 0;
            c[b2 + 12 >> 2] = -1;
            d2 = c[b2 + 36 >> 2] | 0;
            if (d2 | 0) {
              if (a[b2 + 40 >> 0] | 0) {
                c[5638] = (c[5638] | 0) + 1;
                rG(c[d2 + -4 >> 2] | 0);
              }
              c[b2 + 36 >> 2] = 0;
            }
            a[b2 + 40 >> 0] = 1;
            c[b2 + 36 >> 2] = 0;
            c[b2 + 28 >> 2] = 0;
            c[b2 + 32 >> 2] = 0;
            c[b2 + 20 >> 2] = 0;
            d2 = c[b2 + 64 >> 2] | 0;
            if (d2 | 0)
              _c(b2 + 64 | 0, d2);
            d2 = c[b2 + 68 >> 2] | 0;
            if (d2 | 0) {
              c[5638] = (c[5638] | 0) + 1;
              rG(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 68 >> 2] = 0;
            c[b2 + 72 >> 2] = -1;
            d2 = c[b2 + 96 >> 2] | 0;
            if (d2 | 0) {
              if (a[b2 + 100 >> 0] | 0) {
                c[5638] = (c[5638] | 0) + 1;
                rG(c[d2 + -4 >> 2] | 0);
              }
              c[b2 + 96 >> 2] = 0;
            }
            a[b2 + 100 >> 0] = 1;
            c[b2 + 96 >> 2] = 0;
            c[b2 + 88 >> 2] = 0;
            c[b2 + 92 >> 2] = 0;
            c[b2 + 80 >> 2] = 0;
            a[b2 + 193 >> 0] = 0;
            a[b2 + 194 >> 0] = 1;
            c[b2 + 144 >> 2] = 0;
            c[b2 + 164 >> 2] = 0;
            c[b2 + 148 >> 2] = 1;
            c[b2 + 152 >> 2] = 0;
            c[b2 + 156 >> 2] = 10;
            c[b2 + 160 >> 2] = 1;
            c[b2 + 124 >> 2] = 0;
            c[b2 + 124 + 4 >> 2] = 0;
            c[b2 + 124 + 8 >> 2] = 0;
            c[b2 + 168 >> 2] = 0;
            c[b2 + 168 + 4 >> 2] = 0;
            c[b2 + 168 + 8 >> 2] = 0;
            c[b2 + 168 + 12 >> 2] = 0;
            c[b2 + 168 + 16 >> 2] = 0;
            c[b2 + 168 + 20 >> 2] = 0;
            return;
          }
          function Fd(a2) {
            a2 = a2 | 0;
            return;
          }
          function Gd(b2, d2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0;
            c[b2 >> 2] = 2692;
            a[b2 + 40 >> 0] = 1;
            c[b2 + 36 >> 2] = 0;
            c[b2 + 28 >> 2] = 0;
            c[b2 + 32 >> 2] = 0;
            a[b2 + 60 >> 0] = 1;
            c[b2 + 56 >> 2] = 0;
            c[b2 + 48 >> 2] = 0;
            c[b2 + 52 >> 2] = 0;
            c[b2 + 4 >> 2] = 0;
            c[b2 + 8 >> 2] = 0;
            c[b2 + 12 >> 2] = -1;
            c[b2 + 16 >> 2] = 0;
            c[b2 + 20 >> 2] = 0;
            a[b2 + 100 >> 0] = 1;
            c[b2 + 96 >> 2] = 0;
            c[b2 + 88 >> 2] = 0;
            c[b2 + 92 >> 2] = 0;
            a[b2 + 120 >> 0] = 1;
            c[b2 + 116 >> 2] = 0;
            c[b2 + 108 >> 2] = 0;
            c[b2 + 112 >> 2] = 0;
            c[b2 + 64 >> 2] = 0;
            c[b2 + 68 >> 2] = 0;
            c[b2 + 72 >> 2] = -1;
            c[b2 + 76 >> 2] = 0;
            c[b2 + 80 >> 2] = 0;
            a[b2 + 193 >> 0] = 0;
            a[b2 + 194 >> 0] = 1;
            a[b2 + 192 >> 0] = (d2 | 0) != 0 ^ 1;
            g[b2 + 140 >> 2] = 0;
            c[b2 + 144 >> 2] = 0;
            c[b2 + 164 >> 2] = 0;
            c[b2 + 148 >> 2] = 1;
            c[b2 + 152 >> 2] = 0;
            c[b2 + 156 >> 2] = 10;
            c[b2 + 160 >> 2] = 1;
            c[b2 + 168 >> 2] = 0;
            c[b2 + 172 >> 2] = 0;
            g[b2 + 176 >> 2] = 0;
            if (d2 | 0) {
              e2 = d2;
              d2 = b2 + 136 | 0;
              c[d2 >> 2] = e2;
              d2 = b2 + 188 | 0;
              c[d2 >> 2] = 0;
              d2 = b2 + 180 | 0;
              c[d2 >> 2] = 0;
              d2 = b2 + 184 | 0;
              c[d2 >> 2] = 0;
              b2 = b2 + 124 | 0;
              c[b2 >> 2] = 0;
              c[b2 + 4 >> 2] = 0;
              c[b2 + 8 >> 2] = 0;
              return;
            }
            c[5637] = (c[5637] | 0) + 1;
            d2 = qG(91) | 0;
            if (!d2)
              d2 = 0;
            else {
              c[(d2 + 4 + 15 & -16) + -4 >> 2] = d2;
              d2 = d2 + 4 + 15 & -16;
            }
            de(d2);
            e2 = b2 + 136 | 0;
            c[e2 >> 2] = d2;
            e2 = b2 + 188 | 0;
            c[e2 >> 2] = 0;
            e2 = b2 + 180 | 0;
            c[e2 >> 2] = 0;
            e2 = b2 + 184 | 0;
            c[e2 >> 2] = 0;
            e2 = b2 + 124 | 0;
            c[e2 >> 2] = 0;
            c[e2 + 4 >> 2] = 0;
            c[e2 + 8 >> 2] = 0;
            return;
          }
          function Hd(a2) {
            a2 = a2 | 0;
            return;
          }
          function Id(b2) {
            b2 = b2 | 0;
            var d2 = 0;
            c[b2 >> 2] = 2864;
            d2 = c[b2 + 60 >> 2] | 0;
            if (d2 | 0) {
              if (a[b2 + 64 >> 0] | 0) {
                c[5638] = (c[5638] | 0) + 1;
                rG(c[d2 + -4 >> 2] | 0);
              }
              c[b2 + 60 >> 2] = 0;
            }
            a[b2 + 64 >> 0] = 1;
            c[b2 + 60 >> 2] = 0;
            c[b2 + 52 >> 2] = 0;
            c[b2 + 56 >> 2] = 0;
            d2 = c[b2 + 40 >> 2] | 0;
            if (d2 | 0) {
              if (a[b2 + 44 >> 0] | 0) {
                c[5638] = (c[5638] | 0) + 1;
                rG(c[d2 + -4 >> 2] | 0);
              }
              c[b2 + 40 >> 2] = 0;
            }
            a[b2 + 44 >> 0] = 1;
            c[b2 + 40 >> 2] = 0;
            c[b2 + 32 >> 2] = 0;
            c[b2 + 36 >> 2] = 0;
            d2 = c[b2 + 16 >> 2] | 0;
            if (!d2) {
              a[b2 + 20 >> 0] = 1;
              c[b2 + 16 >> 2] = 0;
              c[b2 + 8 >> 2] = 0;
              b2 = b2 + 12 | 0;
              c[b2 >> 2] = 0;
              return;
            }
            if (a[b2 + 20 >> 0] | 0) {
              c[5638] = (c[5638] | 0) + 1;
              rG(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 16 >> 2] = 0;
            a[b2 + 20 >> 0] = 1;
            c[b2 + 16 >> 2] = 0;
            c[b2 + 8 >> 2] = 0;
            b2 = b2 + 12 | 0;
            c[b2 >> 2] = 0;
            return;
          }
          function Jd(a2) {
            a2 = a2 | 0;
            Id(a2);
            rG(a2);
            return;
          }
          function Kd(d2, e2, f2) {
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            var g2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0;
            c[4986] = (c[4986] | 0) + 1;
            g2 = c[d2 + 24 >> 2] | 0;
            if (!g2) {
              g2 = c[e2 + 4 >> 2] | 0;
              if (!((b[f2 + 6 >> 1] & (g2 & 65535)) << 16 >> 16)) {
                d2 = 0;
                return d2 | 0;
              }
              if (!((b[f2 + 4 >> 1] & (g2 >>> 16 & 65535)) << 16 >> 16)) {
                d2 = 0;
                return d2 | 0;
              }
            } else if (!(Eb[c[(c[g2 >> 2] | 0) + 8 >> 2] & 63](g2, e2, f2) | 0)) {
              d2 = 0;
              return d2 | 0;
            }
            l2 = (c[e2 + 12 >> 2] | 0) > (c[f2 + 12 >> 2] | 0);
            m2 = l2 ? f2 : e2;
            h2 = c[m2 + 12 >> 2] | 0;
            l2 = l2 ? e2 : f2;
            e2 = c[l2 + 12 >> 2] | 0;
            j2 = ((e2 << 16 | h2) + ~((e2 << 16 | h2) << 15) >> 10 ^ (e2 << 16 | h2) + ~((e2 << 16 | h2) << 15)) * 9 | 0;
            j2 = (j2 >> 6 ^ j2) + ~((j2 >> 6 ^ j2) << 11) >> 16 ^ (j2 >> 6 ^ j2) + ~((j2 >> 6 ^ j2) << 11);
            k2 = c[d2 + 12 >> 2] | 0;
            g2 = c[(c[d2 + 40 >> 2] | 0) + ((j2 & k2 + -1) << 2) >> 2] | 0;
            a:
              do
                if ((g2 | 0) != -1) {
                  f2 = c[d2 + 16 >> 2] | 0;
                  while (1) {
                    if ((c[(c[f2 + (g2 << 4) >> 2] | 0) + 12 >> 2] | 0) == (h2 | 0) ? (c[(c[f2 + (g2 << 4) + 4 >> 2] | 0) + 12 >> 2] | 0) == (e2 | 0) : 0)
                      break;
                    g2 = c[(c[d2 + 60 >> 2] | 0) + (g2 << 2) >> 2] | 0;
                    if ((g2 | 0) == -1)
                      break a;
                  }
                  g2 = f2 + (g2 << 4) | 0;
                  if (g2 | 0) {
                    d2 = g2;
                    return d2 | 0;
                  }
                }
              while (0);
            i2 = c[d2 + 8 >> 2] | 0;
            if ((i2 | 0) == (k2 | 0)) {
              g2 = k2 | 0 ? k2 << 1 : 1;
              if ((k2 | 0) < (g2 | 0)) {
                if (!g2) {
                  e2 = 0;
                  f2 = k2;
                } else {
                  c[5637] = (c[5637] | 0) + 1;
                  e2 = qG((g2 << 4 | 3) + 16 | 0) | 0;
                  if (!e2)
                    e2 = 0;
                  else {
                    c[(e2 + 4 + 15 & -16) + -4 >> 2] = e2;
                    e2 = e2 + 4 + 15 & -16;
                  }
                  f2 = c[d2 + 8 >> 2] | 0;
                }
                if ((f2 | 0) > 0) {
                  h2 = 0;
                  do {
                    n2 = c[d2 + 16 >> 2] | 0;
                    c[e2 + (h2 << 4) >> 2] = c[n2 + (h2 << 4) >> 2];
                    c[e2 + (h2 << 4) + 4 >> 2] = c[n2 + (h2 << 4) + 4 >> 2];
                    c[e2 + (h2 << 4) + 8 >> 2] = c[n2 + (h2 << 4) + 8 >> 2];
                    c[e2 + (h2 << 4) + 12 >> 2] = c[n2 + (h2 << 4) + 12 >> 2];
                    h2 = h2 + 1 | 0;
                  } while ((h2 | 0) != (f2 | 0));
                }
                h2 = c[d2 + 16 >> 2] | 0;
                if (h2) {
                  if (a[d2 + 20 >> 0] | 0) {
                    c[5638] = (c[5638] | 0) + 1;
                    rG(c[h2 + -4 >> 2] | 0);
                    f2 = c[d2 + 8 >> 2] | 0;
                  }
                  c[d2 + 16 >> 2] = 0;
                }
                a[d2 + 20 >> 0] = 1;
                c[d2 + 16 >> 2] = e2;
                c[d2 + 12 >> 2] = g2;
              } else {
                f2 = k2;
                g2 = k2;
              }
            } else {
              f2 = i2;
              g2 = k2;
            }
            c[d2 + 8 >> 2] = f2 + 1;
            f2 = c[d2 + 16 >> 2] | 0;
            e2 = c[d2 + 68 >> 2] | 0;
            if (e2) {
              Eb[c[(c[e2 >> 2] | 0) + 8 >> 2] & 63](e2, m2, l2) | 0;
              g2 = c[d2 + 12 >> 2] | 0;
            }
            if ((k2 | 0) < (g2 | 0)) {
              Ld(d2);
              g2 = (c[d2 + 12 >> 2] | 0) + -1 & j2;
            } else
              g2 = j2 & k2 + -1;
            n2 = (c[m2 + 12 >> 2] | 0) < (c[l2 + 12 >> 2] | 0);
            c[f2 + (i2 << 4) >> 2] = n2 ? m2 : l2;
            c[f2 + (i2 << 4) + 4 >> 2] = n2 ? l2 : m2;
            c[f2 + (i2 << 4) + 8 >> 2] = 0;
            c[f2 + (i2 << 4) + 8 + 4 >> 2] = 0;
            n2 = (c[d2 + 40 >> 2] | 0) + (g2 << 2) | 0;
            c[(c[d2 + 60 >> 2] | 0) + (i2 << 2) >> 2] = c[n2 >> 2];
            c[n2 >> 2] = i2;
            n2 = f2 + (i2 << 4) | 0;
            return n2 | 0;
          }
          function Ld(b2) {
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0, i2 = 0, j2 = 0;
            i2 = c[b2 + 12 >> 2] | 0;
            j2 = c[b2 + 32 >> 2] | 0;
            if ((i2 | 0) <= (j2 | 0))
              return;
            if ((i2 | 0) >= (j2 | 0)) {
              do
                if ((c[b2 + 36 >> 2] | 0) < (i2 | 0)) {
                  if (!i2) {
                    d2 = 0;
                    e2 = j2;
                  } else {
                    c[5637] = (c[5637] | 0) + 1;
                    d2 = qG((i2 << 2 | 3) + 16 | 0) | 0;
                    if (!d2)
                      d2 = 0;
                    else {
                      c[(d2 + 4 + 15 & -16) + -4 >> 2] = d2;
                      d2 = d2 + 4 + 15 & -16;
                    }
                    e2 = c[b2 + 32 >> 2] | 0;
                  }
                  f2 = c[b2 + 40 >> 2] | 0;
                  if ((e2 | 0) <= 0) {
                    if (!f2) {
                      a[b2 + 44 >> 0] = 1;
                      c[b2 + 40 >> 2] = d2;
                      c[b2 + 36 >> 2] = i2;
                      break;
                    }
                  } else {
                    g2 = 0;
                    do {
                      c[d2 + (g2 << 2) >> 2] = c[f2 + (g2 << 2) >> 2];
                      g2 = g2 + 1 | 0;
                    } while ((g2 | 0) != (e2 | 0));
                  }
                  if (a[b2 + 44 >> 0] | 0) {
                    c[5638] = (c[5638] | 0) + 1;
                    rG(c[f2 + -4 >> 2] | 0);
                  }
                  a[b2 + 44 >> 0] = 1;
                  c[b2 + 40 >> 2] = d2;
                  c[b2 + 36 >> 2] = i2;
                } else
                  d2 = c[b2 + 40 >> 2] | 0;
              while (0);
              ZG(d2 + (j2 << 2) | 0, 0, i2 - j2 << 2 | 0) | 0;
            }
            c[b2 + 32 >> 2] = i2;
            h2 = c[b2 + 52 >> 2] | 0;
            if ((i2 | 0) > (h2 | 0)) {
              do
                if ((c[b2 + 56 >> 2] | 0) < (i2 | 0)) {
                  if (!i2) {
                    d2 = 0;
                    e2 = h2;
                  } else {
                    c[5637] = (c[5637] | 0) + 1;
                    d2 = qG((i2 << 2 | 3) + 16 | 0) | 0;
                    if (!d2)
                      d2 = 0;
                    else {
                      c[(d2 + 4 + 15 & -16) + -4 >> 2] = d2;
                      d2 = d2 + 4 + 15 & -16;
                    }
                    e2 = c[b2 + 52 >> 2] | 0;
                  }
                  f2 = c[b2 + 60 >> 2] | 0;
                  if ((e2 | 0) <= 0) {
                    if (!f2) {
                      a[b2 + 64 >> 0] = 1;
                      c[b2 + 60 >> 2] = d2;
                      c[b2 + 56 >> 2] = i2;
                      break;
                    }
                  } else {
                    g2 = 0;
                    do {
                      c[d2 + (g2 << 2) >> 2] = c[f2 + (g2 << 2) >> 2];
                      g2 = g2 + 1 | 0;
                    } while ((g2 | 0) != (e2 | 0));
                  }
                  if (a[b2 + 64 >> 0] | 0) {
                    c[5638] = (c[5638] | 0) + 1;
                    rG(c[f2 + -4 >> 2] | 0);
                  }
                  a[b2 + 64 >> 0] = 1;
                  c[b2 + 60 >> 2] = d2;
                  c[b2 + 56 >> 2] = i2;
                } else
                  d2 = c[b2 + 60 >> 2] | 0;
              while (0);
              ZG(d2 + (h2 << 2) | 0, 0, i2 - h2 << 2 | 0) | 0;
            }
            c[b2 + 52 >> 2] = i2;
            if ((i2 | 0) > 0) {
              ZG(c[b2 + 40 >> 2] | 0, -1, i2 << 2 | 0) | 0;
              ZG(c[b2 + 60 >> 2] | 0, -1, i2 << 2 | 0) | 0;
            }
            if ((j2 | 0) <= 0)
              return;
            d2 = c[b2 + 16 >> 2] | 0;
            e2 = c[b2 + 40 >> 2] | 0;
            f2 = c[b2 + 60 >> 2] | 0;
            g2 = 0;
            do {
              i2 = c[(c[d2 + (g2 << 4) + 4 >> 2] | 0) + 12 >> 2] << 16 | c[(c[d2 + (g2 << 4) >> 2] | 0) + 12 >> 2];
              i2 = (i2 + ~(i2 << 15) >> 10 ^ i2 + ~(i2 << 15)) * 9 | 0;
              i2 = e2 + ((((i2 >> 6 ^ i2) + ~((i2 >> 6 ^ i2) << 11) >> 16 ^ (i2 >> 6 ^ i2) + ~((i2 >> 6 ^ i2) << 11)) & (c[b2 + 12 >> 2] | 0) + -1) << 2) | 0;
              c[f2 + (g2 << 2) >> 2] = c[i2 >> 2];
              c[i2 >> 2] = g2;
              g2 = g2 + 1 | 0;
            } while ((g2 | 0) != (j2 | 0));
            return;
          }
          function Md(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, g2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0;
            c[4985] = (c[4985] | 0) + 1;
            j2 = (c[b2 + 12 >> 2] | 0) > (c[d2 + 12 >> 2] | 0);
            l2 = j2 ? d2 : b2;
            h2 = c[l2 + 12 >> 2] | 0;
            j2 = j2 ? b2 : d2;
            f2 = c[j2 + 12 >> 2] | 0;
            i2 = ((f2 << 16 | h2) + ~((f2 << 16 | h2) << 15) >> 10 ^ (f2 << 16 | h2) + ~((f2 << 16 | h2) << 15)) * 9 | 0;
            i2 = ((i2 >> 6 ^ i2) + ~((i2 >> 6 ^ i2) << 11) >> 16 ^ (i2 >> 6 ^ i2) + ~((i2 >> 6 ^ i2) << 11)) & (c[a2 + 12 >> 2] | 0) + -1;
            b2 = c[(c[a2 + 40 >> 2] | 0) + (i2 << 2) >> 2] | 0;
            if ((b2 | 0) == -1) {
              o2 = 0;
              return o2 | 0;
            }
            g2 = c[a2 + 16 >> 2] | 0;
            d2 = b2;
            while (1) {
              if ((c[(c[g2 + (d2 << 4) >> 2] | 0) + 12 >> 2] | 0) == (h2 | 0) ? (c[(c[g2 + (d2 << 4) + 4 >> 2] | 0) + 12 >> 2] | 0) == (f2 | 0) : 0)
                break;
              b2 = c[(c[a2 + 60 >> 2] | 0) + (d2 << 2) >> 2] | 0;
              if ((b2 | 0) == -1) {
                b2 = 0;
                o2 = 24;
                break;
              } else
                d2 = b2;
            }
            if ((o2 | 0) == 24)
              return b2 | 0;
            b2 = g2 + (d2 << 4) | 0;
            if (!b2) {
              o2 = 0;
              return o2 | 0;
            }
            Zb[c[(c[a2 >> 2] | 0) + 32 >> 2] & 127](a2, b2, e2);
            n2 = c[g2 + (d2 << 4) + 12 >> 2] | 0;
            m2 = b2 - (c[a2 + 16 >> 2] | 0) >> 4;
            h2 = (c[a2 + 40 >> 2] | 0) + (i2 << 2) | 0;
            b2 = c[h2 >> 2] | 0;
            d2 = c[a2 + 60 >> 2] | 0;
            if ((b2 | 0) != (m2 | 0)) {
              g2 = b2;
              while (1) {
                f2 = d2 + (g2 << 2) | 0;
                b2 = c[f2 >> 2] | 0;
                if ((b2 | 0) == (m2 | 0))
                  break;
                else
                  g2 = b2;
              }
              b2 = c[d2 + (m2 << 2) >> 2] | 0;
              if ((g2 | 0) == -1)
                o2 = 12;
              else
                c[f2 >> 2] = b2;
            } else {
              b2 = c[d2 + (m2 << 2) >> 2] | 0;
              o2 = 12;
            }
            if ((o2 | 0) == 12)
              c[h2 >> 2] = b2;
            k2 = (c[a2 + 8 >> 2] | 0) + -1 | 0;
            b2 = c[a2 + 68 >> 2] | 0;
            if (b2 | 0)
              zb[c[(c[b2 >> 2] | 0) + 12 >> 2] & 31](b2, l2, j2, e2) | 0;
            if ((k2 | 0) == (m2 | 0)) {
              c[a2 + 8 >> 2] = (c[a2 + 8 >> 2] | 0) + -1;
              o2 = n2;
              return o2 | 0;
            }
            j2 = c[a2 + 16 >> 2] | 0;
            h2 = c[(c[j2 + (k2 << 4) + 4 >> 2] | 0) + 12 >> 2] << 16 | c[(c[j2 + (k2 << 4) >> 2] | 0) + 12 >> 2];
            h2 = (h2 + ~(h2 << 15) >> 10 ^ h2 + ~(h2 << 15)) * 9 | 0;
            h2 = ((h2 >> 6 ^ h2) + ~((h2 >> 6 ^ h2) << 11) >> 16 ^ (h2 >> 6 ^ h2) + ~((h2 >> 6 ^ h2) << 11)) & (c[a2 + 12 >> 2] | 0) + -1;
            i2 = (c[a2 + 40 >> 2] | 0) + (h2 << 2) | 0;
            b2 = c[i2 >> 2] | 0;
            d2 = c[a2 + 60 >> 2] | 0;
            if ((b2 | 0) != (k2 | 0)) {
              g2 = b2;
              while (1) {
                f2 = d2 + (g2 << 2) | 0;
                b2 = c[f2 >> 2] | 0;
                if ((b2 | 0) == (k2 | 0))
                  break;
                else
                  g2 = b2;
              }
              b2 = c[d2 + (k2 << 2) >> 2] | 0;
              if ((g2 | 0) == -1)
                o2 = 22;
              else
                c[f2 >> 2] = b2;
            } else {
              b2 = c[d2 + (k2 << 2) >> 2] | 0;
              o2 = 22;
            }
            if ((o2 | 0) == 22)
              c[i2 >> 2] = b2;
            c[j2 + (m2 << 4) >> 2] = c[j2 + (k2 << 4) >> 2];
            c[j2 + (m2 << 4) + 4 >> 2] = c[j2 + (k2 << 4) + 4 >> 2];
            c[j2 + (m2 << 4) + 8 >> 2] = c[j2 + (k2 << 4) + 8 >> 2];
            c[j2 + (m2 << 4) + 12 >> 2] = c[j2 + (k2 << 4) + 12 >> 2];
            o2 = (c[a2 + 40 >> 2] | 0) + (h2 << 2) | 0;
            c[(c[a2 + 60 >> 2] | 0) + (m2 << 2) >> 2] = c[o2 >> 2];
            c[o2 >> 2] = m2;
            c[a2 + 8 >> 2] = (c[a2 + 8 >> 2] | 0) + -1;
            o2 = n2;
            return o2 | 0;
          }
          function Nd(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0;
            e2 = i;
            i = i + 16 | 0;
            c[e2 >> 2] = 2940;
            c[e2 + 4 >> 2] = b2;
            Zb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 127](a2, e2, d2);
            i = e2;
            return;
          }
          function Od(a2) {
            a2 = a2 | 0;
            return;
          }
          function Pd(a2) {
            a2 = a2 | 0;
            rG(a2);
            return;
          }
          function Qd(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            a2 = c[a2 + 4 >> 2] | 0;
            return ((c[b2 >> 2] | 0) == (a2 | 0) ? 1 : (c[b2 + 4 >> 2] | 0) == (a2 | 0)) | 0;
          }
          function Rd(a2) {
            a2 = a2 | 0;
            return c[a2 + 16 >> 2] | 0;
          }
          function Sd(a2) {
            a2 = a2 | 0;
            return c[a2 + 16 >> 2] | 0;
          }
          function Td(a2) {
            a2 = a2 | 0;
            return a2 + 4 | 0;
          }
          function Ud(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            a2 = c[b2 + 8 >> 2] | 0;
            if (!((d2 | 0) != 0 & (a2 | 0) != 0))
              return;
            rb[c[c[a2 >> 2] >> 2] & 255](a2);
            tb[c[(c[d2 >> 2] | 0) + 60 >> 2] & 127](d2, c[b2 + 8 >> 2] | 0);
            c[b2 + 8 >> 2] = 0;
            return;
          }
          function Vd(a2) {
            a2 = a2 | 0;
            return c[a2 + 8 >> 2] | 0;
          }
          function Wd(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0;
            e2 = i;
            i = i + 16 | 0;
            c[e2 >> 2] = 2960;
            c[e2 + 4 >> 2] = b2;
            c[e2 + 8 >> 2] = a2;
            c[e2 + 12 >> 2] = d2;
            Zb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 127](a2, e2, d2);
            i = e2;
            return;
          }
          function Xd(a2) {
            a2 = a2 | 0;
            rG(a2);
            return;
          }
          function Yd(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0;
            d2 = c[a2 + 4 >> 2] | 0;
            if ((c[b2 >> 2] | 0) != (d2 | 0) ? (c[b2 + 4 >> 2] | 0) != (d2 | 0) : 0)
              return 0;
            d2 = c[a2 + 8 >> 2] | 0;
            Zb[c[(c[d2 >> 2] | 0) + 32 >> 2] & 127](d2, b2, c[a2 + 12 >> 2] | 0);
            return 0;
          }
          function Zd(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c[a2 + 24 >> 2] = b2;
            return;
          }
          function _d(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0;
            if ((c[a2 + 8 >> 2] | 0) <= 0)
              return;
            g2 = 0;
            a:
              while (1) {
                while (1) {
                  e2 = c[a2 + 16 >> 2] | 0;
                  f2 = e2 + (g2 << 4) | 0;
                  if (!(Ob[c[(c[b2 >> 2] | 0) + 8 >> 2] & 31](b2, f2) | 0))
                    break;
                  zb[c[(c[a2 >> 2] | 0) + 12 >> 2] & 31](a2, c[f2 >> 2] | 0, c[e2 + (g2 << 4) + 4 >> 2] | 0, d2) | 0;
                  c[4984] = (c[4984] | 0) + -1;
                  if ((g2 | 0) >= (c[a2 + 8 >> 2] | 0)) {
                    e2 = 7;
                    break a;
                  }
                }
                g2 = g2 + 1 | 0;
                if ((g2 | 0) >= (c[a2 + 8 >> 2] | 0)) {
                  e2 = 7;
                  break;
                }
              }
            if ((e2 | 0) == 7)
              return;
          }
          function $d(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0;
            c[4987] = (c[4987] | 0) + 1;
            e2 = (c[b2 + 12 >> 2] | 0) > (c[d2 + 12 >> 2] | 0);
            f2 = c[(e2 ? d2 : b2) + 12 >> 2] | 0;
            e2 = c[(e2 ? b2 : d2) + 12 >> 2] | 0;
            b2 = ((e2 << 16 | f2) + ~((e2 << 16 | f2) << 15) >> 10 ^ (e2 << 16 | f2) + ~((e2 << 16 | f2) << 15)) * 9 | 0;
            b2 = ((b2 >> 6 ^ b2) + ~((b2 >> 6 ^ b2) << 11) >> 16 ^ (b2 >> 6 ^ b2) + ~((b2 >> 6 ^ b2) << 11)) & (c[a2 + 12 >> 2] | 0) + -1;
            if ((b2 | 0) >= (c[a2 + 32 >> 2] | 0)) {
              g2 = 0;
              return g2 | 0;
            }
            b2 = c[(c[a2 + 40 >> 2] | 0) + (b2 << 2) >> 2] | 0;
            if ((b2 | 0) == -1) {
              g2 = 0;
              return g2 | 0;
            }
            d2 = c[a2 + 16 >> 2] | 0;
            while (1) {
              if ((c[(c[d2 + (b2 << 4) >> 2] | 0) + 12 >> 2] | 0) == (f2 | 0) ? (c[(c[d2 + (b2 << 4) + 4 >> 2] | 0) + 12 >> 2] | 0) == (e2 | 0) : 0)
                break;
              b2 = c[(c[a2 + 60 >> 2] | 0) + (b2 << 2) >> 2] | 0;
              if ((b2 | 0) == -1) {
                b2 = 0;
                g2 = 8;
                break;
              }
            }
            if ((g2 | 0) == 8)
              return b2 | 0;
            g2 = d2 + (b2 << 4) | 0;
            return g2 | 0;
          }
          function ae(a2) {
            a2 = a2 | 0;
            return 0;
          }
          function be(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c[a2 + 68 >> 2] = b2;
            return;
          }
          function ce(b2, d2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0;
            p2 = i;
            i = i + 32 | 0;
            a[p2 + 16 >> 0] = 1;
            c[p2 + 12 >> 2] = 0;
            c[p2 + 4 >> 2] = 0;
            c[p2 + 8 >> 2] = 0;
            e2 = c[b2 + 8 >> 2] | 0;
            if ((e2 | 0) > 0) {
              g2 = 0;
              h2 = 0;
              f2 = 0;
              n2 = 0;
              do {
                l2 = c[b2 + 16 >> 2] | 0;
                m2 = l2 + (n2 << 4) | 0;
                if ((g2 | 0) == (f2 | 0)) {
                  k2 = f2 | 0 ? f2 << 1 : 1;
                  if ((f2 | 0) < (k2 | 0)) {
                    if (k2) {
                      c[5637] = (c[5637] | 0) + 1;
                      e2 = qG((k2 << 4 | 3) + 16 | 0) | 0;
                      if (!e2) {
                        h2 = 0;
                        f2 = g2;
                      } else {
                        c[(e2 + 4 + 15 & -16) + -4 >> 2] = e2;
                        h2 = e2 + 4 + 15 & -16;
                        f2 = g2;
                      }
                    } else
                      h2 = 0;
                    if ((f2 | 0) > 0) {
                      e2 = 0;
                      do {
                        j2 = c[p2 + 12 >> 2] | 0;
                        c[h2 + (e2 << 4) >> 2] = c[j2 + (e2 << 4) >> 2];
                        c[h2 + (e2 << 4) + 4 >> 2] = c[j2 + (e2 << 4) + 4 >> 2];
                        c[h2 + (e2 << 4) + 8 >> 2] = c[j2 + (e2 << 4) + 8 >> 2];
                        c[h2 + (e2 << 4) + 12 >> 2] = c[j2 + (e2 << 4) + 12 >> 2];
                        e2 = e2 + 1 | 0;
                      } while ((e2 | 0) != (f2 | 0));
                    }
                    e2 = c[p2 + 12 >> 2] | 0;
                    if (!e2)
                      g2 = f2;
                    else {
                      c[5638] = (c[5638] | 0) + 1;
                      rG(c[e2 + -4 >> 2] | 0);
                      c[p2 + 12 >> 2] = 0;
                    }
                    a[p2 + 16 >> 0] = 1;
                    c[p2 + 12 >> 2] = h2;
                    c[p2 + 8 >> 2] = k2;
                    j2 = g2;
                    f2 = k2;
                    e2 = c[b2 + 8 >> 2] | 0;
                  } else
                    j2 = f2;
                } else
                  j2 = g2;
                c[h2 + (j2 << 4) >> 2] = c[m2 >> 2];
                c[h2 + (j2 << 4) + 4 >> 2] = c[l2 + (n2 << 4) + 4 >> 2];
                c[h2 + (j2 << 4) + 8 >> 2] = c[l2 + (n2 << 4) + 8 >> 2];
                c[h2 + (j2 << 4) + 12 >> 2] = c[l2 + (n2 << 4) + 12 >> 2];
                g2 = j2 + 1 | 0;
                n2 = n2 + 1 | 0;
              } while ((n2 | 0) < (e2 | 0));
              c[p2 + 4 >> 2] = g2;
              if ((j2 | 0) > -1) {
                e2 = c[p2 + 12 >> 2] | 0;
                f2 = 0;
                while (1) {
                  zb[c[(c[b2 >> 2] | 0) + 12 >> 2] & 31](b2, c[e2 + (f2 << 4) >> 2] | 0, c[e2 + (f2 << 4) + 4 >> 2] | 0, d2) | 0;
                  if ((f2 | 0) < (j2 | 0))
                    f2 = f2 + 1 | 0;
                  else
                    break;
                }
              }
            } else
              g2 = 0;
            if ((c[b2 + 52 >> 2] | 0) > 0) {
              e2 = c[b2 + 60 >> 2] | 0;
              f2 = 0;
              do {
                c[e2 + (f2 << 2) >> 2] = -1;
                f2 = f2 + 1 | 0;
              } while ((f2 | 0) < (c[b2 + 52 >> 2] | 0));
            }
            if ((g2 | 0) <= 1)
              if ((g2 | 0) > 0)
                o2 = 24;
              else
                e2 = c[p2 + 12 >> 2] | 0;
            else {
              Xc(p2, 0, g2 + -1 | 0);
              o2 = 24;
            }
            if ((o2 | 0) == 24) {
              e2 = c[p2 + 12 >> 2] | 0;
              f2 = 0;
              do {
                Eb[c[(c[b2 >> 2] | 0) + 8 >> 2] & 63](b2, c[e2 + (f2 << 4) >> 2] | 0, c[e2 + (f2 << 4) + 4 >> 2] | 0) | 0;
                f2 = f2 + 1 | 0;
              } while ((f2 | 0) < (g2 | 0));
            }
            if (!e2) {
              i = p2;
              return;
            }
            c[5638] = (c[5638] | 0) + 1;
            rG(c[e2 + -4 >> 2] | 0);
            c[p2 + 12 >> 2] = 0;
            i = p2;
            return;
          }
          function de(b2) {
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, g2 = 0;
            c[b2 >> 2] = 2864;
            a[b2 + 20 >> 0] = 1;
            c[b2 + 16 >> 2] = 0;
            c[b2 + 8 >> 2] = 0;
            c[b2 + 12 >> 2] = 0;
            c[b2 + 24 >> 2] = 0;
            a[b2 + 44 >> 0] = 1;
            c[b2 + 40 >> 2] = 0;
            c[b2 + 32 >> 2] = 0;
            c[b2 + 36 >> 2] = 0;
            a[b2 + 64 >> 0] = 1;
            c[b2 + 60 >> 2] = 0;
            c[b2 + 52 >> 2] = 0;
            c[b2 + 56 >> 2] = 0;
            c[b2 + 68 >> 2] = 0;
            c[5637] = (c[5637] | 0) + 1;
            d2 = qG(51) | 0;
            if (!d2)
              f2 = 0;
            else {
              c[(d2 + 4 + 15 & -16) + -4 >> 2] = d2;
              f2 = d2 + 4 + 15 & -16;
            }
            d2 = c[b2 + 8 >> 2] | 0;
            if ((d2 | 0) > 0) {
              e2 = 0;
              do {
                g2 = c[b2 + 16 >> 2] | 0;
                c[f2 + (e2 << 4) >> 2] = c[g2 + (e2 << 4) >> 2];
                c[f2 + (e2 << 4) + 4 >> 2] = c[g2 + (e2 << 4) + 4 >> 2];
                c[f2 + (e2 << 4) + 8 >> 2] = c[g2 + (e2 << 4) + 8 >> 2];
                c[f2 + (e2 << 4) + 12 >> 2] = c[g2 + (e2 << 4) + 12 >> 2];
                e2 = e2 + 1 | 0;
              } while ((e2 | 0) != (d2 | 0));
            }
            d2 = c[b2 + 16 >> 2] | 0;
            if (!d2) {
              a[b2 + 20 >> 0] = 1;
              c[b2 + 16 >> 2] = f2;
              c[b2 + 12 >> 2] = 2;
              Ld(b2);
              return;
            }
            if (a[b2 + 20 >> 0] | 0) {
              c[5638] = (c[5638] | 0) + 1;
              rG(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 16 >> 2] = 0;
            a[b2 + 20 >> 0] = 1;
            c[b2 + 16 >> 2] = f2;
            c[b2 + 12 >> 2] = 2;
            Ld(b2);
            return;
          }
          function ee(b2) {
            b2 = b2 | 0;
            var d2 = 0;
            c[b2 >> 2] = 2980;
            d2 = c[b2 + 160 >> 2] | 0;
            if (d2 | 0) {
              if (a[b2 + 164 >> 0] | 0) {
                c[5638] = (c[5638] | 0) + 1;
                rG(c[d2 + -4 >> 2] | 0);
              }
              c[b2 + 160 >> 2] = 0;
            }
            a[b2 + 164 >> 0] = 1;
            c[b2 + 160 >> 2] = 0;
            c[b2 + 152 >> 2] = 0;
            c[b2 + 156 >> 2] = 0;
            d2 = c[b2 + 136 >> 2] | 0;
            if (d2 | 0) {
              if (a[b2 + 140 >> 0] | 0) {
                c[5638] = (c[5638] | 0) + 1;
                rG(c[d2 + -4 >> 2] | 0);
              }
              c[b2 + 136 >> 2] = 0;
            }
            a[b2 + 140 >> 0] = 1;
            c[b2 + 136 >> 2] = 0;
            c[b2 + 128 >> 2] = 0;
            c[b2 + 132 >> 2] = 0;
            d2 = c[b2 + 116 >> 2] | 0;
            if (d2 | 0) {
              if (a[b2 + 120 >> 0] | 0) {
                c[5638] = (c[5638] | 0) + 1;
                rG(c[d2 + -4 >> 2] | 0);
              }
              c[b2 + 116 >> 2] = 0;
            }
            a[b2 + 120 >> 0] = 1;
            c[b2 + 116 >> 2] = 0;
            c[b2 + 108 >> 2] = 0;
            c[b2 + 112 >> 2] = 0;
            d2 = c[b2 + 96 >> 2] | 0;
            if (d2 | 0) {
              if (a[b2 + 100 >> 0] | 0) {
                c[5638] = (c[5638] | 0) + 1;
                rG(c[d2 + -4 >> 2] | 0);
              }
              c[b2 + 96 >> 2] = 0;
            }
            a[b2 + 100 >> 0] = 1;
            c[b2 + 96 >> 2] = 0;
            c[b2 + 88 >> 2] = 0;
            c[b2 + 92 >> 2] = 0;
            d2 = c[b2 + 76 >> 2] | 0;
            if (!d2) {
              a[b2 + 80 >> 0] = 1;
              c[b2 + 76 >> 2] = 0;
              c[b2 + 68 >> 2] = 0;
              b2 = b2 + 72 | 0;
              c[b2 >> 2] = 0;
              return;
            }
            if (a[b2 + 80 >> 0] | 0) {
              c[5638] = (c[5638] | 0) + 1;
              rG(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 76 >> 2] = 0;
            a[b2 + 80 >> 0] = 1;
            c[b2 + 76 >> 2] = 0;
            c[b2 + 68 >> 2] = 0;
            b2 = b2 + 72 | 0;
            c[b2 >> 2] = 0;
            return;
          }
          function fe(a2) {
            a2 = a2 | 0;
            ee(a2);
            if (!a2)
              return;
            c[5638] = (c[5638] | 0) + 1;
            rG(c[a2 + -4 >> 2] | 0);
            return;
          }
          function ge(d2, f2, h2, i2) {
            d2 = d2 | 0;
            f2 = f2 | 0;
            h2 = h2 | 0;
            i2 = i2 | 0;
            var j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0;
            c[d2 + 168 >> 2] = c[d2 + 152 >> 2];
            c[f2 >> 2] = 2980;
            c[f2 + 52 >> 2] = 284;
            a[f2 + 60 >> 0] = 0;
            a[f2 + 80 >> 0] = 1;
            c[f2 + 76 >> 2] = 0;
            c[f2 + 68 >> 2] = 0;
            c[f2 + 72 >> 2] = 0;
            a[f2 + 100 >> 0] = 1;
            c[f2 + 96 >> 2] = 0;
            c[f2 + 88 >> 2] = 0;
            c[f2 + 92 >> 2] = 0;
            a[f2 + 120 >> 0] = 1;
            c[f2 + 116 >> 2] = 0;
            c[f2 + 108 >> 2] = 0;
            c[f2 + 112 >> 2] = 0;
            a[f2 + 140 >> 0] = 1;
            c[f2 + 136 >> 2] = 0;
            c[f2 + 128 >> 2] = 0;
            c[f2 + 132 >> 2] = 0;
            c[f2 + 144 >> 2] = 0;
            a[f2 + 164 >> 0] = 1;
            c[f2 + 160 >> 2] = 0;
            c[f2 + 152 >> 2] = 0;
            c[f2 + 156 >> 2] = 0;
            c[f2 + 168 >> 2] = 0;
            c[f2 + 4 >> 2] = -8388609;
            c[f2 + 8 >> 2] = -8388609;
            c[f2 + 12 >> 2] = -8388609;
            g[f2 + 16 >> 2] = 0;
            c[f2 + 20 >> 2] = 2139095039;
            c[f2 + 24 >> 2] = 2139095039;
            c[f2 + 28 >> 2] = 2139095039;
            g[f2 + 32 >> 2] = 0;
            h2 = c[d2 + 56 >> 2] | 0;
            if (i2) {
              c[f2 + 56 >> 2] = dH(h2 | 0) | 0;
              a[f2 + 4 >> 0] = a[d2 + 4 + 3 >> 0] | 0;
              a[f2 + 5 >> 0] = a[d2 + 4 + 2 >> 0] | 0;
              a[f2 + 6 >> 0] = a[d2 + 4 + 1 >> 0] | 0;
              a[f2 + 7 >> 0] = a[d2 + 4 >> 0] | 0;
              a[f2 + 8 >> 0] = a[d2 + 8 + 3 >> 0] | 0;
              a[f2 + 9 >> 0] = a[d2 + 8 + 2 >> 0] | 0;
              a[f2 + 10 >> 0] = a[d2 + 8 + 1 >> 0] | 0;
              a[f2 + 11 >> 0] = a[d2 + 8 >> 0] | 0;
              a[f2 + 12 >> 0] = a[d2 + 12 + 3 >> 0] | 0;
              a[f2 + 13 >> 0] = a[d2 + 12 + 2 >> 0] | 0;
              a[f2 + 14 >> 0] = a[d2 + 12 + 1 >> 0] | 0;
              a[f2 + 15 >> 0] = a[d2 + 12 >> 0] | 0;
              a[f2 + 16 >> 0] = a[d2 + 16 + 3 >> 0] | 0;
              a[f2 + 17 >> 0] = a[d2 + 16 + 2 >> 0] | 0;
              a[f2 + 18 >> 0] = a[d2 + 16 + 1 >> 0] | 0;
              a[f2 + 19 >> 0] = a[d2 + 16 >> 0] | 0;
              a[f2 + 20 >> 0] = a[d2 + 20 + 3 >> 0] | 0;
              a[f2 + 21 >> 0] = a[d2 + 20 + 2 >> 0] | 0;
              a[f2 + 22 >> 0] = a[d2 + 20 + 1 >> 0] | 0;
              a[f2 + 23 >> 0] = a[d2 + 20 >> 0] | 0;
              a[f2 + 24 >> 0] = a[d2 + 24 + 3 >> 0] | 0;
              a[f2 + 25 >> 0] = a[d2 + 24 + 2 >> 0] | 0;
              a[f2 + 26 >> 0] = a[d2 + 24 + 1 >> 0] | 0;
              a[f2 + 27 >> 0] = a[d2 + 24 >> 0] | 0;
              a[f2 + 28 >> 0] = a[d2 + 28 + 3 >> 0] | 0;
              a[f2 + 29 >> 0] = a[d2 + 28 + 2 >> 0] | 0;
              a[f2 + 30 >> 0] = a[d2 + 28 + 1 >> 0] | 0;
              a[f2 + 31 >> 0] = a[d2 + 28 >> 0] | 0;
              a[f2 + 32 >> 0] = a[d2 + 32 + 3 >> 0] | 0;
              a[f2 + 33 >> 0] = a[d2 + 32 + 2 >> 0] | 0;
              a[f2 + 34 >> 0] = a[d2 + 32 + 1 >> 0] | 0;
              a[f2 + 35 >> 0] = a[d2 + 32 >> 0] | 0;
              a[f2 + 36 >> 0] = a[d2 + 36 + 3 >> 0] | 0;
              a[f2 + 37 >> 0] = a[d2 + 36 + 2 >> 0] | 0;
              a[f2 + 38 >> 0] = a[d2 + 36 + 1 >> 0] | 0;
              a[f2 + 39 >> 0] = a[d2 + 36 >> 0] | 0;
              a[f2 + 40 >> 0] = a[d2 + 40 + 3 >> 0] | 0;
              a[f2 + 41 >> 0] = a[d2 + 40 + 2 >> 0] | 0;
              a[f2 + 42 >> 0] = a[d2 + 40 + 1 >> 0] | 0;
              a[f2 + 43 >> 0] = a[d2 + 40 >> 0] | 0;
              a[f2 + 44 >> 0] = a[d2 + 44 + 3 >> 0] | 0;
              a[f2 + 45 >> 0] = a[d2 + 44 + 2 >> 0] | 0;
              a[f2 + 46 >> 0] = a[d2 + 44 + 1 >> 0] | 0;
              a[f2 + 47 >> 0] = a[d2 + 44 >> 0] | 0;
              a[f2 + 48 >> 0] = a[d2 + 48 + 3 >> 0] | 0;
              a[f2 + 49 >> 0] = a[d2 + 48 + 2 >> 0] | 0;
              a[f2 + 50 >> 0] = a[d2 + 48 + 1 >> 0] | 0;
              a[f2 + 51 >> 0] = a[d2 + 48 >> 0] | 0;
              c[f2 + 144 >> 2] = dH(c[d2 + 144 >> 2] | 0) | 0;
              h2 = dH(c[d2 + 168 >> 2] | 0) | 0;
            } else {
              c[f2 + 56 >> 2] = h2;
              c[f2 + 4 >> 2] = c[d2 + 4 >> 2];
              c[f2 + 4 + 4 >> 2] = c[d2 + 4 + 4 >> 2];
              c[f2 + 4 + 8 >> 2] = c[d2 + 4 + 8 >> 2];
              c[f2 + 4 + 12 >> 2] = c[d2 + 4 + 12 >> 2];
              c[f2 + 20 >> 2] = c[d2 + 20 >> 2];
              c[f2 + 20 + 4 >> 2] = c[d2 + 20 + 4 >> 2];
              c[f2 + 20 + 8 >> 2] = c[d2 + 20 + 8 >> 2];
              c[f2 + 20 + 12 >> 2] = c[d2 + 20 + 12 >> 2];
              c[f2 + 36 >> 2] = c[d2 + 36 >> 2];
              c[f2 + 36 + 4 >> 2] = c[d2 + 36 + 4 >> 2];
              c[f2 + 36 + 8 >> 2] = c[d2 + 36 + 8 >> 2];
              c[f2 + 36 + 12 >> 2] = c[d2 + 36 + 12 >> 2];
              c[f2 + 144 >> 2] = c[d2 + 144 >> 2];
              h2 = c[d2 + 168 >> 2] | 0;
            }
            c[f2 + 168 >> 2] = h2;
            a[f2 + 60 >> 0] = a[d2 + 60 >> 0] | 0;
            l2 = c[d2 + 56 >> 2] | 0;
            if (!(a[d2 + 60 >> 0] | 0)) {
              h2 = c[f2 + 96 >> 2] | 0;
              if (h2 | 0) {
                if (a[f2 + 100 >> 0] | 0) {
                  c[5638] = (c[5638] | 0) + 1;
                  rG(c[h2 + -4 >> 2] | 0);
                }
                c[f2 + 96 >> 2] = 0;
              }
              ;
              c[f2 + 88 >> 2] = 0;
              c[f2 + 88 + 4 >> 2] = 0;
              c[f2 + 88 + 8 >> 2] = 0;
              a[f2 + 88 + 12 >> 0] = 0;
              c[f2 + 96 >> 2] = f2 + 172;
              c[f2 + 88 >> 2] = l2;
              c[f2 + 92 >> 2] = l2;
              if (i2)
                if ((l2 | 0) > 0) {
                  j2 = c[d2 + 96 >> 2] | 0;
                  h2 = f2 + 172 | 0;
                  k2 = 0;
                  do {
                    m2 = j2 + (k2 << 6) | 0;
                    o2 = h2 + (k2 << 6) | 0;
                    a[o2 >> 0] = a[m2 + 3 >> 0] | 0;
                    a[o2 + 1 >> 0] = a[m2 + 2 >> 0] | 0;
                    a[o2 + 2 >> 0] = a[m2 + 1 >> 0] | 0;
                    a[o2 + 3 >> 0] = a[m2 >> 0] | 0;
                    o2 = j2 + (k2 << 6) + 4 | 0;
                    m2 = h2 + (k2 << 6) + 4 | 0;
                    a[m2 >> 0] = a[o2 + 3 >> 0] | 0;
                    a[m2 + 1 >> 0] = a[o2 + 2 >> 0] | 0;
                    a[m2 + 2 >> 0] = a[o2 + 1 >> 0] | 0;
                    a[m2 + 3 >> 0] = a[o2 >> 0] | 0;
                    m2 = j2 + (k2 << 6) + 8 | 0;
                    o2 = h2 + (k2 << 6) + 8 | 0;
                    a[o2 >> 0] = a[m2 + 3 >> 0] | 0;
                    a[o2 + 1 >> 0] = a[m2 + 2 >> 0] | 0;
                    a[o2 + 2 >> 0] = a[m2 + 1 >> 0] | 0;
                    a[o2 + 3 >> 0] = a[m2 >> 0] | 0;
                    o2 = j2 + (k2 << 6) + 12 | 0;
                    h2 = h2 + (k2 << 6) + 12 | 0;
                    a[h2 >> 0] = a[o2 + 3 >> 0] | 0;
                    a[h2 + 1 >> 0] = a[o2 + 2 >> 0] | 0;
                    a[h2 + 2 >> 0] = a[o2 + 1 >> 0] | 0;
                    a[h2 + 3 >> 0] = a[o2 >> 0] | 0;
                    h2 = c[d2 + 96 >> 2] | 0;
                    o2 = h2 + (k2 << 6) + 16 | 0;
                    m2 = c[f2 + 96 >> 2] | 0;
                    n2 = m2 + (k2 << 6) + 16 | 0;
                    a[n2 >> 0] = a[o2 + 3 >> 0] | 0;
                    a[n2 + 1 >> 0] = a[o2 + 2 >> 0] | 0;
                    a[n2 + 2 >> 0] = a[o2 + 1 >> 0] | 0;
                    a[n2 + 3 >> 0] = a[o2 >> 0] | 0;
                    n2 = h2 + (k2 << 6) + 20 | 0;
                    o2 = m2 + (k2 << 6) + 20 | 0;
                    a[o2 >> 0] = a[n2 + 3 >> 0] | 0;
                    a[o2 + 1 >> 0] = a[n2 + 2 >> 0] | 0;
                    a[o2 + 2 >> 0] = a[n2 + 1 >> 0] | 0;
                    a[o2 + 3 >> 0] = a[n2 >> 0] | 0;
                    o2 = h2 + (k2 << 6) + 24 | 0;
                    n2 = m2 + (k2 << 6) + 24 | 0;
                    a[n2 >> 0] = a[o2 + 3 >> 0] | 0;
                    a[n2 + 1 >> 0] = a[o2 + 2 >> 0] | 0;
                    a[n2 + 2 >> 0] = a[o2 + 1 >> 0] | 0;
                    a[n2 + 3 >> 0] = a[o2 >> 0] | 0;
                    h2 = h2 + (k2 << 6) + 28 | 0;
                    m2 = m2 + (k2 << 6) + 28 | 0;
                    a[m2 >> 0] = a[h2 + 3 >> 0] | 0;
                    a[m2 + 1 >> 0] = a[h2 + 2 >> 0] | 0;
                    a[m2 + 2 >> 0] = a[h2 + 1 >> 0] | 0;
                    a[m2 + 3 >> 0] = a[h2 >> 0] | 0;
                    j2 = c[d2 + 96 >> 2] | 0;
                    m2 = dH(c[j2 + (k2 << 6) + 32 >> 2] | 0) | 0;
                    h2 = c[f2 + 96 >> 2] | 0;
                    c[h2 + (k2 << 6) + 32 >> 2] = m2;
                    c[h2 + (k2 << 6) + 36 >> 2] = dH(c[j2 + (k2 << 6) + 36 >> 2] | 0) | 0;
                    c[h2 + (k2 << 6) + 40 >> 2] = dH(c[j2 + (k2 << 6) + 40 >> 2] | 0) | 0;
                    k2 = k2 + 1 | 0;
                  } while ((k2 | 0) != (l2 | 0));
                } else
                  h2 = f2 + 172 | 0;
              else if ((l2 | 0) > 0) {
                h2 = f2 + 172 | 0;
                j2 = c[d2 + 96 >> 2] | 0;
                k2 = 0;
                do {
                  h2 = h2 + (k2 << 6) | 0;
                  o2 = j2 + (k2 << 6) | 0;
                  c[h2 >> 2] = c[o2 >> 2];
                  c[h2 + 4 >> 2] = c[o2 + 4 >> 2];
                  c[h2 + 8 >> 2] = c[o2 + 8 >> 2];
                  c[h2 + 12 >> 2] = c[o2 + 12 >> 2];
                  h2 = (c[f2 + 96 >> 2] | 0) + (k2 << 6) + 16 | 0;
                  o2 = (c[d2 + 96 >> 2] | 0) + (k2 << 6) + 16 | 0;
                  c[h2 >> 2] = c[o2 >> 2];
                  c[h2 + 4 >> 2] = c[o2 + 4 >> 2];
                  c[h2 + 8 >> 2] = c[o2 + 8 >> 2];
                  c[h2 + 12 >> 2] = c[o2 + 12 >> 2];
                  j2 = c[d2 + 96 >> 2] | 0;
                  h2 = c[f2 + 96 >> 2] | 0;
                  c[h2 + (k2 << 6) + 32 >> 2] = c[j2 + (k2 << 6) + 32 >> 2];
                  c[h2 + (k2 << 6) + 36 >> 2] = c[j2 + (k2 << 6) + 36 >> 2];
                  c[h2 + (k2 << 6) + 40 >> 2] = c[j2 + (k2 << 6) + 40 >> 2];
                  k2 = k2 + 1 | 0;
                } while ((k2 | 0) != (l2 | 0));
              } else
                h2 = f2 + 172 | 0;
              if (h2 | 0) {
                if (a[f2 + 100 >> 0] | 0) {
                  c[5638] = (c[5638] | 0) + 1;
                  rG(c[h2 + -4 >> 2] | 0);
                }
                c[f2 + 96 >> 2] = 0;
              }
              ;
              c[f2 + 88 >> 2] = 0;
              c[f2 + 88 + 4 >> 2] = 0;
              c[f2 + 88 + 8 >> 2] = 0;
              a[f2 + 88 + 12 >> 0] = 0;
              h2 = l2 << 6;
            } else {
              h2 = c[f2 + 136 >> 2] | 0;
              if (h2 | 0) {
                if (a[f2 + 140 >> 0] | 0) {
                  c[5638] = (c[5638] | 0) + 1;
                  rG(c[h2 + -4 >> 2] | 0);
                }
                c[f2 + 136 >> 2] = 0;
              }
              ;
              c[f2 + 128 >> 2] = 0;
              c[f2 + 128 + 4 >> 2] = 0;
              c[f2 + 128 + 8 >> 2] = 0;
              a[f2 + 128 + 12 >> 0] = 0;
              c[f2 + 136 >> 2] = f2 + 172;
              c[f2 + 128 >> 2] = l2;
              c[f2 + 132 >> 2] = l2;
              if (i2) {
                if ((l2 | 0) > 0) {
                  h2 = c[d2 + 136 >> 2] | 0;
                  j2 = 0;
                  do {
                    o2 = e[h2 + (j2 << 4) >> 1] | 0;
                    b[f2 + 172 + (j2 << 4) >> 1] = o2 >>> 8 | o2 << 8;
                    o2 = e[h2 + (j2 << 4) + 2 >> 1] | 0;
                    b[f2 + 172 + (j2 << 4) + 2 >> 1] = o2 >>> 8 | o2 << 8;
                    o2 = e[h2 + (j2 << 4) + 4 >> 1] | 0;
                    b[f2 + 172 + (j2 << 4) + 4 >> 1] = o2 >>> 8 | o2 << 8;
                    o2 = e[h2 + (j2 << 4) + 6 >> 1] | 0;
                    b[f2 + 172 + (j2 << 4) + 6 >> 1] = o2 >>> 8 | o2 << 8;
                    o2 = e[h2 + (j2 << 4) + 8 >> 1] | 0;
                    b[f2 + 172 + (j2 << 4) + 8 >> 1] = o2 >>> 8 | o2 << 8;
                    o2 = e[h2 + (j2 << 4) + 10 >> 1] | 0;
                    b[f2 + 172 + (j2 << 4) + 10 >> 1] = o2 >>> 8 | o2 << 8;
                    c[f2 + 172 + (j2 << 4) + 12 >> 2] = dH(c[h2 + (j2 << 4) + 12 >> 2] | 0) | 0;
                    j2 = j2 + 1 | 0;
                  } while ((j2 | 0) != (l2 | 0));
                }
              } else if ((l2 | 0) > 0) {
                h2 = c[d2 + 136 >> 2] | 0;
                j2 = 0;
                do {
                  b[f2 + 172 + (j2 << 4) >> 1] = b[h2 + (j2 << 4) >> 1] | 0;
                  b[f2 + 172 + (j2 << 4) + 2 >> 1] = b[h2 + (j2 << 4) + 2 >> 1] | 0;
                  b[f2 + 172 + (j2 << 4) + 4 >> 1] = b[h2 + (j2 << 4) + 4 >> 1] | 0;
                  b[f2 + 172 + (j2 << 4) + 6 >> 1] = b[h2 + (j2 << 4) + 6 >> 1] | 0;
                  b[f2 + 172 + (j2 << 4) + 8 >> 1] = b[h2 + (j2 << 4) + 8 >> 1] | 0;
                  b[f2 + 172 + (j2 << 4) + 10 >> 1] = b[h2 + (j2 << 4) + 10 >> 1] | 0;
                  c[f2 + 172 + (j2 << 4) + 12 >> 2] = c[h2 + (j2 << 4) + 12 >> 2];
                  j2 = j2 + 1 | 0;
                } while ((j2 | 0) != (l2 | 0));
              }
              if (c[f2 + 136 >> 2] | 0)
                c[f2 + 136 >> 2] = 0;
              c[f2 + 128 >> 2] = 0;
              c[f2 + 128 + 4 >> 2] = 0;
              c[f2 + 128 + 8 >> 2] = 0;
              a[f2 + 128 + 12 >> 0] = 0;
              h2 = l2 << 4;
            }
            l2 = f2 + 172 + h2 | 0;
            h2 = c[d2 + 168 >> 2] | 0;
            j2 = c[f2 + 160 >> 2] | 0;
            if (j2 | 0) {
              if (a[f2 + 164 >> 0] | 0) {
                c[5638] = (c[5638] | 0) + 1;
                rG(c[j2 + -4 >> 2] | 0);
              }
              c[f2 + 160 >> 2] = 0;
            }
            ;
            c[f2 + 152 >> 2] = 0;
            c[f2 + 152 + 4 >> 2] = 0;
            c[f2 + 152 + 8 >> 2] = 0;
            a[f2 + 152 + 12 >> 0] = 0;
            c[f2 + 160 >> 2] = l2;
            c[f2 + 152 >> 2] = h2;
            c[f2 + 156 >> 2] = h2;
            k2 = c[d2 + 168 >> 2] | 0;
            if (i2) {
              if ((k2 | 0) > 0) {
                h2 = c[d2 + 160 >> 2] | 0;
                j2 = 0;
                do {
                  o2 = e[h2 + (j2 << 5) >> 1] | 0;
                  b[l2 + (j2 << 5) >> 1] = o2 >>> 8 | o2 << 8;
                  o2 = e[h2 + (j2 << 5) + 2 >> 1] | 0;
                  b[l2 + (j2 << 5) + 2 >> 1] = o2 >>> 8 | o2 << 8;
                  o2 = e[h2 + (j2 << 5) + 4 >> 1] | 0;
                  b[l2 + (j2 << 5) + 4 >> 1] = o2 >>> 8 | o2 << 8;
                  o2 = e[h2 + (j2 << 5) + 6 >> 1] | 0;
                  b[l2 + (j2 << 5) + 6 >> 1] = o2 >>> 8 | o2 << 8;
                  o2 = e[h2 + (j2 << 5) + 8 >> 1] | 0;
                  b[l2 + (j2 << 5) + 8 >> 1] = o2 >>> 8 | o2 << 8;
                  o2 = e[h2 + (j2 << 5) + 10 >> 1] | 0;
                  b[l2 + (j2 << 5) + 10 >> 1] = o2 >>> 8 | o2 << 8;
                  c[l2 + (j2 << 5) + 12 >> 2] = dH(c[h2 + (j2 << 5) + 12 >> 2] | 0) | 0;
                  c[l2 + (j2 << 5) + 16 >> 2] = dH(c[h2 + (j2 << 5) + 16 >> 2] | 0) | 0;
                  j2 = j2 + 1 | 0;
                } while ((j2 | 0) != (k2 | 0));
              }
            } else if ((k2 | 0) > 0) {
              h2 = c[d2 + 160 >> 2] | 0;
              j2 = 0;
              do {
                b[l2 + (j2 << 5) >> 1] = b[h2 + (j2 << 5) >> 1] | 0;
                b[l2 + (j2 << 5) + 2 >> 1] = b[h2 + (j2 << 5) + 2 >> 1] | 0;
                b[l2 + (j2 << 5) + 4 >> 1] = b[h2 + (j2 << 5) + 4 >> 1] | 0;
                b[l2 + (j2 << 5) + 6 >> 1] = b[h2 + (j2 << 5) + 6 >> 1] | 0;
                b[l2 + (j2 << 5) + 8 >> 1] = b[h2 + (j2 << 5) + 8 >> 1] | 0;
                b[l2 + (j2 << 5) + 10 >> 1] = b[h2 + (j2 << 5) + 10 >> 1] | 0;
                c[l2 + (j2 << 5) + 12 >> 2] = c[h2 + (j2 << 5) + 12 >> 2];
                c[l2 + (j2 << 5) + 16 >> 2] = c[h2 + (j2 << 5) + 16 >> 2];
                c[l2 + (j2 << 5) + 20 >> 2] = 0;
                c[l2 + (j2 << 5) + 24 >> 2] = 0;
                c[l2 + (j2 << 5) + 28 >> 2] = 0;
                j2 = j2 + 1 | 0;
              } while ((j2 | 0) < (c[d2 + 168 >> 2] | 0));
            }
            if (!(c[f2 + 160 >> 2] | 0)) {
              c[f2 >> 2] = 0;
              c[f2 + 152 >> 2] = 0;
              c[f2 + 152 + 4 >> 2] = 0;
              c[f2 + 152 + 8 >> 2] = 0;
              a[f2 + 152 + 12 >> 0] = 0;
              return 1;
            }
            c[f2 + 160 >> 2] = 0;
            c[f2 >> 2] = 0;
            c[f2 + 152 >> 2] = 0;
            c[f2 + 152 + 4 >> 2] = 0;
            c[f2 + 152 + 8 >> 2] = 0;
            a[f2 + 152 + 12 >> 0] = 0;
            return 1;
          }
          function he(a2) {
            a2 = a2 | 0;
            return 84;
          }
          function ie(a2, e2, f2) {
            a2 = a2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            var g2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0;
            c[e2 + 16 >> 2] = c[a2 + 20 >> 2];
            c[e2 + 20 >> 2] = c[a2 + 24 >> 2];
            c[e2 + 24 >> 2] = c[a2 + 28 >> 2];
            c[e2 + 28 >> 2] = c[a2 + 32 >> 2];
            c[e2 >> 2] = c[a2 + 4 >> 2];
            c[e2 + 4 >> 2] = c[a2 + 8 >> 2];
            c[e2 + 8 >> 2] = c[a2 + 12 >> 2];
            c[e2 + 12 >> 2] = c[a2 + 16 >> 2];
            c[e2 + 32 >> 2] = c[a2 + 36 >> 2];
            c[e2 + 36 >> 2] = c[a2 + 40 >> 2];
            c[e2 + 40 >> 2] = c[a2 + 44 >> 2];
            c[e2 + 44 >> 2] = c[a2 + 48 >> 2];
            c[e2 + 48 >> 2] = c[a2 + 56 >> 2];
            c[e2 + 52 >> 2] = d[a2 + 60 >> 0];
            k2 = c[a2 + 88 >> 2] | 0;
            c[e2 + 56 >> 2] = k2;
            if (k2) {
              k2 = Ob[c[(c[f2 >> 2] | 0) + 28 >> 2] & 31](f2, c[a2 + 96 >> 2] | 0) | 0;
              c[e2 + 64 >> 2] = k2;
              if (k2 | 0) {
                h2 = c[a2 + 88 >> 2] | 0;
                k2 = Eb[c[(c[f2 >> 2] | 0) + 16 >> 2] & 63](f2, 48, h2) | 0;
                if ((h2 | 0) > 0) {
                  g2 = c[a2 + 96 >> 2] | 0;
                  i2 = 0;
                  j2 = c[k2 + 8 >> 2] | 0;
                  while (1) {
                    c[j2 + 16 >> 2] = c[g2 + (i2 << 6) + 16 >> 2];
                    c[j2 + 20 >> 2] = c[g2 + (i2 << 6) + 20 >> 2];
                    c[j2 + 24 >> 2] = c[g2 + (i2 << 6) + 24 >> 2];
                    c[j2 + 28 >> 2] = c[g2 + (i2 << 6) + 28 >> 2];
                    c[j2 >> 2] = c[g2 + (i2 << 6) >> 2];
                    c[j2 + 4 >> 2] = c[g2 + (i2 << 6) + 4 >> 2];
                    c[j2 + 8 >> 2] = c[g2 + (i2 << 6) + 8 >> 2];
                    c[j2 + 12 >> 2] = c[g2 + (i2 << 6) + 12 >> 2];
                    c[j2 + 32 >> 2] = c[g2 + (i2 << 6) + 32 >> 2];
                    c[j2 + 36 >> 2] = c[g2 + (i2 << 6) + 36 >> 2];
                    c[j2 + 40 >> 2] = c[g2 + (i2 << 6) + 40 >> 2];
                    i2 = i2 + 1 | 0;
                    if ((i2 | 0) == (h2 | 0))
                      break;
                    else
                      j2 = j2 + 48 | 0;
                  }
                } else
                  g2 = c[a2 + 96 >> 2] | 0;
                pb[c[(c[f2 >> 2] | 0) + 20 >> 2] & 31](f2, k2, 8969, 1497453121, g2);
              }
            } else
              c[e2 + 64 >> 2] = 0;
            k2 = c[a2 + 128 >> 2] | 0;
            c[e2 + 60 >> 2] = k2;
            if (k2) {
              k2 = Ob[c[(c[f2 >> 2] | 0) + 28 >> 2] & 31](f2, c[a2 + 136 >> 2] | 0) | 0;
              c[e2 + 68 >> 2] = k2;
              if (k2 | 0) {
                h2 = c[a2 + 128 >> 2] | 0;
                k2 = Eb[c[(c[f2 >> 2] | 0) + 16 >> 2] & 63](f2, 16, h2) | 0;
                if ((h2 | 0) > 0) {
                  g2 = c[a2 + 136 >> 2] | 0;
                  i2 = 0;
                  j2 = c[k2 + 8 >> 2] | 0;
                  while (1) {
                    c[j2 + 12 >> 2] = c[g2 + (i2 << 4) + 12 >> 2];
                    b[j2 + 6 >> 1] = b[g2 + (i2 << 4) + 6 >> 1] | 0;
                    b[j2 + 8 >> 1] = b[g2 + (i2 << 4) + 8 >> 1] | 0;
                    b[j2 + 10 >> 1] = b[g2 + (i2 << 4) + 10 >> 1] | 0;
                    b[j2 >> 1] = b[g2 + (i2 << 4) >> 1] | 0;
                    b[j2 + 2 >> 1] = b[g2 + (i2 << 4) + 2 >> 1] | 0;
                    b[j2 + 4 >> 1] = b[g2 + (i2 << 4) + 4 >> 1] | 0;
                    i2 = i2 + 1 | 0;
                    if ((i2 | 0) == (h2 | 0))
                      break;
                    else
                      j2 = j2 + 16 | 0;
                  }
                } else
                  g2 = c[a2 + 136 >> 2] | 0;
                pb[c[(c[f2 >> 2] | 0) + 20 >> 2] & 31](f2, k2, 8992, 1497453121, g2);
              }
            } else
              c[e2 + 68 >> 2] = 0;
            c[e2 + 76 >> 2] = c[a2 + 144 >> 2];
            k2 = c[a2 + 152 >> 2] | 0;
            c[e2 + 80 >> 2] = k2;
            if (!k2) {
              c[e2 + 72 >> 2] = 0;
              return 9036;
            }
            k2 = Ob[c[(c[f2 >> 2] | 0) + 28 >> 2] & 31](f2, c[a2 + 160 >> 2] | 0) | 0;
            c[e2 + 72 >> 2] = k2;
            if (!k2)
              return 9036;
            j2 = c[a2 + 152 >> 2] | 0;
            k2 = Eb[c[(c[f2 >> 2] | 0) + 16 >> 2] & 63](f2, 20, j2) | 0;
            if ((j2 | 0) > 0) {
              g2 = c[a2 + 160 >> 2] | 0;
              h2 = 0;
              i2 = c[k2 + 8 >> 2] | 0;
              while (1) {
                b[i2 + 14 >> 1] = b[g2 + (h2 << 5) + 6 >> 1] | 0;
                b[i2 + 16 >> 1] = b[g2 + (h2 << 5) + 8 >> 1] | 0;
                b[i2 + 18 >> 1] = b[g2 + (h2 << 5) + 10 >> 1] | 0;
                b[i2 + 8 >> 1] = b[g2 + (h2 << 5) >> 1] | 0;
                b[i2 + 10 >> 1] = b[g2 + (h2 << 5) + 2 >> 1] | 0;
                b[i2 + 12 >> 1] = b[g2 + (h2 << 5) + 4 >> 1] | 0;
                c[i2 >> 2] = c[g2 + (h2 << 5) + 12 >> 2];
                c[i2 + 4 >> 2] = c[g2 + (h2 << 5) + 16 >> 2];
                h2 = h2 + 1 | 0;
                if ((h2 | 0) == (j2 | 0))
                  break;
                else
                  i2 = i2 + 20 | 0;
              }
            } else
              g2 = c[a2 + 160 >> 2] | 0;
            pb[c[(c[f2 >> 2] | 0) + 20 >> 2] & 31](f2, k2, 9015, 1497453121, g2);
            return 9036;
          }
          function je(d2, e2) {
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, g2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0;
            o2 = i;
            i = i + 112 | 0;
            c[d2 + 20 >> 2] = c[e2 + 16 >> 2];
            c[d2 + 24 >> 2] = c[e2 + 20 >> 2];
            c[d2 + 28 >> 2] = c[e2 + 24 >> 2];
            c[d2 + 32 >> 2] = c[e2 + 28 >> 2];
            c[d2 + 4 >> 2] = c[e2 >> 2];
            c[d2 + 8 >> 2] = c[e2 + 4 >> 2];
            c[d2 + 12 >> 2] = c[e2 + 8 >> 2];
            c[d2 + 16 >> 2] = c[e2 + 12 >> 2];
            c[d2 + 36 >> 2] = c[e2 + 32 >> 2];
            c[d2 + 40 >> 2] = c[e2 + 36 >> 2];
            c[d2 + 44 >> 2] = c[e2 + 40 >> 2];
            c[d2 + 48 >> 2] = c[e2 + 44 >> 2];
            c[d2 + 56 >> 2] = c[e2 + 48 >> 2];
            a[d2 + 60 >> 0] = (c[e2 + 52 >> 2] | 0) != 0 & 1;
            n2 = c[e2 + 56 >> 2] | 0;
            j2 = o2 + 48 | 0;
            l2 = j2 + 64 | 0;
            do {
              c[j2 >> 2] = 0;
              j2 = j2 + 4 | 0;
            } while ((j2 | 0) < (l2 | 0));
            m2 = c[d2 + 88 >> 2] | 0;
            if ((m2 | 0) < (n2 | 0)) {
              if ((c[d2 + 92 >> 2] | 0) < (n2 | 0)) {
                if (!n2) {
                  f2 = 0;
                  g2 = m2;
                } else {
                  c[5637] = (c[5637] | 0) + 1;
                  f2 = qG(n2 << 6 | 19) | 0;
                  if (!f2)
                    f2 = 0;
                  else {
                    c[(f2 + 4 + 15 & -16) + -4 >> 2] = f2;
                    f2 = f2 + 4 + 15 & -16;
                  }
                  g2 = c[d2 + 88 >> 2] | 0;
                }
                if ((g2 | 0) > 0) {
                  h2 = 0;
                  do {
                    j2 = f2 + (h2 << 6) | 0;
                    k2 = (c[d2 + 96 >> 2] | 0) + (h2 << 6) | 0;
                    l2 = j2 + 64 | 0;
                    do {
                      c[j2 >> 2] = c[k2 >> 2];
                      j2 = j2 + 4 | 0;
                      k2 = k2 + 4 | 0;
                    } while ((j2 | 0) < (l2 | 0));
                    h2 = h2 + 1 | 0;
                  } while ((h2 | 0) != (g2 | 0));
                }
                g2 = c[d2 + 96 >> 2] | 0;
                if (g2 | 0) {
                  if (a[d2 + 100 >> 0] | 0) {
                    c[5638] = (c[5638] | 0) + 1;
                    rG(c[g2 + -4 >> 2] | 0);
                  }
                  c[d2 + 96 >> 2] = 0;
                }
                a[d2 + 100 >> 0] = 1;
                c[d2 + 96 >> 2] = f2;
                c[d2 + 92 >> 2] = n2;
                g2 = d2 + 96 | 0;
              } else
                g2 = d2 + 96 | 0;
              f2 = m2;
              do {
                j2 = (c[g2 >> 2] | 0) + (f2 << 6) | 0;
                k2 = o2 + 48 | 0;
                l2 = j2 + 64 | 0;
                do {
                  c[j2 >> 2] = c[k2 >> 2];
                  j2 = j2 + 4 | 0;
                  k2 = k2 + 4 | 0;
                } while ((j2 | 0) < (l2 | 0));
                f2 = f2 + 1 | 0;
              } while ((f2 | 0) != (n2 | 0));
            }
            c[d2 + 88 >> 2] = n2;
            if ((n2 | 0) > 0) {
              f2 = c[d2 + 96 >> 2] | 0;
              g2 = 0;
              h2 = c[e2 + 64 >> 2] | 0;
              while (1) {
                c[f2 + (g2 << 6) + 16 >> 2] = c[h2 + 16 >> 2];
                c[f2 + (g2 << 6) + 20 >> 2] = c[h2 + 20 >> 2];
                c[f2 + (g2 << 6) + 24 >> 2] = c[h2 + 24 >> 2];
                c[f2 + (g2 << 6) + 28 >> 2] = c[h2 + 28 >> 2];
                c[f2 + (g2 << 6) >> 2] = c[h2 >> 2];
                c[f2 + (g2 << 6) + 4 >> 2] = c[h2 + 4 >> 2];
                c[f2 + (g2 << 6) + 8 >> 2] = c[h2 + 8 >> 2];
                c[f2 + (g2 << 6) + 12 >> 2] = c[h2 + 12 >> 2];
                c[f2 + (g2 << 6) + 32 >> 2] = c[h2 + 32 >> 2];
                c[f2 + (g2 << 6) + 36 >> 2] = c[h2 + 36 >> 2];
                c[f2 + (g2 << 6) + 40 >> 2] = c[h2 + 40 >> 2];
                g2 = g2 + 1 | 0;
                if ((g2 | 0) == (n2 | 0))
                  break;
                else
                  h2 = h2 + 48 | 0;
              }
            }
            k2 = c[e2 + 60 >> 2] | 0;
            c[o2 + 32 >> 2] = 0;
            c[o2 + 32 + 4 >> 2] = 0;
            c[o2 + 32 + 8 >> 2] = 0;
            c[o2 + 32 + 12 >> 2] = 0;
            j2 = c[d2 + 128 >> 2] | 0;
            if ((j2 | 0) < (k2 | 0)) {
              if ((c[d2 + 132 >> 2] | 0) < (k2 | 0)) {
                if (!k2) {
                  f2 = 0;
                  g2 = j2;
                } else {
                  c[5637] = (c[5637] | 0) + 1;
                  f2 = qG((k2 << 4 | 3) + 16 | 0) | 0;
                  if (!f2)
                    f2 = 0;
                  else {
                    c[(f2 + 4 + 15 & -16) + -4 >> 2] = f2;
                    f2 = f2 + 4 + 15 & -16;
                  }
                  g2 = c[d2 + 128 >> 2] | 0;
                }
                if ((g2 | 0) > 0) {
                  h2 = 0;
                  do {
                    n2 = f2 + (h2 << 4) | 0;
                    m2 = (c[d2 + 136 >> 2] | 0) + (h2 << 4) | 0;
                    c[n2 >> 2] = c[m2 >> 2];
                    c[n2 + 4 >> 2] = c[m2 + 4 >> 2];
                    c[n2 + 8 >> 2] = c[m2 + 8 >> 2];
                    c[n2 + 12 >> 2] = c[m2 + 12 >> 2];
                    h2 = h2 + 1 | 0;
                  } while ((h2 | 0) != (g2 | 0));
                }
                g2 = c[d2 + 136 >> 2] | 0;
                if (g2 | 0) {
                  if (a[d2 + 140 >> 0] | 0) {
                    c[5638] = (c[5638] | 0) + 1;
                    rG(c[g2 + -4 >> 2] | 0);
                  }
                  c[d2 + 136 >> 2] = 0;
                }
                a[d2 + 140 >> 0] = 1;
                c[d2 + 136 >> 2] = f2;
                c[d2 + 132 >> 2] = k2;
                g2 = d2 + 136 | 0;
              } else
                g2 = d2 + 136 | 0;
              f2 = j2;
              do {
                n2 = (c[g2 >> 2] | 0) + (f2 << 4) | 0;
                c[n2 >> 2] = c[o2 + 32 >> 2];
                c[n2 + 4 >> 2] = c[o2 + 32 + 4 >> 2];
                c[n2 + 8 >> 2] = c[o2 + 32 + 8 >> 2];
                c[n2 + 12 >> 2] = c[o2 + 32 + 12 >> 2];
                f2 = f2 + 1 | 0;
              } while ((f2 | 0) != (k2 | 0));
            }
            c[d2 + 128 >> 2] = k2;
            if ((k2 | 0) > 0) {
              f2 = c[d2 + 136 >> 2] | 0;
              g2 = 0;
              h2 = c[e2 + 68 >> 2] | 0;
              while (1) {
                c[f2 + (g2 << 4) + 12 >> 2] = c[h2 + 12 >> 2];
                b[f2 + (g2 << 4) + 6 >> 1] = b[h2 + 6 >> 1] | 0;
                b[f2 + (g2 << 4) + 8 >> 1] = b[h2 + 8 >> 1] | 0;
                b[f2 + (g2 << 4) + 10 >> 1] = b[h2 + 10 >> 1] | 0;
                b[f2 + (g2 << 4) >> 1] = b[h2 >> 1] | 0;
                b[f2 + (g2 << 4) + 2 >> 1] = b[h2 + 2 >> 1] | 0;
                b[f2 + (g2 << 4) + 4 >> 1] = b[h2 + 4 >> 1] | 0;
                g2 = g2 + 1 | 0;
                if ((g2 | 0) == (k2 | 0))
                  break;
                else
                  h2 = h2 + 16 | 0;
              }
            }
            c[d2 + 144 >> 2] = c[e2 + 76 >> 2];
            k2 = c[e2 + 80 >> 2] | 0;
            j2 = c[d2 + 152 >> 2] | 0;
            if ((j2 | 0) < (k2 | 0)) {
              if ((c[d2 + 156 >> 2] | 0) < (k2 | 0)) {
                if (!k2) {
                  f2 = 0;
                  g2 = j2;
                } else {
                  c[5637] = (c[5637] | 0) + 1;
                  f2 = qG(k2 << 5 | 19) | 0;
                  if (!f2)
                    f2 = 0;
                  else {
                    c[(f2 + 4 + 15 & -16) + -4 >> 2] = f2;
                    f2 = f2 + 4 + 15 & -16;
                  }
                  g2 = c[d2 + 152 >> 2] | 0;
                }
                if ((g2 | 0) > 0) {
                  h2 = 0;
                  do {
                    n2 = f2 + (h2 << 5) | 0;
                    m2 = (c[d2 + 160 >> 2] | 0) + (h2 << 5) | 0;
                    c[n2 >> 2] = c[m2 >> 2];
                    c[n2 + 4 >> 2] = c[m2 + 4 >> 2];
                    c[n2 + 8 >> 2] = c[m2 + 8 >> 2];
                    c[n2 + 12 >> 2] = c[m2 + 12 >> 2];
                    c[n2 + 16 >> 2] = c[m2 + 16 >> 2];
                    c[n2 + 20 >> 2] = c[m2 + 20 >> 2];
                    c[n2 + 24 >> 2] = c[m2 + 24 >> 2];
                    c[n2 + 28 >> 2] = c[m2 + 28 >> 2];
                    h2 = h2 + 1 | 0;
                  } while ((h2 | 0) != (g2 | 0));
                }
                g2 = c[d2 + 160 >> 2] | 0;
                if (g2 | 0) {
                  if (a[d2 + 164 >> 0] | 0) {
                    c[5638] = (c[5638] | 0) + 1;
                    rG(c[g2 + -4 >> 2] | 0);
                  }
                  c[d2 + 160 >> 2] = 0;
                }
                a[d2 + 164 >> 0] = 1;
                c[d2 + 160 >> 2] = f2;
                c[d2 + 156 >> 2] = k2;
                g2 = d2 + 160 | 0;
              } else
                g2 = d2 + 160 | 0;
              f2 = j2;
              do {
                n2 = (c[g2 >> 2] | 0) + (f2 << 5) | 0;
                c[n2 >> 2] = c[o2 >> 2];
                c[n2 + 4 >> 2] = c[o2 + 4 >> 2];
                c[n2 + 8 >> 2] = c[o2 + 8 >> 2];
                c[n2 + 12 >> 2] = c[o2 + 12 >> 2];
                c[n2 + 16 >> 2] = c[o2 + 16 >> 2];
                c[n2 + 20 >> 2] = c[o2 + 20 >> 2];
                c[n2 + 24 >> 2] = c[o2 + 24 >> 2];
                c[n2 + 28 >> 2] = c[o2 + 28 >> 2];
                f2 = f2 + 1 | 0;
              } while ((f2 | 0) != (k2 | 0));
            }
            c[d2 + 152 >> 2] = k2;
            if ((k2 | 0) <= 0) {
              i = o2;
              return;
            }
            g2 = c[d2 + 160 >> 2] | 0;
            h2 = 0;
            f2 = c[e2 + 72 >> 2] | 0;
            while (1) {
              b[g2 + (h2 << 5) + 6 >> 1] = b[f2 + 14 >> 1] | 0;
              b[g2 + (h2 << 5) + 8 >> 1] = b[f2 + 16 >> 1] | 0;
              b[g2 + (h2 << 5) + 10 >> 1] = b[f2 + 18 >> 1] | 0;
              b[g2 + (h2 << 5) >> 1] = b[f2 + 8 >> 1] | 0;
              b[g2 + (h2 << 5) + 2 >> 1] = b[f2 + 10 >> 1] | 0;
              b[g2 + (h2 << 5) + 4 >> 1] = b[f2 + 12 >> 1] | 0;
              c[g2 + (h2 << 5) + 12 >> 2] = c[f2 >> 2];
              c[g2 + (h2 << 5) + 16 >> 2] = c[f2 + 4 >> 2];
              h2 = h2 + 1 | 0;
              if ((h2 | 0) == (k2 | 0))
                break;
              else
                f2 = f2 + 20 | 0;
            }
            i = o2;
            return;
          }
          function ke(d2, e2) {
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0;
            q2 = i;
            i = i + 112 | 0;
            g[d2 + 20 >> 2] = +h[e2 + 32 >> 3];
            g[d2 + 24 >> 2] = +h[e2 + 40 >> 3];
            g[d2 + 28 >> 2] = +h[e2 + 48 >> 3];
            g[d2 + 32 >> 2] = +h[e2 + 56 >> 3];
            g[d2 + 4 >> 2] = +h[e2 >> 3];
            g[d2 + 8 >> 2] = +h[e2 + 8 >> 3];
            g[d2 + 12 >> 2] = +h[e2 + 16 >> 3];
            g[d2 + 16 >> 2] = +h[e2 + 24 >> 3];
            g[d2 + 36 >> 2] = +h[e2 + 64 >> 3];
            g[d2 + 40 >> 2] = +h[e2 + 72 >> 3];
            g[d2 + 44 >> 2] = +h[e2 + 80 >> 3];
            g[d2 + 48 >> 2] = +h[e2 + 88 >> 3];
            c[d2 + 56 >> 2] = c[e2 + 96 >> 2];
            a[d2 + 60 >> 0] = (c[e2 + 100 >> 2] | 0) != 0 & 1;
            p2 = c[e2 + 104 >> 2] | 0;
            l2 = q2 + 48 | 0;
            n2 = l2 + 64 | 0;
            do {
              c[l2 >> 2] = 0;
              l2 = l2 + 4 | 0;
            } while ((l2 | 0) < (n2 | 0));
            o2 = c[d2 + 88 >> 2] | 0;
            if ((o2 | 0) < (p2 | 0)) {
              if ((c[d2 + 92 >> 2] | 0) < (p2 | 0)) {
                if (!p2) {
                  f2 = 0;
                  j2 = o2;
                } else {
                  c[5637] = (c[5637] | 0) + 1;
                  f2 = qG(p2 << 6 | 19) | 0;
                  if (!f2)
                    f2 = 0;
                  else {
                    c[(f2 + 4 + 15 & -16) + -4 >> 2] = f2;
                    f2 = f2 + 4 + 15 & -16;
                  }
                  j2 = c[d2 + 88 >> 2] | 0;
                }
                if ((j2 | 0) > 0) {
                  k2 = 0;
                  do {
                    l2 = f2 + (k2 << 6) | 0;
                    m2 = (c[d2 + 96 >> 2] | 0) + (k2 << 6) | 0;
                    n2 = l2 + 64 | 0;
                    do {
                      c[l2 >> 2] = c[m2 >> 2];
                      l2 = l2 + 4 | 0;
                      m2 = m2 + 4 | 0;
                    } while ((l2 | 0) < (n2 | 0));
                    k2 = k2 + 1 | 0;
                  } while ((k2 | 0) != (j2 | 0));
                }
                j2 = c[d2 + 96 >> 2] | 0;
                if (j2 | 0) {
                  if (a[d2 + 100 >> 0] | 0) {
                    c[5638] = (c[5638] | 0) + 1;
                    rG(c[j2 + -4 >> 2] | 0);
                  }
                  c[d2 + 96 >> 2] = 0;
                }
                a[d2 + 100 >> 0] = 1;
                c[d2 + 96 >> 2] = f2;
                c[d2 + 92 >> 2] = p2;
                j2 = d2 + 96 | 0;
              } else
                j2 = d2 + 96 | 0;
              f2 = o2;
              do {
                l2 = (c[j2 >> 2] | 0) + (f2 << 6) | 0;
                m2 = q2 + 48 | 0;
                n2 = l2 + 64 | 0;
                do {
                  c[l2 >> 2] = c[m2 >> 2];
                  l2 = l2 + 4 | 0;
                  m2 = m2 + 4 | 0;
                } while ((l2 | 0) < (n2 | 0));
                f2 = f2 + 1 | 0;
              } while ((f2 | 0) != (p2 | 0));
            }
            c[d2 + 88 >> 2] = p2;
            if ((p2 | 0) > 0) {
              f2 = c[d2 + 96 >> 2] | 0;
              j2 = 0;
              k2 = c[e2 + 112 >> 2] | 0;
              while (1) {
                g[f2 + (j2 << 6) + 16 >> 2] = +h[k2 + 32 >> 3];
                g[f2 + (j2 << 6) + 20 >> 2] = +h[k2 + 40 >> 3];
                g[f2 + (j2 << 6) + 24 >> 2] = +h[k2 + 48 >> 3];
                g[f2 + (j2 << 6) + 28 >> 2] = +h[k2 + 56 >> 3];
                g[f2 + (j2 << 6) >> 2] = +h[k2 >> 3];
                g[f2 + (j2 << 6) + 4 >> 2] = +h[k2 + 8 >> 3];
                g[f2 + (j2 << 6) + 8 >> 2] = +h[k2 + 16 >> 3];
                g[f2 + (j2 << 6) + 12 >> 2] = +h[k2 + 24 >> 3];
                c[f2 + (j2 << 6) + 32 >> 2] = c[k2 + 64 >> 2];
                c[f2 + (j2 << 6) + 36 >> 2] = c[k2 + 68 >> 2];
                c[f2 + (j2 << 6) + 40 >> 2] = c[k2 + 72 >> 2];
                j2 = j2 + 1 | 0;
                if ((j2 | 0) == (p2 | 0))
                  break;
                else
                  k2 = k2 + 80 | 0;
              }
            }
            m2 = c[e2 + 108 >> 2] | 0;
            c[q2 + 32 >> 2] = 0;
            c[q2 + 32 + 4 >> 2] = 0;
            c[q2 + 32 + 8 >> 2] = 0;
            c[q2 + 32 + 12 >> 2] = 0;
            l2 = c[d2 + 128 >> 2] | 0;
            if ((l2 | 0) < (m2 | 0)) {
              if ((c[d2 + 132 >> 2] | 0) < (m2 | 0)) {
                if (!m2) {
                  f2 = 0;
                  j2 = l2;
                } else {
                  c[5637] = (c[5637] | 0) + 1;
                  f2 = qG((m2 << 4 | 3) + 16 | 0) | 0;
                  if (!f2)
                    f2 = 0;
                  else {
                    c[(f2 + 4 + 15 & -16) + -4 >> 2] = f2;
                    f2 = f2 + 4 + 15 & -16;
                  }
                  j2 = c[d2 + 128 >> 2] | 0;
                }
                if ((j2 | 0) > 0) {
                  k2 = 0;
                  do {
                    p2 = f2 + (k2 << 4) | 0;
                    o2 = (c[d2 + 136 >> 2] | 0) + (k2 << 4) | 0;
                    c[p2 >> 2] = c[o2 >> 2];
                    c[p2 + 4 >> 2] = c[o2 + 4 >> 2];
                    c[p2 + 8 >> 2] = c[o2 + 8 >> 2];
                    c[p2 + 12 >> 2] = c[o2 + 12 >> 2];
                    k2 = k2 + 1 | 0;
                  } while ((k2 | 0) != (j2 | 0));
                }
                j2 = c[d2 + 136 >> 2] | 0;
                if (j2 | 0) {
                  if (a[d2 + 140 >> 0] | 0) {
                    c[5638] = (c[5638] | 0) + 1;
                    rG(c[j2 + -4 >> 2] | 0);
                  }
                  c[d2 + 136 >> 2] = 0;
                }
                a[d2 + 140 >> 0] = 1;
                c[d2 + 136 >> 2] = f2;
                c[d2 + 132 >> 2] = m2;
                j2 = d2 + 136 | 0;
              } else
                j2 = d2 + 136 | 0;
              f2 = l2;
              do {
                p2 = (c[j2 >> 2] | 0) + (f2 << 4) | 0;
                c[p2 >> 2] = c[q2 + 32 >> 2];
                c[p2 + 4 >> 2] = c[q2 + 32 + 4 >> 2];
                c[p2 + 8 >> 2] = c[q2 + 32 + 8 >> 2];
                c[p2 + 12 >> 2] = c[q2 + 32 + 12 >> 2];
                f2 = f2 + 1 | 0;
              } while ((f2 | 0) != (m2 | 0));
            }
            c[d2 + 128 >> 2] = m2;
            if ((m2 | 0) > 0) {
              f2 = c[d2 + 136 >> 2] | 0;
              j2 = 0;
              k2 = c[e2 + 116 >> 2] | 0;
              while (1) {
                c[f2 + (j2 << 4) + 12 >> 2] = c[k2 + 12 >> 2];
                b[f2 + (j2 << 4) + 6 >> 1] = b[k2 + 6 >> 1] | 0;
                b[f2 + (j2 << 4) + 8 >> 1] = b[k2 + 8 >> 1] | 0;
                b[f2 + (j2 << 4) + 10 >> 1] = b[k2 + 10 >> 1] | 0;
                b[f2 + (j2 << 4) >> 1] = b[k2 >> 1] | 0;
                b[f2 + (j2 << 4) + 2 >> 1] = b[k2 + 2 >> 1] | 0;
                b[f2 + (j2 << 4) + 4 >> 1] = b[k2 + 4 >> 1] | 0;
                j2 = j2 + 1 | 0;
                if ((j2 | 0) == (m2 | 0))
                  break;
                else
                  k2 = k2 + 16 | 0;
              }
            }
            c[d2 + 144 >> 2] = c[e2 + 120 >> 2];
            m2 = c[e2 + 124 >> 2] | 0;
            l2 = c[d2 + 152 >> 2] | 0;
            if ((l2 | 0) < (m2 | 0)) {
              if ((c[d2 + 156 >> 2] | 0) < (m2 | 0)) {
                if (!m2) {
                  f2 = 0;
                  j2 = l2;
                } else {
                  c[5637] = (c[5637] | 0) + 1;
                  f2 = qG(m2 << 5 | 19) | 0;
                  if (!f2)
                    f2 = 0;
                  else {
                    c[(f2 + 4 + 15 & -16) + -4 >> 2] = f2;
                    f2 = f2 + 4 + 15 & -16;
                  }
                  j2 = c[d2 + 152 >> 2] | 0;
                }
                if ((j2 | 0) > 0) {
                  k2 = 0;
                  do {
                    p2 = f2 + (k2 << 5) | 0;
                    o2 = (c[d2 + 160 >> 2] | 0) + (k2 << 5) | 0;
                    c[p2 >> 2] = c[o2 >> 2];
                    c[p2 + 4 >> 2] = c[o2 + 4 >> 2];
                    c[p2 + 8 >> 2] = c[o2 + 8 >> 2];
                    c[p2 + 12 >> 2] = c[o2 + 12 >> 2];
                    c[p2 + 16 >> 2] = c[o2 + 16 >> 2];
                    c[p2 + 20 >> 2] = c[o2 + 20 >> 2];
                    c[p2 + 24 >> 2] = c[o2 + 24 >> 2];
                    c[p2 + 28 >> 2] = c[o2 + 28 >> 2];
                    k2 = k2 + 1 | 0;
                  } while ((k2 | 0) != (j2 | 0));
                }
                j2 = c[d2 + 160 >> 2] | 0;
                if (j2 | 0) {
                  if (a[d2 + 164 >> 0] | 0) {
                    c[5638] = (c[5638] | 0) + 1;
                    rG(c[j2 + -4 >> 2] | 0);
                  }
                  c[d2 + 160 >> 2] = 0;
                }
                a[d2 + 164 >> 0] = 1;
                c[d2 + 160 >> 2] = f2;
                c[d2 + 156 >> 2] = m2;
                j2 = d2 + 160 | 0;
              } else
                j2 = d2 + 160 | 0;
              f2 = l2;
              do {
                p2 = (c[j2 >> 2] | 0) + (f2 << 5) | 0;
                c[p2 >> 2] = c[q2 >> 2];
                c[p2 + 4 >> 2] = c[q2 + 4 >> 2];
                c[p2 + 8 >> 2] = c[q2 + 8 >> 2];
                c[p2 + 12 >> 2] = c[q2 + 12 >> 2];
                c[p2 + 16 >> 2] = c[q2 + 16 >> 2];
                c[p2 + 20 >> 2] = c[q2 + 20 >> 2];
                c[p2 + 24 >> 2] = c[q2 + 24 >> 2];
                c[p2 + 28 >> 2] = c[q2 + 28 >> 2];
                f2 = f2 + 1 | 0;
              } while ((f2 | 0) != (m2 | 0));
            }
            c[d2 + 152 >> 2] = m2;
            if ((m2 | 0) <= 0) {
              i = q2;
              return;
            }
            j2 = c[d2 + 160 >> 2] | 0;
            k2 = 0;
            f2 = c[e2 + 128 >> 2] | 0;
            while (1) {
              b[j2 + (k2 << 5) + 6 >> 1] = b[f2 + 14 >> 1] | 0;
              b[j2 + (k2 << 5) + 8 >> 1] = b[f2 + 16 >> 1] | 0;
              b[j2 + (k2 << 5) + 10 >> 1] = b[f2 + 18 >> 1] | 0;
              b[j2 + (k2 << 5) >> 1] = b[f2 + 8 >> 1] | 0;
              b[j2 + (k2 << 5) + 2 >> 1] = b[f2 + 10 >> 1] | 0;
              b[j2 + (k2 << 5) + 4 >> 1] = b[f2 + 12 >> 1] | 0;
              c[j2 + (k2 << 5) + 12 >> 2] = c[f2 >> 2];
              c[j2 + (k2 << 5) + 16 >> 2] = c[f2 + 4 >> 2];
              k2 = k2 + 1 | 0;
              if ((k2 | 0) == (m2 | 0))
                break;
              else
                f2 = f2 + 20 | 0;
            }
            i = q2;
            return;
          }
          function le(d2, f2, h2) {
            d2 = d2 | 0;
            f2 = f2 | 0;
            h2 = h2 | 0;
            var j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0, N2 = 0;
            K2 = i;
            i = i + 112 | 0;
            H2 = c[d2 + 56 >> 2] | 0;
            if ((h2 - f2 | 0) == 1) {
              if (!(a[d2 + 60 >> 0] | 0)) {
                p2 = (c[d2 + 96 >> 2] | 0) + (H2 << 6) | 0;
                q2 = (c[d2 + 76 >> 2] | 0) + (f2 << 6) | 0;
                r2 = p2 + 64 | 0;
                do {
                  c[p2 >> 2] = c[q2 >> 2];
                  p2 = p2 + 4 | 0;
                  q2 = q2 + 4 | 0;
                } while ((p2 | 0) < (r2 | 0));
              } else {
                J2 = (c[d2 + 136 >> 2] | 0) + (H2 << 4) | 0;
                I2 = (c[d2 + 116 >> 2] | 0) + (f2 << 4) | 0;
                c[J2 >> 2] = c[I2 >> 2];
                c[J2 + 4 >> 2] = c[I2 + 4 >> 2];
                c[J2 + 8 >> 2] = c[I2 + 8 >> 2];
                c[J2 + 12 >> 2] = c[I2 + 12 >> 2];
              }
              c[d2 + 56 >> 2] = (c[d2 + 56 >> 2] | 0) + 1;
              i = K2;
              return;
            }
            if ((h2 | 0) > (f2 | 0)) {
              m2 = (a[d2 + 60 >> 0] | 0) == 0;
              if (m2) {
                j2 = c[d2 + 76 >> 2] | 0;
                k2 = f2;
                n2 = 0;
                o2 = 0;
                l2 = 0;
                do {
                  n2 = n2 + (+g[j2 + (k2 << 6) + 16 >> 2] + +g[j2 + (k2 << 6) >> 2]) * 0.5;
                  l2 = l2 + (+g[j2 + (k2 << 6) + 20 >> 2] + +g[j2 + (k2 << 6) + 4 >> 2]) * 0.5;
                  o2 = o2 + (+g[j2 + (k2 << 6) + 24 >> 2] + +g[j2 + (k2 << 6) + 8 >> 2]) * 0.5;
                  k2 = k2 + 1 | 0;
                } while ((k2 | 0) != (h2 | 0));
              } else {
                j2 = c[d2 + 116 >> 2] | 0;
                s2 = +g[d2 + 36 >> 2];
                t2 = +g[d2 + 40 >> 2];
                u2 = +g[d2 + 44 >> 2];
                x2 = +g[d2 + 4 >> 2];
                y2 = +g[d2 + 8 >> 2];
                z2 = +g[d2 + 12 >> 2];
                k2 = f2;
                n2 = 0;
                o2 = 0;
                l2 = 0;
                do {
                  n2 = n2 + (+(e[j2 + (k2 << 4) + 6 >> 1] | 0) / s2 + x2 + (+(e[j2 + (k2 << 4) >> 1] | 0) / s2 + x2)) * 0.5;
                  l2 = l2 + (+(e[j2 + (k2 << 4) + 8 >> 1] | 0) / t2 + y2 + (+(e[j2 + (k2 << 4) + 2 >> 1] | 0) / t2 + y2)) * 0.5;
                  o2 = o2 + (+(e[j2 + (k2 << 4) + 10 >> 1] | 0) / u2 + z2 + (+(e[j2 + (k2 << 4) + 4 >> 1] | 0) / u2 + z2)) * 0.5;
                  k2 = k2 + 1 | 0;
                } while ((k2 | 0) != (h2 | 0));
              }
              C2 = 1 / +(h2 - f2 | 0);
              E2 = C2 * n2;
              D2 = C2 * l2;
              C2 = C2 * o2;
              if (m2) {
                j2 = c[d2 + 76 >> 2] | 0;
                k2 = f2;
                o2 = 0;
                n2 = 0;
                l2 = 0;
                do {
                  x2 = (+g[j2 + (k2 << 6) + 16 >> 2] + +g[j2 + (k2 << 6) >> 2]) * 0.5 - E2;
                  y2 = (+g[j2 + (k2 << 6) + 20 >> 2] + +g[j2 + (k2 << 6) + 4 >> 2]) * 0.5 - D2;
                  z2 = (+g[j2 + (k2 << 6) + 24 >> 2] + +g[j2 + (k2 << 6) + 8 >> 2]) * 0.5 - C2;
                  o2 = o2 + x2 * x2;
                  l2 = l2 + y2 * y2;
                  n2 = n2 + z2 * z2;
                  k2 = k2 + 1 | 0;
                } while ((k2 | 0) != (h2 | 0));
                s2 = +(h2 - f2 | 0);
              } else {
                j2 = c[d2 + 116 >> 2] | 0;
                s2 = +g[d2 + 36 >> 2];
                t2 = +g[d2 + 40 >> 2];
                u2 = +g[d2 + 44 >> 2];
                x2 = +g[d2 + 4 >> 2];
                y2 = +g[d2 + 8 >> 2];
                z2 = +g[d2 + 12 >> 2];
                k2 = f2;
                o2 = 0;
                n2 = 0;
                l2 = 0;
                do {
                  N2 = (+(e[j2 + (k2 << 4) + 6 >> 1] | 0) / s2 + x2 + (+(e[j2 + (k2 << 4) >> 1] | 0) / s2 + x2)) * 0.5 - E2;
                  M2 = (+(e[j2 + (k2 << 4) + 8 >> 1] | 0) / t2 + y2 + (+(e[j2 + (k2 << 4) + 2 >> 1] | 0) / t2 + y2)) * 0.5 - D2;
                  L2 = (+(e[j2 + (k2 << 4) + 10 >> 1] | 0) / u2 + z2 + (+(e[j2 + (k2 << 4) + 4 >> 1] | 0) / u2 + z2)) * 0.5 - C2;
                  o2 = o2 + N2 * N2;
                  l2 = l2 + M2 * M2;
                  n2 = n2 + L2 * L2;
                  k2 = k2 + 1 | 0;
                } while ((k2 | 0) != (h2 | 0));
                s2 = +(h2 - f2 | 0);
              }
            } else {
              s2 = +(h2 - f2 | 0);
              o2 = 0;
              n2 = 0;
              l2 = 0;
            }
            N2 = 1 / (s2 + -1);
            M2 = N2 * o2;
            L2 = N2 * l2;
            N2 = N2 * n2;
            w2 = M2 < L2 ? L2 < N2 ? 2 : 1 : M2 < N2 ? 2 : 0;
            c[K2 + 16 >> 2] = 0;
            c[K2 + 16 + 4 >> 2] = 0;
            c[K2 + 16 + 8 >> 2] = 0;
            c[K2 + 16 + 12 >> 2] = 0;
            if ((h2 | 0) > (f2 | 0)) {
              if (!(a[d2 + 60 >> 0] | 0)) {
                j2 = c[d2 + 76 >> 2] | 0;
                o2 = 0;
                n2 = 0;
                l2 = 0;
                k2 = f2;
                do {
                  o2 = (+g[j2 + (k2 << 6) + 16 >> 2] + +g[j2 + (k2 << 6) >> 2]) * 0.5 + o2;
                  n2 = (+g[j2 + (k2 << 6) + 20 >> 2] + +g[j2 + (k2 << 6) + 4 >> 2]) * 0.5 + n2;
                  l2 = (+g[j2 + (k2 << 6) + 24 >> 2] + +g[j2 + (k2 << 6) + 8 >> 2]) * 0.5 + l2;
                  k2 = k2 + 1 | 0;
                } while ((k2 | 0) != (h2 | 0));
              } else {
                j2 = c[d2 + 116 >> 2] | 0;
                s2 = +g[d2 + 36 >> 2];
                t2 = +g[d2 + 40 >> 2];
                u2 = +g[d2 + 44 >> 2];
                x2 = +g[d2 + 4 >> 2];
                y2 = +g[d2 + 8 >> 2];
                z2 = +g[d2 + 12 >> 2];
                o2 = 0;
                n2 = 0;
                l2 = 0;
                k2 = f2;
                do {
                  o2 = (+(e[j2 + (k2 << 4) + 6 >> 1] | 0) / s2 + x2 + (+(e[j2 + (k2 << 4) >> 1] | 0) / s2 + x2)) * 0.5 + o2;
                  n2 = (+(e[j2 + (k2 << 4) + 8 >> 1] | 0) / t2 + y2 + (+(e[j2 + (k2 << 4) + 2 >> 1] | 0) / t2 + y2)) * 0.5 + n2;
                  l2 = (+(e[j2 + (k2 << 4) + 10 >> 1] | 0) / u2 + z2 + (+(e[j2 + (k2 << 4) + 4 >> 1] | 0) / u2 + z2)) * 0.5 + l2;
                  k2 = k2 + 1 | 0;
                } while ((k2 | 0) != (h2 | 0));
              }
              g[K2 + 16 >> 2] = o2;
              g[K2 + 16 + 4 >> 2] = n2;
              g[K2 + 16 + 8 >> 2] = l2;
              j2 = K2 + 16 | 0;
            } else {
              j2 = K2 + 16 | 0;
              o2 = 0;
              n2 = 0;
              l2 = 0;
            }
            g[j2 >> 2] = 1 / +(h2 - f2 | 0) * o2;
            g[K2 + 16 + 4 >> 2] = 1 / +(h2 - f2 | 0) * n2;
            g[K2 + 16 + 8 >> 2] = 1 / +(h2 - f2 | 0) * l2;
            x2 = +g[K2 + 16 + (w2 << 2) >> 2];
            if ((h2 | 0) > (f2 | 0)) {
              v2 = f2;
              j2 = f2;
              do {
                k2 = (a[d2 + 60 >> 0] | 0) == 0;
                if (k2) {
                  G2 = c[d2 + 76 >> 2] | 0;
                  l2 = +g[G2 + (v2 << 6) >> 2];
                  n2 = +g[G2 + (v2 << 6) + 16 >> 2];
                  o2 = +g[G2 + (v2 << 6) + 4 >> 2];
                  s2 = +g[G2 + (v2 << 6) + 20 >> 2];
                  t2 = +g[G2 + (v2 << 6) + 8 >> 2];
                  u2 = +g[G2 + (v2 << 6) + 24 >> 2];
                } else {
                  G2 = c[d2 + 116 >> 2] | 0;
                  o2 = +g[d2 + 36 >> 2];
                  t2 = +g[d2 + 40 >> 2];
                  N2 = +g[d2 + 44 >> 2];
                  n2 = +g[d2 + 4 >> 2];
                  s2 = +g[d2 + 8 >> 2];
                  u2 = +g[d2 + 12 >> 2];
                  l2 = +(e[G2 + (v2 << 4) >> 1] | 0) / o2 + n2;
                  n2 = +(e[G2 + (v2 << 4) + 6 >> 1] | 0) / o2 + n2;
                  o2 = +(e[G2 + (v2 << 4) + 2 >> 1] | 0) / t2 + s2;
                  s2 = +(e[G2 + (v2 << 4) + 8 >> 1] | 0) / t2 + s2;
                  t2 = +(e[G2 + (v2 << 4) + 4 >> 1] | 0) / N2 + u2;
                  u2 = +(e[G2 + (v2 << 4) + 10 >> 1] | 0) / N2 + u2;
                }
                g[K2 >> 2] = (n2 + l2) * 0.5;
                g[K2 + 4 >> 2] = (s2 + o2) * 0.5;
                g[K2 + 8 >> 2] = (u2 + t2) * 0.5;
                g[K2 + 12 >> 2] = 0;
                if (+g[K2 + (w2 << 2) >> 2] > x2) {
                  if (k2) {
                    k2 = c[d2 + 76 >> 2] | 0;
                    m2 = k2 + (v2 << 6) | 0;
                    p2 = K2 + 48 | 0;
                    q2 = m2;
                    r2 = p2 + 64 | 0;
                    do {
                      c[p2 >> 2] = c[q2 >> 2];
                      p2 = p2 + 4 | 0;
                      q2 = q2 + 4 | 0;
                    } while ((p2 | 0) < (r2 | 0));
                    p2 = m2;
                    q2 = k2 + (j2 << 6) | 0;
                    r2 = p2 + 64 | 0;
                    do {
                      c[p2 >> 2] = c[q2 >> 2];
                      p2 = p2 + 4 | 0;
                      q2 = q2 + 4 | 0;
                    } while ((p2 | 0) < (r2 | 0));
                    p2 = (c[d2 + 76 >> 2] | 0) + (j2 << 6) | 0;
                    q2 = K2 + 48 | 0;
                    r2 = p2 + 64 | 0;
                    do {
                      c[p2 >> 2] = c[q2 >> 2];
                      p2 = p2 + 4 | 0;
                      q2 = q2 + 4 | 0;
                    } while ((p2 | 0) < (r2 | 0));
                  } else {
                    F2 = c[d2 + 116 >> 2] | 0;
                    G2 = F2 + (v2 << 4) | 0;
                    c[K2 + 48 >> 2] = c[G2 >> 2];
                    c[K2 + 48 + 4 >> 2] = c[G2 + 4 >> 2];
                    c[K2 + 48 + 8 >> 2] = c[G2 + 8 >> 2];
                    c[K2 + 48 + 12 >> 2] = c[G2 + 12 >> 2];
                    F2 = F2 + (j2 << 4) | 0;
                    c[G2 >> 2] = c[F2 >> 2];
                    c[G2 + 4 >> 2] = c[F2 + 4 >> 2];
                    c[G2 + 8 >> 2] = c[F2 + 8 >> 2];
                    c[G2 + 12 >> 2] = c[F2 + 12 >> 2];
                    G2 = (c[d2 + 116 >> 2] | 0) + (j2 << 4) | 0;
                    c[G2 >> 2] = c[K2 + 48 >> 2];
                    c[G2 + 4 >> 2] = c[K2 + 48 + 4 >> 2];
                    c[G2 + 8 >> 2] = c[K2 + 48 + 8 >> 2];
                    c[G2 + 12 >> 2] = c[K2 + 48 + 12 >> 2];
                  }
                  j2 = j2 + 1 | 0;
                }
                v2 = v2 + 1 | 0;
              } while ((v2 | 0) != (h2 | 0));
            } else
              j2 = f2;
            if (!((j2 | 0) > (((h2 - f2 | 0) / 3 | 0) + f2 | 0) ? (j2 | 0) < (h2 + -1 - ((h2 - f2 | 0) / 3 | 0) | 0) : 0))
              j2 = (h2 - f2 >> 1) + f2 | 0;
            G2 = c[d2 + 56 >> 2] | 0;
            if (!(a[d2 + 60 >> 0] | 0)) {
              F2 = (c[d2 + 96 >> 2] | 0) + (G2 << 6) | 0;
              c[F2 >> 2] = c[d2 + 20 >> 2];
              c[F2 + 4 >> 2] = c[d2 + 20 + 4 >> 2];
              c[F2 + 8 >> 2] = c[d2 + 20 + 8 >> 2];
              c[F2 + 12 >> 2] = c[d2 + 20 + 12 >> 2];
            } else {
              F2 = c[d2 + 136 >> 2] | 0;
              M2 = (+g[d2 + 24 >> 2] - +g[d2 + 8 >> 2]) * +g[d2 + 40 >> 2];
              N2 = (+g[d2 + 28 >> 2] - +g[d2 + 12 >> 2]) * +g[d2 + 44 >> 2];
              b[F2 + (G2 << 4) >> 1] = ~~((+g[d2 + 20 >> 2] - +g[d2 + 4 >> 2]) * +g[d2 + 36 >> 2]) & 65534;
              b[F2 + (G2 << 4) + 2 >> 1] = ~~M2 & 65534;
              b[F2 + (G2 << 4) + 4 >> 1] = ~~N2 & 65534;
            }
            k2 = c[d2 + 56 >> 2] | 0;
            if (!(a[d2 + 60 >> 0] | 0)) {
              F2 = (c[d2 + 96 >> 2] | 0) + (k2 << 6) + 16 | 0;
              c[F2 >> 2] = c[d2 + 4 >> 2];
              c[F2 + 4 >> 2] = c[d2 + 4 + 4 >> 2];
              c[F2 + 8 >> 2] = c[d2 + 4 + 8 >> 2];
              c[F2 + 12 >> 2] = c[d2 + 4 + 12 >> 2];
            } else {
              F2 = c[d2 + 136 >> 2] | 0;
              L2 = +g[d2 + 4 >> 2];
              M2 = +g[d2 + 8 >> 2];
              N2 = +g[d2 + 12 >> 2];
              M2 = (M2 - M2) * +g[d2 + 40 >> 2];
              N2 = (N2 - N2) * +g[d2 + 44 >> 2];
              b[F2 + (k2 << 4) + 6 >> 1] = ~~((L2 - L2) * +g[d2 + 36 >> 2] + 1) & 65535 | 1;
              b[F2 + (k2 << 4) + 8 >> 1] = ~~(M2 + 1) & 65535 | 1;
              b[F2 + (k2 << 4) + 10 >> 1] = ~~(N2 + 1) & 65535 | 1;
            }
            F2 = c[d2 + 56 >> 2] | 0;
            if ((h2 | 0) > (f2 | 0)) {
              A2 = a[d2 + 60 >> 0] | 0;
              B2 = f2;
              do {
                if (!(A2 << 24 >> 24)) {
                  k2 = c[d2 + 76 >> 2] | 0;
                  l2 = +g[k2 + (B2 << 6) >> 2];
                  n2 = +g[k2 + (B2 << 6) + 4 >> 2];
                  o2 = +g[k2 + (B2 << 6) + 8 >> 2];
                  s2 = +g[k2 + (B2 << 6) + 12 >> 2];
                  t2 = +g[k2 + (B2 << 6) + 16 >> 2];
                  u2 = +g[k2 + (B2 << 6) + 20 >> 2];
                  x2 = +g[k2 + (B2 << 6) + 24 >> 2];
                  y2 = +g[k2 + (B2 << 6) + 28 >> 2];
                  k2 = c[d2 + 96 >> 2] | 0;
                  if (l2 < +g[k2 + (F2 << 6) >> 2])
                    g[k2 + (F2 << 6) >> 2] = l2;
                  if (n2 < +g[k2 + (F2 << 6) + 4 >> 2])
                    g[k2 + (F2 << 6) + 4 >> 2] = n2;
                  if (o2 < +g[k2 + (F2 << 6) + 8 >> 2])
                    g[k2 + (F2 << 6) + 8 >> 2] = o2;
                  if (s2 < +g[k2 + (F2 << 6) + 12 >> 2])
                    g[k2 + (F2 << 6) + 12 >> 2] = s2;
                  if (+g[k2 + (F2 << 6) + 16 >> 2] < t2)
                    g[k2 + (F2 << 6) + 16 >> 2] = t2;
                  if (+g[k2 + (F2 << 6) + 20 >> 2] < u2)
                    g[k2 + (F2 << 6) + 20 >> 2] = u2;
                  if (+g[k2 + (F2 << 6) + 24 >> 2] < x2)
                    g[k2 + (F2 << 6) + 24 >> 2] = x2;
                  if (+g[k2 + (F2 << 6) + 28 >> 2] < y2)
                    g[k2 + (F2 << 6) + 28 >> 2] = y2;
                } else {
                  q2 = c[d2 + 116 >> 2] | 0;
                  s2 = +g[d2 + 36 >> 2];
                  E2 = +g[d2 + 40 >> 2];
                  y2 = +g[d2 + 44 >> 2];
                  t2 = +g[d2 + 4 >> 2];
                  L2 = +g[d2 + 8 >> 2];
                  z2 = +g[d2 + 12 >> 2];
                  u2 = +g[d2 + 4 >> 2];
                  M2 = +g[d2 + 8 >> 2];
                  C2 = +g[d2 + 12 >> 2];
                  x2 = +g[d2 + 36 >> 2];
                  N2 = +g[d2 + 40 >> 2];
                  D2 = +g[d2 + 44 >> 2];
                  r2 = ~~((+(e[q2 + (B2 << 4) >> 1] | 0) / s2 + t2 - u2) * x2) & 65534;
                  k2 = ~~((+(e[q2 + (B2 << 4) + 4 >> 1] | 0) / y2 + z2 - C2) * D2) & 65534;
                  p2 = ~~((+(e[q2 + (B2 << 4) + 2 >> 1] | 0) / E2 + L2 - M2) * N2) & 65534;
                  v2 = (~~((+(e[q2 + (B2 << 4) + 6 >> 1] | 0) / s2 + t2 - u2) * x2 + 1) & 65535 | 1) & 65535;
                  m2 = (~~((+(e[q2 + (B2 << 4) + 10 >> 1] | 0) / y2 + z2 - C2) * D2 + 1) & 65535 | 1) & 65535;
                  q2 = (~~((+(e[q2 + (B2 << 4) + 8 >> 1] | 0) / E2 + L2 - M2) * N2 + 1) & 65535 | 1) & 65535;
                  w2 = c[d2 + 136 >> 2] | 0;
                  if ((e[w2 + (F2 << 4) >> 1] | 0) > (r2 & 65535))
                    b[w2 + (F2 << 4) >> 1] = r2;
                  if ((e[w2 + (F2 << 4) + 6 >> 1] | 0) < (v2 & 65535))
                    b[w2 + (F2 << 4) + 6 >> 1] = v2;
                  if ((e[w2 + (F2 << 4) + 2 >> 1] | 0) > (p2 & 65535))
                    b[w2 + (F2 << 4) + 2 >> 1] = p2;
                  if ((e[w2 + (F2 << 4) + 8 >> 1] | 0) < (q2 & 65535))
                    b[w2 + (F2 << 4) + 8 >> 1] = q2;
                  if ((e[w2 + (F2 << 4) + 4 >> 1] | 0) > (k2 & 65535))
                    b[w2 + (F2 << 4) + 4 >> 1] = k2;
                  if ((e[w2 + (F2 << 4) + 10 >> 1] | 0) < (m2 & 65535))
                    b[w2 + (F2 << 4) + 10 >> 1] = m2;
                }
                B2 = B2 + 1 | 0;
              } while ((B2 | 0) != (h2 | 0));
            }
            c[d2 + 56 >> 2] = F2 + 1;
            le(d2, f2, j2);
            A2 = c[d2 + 56 >> 2] | 0;
            le(d2, j2, h2);
            w2 = (c[d2 + 56 >> 2] | 0) - H2 | 0;
            j2 = a[d2 + 60 >> 0] | 0;
            if (j2 << 24 >> 24 != 0 & (w2 << 4 | 0) > 2048) {
              r2 = c[d2 + 136 >> 2] | 0;
              p2 = c[r2 + (F2 + 1 << 4) + 12 >> 2] | 0;
              p2 = (p2 | 0) > -1 ? 1 : 0 - p2 | 0;
              v2 = c[r2 + (A2 << 4) + 12 >> 2] | 0;
              v2 = (v2 | 0) > -1 ? 1 : 0 - v2 | 0;
              if ((p2 << 4 | 0) < 2049) {
                q2 = c[d2 + 152 >> 2] | 0;
                if ((q2 | 0) == (c[d2 + 156 >> 2] | 0) ? (I2 = q2 | 0 ? q2 << 1 : 1, (q2 | 0) < (I2 | 0)) : 0) {
                  if (!I2) {
                    j2 = 0;
                    k2 = q2;
                  } else {
                    c[5637] = (c[5637] | 0) + 1;
                    j2 = qG(I2 << 5 | 19) | 0;
                    if (!j2)
                      j2 = 0;
                    else {
                      c[(j2 + 4 + 15 & -16) + -4 >> 2] = j2;
                      j2 = j2 + 4 + 15 & -16;
                    }
                    k2 = c[d2 + 152 >> 2] | 0;
                  }
                  if ((k2 | 0) > 0) {
                    m2 = 0;
                    do {
                      h2 = j2 + (m2 << 5) | 0;
                      H2 = (c[d2 + 160 >> 2] | 0) + (m2 << 5) | 0;
                      c[h2 >> 2] = c[H2 >> 2];
                      c[h2 + 4 >> 2] = c[H2 + 4 >> 2];
                      c[h2 + 8 >> 2] = c[H2 + 8 >> 2];
                      c[h2 + 12 >> 2] = c[H2 + 12 >> 2];
                      c[h2 + 16 >> 2] = c[H2 + 16 >> 2];
                      c[h2 + 20 >> 2] = c[H2 + 20 >> 2];
                      c[h2 + 24 >> 2] = c[H2 + 24 >> 2];
                      c[h2 + 28 >> 2] = c[H2 + 28 >> 2];
                      m2 = m2 + 1 | 0;
                    } while ((m2 | 0) != (k2 | 0));
                  }
                  k2 = c[d2 + 160 >> 2] | 0;
                  if (k2 | 0) {
                    if (a[d2 + 164 >> 0] | 0) {
                      c[5638] = (c[5638] | 0) + 1;
                      rG(c[k2 + -4 >> 2] | 0);
                    }
                    c[d2 + 160 >> 2] = 0;
                  }
                  a[d2 + 164 >> 0] = 1;
                  c[d2 + 160 >> 2] = j2;
                  c[d2 + 156 >> 2] = I2;
                  j2 = c[d2 + 152 >> 2] | 0;
                } else
                  j2 = q2;
                c[d2 + 152 >> 2] = j2 + 1;
                I2 = (c[d2 + 160 >> 2] | 0) + (q2 << 5) | 0;
                c[I2 >> 2] = c[K2 + 48 >> 2];
                c[I2 + 4 >> 2] = c[K2 + 48 + 4 >> 2];
                c[I2 + 8 >> 2] = c[K2 + 48 + 8 >> 2];
                c[I2 + 12 >> 2] = c[K2 + 48 + 12 >> 2];
                c[I2 + 16 >> 2] = c[K2 + 48 + 16 >> 2];
                c[I2 + 20 >> 2] = c[K2 + 48 + 20 >> 2];
                c[I2 + 24 >> 2] = c[K2 + 48 + 24 >> 2];
                c[I2 + 28 >> 2] = c[K2 + 48 + 28 >> 2];
                I2 = c[d2 + 160 >> 2] | 0;
                b[I2 + (q2 << 5) >> 1] = b[r2 + (F2 + 1 << 4) >> 1] | 0;
                b[I2 + (q2 << 5) + 2 >> 1] = b[r2 + (F2 + 1 << 4) + 2 >> 1] | 0;
                b[I2 + (q2 << 5) + 4 >> 1] = b[r2 + (F2 + 1 << 4) + 4 >> 1] | 0;
                b[I2 + (q2 << 5) + 6 >> 1] = b[r2 + (F2 + 1 << 4) + 6 >> 1] | 0;
                b[I2 + (q2 << 5) + 8 >> 1] = b[r2 + (F2 + 1 << 4) + 8 >> 1] | 0;
                b[I2 + (q2 << 5) + 10 >> 1] = b[r2 + (F2 + 1 << 4) + 10 >> 1] | 0;
                c[I2 + (q2 << 5) + 12 >> 2] = F2 + 1;
                c[I2 + (q2 << 5) + 16 >> 2] = p2;
              }
              if ((v2 << 4 | 0) < 2049) {
                p2 = c[d2 + 152 >> 2] | 0;
                if ((p2 | 0) == (c[d2 + 156 >> 2] | 0) ? (J2 = p2 | 0 ? p2 << 1 : 1, (p2 | 0) < (J2 | 0)) : 0) {
                  if (!J2) {
                    j2 = 0;
                    k2 = p2;
                  } else {
                    c[5637] = (c[5637] | 0) + 1;
                    j2 = qG(J2 << 5 | 19) | 0;
                    if (!j2)
                      j2 = 0;
                    else {
                      c[(j2 + 4 + 15 & -16) + -4 >> 2] = j2;
                      j2 = j2 + 4 + 15 & -16;
                    }
                    k2 = c[d2 + 152 >> 2] | 0;
                  }
                  if ((k2 | 0) > 0) {
                    m2 = 0;
                    do {
                      I2 = j2 + (m2 << 5) | 0;
                      h2 = (c[d2 + 160 >> 2] | 0) + (m2 << 5) | 0;
                      c[I2 >> 2] = c[h2 >> 2];
                      c[I2 + 4 >> 2] = c[h2 + 4 >> 2];
                      c[I2 + 8 >> 2] = c[h2 + 8 >> 2];
                      c[I2 + 12 >> 2] = c[h2 + 12 >> 2];
                      c[I2 + 16 >> 2] = c[h2 + 16 >> 2];
                      c[I2 + 20 >> 2] = c[h2 + 20 >> 2];
                      c[I2 + 24 >> 2] = c[h2 + 24 >> 2];
                      c[I2 + 28 >> 2] = c[h2 + 28 >> 2];
                      m2 = m2 + 1 | 0;
                    } while ((m2 | 0) != (k2 | 0));
                  }
                  k2 = c[d2 + 160 >> 2] | 0;
                  if (k2 | 0) {
                    if (a[d2 + 164 >> 0] | 0) {
                      c[5638] = (c[5638] | 0) + 1;
                      rG(c[k2 + -4 >> 2] | 0);
                    }
                    c[d2 + 160 >> 2] = 0;
                  }
                  a[d2 + 164 >> 0] = 1;
                  c[d2 + 160 >> 2] = j2;
                  c[d2 + 156 >> 2] = J2;
                  j2 = c[d2 + 152 >> 2] | 0;
                } else
                  j2 = p2;
                c[d2 + 152 >> 2] = j2 + 1;
                J2 = (c[d2 + 160 >> 2] | 0) + (p2 << 5) | 0;
                c[J2 >> 2] = c[K2 + 16 >> 2];
                c[J2 + 4 >> 2] = c[K2 + 16 + 4 >> 2];
                c[J2 + 8 >> 2] = c[K2 + 16 + 8 >> 2];
                c[J2 + 12 >> 2] = c[K2 + 16 + 12 >> 2];
                c[J2 + 16 >> 2] = c[K2 + 16 + 16 >> 2];
                c[J2 + 20 >> 2] = c[K2 + 16 + 20 >> 2];
                c[J2 + 24 >> 2] = c[K2 + 16 + 24 >> 2];
                c[J2 + 28 >> 2] = c[K2 + 16 + 28 >> 2];
                J2 = c[d2 + 160 >> 2] | 0;
                b[J2 + (p2 << 5) >> 1] = b[r2 + (A2 << 4) >> 1] | 0;
                b[J2 + (p2 << 5) + 2 >> 1] = b[r2 + (A2 << 4) + 2 >> 1] | 0;
                b[J2 + (p2 << 5) + 4 >> 1] = b[r2 + (A2 << 4) + 4 >> 1] | 0;
                b[J2 + (p2 << 5) + 6 >> 1] = b[r2 + (A2 << 4) + 6 >> 1] | 0;
                b[J2 + (p2 << 5) + 8 >> 1] = b[r2 + (A2 << 4) + 8 >> 1] | 0;
                b[J2 + (p2 << 5) + 10 >> 1] = b[r2 + (A2 << 4) + 10 >> 1] | 0;
                c[J2 + (p2 << 5) + 12 >> 2] = A2;
                c[J2 + (p2 << 5) + 16 >> 2] = v2;
              }
              c[d2 + 168 >> 2] = c[d2 + 152 >> 2];
              j2 = a[d2 + 60 >> 0] | 0;
            }
            if (!(j2 << 24 >> 24)) {
              c[(c[d2 + 96 >> 2] | 0) + (G2 << 6) + 32 >> 2] = w2;
              i = K2;
              return;
            } else {
              c[(c[d2 + 136 >> 2] | 0) + (G2 << 4) + 12 >> 2] = 0 - w2;
              i = K2;
              return;
            }
          }
          function me(d2, f2, h2, j2) {
            d2 = d2 | 0;
            f2 = f2 | 0;
            h2 = h2 | 0;
            j2 = j2 | 0;
            var k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0, I2 = 0, J2 = 0;
            x2 = i;
            i = i + 16 | 0;
            if (!(a[d2 + 60 >> 0] | 0)) {
              k2 = c[d2 + 56 >> 2] | 0;
              if ((k2 | 0) > 0) {
                l2 = k2;
                o2 = 0;
                r2 = c[d2 + 96 >> 2] | 0;
                k2 = 0;
                while (1) {
                  k2 = k2 + 1 | 0;
                  if (!(+g[h2 >> 2] > +g[r2 + 16 >> 2]) ? !(+g[j2 >> 2] < +g[r2 >> 2]) : 0)
                    m2 = 1;
                  else
                    m2 = 0;
                  if (!(!(+g[h2 + 8 >> 2] > +g[r2 + 24 >> 2]) ? !(+g[j2 + 8 >> 2] < +g[r2 + 8 >> 2]) : 0))
                    m2 = 0;
                  if (!(+g[h2 + 4 >> 2] > +g[r2 + 20 >> 2]) ? !(+g[j2 + 4 >> 2] < +g[r2 + 4 >> 2]) : 0) {
                    n2 = c[r2 + 32 >> 2] | 0;
                    if (m2 & (n2 | 0) == -1) {
                      Zb[c[(c[f2 >> 2] | 0) + 8 >> 2] & 127](f2, c[r2 + 36 >> 2] | 0, c[r2 + 40 >> 2] | 0);
                      l2 = c[d2 + 56 >> 2] | 0;
                      q2 = 43;
                    } else {
                      p2 = (n2 | 0) == -1;
                      q2 = 42;
                    }
                  } else {
                    n2 = c[r2 + 32 >> 2] | 0;
                    p2 = (n2 | 0) == -1;
                    m2 = 0;
                    q2 = 42;
                  }
                  if ((q2 | 0) == 42) {
                    q2 = 0;
                    if (p2 | m2)
                      q2 = 43;
                    else {
                      o2 = n2 + o2 | 0;
                      m2 = r2 + (n2 << 6) | 0;
                    }
                  }
                  if ((q2 | 0) == 43) {
                    o2 = o2 + 1 | 0;
                    m2 = r2 + 64 | 0;
                  }
                  if ((o2 | 0) < (l2 | 0))
                    r2 = m2;
                  else
                    break;
                }
              } else
                k2 = 0;
              if ((c[4988] | 0) >= (k2 | 0)) {
                i = x2;
                return;
              }
              c[4988] = k2;
              i = x2;
              return;
            }
            E2 = +g[h2 >> 2];
            I2 = +g[h2 + 4 >> 2];
            A2 = +g[h2 + 8 >> 2];
            H2 = +g[d2 + 4 >> 2];
            E2 = E2 < H2 ? H2 : E2;
            z2 = +g[d2 + 8 >> 2];
            I2 = I2 < z2 ? z2 : I2;
            D2 = +g[d2 + 12 >> 2];
            A2 = A2 < D2 ? D2 : A2;
            J2 = +g[d2 + 20 >> 2];
            B2 = +g[d2 + 24 >> 2];
            F2 = +g[d2 + 28 >> 2];
            G2 = +g[d2 + 36 >> 2];
            y2 = +g[d2 + 40 >> 2];
            C2 = +g[d2 + 44 >> 2];
            w2 = ~~(((J2 < E2 ? J2 : E2) - H2) * G2) & 65534;
            b[x2 + 6 >> 1] = w2;
            u2 = ~~(((F2 < A2 ? F2 : A2) - D2) * C2) & 65534;
            v2 = ~~(((B2 < I2 ? B2 : I2) - z2) * y2) & 65534;
            b[x2 + 6 + 2 >> 1] = v2;
            b[x2 + 6 + 4 >> 1] = u2;
            I2 = +g[j2 >> 2];
            A2 = +g[j2 + 4 >> 2];
            E2 = +g[j2 + 8 >> 2];
            I2 = I2 < H2 ? H2 : I2;
            A2 = A2 < z2 ? z2 : A2;
            E2 = E2 < D2 ? D2 : E2;
            t2 = (~~(((J2 < I2 ? J2 : I2) - H2) * G2 + 1) & 65535 | 1) & 65535;
            b[x2 >> 1] = t2;
            j2 = (~~(((F2 < E2 ? F2 : E2) - D2) * C2 + 1) & 65535 | 1) & 65535;
            s2 = (~~(((B2 < A2 ? B2 : A2) - z2) * y2 + 1) & 65535 | 1) & 65535;
            b[x2 + 2 >> 1] = s2;
            b[x2 + 4 >> 1] = j2;
            switch (c[d2 + 144 >> 2] | 0) {
              case 0: {
                q2 = c[d2 + 56 >> 2] | 0;
                if ((q2 | 0) > 0) {
                  l2 = 0;
                  m2 = c[d2 + 136 >> 2] | 0;
                  k2 = 0;
                  do {
                    k2 = k2 + 1 | 0;
                    n2 = ((t2 & 65535) >= (e[m2 >> 1] | 0) ? (w2 & 65535) <= (e[m2 + 6 >> 1] | 0) : 0) & (u2 & 65535) <= (e[m2 + 10 >> 1] | 0) & (j2 & 65535) >= (e[m2 + 4 >> 1] | 0) & (v2 & 65535) <= (e[m2 + 8 >> 1] | 0) & (s2 & 65535) >= (e[m2 + 2 >> 1] | 0);
                    o2 = m2 + 12 | 0;
                    p2 = c[o2 >> 2] | 0;
                    if ((p2 | 0) > -1 & n2)
                      Zb[c[(c[f2 >> 2] | 0) + 8 >> 2] & 127](f2, p2 >> 21, p2 & 2097151);
                    if (n2 | (p2 | 0) > -1) {
                      l2 = l2 + 1 | 0;
                      m2 = m2 + 16 | 0;
                    } else {
                      d2 = c[o2 >> 2] | 0;
                      l2 = l2 - d2 | 0;
                      m2 = m2 + (0 - d2 << 4) | 0;
                    }
                  } while ((l2 | 0) < (q2 | 0));
                } else
                  k2 = 0;
                if ((c[4988] | 0) < (k2 | 0))
                  c[4988] = k2;
                break;
              }
              case 1: {
                if ((c[d2 + 152 >> 2] | 0) > 0) {
                  h2 = 0;
                  do {
                    k2 = c[d2 + 160 >> 2] | 0;
                    if (((t2 & 65535) >= (e[k2 + (h2 << 5) >> 1] | 0) ? (w2 & 65535) <= (e[k2 + (h2 << 5) + 6 >> 1] | 0) : 0) & (u2 & 65535) <= (e[k2 + (h2 << 5) + 10 >> 1] | 0) & (j2 & 65535) >= (e[k2 + (h2 << 5) + 4 >> 1] | 0) & (v2 & 65535) <= (e[k2 + (h2 << 5) + 8 >> 1] | 0) & (s2 & 65535) >= (e[k2 + (h2 << 5) + 2 >> 1] | 0)) {
                      r2 = c[k2 + (h2 << 5) + 12 >> 2] | 0;
                      q2 = c[k2 + (h2 << 5) + 16 >> 2] | 0;
                      if ((q2 | 0) > 0) {
                        l2 = r2;
                        m2 = (c[d2 + 136 >> 2] | 0) + (r2 << 4) | 0;
                        k2 = 0;
                        do {
                          k2 = k2 + 1 | 0;
                          n2 = ((t2 & 65535) >= (e[m2 >> 1] | 0) ? (w2 & 65535) <= (e[m2 + 6 >> 1] | 0) : 0) & (u2 & 65535) <= (e[m2 + 10 >> 1] | 0) & (j2 & 65535) >= (e[m2 + 4 >> 1] | 0) & (v2 & 65535) <= (e[m2 + 8 >> 1] | 0) & (s2 & 65535) >= (e[m2 + 2 >> 1] | 0);
                          o2 = m2 + 12 | 0;
                          p2 = c[o2 >> 2] | 0;
                          if ((p2 | 0) > -1 & n2)
                            Zb[c[(c[f2 >> 2] | 0) + 8 >> 2] & 127](f2, p2 >> 21, p2 & 2097151);
                          if (n2 | (p2 | 0) > -1) {
                            l2 = l2 + 1 | 0;
                            m2 = m2 + 16 | 0;
                          } else {
                            p2 = c[o2 >> 2] | 0;
                            l2 = l2 - p2 | 0;
                            m2 = m2 + (0 - p2 << 4) | 0;
                          }
                        } while ((l2 | 0) < (q2 + r2 | 0));
                      } else
                        k2 = 0;
                      if ((c[4988] | 0) < (k2 | 0))
                        c[4988] = k2;
                    }
                    h2 = h2 + 1 | 0;
                  } while ((h2 | 0) < (c[d2 + 152 >> 2] | 0));
                }
                break;
              }
              case 2: {
                ne(c[d2 + 136 >> 2] | 0, f2, x2 + 6 | 0, x2);
                break;
              }
              default: {
              }
            }
            i = x2;
            return;
          }
          function ne(a2, b2, d2, f2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            f2 = f2 | 0;
            var g2 = 0, h2 = 0, i2 = 0;
            while (1) {
              g2 = c[a2 + 12 >> 2] | 0;
              if (!(((e[f2 >> 1] | 0) >= (e[a2 >> 1] | 0) ? (e[d2 >> 1] | 0) <= (e[a2 + 6 >> 1] | 0) : 0) & (e[d2 + 4 >> 1] | 0) <= (e[a2 + 10 >> 1] | 0) & (e[f2 + 4 >> 1] | 0) >= (e[a2 + 4 >> 1] | 0) & (e[d2 + 2 >> 1] | 0) <= (e[a2 + 8 >> 1] | 0) & (e[f2 + 2 >> 1] | 0) >= (e[a2 + 2 >> 1] | 0))) {
                h2 = 6;
                break;
              }
              if ((g2 | 0) > -1)
                break;
              i2 = a2 + 16 | 0;
              ne(i2, b2, d2, f2);
              g2 = c[a2 + 28 >> 2] | 0;
              a2 = (g2 | 0) > -1 ? a2 + 32 | 0 : i2 + (0 - g2 << 4) | 0;
            }
            if ((h2 | 0) == 6)
              return;
            Zb[c[(c[b2 >> 2] | 0) + 8 >> 2] & 127](b2, g2 >> 21, g2 & 2097151);
            return;
          }
          function oe(a2, b2, d2, e2, f2, h2, j2, k2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = +e2;
            f2 = +f2;
            h2 = +h2;
            j2 = j2 | 0;
            k2 = k2 | 0;
            var l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0, N2 = 0, P2 = 0, Q2 = 0, R2 = 0, S2 = 0, T2 = 0, U2 = 0, V2 = 0;
            V2 = i;
            i = i + 32 | 0;
            G2 = +g[d2 >> 2];
            I2 = +g[d2 + 4 >> 2];
            T2 = +g[d2 + 8 >> 2];
            t2 = +g[j2 >> 2];
            u2 = +g[j2 + 4 >> 2];
            w2 = +g[j2 + 8 >> 2];
            p2 = +g[k2 >> 2];
            q2 = +g[k2 + 4 >> 2];
            s2 = +g[k2 + 8 >> 2];
            H2 = 1 / +O(+((e2 - G2) * (e2 - G2) + (f2 - I2) * (f2 - I2) + (h2 - T2) * (h2 - T2)));
            J2 = (e2 - G2) * H2 == 0 ? 999999984306749400 : 1 / ((e2 - G2) * H2);
            K2 = (f2 - I2) * H2 == 0 ? 999999984306749400 : 1 / ((f2 - I2) * H2);
            L2 = (h2 - T2) * H2 == 0 ? 999999984306749400 : 1 / ((h2 - T2) * H2);
            M2 = (G2 > e2 ? e2 : G2) + t2;
            N2 = (I2 > f2 ? f2 : I2) + u2;
            P2 = (T2 > h2 ? h2 : T2) + w2;
            Q2 = (G2 < e2 ? e2 : G2) + p2;
            R2 = (I2 < f2 ? f2 : I2) + q2;
            S2 = (T2 < h2 ? h2 : T2) + s2;
            m2 = c[a2 + 56 >> 2] | 0;
            a:
              do
                if ((m2 | 0) > 0) {
                  x2 = 0;
                  y2 = c[a2 + 96 >> 2] | 0;
                  l2 = 0;
                  while (1) {
                    l2 = l2 + 1 | 0;
                    c[V2 >> 2] = c[y2 >> 2];
                    c[V2 + 4 >> 2] = c[y2 + 4 >> 2];
                    c[V2 + 8 >> 2] = c[y2 + 8 >> 2];
                    c[V2 + 12 >> 2] = c[y2 + 12 >> 2];
                    v2 = y2 + 16 | 0;
                    c[V2 + 16 >> 2] = c[v2 >> 2];
                    c[V2 + 16 + 4 >> 2] = c[v2 + 4 >> 2];
                    c[V2 + 16 + 8 >> 2] = c[v2 + 8 >> 2];
                    c[V2 + 16 + 12 >> 2] = c[v2 + 12 >> 2];
                    g[V2 >> 2] = +g[V2 >> 2] - p2;
                    g[V2 + 4 >> 2] = +g[V2 + 4 >> 2] - q2;
                    g[V2 + 8 >> 2] = +g[V2 + 8 >> 2] - s2;
                    g[V2 + 16 >> 2] = +g[V2 + 16 >> 2] - t2;
                    g[V2 + 20 >> 2] = +g[V2 + 20 >> 2] - u2;
                    g[V2 + 24 >> 2] = +g[V2 + 24 >> 2] - w2;
                    if (!(M2 > +g[v2 >> 2]) ? !(Q2 < +g[y2 >> 2]) : 0)
                      n2 = 1;
                    else
                      n2 = 0;
                    if (!(!(P2 > +g[y2 + 24 >> 2]) ? !(S2 < +g[y2 + 8 >> 2]) : 0))
                      n2 = 0;
                    if (((!(N2 > +g[y2 + 20 >> 2]) ? !(R2 < +g[y2 + 4 >> 2] | n2 ^ 1) : 0) ? (A2 = +g[d2 >> 2], z2 = J2 * (+g[V2 + ((J2 < 0 & 1) << 4) >> 2] - A2), A2 = J2 * (+g[V2 + ((J2 < 0 ^ 1) << 4) >> 2] - A2), C2 = +g[d2 + 4 >> 2], B2 = K2 * (+g[V2 + ((K2 < 0 & 1) << 4) + 4 >> 2] - C2), C2 = K2 * (+g[V2 + ((K2 < 0 ^ 1) << 4) + 4 >> 2] - C2), !(B2 > A2 | z2 > C2)) : 0) ? (D2 = B2 > z2 ? B2 : z2, U2 = C2 < A2 ? C2 : A2, F2 = +g[d2 + 8 >> 2], E2 = L2 * (+g[V2 + ((L2 < 0 & 1) << 4) + 8 >> 2] - F2), F2 = L2 * (+g[V2 + ((L2 < 0 ^ 1) << 4) + 8 >> 2] - F2), !(E2 > U2 | D2 > F2)) : 0) {
                      n2 = (F2 < U2 ? F2 : U2) > 0 ? (E2 > D2 ? E2 : D2) < (h2 - T2) * ((h2 - T2) * H2) + ((e2 - G2) * ((e2 - G2) * H2) + (f2 - I2) * ((f2 - I2) * H2)) : 0;
                      o2 = c[y2 + 32 >> 2] | 0;
                      if (n2 & (o2 | 0) == -1) {
                        Zb[c[(c[b2 >> 2] | 0) + 8 >> 2] & 127](b2, c[y2 + 36 >> 2] | 0, c[y2 + 40 >> 2] | 0);
                        m2 = c[a2 + 56 >> 2] | 0;
                        v2 = 17;
                      } else {
                        r2 = (o2 | 0) == -1;
                        v2 = 16;
                      }
                    } else {
                      o2 = c[y2 + 32 >> 2] | 0;
                      r2 = (o2 | 0) == -1;
                      n2 = 0;
                      v2 = 16;
                    }
                    if ((v2 | 0) == 16) {
                      v2 = 0;
                      if (r2 | n2)
                        v2 = 17;
                      else {
                        r2 = o2 + x2 | 0;
                        n2 = y2 + (o2 << 6) | 0;
                      }
                    }
                    if ((v2 | 0) == 17) {
                      r2 = x2 + 1 | 0;
                      n2 = y2 + 64 | 0;
                    }
                    if ((r2 | 0) >= (m2 | 0))
                      break a;
                    p2 = +g[k2 >> 2];
                    q2 = +g[k2 + 4 >> 2];
                    s2 = +g[k2 + 8 >> 2];
                    t2 = +g[j2 >> 2];
                    u2 = +g[j2 + 4 >> 2];
                    w2 = +g[j2 + 8 >> 2];
                    x2 = r2;
                    y2 = n2;
                  }
                } else
                  l2 = 0;
              while (0);
            if ((c[4988] | 0) >= (l2 | 0)) {
              i = V2;
              return;
            }
            c[4988] = l2;
            i = V2;
            return;
          }
          function pe(a2, d2, f2, h2, j2, k2, l2, m2, n2) {
            a2 = a2 | 0;
            d2 = d2 | 0;
            f2 = f2 | 0;
            h2 = +h2;
            j2 = +j2;
            k2 = +k2;
            l2 = l2 | 0;
            m2 = m2 | 0;
            n2 = n2 | 0;
            var o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0, N2 = 0, P2 = 0, Q2 = 0, R2 = 0, S2 = 0, T2 = 0, U2 = 0, V2 = 0, W2 = 0, X2 = 0, Y2 = 0, Z2 = 0, _2 = 0, $2 = 0, aa2 = 0, ba2 = 0, ca2 = 0, da2 = 0, ea2 = 0;
            V2 = i;
            i = i + 32 | 0;
            H2 = +g[f2 >> 2];
            Q2 = +g[f2 + 4 >> 2];
            S2 = +g[f2 + 8 >> 2];
            J2 = 1 / +O(+((h2 - H2) * (h2 - H2) + (j2 - Q2) * (j2 - Q2) + (k2 - S2) * (k2 - S2)));
            N2 = (h2 - H2) * J2 == 0 ? 999999984306749400 : 1 / ((h2 - H2) * J2);
            P2 = (j2 - Q2) * J2 == 0 ? 999999984306749400 : 1 / ((j2 - Q2) * J2);
            R2 = (k2 - S2) * J2 == 0 ? 999999984306749400 : 1 / ((k2 - S2) * J2);
            ea2 = (H2 > h2 ? h2 : H2) + +g[l2 >> 2];
            ca2 = (Q2 > j2 ? j2 : Q2) + +g[l2 + 4 >> 2];
            da2 = (S2 > k2 ? k2 : S2) + +g[l2 + 8 >> 2];
            aa2 = (H2 < h2 ? h2 : H2) + +g[m2 >> 2];
            t2 = (Q2 < j2 ? j2 : Q2) + +g[m2 + 4 >> 2];
            Y2 = (S2 < k2 ? k2 : S2) + +g[m2 + 8 >> 2];
            $2 = +g[a2 + 4 >> 2];
            ea2 = ea2 < $2 ? $2 : ea2;
            u2 = +g[a2 + 8 >> 2];
            ca2 = ca2 < u2 ? u2 : ca2;
            X2 = +g[a2 + 12 >> 2];
            da2 = da2 < X2 ? X2 : da2;
            ba2 = +g[a2 + 20 >> 2];
            s2 = +g[a2 + 24 >> 2];
            Z2 = +g[a2 + 28 >> 2];
            _2 = +g[a2 + 36 >> 2];
            v2 = +g[a2 + 40 >> 2];
            W2 = +g[a2 + 44 >> 2];
            T2 = ~~(((ba2 < ea2 ? ba2 : ea2) - $2) * _2) & 65534;
            E2 = ~~(((Z2 < da2 ? Z2 : da2) - X2) * W2) & 65534;
            G2 = ~~(((s2 < ca2 ? s2 : ca2) - u2) * v2) & 65534;
            aa2 = aa2 < $2 ? $2 : aa2;
            t2 = t2 < u2 ? u2 : t2;
            Y2 = Y2 < X2 ? X2 : Y2;
            I2 = (~~(((ba2 < aa2 ? ba2 : aa2) - $2) * _2 + 1) & 65535 | 1) & 65535;
            D2 = (~~(((Z2 < Y2 ? Z2 : Y2) - X2) * W2 + 1) & 65535 | 1) & 65535;
            F2 = (~~(((s2 < t2 ? s2 : t2) - u2) * v2 + 1) & 65535 | 1) & 65535;
            if ((n2 | 0) > 0) {
              p2 = 0;
              q2 = c[a2 + 136 >> 2] | 0;
              o2 = 0;
              do {
                o2 = o2 + 1 | 0;
                r2 = q2 + 6 | 0;
                w2 = b[q2 >> 1] | 0;
                x2 = q2 + 10 | 0;
                y2 = b[q2 + 4 >> 1] | 0;
                z2 = q2 + 8 | 0;
                A2 = b[q2 + 2 >> 1] | 0;
                B2 = q2 + 12 | 0;
                C2 = (c[B2 >> 2] | 0) > -1;
                do
                  if (((I2 & 65535) >= (w2 & 65535) ? (T2 & 65535) <= (e[r2 >> 1] | 0) : 0) & (E2 & 65535) <= (e[x2 >> 1] | 0) & (D2 & 65535) >= (y2 & 65535) & (G2 & 65535) <= (e[z2 >> 1] | 0) & (F2 & 65535) >= (A2 & 65535)) {
                    aa2 = +g[a2 + 36 >> 2];
                    ca2 = +g[a2 + 40 >> 2];
                    ea2 = +g[a2 + 44 >> 2];
                    ba2 = +g[a2 + 4 >> 2];
                    da2 = +g[a2 + 8 >> 2];
                    u2 = +g[a2 + 12 >> 2];
                    g[V2 + 12 >> 2] = 0;
                    v2 = +(e[r2 >> 1] | 0) / aa2 + ba2;
                    s2 = +(e[z2 >> 1] | 0) / ca2 + da2;
                    t2 = +(e[x2 >> 1] | 0) / ea2 + u2;
                    g[V2 + 28 >> 2] = 0;
                    g[V2 >> 2] = +(w2 & 65535) / aa2 + ba2 - +g[m2 >> 2];
                    g[V2 + 4 >> 2] = +(A2 & 65535) / ca2 + da2 - +g[m2 + 4 >> 2];
                    g[V2 + 8 >> 2] = +(y2 & 65535) / ea2 + u2 - +g[m2 + 8 >> 2];
                    g[V2 + 16 >> 2] = v2 - +g[l2 >> 2];
                    g[V2 + 20 >> 2] = s2 - +g[l2 + 4 >> 2];
                    g[V2 + 24 >> 2] = t2 - +g[l2 + 8 >> 2];
                    t2 = +g[f2 >> 2];
                    s2 = N2 * (+g[V2 + ((N2 < 0 & 1) << 4) >> 2] - t2);
                    t2 = N2 * (+g[V2 + ((N2 < 0 ^ 1) << 4) >> 2] - t2);
                    v2 = +g[f2 + 4 >> 2];
                    u2 = P2 * (+g[V2 + ((P2 < 0 & 1) << 4) + 4 >> 2] - v2);
                    v2 = P2 * (+g[V2 + ((P2 < 0 ^ 1) << 4) + 4 >> 2] - v2);
                    if (!(u2 > t2 | s2 > v2) ? (K2 = u2 > s2 ? u2 : s2, U2 = v2 < t2 ? v2 : t2, M2 = +g[f2 + 8 >> 2], L2 = R2 * (+g[V2 + ((R2 < 0 & 1) << 4) + 8 >> 2] - M2), M2 = R2 * (+g[V2 + ((R2 < 0 ^ 1) << 4) + 8 >> 2] - M2), !(L2 > U2 | K2 > M2)) : 0) {
                      r2 = (M2 < U2 ? M2 : U2) > 0 ? (L2 > K2 ? L2 : K2) < (k2 - S2) * ((k2 - S2) * J2) + ((h2 - H2) * ((h2 - H2) * J2) + (j2 - Q2) * ((j2 - Q2) * J2)) : 0;
                      if (!(C2 & r2)) {
                        w2 = 9;
                        break;
                      }
                      w2 = c[B2 >> 2] | 0;
                      Zb[c[(c[d2 >> 2] | 0) + 8 >> 2] & 127](d2, w2 >> 21, w2 & 2097151);
                      w2 = 10;
                      break;
                    }
                    r2 = 0;
                    w2 = 9;
                  } else {
                    r2 = 0;
                    w2 = 9;
                  }
                while (0);
                if ((w2 | 0) == 9) {
                  w2 = 0;
                  if (C2 | r2)
                    w2 = 10;
                  else {
                    C2 = c[B2 >> 2] | 0;
                    p2 = p2 - C2 | 0;
                    q2 = q2 + (0 - C2 << 4) | 0;
                  }
                }
                if ((w2 | 0) == 10) {
                  p2 = p2 + 1 | 0;
                  q2 = q2 + 16 | 0;
                }
              } while ((p2 | 0) < (n2 | 0));
            } else
              o2 = 0;
            if ((c[4988] | 0) >= (o2 | 0)) {
              i = V2;
              return;
            }
            c[4988] = o2;
            i = V2;
            return;
          }
          function qe(b2) {
            b2 = b2 | 0;
            var d2 = 0;
            c[b2 >> 2] = 3016;
            if (!(a[b2 + 8 >> 0] | 0))
              return;
            d2 = c[b2 + 12 >> 2] | 0;
            if (!d2)
              return;
            b2 = c[b2 + 4 >> 2] | 0;
            tb[c[(c[b2 >> 2] | 0) + 16 >> 2] & 127](b2, d2);
            return;
          }
          function re(b2) {
            b2 = b2 | 0;
            var d2 = 0, e2 = 0;
            c[b2 >> 2] = 3016;
            if (!(a[b2 + 8 >> 0] | 0)) {
              rG(b2);
              return;
            }
            d2 = c[b2 + 12 >> 2] | 0;
            if (!d2) {
              rG(b2);
              return;
            }
            e2 = c[b2 + 4 >> 2] | 0;
            tb[c[(c[e2 >> 2] | 0) + 16 >> 2] & 127](e2, d2);
            rG(b2);
            return;
          }
          function se(b2, d2, e2, f2, h2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            h2 = h2 | 0;
            var j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0;
            l2 = i;
            i = i + 144 | 0;
            j2 = c[b2 + 12 >> 2] | 0;
            if (!j2) {
              i = l2;
              return;
            }
            n2 = c[d2 + 4 >> 2] | 0;
            m2 = c[e2 + 4 >> 2] | 0;
            c[h2 + 4 >> 2] = j2;
            g[l2 + 12 + 128 >> 2] = 999999984306749400;
            d2 = c[d2 + 12 >> 2] | 0;
            c[l2 + 12 >> 2] = c[d2 >> 2];
            c[l2 + 12 + 4 >> 2] = c[d2 + 4 >> 2];
            c[l2 + 12 + 8 >> 2] = c[d2 + 8 >> 2];
            c[l2 + 12 + 12 >> 2] = c[d2 + 12 >> 2];
            c[l2 + 12 + 16 >> 2] = c[d2 + 16 >> 2];
            c[l2 + 12 + 16 + 4 >> 2] = c[d2 + 16 + 4 >> 2];
            c[l2 + 12 + 16 + 8 >> 2] = c[d2 + 16 + 8 >> 2];
            c[l2 + 12 + 16 + 12 >> 2] = c[d2 + 16 + 12 >> 2];
            c[l2 + 12 + 32 >> 2] = c[d2 + 32 >> 2];
            c[l2 + 12 + 32 + 4 >> 2] = c[d2 + 32 + 4 >> 2];
            c[l2 + 12 + 32 + 8 >> 2] = c[d2 + 32 + 8 >> 2];
            c[l2 + 12 + 32 + 12 >> 2] = c[d2 + 32 + 12 >> 2];
            c[l2 + 12 + 48 >> 2] = c[d2 + 48 >> 2];
            c[l2 + 12 + 48 + 4 >> 2] = c[d2 + 48 + 4 >> 2];
            c[l2 + 12 + 48 + 8 >> 2] = c[d2 + 48 + 8 >> 2];
            c[l2 + 12 + 48 + 12 >> 2] = c[d2 + 48 + 12 >> 2];
            e2 = c[e2 + 12 >> 2] | 0;
            c[l2 + 12 + 64 >> 2] = c[e2 >> 2];
            c[l2 + 12 + 64 + 4 >> 2] = c[e2 + 4 >> 2];
            c[l2 + 12 + 64 + 8 >> 2] = c[e2 + 8 >> 2];
            c[l2 + 12 + 64 + 12 >> 2] = c[e2 + 12 >> 2];
            c[l2 + 12 + 80 >> 2] = c[e2 + 16 >> 2];
            c[l2 + 12 + 80 + 4 >> 2] = c[e2 + 16 + 4 >> 2];
            c[l2 + 12 + 80 + 8 >> 2] = c[e2 + 16 + 8 >> 2];
            c[l2 + 12 + 80 + 12 >> 2] = c[e2 + 16 + 12 >> 2];
            c[l2 + 12 + 96 >> 2] = c[e2 + 32 >> 2];
            c[l2 + 12 + 96 + 4 >> 2] = c[e2 + 32 + 4 >> 2];
            c[l2 + 12 + 96 + 8 >> 2] = c[e2 + 32 + 8 >> 2];
            c[l2 + 12 + 96 + 12 >> 2] = c[e2 + 32 + 12 >> 2];
            c[l2 + 12 + 112 >> 2] = c[e2 + 48 >> 2];
            c[l2 + 12 + 112 + 4 >> 2] = c[e2 + 48 + 4 >> 2];
            c[l2 + 12 + 112 + 8 >> 2] = c[e2 + 48 + 8 >> 2];
            c[l2 + 12 + 112 + 12 >> 2] = c[e2 + 48 + 12 >> 2];
            c[l2 >> 2] = 3044;
            c[l2 + 4 >> 2] = n2;
            c[l2 + 8 >> 2] = m2;
            xe(l2, l2 + 12 | 0, h2, c[f2 + 20 >> 2] | 0, 0);
            do
              if (a[b2 + 8 >> 0] | 0 ? (k2 = c[h2 + 4 >> 2] | 0, c[k2 + 748 >> 2] | 0) : 0) {
                d2 = c[k2 + 740 >> 2] | 0;
                e2 = c[(c[h2 + 8 >> 2] | 0) + 8 >> 2] | 0;
                j2 = c[(c[h2 + 12 >> 2] | 0) + 8 >> 2] | 0;
                if ((d2 | 0) == (e2 | 0)) {
                  Xn(k2, d2 + 4 | 0, j2 + 4 | 0);
                  break;
                } else {
                  Xn(k2, j2 + 4 | 0, e2 + 4 | 0);
                  break;
                }
              }
            while (0);
            i = l2;
            return;
          }
          function te(a2, b2, c2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            return 1;
          }
          function ue(b2, d2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0;
            e2 = c[b2 + 12 >> 2] | 0;
            if (!e2)
              return;
            if (!(a[b2 + 8 >> 0] | 0))
              return;
            f2 = c[d2 + 4 >> 2] | 0;
            if ((f2 | 0) == (c[d2 + 8 >> 2] | 0) ? (h2 = f2 | 0 ? f2 << 1 : 1, (f2 | 0) < (h2 | 0)) : 0) {
              if (!h2)
                e2 = 0;
              else {
                c[5637] = (c[5637] | 0) + 1;
                e2 = qG((h2 << 2 | 3) + 16 | 0) | 0;
                if (!e2)
                  e2 = 0;
                else {
                  c[(e2 + 4 + 15 & -16) + -4 >> 2] = e2;
                  e2 = e2 + 4 + 15 & -16;
                }
                f2 = c[d2 + 4 >> 2] | 0;
              }
              if ((f2 | 0) > 0) {
                g2 = 0;
                do {
                  c[e2 + (g2 << 2) >> 2] = c[(c[d2 + 12 >> 2] | 0) + (g2 << 2) >> 2];
                  g2 = g2 + 1 | 0;
                } while ((g2 | 0) != (f2 | 0));
              }
              g2 = c[d2 + 12 >> 2] | 0;
              if (g2) {
                if (a[d2 + 16 >> 0] | 0) {
                  c[5638] = (c[5638] | 0) + 1;
                  rG(c[g2 + -4 >> 2] | 0);
                  f2 = c[d2 + 4 >> 2] | 0;
                }
                c[d2 + 12 >> 2] = 0;
              }
              a[d2 + 16 >> 0] = 1;
              c[d2 + 12 >> 2] = e2;
              c[d2 + 8 >> 2] = h2;
              e2 = c[b2 + 12 >> 2] | 0;
            }
            c[(c[d2 + 12 >> 2] | 0) + (f2 << 2) >> 2] = e2;
            c[d2 + 4 >> 2] = f2 + 1;
            return;
          }
          function ve(a2) {
            a2 = a2 | 0;
            return;
          }
          function we(a2) {
            a2 = a2 | 0;
            rG(a2);
            return;
          }
          function rp(b2, d2, e2, f2, h2, i2, j2, k2, l2, m2, n2, o2, p2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            h2 = h2 | 0;
            i2 = i2 | 0;
            j2 = j2 | 0;
            k2 = k2 | 0;
            l2 = l2 | 0;
            m2 = m2 | 0;
            n2 = n2 | 0;
            o2 = o2 | 0;
            p2 = p2 | 0;
            var q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0;
            u2 = _(c[l2 + 24 >> 2] | 0, m2) | 0;
            switch (c[d2 + 84 >> 2] | 0) {
              case 4: {
                r2 = +g[n2 >> 2];
                s2 = +g[n2 + 4 >> 2];
                q2 = +g[n2 + 8 >> 2];
                if (o2 | 0)
                  t2 = +g[j2 >> 2] * r2 + +g[j2 + 4 >> 2] * s2 + +g[j2 + 8 >> 2] * q2 - (r2 * +g[k2 >> 2] + s2 * +g[k2 + 4 >> 2] + q2 * +g[k2 + 8 >> 2]);
                else
                  t2 = +g[h2 >> 2] * r2 + +g[h2 + 4 >> 2] * s2 + +g[h2 + 8 >> 2] * q2 - (r2 * +g[i2 >> 2] + s2 * +g[i2 + 4 >> 2] + q2 * +g[i2 + 8 >> 2]);
                sp(b2, e2, f2, l2, u2, n2, o2, p2);
                s2 = o2 | 0 ? -1 : 1;
                q2 = s2 * (+g[l2 >> 2] * +g[d2 + 12 >> 2] * +g[d2 + 72 >> 2]);
                m2 = (c[l2 + 28 >> 2] | 0) + (u2 << 2) | 0;
                g[m2 >> 2] = q2;
                r2 = q2 - t2 * +g[d2 + 12 >> 2];
                if (o2 | 0) {
                  if (r2 > 0 ? (v2 = -(t2 * +g[d2 + 8 >> 2]), q2 < v2) : 0)
                    g[m2 >> 2] = v2;
                } else if (r2 < 0 ? (w2 = -(t2 * +g[d2 + 8 >> 2]), q2 > w2) : 0)
                  g[m2 >> 2] = w2;
                g[(c[l2 + 36 >> 2] | 0) + (u2 << 2) >> 2] = o2 | 0 ? 0 : -34028234663852886e22;
                g[(c[l2 + 40 >> 2] | 0) + (u2 << 2) >> 2] = o2 | 0 ? 34028234663852886e22 : 0;
                c[(c[l2 + 32 >> 2] | 0) + (u2 << 2) >> 2] = c[d2 + 16 >> 2];
                u2 = (c[l2 + 24 >> 2] | 0) + u2 | 0;
                sp(b2, e2, f2, l2, u2, n2, o2, p2);
                q2 = s2 * (+g[l2 >> 2] * +g[d2 + 12 >> 2] * +g[d2 + 76 >> 2]);
                m2 = (c[l2 + 28 >> 2] | 0) + (u2 << 2) | 0;
                g[m2 >> 2] = q2;
                r2 = q2 - t2 * +g[d2 + 12 >> 2];
                if (o2 | 0) {
                  if (r2 < 0 ? (y2 = -(t2 * +g[d2 + 8 >> 2]), q2 > y2) : 0)
                    g[m2 >> 2] = y2;
                } else if (r2 > 0 ? (A2 = -(t2 * +g[d2 + 8 >> 2]), q2 < A2) : 0)
                  g[m2 >> 2] = A2;
                g[(c[l2 + 36 >> 2] | 0) + (u2 << 2) >> 2] = o2 | 0 ? -34028234663852886e22 : 0;
                g[(c[l2 + 40 >> 2] | 0) + (u2 << 2) >> 2] = o2 | 0 ? 0 : 34028234663852886e22;
                c[(c[l2 + 32 >> 2] | 0) + (u2 << 2) >> 2] = c[d2 + 16 >> 2];
                m2 = 2;
                u2 = (c[l2 + 24 >> 2] | 0) + u2 | 0;
                break;
              }
              case 3: {
                sp(b2, e2, f2, l2, u2, n2, o2, p2);
                g[(c[l2 + 28 >> 2] | 0) + (u2 << 2) >> 2] = (o2 | 0 ? -1 : 1) * (+g[l2 >> 2] * +g[d2 + 12 >> 2] * +g[d2 + 72 >> 2]);
                g[(c[l2 + 36 >> 2] | 0) + (u2 << 2) >> 2] = -34028234663852886e22;
                g[(c[l2 + 40 >> 2] | 0) + (u2 << 2) >> 2] = 34028234663852886e22;
                c[(c[l2 + 32 >> 2] | 0) + (u2 << 2) >> 2] = c[d2 + 16 >> 2];
                m2 = 1;
                u2 = (c[l2 + 24 >> 2] | 0) + u2 | 0;
                break;
              }
              default:
                m2 = 0;
            }
            do
              if (!(a[d2 + 28 >> 0] | 0))
                x2 = m2;
              else {
                if (!(a[d2 + 40 >> 0] | 0)) {
                  sp(b2, e2, f2, l2, u2, n2, o2, p2);
                  w2 = +g[d2 + 32 >> 2];
                  q2 = o2 | 0 ? w2 : -w2;
                  r2 = +g[d2 + 80 >> 2];
                  s2 = +g[d2 >> 2];
                  t2 = +g[d2 + 4 >> 2];
                  v2 = +g[l2 >> 2] * +g[d2 + 20 >> 2];
                  do
                    if (!(s2 > t2))
                      if (!(s2 == t2)) {
                        if (q2 / v2 < 0)
                          if (r2 >= s2 ? s2 - q2 / v2 > r2 : 0) {
                            q2 = (s2 - r2) / (q2 / v2);
                            break;
                          } else {
                            q2 = r2 < s2 ? 0 : 1;
                            break;
                          }
                        if (q2 / v2 > 0)
                          if (r2 <= t2 ? t2 - q2 / v2 < r2 : 0) {
                            q2 = (t2 - r2) / (q2 / v2);
                            break;
                          } else {
                            q2 = r2 > t2 ? 0 : 1;
                            break;
                          }
                        else
                          q2 = 0;
                      } else
                        q2 = 0;
                    else
                      q2 = 1;
                  while (0);
                  g[(c[l2 + 28 >> 2] | 0) + (u2 << 2) >> 2] = q2 * w2;
                  g[(c[l2 + 36 >> 2] | 0) + (u2 << 2) >> 2] = -+g[d2 + 36 >> 2];
                  c[(c[l2 + 40 >> 2] | 0) + (u2 << 2) >> 2] = c[d2 + 36 >> 2];
                  c[(c[l2 + 32 >> 2] | 0) + (u2 << 2) >> 2] = c[d2 + 24 >> 2];
                  u2 = (c[l2 + 24 >> 2] | 0) + u2 | 0;
                  m2 = m2 + 1 | 0;
                  if (!(a[d2 + 28 >> 0] | 0)) {
                    x2 = m2;
                    break;
                  }
                  if (!(a[d2 + 40 >> 0] | 0)) {
                    x2 = m2;
                    break;
                  } else {
                    x2 = d2 + 32 | 0;
                    z2 = d2 + 80 | 0;
                  }
                } else {
                  x2 = d2 + 32 | 0;
                  z2 = d2 + 80 | 0;
                }
                r2 = +g[z2 >> 2] - +g[d2 + 44 >> 2];
                sp(b2, e2, f2, l2, u2, n2, o2, p2);
                v2 = +g[x2 >> 2];
                v2 = r2 < 0 ? -v2 : v2;
                do
                  if (r2 != 0) {
                    s2 = +g[d2 >> 2];
                    q2 = +g[d2 + 4 >> 2];
                    do
                      if (s2 > q2) {
                        if (r2 > 0)
                          q2 = +g[d2 + 44 >> 2];
                        else
                          q2 = -34028234663852886e22;
                        if (r2 < 0) {
                          t2 = +g[d2 + 44 >> 2];
                          s2 = q2;
                        } else {
                          t2 = 34028234663852886e22;
                          s2 = q2;
                        }
                      } else {
                        if (r2 > 0 ? (B2 = +g[d2 + 44 >> 2], B2 > s2) : 0)
                          s2 = B2;
                        if (r2 < 0 ? (C2 = +g[d2 + 44 >> 2], C2 < q2) : 0) {
                          t2 = C2;
                          break;
                        }
                        t2 = q2;
                      }
                    while (0);
                    q2 = +g[z2 >> 2];
                    r2 = +g[l2 >> 2] * +g[d2 + 20 >> 2];
                    if (!(s2 > t2))
                      if (!(s2 == t2)) {
                        if (-v2 / r2 < 0)
                          if (q2 >= s2 ? s2 - -v2 / r2 > q2 : 0) {
                            q2 = (s2 - q2) / (-v2 / r2);
                            break;
                          } else {
                            q2 = q2 < s2 ? 0 : 1;
                            break;
                          }
                        if (-v2 / r2 > 0)
                          if (q2 <= t2 ? t2 - -v2 / r2 < q2 : 0) {
                            q2 = (t2 - q2) / (-v2 / r2);
                            break;
                          } else {
                            q2 = q2 > t2 ? 0 : 1;
                            break;
                          }
                        else
                          q2 = 0;
                      } else
                        q2 = 0;
                    else
                      q2 = 1;
                  } else
                    q2 = 0;
                while (0);
                g[(c[l2 + 28 >> 2] | 0) + (u2 << 2) >> 2] = (o2 | 0 ? -1 : 1) * (v2 * q2);
                g[(c[l2 + 36 >> 2] | 0) + (u2 << 2) >> 2] = -+g[d2 + 36 >> 2];
                c[(c[l2 + 40 >> 2] | 0) + (u2 << 2) >> 2] = c[d2 + 36 >> 2];
                c[(c[l2 + 32 >> 2] | 0) + (u2 << 2) >> 2] = c[d2 + 24 >> 2];
                x2 = m2 + 1 | 0;
                u2 = (c[l2 + 24 >> 2] | 0) + u2 | 0;
              }
            while (0);
            if (!(a[d2 + 48 >> 0] | 0)) {
              l2 = x2;
              return l2 | 0;
            }
            y2 = +g[d2 + 80 >> 2] - +g[d2 + 68 >> 2];
            sp(b2, e2, f2, l2, u2, n2, o2, p2);
            v2 = 1 / +g[l2 >> 2];
            w2 = +g[d2 + 60 >> 2];
            q2 = +g[d2 + 52 >> 2];
            s2 = +g[n2 >> 2];
            t2 = +g[n2 + 4 >> 2];
            r2 = +g[n2 + 8 >> 2];
            if (o2 | 0)
              s2 = +g[j2 >> 2] * s2 + +g[j2 + 4 >> 2] * t2 + +g[j2 + 8 >> 2] * r2 - (s2 * +g[k2 >> 2] + t2 * +g[k2 + 4 >> 2] + r2 * +g[k2 + 8 >> 2]);
            else
              s2 = +g[h2 >> 2] * s2 + +g[h2 + 4 >> 2] * t2 + +g[h2 + 8 >> 2] * r2 - (s2 * +g[i2 >> 2] + t2 * +g[i2 + 4 >> 2] + r2 * +g[i2 + 8 >> 2]);
            r2 = 1 / +g[(c[b2 + 28 >> 2] | 0) + 368 >> 2];
            C2 = 1 / +g[(c[b2 + 32 >> 2] | 0) + 368 >> 2];
            r2 = r2 > C2 ? C2 : r2;
            if ((a[d2 + 56 >> 0] | 0) != 0 ? v2 * +O(+(q2 / r2)) > 0.25 : 0)
              q2 = 1 / v2 / v2 * 0.0625 * r2;
            A2 = o2 | 0 ? -1 : 1;
            B2 = v2 * (A2 * (s2 * (w2 * v2 > r2 & (a[d2 + 64 >> 0] | 0) != 0 ? r2 / v2 : w2)));
            C2 = v2 * (y2 * q2) - B2;
            g[(c[l2 + 28 >> 2] | 0) + (u2 << 2) >> 2] = s2 + A2 * C2;
            q2 = C2 < -B2 ? C2 : -B2;
            s2 = C2 < -B2 ? -B2 : C2;
            m2 = c[l2 + 40 >> 2] | 0;
            if (o2 | 0) {
              r2 = -q2 < 0 ? 0 : -q2;
              q2 = -s2 > 0 ? 0 : -s2;
            } else {
              r2 = s2 < 0 ? 0 : s2;
              q2 = q2 > 0 ? 0 : q2;
            }
            g[(c[l2 + 36 >> 2] | 0) + (u2 << 2) >> 2] = q2;
            g[m2 + (u2 << 2) >> 2] = r2;
            g[(c[l2 + 32 >> 2] | 0) + (u2 << 2) >> 2] = 0;
            l2 = x2 + 1 | 0;
            return l2 | 0;
          }
          function sp(b2, d2, e2, f2, h2, i2, j2, k2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            h2 = h2 | 0;
            i2 = i2 | 0;
            j2 = j2 | 0;
            k2 = k2 | 0;
            var l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0;
            y2 = c[(j2 | 0 ? f2 + 12 | 0 : f2 + 8 | 0) >> 2] | 0;
            x2 = c[(j2 | 0 ? f2 + 20 | 0 : f2 + 16 | 0) >> 2] | 0;
            c[y2 + (h2 << 2) >> 2] = c[i2 >> 2];
            c[y2 + (h2 + 1 << 2) >> 2] = c[i2 + 4 >> 2];
            c[y2 + (h2 + 2 << 2) >> 2] = c[i2 + 8 >> 2];
            g[x2 + (h2 << 2) >> 2] = -+g[i2 >> 2];
            g[x2 + (h2 + 1 << 2) >> 2] = -+g[i2 + 4 >> 2];
            g[x2 + (h2 + 2 << 2) >> 2] = -+g[i2 + 8 >> 2];
            if (j2 | 0)
              return;
            n2 = +g[b2 + 1348 >> 2] - +g[e2 + 48 >> 2];
            l2 = +g[b2 + 1352 >> 2] - +g[e2 + 52 >> 2];
            m2 = +g[b2 + 1356 >> 2] - +g[e2 + 56 >> 2];
            v2 = +g[b2 + 1284 >> 2] - +g[d2 + 48 >> 2];
            w2 = +g[b2 + 1288 >> 2] - +g[d2 + 52 >> 2];
            r2 = +g[b2 + 1292 >> 2] - +g[d2 + 56 >> 2];
            s2 = +g[i2 + 8 >> 2];
            u2 = +g[i2 + 4 >> 2];
            t2 = +g[i2 >> 2];
            if ((k2 | 0) != 0 | (a[b2 + 1452 >> 0] | 0) == 0) {
              q2 = n2 * u2 - l2 * t2;
              p2 = l2 * s2 - m2 * u2;
              n2 = m2 * t2 - n2 * s2;
              o2 = w2 * s2 - r2 * u2;
              m2 = r2 * t2 - v2 * s2;
              l2 = v2 * u2 - w2 * t2;
            } else {
              z2 = +g[b2 + 1444 >> 2];
              o2 = +g[b2 + 1448 >> 2];
              q2 = o2 * (n2 * u2 - l2 * t2);
              p2 = o2 * (l2 * s2 - m2 * u2);
              n2 = o2 * (m2 * t2 - n2 * s2);
              o2 = z2 * (w2 * s2 - r2 * u2);
              m2 = z2 * (r2 * t2 - v2 * s2);
              l2 = z2 * (v2 * u2 - w2 * t2);
            }
            y2 = (c[f2 + 12 >> 2] | 0) + (h2 << 2) | 0;
            g[y2 >> 2] = o2;
            g[y2 + 4 >> 2] = m2;
            g[y2 + 8 >> 2] = l2;
            y2 = c[f2 + 20 >> 2] | 0;
            g[y2 + (h2 << 2) >> 2] = -p2;
            g[y2 + (h2 + 1 << 2) >> 2] = -n2;
            g[y2 + (h2 + 2 << 2) >> 2] = -q2;
            return;
          }
          function tp(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = +d2;
            e2 = e2 | 0;
            if (e2 >>> 0 < 3)
              switch (b2 | 0) {
                case 2: {
                  g[a2 + 728 + (e2 << 2) >> 2] = d2;
                  c[a2 + 1456 >> 2] = c[a2 + 1456 >> 2] | 2 << (e2 << 2);
                  return;
                }
                case 4: {
                  g[a2 + 744 + (e2 << 2) >> 2] = d2;
                  c[a2 + 1456 >> 2] = c[a2 + 1456 >> 2] | 1 << (e2 << 2);
                  return;
                }
                case 1: {
                  g[a2 + 760 + (e2 << 2) >> 2] = d2;
                  c[a2 + 1456 >> 2] = c[a2 + 1456 >> 2] | 8 << (e2 << 2);
                  return;
                }
                case 3: {
                  g[a2 + 776 + (e2 << 2) >> 2] = d2;
                  c[a2 + 1456 >> 2] = c[a2 + 1456 >> 2] | 4 << (e2 << 2);
                  return;
                }
                default:
                  return;
              }
            if ((e2 + -3 | 0) >>> 0 >= 3)
              return;
            switch (b2 | 0) {
              case 2: {
                g[a2 + 968 + ((e2 + -3 | 0) * 88 | 0) + 12 >> 2] = d2;
                c[a2 + 1456 >> 2] = c[a2 + 1456 >> 2] | 2 << (e2 << 2);
                return;
              }
              case 4: {
                g[a2 + 968 + ((e2 + -3 | 0) * 88 | 0) + 16 >> 2] = d2;
                c[a2 + 1456 >> 2] = c[a2 + 1456 >> 2] | 1 << (e2 << 2);
                return;
              }
              case 1: {
                g[a2 + 968 + ((e2 + -3 | 0) * 88 | 0) + 20 >> 2] = d2;
                c[a2 + 1456 >> 2] = c[a2 + 1456 >> 2] | 8 << (e2 << 2);
                return;
              }
              case 3: {
                g[a2 + 968 + ((e2 + -3 | 0) * 88 | 0) + 24 >> 2] = d2;
                c[a2 + 1456 >> 2] = c[a2 + 1456 >> 2] | 4 << (e2 << 2);
                return;
              }
              default:
                return;
            }
          }
          function up(a2, b2, c2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            var d2 = 0;
            a:
              do
                if (c2 >>> 0 >= 3)
                  if ((c2 + -3 | 0) >>> 0 < 3)
                    switch (b2 | 0) {
                      case 2: {
                        d2 = +g[a2 + 968 + ((c2 + -3 | 0) * 88 | 0) + 12 >> 2];
                        break a;
                      }
                      case 4: {
                        d2 = +g[a2 + 968 + ((c2 + -3 | 0) * 88 | 0) + 16 >> 2];
                        break a;
                      }
                      case 1: {
                        d2 = +g[a2 + 968 + ((c2 + -3 | 0) * 88 | 0) + 20 >> 2];
                        break a;
                      }
                      case 3: {
                        d2 = +g[a2 + 968 + ((c2 + -3 | 0) * 88 | 0) + 24 >> 2];
                        break a;
                      }
                      default: {
                        d2 = 0;
                        break a;
                      }
                    }
                  else
                    d2 = 0;
                else
                  switch (b2 | 0) {
                    case 2: {
                      d2 = +g[a2 + 728 + (c2 << 2) >> 2];
                      break a;
                    }
                    case 4: {
                      d2 = +g[a2 + 744 + (c2 << 2) >> 2];
                      break a;
                    }
                    case 1: {
                      d2 = +g[a2 + 760 + (c2 << 2) >> 2];
                      break a;
                    }
                    case 3: {
                      d2 = +g[a2 + 776 + (c2 << 2) >> 2];
                      break a;
                    }
                    default: {
                      d2 = 0;
                      break a;
                    }
                  }
              while (0);
            return +d2;
          }
          function vp(a2) {
            a2 = a2 | 0;
            c[a2 >> 2] = 7188;
            if (!a2)
              return;
            c[5638] = (c[5638] | 0) + 1;
            rG(c[a2 + -4 >> 2] | 0);
            return;
          }
          function wp(b2, d2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0;
            if (a[b2 + 1309 >> 0] | 0) {
              e2 = (+g[b2 + 1256 >> 2] - +g[b2 + 1316 >> 2]) * +g[b2 + 1340 >> 2];
              g[b2 + 792 >> 2] = e2 * (+g[d2 >> 2] * +g[b2 + 1364 >> 2] / +(c[d2 + 48 >> 2] | 0));
              e2 = +N(+e2);
              g[b2 + 808 >> 2] = e2 / +g[d2 >> 2];
            }
            if (a[b2 + 1310 >> 0] | 0) {
              e2 = (+g[b2 + 1260 >> 2] - +g[b2 + 1320 >> 2]) * +g[b2 + 1344 >> 2];
              g[b2 + 796 >> 2] = e2 * (+g[d2 >> 2] * +g[b2 + 1368 >> 2] / +(c[d2 + 48 >> 2] | 0));
              e2 = +N(+e2);
              g[b2 + 812 >> 2] = e2 / +g[d2 >> 2];
            }
            if (a[b2 + 1311 >> 0] | 0) {
              e2 = (+g[b2 + 1264 >> 2] - +g[b2 + 1324 >> 2]) * +g[b2 + 1348 >> 2];
              g[b2 + 800 >> 2] = e2 * (+g[d2 >> 2] * +g[b2 + 1372 >> 2] / +(c[d2 + 48 >> 2] | 0));
              e2 = +N(+e2);
              g[b2 + 816 >> 2] = e2 / +g[d2 >> 2];
            }
            if (a[b2 + 1312 >> 0] | 0) {
              f2 = -((+g[b2 + 1192 >> 2] - +g[b2 + 1328 >> 2]) * +g[b2 + 1352 >> 2]);
              e2 = +g[d2 >> 2];
              g[b2 + 876 >> 2] = e2 * +g[b2 + 1376 >> 2] / +(c[d2 + 48 >> 2] | 0) * f2;
              g[b2 + 880 >> 2] = +N(+f2) / e2;
            }
            if (a[b2 + 1313 >> 0] | 0) {
              e2 = -((+g[b2 + 1196 >> 2] - +g[b2 + 1332 >> 2]) * +g[b2 + 1356 >> 2]);
              f2 = +g[d2 >> 2];
              g[b2 + 940 >> 2] = f2 * +g[b2 + 1380 >> 2] / +(c[d2 + 48 >> 2] | 0) * e2;
              g[b2 + 944 >> 2] = +N(+e2) / f2;
            }
            if (!(a[b2 + 1314 >> 0] | 0)) {
              cp(b2, d2);
              return;
            }
            e2 = -((+g[b2 + 1200 >> 2] - +g[b2 + 1336 >> 2]) * +g[b2 + 1360 >> 2]);
            f2 = +g[d2 >> 2];
            g[b2 + 1004 >> 2] = f2 * +g[b2 + 1384 >> 2] / +(c[d2 + 48 >> 2] | 0) * e2;
            g[b2 + 1008 >> 2] = +N(+e2) / f2;
            cp(b2, d2);
            return;
          }
          function xp(a2) {
            a2 = a2 | 0;
            return 348;
          }
          function yp(a2, b2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            e2 = e2 | 0;
            ip(a2, b2, e2) | 0;
            c[b2 + 276 >> 2] = c[a2 + 1316 >> 2];
            c[b2 + 324 >> 2] = c[a2 + 1364 >> 2];
            c[b2 + 252 >> 2] = d[a2 + 1309 >> 0];
            c[b2 + 300 >> 2] = c[a2 + 1340 >> 2];
            c[b2 + 280 >> 2] = c[a2 + 1320 >> 2];
            c[b2 + 328 >> 2] = c[a2 + 1368 >> 2];
            c[b2 + 256 >> 2] = d[a2 + 1310 >> 0];
            c[b2 + 304 >> 2] = c[a2 + 1344 >> 2];
            c[b2 + 284 >> 2] = c[a2 + 1324 >> 2];
            c[b2 + 332 >> 2] = c[a2 + 1372 >> 2];
            c[b2 + 260 >> 2] = d[a2 + 1311 >> 0];
            c[b2 + 308 >> 2] = c[a2 + 1348 >> 2];
            c[b2 + 288 >> 2] = c[a2 + 1328 >> 2];
            c[b2 + 336 >> 2] = c[a2 + 1376 >> 2];
            c[b2 + 264 >> 2] = d[a2 + 1312 >> 0];
            c[b2 + 312 >> 2] = c[a2 + 1352 >> 2];
            c[b2 + 292 >> 2] = c[a2 + 1332 >> 2];
            c[b2 + 340 >> 2] = c[a2 + 1380 >> 2];
            c[b2 + 268 >> 2] = d[a2 + 1313 >> 0];
            c[b2 + 316 >> 2] = c[a2 + 1356 >> 2];
            c[b2 + 296 >> 2] = c[a2 + 1336 >> 2];
            c[b2 + 344 >> 2] = c[a2 + 1384 >> 2];
            c[b2 + 272 >> 2] = d[a2 + 1314 >> 0];
            c[b2 + 320 >> 2] = c[a2 + 1360 >> 2];
            return 15322;
          }
          function zp(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0;
            u2 = +g[b2 >> 2];
            t2 = +g[b2 + 4 >> 2];
            s2 = +g[b2 + 8 >> 2];
            r2 = 1 / +O(+(u2 * u2 + t2 * t2 + s2 * s2));
            y2 = +g[d2 >> 2];
            x2 = +g[d2 + 4 >> 2];
            w2 = +g[d2 + 8 >> 2];
            v2 = 1 / +O(+(y2 * y2 + x2 * x2 + w2 * w2));
            B2 = s2 * r2 * (x2 * v2) - t2 * r2 * (w2 * v2);
            A2 = u2 * r2 * (w2 * v2) - s2 * r2 * (y2 * v2);
            z2 = t2 * r2 * (y2 * v2) - u2 * r2 * (x2 * v2);
            d2 = c[a2 + 28 >> 2] | 0;
            e2 = +g[d2 + 4 >> 2];
            h2 = +g[d2 + 20 >> 2];
            j2 = +g[d2 + 36 >> 2];
            f2 = +g[d2 + 8 >> 2];
            i2 = +g[d2 + 24 >> 2];
            k2 = +g[d2 + 40 >> 2];
            l2 = +g[d2 + 12 >> 2];
            n2 = +g[d2 + 28 >> 2];
            p2 = +g[d2 + 44 >> 2];
            m2 = -+g[d2 + 52 >> 2];
            o2 = -+g[d2 + 56 >> 2];
            q2 = -+g[d2 + 60 >> 2];
            g[a2 + 48 >> 2] = z2 * j2 + (e2 * B2 + h2 * A2);
            g[a2 + 52 >> 2] = e2 * (y2 * v2) + x2 * v2 * h2 + w2 * v2 * j2;
            g[a2 + 56 >> 2] = u2 * r2 * e2 + t2 * r2 * h2 + s2 * r2 * j2;
            g[a2 + 60 >> 2] = 0;
            g[a2 + 64 >> 2] = B2 * f2 + A2 * i2 + z2 * k2;
            g[a2 + 68 >> 2] = y2 * v2 * f2 + x2 * v2 * i2 + w2 * v2 * k2;
            g[a2 + 72 >> 2] = u2 * r2 * f2 + t2 * r2 * i2 + s2 * r2 * k2;
            g[a2 + 76 >> 2] = 0;
            g[a2 + 80 >> 2] = B2 * l2 + A2 * n2 + z2 * p2;
            g[a2 + 84 >> 2] = y2 * v2 * l2 + x2 * v2 * n2 + w2 * v2 * p2;
            g[a2 + 88 >> 2] = u2 * r2 * l2 + t2 * r2 * n2 + s2 * r2 * p2;
            g[a2 + 92 >> 2] = 0;
            g[a2 + 96 >> 2] = e2 * 0 + h2 * 0 + j2 * 0 + (e2 * m2 + h2 * o2 + j2 * q2);
            g[a2 + 100 >> 2] = f2 * 0 + i2 * 0 + k2 * 0 + (f2 * m2 + i2 * o2 + k2 * q2);
            g[a2 + 104 >> 2] = l2 * 0 + n2 * 0 + p2 * 0 + (l2 * m2 + n2 * o2 + p2 * q2);
            g[a2 + 108 >> 2] = 0;
            d2 = c[a2 + 32 >> 2] | 0;
            q2 = +g[d2 + 4 >> 2];
            p2 = +g[d2 + 20 >> 2];
            o2 = +g[d2 + 36 >> 2];
            n2 = +g[d2 + 8 >> 2];
            m2 = +g[d2 + 24 >> 2];
            l2 = +g[d2 + 40 >> 2];
            k2 = +g[d2 + 12 >> 2];
            i2 = +g[d2 + 28 >> 2];
            f2 = +g[d2 + 44 >> 2];
            j2 = -+g[d2 + 52 >> 2];
            h2 = -+g[d2 + 56 >> 2];
            e2 = -+g[d2 + 60 >> 2];
            g[a2 + 112 >> 2] = B2 * q2 + A2 * p2 + z2 * o2;
            g[a2 + 116 >> 2] = y2 * v2 * q2 + x2 * v2 * p2 + w2 * v2 * o2;
            g[a2 + 120 >> 2] = u2 * r2 * q2 + t2 * r2 * p2 + s2 * r2 * o2;
            g[a2 + 124 >> 2] = 0;
            g[a2 + 128 >> 2] = B2 * n2 + A2 * m2 + z2 * l2;
            g[a2 + 132 >> 2] = y2 * v2 * n2 + x2 * v2 * m2 + w2 * v2 * l2;
            g[a2 + 136 >> 2] = u2 * r2 * n2 + t2 * r2 * m2 + s2 * r2 * l2;
            g[a2 + 140 >> 2] = 0;
            g[a2 + 144 >> 2] = B2 * k2 + A2 * i2 + z2 * f2;
            g[a2 + 148 >> 2] = y2 * v2 * k2 + x2 * v2 * i2 + w2 * v2 * f2;
            g[a2 + 152 >> 2] = u2 * r2 * k2 + t2 * r2 * i2 + s2 * r2 * f2;
            g[a2 + 156 >> 2] = 0;
            g[a2 + 160 >> 2] = q2 * 0 + p2 * 0 + o2 * 0 + (q2 * j2 + p2 * h2 + o2 * e2);
            g[a2 + 164 >> 2] = n2 * 0 + m2 * 0 + l2 * 0 + (n2 * j2 + m2 * h2 + l2 * e2);
            g[a2 + 168 >> 2] = k2 * 0 + i2 * 0 + f2 * 0 + (k2 * j2 + i2 * h2 + f2 * e2);
            g[a2 + 172 >> 2] = 0;
            _o(a2, (c[a2 + 28 >> 2] | 0) + 4 | 0, (c[a2 + 32 >> 2] | 0) + 4 | 0);
            return;
          }
          function Ap(a2) {
            a2 = a2 | 0;
            c[a2 >> 2] = 7188;
            if (!a2)
              return;
            c[5638] = (c[5638] | 0) + 1;
            rG(c[a2 + -4 >> 2] | 0);
            return;
          }
          function Bp(b2) {
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0, P2 = 0, Q2 = 0, R2 = 0, S2 = 0, T2 = 0, U2 = 0, V2 = 0, W2 = 0, X2 = 0;
            w2 = i;
            i = i + 176 | 0;
            if (!(a[b2 + 738 >> 0] | 0)) {
              i = w2;
              return;
            }
            g[b2 + 36 >> 2] = 0;
            g[b2 + 744 >> 2] = 0;
            if (!(a[b2 + 736 >> 0] | 0)) {
              e2 = c[b2 + 28 >> 2] | 0;
              l2 = +g[b2 + 600 >> 2];
              m2 = +g[b2 + 604 >> 2];
              r2 = +g[b2 + 608 >> 2];
              t2 = l2 * +g[e2 + 20 >> 2] + m2 * +g[e2 + 24 >> 2] + r2 * +g[e2 + 28 >> 2] + +g[e2 + 56 >> 2];
              f2 = c[b2 + 32 >> 2] | 0;
              n2 = +g[b2 + 664 >> 2];
              o2 = +g[b2 + 668 >> 2];
              s2 = +g[b2 + 672 >> 2];
              p2 = +g[f2 + 52 >> 2];
              d2 = +g[f2 + 56 >> 2];
              u2 = n2 * +g[f2 + 20 >> 2] + o2 * +g[f2 + 24 >> 2] + s2 * +g[f2 + 28 >> 2] + d2;
              v2 = n2 * +g[f2 + 36 >> 2] + o2 * +g[f2 + 40 >> 2] + s2 * +g[f2 + 44 >> 2] + +g[f2 + 60 >> 2];
              q2 = l2 * +g[e2 + 4 >> 2] + m2 * +g[e2 + 8 >> 2] + r2 * +g[e2 + 12 >> 2] + +g[e2 + 52 >> 2];
              r2 = l2 * +g[e2 + 36 >> 2] + m2 * +g[e2 + 40 >> 2] + r2 * +g[e2 + 44 >> 2] + +g[e2 + 60 >> 2];
              s2 = n2 * +g[f2 + 4 >> 2] + o2 * +g[f2 + 8 >> 2] + s2 * +g[f2 + 12 >> 2] + p2;
              if ((s2 - q2) * (s2 - q2) + (u2 - t2) * (u2 - t2) + (v2 - r2) * (v2 - r2) > 11920928955078125e-23) {
                j2 = 1 / +O(+((s2 - q2) * (s2 - q2) + (u2 - t2) * (u2 - t2) + (v2 - r2) * (v2 - r2)));
                g[w2 + 128 >> 2] = (s2 - q2) * j2;
                g[w2 + 128 + 4 >> 2] = (u2 - t2) * j2;
                g[w2 + 128 + 8 >> 2] = (v2 - r2) * j2;
                c[w2 + 128 + 12 >> 2] = 0;
                n2 = (v2 - r2) * j2;
                h2 = (u2 - t2) * j2;
                j2 = (s2 - q2) * j2;
              } else {
                c[w2 + 128 >> 2] = 1065353216;
                c[w2 + 128 + 4 >> 2] = 0;
                c[w2 + 128 + 8 >> 2] = 0;
                g[w2 + 128 + 12 >> 2] = 0;
                n2 = 0;
                h2 = 0;
                j2 = 1;
              }
              if (+N(+n2) > 0.7071067690849304) {
                y2 = n2 * n2 + h2 * h2;
                x2 = 1 / +O(+y2);
                l2 = -(x2 * n2);
                n2 = x2 * h2;
                o2 = -(n2 * j2);
                k2 = j2 * l2;
                m2 = 0;
                h2 = y2 * x2;
                j2 = n2;
              } else {
                l2 = j2 * j2 + h2 * h2;
                k2 = 1 / +O(+l2);
                m2 = -(h2 * k2);
                h2 = k2 * j2;
                o2 = n2 * m2;
                k2 = l2 * k2;
                l2 = h2;
                h2 = -(h2 * n2);
                j2 = 0;
              }
              g[w2 + 128 + 16 >> 2] = m2;
              g[w2 + 128 + 20 >> 2] = l2;
              g[w2 + 128 + 24 >> 2] = j2;
              g[w2 + 128 + 32 >> 2] = h2;
              g[w2 + 128 + 36 >> 2] = o2;
              g[w2 + 128 + 40 >> 2] = k2;
              h2 = p2;
              e2 = 0;
              while (1) {
                z2 = c[b2 + 28 >> 2] | 0;
                c[w2 + 80 >> 2] = c[z2 + 4 >> 2];
                c[w2 + 80 + 4 >> 2] = c[z2 + 20 >> 2];
                c[w2 + 80 + 8 >> 2] = c[z2 + 36 >> 2];
                g[w2 + 80 + 12 >> 2] = 0;
                c[w2 + 80 + 16 >> 2] = c[z2 + 8 >> 2];
                c[w2 + 80 + 20 >> 2] = c[z2 + 24 >> 2];
                c[w2 + 80 + 24 >> 2] = c[z2 + 40 >> 2];
                g[w2 + 80 + 28 >> 2] = 0;
                c[w2 + 80 + 32 >> 2] = c[z2 + 12 >> 2];
                c[w2 + 80 + 36 >> 2] = c[z2 + 28 >> 2];
                c[w2 + 80 + 40 >> 2] = c[z2 + 44 >> 2];
                g[w2 + 80 + 44 >> 2] = 0;
                c[w2 + 32 >> 2] = c[f2 + 4 >> 2];
                c[w2 + 32 + 4 >> 2] = c[f2 + 20 >> 2];
                c[w2 + 32 + 8 >> 2] = c[f2 + 36 >> 2];
                g[w2 + 32 + 12 >> 2] = 0;
                c[w2 + 32 + 16 >> 2] = c[f2 + 8 >> 2];
                c[w2 + 32 + 20 >> 2] = c[f2 + 24 >> 2];
                c[w2 + 32 + 24 >> 2] = c[f2 + 40 >> 2];
                g[w2 + 32 + 28 >> 2] = 0;
                c[w2 + 32 + 32 >> 2] = c[f2 + 12 >> 2];
                c[w2 + 32 + 36 >> 2] = c[f2 + 28 >> 2];
                c[w2 + 32 + 40 >> 2] = c[f2 + 44 >> 2];
                g[w2 + 32 + 44 >> 2] = 0;
                x2 = t2 - +g[z2 + 56 >> 2];
                y2 = r2 - +g[z2 + 60 >> 2];
                g[w2 + 16 >> 2] = q2 - +g[z2 + 52 >> 2];
                g[w2 + 16 + 4 >> 2] = x2;
                g[w2 + 16 + 8 >> 2] = y2;
                g[w2 + 16 + 12 >> 2] = 0;
                y2 = v2 - +g[f2 + 60 >> 2];
                g[w2 >> 2] = s2 - h2;
                g[w2 + 4 >> 2] = u2 - d2;
                g[w2 + 8 >> 2] = y2;
                g[w2 + 12 >> 2] = 0;
                z2 = c[b2 + 28 >> 2] | 0;
                f2 = c[b2 + 32 >> 2] | 0;
                Ho(b2 + 48 + (e2 * 84 | 0) | 0, w2 + 80 | 0, w2 + 32 | 0, w2 + 16 | 0, w2, w2 + 128 + (e2 << 4) | 0, z2 + 420 | 0, +g[z2 + 368 >> 2], f2 + 420 | 0, +g[f2 + 368 >> 2]);
                e2 = e2 + 1 | 0;
                if ((e2 | 0) == 3)
                  break;
                z2 = c[b2 + 32 >> 2] | 0;
                f2 = z2;
                h2 = +g[z2 + 52 >> 2];
                d2 = +g[z2 + 56 >> 2];
              }
            }
            h2 = +g[b2 + 560 >> 2];
            j2 = +g[b2 + 576 >> 2];
            k2 = +g[b2 + 592 >> 2];
            if (+N(+k2) > 0.7071067690849304) {
              p2 = 1 / +O(+(k2 * k2 + j2 * j2));
              d2 = h2 * -(k2 * p2);
              l2 = 0;
              m2 = j2 * p2;
              n2 = -(k2 * p2);
              o2 = (k2 * k2 + j2 * j2) * p2;
              p2 = -(h2 * (j2 * p2));
            } else {
              p2 = 1 / +O(+(h2 * h2 + j2 * j2));
              d2 = (h2 * h2 + j2 * j2) * p2;
              l2 = -(j2 * p2);
              m2 = 0;
              n2 = h2 * p2;
              o2 = -(k2 * (h2 * p2));
              p2 = k2 * -(j2 * p2);
            }
            f2 = c[b2 + 28 >> 2] | 0;
            I2 = +g[f2 + 4 >> 2];
            H2 = +g[f2 + 8 >> 2];
            u2 = +g[f2 + 12 >> 2];
            R2 = l2 * I2 + n2 * H2 + m2 * u2;
            G2 = +g[f2 + 20 >> 2];
            F2 = +g[f2 + 24 >> 2];
            x2 = +g[f2 + 28 >> 2];
            T2 = l2 * G2 + n2 * F2 + m2 * x2;
            E2 = +g[f2 + 36 >> 2];
            s2 = +g[f2 + 40 >> 2];
            C2 = +g[f2 + 44 >> 2];
            W2 = l2 * E2 + n2 * s2 + m2 * C2;
            B2 = o2 * I2 + p2 * H2 + d2 * u2;
            K2 = o2 * G2 + p2 * F2 + d2 * x2;
            L2 = o2 * E2 + p2 * s2 + d2 * C2;
            e2 = c[b2 + 32 >> 2] | 0;
            A2 = +g[e2 + 4 >> 2];
            l2 = +g[e2 + 20 >> 2];
            m2 = +g[e2 + 36 >> 2];
            q2 = +g[e2 + 8 >> 2];
            r2 = +g[e2 + 24 >> 2];
            v2 = +g[e2 + 40 >> 2];
            P2 = +g[e2 + 12 >> 2];
            S2 = +g[e2 + 28 >> 2];
            V2 = +g[e2 + 44 >> 2];
            c[b2 + 300 >> 2] = 0;
            c[b2 + 300 + 4 >> 2] = 0;
            c[b2 + 300 + 8 >> 2] = 0;
            c[b2 + 300 + 12 >> 2] = 0;
            g[b2 + 316 >> 2] = R2 * I2 + T2 * G2 + W2 * E2;
            g[b2 + 320 >> 2] = R2 * H2 + T2 * F2 + W2 * s2;
            g[b2 + 324 >> 2] = R2 * u2 + T2 * x2 + W2 * C2;
            g[b2 + 328 >> 2] = 0;
            g[b2 + 332 >> 2] = A2 * -R2 + l2 * -T2 + m2 * -W2;
            g[b2 + 336 >> 2] = q2 * -R2 + r2 * -T2 + v2 * -W2;
            g[b2 + 340 >> 2] = P2 * -R2 + S2 * -T2 + V2 * -W2;
            g[b2 + 344 >> 2] = 0;
            D2 = (R2 * I2 + T2 * G2 + W2 * E2) * +g[f2 + 420 >> 2];
            J2 = (R2 * H2 + T2 * F2 + W2 * s2) * +g[f2 + 424 >> 2];
            d2 = (R2 * u2 + T2 * x2 + W2 * C2) * +g[f2 + 428 >> 2];
            g[b2 + 348 >> 2] = D2;
            g[b2 + 352 >> 2] = J2;
            g[b2 + 356 >> 2] = d2;
            g[b2 + 360 >> 2] = 0;
            p2 = (A2 * -R2 + l2 * -T2 + m2 * -W2) * +g[e2 + 420 >> 2];
            y2 = (q2 * -R2 + r2 * -T2 + v2 * -W2) * +g[e2 + 424 >> 2];
            X2 = (P2 * -R2 + S2 * -T2 + V2 * -W2) * +g[e2 + 428 >> 2];
            g[b2 + 364 >> 2] = p2;
            g[b2 + 368 >> 2] = y2;
            g[b2 + 372 >> 2] = X2;
            g[b2 + 376 >> 2] = 0;
            g[b2 + 380 >> 2] = (R2 * I2 + T2 * G2 + W2 * E2) * D2 + (R2 * H2 + T2 * F2 + W2 * s2) * J2 + (R2 * u2 + T2 * x2 + W2 * C2) * d2 + ((A2 * -R2 + l2 * -T2 + m2 * -W2) * p2 + (q2 * -R2 + r2 * -T2 + v2 * -W2) * y2 + (P2 * -R2 + S2 * -T2 + V2 * -W2) * X2);
            e2 = c[b2 + 28 >> 2] | 0;
            X2 = +g[e2 + 4 >> 2];
            W2 = +g[e2 + 20 >> 2];
            V2 = +g[e2 + 36 >> 2];
            T2 = +g[e2 + 8 >> 2];
            S2 = +g[e2 + 24 >> 2];
            R2 = +g[e2 + 40 >> 2];
            P2 = +g[e2 + 12 >> 2];
            y2 = +g[e2 + 28 >> 2];
            v2 = +g[e2 + 44 >> 2];
            f2 = c[b2 + 32 >> 2] | 0;
            r2 = +g[f2 + 4 >> 2];
            q2 = +g[f2 + 20 >> 2];
            p2 = +g[f2 + 36 >> 2];
            m2 = +g[f2 + 8 >> 2];
            l2 = +g[f2 + 24 >> 2];
            A2 = +g[f2 + 40 >> 2];
            d2 = +g[f2 + 12 >> 2];
            J2 = +g[f2 + 28 >> 2];
            D2 = +g[f2 + 44 >> 2];
            c[b2 + 384 >> 2] = 0;
            c[b2 + 384 + 4 >> 2] = 0;
            c[b2 + 384 + 8 >> 2] = 0;
            c[b2 + 384 + 12 >> 2] = 0;
            g[b2 + 400 >> 2] = B2 * X2 + K2 * W2 + L2 * V2;
            g[b2 + 404 >> 2] = B2 * T2 + K2 * S2 + L2 * R2;
            g[b2 + 408 >> 2] = B2 * P2 + K2 * y2 + L2 * v2;
            g[b2 + 412 >> 2] = 0;
            g[b2 + 416 >> 2] = r2 * -B2 + q2 * -K2 + p2 * -L2;
            g[b2 + 420 >> 2] = m2 * -B2 + l2 * -K2 + A2 * -L2;
            g[b2 + 424 >> 2] = d2 * -B2 + J2 * -K2 + D2 * -L2;
            g[b2 + 428 >> 2] = 0;
            U2 = (B2 * X2 + K2 * W2 + L2 * V2) * +g[e2 + 420 >> 2];
            Q2 = (B2 * T2 + K2 * S2 + L2 * R2) * +g[e2 + 424 >> 2];
            t2 = (B2 * P2 + K2 * y2 + L2 * v2) * +g[e2 + 428 >> 2];
            g[b2 + 432 >> 2] = U2;
            g[b2 + 436 >> 2] = Q2;
            g[b2 + 440 >> 2] = t2;
            g[b2 + 444 >> 2] = 0;
            n2 = (r2 * -B2 + q2 * -K2 + p2 * -L2) * +g[f2 + 420 >> 2];
            o2 = (m2 * -B2 + l2 * -K2 + A2 * -L2) * +g[f2 + 424 >> 2];
            M2 = (d2 * -B2 + J2 * -K2 + D2 * -L2) * +g[f2 + 428 >> 2];
            g[b2 + 448 >> 2] = n2;
            g[b2 + 452 >> 2] = o2;
            g[b2 + 456 >> 2] = M2;
            g[b2 + 460 >> 2] = 0;
            g[b2 + 464 >> 2] = (B2 * X2 + K2 * W2 + L2 * V2) * U2 + (B2 * T2 + K2 * S2 + L2 * R2) * Q2 + (B2 * P2 + K2 * y2 + L2 * v2) * t2 + ((r2 * -B2 + q2 * -K2 + p2 * -L2) * n2 + (m2 * -B2 + l2 * -K2 + A2 * -L2) * o2 + (d2 * -B2 + J2 * -K2 + D2 * -L2) * M2);
            f2 = c[b2 + 28 >> 2] | 0;
            M2 = +g[f2 + 4 >> 2];
            L2 = +g[f2 + 20 >> 2];
            D2 = +g[f2 + 36 >> 2];
            K2 = +g[f2 + 8 >> 2];
            J2 = +g[f2 + 24 >> 2];
            B2 = +g[f2 + 40 >> 2];
            d2 = +g[f2 + 12 >> 2];
            o2 = +g[f2 + 28 >> 2];
            A2 = +g[f2 + 44 >> 2];
            e2 = c[b2 + 32 >> 2] | 0;
            l2 = +g[e2 + 4 >> 2];
            m2 = +g[e2 + 20 >> 2];
            n2 = +g[e2 + 36 >> 2];
            p2 = +g[e2 + 8 >> 2];
            q2 = +g[e2 + 24 >> 2];
            r2 = +g[e2 + 40 >> 2];
            t2 = +g[e2 + 12 >> 2];
            v2 = +g[e2 + 28 >> 2];
            y2 = +g[e2 + 44 >> 2];
            c[b2 + 468 >> 2] = 0;
            c[b2 + 468 + 4 >> 2] = 0;
            c[b2 + 468 + 8 >> 2] = 0;
            c[b2 + 468 + 12 >> 2] = 0;
            D2 = (I2 * h2 + H2 * j2 + u2 * k2) * M2 + (G2 * h2 + F2 * j2 + x2 * k2) * L2 + (E2 * h2 + s2 * j2 + C2 * k2) * D2;
            B2 = (I2 * h2 + H2 * j2 + u2 * k2) * K2 + (G2 * h2 + F2 * j2 + x2 * k2) * J2 + (E2 * h2 + s2 * j2 + C2 * k2) * B2;
            A2 = (I2 * h2 + H2 * j2 + u2 * k2) * d2 + (G2 * h2 + F2 * j2 + x2 * k2) * o2 + (E2 * h2 + s2 * j2 + C2 * k2) * A2;
            g[b2 + 484 >> 2] = D2;
            g[b2 + 488 >> 2] = B2;
            g[b2 + 492 >> 2] = A2;
            g[b2 + 496 >> 2] = 0;
            u2 = -(I2 * h2 + H2 * j2 + u2 * k2);
            x2 = -(G2 * h2 + F2 * j2 + x2 * k2);
            h2 = -(E2 * h2 + s2 * j2 + C2 * k2);
            g[b2 + 500 >> 2] = l2 * u2 + m2 * x2 + n2 * h2;
            g[b2 + 504 >> 2] = p2 * u2 + q2 * x2 + r2 * h2;
            g[b2 + 508 >> 2] = t2 * u2 + v2 * x2 + y2 * h2;
            g[b2 + 512 >> 2] = 0;
            C2 = D2 * +g[f2 + 420 >> 2];
            j2 = B2 * +g[f2 + 424 >> 2];
            k2 = A2 * +g[f2 + 428 >> 2];
            g[b2 + 516 >> 2] = C2;
            g[b2 + 520 >> 2] = j2;
            g[b2 + 524 >> 2] = k2;
            g[b2 + 528 >> 2] = 0;
            o2 = (l2 * u2 + m2 * x2 + n2 * h2) * +g[e2 + 420 >> 2];
            s2 = (p2 * u2 + q2 * x2 + r2 * h2) * +g[e2 + 424 >> 2];
            d2 = (t2 * u2 + v2 * x2 + y2 * h2) * +g[e2 + 428 >> 2];
            g[b2 + 532 >> 2] = o2;
            g[b2 + 536 >> 2] = s2;
            g[b2 + 540 >> 2] = d2;
            g[b2 + 544 >> 2] = 0;
            g[b2 + 548 >> 2] = D2 * C2 + B2 * j2 + A2 * k2 + ((l2 * u2 + m2 * x2 + n2 * h2) * o2 + (p2 * u2 + q2 * x2 + r2 * h2) * s2 + (t2 * u2 + v2 * x2 + y2 * h2) * d2);
            g[b2 + 724 >> 2] = 0;
            e2 = c[b2 + 28 >> 2] | 0;
            f2 = c[b2 + 32 >> 2] | 0;
            d2 = +Cp(b2, e2 + 4 | 0, f2 + 4 | 0);
            g[b2 + 728 >> 2] = d2;
            g[b2 + 708 >> 2] = 0;
            g[b2 + 712 >> 2] = 0;
            a[b2 + 716 >> 0] = 0;
            h2 = +g[b2 + 692 >> 2];
            do
              if (h2 >= 0) {
                d2 = +oG(d2 - +g[b2 + 688 >> 2]);
                if (!(d2 < -3.1415927410125732)) {
                  if (d2 > 3.1415927410125732)
                    d2 = d2 + -6.2831854820251465;
                } else
                  d2 = d2 + 6.2831854820251465;
                if (d2 < -h2) {
                  a[b2 + 716 >> 0] = 1;
                  g[b2 + 708 >> 2] = -(d2 + h2);
                  g[b2 + 712 >> 2] = 1;
                  break;
                }
                if (d2 > h2) {
                  a[b2 + 716 >> 0] = 1;
                  g[b2 + 708 >> 2] = h2 - d2;
                  g[b2 + 712 >> 2] = -1;
                }
              }
            while (0);
            T2 = +g[b2 + 560 >> 2];
            U2 = +g[b2 + 576 >> 2];
            X2 = +g[b2 + 592 >> 2];
            V2 = T2 * +g[e2 + 4 >> 2] + U2 * +g[e2 + 8 >> 2] + X2 * +g[e2 + 12 >> 2];
            W2 = T2 * +g[e2 + 20 >> 2] + U2 * +g[e2 + 24 >> 2] + X2 * +g[e2 + 28 >> 2];
            X2 = T2 * +g[e2 + 36 >> 2] + U2 * +g[e2 + 40 >> 2] + X2 * +g[e2 + 44 >> 2];
            g[b2 + 720 >> 2] = 1 / (V2 * (V2 * +g[e2 + 288 >> 2] + W2 * +g[e2 + 304 >> 2] + X2 * +g[e2 + 320 >> 2]) + W2 * (V2 * +g[e2 + 292 >> 2] + W2 * +g[e2 + 308 >> 2] + X2 * +g[e2 + 324 >> 2]) + X2 * (V2 * +g[e2 + 296 >> 2] + W2 * +g[e2 + 312 >> 2] + X2 * +g[e2 + 328 >> 2]) + (V2 * (V2 * +g[f2 + 288 >> 2] + W2 * +g[f2 + 304 >> 2] + X2 * +g[f2 + 320 >> 2]) + W2 * (V2 * +g[f2 + 292 >> 2] + W2 * +g[f2 + 308 >> 2] + X2 * +g[f2 + 324 >> 2]) + X2 * (V2 * +g[f2 + 296 >> 2] + W2 * +g[f2 + 312 >> 2] + X2 * +g[f2 + 328 >> 2])));
            i = w2;
            return;
          }
          function Cp(a2, b2, c2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0;
            v2 = +g[a2 + 552 >> 2];
            u2 = +g[a2 + 568 >> 2];
            t2 = +g[a2 + 584 >> 2];
            s2 = +g[b2 >> 2];
            r2 = +g[b2 + 4 >> 2];
            q2 = +g[b2 + 8 >> 2];
            o2 = +g[b2 + 16 >> 2];
            n2 = +g[b2 + 20 >> 2];
            m2 = +g[b2 + 24 >> 2];
            k2 = +g[b2 + 32 >> 2];
            i2 = +g[b2 + 36 >> 2];
            f2 = +g[b2 + 40 >> 2];
            j2 = +g[a2 + 556 >> 2];
            h2 = +g[a2 + 572 >> 2];
            e2 = +g[a2 + 588 >> 2];
            x2 = +g[a2 + 620 >> 2];
            w2 = +g[a2 + 636 >> 2];
            d2 = +g[a2 + 652 >> 2];
            p2 = x2 * +g[c2 >> 2] + w2 * +g[c2 + 4 >> 2] + d2 * +g[c2 + 8 >> 2];
            l2 = x2 * +g[c2 + 16 >> 2] + w2 * +g[c2 + 20 >> 2] + d2 * +g[c2 + 24 >> 2];
            d2 = x2 * +g[c2 + 32 >> 2] + w2 * +g[c2 + 36 >> 2] + d2 * +g[c2 + 40 >> 2];
            d2 = +W(+((v2 * s2 + u2 * r2 + t2 * q2) * p2 + (v2 * o2 + u2 * n2 + t2 * m2) * l2 + (v2 * k2 + u2 * i2 + t2 * f2) * d2), +((s2 * j2 + r2 * h2 + q2 * e2) * p2 + (o2 * j2 + n2 * h2 + m2 * e2) * l2 + (k2 * j2 + i2 * h2 + f2 * e2) * d2));
            return +(d2 * +g[a2 + 732 >> 2]);
          }
          function Dp(b2, d2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, h2 = 0;
            if (a[b2 + 738 >> 0] | 0) {
              c[d2 >> 2] = 0;
              c[d2 + 4 >> 2] = 0;
              return;
            }
            c[d2 >> 2] = 5;
            c[d2 + 4 >> 2] = 1;
            e2 = +Cp(b2, (c[b2 + 28 >> 2] | 0) + 4 | 0, (c[b2 + 32 >> 2] | 0) + 4 | 0);
            g[b2 + 728 >> 2] = e2;
            g[b2 + 708 >> 2] = 0;
            g[b2 + 712 >> 2] = 0;
            a[b2 + 716 >> 0] = 0;
            f2 = +g[b2 + 692 >> 2];
            do
              if (f2 >= 0) {
                e2 = +oG(e2 - +g[b2 + 688 >> 2]);
                if (!(e2 < -3.1415927410125732)) {
                  if (e2 > 3.1415927410125732)
                    e2 = e2 + -6.2831854820251465;
                } else
                  e2 = e2 + 6.2831854820251465;
                if (e2 < -f2) {
                  a[b2 + 716 >> 0] = 1;
                  g[b2 + 708 >> 2] = -(e2 + f2);
                  g[b2 + 712 >> 2] = 1;
                  break;
                }
                if (e2 > f2) {
                  a[b2 + 716 >> 0] = 1;
                  g[b2 + 708 >> 2] = f2 - e2;
                  g[b2 + 712 >> 2] = -1;
                } else
                  h2 = 12;
              } else
                h2 = 12;
            while (0);
            if ((h2 | 0) == 12 ? (a[b2 + 737 >> 0] | 0) == 0 : 0)
              return;
            c[d2 >> 2] = 6;
            c[d2 + 4 >> 2] = 0;
            return;
          }
          function Ep(d2, e2) {
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0, N2 = 0, P2 = 0, Q2 = 0, R2 = 0, S2 = 0, T2 = 0, U2 = 0, V2 = 0, W2 = 0, X2 = 0, Y2 = 0, Z2 = 0, _2 = 0, $2 = 0, aa2 = 0, ba2 = 0, ca2 = 0, da2 = 0, ea2 = 0, fa2 = 0, ga2 = 0, ha2 = 0, ia2 = 0, ja2 = 0, ka2 = 0, la2 = 0, ma2 = 0, na2 = 0, oa2 = 0, pa2 = 0, qa2 = 0, ra2 = 0, sa2 = 0;
            ra2 = c[d2 + 28 >> 2] | 0;
            sa2 = c[d2 + 32 >> 2] | 0;
            s2 = c[e2 + 24 >> 2] | 0;
            if (!(a[d2 + 739 >> 0] | 0)) {
              A2 = +g[d2 + 552 >> 2];
              V2 = +g[ra2 + 4 >> 2];
              B2 = +g[d2 + 568 >> 2];
              W2 = +g[ra2 + 8 >> 2];
              C2 = +g[d2 + 584 >> 2];
              X2 = +g[ra2 + 12 >> 2];
              D2 = +g[d2 + 556 >> 2];
              E2 = +g[d2 + 572 >> 2];
              F2 = +g[d2 + 588 >> 2];
              Y2 = +g[d2 + 560 >> 2];
              Z2 = +g[d2 + 576 >> 2];
              _2 = +g[d2 + 592 >> 2];
              $2 = +g[ra2 + 20 >> 2];
              aa2 = +g[ra2 + 24 >> 2];
              ba2 = +g[ra2 + 28 >> 2];
              ca2 = +g[ra2 + 36 >> 2];
              da2 = +g[ra2 + 40 >> 2];
              ea2 = +g[ra2 + 44 >> 2];
              m2 = +g[d2 + 600 >> 2];
              o2 = +g[d2 + 604 >> 2];
              r2 = +g[d2 + 608 >> 2];
              u2 = +g[ra2 + 52 >> 2];
              v2 = +g[ra2 + 56 >> 2];
              w2 = +g[ra2 + 60 >> 2];
              G2 = +g[sa2 + 4 >> 2];
              H2 = +g[sa2 + 8 >> 2];
              I2 = +g[sa2 + 12 >> 2];
              J2 = +g[d2 + 624 >> 2];
              K2 = +g[d2 + 640 >> 2];
              L2 = +g[d2 + 656 >> 2];
              M2 = +g[sa2 + 20 >> 2];
              N2 = +g[sa2 + 24 >> 2];
              P2 = +g[sa2 + 28 >> 2];
              Q2 = +g[sa2 + 36 >> 2];
              R2 = +g[sa2 + 40 >> 2];
              S2 = +g[sa2 + 44 >> 2];
              pa2 = +g[d2 + 664 >> 2];
              qa2 = +g[d2 + 668 >> 2];
              z2 = +g[d2 + 672 >> 2];
              x2 = +g[sa2 + 52 >> 2] + (G2 * pa2 + H2 * qa2 + I2 * z2);
              y2 = M2 * pa2 + N2 * qa2 + P2 * z2 + +g[sa2 + 56 >> 2];
              z2 = Q2 * pa2 + R2 * qa2 + S2 * z2 + +g[sa2 + 60 >> 2];
              T2 = b[d2 + 736 >> 1] | 0;
              if (!((T2 & 255) << 24 >> 24)) {
                i2 = c[e2 + 8 >> 2] | 0;
                g[i2 >> 2] = 1;
                g[i2 + (s2 + 1 << 2) >> 2] = 1;
                g[i2 + ((s2 << 1) + 2 << 2) >> 2] = 1;
                i2 = c[e2 + 16 >> 2] | 0;
                g[i2 >> 2] = -1;
                g[i2 + (s2 + 1 << 2) >> 2] = -1;
                g[i2 + ((s2 << 1) + 2 << 2) >> 2] = -1;
                i2 = s2 << 1;
                f2 = +g[ra2 + 52 >> 2];
                h2 = +g[ra2 + 56 >> 2];
                k2 = +g[ra2 + 60 >> 2];
              } else {
                i2 = s2 << 1;
                f2 = u2;
                h2 = v2;
                k2 = w2;
              }
              l2 = u2 + (V2 * m2 + W2 * o2 + X2 * r2) - f2;
              f2 = $2 * m2 + aa2 * o2 + ba2 * r2 + v2 - h2;
              qa2 = ca2 * m2 + da2 * o2 + ea2 * r2 + w2 - k2;
              n2 = c[e2 + 12 >> 2] | 0;
              q2 = n2 + (i2 << 2) | 0;
              c[n2 >> 2] = 0;
              g[n2 + 4 >> 2] = qa2;
              g[n2 + 8 >> 2] = -f2;
              g[n2 + 12 >> 2] = 0;
              g[n2 + (s2 << 2) >> 2] = -qa2;
              c[n2 + (s2 << 2) + 4 >> 2] = 0;
              g[n2 + (s2 << 2) + 8 >> 2] = l2;
              g[n2 + (s2 << 2) + 12 >> 2] = 0;
              g[q2 >> 2] = f2;
              g[q2 + 4 >> 2] = -l2;
              c[q2 + 8 >> 2] = 0;
              g[q2 + 12 >> 2] = 0;
              l2 = x2 - +g[sa2 + 52 >> 2];
              f2 = y2 - +g[sa2 + 56 >> 2];
              qa2 = z2 - +g[sa2 + 60 >> 2];
              q2 = c[e2 + 20 >> 2] | 0;
              U2 = q2 + (i2 << 2) | 0;
              c[q2 >> 2] = 0;
              g[q2 + 4 >> 2] = -qa2;
              g[q2 + 8 >> 2] = f2;
              g[q2 + 12 >> 2] = 0;
              g[q2 + (s2 << 2) >> 2] = qa2;
              c[q2 + (s2 << 2) + 4 >> 2] = 0;
              g[q2 + (s2 << 2) + 8 >> 2] = -l2;
              g[q2 + (s2 << 2) + 12 >> 2] = 0;
              g[U2 >> 2] = -f2;
              g[U2 + 4 >> 2] = l2;
              c[U2 + 8 >> 2] = 0;
              g[U2 + 12 >> 2] = 0;
              U2 = c[d2 + 748 >> 2] | 0;
              l2 = +g[((U2 & 8 | 0) == 0 ? e2 + 4 | 0 : d2 + 756 | 0) >> 2];
              f2 = l2 * +g[e2 >> 2];
              t2 = c[e2 + 28 >> 2] | 0;
              if (!((T2 & 255) << 24 >> 24)) {
                g[t2 >> 2] = f2 * (x2 - (u2 + (V2 * m2 + W2 * o2 + X2 * r2)));
                g[t2 + (s2 << 2) >> 2] = f2 * (y2 - ($2 * m2 + aa2 * o2 + ba2 * r2 + v2));
                g[t2 + (s2 << 1 << 2) >> 2] = f2 * (z2 - (ca2 * m2 + da2 * o2 + ea2 * r2 + w2));
              }
              s2 = c[e2 + 24 >> 2] | 0;
              g[n2 + (s2 * 3 << 2) >> 2] = A2 * V2 + B2 * W2 + C2 * X2;
              g[n2 + ((s2 * 3 | 0) + 1 << 2) >> 2] = A2 * $2 + B2 * aa2 + C2 * ba2;
              g[n2 + ((s2 * 3 | 0) + 2 << 2) >> 2] = A2 * ca2 + B2 * da2 + C2 * ea2;
              g[n2 + (s2 << 2 << 2) >> 2] = V2 * D2 + W2 * E2 + X2 * F2;
              g[n2 + ((s2 << 2 | 1) << 2) >> 2] = D2 * $2 + E2 * aa2 + F2 * ba2;
              g[n2 + ((s2 << 2 | 2) << 2) >> 2] = D2 * ca2 + E2 * da2 + F2 * ea2;
              g[q2 + (s2 * 3 << 2) >> 2] = -(A2 * V2 + B2 * W2 + C2 * X2);
              g[q2 + ((s2 * 3 | 0) + 1 << 2) >> 2] = -(A2 * $2 + B2 * aa2 + C2 * ba2);
              g[q2 + ((s2 * 3 | 0) + 2 << 2) >> 2] = -(A2 * ca2 + B2 * da2 + C2 * ea2);
              g[q2 + (s2 << 2 << 2) >> 2] = -(V2 * D2 + W2 * E2 + X2 * F2);
              g[q2 + ((s2 << 2 | 1) << 2) >> 2] = -(D2 * $2 + E2 * aa2 + F2 * ba2);
              g[q2 + ((s2 << 2 | 2) << 2) >> 2] = -(D2 * ca2 + E2 * da2 + F2 * ea2);
              pa2 = (Y2 * $2 + Z2 * aa2 + _2 * ba2) * (J2 * Q2 + K2 * R2 + L2 * S2) - (Y2 * ca2 + Z2 * da2 + _2 * ea2) * (J2 * M2 + K2 * N2 + L2 * P2);
              qa2 = (Y2 * ca2 + Z2 * da2 + _2 * ea2) * (G2 * J2 + H2 * K2 + I2 * L2) - (V2 * Y2 + W2 * Z2 + X2 * _2) * (J2 * Q2 + K2 * R2 + L2 * S2);
              oa2 = (V2 * Y2 + W2 * Z2 + X2 * _2) * (J2 * M2 + K2 * N2 + L2 * P2) - (Y2 * $2 + Z2 * aa2 + _2 * ba2) * (G2 * J2 + H2 * K2 + I2 * L2);
              g[t2 + (s2 * 3 << 2) >> 2] = ((A2 * ca2 + B2 * da2 + C2 * ea2) * oa2 + ((A2 * V2 + B2 * W2 + C2 * X2) * pa2 + (A2 * $2 + B2 * aa2 + C2 * ba2) * qa2)) * f2;
              g[t2 + (s2 << 2 << 2) >> 2] = ((D2 * ca2 + E2 * da2 + F2 * ea2) * oa2 + ((V2 * D2 + W2 * E2 + X2 * F2) * pa2 + (D2 * $2 + E2 * aa2 + F2 * ba2) * qa2)) * f2;
              if (!(a[d2 + 716 >> 0] | 0)) {
                p2 = 0;
                r2 = 0;
              } else {
                r2 = +g[d2 + 708 >> 2] * +g[d2 + 732 >> 2];
                p2 = r2 > 0 ? 1 : 2;
              }
              j2 = (p2 | 0) != 0;
              if (!((T2 & 65535) >>> 8 & 65535 | p2))
                return;
              g[n2 + (s2 * 5 << 2) >> 2] = V2 * Y2 + W2 * Z2 + X2 * _2;
              g[n2 + ((s2 * 5 | 0) + 1 << 2) >> 2] = Y2 * $2 + Z2 * aa2 + _2 * ba2;
              g[n2 + ((s2 * 5 | 0) + 2 << 2) >> 2] = Y2 * ca2 + Z2 * da2 + _2 * ea2;
              g[q2 + (s2 * 5 << 2) >> 2] = -(V2 * Y2 + W2 * Z2 + X2 * _2);
              g[q2 + ((s2 * 5 | 0) + 1 << 2) >> 2] = -(Y2 * $2 + Z2 * aa2 + _2 * ba2);
              g[q2 + ((s2 * 5 | 0) + 2 << 2) >> 2] = -(Y2 * ca2 + Z2 * da2 + _2 * ea2);
              h2 = +g[d2 + 688 >> 2];
              k2 = +g[d2 + 692 >> 2];
              f2 = +oG(h2 - k2);
              if (!(f2 < -3.1415927410125732))
                if (f2 > 3.1415927410125732)
                  o2 = f2 + -6.2831854820251465;
                else
                  o2 = f2;
              else
                o2 = f2 + 6.2831854820251465;
              f2 = +oG(h2 + k2);
              if (!(f2 < -3.1415927410125732))
                if (f2 > 3.1415927410125732)
                  m2 = f2 + -6.2831854820251465;
                else
                  m2 = f2;
              else
                m2 = f2 + 6.2831854820251465;
              i2 = o2 == m2;
              n2 = t2 + (s2 * 5 << 2) | 0;
              g[n2 >> 2] = 0;
              if (U2 & 2)
                l2 = +g[d2 + 764 >> 2];
              if (!((T2 & 65535) >>> 8 << 16 >> 16 == 0 | j2 & i2)) {
                if (U2 & 4 | 0)
                  c[(c[e2 + 32 >> 2] | 0) + (s2 * 5 << 2) >> 2] = c[d2 + 752 >> 2];
                h2 = +g[d2 + 728 >> 2];
                k2 = +g[d2 + 680 >> 2];
                f2 = o2 > m2 ? 1 : 0;
                do
                  if (!(o2 >= m2)) {
                    f2 = k2 / (l2 * +g[e2 >> 2]);
                    if (f2 < 0)
                      if (h2 >= o2 & o2 - f2 > h2) {
                        f2 = (o2 - h2) / f2;
                        break;
                      } else {
                        f2 = h2 < o2 ? 0 : 1;
                        break;
                      }
                    if (f2 > 0)
                      if (h2 <= m2 & m2 - f2 < h2) {
                        f2 = (m2 - h2) / f2;
                        break;
                      } else {
                        f2 = h2 > m2 ? 0 : 1;
                        break;
                      }
                    else
                      f2 = 0;
                  }
                while (0);
                g[n2 >> 2] = f2 * k2 * +g[d2 + 732 >> 2] + +g[n2 >> 2];
                g[(c[e2 + 36 >> 2] | 0) + (s2 * 5 << 2) >> 2] = -+g[d2 + 684 >> 2];
                c[(c[e2 + 40 >> 2] | 0) + (s2 * 5 << 2) >> 2] = c[d2 + 684 >> 2];
              }
              if (!j2)
                return;
              g[n2 >> 2] = +g[n2 >> 2] + r2 * (l2 * +g[e2 >> 2]);
              if (U2 & 1 | 0)
                c[(c[e2 + 32 >> 2] | 0) + (s2 * 5 << 2) >> 2] = c[d2 + 760 >> 2];
              do
                if (!i2) {
                  j2 = (c[e2 + 36 >> 2] | 0) + (s2 * 5 << 2) | 0;
                  i2 = c[e2 + 40 >> 2] | 0;
                  if ((p2 | 0) == 1) {
                    g[j2 >> 2] = 0;
                    g[i2 + (s2 * 5 << 2) >> 2] = 34028234663852886e22;
                    break;
                  } else {
                    g[j2 >> 2] = -34028234663852886e22;
                    g[i2 + (s2 * 5 << 2) >> 2] = 0;
                    break;
                  }
                } else {
                  g[(c[e2 + 36 >> 2] | 0) + (s2 * 5 << 2) >> 2] = -34028234663852886e22;
                  g[(c[e2 + 40 >> 2] | 0) + (s2 * 5 << 2) >> 2] = 34028234663852886e22;
                }
              while (0);
              h2 = +g[d2 + 704 >> 2];
              do
                if (h2 > 0) {
                  f2 = (V2 * Y2 + W2 * Z2 + X2 * _2) * +g[ra2 + 352 >> 2] + (Y2 * $2 + Z2 * aa2 + _2 * ba2) * +g[ra2 + 356 >> 2] + (Y2 * ca2 + Z2 * da2 + _2 * ea2) * +g[ra2 + 360 >> 2] - ((V2 * Y2 + W2 * Z2 + X2 * _2) * +g[sa2 + 352 >> 2] + (Y2 * $2 + Z2 * aa2 + _2 * ba2) * +g[sa2 + 356 >> 2] + (Y2 * ca2 + Z2 * da2 + _2 * ea2) * +g[sa2 + 360 >> 2]);
                  if ((p2 | 0) == 1) {
                    if (!(f2 < 0))
                      break;
                    if (!(+g[n2 >> 2] < -(h2 * f2)))
                      break;
                    g[n2 >> 2] = -(h2 * f2);
                    break;
                  } else {
                    if (!(f2 > 0))
                      break;
                    if (!(+g[n2 >> 2] > -(h2 * f2)))
                      break;
                    g[n2 >> 2] = -(h2 * f2);
                    break;
                  }
                }
              while (0);
              g[n2 >> 2] = +g[d2 + 700 >> 2] * +g[n2 >> 2];
              return;
            }
            Y2 = +g[ra2 + 4 >> 2];
            Z2 = +g[ra2 + 8 >> 2];
            _2 = +g[ra2 + 12 >> 2];
            u2 = +g[d2 + 556 >> 2];
            x2 = +g[d2 + 572 >> 2];
            z2 = +g[d2 + 588 >> 2];
            $2 = +g[d2 + 560 >> 2];
            aa2 = +g[d2 + 576 >> 2];
            ba2 = +g[d2 + 592 >> 2];
            ca2 = +g[ra2 + 20 >> 2];
            da2 = +g[ra2 + 24 >> 2];
            ea2 = +g[ra2 + 28 >> 2];
            fa2 = +g[ra2 + 36 >> 2];
            ga2 = +g[ra2 + 40 >> 2];
            ha2 = +g[ra2 + 44 >> 2];
            ja2 = +g[d2 + 600 >> 2];
            ia2 = +g[d2 + 604 >> 2];
            o2 = +g[d2 + 608 >> 2];
            h2 = +g[ra2 + 52 >> 2] + (Y2 * ja2 + Z2 * ia2 + _2 * o2);
            w2 = ca2 * ja2 + da2 * ia2 + ea2 * o2 + +g[ra2 + 56 >> 2];
            o2 = fa2 * ja2 + ga2 * ia2 + ha2 * o2 + +g[ra2 + 60 >> 2];
            ia2 = +g[sa2 + 4 >> 2];
            ja2 = +g[sa2 + 8 >> 2];
            ka2 = +g[sa2 + 12 >> 2];
            la2 = +g[d2 + 624 >> 2];
            ma2 = +g[d2 + 640 >> 2];
            P2 = +g[d2 + 656 >> 2];
            Q2 = +g[sa2 + 20 >> 2];
            R2 = +g[sa2 + 24 >> 2];
            S2 = +g[sa2 + 28 >> 2];
            V2 = +g[sa2 + 36 >> 2];
            W2 = +g[sa2 + 40 >> 2];
            X2 = +g[sa2 + 44 >> 2];
            r2 = +g[d2 + 664 >> 2];
            y2 = +g[d2 + 668 >> 2];
            k2 = +g[d2 + 672 >> 2];
            f2 = +g[sa2 + 52 >> 2];
            v2 = +g[sa2 + 56 >> 2];
            m2 = +g[sa2 + 60 >> 2];
            J2 = f2 + (ia2 * r2 + ja2 * y2 + ka2 * k2) - h2;
            K2 = Q2 * r2 + R2 * y2 + S2 * k2 + v2 - w2;
            L2 = V2 * r2 + W2 * y2 + X2 * k2 + m2 - o2;
            A2 = +g[(c[d2 + 28 >> 2] | 0) + 368 >> 2];
            B2 = +g[(c[d2 + 32 >> 2] | 0) + 368 >> 2];
            I2 = A2 + B2 > 0 ? B2 / (A2 + B2) : 0.5;
            na2 = (Y2 * $2 + Z2 * aa2 + _2 * ba2) * I2 + (ia2 * la2 + ja2 * ma2 + ka2 * P2) * (1 - I2);
            oa2 = ($2 * ca2 + aa2 * da2 + ba2 * ea2) * I2 + (la2 * Q2 + ma2 * R2 + P2 * S2) * (1 - I2);
            pa2 = ($2 * fa2 + aa2 * ga2 + ba2 * ha2) * I2 + (la2 * V2 + ma2 * W2 + P2 * X2) * (1 - I2);
            qa2 = 1 / +O(+(na2 * na2 + oa2 * oa2 + pa2 * pa2));
            C2 = (f2 + (ia2 * r2 + ja2 * y2 + ka2 * k2) - f2) * (na2 * qa2) + (Q2 * r2 + R2 * y2 + S2 * k2 + v2 - v2) * (oa2 * qa2) + (V2 * r2 + W2 * y2 + X2 * k2 + m2 - m2) * (pa2 * qa2);
            f2 = f2 + (ia2 * r2 + ja2 * y2 + ka2 * k2) - f2 - na2 * qa2 * C2;
            v2 = Q2 * r2 + R2 * y2 + S2 * k2 + v2 - v2 - oa2 * qa2 * C2;
            m2 = V2 * r2 + W2 * y2 + X2 * k2 + m2 - m2 - pa2 * qa2 * C2;
            h2 = h2 - +g[ra2 + 52 >> 2];
            w2 = w2 - +g[ra2 + 56 >> 2];
            o2 = o2 - +g[ra2 + 60 >> 2];
            k2 = na2 * qa2 * (h2 * (na2 * qa2) + w2 * (oa2 * qa2) + o2 * (pa2 * qa2));
            y2 = oa2 * qa2 * (h2 * (na2 * qa2) + w2 * (oa2 * qa2) + o2 * (pa2 * qa2));
            r2 = pa2 * qa2 * (h2 * (na2 * qa2) + w2 * (oa2 * qa2) + o2 * (pa2 * qa2));
            G2 = h2 - k2 + I2 * (k2 - na2 * qa2 * C2);
            H2 = w2 - y2 + I2 * (y2 - oa2 * qa2 * C2);
            F2 = o2 - r2 + I2 * (r2 - pa2 * qa2 * C2);
            D2 = f2 - (1 - I2) * (k2 - na2 * qa2 * C2);
            E2 = v2 - (1 - I2) * (y2 - oa2 * qa2 * C2);
            C2 = m2 - (1 - I2) * (r2 - pa2 * qa2 * C2);
            l2 = (I2 * f2 + (1 - I2) * (h2 - k2)) * (I2 * f2 + (1 - I2) * (h2 - k2)) + (I2 * v2 + (1 - I2) * (w2 - y2)) * (I2 * v2 + (1 - I2) * (w2 - y2)) + (I2 * m2 + (1 - I2) * (o2 - r2)) * (I2 * m2 + (1 - I2) * (o2 - r2));
            if (l2 > 11920928955078125e-23) {
              z2 = 1 / +O(+l2);
              N2 = (I2 * f2 + (1 - I2) * (h2 - k2)) * z2;
              M2 = z2 * (I2 * m2 + (1 - I2) * (o2 - r2));
              w2 = z2 * (I2 * v2 + (1 - I2) * (w2 - y2));
            } else {
              N2 = Y2 * u2 + Z2 * x2 + _2 * z2;
              M2 = u2 * fa2 + x2 * ga2 + z2 * ha2;
              w2 = u2 * ca2 + x2 * da2 + z2 * ea2;
            }
            r2 = oa2 * qa2 * M2 - pa2 * qa2 * w2;
            u2 = pa2 * qa2 * N2 - M2 * (na2 * qa2);
            v2 = w2 * (na2 * qa2) - oa2 * qa2 * N2;
            U2 = c[e2 + 12 >> 2] | 0;
            g[U2 >> 2] = H2 * M2 - F2 * w2;
            g[U2 + 4 >> 2] = F2 * N2 - G2 * M2;
            g[U2 + 8 >> 2] = G2 * w2 - H2 * N2;
            U2 = c[e2 + 20 >> 2] | 0;
            g[U2 >> 2] = -(E2 * M2 - C2 * w2);
            g[U2 + 4 >> 2] = -(C2 * N2 - D2 * M2);
            g[U2 + 8 >> 2] = -(D2 * w2 - E2 * N2);
            if (A2 < 11920928955078125e-23 | B2 < 11920928955078125e-23 ? (a[d2 + 716 >> 0] | 0) != 0 : 0) {
              f2 = (1 - I2) * (E2 * v2 - C2 * u2);
              h2 = (1 - I2) * (C2 * r2 - D2 * v2);
              k2 = (1 - I2) * (D2 * u2 - E2 * r2);
              l2 = I2 * (H2 * v2 - F2 * u2);
              m2 = I2 * (F2 * r2 - G2 * v2);
              o2 = I2 * (G2 * u2 - H2 * r2);
            } else {
              f2 = E2 * v2 - C2 * u2;
              h2 = C2 * r2 - D2 * v2;
              k2 = D2 * u2 - E2 * r2;
              l2 = H2 * v2 - F2 * u2;
              m2 = F2 * r2 - G2 * v2;
              o2 = G2 * u2 - H2 * r2;
            }
            U2 = (c[e2 + 12 >> 2] | 0) + (s2 << 2) | 0;
            g[U2 >> 2] = l2;
            g[U2 + 4 >> 2] = m2;
            g[U2 + 8 >> 2] = o2;
            U2 = c[e2 + 20 >> 2] | 0;
            g[U2 + (s2 << 2) >> 2] = -f2;
            g[U2 + (s2 + 1 << 2) >> 2] = -h2;
            g[U2 + (s2 + 2 << 2) >> 2] = -k2;
            if (A2 < 11920928955078125e-23 | B2 < 11920928955078125e-23) {
              o2 = (1 - I2) * (E2 * (pa2 * qa2) - C2 * (oa2 * qa2));
              m2 = (1 - I2) * (C2 * (na2 * qa2) - D2 * (pa2 * qa2));
              l2 = (1 - I2) * (D2 * (oa2 * qa2) - E2 * (na2 * qa2));
              k2 = I2 * (H2 * (pa2 * qa2) - F2 * (oa2 * qa2));
              h2 = I2 * (F2 * (na2 * qa2) - G2 * (pa2 * qa2));
              f2 = I2 * (G2 * (oa2 * qa2) - H2 * (na2 * qa2));
            } else {
              o2 = E2 * (pa2 * qa2) - C2 * (oa2 * qa2);
              m2 = C2 * (na2 * qa2) - D2 * (pa2 * qa2);
              l2 = D2 * (oa2 * qa2) - E2 * (na2 * qa2);
              k2 = H2 * (pa2 * qa2) - F2 * (oa2 * qa2);
              h2 = F2 * (na2 * qa2) - G2 * (pa2 * qa2);
              f2 = G2 * (oa2 * qa2) - H2 * (na2 * qa2);
            }
            i2 = (c[e2 + 12 >> 2] | 0) + (s2 << 1 << 2) | 0;
            g[i2 >> 2] = k2;
            g[i2 + 4 >> 2] = h2;
            g[i2 + 8 >> 2] = f2;
            i2 = c[e2 + 20 >> 2] | 0;
            g[i2 + (s2 << 1 << 2) >> 2] = -o2;
            g[i2 + ((s2 << 1 | 1) << 2) >> 2] = -m2;
            g[i2 + ((s2 << 1) + 2 << 2) >> 2] = -l2;
            m2 = +g[((c[d2 + 748 >> 2] & 8 | 0) == 0 ? e2 + 4 | 0 : d2 + 756 | 0) >> 2];
            f2 = m2 * +g[e2 >> 2];
            if (!(a[d2 + 736 >> 0] | 0)) {
              p2 = c[e2 + 8 >> 2] | 0;
              g[p2 >> 2] = N2;
              g[p2 + 4 >> 2] = w2;
              g[p2 + 8 >> 2] = M2;
              p2 = (c[e2 + 8 >> 2] | 0) + (s2 << 2) | 0;
              g[p2 >> 2] = r2;
              g[p2 + 4 >> 2] = u2;
              g[p2 + 8 >> 2] = v2;
              p2 = (c[e2 + 8 >> 2] | 0) + (s2 << 1 << 2) | 0;
              g[p2 >> 2] = na2 * qa2;
              g[p2 + 4 >> 2] = oa2 * qa2;
              g[p2 + 8 >> 2] = pa2 * qa2;
              p2 = c[e2 + 16 >> 2] | 0;
              h2 = -N2;
              g[p2 >> 2] = h2;
              g[p2 + 4 >> 2] = -w2;
              g[p2 + 8 >> 2] = -M2;
              p2 = c[e2 + 16 >> 2] | 0;
              g[p2 + (s2 << 2) >> 2] = -r2;
              g[p2 + (s2 + 1 << 2) >> 2] = -u2;
              g[p2 + (s2 + 2 << 2) >> 2] = -v2;
              p2 = c[e2 + 16 >> 2] | 0;
              g[p2 + (s2 << 1 << 2) >> 2] = -(na2 * qa2);
              g[p2 + ((s2 << 1 | 1) << 2) >> 2] = -(oa2 * qa2);
              g[p2 + ((s2 << 1) + 2 << 2) >> 2] = -(pa2 * qa2);
              p2 = c[e2 + 28 >> 2] | 0;
              g[p2 >> 2] = f2 * (J2 * N2 + K2 * w2 + L2 * M2);
              g[p2 + (s2 << 2) >> 2] = f2 * (J2 * r2 + K2 * u2 + L2 * v2);
              g[p2 + (s2 << 1 << 2) >> 2] = f2 * (J2 * (na2 * qa2) + K2 * (oa2 * qa2) + L2 * (pa2 * qa2));
              f2 = h2;
              h2 = -r2;
              k2 = -u2;
              l2 = -v2;
              i2 = c[e2 + 20 >> 2] | 0;
            } else {
              f2 = -N2;
              h2 = -r2;
              k2 = -u2;
              l2 = -v2;
              p2 = c[e2 + 28 >> 2] | 0;
            }
            j2 = c[e2 + 12 >> 2] | 0;
            g[j2 + (s2 * 3 << 2) >> 2] = N2;
            g[j2 + ((s2 * 3 | 0) + 1 << 2) >> 2] = w2;
            g[j2 + ((s2 * 3 | 0) + 2 << 2) >> 2] = M2;
            g[j2 + (s2 << 2 << 2) >> 2] = r2;
            g[j2 + ((s2 << 2 | 1) << 2) >> 2] = u2;
            g[j2 + ((s2 << 2 | 2) << 2) >> 2] = v2;
            g[i2 + (s2 * 3 << 2) >> 2] = f2;
            g[i2 + ((s2 * 3 | 0) + 1 << 2) >> 2] = -w2;
            g[i2 + ((s2 * 3 | 0) + 2 << 2) >> 2] = -M2;
            g[i2 + (s2 << 2 << 2) >> 2] = h2;
            g[i2 + ((s2 << 2 | 1) << 2) >> 2] = k2;
            g[i2 + ((s2 << 2 | 2) << 2) >> 2] = l2;
            K2 = m2 * +g[e2 >> 2];
            L2 = ($2 * ca2 + aa2 * da2 + ba2 * ea2) * (la2 * V2 + ma2 * W2 + P2 * X2) - ($2 * fa2 + aa2 * ga2 + ba2 * ha2) * (la2 * Q2 + ma2 * R2 + P2 * S2);
            ha2 = ($2 * fa2 + aa2 * ga2 + ba2 * ha2) * (ia2 * la2 + ja2 * ma2 + ka2 * P2) - (Y2 * $2 + Z2 * aa2 + _2 * ba2) * (la2 * V2 + ma2 * W2 + P2 * X2);
            ma2 = (Y2 * $2 + Z2 * aa2 + _2 * ba2) * (la2 * Q2 + ma2 * R2 + P2 * S2) - ($2 * ca2 + aa2 * da2 + ba2 * ea2) * (ia2 * la2 + ja2 * ma2 + ka2 * P2);
            g[p2 + (s2 * 3 << 2) >> 2] = K2 * (L2 * N2 + ha2 * w2 + ma2 * M2);
            g[p2 + (s2 << 2 << 2) >> 2] = K2 * (L2 * r2 + ha2 * u2 + ma2 * v2);
            if (!(a[d2 + 716 >> 0] | 0)) {
              t2 = 0;
              r2 = 0;
            } else {
              r2 = +g[d2 + 708 >> 2] * +g[d2 + 732 >> 2];
              t2 = r2 > 0 ? 1 : 2;
            }
            n2 = a[d2 + 737 >> 0] | 0;
            q2 = (t2 | 0) != 0;
            if (!(n2 & 255 | t2))
              return;
            s2 = (c[e2 + 24 >> 2] | 0) * 5 | 0;
            g[j2 + (s2 << 2) >> 2] = na2 * qa2;
            g[j2 + (s2 + 1 << 2) >> 2] = oa2 * qa2;
            g[j2 + (s2 + 2 << 2) >> 2] = pa2 * qa2;
            g[i2 + (s2 << 2) >> 2] = -(na2 * qa2);
            g[i2 + (s2 + 1 << 2) >> 2] = -(oa2 * qa2);
            g[i2 + (s2 + 2 << 2) >> 2] = -(pa2 * qa2);
            h2 = +g[d2 + 688 >> 2];
            k2 = +g[d2 + 692 >> 2];
            f2 = +oG(h2 - k2);
            if (!(f2 < -3.1415927410125732))
              if (f2 > 3.1415927410125732)
                o2 = f2 + -6.2831854820251465;
              else
                o2 = f2;
            else
              o2 = f2 + 6.2831854820251465;
            f2 = +oG(h2 + k2);
            if (!(f2 < -3.1415927410125732)) {
              if (f2 > 3.1415927410125732)
                f2 = f2 + -6.2831854820251465;
            } else
              f2 = f2 + 6.2831854820251465;
            j2 = o2 == f2;
            p2 = p2 + (s2 << 2) | 0;
            g[p2 >> 2] = 0;
            i2 = c[d2 + 748 >> 2] | 0;
            if (i2 & 2)
              m2 = +g[d2 + 764 >> 2];
            if (!(n2 << 24 >> 24 == 0 | q2 & j2)) {
              if (i2 & 4 | 0)
                c[(c[e2 + 32 >> 2] | 0) + (s2 << 2) >> 2] = c[d2 + 752 >> 2];
              k2 = +g[d2 + 728 >> 2];
              l2 = +g[d2 + 680 >> 2];
              h2 = o2 > f2 ? 1 : 0;
              do
                if (!(o2 >= f2)) {
                  h2 = l2 / (m2 * +g[e2 >> 2]);
                  if (h2 < 0)
                    if (k2 >= o2 & o2 - h2 > k2) {
                      f2 = (o2 - k2) / h2;
                      break;
                    } else {
                      f2 = k2 < o2 ? 0 : 1;
                      break;
                    }
                  if (h2 > 0)
                    if (k2 <= f2 & f2 - h2 < k2) {
                      f2 = (f2 - k2) / h2;
                      break;
                    } else {
                      f2 = k2 > f2 ? 0 : 1;
                      break;
                    }
                  else
                    f2 = 0;
                } else
                  f2 = h2;
              while (0);
              g[p2 >> 2] = f2 * l2 * +g[d2 + 732 >> 2] + +g[p2 >> 2];
              g[(c[e2 + 36 >> 2] | 0) + (s2 << 2) >> 2] = -+g[d2 + 684 >> 2];
              c[(c[e2 + 40 >> 2] | 0) + (s2 << 2) >> 2] = c[d2 + 684 >> 2];
            }
            if (!q2)
              return;
            g[p2 >> 2] = +g[p2 >> 2] + r2 * (m2 * +g[e2 >> 2]);
            if (i2 & 1 | 0)
              c[(c[e2 + 32 >> 2] | 0) + (s2 << 2) >> 2] = c[d2 + 760 >> 2];
            do
              if (!j2) {
                j2 = (c[e2 + 36 >> 2] | 0) + (s2 << 2) | 0;
                i2 = c[e2 + 40 >> 2] | 0;
                if ((t2 | 0) == 1) {
                  g[j2 >> 2] = 0;
                  g[i2 + (s2 << 2) >> 2] = 34028234663852886e22;
                  break;
                } else {
                  g[j2 >> 2] = -34028234663852886e22;
                  g[i2 + (s2 << 2) >> 2] = 0;
                  break;
                }
              } else {
                g[(c[e2 + 36 >> 2] | 0) + (s2 << 2) >> 2] = -34028234663852886e22;
                g[(c[e2 + 40 >> 2] | 0) + (s2 << 2) >> 2] = 34028234663852886e22;
              }
            while (0);
            h2 = +g[d2 + 704 >> 2];
            do
              if (h2 > 0) {
                f2 = +g[ra2 + 352 >> 2] * (na2 * qa2) + +g[ra2 + 356 >> 2] * (oa2 * qa2) + +g[ra2 + 360 >> 2] * (pa2 * qa2) - (na2 * qa2 * +g[sa2 + 352 >> 2] + oa2 * qa2 * +g[sa2 + 356 >> 2] + pa2 * qa2 * +g[sa2 + 360 >> 2]);
                if ((t2 | 0) == 1) {
                  if (!(f2 < 0))
                    break;
                  if (!(+g[p2 >> 2] < -(h2 * f2)))
                    break;
                  g[p2 >> 2] = -(h2 * f2);
                  break;
                } else {
                  if (!(f2 > 0))
                    break;
                  if (!(+g[p2 >> 2] > -(h2 * f2)))
                    break;
                  g[p2 >> 2] = -(h2 * f2);
                  break;
                }
              }
            while (0);
            g[p2 >> 2] = +g[d2 + 700 >> 2] * +g[p2 >> 2];
            return;
          }
          function Fp(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = +d2;
            e2 = e2 | 0;
            switch (e2 | 0) {
              case 5:
              case -1:
                break;
              default:
                return;
            }
            switch (b2 | 0) {
              case 2: {
                g[a2 + 764 >> 2] = d2;
                c[a2 + 748 >> 2] = c[a2 + 748 >> 2] | 2;
                return;
              }
              case 4: {
                g[a2 + 760 >> 2] = d2;
                c[a2 + 748 >> 2] = c[a2 + 748 >> 2] | 1;
                return;
              }
              case 3: {
                g[a2 + 752 >> 2] = d2;
                c[a2 + 748 >> 2] = c[a2 + 748 >> 2] | 4;
                return;
              }
              case 1: {
                g[a2 + 756 >> 2] = d2;
                c[a2 + 748 >> 2] = c[a2 + 748 >> 2] | 8;
                return;
              }
              default:
                return;
            }
          }
          function Gp(a2, b2, c2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            var d2 = 0;
            a:
              do
                switch (c2 | 0) {
                  case 5:
                  case -1:
                    switch (b2 | 0) {
                      case 2: {
                        d2 = +g[a2 + 764 >> 2];
                        break a;
                      }
                      case 4: {
                        d2 = +g[a2 + 760 >> 2];
                        break a;
                      }
                      case 3: {
                        d2 = +g[a2 + 752 >> 2];
                        break a;
                      }
                      case 1: {
                        d2 = +g[a2 + 756 >> 2];
                        break a;
                      }
                      default: {
                        d2 = 0;
                        break a;
                      }
                    }
                  default:
                    d2 = 0;
                }
              while (0);
            return +d2;
          }
          function Hp(a2) {
            a2 = a2 | 0;
            return 220;
          }
          function Ip(a2, e2, f2) {
            a2 = a2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            var h2 = 0, i2 = 0, j2 = 0, k2 = 0;
            Aq(a2, e2, f2) | 0;
            c[e2 + 52 >> 2] = c[a2 + 552 >> 2];
            c[e2 + 56 >> 2] = c[a2 + 556 >> 2];
            c[e2 + 60 >> 2] = c[a2 + 560 >> 2];
            c[e2 + 64 >> 2] = c[a2 + 564 >> 2];
            c[e2 + 68 >> 2] = c[a2 + 568 >> 2];
            c[e2 + 72 >> 2] = c[a2 + 572 >> 2];
            c[e2 + 76 >> 2] = c[a2 + 576 >> 2];
            c[e2 + 80 >> 2] = c[a2 + 580 >> 2];
            c[e2 + 84 >> 2] = c[a2 + 584 >> 2];
            c[e2 + 88 >> 2] = c[a2 + 588 >> 2];
            c[e2 + 92 >> 2] = c[a2 + 592 >> 2];
            c[e2 + 96 >> 2] = c[a2 + 596 >> 2];
            c[e2 + 100 >> 2] = c[a2 + 600 >> 2];
            c[e2 + 104 >> 2] = c[a2 + 604 >> 2];
            c[e2 + 108 >> 2] = c[a2 + 608 >> 2];
            c[e2 + 112 >> 2] = c[a2 + 612 >> 2];
            c[e2 + 116 >> 2] = c[a2 + 616 >> 2];
            c[e2 + 120 >> 2] = c[a2 + 620 >> 2];
            c[e2 + 124 >> 2] = c[a2 + 624 >> 2];
            c[e2 + 128 >> 2] = c[a2 + 628 >> 2];
            c[e2 + 132 >> 2] = c[a2 + 632 >> 2];
            c[e2 + 136 >> 2] = c[a2 + 636 >> 2];
            c[e2 + 140 >> 2] = c[a2 + 640 >> 2];
            c[e2 + 144 >> 2] = c[a2 + 644 >> 2];
            c[e2 + 148 >> 2] = c[a2 + 648 >> 2];
            c[e2 + 152 >> 2] = c[a2 + 652 >> 2];
            c[e2 + 156 >> 2] = c[a2 + 656 >> 2];
            c[e2 + 160 >> 2] = c[a2 + 660 >> 2];
            c[e2 + 164 >> 2] = c[a2 + 664 >> 2];
            c[e2 + 168 >> 2] = c[a2 + 668 >> 2];
            c[e2 + 172 >> 2] = c[a2 + 672 >> 2];
            c[e2 + 176 >> 2] = c[a2 + 676 >> 2];
            f2 = b[a2 + 736 >> 1] | 0;
            c[e2 + 184 >> 2] = f2 & 255;
            c[e2 + 188 >> 2] = (f2 & 65535) >>> 8 & 65535;
            c[e2 + 196 >> 2] = c[a2 + 684 >> 2];
            c[e2 + 192 >> 2] = c[a2 + 680 >> 2];
            c[e2 + 180 >> 2] = d[a2 + 740 >> 0];
            i2 = +g[a2 + 688 >> 2];
            j2 = +g[a2 + 692 >> 2];
            h2 = +oG(i2 - j2);
            if (!(h2 < -3.1415927410125732)) {
              if (h2 > 3.1415927410125732)
                h2 = h2 + -6.2831854820251465;
            } else
              h2 = h2 + 6.2831854820251465;
            g[e2 + 200 >> 2] = h2;
            h2 = +oG(i2 + j2);
            if (h2 < -3.1415927410125732) {
              j2 = h2 + 6.2831854820251465;
              f2 = e2 + 204 | 0;
              g[f2 >> 2] = j2;
              f2 = a2 + 696 | 0;
              f2 = c[f2 >> 2] | 0;
              k2 = e2 + 208 | 0;
              c[k2 >> 2] = f2;
              k2 = a2 + 700 | 0;
              k2 = c[k2 >> 2] | 0;
              f2 = e2 + 212 | 0;
              c[f2 >> 2] = k2;
              f2 = a2 + 704 | 0;
              f2 = c[f2 >> 2] | 0;
              a2 = e2 + 216 | 0;
              c[a2 >> 2] = f2;
              return 15376;
            }
            if (!(h2 > 3.1415927410125732)) {
              j2 = h2;
              k2 = e2 + 204 | 0;
              g[k2 >> 2] = j2;
              k2 = a2 + 696 | 0;
              k2 = c[k2 >> 2] | 0;
              f2 = e2 + 208 | 0;
              c[f2 >> 2] = k2;
              f2 = a2 + 700 | 0;
              f2 = c[f2 >> 2] | 0;
              k2 = e2 + 212 | 0;
              c[k2 >> 2] = f2;
              a2 = a2 + 704 | 0;
              a2 = c[a2 >> 2] | 0;
              k2 = e2 + 216 | 0;
              c[k2 >> 2] = a2;
              return 15376;
            }
            j2 = h2 + -6.2831854820251465;
            k2 = e2 + 204 | 0;
            g[k2 >> 2] = j2;
            k2 = a2 + 696 | 0;
            k2 = c[k2 >> 2] | 0;
            f2 = e2 + 208 | 0;
            c[f2 >> 2] = k2;
            f2 = a2 + 700 | 0;
            f2 = c[f2 >> 2] | 0;
            k2 = e2 + 212 | 0;
            c[k2 >> 2] = f2;
            a2 = a2 + 704 | 0;
            a2 = c[a2 >> 2] | 0;
            k2 = e2 + 216 | 0;
            c[k2 >> 2] = a2;
            return 15376;
          }
          function Jp(a2) {
            a2 = a2 | 0;
            return c[a2 + 748 >> 2] | 0;
          }
          function Kp(b2, d2, e2, f2, h2, i2, j2, l2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            h2 = h2 | 0;
            i2 = i2 | 0;
            j2 = j2 | 0;
            l2 = l2 | 0;
            var m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0;
            c[b2 + 4 >> 2] = 4;
            c[b2 + 8 >> 2] = -1;
            c[b2 + 12 >> 2] = -1;
            g[b2 + 16 >> 2] = 34028234663852886e22;
            a[b2 + 20 >> 0] = 1;
            a[b2 + 21 >> 0] = 0;
            c[b2 + 24 >> 2] = -1;
            c[b2 + 28 >> 2] = d2;
            c[b2 + 32 >> 2] = e2;
            g[b2 + 36 >> 2] = 0;
            g[b2 + 40 >> 2] = 0.30000001192092896;
            c[b2 + 44 >> 2] = 0;
            c[b2 >> 2] = 7428;
            g[b2 + 688 >> 2] = 0;
            g[b2 + 692 >> 2] = -1;
            g[b2 + 696 >> 2] = 0.8999999761581421;
            g[b2 + 700 >> 2] = 0.30000001192092896;
            g[b2 + 704 >> 2] = 1;
            g[b2 + 708 >> 2] = 0;
            g[b2 + 712 >> 2] = 0;
            a[b2 + 716 >> 0] = 0;
            a[b2 + 736 >> 0] = 0;
            a[b2 + 737 >> 0] = 0;
            a[b2 + 738 >> 0] = 0;
            a[b2 + 739 >> 0] = 1;
            a[b2 + 740 >> 0] = l2 & 1;
            c[b2 + 748 >> 2] = 0;
            c[b2 + 748 + 4 >> 2] = 0;
            c[b2 + 748 + 8 >> 2] = 0;
            c[b2 + 748 + 12 >> 2] = 0;
            c[b2 + 748 + 16 >> 2] = 0;
            c[b2 + 600 >> 2] = c[f2 >> 2];
            c[b2 + 600 + 4 >> 2] = c[f2 + 4 >> 2];
            c[b2 + 600 + 8 >> 2] = c[f2 + 8 >> 2];
            c[b2 + 600 + 12 >> 2] = c[f2 + 12 >> 2];
            m2 = +g[d2 + 4 >> 2];
            n2 = +g[d2 + 20 >> 2];
            o2 = +g[d2 + 36 >> 2];
            p2 = +g[i2 >> 2];
            q2 = +g[i2 + 4 >> 2];
            r2 = +g[i2 + 8 >> 2];
            do
              if (!(m2 * p2 + n2 * q2 + o2 * r2 >= 0.9999998807907104))
                if (!(m2 * p2 + n2 * q2 + o2 * r2 <= -0.9999998807907104)) {
                  e2 = (g[k >> 2] = o2 * q2 - n2 * r2, c[k >> 2] | 0);
                  f2 = (g[k >> 2] = m2 * r2 - o2 * p2, c[k >> 2] | 0);
                  l2 = (g[k >> 2] = n2 * p2 - m2 * q2, c[k >> 2] | 0);
                  u2 = (g[k >> 2] = r2 * (m2 * r2 - o2 * p2) - q2 * (n2 * p2 - m2 * q2), c[k >> 2] | 0);
                  v2 = (g[k >> 2] = p2 * (n2 * p2 - m2 * q2) - r2 * (o2 * q2 - n2 * r2), c[k >> 2] | 0);
                  t2 = (g[k >> 2] = q2 * (o2 * q2 - n2 * r2) - p2 * (m2 * r2 - o2 * p2), c[k >> 2] | 0);
                  break;
                } else {
                  u2 = c[d2 + 12 >> 2] | 0;
                  v2 = c[d2 + 28 >> 2] | 0;
                  t2 = c[d2 + 44 >> 2] | 0;
                  e2 = c[d2 + 8 >> 2] | 0;
                  l2 = c[d2 + 40 >> 2] | 0;
                  f2 = c[d2 + 24 >> 2] | 0;
                  break;
                }
              else {
                u2 = (g[k >> 2] = -+g[d2 + 12 >> 2], c[k >> 2] | 0);
                v2 = (g[k >> 2] = -+g[d2 + 28 >> 2], c[k >> 2] | 0);
                t2 = (g[k >> 2] = -+g[d2 + 44 >> 2], c[k >> 2] | 0);
                e2 = c[d2 + 8 >> 2] | 0;
                l2 = c[d2 + 40 >> 2] | 0;
                f2 = c[d2 + 24 >> 2] | 0;
              }
            while (0);
            c[b2 + 552 >> 2] = u2;
            c[b2 + 556 >> 2] = e2;
            c[b2 + 560 >> 2] = c[i2 >> 2];
            g[b2 + 564 >> 2] = 0;
            c[b2 + 568 >> 2] = v2;
            c[b2 + 572 >> 2] = f2;
            c[b2 + 576 >> 2] = c[i2 + 4 >> 2];
            g[b2 + 580 >> 2] = 0;
            c[b2 + 584 >> 2] = t2;
            c[b2 + 588 >> 2] = l2;
            c[b2 + 592 >> 2] = c[i2 + 8 >> 2];
            g[b2 + 596 >> 2] = 0;
            o2 = +g[i2 + 4 >> 2];
            q2 = +g[j2 + 8 >> 2];
            m2 = +g[i2 + 8 >> 2];
            r2 = +g[j2 + 4 >> 2];
            s2 = +g[j2 >> 2];
            n2 = +g[i2 >> 2];
            do
              if (q2 * m2 + (o2 * r2 + s2 * n2) < -0.9999998807907104)
                if (+N(+m2) > 0.7071067690849304) {
                  n2 = 1 / +O(+(o2 * o2 + m2 * m2));
                  e2 = 0;
                  p2 = 0;
                  m2 = -(m2 * n2);
                  f2 = (g[k >> 2] = o2 * n2, c[k >> 2] | 0);
                  break;
                } else {
                  m2 = 1 / +O(+(o2 * o2 + n2 * n2));
                  e2 = (g[k >> 2] = -(o2 * m2), c[k >> 2] | 0);
                  p2 = 0;
                  m2 = n2 * m2;
                  f2 = 0;
                  break;
                }
              else {
                w2 = +O(+((q2 * m2 + (o2 * r2 + s2 * n2) + 1) * 2));
                e2 = (g[k >> 2] = (o2 * q2 - m2 * r2) * (1 / w2), c[k >> 2] | 0);
                p2 = w2 * 0.5;
                m2 = (m2 * s2 - q2 * n2) * (1 / w2);
                f2 = (g[k >> 2] = (r2 * n2 - o2 * s2) * (1 / w2), c[k >> 2] | 0);
              }
            while (0);
            o2 = (c[k >> 2] = u2, +g[k >> 2]);
            A2 = (c[k >> 2] = t2, +g[k >> 2]);
            z2 = (c[k >> 2] = f2, +g[k >> 2]);
            w2 = (c[k >> 2] = v2, +g[k >> 2]);
            B2 = o2 * p2 + A2 * m2 - w2 * z2;
            n2 = (c[k >> 2] = e2, +g[k >> 2]);
            x2 = w2 * p2 + o2 * z2 - A2 * n2;
            y2 = A2 * p2 + w2 * n2 - o2 * m2;
            A2 = -(o2 * n2) - w2 * m2 - A2 * z2;
            m2 = -m2;
            w2 = x2 * -z2 + (p2 * B2 + A2 * -n2) - y2 * m2;
            o2 = y2 * -n2 + (p2 * x2 + A2 * m2) - B2 * -z2;
            p2 = B2 * m2 + (A2 * -z2 + p2 * y2) - x2 * -n2;
            c[b2 + 664 >> 2] = c[h2 >> 2];
            c[b2 + 664 + 4 >> 2] = c[h2 + 4 >> 2];
            c[b2 + 664 + 8 >> 2] = c[h2 + 8 >> 2];
            c[b2 + 664 + 12 >> 2] = c[h2 + 12 >> 2];
            g[b2 + 616 >> 2] = w2;
            g[b2 + 620 >> 2] = r2 * p2 - q2 * o2;
            c[b2 + 624 >> 2] = c[j2 >> 2];
            g[b2 + 628 >> 2] = 0;
            g[b2 + 632 >> 2] = o2;
            g[b2 + 636 >> 2] = q2 * w2 - s2 * p2;
            c[b2 + 640 >> 2] = c[j2 + 4 >> 2];
            g[b2 + 644 >> 2] = 0;
            g[b2 + 648 >> 2] = p2;
            g[b2 + 652 >> 2] = s2 * o2 - r2 * w2;
            c[b2 + 656 >> 2] = c[j2 + 8 >> 2];
            g[b2 + 660 >> 2] = 0;
            g[b2 + 732 >> 2] = a[b2 + 740 >> 0] | 0 ? -1 : 1;
            return;
          }
          function Lp(b2, d2, e2, f2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            var h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0;
            yq(b2, 4, d2);
            c[b2 >> 2] = 7428;
            c[b2 + 552 >> 2] = c[e2 >> 2];
            c[b2 + 552 + 4 >> 2] = c[e2 + 4 >> 2];
            c[b2 + 552 + 8 >> 2] = c[e2 + 8 >> 2];
            c[b2 + 552 + 12 >> 2] = c[e2 + 12 >> 2];
            c[b2 + 568 >> 2] = c[e2 + 16 >> 2];
            c[b2 + 568 + 4 >> 2] = c[e2 + 16 + 4 >> 2];
            c[b2 + 568 + 8 >> 2] = c[e2 + 16 + 8 >> 2];
            c[b2 + 568 + 12 >> 2] = c[e2 + 16 + 12 >> 2];
            c[b2 + 584 >> 2] = c[e2 + 32 >> 2];
            c[b2 + 584 + 4 >> 2] = c[e2 + 32 + 4 >> 2];
            c[b2 + 584 + 8 >> 2] = c[e2 + 32 + 8 >> 2];
            c[b2 + 584 + 12 >> 2] = c[e2 + 32 + 12 >> 2];
            c[b2 + 600 >> 2] = c[e2 + 48 >> 2];
            c[b2 + 600 + 4 >> 2] = c[e2 + 48 + 4 >> 2];
            c[b2 + 600 + 8 >> 2] = c[e2 + 48 + 8 >> 2];
            c[b2 + 600 + 12 >> 2] = c[e2 + 48 + 12 >> 2];
            c[b2 + 616 >> 2] = c[e2 >> 2];
            c[b2 + 616 + 4 >> 2] = c[e2 + 4 >> 2];
            c[b2 + 616 + 8 >> 2] = c[e2 + 8 >> 2];
            c[b2 + 616 + 12 >> 2] = c[e2 + 12 >> 2];
            c[b2 + 632 >> 2] = c[e2 + 16 >> 2];
            c[b2 + 632 + 4 >> 2] = c[e2 + 16 + 4 >> 2];
            c[b2 + 632 + 8 >> 2] = c[e2 + 16 + 8 >> 2];
            c[b2 + 632 + 12 >> 2] = c[e2 + 16 + 12 >> 2];
            c[b2 + 648 >> 2] = c[e2 + 32 >> 2];
            c[b2 + 648 + 4 >> 2] = c[e2 + 32 + 4 >> 2];
            c[b2 + 648 + 8 >> 2] = c[e2 + 32 + 8 >> 2];
            c[b2 + 648 + 12 >> 2] = c[e2 + 32 + 12 >> 2];
            c[b2 + 664 >> 2] = c[e2 + 48 >> 2];
            c[b2 + 664 + 4 >> 2] = c[e2 + 48 + 4 >> 2];
            c[b2 + 664 + 8 >> 2] = c[e2 + 48 + 8 >> 2];
            c[b2 + 664 + 12 >> 2] = c[e2 + 48 + 12 >> 2];
            g[b2 + 688 >> 2] = 0;
            g[b2 + 692 >> 2] = -1;
            g[b2 + 696 >> 2] = 0.8999999761581421;
            g[b2 + 700 >> 2] = 0.30000001192092896;
            g[b2 + 704 >> 2] = 1;
            g[b2 + 708 >> 2] = 0;
            g[b2 + 712 >> 2] = 0;
            a[b2 + 716 >> 0] = 0;
            a[b2 + 736 >> 0] = 0;
            a[b2 + 737 >> 0] = 0;
            a[b2 + 738 >> 0] = 0;
            a[b2 + 739 >> 0] = 1;
            a[b2 + 740 >> 0] = f2 & 1;
            c[b2 + 748 >> 2] = 0;
            c[b2 + 748 + 4 >> 2] = 0;
            c[b2 + 748 + 8 >> 2] = 0;
            c[b2 + 748 + 12 >> 2] = 0;
            c[b2 + 748 + 16 >> 2] = 0;
            e2 = c[b2 + 28 >> 2] | 0;
            l2 = +g[b2 + 600 >> 2];
            k2 = +g[b2 + 604 >> 2];
            j2 = +g[b2 + 608 >> 2];
            i2 = l2 * +g[e2 + 20 >> 2] + k2 * +g[e2 + 24 >> 2] + j2 * +g[e2 + 28 >> 2] + +g[e2 + 56 >> 2];
            h2 = l2 * +g[e2 + 36 >> 2] + k2 * +g[e2 + 40 >> 2] + j2 * +g[e2 + 44 >> 2] + +g[e2 + 60 >> 2];
            g[b2 + 664 >> 2] = l2 * +g[e2 + 4 >> 2] + k2 * +g[e2 + 8 >> 2] + j2 * +g[e2 + 12 >> 2] + +g[e2 + 52 >> 2];
            g[b2 + 668 >> 2] = i2;
            g[b2 + 672 >> 2] = h2;
            g[b2 + 676 >> 2] = 0;
            g[b2 + 732 >> 2] = f2 ? -1 : 1;
            return;
          }
          function Mp(a2, b2, c2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            return;
          }
          function Np(a2, b2, c2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            return;
          }
          function Op(a2) {
            a2 = a2 | 0;
            c[a2 >> 2] = 7188;
            if (!a2)
              return;
            c[5638] = (c[5638] | 0) + 1;
            rG(c[a2 + -4 >> 2] | 0);
            return;
          }
          function Pp(a2) {
            a2 = a2 | 0;
            var b2 = 0, d2 = 0, e2 = 0, f2 = 0, h2 = 0, j2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0, I2 = 0;
            d2 = i;
            i = i + 144 | 0;
            g[a2 + 36 >> 2] = 0;
            c[d2 + 128 >> 2] = 0;
            c[d2 + 128 + 4 >> 2] = 0;
            c[d2 + 128 + 8 >> 2] = 0;
            c[d2 + 128 + 12 >> 2] = 0;
            b2 = 0;
            do {
              e2 = d2 + 128 + (b2 << 2) | 0;
              g[e2 >> 2] = 1;
              A2 = c[a2 + 28 >> 2] | 0;
              I2 = c[A2 + 4 >> 2] | 0;
              c[d2 + 80 >> 2] = I2;
              F2 = c[A2 + 20 >> 2] | 0;
              c[d2 + 80 + 4 >> 2] = F2;
              C2 = c[A2 + 36 >> 2] | 0;
              c[d2 + 80 + 8 >> 2] = C2;
              g[d2 + 80 + 12 >> 2] = 0;
              H2 = c[A2 + 8 >> 2] | 0;
              c[d2 + 80 + 16 >> 2] = H2;
              E2 = c[A2 + 24 >> 2] | 0;
              c[d2 + 80 + 20 >> 2] = E2;
              B2 = c[A2 + 40 >> 2] | 0;
              c[d2 + 80 + 24 >> 2] = B2;
              g[d2 + 80 + 28 >> 2] = 0;
              G2 = c[A2 + 12 >> 2] | 0;
              c[d2 + 80 + 32 >> 2] = G2;
              D2 = c[A2 + 28 >> 2] | 0;
              c[d2 + 80 + 36 >> 2] = D2;
              z2 = c[A2 + 44 >> 2] | 0;
              c[d2 + 80 + 40 >> 2] = z2;
              g[d2 + 80 + 44 >> 2] = 0;
              f2 = c[a2 + 32 >> 2] | 0;
              y2 = c[f2 + 4 >> 2] | 0;
              c[d2 + 32 >> 2] = y2;
              v2 = c[f2 + 20 >> 2] | 0;
              c[d2 + 32 + 4 >> 2] = v2;
              s2 = c[f2 + 36 >> 2] | 0;
              c[d2 + 32 + 8 >> 2] = s2;
              g[d2 + 32 + 12 >> 2] = 0;
              x2 = c[f2 + 8 >> 2] | 0;
              c[d2 + 32 + 16 >> 2] = x2;
              u2 = c[f2 + 24 >> 2] | 0;
              c[d2 + 32 + 20 >> 2] = u2;
              r2 = c[f2 + 40 >> 2] | 0;
              c[d2 + 32 + 24 >> 2] = r2;
              g[d2 + 32 + 28 >> 2] = 0;
              w2 = c[f2 + 12 >> 2] | 0;
              c[d2 + 32 + 32 >> 2] = w2;
              t2 = c[f2 + 28 >> 2] | 0;
              c[d2 + 32 + 36 >> 2] = t2;
              h2 = c[f2 + 44 >> 2] | 0;
              c[d2 + 32 + 40 >> 2] = h2;
              g[d2 + 32 + 44 >> 2] = 0;
              p2 = +g[a2 + 300 >> 2];
              m2 = p2 * (c[k >> 2] = I2, +g[k >> 2]);
              j2 = +g[a2 + 304 >> 2];
              m2 = m2 + j2 * (c[k >> 2] = H2, +g[k >> 2]);
              l2 = +g[a2 + 308 >> 2];
              m2 = m2 + l2 * (c[k >> 2] = G2, +g[k >> 2]);
              q2 = p2 * (c[k >> 2] = F2, +g[k >> 2]);
              q2 = q2 + j2 * (c[k >> 2] = E2, +g[k >> 2]);
              q2 = q2 + l2 * (c[k >> 2] = D2, +g[k >> 2]);
              p2 = p2 * (c[k >> 2] = C2, +g[k >> 2]);
              j2 = p2 + j2 * (c[k >> 2] = B2, +g[k >> 2]);
              p2 = +g[A2 + 52 >> 2];
              o2 = +g[A2 + 56 >> 2];
              n2 = +g[A2 + 60 >> 2];
              n2 = j2 + l2 * (c[k >> 2] = z2, +g[k >> 2]) + n2 - n2;
              g[d2 + 16 >> 2] = m2 + p2 - p2;
              g[d2 + 16 + 4 >> 2] = q2 + o2 - o2;
              g[d2 + 16 + 8 >> 2] = n2;
              g[d2 + 16 + 12 >> 2] = 0;
              n2 = +g[a2 + 316 >> 2];
              o2 = n2 * (c[k >> 2] = y2, +g[k >> 2]);
              q2 = +g[a2 + 320 >> 2];
              o2 = o2 + q2 * (c[k >> 2] = x2, +g[k >> 2]);
              p2 = +g[a2 + 324 >> 2];
              o2 = o2 + p2 * (c[k >> 2] = w2, +g[k >> 2]);
              m2 = n2 * (c[k >> 2] = v2, +g[k >> 2]);
              m2 = m2 + q2 * (c[k >> 2] = u2, +g[k >> 2]);
              m2 = m2 + p2 * (c[k >> 2] = t2, +g[k >> 2]);
              n2 = n2 * (c[k >> 2] = s2, +g[k >> 2]);
              q2 = n2 + q2 * (c[k >> 2] = r2, +g[k >> 2]);
              n2 = +g[f2 + 52 >> 2];
              l2 = +g[f2 + 56 >> 2];
              j2 = +g[f2 + 60 >> 2];
              j2 = q2 + p2 * (c[k >> 2] = h2, +g[k >> 2]) + j2 - j2;
              g[d2 >> 2] = o2 + n2 - n2;
              g[d2 + 4 >> 2] = m2 + l2 - l2;
              g[d2 + 8 >> 2] = j2;
              g[d2 + 12 >> 2] = 0;
              h2 = c[a2 + 28 >> 2] | 0;
              f2 = c[a2 + 32 >> 2] | 0;
              Ho(a2 + 48 + (b2 * 84 | 0) | 0, d2 + 80 | 0, d2 + 32 | 0, d2 + 16 | 0, d2, d2 + 128 | 0, h2 + 420 | 0, +g[h2 + 368 >> 2], f2 + 420 | 0, +g[f2 + 368 >> 2]);
              g[e2 >> 2] = 0;
              b2 = b2 + 1 | 0;
            } while ((b2 | 0) != 3);
            i = d2;
            return;
          }
          function Qp(b2, d2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            b2 = (a[b2 + 344 >> 0] | 0) == 0 ? 3 : 0;
            c[d2 >> 2] = b2;
            c[d2 + 4 >> 2] = b2;
            return;
          }
          function Rp(a2, b2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            var d2 = 0, e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0;
            j2 = c[a2 + 28 >> 2] | 0;
            k2 = c[a2 + 32 >> 2] | 0;
            f2 = c[b2 + 8 >> 2] | 0;
            g[f2 >> 2] = 1;
            h2 = c[b2 + 24 >> 2] | 0;
            g[f2 + (h2 + 1 << 2) >> 2] = 1;
            g[f2 + ((h2 << 1) + 2 << 2) >> 2] = 1;
            l2 = +g[a2 + 300 >> 2];
            q2 = +g[a2 + 304 >> 2];
            e2 = +g[a2 + 308 >> 2];
            o2 = +g[j2 + 4 >> 2] * l2 + +g[j2 + 8 >> 2] * q2 + +g[j2 + 12 >> 2] * e2;
            m2 = l2 * +g[j2 + 20 >> 2] + q2 * +g[j2 + 24 >> 2] + e2 * +g[j2 + 28 >> 2];
            e2 = l2 * +g[j2 + 36 >> 2] + q2 * +g[j2 + 40 >> 2] + e2 * +g[j2 + 44 >> 2];
            f2 = c[b2 + 12 >> 2] | 0;
            c[f2 >> 2] = 0;
            g[f2 + 4 >> 2] = e2;
            g[f2 + 8 >> 2] = -m2;
            g[f2 + 12 >> 2] = 0;
            g[f2 + (h2 << 2) >> 2] = -e2;
            c[f2 + (h2 << 2) + 4 >> 2] = 0;
            g[f2 + (h2 << 2) + 8 >> 2] = o2;
            g[f2 + (h2 << 2) + 12 >> 2] = 0;
            g[f2 + (h2 << 1 << 2) >> 2] = m2;
            g[f2 + (h2 << 1 << 2) + 4 >> 2] = -o2;
            c[f2 + (h2 << 1 << 2) + 8 >> 2] = 0;
            g[f2 + (h2 << 1 << 2) + 12 >> 2] = 0;
            f2 = c[b2 + 16 >> 2] | 0;
            g[f2 >> 2] = -1;
            g[f2 + (h2 + 1 << 2) >> 2] = -1;
            g[f2 + ((h2 << 1) + 2 << 2) >> 2] = -1;
            q2 = +g[a2 + 316 >> 2];
            l2 = +g[a2 + 320 >> 2];
            d2 = +g[a2 + 324 >> 2];
            p2 = +g[k2 + 4 >> 2] * q2 + +g[k2 + 8 >> 2] * l2 + +g[k2 + 12 >> 2] * d2;
            n2 = q2 * +g[k2 + 20 >> 2] + l2 * +g[k2 + 24 >> 2] + d2 * +g[k2 + 28 >> 2];
            d2 = q2 * +g[k2 + 36 >> 2] + l2 * +g[k2 + 40 >> 2] + d2 * +g[k2 + 44 >> 2];
            h2 = c[b2 + 20 >> 2] | 0;
            f2 = c[b2 + 24 >> 2] | 0;
            c[h2 >> 2] = 0;
            g[h2 + 4 >> 2] = -d2;
            g[h2 + 8 >> 2] = n2;
            g[h2 + 12 >> 2] = 0;
            g[h2 + (f2 << 2) >> 2] = d2;
            c[h2 + (f2 << 2) + 4 >> 2] = 0;
            g[h2 + (f2 << 2) + 8 >> 2] = -p2;
            g[h2 + (f2 << 2) + 12 >> 2] = 0;
            g[h2 + (f2 << 1 << 2) >> 2] = -n2;
            g[h2 + (f2 << 1 << 2) + 4 >> 2] = p2;
            c[h2 + (f2 << 1 << 2) + 8 >> 2] = 0;
            g[h2 + (f2 << 1 << 2) + 12 >> 2] = 0;
            f2 = c[a2 + 332 >> 2] | 0;
            l2 = +g[((f2 & 1 | 0) == 0 ? b2 + 4 | 0 : a2 + 336 | 0) >> 2] * +g[b2 >> 2];
            h2 = c[b2 + 24 >> 2] | 0;
            i2 = c[b2 + 28 >> 2] | 0;
            g[i2 >> 2] = l2 * (p2 + +g[k2 + 52 >> 2] - o2 - +g[j2 + 52 >> 2]);
            g[i2 + (h2 << 2) >> 2] = l2 * (n2 + +g[k2 + 56 >> 2] - m2 - +g[j2 + 56 >> 2]);
            g[i2 + (h2 << 1 << 2) >> 2] = l2 * (d2 + +g[k2 + 60 >> 2] - e2 - +g[j2 + 60 >> 2]);
            if (f2 & 2 | 0) {
              k2 = c[b2 + 24 >> 2] | 0;
              j2 = c[b2 + 32 >> 2] | 0;
              c[j2 >> 2] = c[a2 + 340 >> 2];
              c[j2 + (k2 << 2) >> 2] = c[a2 + 340 >> 2];
              c[j2 + (k2 << 1 << 2) >> 2] = c[a2 + 340 >> 2];
            }
            e2 = +g[a2 + 356 >> 2];
            if (e2 > 0) {
              g[c[b2 + 36 >> 2] >> 2] = -e2;
              g[c[b2 + 40 >> 2] >> 2] = e2;
              d2 = +g[a2 + 356 >> 2];
            } else
              d2 = e2;
            if (d2 > 0) {
              k2 = c[b2 + 24 >> 2] | 0;
              g[(c[b2 + 36 >> 2] | 0) + (k2 << 2) >> 2] = -e2;
              g[(c[b2 + 40 >> 2] | 0) + (k2 << 2) >> 2] = e2;
              d2 = +g[a2 + 356 >> 2];
            }
            if (!(d2 > 0)) {
              j2 = a2 + 352 | 0;
              j2 = c[j2 >> 2] | 0;
              k2 = b2 + 52 | 0;
              c[k2 >> 2] = j2;
              return;
            }
            j2 = c[b2 + 24 >> 2] << 1;
            g[(c[b2 + 36 >> 2] | 0) + (j2 << 2) >> 2] = -e2;
            g[(c[b2 + 40 >> 2] | 0) + (j2 << 2) >> 2] = e2;
            j2 = a2 + 352 | 0;
            j2 = c[j2 >> 2] | 0;
            k2 = b2 + 52 | 0;
            c[k2 >> 2] = j2;
            return;
          }
          function Sp(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = +d2;
            e2 = e2 | 0;
            if ((e2 | 0) != -1)
              return;
            switch (b2 | 0) {
              case 2:
              case 1: {
                g[a2 + 336 >> 2] = d2;
                c[a2 + 332 >> 2] = c[a2 + 332 >> 2] | 1;
                return;
              }
              case 4:
              case 3: {
                g[a2 + 340 >> 2] = d2;
                c[a2 + 332 >> 2] = c[a2 + 332 >> 2] | 2;
                return;
              }
              default:
                return;
            }
          }
          function Tp(a2, b2, c2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            c2 = c2 | 0;
            var d2 = 0;
            a:
              do
                if ((c2 | 0) == -1)
                  switch (b2 | 0) {
                    case 2:
                    case 1: {
                      d2 = +g[a2 + 336 >> 2];
                      break a;
                    }
                    case 4:
                    case 3: {
                      d2 = +g[a2 + 340 >> 2];
                      break a;
                    }
                    default: {
                      d2 = 34028234663852886e22;
                      break a;
                    }
                  }
                else
                  d2 = 34028234663852886e22;
              while (0);
            return +d2;
          }
          function Up(a2) {
            a2 = a2 | 0;
            return 84;
          }
          function Vp(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            Aq(a2, b2, d2) | 0;
            c[b2 + 52 >> 2] = c[a2 + 300 >> 2];
            c[b2 + 56 >> 2] = c[a2 + 304 >> 2];
            c[b2 + 60 >> 2] = c[a2 + 308 >> 2];
            c[b2 + 64 >> 2] = c[a2 + 312 >> 2];
            c[b2 + 68 >> 2] = c[a2 + 316 >> 2];
            c[b2 + 72 >> 2] = c[a2 + 320 >> 2];
            c[b2 + 76 >> 2] = c[a2 + 324 >> 2];
            c[b2 + 80 >> 2] = c[a2 + 328 >> 2];
            return 15429;
          }
          function Wp(a2) {
            a2 = a2 | 0;
            return c[a2 + 332 >> 2] | 0;
          }
          function Xp(b2) {
            b2 = b2 | 0;
            var d2 = 0;
            c[b2 >> 2] = 7540;
            d2 = c[b2 + 176 >> 2] | 0;
            if (d2 | 0) {
              if (a[b2 + 180 >> 0] | 0) {
                c[5638] = (c[5638] | 0) + 1;
                rG(c[d2 + -4 >> 2] | 0);
              }
              c[b2 + 176 >> 2] = 0;
            }
            a[b2 + 180 >> 0] = 1;
            c[b2 + 176 >> 2] = 0;
            c[b2 + 168 >> 2] = 0;
            c[b2 + 172 >> 2] = 0;
            d2 = c[b2 + 156 >> 2] | 0;
            if (d2 | 0) {
              if (a[b2 + 160 >> 0] | 0) {
                c[5638] = (c[5638] | 0) + 1;
                rG(c[d2 + -4 >> 2] | 0);
              }
              c[b2 + 156 >> 2] = 0;
            }
            a[b2 + 160 >> 0] = 1;
            c[b2 + 156 >> 2] = 0;
            c[b2 + 148 >> 2] = 0;
            c[b2 + 152 >> 2] = 0;
            d2 = c[b2 + 136 >> 2] | 0;
            if (d2 | 0) {
              if (a[b2 + 140 >> 0] | 0) {
                c[5638] = (c[5638] | 0) + 1;
                rG(c[d2 + -4 >> 2] | 0);
              }
              c[b2 + 136 >> 2] = 0;
            }
            a[b2 + 140 >> 0] = 1;
            c[b2 + 136 >> 2] = 0;
            c[b2 + 128 >> 2] = 0;
            c[b2 + 132 >> 2] = 0;
            d2 = c[b2 + 116 >> 2] | 0;
            if (d2 | 0) {
              if (a[b2 + 120 >> 0] | 0) {
                c[5638] = (c[5638] | 0) + 1;
                rG(c[d2 + -4 >> 2] | 0);
              }
              c[b2 + 116 >> 2] = 0;
            }
            a[b2 + 120 >> 0] = 1;
            c[b2 + 116 >> 2] = 0;
            c[b2 + 108 >> 2] = 0;
            c[b2 + 112 >> 2] = 0;
            d2 = c[b2 + 96 >> 2] | 0;
            if (d2 | 0) {
              if (a[b2 + 100 >> 0] | 0) {
                c[5638] = (c[5638] | 0) + 1;
                rG(c[d2 + -4 >> 2] | 0);
              }
              c[b2 + 96 >> 2] = 0;
            }
            a[b2 + 100 >> 0] = 1;
            c[b2 + 96 >> 2] = 0;
            c[b2 + 88 >> 2] = 0;
            c[b2 + 92 >> 2] = 0;
            d2 = c[b2 + 76 >> 2] | 0;
            if (d2 | 0) {
              if (a[b2 + 80 >> 0] | 0) {
                c[5638] = (c[5638] | 0) + 1;
                rG(c[d2 + -4 >> 2] | 0);
              }
              c[b2 + 76 >> 2] = 0;
            }
            a[b2 + 80 >> 0] = 1;
            c[b2 + 76 >> 2] = 0;
            c[b2 + 68 >> 2] = 0;
            c[b2 + 72 >> 2] = 0;
            d2 = c[b2 + 56 >> 2] | 0;
            if (d2 | 0) {
              if (a[b2 + 60 >> 0] | 0) {
                c[5638] = (c[5638] | 0) + 1;
                rG(c[d2 + -4 >> 2] | 0);
              }
              c[b2 + 56 >> 2] = 0;
            }
            a[b2 + 60 >> 0] = 1;
            c[b2 + 56 >> 2] = 0;
            c[b2 + 48 >> 2] = 0;
            c[b2 + 52 >> 2] = 0;
            d2 = c[b2 + 36 >> 2] | 0;
            if (d2 | 0) {
              if (a[b2 + 40 >> 0] | 0) {
                c[5638] = (c[5638] | 0) + 1;
                rG(c[d2 + -4 >> 2] | 0);
              }
              c[b2 + 36 >> 2] = 0;
            }
            a[b2 + 40 >> 0] = 1;
            c[b2 + 36 >> 2] = 0;
            c[b2 + 28 >> 2] = 0;
            c[b2 + 32 >> 2] = 0;
            d2 = c[b2 + 16 >> 2] | 0;
            if (!d2) {
              a[b2 + 20 >> 0] = 1;
              c[b2 + 16 >> 2] = 0;
              c[b2 + 8 >> 2] = 0;
              b2 = b2 + 12 | 0;
              c[b2 >> 2] = 0;
              return;
            }
            if (a[b2 + 20 >> 0] | 0) {
              c[5638] = (c[5638] | 0) + 1;
              rG(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 16 >> 2] = 0;
            a[b2 + 20 >> 0] = 1;
            c[b2 + 16 >> 2] = 0;
            c[b2 + 8 >> 2] = 0;
            b2 = b2 + 12 | 0;
            c[b2 >> 2] = 0;
            return;
          }
          function Yp(a2) {
            a2 = a2 | 0;
            Xp(a2);
            if (!a2)
              return;
            c[5638] = (c[5638] | 0) + 1;
            rG(c[a2 + -4 >> 2] | 0);
            return;
          }
          function Zp(a2, b2, d2, e2, f2, h2, j2, k2, l2, m2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            h2 = h2 | 0;
            j2 = j2 | 0;
            k2 = k2 | 0;
            l2 = l2 | 0;
            m2 = m2 | 0;
            var n2 = 0;
            n2 = i;
            i = i + 16 | 0;
            fs(15521);
            +Sb[c[(c[a2 >> 2] | 0) + 44 >> 2] & 3](a2, b2, d2, e2, f2, h2, j2, k2, l2);
            +Sb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 3](a2, b2, d2, e2, f2, h2, j2, k2, l2);
            +Wb[c[(c[a2 >> 2] | 0) + 36 >> 2] & 1](a2, b2, d2, k2);
            m2 = c[2006] | 0;
            a2 = (c[m2 + 16 >> 2] | 0) + -1 | 0;
            c[m2 + 16 >> 2] = a2;
            if (a2 | 0) {
              i = n2;
              return 0;
            }
            do
              if (c[m2 + 4 >> 2] | 0) {
                kb(n2 | 0, 0) | 0;
                a2 = c[5649] | 0;
                g[m2 + 8 >> 2] = +g[m2 + 8 >> 2] + +(((c[n2 + 4 >> 2] | 0) - (c[a2 + 4 >> 2] | 0) + (((c[n2 >> 2] | 0) - (c[a2 >> 2] | 0) | 0) * 1e6 | 0) - (c[m2 + 12 >> 2] | 0) | 0) >>> 0) / 1e3;
                if (!(c[m2 + 16 >> 2] | 0)) {
                  m2 = c[2006] | 0;
                  break;
                } else {
                  i = n2;
                  return 0;
                }
              }
            while (0);
            c[2006] = c[m2 + 20 >> 2];
            i = n2;
            return 0;
          }
          function _p(a2) {
            a2 = a2 | 0;
            c[a2 + 200 >> 2] = 0;
            return;
          }
          function $p(a2) {
            a2 = a2 | 0;
            return 1;
          }
          function aq(a2, b2, d2, e2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0;
            if ((d2 | 0) > 0)
              f2 = 0;
            else
              return;
            do {
              bq(a2, c[b2 + (f2 << 2) >> 2] | 0, e2);
              f2 = f2 + 1 | 0;
            } while ((f2 | 0) != (d2 | 0));
            return;
          }
          function bq(b2, d2, e2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            var f2 = 0, h2 = 0, j2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0, P2 = 0, Q2 = 0, R2 = 0, S2 = 0, T2 = 0, U2 = 0, V2 = 0, W2 = 0, X2 = 0, Y2 = 0, Z2 = 0, _2 = 0, $2 = 0, aa2 = 0, ba2 = 0, ca2 = 0, da2 = 0, ea2 = 0;
            ba2 = i;
            i = i + 80 | 0;
            V2 = c[d2 + 740 >> 2] | 0;
            Y2 = c[d2 + 744 >> 2] | 0;
            Z2 = cq(b2, V2, +g[e2 + 12 >> 2]) | 0;
            _2 = cq(b2, Y2, +g[e2 + 12 >> 2]) | 0;
            W2 = c[b2 + 16 >> 2] | 0;
            K2 = +g[W2 + (Z2 * 244 | 0) + 128 >> 2];
            L2 = +g[W2 + (Z2 * 244 | 0) + 132 >> 2];
            M2 = +g[W2 + (Z2 * 244 | 0) + 136 >> 2];
            if (K2 * K2 + L2 * L2 + M2 * M2 < 14210854715202004e-30 ? (K2 = +g[W2 + (_2 * 244 | 0) + 128 >> 2], L2 = +g[W2 + (_2 * 244 | 0) + 132 >> 2], M2 = +g[W2 + (_2 * 244 | 0) + 136 >> 2], K2 * K2 + L2 * L2 + M2 * M2 < 14210854715202004e-30) : 0) {
              i = ba2;
              return;
            }
            if ((c[d2 + 748 >> 2] | 0) <= 0) {
              i = ba2;
              return;
            }
            $2 = 0;
            f2 = 1;
            do {
              T2 = d2 + 4 + ($2 * 184 | 0) | 0;
              C2 = d2 + 4 + ($2 * 184 | 0) + 80 | 0;
              if (+g[C2 >> 2] <= +g[d2 + 756 >> 2]) {
                U2 = c[b2 + 28 >> 2] | 0;
                if ((U2 | 0) == (c[b2 + 32 >> 2] | 0) ? (X2 = U2 | 0 ? U2 << 1 : 1, (U2 | 0) < (X2 | 0)) : 0) {
                  if (!X2) {
                    h2 = 0;
                    j2 = U2;
                  } else {
                    c[5637] = (c[5637] | 0) + 1;
                    h2 = qG((X2 * 152 | 3) + 16 | 0) | 0;
                    if (!h2)
                      h2 = 0;
                    else {
                      c[(h2 + 4 + 15 & -16) + -4 >> 2] = h2;
                      h2 = h2 + 4 + 15 & -16;
                    }
                    j2 = c[b2 + 28 >> 2] | 0;
                  }
                  if ((j2 | 0) > 0) {
                    n2 = 0;
                    do {
                      bH(h2 + (n2 * 152 | 0) | 0, (c[b2 + 36 >> 2] | 0) + (n2 * 152 | 0) | 0, 152) | 0;
                      n2 = n2 + 1 | 0;
                    } while ((n2 | 0) != (j2 | 0));
                  }
                  j2 = c[b2 + 36 >> 2] | 0;
                  if (j2 | 0) {
                    if (a[b2 + 40 >> 0] | 0) {
                      c[5638] = (c[5638] | 0) + 1;
                      rG(c[j2 + -4 >> 2] | 0);
                    }
                    c[b2 + 36 >> 2] = 0;
                  }
                  a[b2 + 40 >> 0] = 1;
                  c[b2 + 36 >> 2] = h2;
                  c[b2 + 32 >> 2] = X2;
                  h2 = c[b2 + 28 >> 2] | 0;
                } else
                  h2 = U2;
                c[b2 + 28 >> 2] = h2 + 1;
                S2 = c[b2 + 36 >> 2] | 0;
                F2 = (c[V2 + 236 >> 2] & 2 | 0) == 0 ? 0 : V2;
                G2 = (c[Y2 + 236 >> 2] & 2 | 0) == 0 ? 0 : Y2;
                c[S2 + (U2 * 152 | 0) + 144 >> 2] = Z2;
                c[S2 + (U2 * 152 | 0) + 148 >> 2] = _2;
                c[S2 + (U2 * 152 | 0) + 132 >> 2] = T2;
                y2 = +g[d2 + 4 + ($2 * 184 | 0) + 48 >> 2] - +g[V2 + 52 >> 2];
                z2 = +g[d2 + 4 + ($2 * 184 | 0) + 52 >> 2] - +g[V2 + 56 >> 2];
                x2 = +g[d2 + 4 + ($2 * 184 | 0) + 56 >> 2] - +g[V2 + 60 >> 2];
                g[ba2 + 64 >> 2] = y2;
                g[ba2 + 64 + 4 >> 2] = z2;
                g[ba2 + 64 + 8 >> 2] = x2;
                g[ba2 + 64 + 12 >> 2] = 0;
                B2 = +g[d2 + 4 + ($2 * 184 | 0) + 32 >> 2] - +g[Y2 + 52 >> 2];
                D2 = +g[d2 + 4 + ($2 * 184 | 0) + 36 >> 2] - +g[Y2 + 56 >> 2];
                A2 = +g[d2 + 4 + ($2 * 184 | 0) + 40 >> 2] - +g[Y2 + 60 >> 2];
                g[ba2 + 48 >> 2] = B2;
                g[ba2 + 48 + 4 >> 2] = D2;
                g[ba2 + 48 + 8 >> 2] = A2;
                g[ba2 + 48 + 12 >> 2] = 0;
                if (!(c[W2 + (Z2 * 244 | 0) + 240 >> 2] | 0)) {
                  h2 = 0;
                  n2 = 0;
                  q2 = 0;
                } else {
                  L2 = +g[W2 + (Z2 * 244 | 0) + 192 >> 2] + +g[W2 + (Z2 * 244 | 0) + 224 >> 2];
                  M2 = +g[W2 + (Z2 * 244 | 0) + 196 >> 2] + +g[W2 + (Z2 * 244 | 0) + 228 >> 2];
                  K2 = +g[W2 + (Z2 * 244 | 0) + 200 >> 2] + +g[W2 + (Z2 * 244 | 0) + 232 >> 2];
                  h2 = (g[k >> 2] = +g[W2 + (Z2 * 244 | 0) + 176 >> 2] + +g[W2 + (Z2 * 244 | 0) + 208 >> 2] + (M2 * x2 - K2 * z2), c[k >> 2] | 0);
                  n2 = (g[k >> 2] = +g[W2 + (Z2 * 244 | 0) + 180 >> 2] + +g[W2 + (Z2 * 244 | 0) + 212 >> 2] + (K2 * y2 - L2 * x2), c[k >> 2] | 0);
                  q2 = (g[k >> 2] = +g[W2 + (Z2 * 244 | 0) + 184 >> 2] + +g[W2 + (Z2 * 244 | 0) + 216 >> 2] + (L2 * z2 - M2 * y2), c[k >> 2] | 0);
                }
                if (!(c[W2 + (_2 * 244 | 0) + 240 >> 2] | 0)) {
                  j2 = 0;
                  p2 = 0;
                  r2 = 0;
                } else {
                  L2 = +g[W2 + (_2 * 244 | 0) + 192 >> 2] + +g[W2 + (_2 * 244 | 0) + 224 >> 2];
                  M2 = +g[W2 + (_2 * 244 | 0) + 196 >> 2] + +g[W2 + (_2 * 244 | 0) + 228 >> 2];
                  K2 = +g[W2 + (_2 * 244 | 0) + 200 >> 2] + +g[W2 + (_2 * 244 | 0) + 232 >> 2];
                  j2 = (g[k >> 2] = +g[W2 + (_2 * 244 | 0) + 176 >> 2] + +g[W2 + (_2 * 244 | 0) + 208 >> 2] + (M2 * A2 - K2 * D2), c[k >> 2] | 0);
                  p2 = (g[k >> 2] = +g[W2 + (_2 * 244 | 0) + 180 >> 2] + +g[W2 + (_2 * 244 | 0) + 212 >> 2] + (K2 * B2 - L2 * A2), c[k >> 2] | 0);
                  r2 = (g[k >> 2] = +g[W2 + (_2 * 244 | 0) + 184 >> 2] + +g[W2 + (_2 * 244 | 0) + 216 >> 2] + (L2 * D2 - M2 * B2), c[k >> 2] | 0);
                }
                M2 = (c[k >> 2] = h2, +g[k >> 2]);
                M2 = M2 - (c[k >> 2] = j2, +g[k >> 2]);
                L2 = (c[k >> 2] = n2, +g[k >> 2]);
                L2 = L2 - (c[k >> 2] = p2, +g[k >> 2]);
                H2 = (c[k >> 2] = q2, +g[k >> 2]);
                H2 = H2 - (c[k >> 2] = r2, +g[k >> 2]);
                P2 = d2 + 4 + ($2 * 184 | 0) + 64 | 0;
                I2 = +g[P2 >> 2];
                Q2 = d2 + 4 + ($2 * 184 | 0) + 68 | 0;
                J2 = +g[Q2 >> 2];
                R2 = d2 + 4 + ($2 * 184 | 0) + 72 | 0;
                K2 = +g[R2 >> 2];
                r2 = c[b2 + 16 >> 2] | 0;
                p2 = c[r2 + (Z2 * 244 | 0) + 240 >> 2] | 0;
                q2 = c[r2 + (_2 * 244 | 0) + 240 >> 2] | 0;
                if (p2 | 0) {
                  n2 = (g[k >> 2] = ((z2 * K2 - x2 * J2) * +g[p2 + 288 >> 2] + (x2 * I2 - K2 * y2) * +g[p2 + 292 >> 2] + (J2 * y2 - z2 * I2) * +g[p2 + 296 >> 2]) * +g[p2 + 568 >> 2], c[k >> 2] | 0);
                  h2 = (g[k >> 2] = ((z2 * K2 - x2 * J2) * +g[p2 + 304 >> 2] + (x2 * I2 - K2 * y2) * +g[p2 + 308 >> 2] + (J2 * y2 - z2 * I2) * +g[p2 + 312 >> 2]) * +g[p2 + 572 >> 2], c[k >> 2] | 0);
                  j2 = (g[k >> 2] = ((z2 * K2 - x2 * J2) * +g[p2 + 320 >> 2] + (x2 * I2 - K2 * y2) * +g[p2 + 324 >> 2] + (J2 * y2 - z2 * I2) * +g[p2 + 328 >> 2]) * +g[p2 + 576 >> 2], c[k >> 2] | 0);
                } else {
                  n2 = 0;
                  h2 = 0;
                  j2 = 0;
                }
                c[S2 + (U2 * 152 | 0) + 64 >> 2] = n2;
                c[S2 + (U2 * 152 | 0) + 68 >> 2] = h2;
                c[S2 + (U2 * 152 | 0) + 72 >> 2] = j2;
                g[S2 + (U2 * 152 | 0) + 76 >> 2] = 0;
                u2 = +g[R2 >> 2];
                v2 = +g[Q2 >> 2];
                w2 = +g[P2 >> 2];
                t2 = (c[k >> 2] = h2, +g[k >> 2]);
                s2 = (c[k >> 2] = j2, +g[k >> 2]);
                m2 = (c[k >> 2] = n2, +g[k >> 2]);
                if (q2 | 0) {
                  h2 = (g[k >> 2] = (+g[q2 + 288 >> 2] * -(D2 * u2 - A2 * v2) + +g[q2 + 292 >> 2] * -(A2 * w2 - u2 * B2) + +g[q2 + 296 >> 2] * -(v2 * B2 - D2 * w2)) * +g[q2 + 568 >> 2], c[k >> 2] | 0);
                  j2 = (g[k >> 2] = (+g[q2 + 304 >> 2] * -(D2 * u2 - A2 * v2) + +g[q2 + 308 >> 2] * -(A2 * w2 - u2 * B2) + +g[q2 + 312 >> 2] * -(v2 * B2 - D2 * w2)) * +g[q2 + 572 >> 2], c[k >> 2] | 0);
                  n2 = (g[k >> 2] = (+g[q2 + 320 >> 2] * -(D2 * u2 - A2 * v2) + +g[q2 + 324 >> 2] * -(A2 * w2 - u2 * B2) + +g[q2 + 328 >> 2] * -(v2 * B2 - D2 * w2)) * +g[q2 + 576 >> 2], c[k >> 2] | 0);
                } else {
                  h2 = 0;
                  j2 = 0;
                  n2 = 0;
                }
                c[S2 + (U2 * 152 | 0) + 80 >> 2] = h2;
                c[S2 + (U2 * 152 | 0) + 84 >> 2] = j2;
                c[S2 + (U2 * 152 | 0) + 88 >> 2] = n2;
                g[S2 + (U2 * 152 | 0) + 92 >> 2] = 0;
                o2 = (c[k >> 2] = h2, +g[k >> 2]);
                l2 = (c[k >> 2] = j2, +g[k >> 2]);
                if (p2 | 0)
                  m2 = +g[p2 + 368 >> 2] + ((t2 * x2 - s2 * z2) * +g[P2 >> 2] + (s2 * y2 - x2 * m2) * +g[Q2 >> 2] + (z2 * m2 - t2 * y2) * +g[R2 >> 2]);
                else
                  m2 = 0;
                if (q2 | 0) {
                  E2 = -(c[k >> 2] = n2, +g[k >> 2]);
                  l2 = +g[q2 + 368 >> 2] + ((A2 * -l2 - D2 * E2) * +g[P2 >> 2] + (B2 * E2 - A2 * -o2) * +g[Q2 >> 2] + (D2 * -o2 - B2 * -l2) * +g[R2 >> 2]);
                } else
                  l2 = 0;
                g[S2 + (U2 * 152 | 0) + 108 >> 2] = 1 / (m2 + l2);
                if (p2 | 0) {
                  c[S2 + (U2 * 152 | 0) + 16 >> 2] = c[P2 >> 2];
                  c[S2 + (U2 * 152 | 0) + 16 + 4 >> 2] = c[P2 + 4 >> 2];
                  c[S2 + (U2 * 152 | 0) + 16 + 8 >> 2] = c[P2 + 8 >> 2];
                  c[S2 + (U2 * 152 | 0) + 16 + 12 >> 2] = c[P2 + 12 >> 2];
                  g[S2 + (U2 * 152 | 0) >> 2] = z2 * K2 - x2 * J2;
                  g[S2 + (U2 * 152 | 0) + 4 >> 2] = x2 * I2 - K2 * y2;
                  g[S2 + (U2 * 152 | 0) + 8 >> 2] = J2 * y2 - z2 * I2;
                  g[S2 + (U2 * 152 | 0) + 12 >> 2] = 0;
                } else {
                  c[S2 + (U2 * 152 | 0) >> 2] = 0;
                  c[S2 + (U2 * 152 | 0) + 4 >> 2] = 0;
                  c[S2 + (U2 * 152 | 0) + 8 >> 2] = 0;
                  c[S2 + (U2 * 152 | 0) + 12 >> 2] = 0;
                  c[S2 + (U2 * 152 | 0) + 16 >> 2] = 0;
                  c[S2 + (U2 * 152 | 0) + 20 >> 2] = 0;
                  c[S2 + (U2 * 152 | 0) + 24 >> 2] = 0;
                  c[S2 + (U2 * 152 | 0) + 28 >> 2] = 0;
                }
                if (q2 | 0) {
                  t2 = -+g[Q2 >> 2];
                  E2 = -+g[R2 >> 2];
                  g[S2 + (U2 * 152 | 0) + 48 >> 2] = -+g[P2 >> 2];
                  g[S2 + (U2 * 152 | 0) + 52 >> 2] = t2;
                  g[S2 + (U2 * 152 | 0) + 56 >> 2] = E2;
                  g[S2 + (U2 * 152 | 0) + 60 >> 2] = 0;
                  g[S2 + (U2 * 152 | 0) + 32 >> 2] = -(D2 * u2 - A2 * v2);
                  g[S2 + (U2 * 152 | 0) + 36 >> 2] = -(A2 * w2 - u2 * B2);
                  g[S2 + (U2 * 152 | 0) + 40 >> 2] = -(v2 * B2 - D2 * w2);
                  g[S2 + (U2 * 152 | 0) + 44 >> 2] = 0;
                } else {
                  c[S2 + (U2 * 152 | 0) + 32 >> 2] = 0;
                  c[S2 + (U2 * 152 | 0) + 32 + 4 >> 2] = 0;
                  c[S2 + (U2 * 152 | 0) + 32 + 8 >> 2] = 0;
                  c[S2 + (U2 * 152 | 0) + 32 + 12 >> 2] = 0;
                  c[S2 + (U2 * 152 | 0) + 32 + 16 >> 2] = 0;
                  c[S2 + (U2 * 152 | 0) + 32 + 20 >> 2] = 0;
                  c[S2 + (U2 * 152 | 0) + 32 + 24 >> 2] = 0;
                  c[S2 + (U2 * 152 | 0) + 32 + 28 >> 2] = 0;
                }
                E2 = +g[C2 >> 2] + +g[e2 + 56 >> 2];
                if (p2 | 0) {
                  s2 = +g[p2 + 356 >> 2];
                  t2 = +g[p2 + 360 >> 2];
                  w2 = +g[p2 + 352 >> 2];
                  u2 = s2 * x2 - t2 * z2 + +g[p2 + 336 >> 2];
                  t2 = +g[p2 + 340 >> 2] + (t2 * y2 - x2 * w2);
                  s2 = z2 * w2 - s2 * y2 + +g[p2 + 344 >> 2];
                } else {
                  u2 = 0;
                  t2 = 0;
                  s2 = 0;
                }
                if (q2 | 0) {
                  l2 = +g[q2 + 356 >> 2];
                  m2 = +g[q2 + 360 >> 2];
                  z2 = +g[q2 + 352 >> 2];
                  o2 = l2 * A2 - m2 * D2 + +g[q2 + 336 >> 2];
                  m2 = +g[q2 + 340 >> 2] + (m2 * B2 - A2 * z2);
                  l2 = D2 * z2 - l2 * B2 + +g[q2 + 344 >> 2];
                } else {
                  o2 = 0;
                  m2 = 0;
                  l2 = 0;
                }
                B2 = (u2 - o2) * +g[P2 >> 2] + (t2 - m2) * +g[Q2 >> 2] + (s2 - l2) * +g[R2 >> 2];
                c[S2 + (U2 * 152 | 0) + 104 >> 2] = c[d2 + 4 + ($2 * 184 | 0) + 84 >> 2];
                B2 = -(B2 * +g[d2 + 4 + ($2 * 184 | 0) + 92 >> 2]);
                B2 = B2 <= 0 ? 0 : B2;
                do
                  if (c[e2 + 64 >> 2] & 4) {
                    l2 = +g[d2 + 4 + ($2 * 184 | 0) + 120 >> 2] * +g[e2 + 60 >> 2];
                    g[S2 + (U2 * 152 | 0) + 100 >> 2] = l2;
                    do
                      if (p2 | 0) {
                        if (!(c[r2 + (Z2 * 244 | 0) + 240 >> 2] | 0))
                          break;
                        D2 = l2 * (+g[S2 + (U2 * 152 | 0) + 20 >> 2] * +g[r2 + (Z2 * 244 | 0) + 132 >> 2] * +g[p2 + 376 >> 2]) * +g[r2 + (Z2 * 244 | 0) + 116 >> 2];
                        A2 = l2 * (+g[S2 + (U2 * 152 | 0) + 24 >> 2] * +g[r2 + (Z2 * 244 | 0) + 136 >> 2] * +g[p2 + 380 >> 2]) * +g[r2 + (Z2 * 244 | 0) + 120 >> 2];
                        g[r2 + (Z2 * 244 | 0) + 64 >> 2] = +g[r2 + (Z2 * 244 | 0) + 112 >> 2] * (l2 * (+g[S2 + (U2 * 152 | 0) + 16 >> 2] * +g[r2 + (Z2 * 244 | 0) + 128 >> 2] * +g[p2 + 372 >> 2])) + +g[r2 + (Z2 * 244 | 0) + 64 >> 2];
                        g[r2 + (Z2 * 244 | 0) + 68 >> 2] = D2 + +g[r2 + (Z2 * 244 | 0) + 68 >> 2];
                        g[r2 + (Z2 * 244 | 0) + 72 >> 2] = A2 + +g[r2 + (Z2 * 244 | 0) + 72 >> 2];
                        A2 = l2 * +g[r2 + (Z2 * 244 | 0) + 100 >> 2] * +g[S2 + (U2 * 152 | 0) + 68 >> 2];
                        D2 = l2 * +g[r2 + (Z2 * 244 | 0) + 104 >> 2] * +g[S2 + (U2 * 152 | 0) + 72 >> 2];
                        g[r2 + (Z2 * 244 | 0) + 80 >> 2] = l2 * +g[r2 + (Z2 * 244 | 0) + 96 >> 2] * +g[S2 + (U2 * 152 | 0) + 64 >> 2] + +g[r2 + (Z2 * 244 | 0) + 80 >> 2];
                        g[r2 + (Z2 * 244 | 0) + 84 >> 2] = A2 + +g[r2 + (Z2 * 244 | 0) + 84 >> 2];
                        g[r2 + (Z2 * 244 | 0) + 88 >> 2] = D2 + +g[r2 + (Z2 * 244 | 0) + 88 >> 2];
                      }
                    while (0);
                    if (q2 | 0) {
                      l2 = +g[S2 + (U2 * 152 | 0) + 100 >> 2];
                      if (!(c[r2 + (_2 * 244 | 0) + 240 >> 2] | 0))
                        break;
                      D2 = +g[S2 + (U2 * 152 | 0) + 88 >> 2];
                      A2 = +g[S2 + (U2 * 152 | 0) + 84 >> 2];
                      z2 = +g[S2 + (U2 * 152 | 0) + 80 >> 2];
                      x2 = l2 * (+g[S2 + (U2 * 152 | 0) + 52 >> 2] * +g[r2 + (_2 * 244 | 0) + 132 >> 2] * +g[q2 + 376 >> 2]) * +g[r2 + (_2 * 244 | 0) + 116 >> 2];
                      y2 = l2 * (+g[S2 + (U2 * 152 | 0) + 56 >> 2] * +g[r2 + (_2 * 244 | 0) + 136 >> 2] * +g[q2 + 380 >> 2]) * +g[r2 + (_2 * 244 | 0) + 120 >> 2];
                      g[r2 + (_2 * 244 | 0) + 64 >> 2] = +g[r2 + (_2 * 244 | 0) + 112 >> 2] * (l2 * (+g[S2 + (U2 * 152 | 0) + 48 >> 2] * +g[r2 + (_2 * 244 | 0) + 128 >> 2] * +g[q2 + 372 >> 2])) + +g[r2 + (_2 * 244 | 0) + 64 >> 2];
                      g[r2 + (_2 * 244 | 0) + 68 >> 2] = x2 + +g[r2 + (_2 * 244 | 0) + 68 >> 2];
                      g[r2 + (_2 * 244 | 0) + 72 >> 2] = y2 + +g[r2 + (_2 * 244 | 0) + 72 >> 2];
                      A2 = A2 * (+g[r2 + (_2 * 244 | 0) + 100 >> 2] * -l2);
                      D2 = D2 * (+g[r2 + (_2 * 244 | 0) + 104 >> 2] * -l2);
                      g[r2 + (_2 * 244 | 0) + 80 >> 2] = +g[r2 + (_2 * 244 | 0) + 80 >> 2] - z2 * (+g[r2 + (_2 * 244 | 0) + 96 >> 2] * -l2);
                      g[r2 + (_2 * 244 | 0) + 84 >> 2] = +g[r2 + (_2 * 244 | 0) + 84 >> 2] - A2;
                      g[r2 + (_2 * 244 | 0) + 88 >> 2] = +g[r2 + (_2 * 244 | 0) + 88 >> 2] - D2;
                    }
                  } else
                    g[S2 + (U2 * 152 | 0) + 100 >> 2] = 0;
                while (0);
                g[S2 + (U2 * 152 | 0) + 96 >> 2] = 0;
                if (!(c[r2 + (Z2 * 244 | 0) + 240 >> 2] | 0)) {
                  l2 = 0;
                  m2 = 0;
                  o2 = 0;
                  v2 = 0;
                  w2 = 0;
                  x2 = 0;
                } else {
                  l2 = +g[r2 + (Z2 * 244 | 0) + 208 >> 2];
                  m2 = +g[r2 + (Z2 * 244 | 0) + 212 >> 2];
                  o2 = +g[r2 + (Z2 * 244 | 0) + 216 >> 2];
                  v2 = +g[r2 + (Z2 * 244 | 0) + 224 >> 2];
                  w2 = +g[r2 + (Z2 * 244 | 0) + 228 >> 2];
                  x2 = +g[r2 + (Z2 * 244 | 0) + 232 >> 2];
                }
                if (!(c[r2 + (_2 * 244 | 0) + 240 >> 2] | 0)) {
                  s2 = 0;
                  t2 = 0;
                  u2 = 0;
                  y2 = 0;
                  z2 = 0;
                  A2 = 0;
                } else {
                  s2 = +g[r2 + (_2 * 244 | 0) + 208 >> 2];
                  t2 = +g[r2 + (_2 * 244 | 0) + 212 >> 2];
                  u2 = +g[r2 + (_2 * 244 | 0) + 216 >> 2];
                  y2 = +g[r2 + (_2 * 244 | 0) + 224 >> 2];
                  z2 = +g[r2 + (_2 * 244 | 0) + 228 >> 2];
                  A2 = +g[r2 + (_2 * 244 | 0) + 232 >> 2];
                }
                l2 = B2 - ((l2 + +g[r2 + (Z2 * 244 | 0) + 176 >> 2]) * +g[S2 + (U2 * 152 | 0) + 16 >> 2] + (m2 + +g[r2 + (Z2 * 244 | 0) + 180 >> 2]) * +g[S2 + (U2 * 152 | 0) + 20 >> 2] + (o2 + +g[r2 + (Z2 * 244 | 0) + 184 >> 2]) * +g[S2 + (U2 * 152 | 0) + 24 >> 2] + ((v2 + +g[r2 + (Z2 * 244 | 0) + 192 >> 2]) * +g[S2 + (U2 * 152 | 0) >> 2] + (w2 + +g[r2 + (Z2 * 244 | 0) + 196 >> 2]) * +g[S2 + (U2 * 152 | 0) + 4 >> 2] + (x2 + +g[r2 + (Z2 * 244 | 0) + 200 >> 2]) * +g[S2 + (U2 * 152 | 0) + 8 >> 2]) + ((s2 + +g[r2 + (_2 * 244 | 0) + 176 >> 2]) * +g[S2 + (U2 * 152 | 0) + 48 >> 2] + (t2 + +g[r2 + (_2 * 244 | 0) + 180 >> 2]) * +g[S2 + (U2 * 152 | 0) + 52 >> 2] + (u2 + +g[r2 + (_2 * 244 | 0) + 184 >> 2]) * +g[S2 + (U2 * 152 | 0) + 56 >> 2] + ((y2 + +g[r2 + (_2 * 244 | 0) + 192 >> 2]) * +g[S2 + (U2 * 152 | 0) + 32 >> 2] + (z2 + +g[r2 + (_2 * 244 | 0) + 196 >> 2]) * +g[S2 + (U2 * 152 | 0) + 36 >> 2] + (A2 + +g[r2 + (_2 * 244 | 0) + 200 >> 2]) * +g[S2 + (U2 * 152 | 0) + 40 >> 2])));
                h2 = (c[e2 + 44 >> 2] | 0) == 0;
                m2 = +g[e2 + 12 >> 2];
                if (E2 > 0) {
                  o2 = 0;
                  l2 = l2 - E2 / m2;
                } else
                  o2 = -(E2 * +g[(h2 | E2 > +g[e2 + 48 >> 2] ? e2 + 32 | 0 : e2 + 36 | 0) >> 2]) / m2;
                D2 = +g[S2 + (U2 * 152 | 0) + 108 >> 2];
                m2 = o2 * D2;
                l2 = l2 * D2;
                if (h2 | E2 > +g[e2 + 48 >> 2]) {
                  g[S2 + (U2 * 152 | 0) + 112 >> 2] = m2 + l2;
                  g[S2 + (U2 * 152 | 0) + 128 >> 2] = 0;
                } else {
                  g[S2 + (U2 * 152 | 0) + 112 >> 2] = l2;
                  g[S2 + (U2 * 152 | 0) + 128 >> 2] = m2;
                }
                g[S2 + (U2 * 152 | 0) + 116 >> 2] = 0;
                g[S2 + (U2 * 152 | 0) + 120 >> 2] = 0;
                g[S2 + (U2 * 152 | 0) + 124 >> 2] = 1e10;
                c[S2 + (U2 * 152 | 0) + 140 >> 2] = c[b2 + 68 >> 2];
                if (!F2) {
                  j2 = 0;
                  q2 = 0;
                  r2 = 0;
                } else {
                  j2 = c[F2 + 352 >> 2] | 0;
                  q2 = c[F2 + 356 >> 2] | 0;
                  r2 = c[F2 + 360 >> 2] | 0;
                }
                if (!G2) {
                  h2 = 0;
                  n2 = 0;
                  p2 = 0;
                } else {
                  h2 = c[G2 + 352 >> 2] | 0;
                  n2 = c[G2 + 356 >> 2] | 0;
                  p2 = c[G2 + 360 >> 2] | 0;
                }
                o2 = (c[k >> 2] = h2, +g[k >> 2]);
                o2 = o2 - (c[k >> 2] = j2, +g[k >> 2]);
                m2 = (c[k >> 2] = n2, +g[k >> 2]);
                m2 = m2 - (c[k >> 2] = q2, +g[k >> 2]);
                s2 = (c[k >> 2] = p2, +g[k >> 2]);
                s2 = s2 - (c[k >> 2] = r2, +g[k >> 2]);
                g[ba2 + 32 >> 2] = o2;
                g[ba2 + 32 + 4 >> 2] = m2;
                g[ba2 + 32 + 8 >> 2] = s2;
                g[ba2 + 32 + 12 >> 2] = 0;
                do
                  if ((f2 | 0) > 0 ? +g[d2 + 4 + ($2 * 184 | 0) + 88 >> 2] > 0 : 0) {
                    f2 = f2 + -1 | 0;
                    l2 = +O(+(o2 * o2 + m2 * m2 + s2 * s2));
                    if (l2 > +g[e2 + 80 >> 2]) {
                      o2 = o2 * (1 / l2);
                      g[ba2 + 32 >> 2] = o2;
                      m2 = m2 * (1 / l2);
                      g[ba2 + 32 + 4 >> 2] = m2;
                      l2 = s2 * (1 / l2);
                      g[ba2 + 32 + 8 >> 2] = l2;
                      do
                        if (V2) {
                          if (!(c[V2 + 180 >> 2] & 2))
                            break;
                          t2 = +g[V2 + 4 >> 2];
                          w2 = +g[V2 + 20 >> 2];
                          z2 = +g[V2 + 36 >> 2];
                          u2 = +g[V2 + 8 >> 2];
                          x2 = +g[V2 + 24 >> 2];
                          B2 = +g[V2 + 40 >> 2];
                          v2 = +g[V2 + 12 >> 2];
                          y2 = +g[V2 + 28 >> 2];
                          E2 = +g[V2 + 44 >> 2];
                          A2 = (t2 * o2 + w2 * m2 + l2 * z2) * +g[V2 + 164 >> 2];
                          D2 = (o2 * u2 + m2 * x2 + l2 * B2) * +g[V2 + 168 >> 2];
                          l2 = (o2 * v2 + m2 * y2 + l2 * E2) * +g[V2 + 172 >> 2];
                          g[ba2 + 32 >> 2] = t2 * A2 + u2 * D2 + v2 * l2;
                          g[ba2 + 32 + 4 >> 2] = w2 * A2 + x2 * D2 + y2 * l2;
                          g[ba2 + 32 + 8 >> 2] = z2 * A2 + B2 * D2 + E2 * l2;
                          g[ba2 + 32 + 12 >> 2] = 0;
                          o2 = t2 * A2 + u2 * D2 + v2 * l2;
                          m2 = w2 * A2 + x2 * D2 + y2 * l2;
                          l2 = z2 * A2 + B2 * D2 + E2 * l2;
                        }
                      while (0);
                      do
                        if (Y2) {
                          if (!(c[Y2 + 180 >> 2] & 2))
                            break;
                          w2 = +g[Y2 + 4 >> 2];
                          z2 = +g[Y2 + 20 >> 2];
                          t2 = +g[Y2 + 36 >> 2];
                          x2 = +g[Y2 + 8 >> 2];
                          B2 = +g[Y2 + 24 >> 2];
                          u2 = +g[Y2 + 40 >> 2];
                          y2 = +g[Y2 + 12 >> 2];
                          E2 = +g[Y2 + 28 >> 2];
                          v2 = +g[Y2 + 44 >> 2];
                          A2 = (w2 * o2 + z2 * m2 + t2 * l2) * +g[Y2 + 164 >> 2];
                          D2 = (o2 * x2 + m2 * B2 + l2 * u2) * +g[Y2 + 168 >> 2];
                          m2 = (o2 * y2 + m2 * E2 + l2 * v2) * +g[Y2 + 172 >> 2];
                          g[ba2 + 32 >> 2] = w2 * A2 + x2 * D2 + y2 * m2;
                          g[ba2 + 32 + 4 >> 2] = z2 * A2 + B2 * D2 + E2 * m2;
                          g[ba2 + 32 + 8 >> 2] = t2 * A2 + u2 * D2 + v2 * m2;
                          g[ba2 + 32 + 12 >> 2] = 0;
                          l2 = t2 * A2 + u2 * D2 + v2 * m2;
                          o2 = w2 * A2 + x2 * D2 + y2 * m2;
                          m2 = z2 * A2 + B2 * D2 + E2 * m2;
                        }
                      while (0);
                      if (!(+O(+(o2 * o2 + m2 * m2 + l2 * l2)) > 1e-3))
                        break;
                      fq(b2, ba2 + 32 | 0, Z2, _2, U2, T2);
                      break;
                    }
                    fq(b2, P2, Z2, _2, U2, T2);
                    l2 = +g[R2 >> 2];
                    if (+N(+l2) > 0.7071067690849304) {
                      E2 = +g[Q2 >> 2];
                      D2 = 1 / +O(+(l2 * l2 + E2 * E2));
                      g[ba2 + 16 >> 2] = 0;
                      g[ba2 + 16 + 4 >> 2] = -(D2 * l2);
                      g[ba2 + 16 + 8 >> 2] = D2 * E2;
                      g[ba2 >> 2] = (l2 * l2 + E2 * E2) * D2;
                      o2 = +g[P2 >> 2];
                      g[ba2 + 4 >> 2] = -(D2 * E2 * o2);
                      v2 = o2 * -(D2 * l2);
                      m2 = 0;
                      s2 = -(D2 * l2);
                      u2 = D2 * E2;
                      t2 = (l2 * l2 + E2 * E2) * D2;
                      o2 = -(D2 * E2 * o2);
                    } else {
                      t2 = +g[P2 >> 2];
                      E2 = +g[Q2 >> 2];
                      o2 = 1 / +O(+(t2 * t2 + E2 * E2));
                      g[ba2 + 16 >> 2] = -(E2 * o2);
                      g[ba2 + 16 + 4 >> 2] = o2 * t2;
                      g[ba2 + 16 + 8 >> 2] = 0;
                      g[ba2 >> 2] = -(o2 * t2 * l2);
                      g[ba2 + 4 >> 2] = l2 * -(E2 * o2);
                      v2 = (t2 * t2 + E2 * E2) * o2;
                      m2 = -(E2 * o2);
                      s2 = o2 * t2;
                      u2 = 0;
                      t2 = -(o2 * t2 * l2);
                      o2 = l2 * -(E2 * o2);
                    }
                    g[ba2 + 8 >> 2] = v2;
                    do
                      if (!V2)
                        l2 = u2;
                      else {
                        if (!(c[V2 + 180 >> 2] & 2)) {
                          l2 = u2;
                          break;
                        }
                        ea2 = +g[V2 + 4 >> 2];
                        w2 = +g[V2 + 20 >> 2];
                        z2 = +g[V2 + 36 >> 2];
                        da2 = +g[V2 + 8 >> 2];
                        x2 = +g[V2 + 24 >> 2];
                        B2 = +g[V2 + 40 >> 2];
                        ca2 = +g[V2 + 12 >> 2];
                        y2 = +g[V2 + 28 >> 2];
                        E2 = +g[V2 + 44 >> 2];
                        A2 = (ea2 * m2 + w2 * s2 + z2 * u2) * +g[V2 + 164 >> 2];
                        D2 = (m2 * da2 + s2 * x2 + u2 * B2) * +g[V2 + 168 >> 2];
                        l2 = (m2 * ca2 + s2 * y2 + u2 * E2) * +g[V2 + 172 >> 2];
                        g[ba2 + 16 >> 2] = ea2 * A2 + da2 * D2 + ca2 * l2;
                        g[ba2 + 16 + 4 >> 2] = w2 * A2 + x2 * D2 + y2 * l2;
                        g[ba2 + 16 + 8 >> 2] = z2 * A2 + B2 * D2 + E2 * l2;
                        g[ba2 + 16 + 12 >> 2] = 0;
                        m2 = ea2 * A2 + da2 * D2 + ca2 * l2;
                        s2 = w2 * A2 + x2 * D2 + y2 * l2;
                        l2 = z2 * A2 + B2 * D2 + E2 * l2;
                      }
                    while (0);
                    do
                      if (!Y2)
                        u2 = l2;
                      else {
                        if (!(c[Y2 + 180 >> 2] & 2)) {
                          u2 = l2;
                          break;
                        }
                        w2 = +g[Y2 + 4 >> 2];
                        z2 = +g[Y2 + 20 >> 2];
                        D2 = +g[Y2 + 36 >> 2];
                        x2 = +g[Y2 + 8 >> 2];
                        A2 = +g[Y2 + 24 >> 2];
                        ca2 = +g[Y2 + 40 >> 2];
                        y2 = +g[Y2 + 12 >> 2];
                        B2 = +g[Y2 + 28 >> 2];
                        ea2 = +g[Y2 + 44 >> 2];
                        E2 = (w2 * m2 + z2 * s2 + D2 * l2) * +g[Y2 + 164 >> 2];
                        da2 = (m2 * x2 + s2 * A2 + l2 * ca2) * +g[Y2 + 168 >> 2];
                        u2 = (m2 * y2 + s2 * B2 + l2 * ea2) * +g[Y2 + 172 >> 2];
                        g[ba2 + 16 >> 2] = w2 * E2 + x2 * da2 + y2 * u2;
                        g[ba2 + 16 + 4 >> 2] = z2 * E2 + A2 * da2 + B2 * u2;
                        g[ba2 + 16 + 8 >> 2] = D2 * E2 + ca2 * da2 + ea2 * u2;
                        g[ba2 + 16 + 12 >> 2] = 0;
                        m2 = w2 * E2 + x2 * da2 + y2 * u2;
                        s2 = z2 * E2 + A2 * da2 + B2 * u2;
                        u2 = D2 * E2 + ca2 * da2 + ea2 * u2;
                      }
                    while (0);
                    do
                      if (!V2)
                        l2 = v2;
                      else {
                        if (!(c[V2 + 180 >> 2] & 2)) {
                          l2 = v2;
                          break;
                        }
                        w2 = +g[V2 + 4 >> 2];
                        z2 = +g[V2 + 20 >> 2];
                        D2 = +g[V2 + 36 >> 2];
                        x2 = +g[V2 + 8 >> 2];
                        A2 = +g[V2 + 24 >> 2];
                        ca2 = +g[V2 + 40 >> 2];
                        y2 = +g[V2 + 12 >> 2];
                        B2 = +g[V2 + 28 >> 2];
                        ea2 = +g[V2 + 44 >> 2];
                        E2 = (w2 * t2 + z2 * o2 + D2 * v2) * +g[V2 + 164 >> 2];
                        da2 = (t2 * x2 + o2 * A2 + v2 * ca2) * +g[V2 + 168 >> 2];
                        l2 = (t2 * y2 + o2 * B2 + v2 * ea2) * +g[V2 + 172 >> 2];
                        g[ba2 >> 2] = w2 * E2 + x2 * da2 + y2 * l2;
                        g[ba2 + 4 >> 2] = z2 * E2 + A2 * da2 + B2 * l2;
                        g[ba2 + 8 >> 2] = D2 * E2 + ca2 * da2 + ea2 * l2;
                        g[ba2 + 12 >> 2] = 0;
                        t2 = w2 * E2 + x2 * da2 + y2 * l2;
                        o2 = z2 * E2 + A2 * da2 + B2 * l2;
                        l2 = D2 * E2 + ca2 * da2 + ea2 * l2;
                      }
                    while (0);
                    do
                      if (Y2) {
                        if (!(c[Y2 + 180 >> 2] & 2))
                          break;
                        w2 = +g[Y2 + 4 >> 2];
                        z2 = +g[Y2 + 20 >> 2];
                        D2 = +g[Y2 + 36 >> 2];
                        x2 = +g[Y2 + 8 >> 2];
                        A2 = +g[Y2 + 24 >> 2];
                        ca2 = +g[Y2 + 40 >> 2];
                        y2 = +g[Y2 + 12 >> 2];
                        B2 = +g[Y2 + 28 >> 2];
                        ea2 = +g[Y2 + 44 >> 2];
                        E2 = (w2 * t2 + z2 * o2 + D2 * l2) * +g[Y2 + 164 >> 2];
                        da2 = (t2 * x2 + o2 * A2 + l2 * ca2) * +g[Y2 + 168 >> 2];
                        l2 = (t2 * y2 + o2 * B2 + l2 * ea2) * +g[Y2 + 172 >> 2];
                        g[ba2 >> 2] = w2 * E2 + x2 * da2 + y2 * l2;
                        g[ba2 + 4 >> 2] = z2 * E2 + A2 * da2 + B2 * l2;
                        g[ba2 + 8 >> 2] = D2 * E2 + ca2 * da2 + ea2 * l2;
                        g[ba2 + 12 >> 2] = 0;
                        t2 = w2 * E2 + x2 * da2 + y2 * l2;
                        o2 = z2 * E2 + A2 * da2 + B2 * l2;
                        l2 = D2 * E2 + ca2 * da2 + ea2 * l2;
                      }
                    while (0);
                    if (+O(+(m2 * m2 + s2 * s2 + u2 * u2)) > 1e-3)
                      fq(b2, ba2 + 16 | 0, Z2, _2, U2, T2);
                    if (+O(+(t2 * t2 + o2 * o2 + l2 * l2)) > 1e-3)
                      fq(b2, ba2, Z2, _2, U2, T2);
                  }
                while (0);
                do
                  if (!(c[e2 + 64 >> 2] & 32))
                    aa2 = 95;
                  else {
                    if (!(a[d2 + 4 + ($2 * 184 | 0) + 116 >> 0] | 0)) {
                      aa2 = 95;
                      break;
                    }
                    gq(b2, d2 + 4 + ($2 * 184 | 0) + 152 | 0, Z2, _2, U2, T2, ba2 + 64 | 0, ba2 + 48 | 0, 1, +g[d2 + 4 + ($2 * 184 | 0) + 132 >> 2], +g[d2 + 4 + ($2 * 184 | 0) + 140 >> 2]);
                    if (!(c[e2 + 64 >> 2] & 16))
                      break;
                    gq(b2, d2 + 4 + ($2 * 184 | 0) + 168 | 0, Z2, _2, U2, T2, ba2 + 64 | 0, ba2 + 48 | 0, 1, +g[d2 + 4 + ($2 * 184 | 0) + 136 >> 2], +g[d2 + 4 + ($2 * 184 | 0) + 144 >> 2]);
                  }
                while (0);
                do
                  if ((aa2 | 0) == 95) {
                    aa2 = 0;
                    C2 = d2 + 4 + ($2 * 184 | 0) + 152 | 0;
                    l2 = +g[P2 >> 2];
                    w2 = +g[Q2 >> 2];
                    v2 = +g[R2 >> 2];
                    m2 = M2 - (M2 * I2 + L2 * J2 + H2 * K2) * l2;
                    t2 = L2 - (M2 * I2 + L2 * J2 + H2 * K2) * w2;
                    s2 = H2 - (M2 * I2 + L2 * J2 + H2 * K2) * v2;
                    g[d2 + 4 + ($2 * 184 | 0) + 152 >> 2] = m2;
                    q2 = d2 + 4 + ($2 * 184 | 0) + 156 | 0;
                    g[q2 >> 2] = t2;
                    r2 = d2 + 4 + ($2 * 184 | 0) + 160 | 0;
                    g[r2 >> 2] = s2;
                    h2 = d2 + 4 + ($2 * 184 | 0) + 164 | 0;
                    g[h2 >> 2] = 0;
                    if ((c[e2 + 64 >> 2] & 64 | 0) == 0 ? m2 * m2 + t2 * t2 + s2 * s2 > 11920928955078125e-23 : 0) {
                      l2 = 1 / +O(+(m2 * m2 + t2 * t2 + s2 * s2));
                      g[C2 >> 2] = m2 * l2;
                      g[q2 >> 2] = l2 * t2;
                      g[r2 >> 2] = l2 * s2;
                      do
                        if (!V2) {
                          o2 = m2 * l2;
                          m2 = l2 * t2;
                          l2 = l2 * s2;
                        } else {
                          if (!(c[V2 + 180 >> 2] & 1)) {
                            o2 = m2 * l2;
                            m2 = l2 * t2;
                            l2 = l2 * s2;
                            break;
                          }
                          E2 = +g[V2 + 4 >> 2];
                          I2 = +g[V2 + 20 >> 2];
                          L2 = +g[V2 + 36 >> 2];
                          H2 = +g[V2 + 8 >> 2];
                          J2 = +g[V2 + 24 >> 2];
                          ca2 = +g[V2 + 40 >> 2];
                          o2 = +g[V2 + 12 >> 2];
                          K2 = +g[V2 + 28 >> 2];
                          ea2 = +g[V2 + 44 >> 2];
                          M2 = (E2 * (m2 * l2) + I2 * (l2 * t2) + l2 * s2 * L2) * +g[V2 + 164 >> 2];
                          da2 = (m2 * l2 * H2 + l2 * t2 * J2 + l2 * s2 * ca2) * +g[V2 + 168 >> 2];
                          l2 = (m2 * l2 * o2 + l2 * t2 * K2 + l2 * s2 * ea2) * +g[V2 + 172 >> 2];
                          g[C2 >> 2] = E2 * M2 + H2 * da2 + o2 * l2;
                          g[q2 >> 2] = I2 * M2 + J2 * da2 + K2 * l2;
                          g[r2 >> 2] = L2 * M2 + ca2 * da2 + ea2 * l2;
                          g[h2 >> 2] = 0;
                          o2 = E2 * M2 + H2 * da2 + o2 * l2;
                          m2 = I2 * M2 + J2 * da2 + K2 * l2;
                          l2 = L2 * M2 + ca2 * da2 + ea2 * l2;
                        }
                      while (0);
                      do
                        if (Y2 | 0) {
                          if (!(c[Y2 + 180 >> 2] & 1))
                            break;
                          B2 = +g[Y2 + 4 >> 2];
                          H2 = +g[Y2 + 20 >> 2];
                          K2 = +g[Y2 + 36 >> 2];
                          D2 = +g[Y2 + 8 >> 2];
                          I2 = +g[Y2 + 24 >> 2];
                          M2 = +g[Y2 + 40 >> 2];
                          E2 = +g[Y2 + 12 >> 2];
                          J2 = +g[Y2 + 28 >> 2];
                          da2 = +g[Y2 + 44 >> 2];
                          L2 = (B2 * o2 + H2 * m2 + K2 * l2) * +g[Y2 + 164 >> 2];
                          ca2 = (o2 * D2 + m2 * I2 + l2 * M2) * +g[Y2 + 168 >> 2];
                          ea2 = (o2 * E2 + m2 * J2 + l2 * da2) * +g[Y2 + 172 >> 2];
                          g[C2 >> 2] = B2 * L2 + D2 * ca2 + E2 * ea2;
                          g[q2 >> 2] = H2 * L2 + I2 * ca2 + J2 * ea2;
                          g[r2 >> 2] = K2 * L2 + M2 * ca2 + da2 * ea2;
                          g[h2 >> 2] = 0;
                        }
                      while (0);
                      gq(b2, C2, Z2, _2, U2, T2, ba2 + 64 | 0, ba2 + 48 | 0, 1, 0, 0);
                      if (!(c[e2 + 64 >> 2] & 16))
                        break;
                      p2 = d2 + 4 + ($2 * 184 | 0) + 168 | 0;
                      da2 = +g[q2 >> 2];
                      o2 = +g[R2 >> 2];
                      L2 = +g[r2 >> 2];
                      M2 = +g[Q2 >> 2];
                      ea2 = +g[P2 >> 2];
                      ca2 = +g[C2 >> 2];
                      g[d2 + 4 + ($2 * 184 | 0) + 168 >> 2] = da2 * o2 - L2 * M2;
                      h2 = d2 + 4 + ($2 * 184 | 0) + 172 | 0;
                      j2 = d2 + 4 + ($2 * 184 | 0) + 176 | 0;
                      n2 = d2 + 4 + ($2 * 184 | 0) + 180 | 0;
                      g[n2 >> 2] = 0;
                      m2 = 1 / +O(+((da2 * o2 - L2 * M2) * (da2 * o2 - L2 * M2) + (L2 * ea2 - o2 * ca2) * (L2 * ea2 - o2 * ca2) + (M2 * ca2 - da2 * ea2) * (M2 * ca2 - da2 * ea2)));
                      l2 = (da2 * o2 - L2 * M2) * m2;
                      g[p2 >> 2] = l2;
                      o2 = (L2 * ea2 - o2 * ca2) * m2;
                      g[h2 >> 2] = o2;
                      m2 = (M2 * ca2 - da2 * ea2) * m2;
                      g[j2 >> 2] = m2;
                      do
                        if (V2) {
                          if (!(c[V2 + 180 >> 2] & 1))
                            break;
                          D2 = +g[V2 + 4 >> 2];
                          I2 = +g[V2 + 20 >> 2];
                          L2 = +g[V2 + 36 >> 2];
                          E2 = +g[V2 + 8 >> 2];
                          J2 = +g[V2 + 24 >> 2];
                          ca2 = +g[V2 + 40 >> 2];
                          H2 = +g[V2 + 12 >> 2];
                          K2 = +g[V2 + 28 >> 2];
                          ea2 = +g[V2 + 44 >> 2];
                          M2 = (D2 * l2 + I2 * o2 + m2 * L2) * +g[V2 + 164 >> 2];
                          da2 = (l2 * E2 + o2 * J2 + m2 * ca2) * +g[V2 + 168 >> 2];
                          m2 = (l2 * H2 + o2 * K2 + m2 * ea2) * +g[V2 + 172 >> 2];
                          g[p2 >> 2] = D2 * M2 + E2 * da2 + H2 * m2;
                          g[h2 >> 2] = I2 * M2 + J2 * da2 + K2 * m2;
                          g[j2 >> 2] = L2 * M2 + ca2 * da2 + ea2 * m2;
                          g[n2 >> 2] = 0;
                          l2 = D2 * M2 + E2 * da2 + H2 * m2;
                          o2 = I2 * M2 + J2 * da2 + K2 * m2;
                          m2 = L2 * M2 + ca2 * da2 + ea2 * m2;
                        }
                      while (0);
                      do
                        if (Y2 | 0) {
                          if (!(c[Y2 + 180 >> 2] & 1))
                            break;
                          B2 = +g[Y2 + 4 >> 2];
                          H2 = +g[Y2 + 20 >> 2];
                          K2 = +g[Y2 + 36 >> 2];
                          D2 = +g[Y2 + 8 >> 2];
                          I2 = +g[Y2 + 24 >> 2];
                          M2 = +g[Y2 + 40 >> 2];
                          E2 = +g[Y2 + 12 >> 2];
                          J2 = +g[Y2 + 28 >> 2];
                          da2 = +g[Y2 + 44 >> 2];
                          L2 = (B2 * l2 + H2 * o2 + K2 * m2) * +g[Y2 + 164 >> 2];
                          ca2 = (l2 * D2 + o2 * I2 + m2 * M2) * +g[Y2 + 168 >> 2];
                          ea2 = (l2 * E2 + o2 * J2 + m2 * da2) * +g[Y2 + 172 >> 2];
                          g[p2 >> 2] = B2 * L2 + D2 * ca2 + E2 * ea2;
                          g[h2 >> 2] = H2 * L2 + I2 * ca2 + J2 * ea2;
                          g[j2 >> 2] = K2 * L2 + M2 * ca2 + da2 * ea2;
                          g[n2 >> 2] = 0;
                        }
                      while (0);
                      gq(b2, p2, Z2, _2, U2, T2, ba2 + 64 | 0, ba2 + 48 | 0, 1, 0, 0);
                      break;
                    }
                    p2 = d2 + 4 + ($2 * 184 | 0) + 168 | 0;
                    if (+N(+v2) > 0.7071067690849304) {
                      ea2 = 1 / +O(+(v2 * v2 + w2 * w2));
                      g[C2 >> 2] = 0;
                      g[q2 >> 2] = -(ea2 * v2);
                      g[r2 >> 2] = ea2 * w2;
                      t2 = -(ea2 * w2 * l2);
                      u2 = l2 * -(ea2 * v2);
                      s2 = (v2 * v2 + w2 * w2) * ea2;
                      o2 = 0;
                      m2 = -(ea2 * v2);
                      l2 = ea2 * w2;
                    } else {
                      m2 = 1 / +O(+(l2 * l2 + w2 * w2));
                      g[C2 >> 2] = -(w2 * m2);
                      g[q2 >> 2] = m2 * l2;
                      g[r2 >> 2] = 0;
                      t2 = v2 * -(w2 * m2);
                      u2 = (l2 * l2 + w2 * w2) * m2;
                      s2 = -(m2 * l2 * v2);
                      o2 = -(w2 * m2);
                      m2 = m2 * l2;
                      l2 = 0;
                    }
                    g[p2 >> 2] = s2;
                    n2 = d2 + 4 + ($2 * 184 | 0) + 172 | 0;
                    g[n2 >> 2] = t2;
                    j2 = d2 + 4 + ($2 * 184 | 0) + 176 | 0;
                    g[j2 >> 2] = u2;
                    do
                      if (V2) {
                        if (!(c[V2 + 180 >> 2] & 1))
                          break;
                        D2 = +g[V2 + 4 >> 2];
                        I2 = +g[V2 + 20 >> 2];
                        L2 = +g[V2 + 36 >> 2];
                        E2 = +g[V2 + 8 >> 2];
                        J2 = +g[V2 + 24 >> 2];
                        ca2 = +g[V2 + 40 >> 2];
                        H2 = +g[V2 + 12 >> 2];
                        K2 = +g[V2 + 28 >> 2];
                        ea2 = +g[V2 + 44 >> 2];
                        M2 = (D2 * o2 + I2 * m2 + L2 * l2) * +g[V2 + 164 >> 2];
                        da2 = (o2 * E2 + m2 * J2 + l2 * ca2) * +g[V2 + 168 >> 2];
                        l2 = (o2 * H2 + m2 * K2 + l2 * ea2) * +g[V2 + 172 >> 2];
                        g[C2 >> 2] = D2 * M2 + E2 * da2 + H2 * l2;
                        g[q2 >> 2] = I2 * M2 + J2 * da2 + K2 * l2;
                        g[r2 >> 2] = L2 * M2 + ca2 * da2 + ea2 * l2;
                        g[h2 >> 2] = 0;
                        o2 = D2 * M2 + E2 * da2 + H2 * l2;
                        m2 = I2 * M2 + J2 * da2 + K2 * l2;
                        l2 = L2 * M2 + ca2 * da2 + ea2 * l2;
                      }
                    while (0);
                    do
                      if (Y2 | 0) {
                        if (!(c[Y2 + 180 >> 2] & 1))
                          break;
                        B2 = +g[Y2 + 4 >> 2];
                        H2 = +g[Y2 + 20 >> 2];
                        K2 = +g[Y2 + 36 >> 2];
                        D2 = +g[Y2 + 8 >> 2];
                        I2 = +g[Y2 + 24 >> 2];
                        M2 = +g[Y2 + 40 >> 2];
                        E2 = +g[Y2 + 12 >> 2];
                        J2 = +g[Y2 + 28 >> 2];
                        da2 = +g[Y2 + 44 >> 2];
                        L2 = (B2 * o2 + H2 * m2 + K2 * l2) * +g[Y2 + 164 >> 2];
                        ca2 = (o2 * D2 + m2 * I2 + l2 * M2) * +g[Y2 + 168 >> 2];
                        ea2 = (o2 * E2 + m2 * J2 + l2 * da2) * +g[Y2 + 172 >> 2];
                        g[C2 >> 2] = B2 * L2 + D2 * ca2 + E2 * ea2;
                        g[q2 >> 2] = H2 * L2 + I2 * ca2 + J2 * ea2;
                        g[r2 >> 2] = K2 * L2 + M2 * ca2 + da2 * ea2;
                        g[h2 >> 2] = 0;
                      }
                    while (0);
                    gq(b2, C2, Z2, _2, U2, T2, ba2 + 64 | 0, ba2 + 48 | 0, 1, 0, 0);
                    h2 = c[e2 + 64 >> 2] | 0;
                    if (h2 & 16) {
                      do
                        if (V2 | 0) {
                          if (!(c[V2 + 180 >> 2] & 1))
                            break;
                          B2 = +g[V2 + 4 >> 2];
                          z2 = +g[p2 >> 2];
                          H2 = +g[V2 + 20 >> 2];
                          A2 = +g[n2 >> 2];
                          K2 = +g[V2 + 36 >> 2];
                          ea2 = +g[j2 >> 2];
                          D2 = +g[V2 + 8 >> 2];
                          I2 = +g[V2 + 24 >> 2];
                          M2 = +g[V2 + 40 >> 2];
                          E2 = +g[V2 + 12 >> 2];
                          J2 = +g[V2 + 28 >> 2];
                          da2 = +g[V2 + 44 >> 2];
                          L2 = (B2 * z2 + H2 * A2 + K2 * ea2) * +g[V2 + 164 >> 2];
                          ca2 = (z2 * D2 + A2 * I2 + ea2 * M2) * +g[V2 + 168 >> 2];
                          ea2 = (z2 * E2 + A2 * J2 + ea2 * da2) * +g[V2 + 172 >> 2];
                          g[p2 >> 2] = B2 * L2 + D2 * ca2 + E2 * ea2;
                          g[n2 >> 2] = H2 * L2 + I2 * ca2 + J2 * ea2;
                          g[j2 >> 2] = K2 * L2 + M2 * ca2 + da2 * ea2;
                          g[d2 + 4 + ($2 * 184 | 0) + 180 >> 2] = 0;
                        }
                      while (0);
                      do
                        if (Y2 | 0) {
                          if (!(c[Y2 + 180 >> 2] & 1))
                            break;
                          B2 = +g[Y2 + 4 >> 2];
                          z2 = +g[p2 >> 2];
                          H2 = +g[Y2 + 20 >> 2];
                          A2 = +g[n2 >> 2];
                          K2 = +g[Y2 + 36 >> 2];
                          ea2 = +g[j2 >> 2];
                          D2 = +g[Y2 + 8 >> 2];
                          I2 = +g[Y2 + 24 >> 2];
                          M2 = +g[Y2 + 40 >> 2];
                          E2 = +g[Y2 + 12 >> 2];
                          J2 = +g[Y2 + 28 >> 2];
                          da2 = +g[Y2 + 44 >> 2];
                          L2 = (B2 * z2 + H2 * A2 + K2 * ea2) * +g[Y2 + 164 >> 2];
                          ca2 = (z2 * D2 + A2 * I2 + ea2 * M2) * +g[Y2 + 168 >> 2];
                          ea2 = (z2 * E2 + A2 * J2 + ea2 * da2) * +g[Y2 + 172 >> 2];
                          g[p2 >> 2] = B2 * L2 + D2 * ca2 + E2 * ea2;
                          g[n2 >> 2] = H2 * L2 + I2 * ca2 + J2 * ea2;
                          g[j2 >> 2] = K2 * L2 + M2 * ca2 + da2 * ea2;
                          g[d2 + 4 + ($2 * 184 | 0) + 180 >> 2] = 0;
                        }
                      while (0);
                      gq(b2, p2, Z2, _2, U2, T2, ba2 + 64 | 0, ba2 + 48 | 0, 1, 0, 0);
                      h2 = c[e2 + 64 >> 2] | 0;
                    }
                    if ((h2 & 80 | 0) != 80)
                      break;
                    a[d2 + 4 + ($2 * 184 | 0) + 116 >> 0] = 1;
                  }
                while (0);
                r2 = c[b2 + 16 >> 2] | 0;
                j2 = c[r2 + (Z2 * 244 | 0) + 240 >> 2] | 0;
                n2 = c[r2 + (_2 * 244 | 0) + 240 >> 2] | 0;
                p2 = c[S2 + (U2 * 152 | 0) + 140 >> 2] | 0;
                q2 = c[b2 + 76 >> 2] | 0;
                h2 = c[e2 + 64 >> 2] | 0;
                do
                  if (!(h2 & 4))
                    g[q2 + (p2 * 152 | 0) + 100 >> 2] = 0;
                  else {
                    l2 = +g[d2 + 4 + ($2 * 184 | 0) + 124 >> 2] * +g[e2 + 60 >> 2];
                    g[q2 + (p2 * 152 | 0) + 100 >> 2] = l2;
                    if (j2 | 0) {
                      ca2 = +g[j2 + 368 >> 2];
                      ea2 = l2 * (ca2 * +g[q2 + (p2 * 152 | 0) + 20 >> 2] * +g[j2 + 376 >> 2]) * +g[r2 + (Z2 * 244 | 0) + 116 >> 2];
                      da2 = l2 * (ca2 * +g[q2 + (p2 * 152 | 0) + 24 >> 2] * +g[j2 + 380 >> 2]) * +g[r2 + (Z2 * 244 | 0) + 120 >> 2];
                      g[r2 + (Z2 * 244 | 0) + 64 >> 2] = +g[r2 + (Z2 * 244 | 0) + 112 >> 2] * (l2 * (ca2 * +g[q2 + (p2 * 152 | 0) + 16 >> 2] * +g[j2 + 372 >> 2])) + +g[r2 + (Z2 * 244 | 0) + 64 >> 2];
                      g[r2 + (Z2 * 244 | 0) + 68 >> 2] = ea2 + +g[r2 + (Z2 * 244 | 0) + 68 >> 2];
                      g[r2 + (Z2 * 244 | 0) + 72 >> 2] = da2 + +g[r2 + (Z2 * 244 | 0) + 72 >> 2];
                      da2 = l2 * +g[r2 + (Z2 * 244 | 0) + 100 >> 2] * +g[q2 + (p2 * 152 | 0) + 68 >> 2];
                      ea2 = l2 * +g[r2 + (Z2 * 244 | 0) + 104 >> 2] * +g[q2 + (p2 * 152 | 0) + 72 >> 2];
                      g[r2 + (Z2 * 244 | 0) + 80 >> 2] = l2 * +g[r2 + (Z2 * 244 | 0) + 96 >> 2] * +g[q2 + (p2 * 152 | 0) + 64 >> 2] + +g[r2 + (Z2 * 244 | 0) + 80 >> 2];
                      g[r2 + (Z2 * 244 | 0) + 84 >> 2] = da2 + +g[r2 + (Z2 * 244 | 0) + 84 >> 2];
                      g[r2 + (Z2 * 244 | 0) + 88 >> 2] = ea2 + +g[r2 + (Z2 * 244 | 0) + 88 >> 2];
                    }
                    if (!n2)
                      break;
                    l2 = +g[n2 + 368 >> 2];
                    m2 = +g[q2 + (p2 * 152 | 0) + 100 >> 2];
                    if (!(c[r2 + (_2 * 244 | 0) + 240 >> 2] | 0))
                      break;
                    ea2 = +g[q2 + (p2 * 152 | 0) + 88 >> 2];
                    da2 = +g[q2 + (p2 * 152 | 0) + 84 >> 2];
                    ca2 = +g[q2 + (p2 * 152 | 0) + 80 >> 2];
                    L2 = m2 * (l2 * +g[q2 + (p2 * 152 | 0) + 52 >> 2] * +g[n2 + 376 >> 2]) * +g[r2 + (_2 * 244 | 0) + 116 >> 2];
                    M2 = m2 * (l2 * +g[q2 + (p2 * 152 | 0) + 56 >> 2] * +g[n2 + 380 >> 2]) * +g[r2 + (_2 * 244 | 0) + 120 >> 2];
                    g[r2 + (_2 * 244 | 0) + 64 >> 2] = +g[r2 + (_2 * 244 | 0) + 112 >> 2] * (m2 * (l2 * +g[q2 + (p2 * 152 | 0) + 48 >> 2] * +g[n2 + 372 >> 2])) + +g[r2 + (_2 * 244 | 0) + 64 >> 2];
                    g[r2 + (_2 * 244 | 0) + 68 >> 2] = L2 + +g[r2 + (_2 * 244 | 0) + 68 >> 2];
                    g[r2 + (_2 * 244 | 0) + 72 >> 2] = M2 + +g[r2 + (_2 * 244 | 0) + 72 >> 2];
                    da2 = da2 * (+g[r2 + (_2 * 244 | 0) + 100 >> 2] * -m2);
                    ea2 = ea2 * (+g[r2 + (_2 * 244 | 0) + 104 >> 2] * -m2);
                    g[r2 + (_2 * 244 | 0) + 80 >> 2] = +g[r2 + (_2 * 244 | 0) + 80 >> 2] - ca2 * (+g[r2 + (_2 * 244 | 0) + 96 >> 2] * -m2);
                    g[r2 + (_2 * 244 | 0) + 84 >> 2] = +g[r2 + (_2 * 244 | 0) + 84 >> 2] - da2;
                    g[r2 + (_2 * 244 | 0) + 88 >> 2] = +g[r2 + (_2 * 244 | 0) + 88 >> 2] - ea2;
                  }
                while (0);
                do
                  if (h2 & 16 | 0) {
                    if (!(h2 & 4)) {
                      g[q2 + ((p2 + 1 | 0) * 152 | 0) + 100 >> 2] = 0;
                      break;
                    }
                    m2 = +g[d2 + 4 + ($2 * 184 | 0) + 128 >> 2] * +g[e2 + 60 >> 2];
                    g[q2 + ((p2 + 1 | 0) * 152 | 0) + 100 >> 2] = m2;
                    do
                      if (j2 | 0) {
                        l2 = +g[j2 + 368 >> 2];
                        if (!(c[r2 + (Z2 * 244 | 0) + 240 >> 2] | 0))
                          break;
                        ea2 = m2 * (l2 * +g[q2 + ((p2 + 1 | 0) * 152 | 0) + 20 >> 2]) * +g[r2 + (Z2 * 244 | 0) + 116 >> 2];
                        da2 = m2 * (l2 * +g[q2 + ((p2 + 1 | 0) * 152 | 0) + 24 >> 2]) * +g[r2 + (Z2 * 244 | 0) + 120 >> 2];
                        g[r2 + (Z2 * 244 | 0) + 64 >> 2] = +g[r2 + (Z2 * 244 | 0) + 112 >> 2] * (m2 * (l2 * +g[q2 + ((p2 + 1 | 0) * 152 | 0) + 16 >> 2])) + +g[r2 + (Z2 * 244 | 0) + 64 >> 2];
                        g[r2 + (Z2 * 244 | 0) + 68 >> 2] = ea2 + +g[r2 + (Z2 * 244 | 0) + 68 >> 2];
                        g[r2 + (Z2 * 244 | 0) + 72 >> 2] = da2 + +g[r2 + (Z2 * 244 | 0) + 72 >> 2];
                        da2 = m2 * +g[r2 + (Z2 * 244 | 0) + 100 >> 2] * +g[q2 + ((p2 + 1 | 0) * 152 | 0) + 68 >> 2];
                        ea2 = m2 * +g[r2 + (Z2 * 244 | 0) + 104 >> 2] * +g[q2 + ((p2 + 1 | 0) * 152 | 0) + 72 >> 2];
                        g[r2 + (Z2 * 244 | 0) + 80 >> 2] = m2 * +g[r2 + (Z2 * 244 | 0) + 96 >> 2] * +g[q2 + ((p2 + 1 | 0) * 152 | 0) + 64 >> 2] + +g[r2 + (Z2 * 244 | 0) + 80 >> 2];
                        g[r2 + (Z2 * 244 | 0) + 84 >> 2] = da2 + +g[r2 + (Z2 * 244 | 0) + 84 >> 2];
                        g[r2 + (Z2 * 244 | 0) + 88 >> 2] = ea2 + +g[r2 + (Z2 * 244 | 0) + 88 >> 2];
                      }
                    while (0);
                    if (!n2)
                      break;
                    l2 = +g[n2 + 368 >> 2];
                    m2 = +g[q2 + ((p2 + 1 | 0) * 152 | 0) + 100 >> 2];
                    if (!(c[r2 + (_2 * 244 | 0) + 240 >> 2] | 0))
                      break;
                    ea2 = +g[q2 + ((p2 + 1 | 0) * 152 | 0) + 88 >> 2];
                    da2 = +g[q2 + ((p2 + 1 | 0) * 152 | 0) + 84 >> 2];
                    ca2 = +g[q2 + ((p2 + 1 | 0) * 152 | 0) + 80 >> 2];
                    L2 = m2 * (l2 * +g[q2 + ((p2 + 1 | 0) * 152 | 0) + 52 >> 2]) * +g[r2 + (_2 * 244 | 0) + 116 >> 2];
                    M2 = m2 * (l2 * +g[q2 + ((p2 + 1 | 0) * 152 | 0) + 56 >> 2]) * +g[r2 + (_2 * 244 | 0) + 120 >> 2];
                    g[r2 + (_2 * 244 | 0) + 64 >> 2] = +g[r2 + (_2 * 244 | 0) + 112 >> 2] * (m2 * (l2 * +g[q2 + ((p2 + 1 | 0) * 152 | 0) + 48 >> 2])) + +g[r2 + (_2 * 244 | 0) + 64 >> 2];
                    g[r2 + (_2 * 244 | 0) + 68 >> 2] = L2 + +g[r2 + (_2 * 244 | 0) + 68 >> 2];
                    g[r2 + (_2 * 244 | 0) + 72 >> 2] = M2 + +g[r2 + (_2 * 244 | 0) + 72 >> 2];
                    da2 = da2 * (+g[r2 + (_2 * 244 | 0) + 100 >> 2] * -m2);
                    ea2 = ea2 * (+g[r2 + (_2 * 244 | 0) + 104 >> 2] * -m2);
                    g[r2 + (_2 * 244 | 0) + 80 >> 2] = +g[r2 + (_2 * 244 | 0) + 80 >> 2] - ca2 * (+g[r2 + (_2 * 244 | 0) + 96 >> 2] * -m2);
                    g[r2 + (_2 * 244 | 0) + 84 >> 2] = +g[r2 + (_2 * 244 | 0) + 84 >> 2] - da2;
                    g[r2 + (_2 * 244 | 0) + 88 >> 2] = +g[r2 + (_2 * 244 | 0) + 88 >> 2] - ea2;
                  }
                while (0);
              }
              $2 = $2 + 1 | 0;
            } while (($2 | 0) < (c[d2 + 748 >> 2] | 0));
            i = ba2;
            return;
          }
          function cq(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = +d2;
            var e2 = 0, f2 = 0, h2 = 0;
            f2 = i;
            i = i + 496 | 0;
            e2 = c[b2 + 212 >> 2] | 0;
            if ((e2 | 0) > -1) {
              a2 = e2;
              i = f2;
              return a2 | 0;
            }
            h2 = (c[b2 + 236 >> 2] & 2 | 0) == 0;
            e2 = h2 ? 0 : b2;
            do
              if (!h2) {
                if (!(+g[e2 + 368 >> 2] != 0) ? (c[e2 + 204 >> 2] & 2 | 0) == 0 : 0)
                  break;
                h2 = c[a2 + 8 >> 2] | 0;
                ZG(f2 + 244 | 0, 0, 244) | 0;
                eq(dq(a2 + 4 | 0, f2 + 244 | 0) | 0, b2, d2);
                c[b2 + 212 >> 2] = h2;
                i = f2;
                return h2 | 0;
              }
            while (0);
            e2 = c[a2 + 188 >> 2] | 0;
            if ((e2 | 0) >= 0) {
              h2 = e2;
              i = f2;
              return h2 | 0;
            }
            c[a2 + 188 >> 2] = c[a2 + 8 >> 2];
            ZG(f2 | 0, 0, 244) | 0;
            eq(dq(a2 + 4 | 0, f2) | 0, 0, d2);
            h2 = c[a2 + 188 >> 2] | 0;
            i = f2;
            return h2 | 0;
          }
          function dq(b2, d2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, g2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0;
            i2 = c[b2 + 4 >> 2] | 0;
            if ((i2 | 0) == (c[b2 + 8 >> 2] | 0) ? (h2 = i2 | 0 ? i2 << 1 : 1, (i2 | 0) < (h2 | 0)) : 0) {
              if (!h2) {
                e2 = 0;
                f2 = i2;
              } else {
                c[5637] = (c[5637] | 0) + 1;
                e2 = qG((h2 * 244 | 3) + 16 | 0) | 0;
                if (!e2)
                  e2 = 0;
                else {
                  c[(e2 + 4 + 15 & -16) + -4 >> 2] = e2;
                  e2 = e2 + 4 + 15 & -16;
                }
                f2 = c[b2 + 4 >> 2] | 0;
              }
              if ((f2 | 0) > 0) {
                g2 = 0;
                do {
                  k2 = e2 + (g2 * 244 | 0) | 0;
                  j2 = c[b2 + 12 >> 2] | 0;
                  l2 = j2 + (g2 * 244 | 0) | 0;
                  c[k2 >> 2] = c[l2 >> 2];
                  c[k2 + 4 >> 2] = c[l2 + 4 >> 2];
                  c[k2 + 8 >> 2] = c[l2 + 8 >> 2];
                  c[k2 + 12 >> 2] = c[l2 + 12 >> 2];
                  k2 = e2 + (g2 * 244 | 0) + 16 | 0;
                  l2 = j2 + (g2 * 244 | 0) + 16 | 0;
                  c[k2 >> 2] = c[l2 >> 2];
                  c[k2 + 4 >> 2] = c[l2 + 4 >> 2];
                  c[k2 + 8 >> 2] = c[l2 + 8 >> 2];
                  c[k2 + 12 >> 2] = c[l2 + 12 >> 2];
                  k2 = e2 + (g2 * 244 | 0) + 32 | 0;
                  l2 = j2 + (g2 * 244 | 0) + 32 | 0;
                  c[k2 >> 2] = c[l2 >> 2];
                  c[k2 + 4 >> 2] = c[l2 + 4 >> 2];
                  c[k2 + 8 >> 2] = c[l2 + 8 >> 2];
                  c[k2 + 12 >> 2] = c[l2 + 12 >> 2];
                  k2 = e2 + (g2 * 244 | 0) + 48 | 0;
                  l2 = j2 + (g2 * 244 | 0) + 48 | 0;
                  c[k2 >> 2] = c[l2 >> 2];
                  c[k2 + 4 >> 2] = c[l2 + 4 >> 2];
                  c[k2 + 8 >> 2] = c[l2 + 8 >> 2];
                  c[k2 + 12 >> 2] = c[l2 + 12 >> 2];
                  bH(e2 + (g2 * 244 | 0) + 64 | 0, j2 + (g2 * 244 | 0) + 64 | 0, 180) | 0;
                  g2 = g2 + 1 | 0;
                } while ((g2 | 0) != (f2 | 0));
              }
              f2 = c[b2 + 12 >> 2] | 0;
              if (f2 | 0) {
                if (a[b2 + 16 >> 0] | 0) {
                  c[5638] = (c[5638] | 0) + 1;
                  rG(c[f2 + -4 >> 2] | 0);
                }
                c[b2 + 12 >> 2] = 0;
              }
              a[b2 + 16 >> 0] = 1;
              c[b2 + 12 >> 2] = e2;
              c[b2 + 8 >> 2] = h2;
              e2 = c[b2 + 4 >> 2] | 0;
            } else
              e2 = i2;
            c[b2 + 4 >> 2] = e2 + 1;
            l2 = c[b2 + 12 >> 2] | 0;
            c[l2 + (i2 * 244 | 0) >> 2] = c[d2 >> 2];
            c[l2 + (i2 * 244 | 0) + 4 >> 2] = c[d2 + 4 >> 2];
            c[l2 + (i2 * 244 | 0) + 8 >> 2] = c[d2 + 8 >> 2];
            c[l2 + (i2 * 244 | 0) + 12 >> 2] = c[d2 + 12 >> 2];
            c[l2 + (i2 * 244 | 0) + 16 >> 2] = c[d2 + 16 >> 2];
            c[l2 + (i2 * 244 | 0) + 16 + 4 >> 2] = c[d2 + 16 + 4 >> 2];
            c[l2 + (i2 * 244 | 0) + 16 + 8 >> 2] = c[d2 + 16 + 8 >> 2];
            c[l2 + (i2 * 244 | 0) + 16 + 12 >> 2] = c[d2 + 16 + 12 >> 2];
            c[l2 + (i2 * 244 | 0) + 32 >> 2] = c[d2 + 32 >> 2];
            c[l2 + (i2 * 244 | 0) + 32 + 4 >> 2] = c[d2 + 32 + 4 >> 2];
            c[l2 + (i2 * 244 | 0) + 32 + 8 >> 2] = c[d2 + 32 + 8 >> 2];
            c[l2 + (i2 * 244 | 0) + 32 + 12 >> 2] = c[d2 + 32 + 12 >> 2];
            c[l2 + (i2 * 244 | 0) + 48 >> 2] = c[d2 + 48 >> 2];
            c[l2 + (i2 * 244 | 0) + 48 + 4 >> 2] = c[d2 + 48 + 4 >> 2];
            c[l2 + (i2 * 244 | 0) + 48 + 8 >> 2] = c[d2 + 48 + 8 >> 2];
            c[l2 + (i2 * 244 | 0) + 48 + 12 >> 2] = c[d2 + 48 + 12 >> 2];
            bH(l2 + (i2 * 244 | 0) + 64 | 0, d2 + 64 | 0, 180) | 0;
            return (c[b2 + 12 >> 2] | 0) + (i2 * 244 | 0) | 0;
          }
          function eq(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = +d2;
            var e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0;
            if (!b2)
              b2 = 0;
            else
              b2 = (c[b2 + 236 >> 2] & 2 | 0) == 0 ? 0 : b2;
            c[a2 + 64 >> 2] = 0;
            c[a2 + 64 + 4 >> 2] = 0;
            c[a2 + 64 + 8 >> 2] = 0;
            c[a2 + 64 + 12 >> 2] = 0;
            c[a2 + 64 + 16 >> 2] = 0;
            c[a2 + 64 + 20 >> 2] = 0;
            c[a2 + 64 + 24 >> 2] = 0;
            c[a2 + 64 + 28 >> 2] = 0;
            c[a2 + 144 >> 2] = 0;
            c[a2 + 144 + 4 >> 2] = 0;
            c[a2 + 144 + 8 >> 2] = 0;
            c[a2 + 144 + 12 >> 2] = 0;
            c[a2 + 144 + 16 >> 2] = 0;
            c[a2 + 144 + 20 >> 2] = 0;
            c[a2 + 144 + 24 >> 2] = 0;
            c[a2 + 144 + 28 >> 2] = 0;
            if (!b2) {
              c[a2 >> 2] = 1065353216;
              c[a2 + 4 >> 2] = 0;
              c[a2 + 4 + 4 >> 2] = 0;
              c[a2 + 4 + 8 >> 2] = 0;
              c[a2 + 4 + 12 >> 2] = 0;
              c[a2 + 20 >> 2] = 1065353216;
              c[a2 + 24 >> 2] = 0;
              c[a2 + 24 + 4 >> 2] = 0;
              c[a2 + 24 + 8 >> 2] = 0;
              c[a2 + 24 + 12 >> 2] = 0;
              c[a2 + 40 >> 2] = 1065353216;
              c[a2 + 44 >> 2] = 0;
              c[a2 + 44 + 4 >> 2] = 0;
              c[a2 + 44 + 8 >> 2] = 0;
              c[a2 + 44 + 12 >> 2] = 0;
              c[a2 + 44 + 16 >> 2] = 0;
              c[a2 + 240 >> 2] = 0;
              c[a2 + 128 >> 2] = 0;
              c[a2 + 128 + 4 >> 2] = 0;
              c[a2 + 128 + 8 >> 2] = 0;
              c[a2 + 128 + 12 >> 2] = 0;
              c[a2 + 96 >> 2] = 1065353216;
              c[a2 + 100 >> 2] = 1065353216;
              c[a2 + 104 >> 2] = 1065353216;
              g[a2 + 108 >> 2] = 0;
              c[a2 + 112 >> 2] = 1065353216;
              c[a2 + 116 >> 2] = 1065353216;
              c[a2 + 120 >> 2] = 1065353216;
              g[a2 + 124 >> 2] = 0;
              b2 = a2 + 176 | 0;
              e2 = b2 + 60 | 0;
              do {
                c[b2 >> 2] = 0;
                b2 = b2 + 4 | 0;
              } while ((b2 | 0) < (e2 | 0));
              a2 = a2 + 236 | 0;
              g[a2 >> 2] = 0;
              return;
            } else {
              e2 = b2 + 4 | 0;
              c[a2 >> 2] = c[e2 >> 2];
              c[a2 + 4 >> 2] = c[e2 + 4 >> 2];
              c[a2 + 8 >> 2] = c[e2 + 8 >> 2];
              c[a2 + 12 >> 2] = c[e2 + 12 >> 2];
              e2 = b2 + 20 | 0;
              c[a2 + 16 >> 2] = c[e2 >> 2];
              c[a2 + 16 + 4 >> 2] = c[e2 + 4 >> 2];
              c[a2 + 16 + 8 >> 2] = c[e2 + 8 >> 2];
              c[a2 + 16 + 12 >> 2] = c[e2 + 12 >> 2];
              e2 = b2 + 36 | 0;
              c[a2 + 32 >> 2] = c[e2 >> 2];
              c[a2 + 32 + 4 >> 2] = c[e2 + 4 >> 2];
              c[a2 + 32 + 8 >> 2] = c[e2 + 8 >> 2];
              c[a2 + 32 + 12 >> 2] = c[e2 + 12 >> 2];
              e2 = b2 + 52 | 0;
              c[a2 + 48 >> 2] = c[e2 >> 2];
              c[a2 + 48 + 4 >> 2] = c[e2 + 4 >> 2];
              c[a2 + 48 + 8 >> 2] = c[e2 + 8 >> 2];
              c[a2 + 48 + 12 >> 2] = c[e2 + 12 >> 2];
              e2 = b2 + 368 | 0;
              k2 = +g[e2 >> 2];
              l2 = b2 + 372 | 0;
              j2 = k2 * +g[b2 + 376 >> 2];
              i2 = k2 * +g[b2 + 380 >> 2];
              g[a2 + 128 >> 2] = k2 * +g[l2 >> 2];
              g[a2 + 132 >> 2] = j2;
              g[a2 + 136 >> 2] = i2;
              g[a2 + 140 >> 2] = 0;
              c[a2 + 240 >> 2] = b2;
              m2 = b2 + 568 | 0;
              c[a2 + 96 >> 2] = c[m2 >> 2];
              c[a2 + 96 + 4 >> 2] = c[m2 + 4 >> 2];
              c[a2 + 96 + 8 >> 2] = c[m2 + 8 >> 2];
              c[a2 + 96 + 12 >> 2] = c[m2 + 12 >> 2];
              c[a2 + 112 >> 2] = c[l2 >> 2];
              c[a2 + 112 + 4 >> 2] = c[l2 + 4 >> 2];
              c[a2 + 112 + 8 >> 2] = c[l2 + 8 >> 2];
              c[a2 + 112 + 12 >> 2] = c[l2 + 12 >> 2];
              l2 = b2 + 336 | 0;
              c[a2 + 176 >> 2] = c[l2 >> 2];
              c[a2 + 176 + 4 >> 2] = c[l2 + 4 >> 2];
              c[a2 + 176 + 8 >> 2] = c[l2 + 8 >> 2];
              c[a2 + 176 + 12 >> 2] = c[l2 + 12 >> 2];
              l2 = b2 + 352 | 0;
              c[a2 + 192 >> 2] = c[l2 >> 2];
              c[a2 + 192 + 4 >> 2] = c[l2 + 4 >> 2];
              c[a2 + 192 + 8 >> 2] = c[l2 + 8 >> 2];
              c[a2 + 192 + 12 >> 2] = c[l2 + 12 >> 2];
              i2 = +g[e2 >> 2];
              j2 = i2 * +g[b2 + 440 >> 2] * d2;
              k2 = i2 * +g[b2 + 444 >> 2] * d2;
              g[a2 + 208 >> 2] = i2 * +g[b2 + 436 >> 2] * d2;
              g[a2 + 212 >> 2] = j2;
              g[a2 + 216 >> 2] = k2;
              g[a2 + 220 >> 2] = 0;
              k2 = +g[b2 + 452 >> 2];
              j2 = +g[b2 + 456 >> 2];
              i2 = +g[b2 + 460 >> 2];
              h2 = (k2 * +g[b2 + 292 >> 2] + j2 * +g[b2 + 308 >> 2] + i2 * +g[b2 + 324 >> 2]) * d2;
              f2 = (k2 * +g[b2 + 296 >> 2] + j2 * +g[b2 + 312 >> 2] + i2 * +g[b2 + 328 >> 2]) * d2;
              g[a2 + 224 >> 2] = (+g[b2 + 288 >> 2] * k2 + +g[b2 + 304 >> 2] * j2 + +g[b2 + 320 >> 2] * i2) * d2;
              g[a2 + 228 >> 2] = h2;
              g[a2 + 232 >> 2] = f2;
              a2 = a2 + 236 | 0;
              g[a2 >> 2] = 0;
              return;
            }
          }
          function fq(b2, d2, e2, f2, h2, i2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            h2 = h2 | 0;
            i2 = i2 | 0;
            var j2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0;
            D2 = c[b2 + 88 >> 2] | 0;
            if ((D2 | 0) == (c[b2 + 92 >> 2] | 0) ? (o2 = D2 | 0 ? D2 << 1 : 1, (D2 | 0) < (o2 | 0)) : 0) {
              if (!o2) {
                j2 = 0;
                l2 = D2;
              } else {
                c[5637] = (c[5637] | 0) + 1;
                j2 = qG((o2 * 152 | 3) + 16 | 0) | 0;
                if (!j2)
                  j2 = 0;
                else {
                  c[(j2 + 4 + 15 & -16) + -4 >> 2] = j2;
                  j2 = j2 + 4 + 15 & -16;
                }
                l2 = c[b2 + 88 >> 2] | 0;
              }
              if ((l2 | 0) > 0) {
                m2 = 0;
                do {
                  bH(j2 + (m2 * 152 | 0) | 0, (c[b2 + 96 >> 2] | 0) + (m2 * 152 | 0) | 0, 152) | 0;
                  m2 = m2 + 1 | 0;
                } while ((m2 | 0) != (l2 | 0));
              }
              l2 = c[b2 + 96 >> 2] | 0;
              if (l2 | 0) {
                if (a[b2 + 100 >> 0] | 0) {
                  c[5638] = (c[5638] | 0) + 1;
                  rG(c[l2 + -4 >> 2] | 0);
                }
                c[b2 + 96 >> 2] = 0;
              }
              a[b2 + 100 >> 0] = 1;
              c[b2 + 96 >> 2] = j2;
              c[b2 + 92 >> 2] = o2;
              j2 = c[b2 + 88 >> 2] | 0;
            } else
              j2 = D2;
            c[b2 + 88 >> 2] = j2 + 1;
            C2 = c[b2 + 96 >> 2] | 0;
            c[C2 + (D2 * 152 | 0) + 140 >> 2] = h2;
            c[C2 + (D2 * 152 | 0) + 16 >> 2] = 0;
            c[C2 + (D2 * 152 | 0) + 16 + 4 >> 2] = 0;
            c[C2 + (D2 * 152 | 0) + 16 + 8 >> 2] = 0;
            c[C2 + (D2 * 152 | 0) + 16 + 12 >> 2] = 0;
            g[C2 + (D2 * 152 | 0) + 48 >> 2] = -0;
            g[C2 + (D2 * 152 | 0) + 52 >> 2] = -0;
            g[C2 + (D2 * 152 | 0) + 56 >> 2] = -0;
            g[C2 + (D2 * 152 | 0) + 60 >> 2] = 0;
            b2 = c[b2 + 16 >> 2] | 0;
            o2 = c[b2 + (e2 * 244 | 0) + 240 >> 2] | 0;
            B2 = c[b2 + (f2 * 244 | 0) + 240 >> 2] | 0;
            c[C2 + (D2 * 152 | 0) + 144 >> 2] = e2;
            c[C2 + (D2 * 152 | 0) + 148 >> 2] = f2;
            h2 = c[i2 + 88 >> 2] | 0;
            c[C2 + (D2 * 152 | 0) + 104 >> 2] = h2;
            c[C2 + (D2 * 152 | 0) + 132 >> 2] = 0;
            g[C2 + (D2 * 152 | 0) + 100 >> 2] = 0;
            g[C2 + (D2 * 152 | 0) + 96 >> 2] = 0;
            x2 = -+g[d2 >> 2];
            y2 = -+g[d2 + 4 >> 2];
            z2 = -+g[d2 + 8 >> 2];
            g[C2 + (D2 * 152 | 0) >> 2] = x2;
            g[C2 + (D2 * 152 | 0) + 4 >> 2] = y2;
            g[C2 + (D2 * 152 | 0) + 8 >> 2] = z2;
            g[C2 + (D2 * 152 | 0) + 12 >> 2] = 0;
            A2 = (c[k >> 2] = h2, +g[k >> 2]);
            if (o2 | 0) {
              j2 = (g[k >> 2] = (+g[o2 + 288 >> 2] * x2 + +g[o2 + 292 >> 2] * y2 + +g[o2 + 296 >> 2] * z2) * +g[o2 + 568 >> 2], c[k >> 2] | 0);
              l2 = (g[k >> 2] = (+g[o2 + 304 >> 2] * x2 + +g[o2 + 308 >> 2] * y2 + +g[o2 + 312 >> 2] * z2) * +g[o2 + 572 >> 2], c[k >> 2] | 0);
              m2 = (g[k >> 2] = (+g[o2 + 320 >> 2] * x2 + +g[o2 + 324 >> 2] * y2 + +g[o2 + 328 >> 2] * z2) * +g[o2 + 576 >> 2], c[k >> 2] | 0);
            } else {
              j2 = 0;
              l2 = 0;
              m2 = 0;
            }
            c[C2 + (D2 * 152 | 0) + 64 >> 2] = j2;
            c[C2 + (D2 * 152 | 0) + 68 >> 2] = l2;
            c[C2 + (D2 * 152 | 0) + 72 >> 2] = m2;
            g[C2 + (D2 * 152 | 0) + 76 >> 2] = 0;
            u2 = +g[d2 >> 2];
            v2 = +g[d2 + 4 >> 2];
            w2 = +g[d2 + 8 >> 2];
            d2 = c[d2 + 12 >> 2] | 0;
            g[C2 + (D2 * 152 | 0) + 32 >> 2] = u2;
            g[C2 + (D2 * 152 | 0) + 36 >> 2] = v2;
            g[C2 + (D2 * 152 | 0) + 40 >> 2] = w2;
            c[C2 + (D2 * 152 | 0) + 44 >> 2] = d2;
            if (B2 | 0) {
              j2 = (g[k >> 2] = (u2 * +g[B2 + 288 >> 2] + v2 * +g[B2 + 292 >> 2] + w2 * +g[B2 + 296 >> 2]) * +g[B2 + 568 >> 2], c[k >> 2] | 0);
              l2 = (g[k >> 2] = (u2 * +g[B2 + 304 >> 2] + v2 * +g[B2 + 308 >> 2] + w2 * +g[B2 + 312 >> 2]) * +g[B2 + 572 >> 2], c[k >> 2] | 0);
              m2 = (g[k >> 2] = (u2 * +g[B2 + 320 >> 2] + v2 * +g[B2 + 324 >> 2] + w2 * +g[B2 + 328 >> 2]) * +g[B2 + 576 >> 2], c[k >> 2] | 0);
            } else {
              j2 = 0;
              l2 = 0;
              m2 = 0;
            }
            c[C2 + (D2 * 152 | 0) + 80 >> 2] = j2;
            c[C2 + (D2 * 152 | 0) + 84 >> 2] = l2;
            c[C2 + (D2 * 152 | 0) + 88 >> 2] = m2;
            g[C2 + (D2 * 152 | 0) + 92 >> 2] = 0;
            if (o2 | 0) {
              n2 = +g[o2 + 288 >> 2] * x2 + +g[o2 + 292 >> 2] * y2 + +g[o2 + 296 >> 2] * z2;
              p2 = +g[o2 + 304 >> 2] * x2 + +g[o2 + 308 >> 2] * y2 + +g[o2 + 312 >> 2] * z2;
              q2 = +g[o2 + 320 >> 2] * x2 + +g[o2 + 324 >> 2] * y2 + +g[o2 + 328 >> 2] * z2;
            } else {
              n2 = 0;
              p2 = 0;
              q2 = 0;
            }
            if (B2 | 0) {
              r2 = +g[B2 + 288 >> 2] * u2 + +g[B2 + 292 >> 2] * v2 + +g[B2 + 296 >> 2] * w2;
              s2 = u2 * +g[B2 + 304 >> 2] + v2 * +g[B2 + 308 >> 2] + w2 * +g[B2 + 312 >> 2];
              t2 = u2 * +g[B2 + 320 >> 2] + v2 * +g[B2 + 324 >> 2] + w2 * +g[B2 + 328 >> 2];
            } else {
              r2 = 0;
              s2 = 0;
              t2 = 0;
            }
            s2 = 1 / (n2 * x2 + p2 * y2 + q2 * z2 + 0 + (r2 * u2 + s2 * v2 + t2 * w2));
            g[C2 + (D2 * 152 | 0) + 108 >> 2] = s2;
            if (o2 | 0) {
              p2 = +g[b2 + (e2 * 244 | 0) + 192 >> 2];
              q2 = +g[b2 + (e2 * 244 | 0) + 196 >> 2];
              r2 = +g[b2 + (e2 * 244 | 0) + 200 >> 2];
              n2 = (+g[b2 + (e2 * 244 | 0) + 176 >> 2] + +g[b2 + (e2 * 244 | 0) + 208 >> 2]) * 0 + (+g[b2 + (e2 * 244 | 0) + 180 >> 2] + +g[b2 + (e2 * 244 | 0) + 212 >> 2]) * 0 + (+g[b2 + (e2 * 244 | 0) + 184 >> 2] + +g[b2 + (e2 * 244 | 0) + 216 >> 2]) * 0;
            } else {
              p2 = 0;
              q2 = 0;
              r2 = 0;
              n2 = 0;
            }
            n2 = n2 + (p2 * x2 + q2 * y2 + r2 * z2);
            if (!B2) {
              t2 = 0;
              x2 = 0;
              z2 = 0;
              y2 = -0;
              u2 = t2 * u2;
              x2 = x2 * v2;
              x2 = u2 + x2;
              z2 = z2 * w2;
              z2 = x2 + z2;
              z2 = y2 + z2;
              z2 = n2 + z2;
              z2 = 0 - z2;
              z2 = s2 * z2;
              f2 = C2 + (D2 * 152 | 0) + 112 | 0;
              g[f2 >> 2] = z2;
              f2 = C2 + (D2 * 152 | 0) + 116 | 0;
              g[f2 >> 2] = 0;
              A2 = -A2;
              f2 = C2 + (D2 * 152 | 0) + 120 | 0;
              g[f2 >> 2] = A2;
              f2 = C2 + (D2 * 152 | 0) + 124 | 0;
              c[f2 >> 2] = h2;
              return;
            }
            t2 = +g[b2 + (f2 * 244 | 0) + 192 >> 2];
            x2 = +g[b2 + (f2 * 244 | 0) + 196 >> 2];
            z2 = +g[b2 + (f2 * 244 | 0) + 200 >> 2];
            y2 = (+g[b2 + (f2 * 244 | 0) + 176 >> 2] + +g[b2 + (f2 * 244 | 0) + 208 >> 2]) * -0 + (+g[b2 + (f2 * 244 | 0) + 180 >> 2] + +g[b2 + (f2 * 244 | 0) + 212 >> 2]) * -0 + (+g[b2 + (f2 * 244 | 0) + 184 >> 2] + +g[b2 + (f2 * 244 | 0) + 216 >> 2]) * -0;
            u2 = t2 * u2;
            x2 = x2 * v2;
            x2 = u2 + x2;
            z2 = z2 * w2;
            z2 = x2 + z2;
            z2 = y2 + z2;
            z2 = n2 + z2;
            z2 = 0 - z2;
            z2 = s2 * z2;
            f2 = C2 + (D2 * 152 | 0) + 112 | 0;
            g[f2 >> 2] = z2;
            f2 = C2 + (D2 * 152 | 0) + 116 | 0;
            g[f2 >> 2] = 0;
            A2 = -A2;
            f2 = C2 + (D2 * 152 | 0) + 120 | 0;
            g[f2 >> 2] = A2;
            f2 = C2 + (D2 * 152 | 0) + 124 | 0;
            c[f2 >> 2] = h2;
            return;
          }
          function gq(b2, d2, e2, f2, h2, i2, j2, l2, m2, n2, o2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            h2 = h2 | 0;
            i2 = i2 | 0;
            j2 = j2 | 0;
            l2 = l2 | 0;
            m2 = +m2;
            n2 = +n2;
            o2 = +o2;
            var p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0, N2 = 0, O2 = 0, P2 = 0, Q2 = 0, R2 = 0;
            N2 = c[b2 + 68 >> 2] | 0;
            if ((N2 | 0) == (c[b2 + 72 >> 2] | 0) ? (t2 = N2 | 0 ? N2 << 1 : 1, (N2 | 0) < (t2 | 0)) : 0) {
              if (!t2) {
                p2 = 0;
                q2 = N2;
              } else {
                c[5637] = (c[5637] | 0) + 1;
                p2 = qG((t2 * 152 | 3) + 16 | 0) | 0;
                if (!p2)
                  p2 = 0;
                else {
                  c[(p2 + 4 + 15 & -16) + -4 >> 2] = p2;
                  p2 = p2 + 4 + 15 & -16;
                }
                q2 = c[b2 + 68 >> 2] | 0;
              }
              if ((q2 | 0) > 0) {
                r2 = 0;
                do {
                  bH(p2 + (r2 * 152 | 0) | 0, (c[b2 + 76 >> 2] | 0) + (r2 * 152 | 0) | 0, 152) | 0;
                  r2 = r2 + 1 | 0;
                } while ((r2 | 0) != (q2 | 0));
              }
              q2 = c[b2 + 76 >> 2] | 0;
              if (q2 | 0) {
                if (a[b2 + 80 >> 0] | 0) {
                  c[5638] = (c[5638] | 0) + 1;
                  rG(c[q2 + -4 >> 2] | 0);
                }
                c[b2 + 76 >> 2] = 0;
              }
              a[b2 + 80 >> 0] = 1;
              c[b2 + 76 >> 2] = p2;
              c[b2 + 72 >> 2] = t2;
              p2 = c[b2 + 68 >> 2] | 0;
            } else
              p2 = N2;
            c[b2 + 68 >> 2] = p2 + 1;
            M2 = c[b2 + 76 >> 2] | 0;
            c[M2 + (N2 * 152 | 0) + 140 >> 2] = h2;
            r2 = c[b2 + 16 >> 2] | 0;
            p2 = c[r2 + (e2 * 244 | 0) + 240 >> 2] | 0;
            t2 = c[r2 + (f2 * 244 | 0) + 240 >> 2] | 0;
            c[M2 + (N2 * 152 | 0) + 144 >> 2] = e2;
            c[M2 + (N2 * 152 | 0) + 148 >> 2] = f2;
            q2 = c[i2 + 84 >> 2] | 0;
            c[M2 + (N2 * 152 | 0) + 104 >> 2] = q2;
            c[M2 + (N2 * 152 | 0) + 132 >> 2] = 0;
            g[M2 + (N2 * 152 | 0) + 100 >> 2] = 0;
            g[M2 + (N2 * 152 | 0) + 96 >> 2] = 0;
            L2 = (c[k >> 2] = q2, +g[k >> 2]);
            if (p2 | 0) {
              c[M2 + (N2 * 152 | 0) + 16 >> 2] = c[d2 >> 2];
              c[M2 + (N2 * 152 | 0) + 16 + 4 >> 2] = c[d2 + 4 >> 2];
              c[M2 + (N2 * 152 | 0) + 16 + 8 >> 2] = c[d2 + 8 >> 2];
              c[M2 + (N2 * 152 | 0) + 16 + 12 >> 2] = c[d2 + 12 >> 2];
              K2 = +g[j2 + 4 >> 2];
              D2 = +g[M2 + (N2 * 152 | 0) + 24 >> 2];
              H2 = +g[j2 + 8 >> 2];
              I2 = +g[M2 + (N2 * 152 | 0) + 20 >> 2];
              E2 = +g[M2 + (N2 * 152 | 0) + 16 >> 2];
              J2 = +g[j2 >> 2];
              g[M2 + (N2 * 152 | 0) >> 2] = K2 * D2 - H2 * I2;
              g[M2 + (N2 * 152 | 0) + 4 >> 2] = H2 * E2 - D2 * J2;
              g[M2 + (N2 * 152 | 0) + 8 >> 2] = I2 * J2 - K2 * E2;
              g[M2 + (N2 * 152 | 0) + 12 >> 2] = 0;
              v2 = ((K2 * D2 - H2 * I2) * +g[p2 + 288 >> 2] + (H2 * E2 - D2 * J2) * +g[p2 + 292 >> 2] + (I2 * J2 - K2 * E2) * +g[p2 + 296 >> 2]) * +g[p2 + 568 >> 2];
              s2 = ((K2 * D2 - H2 * I2) * +g[p2 + 304 >> 2] + (H2 * E2 - D2 * J2) * +g[p2 + 308 >> 2] + (I2 * J2 - K2 * E2) * +g[p2 + 312 >> 2]) * +g[p2 + 572 >> 2];
              u2 = ((K2 * D2 - H2 * I2) * +g[p2 + 320 >> 2] + (H2 * E2 - D2 * J2) * +g[p2 + 324 >> 2] + (I2 * J2 - K2 * E2) * +g[p2 + 328 >> 2]) * +g[p2 + 576 >> 2];
              g[M2 + (N2 * 152 | 0) + 64 >> 2] = v2;
              g[M2 + (N2 * 152 | 0) + 68 >> 2] = s2;
              g[M2 + (N2 * 152 | 0) + 72 >> 2] = u2;
              g[M2 + (N2 * 152 | 0) + 76 >> 2] = 0;
              z2 = E2;
              A2 = I2;
              B2 = D2;
              C2 = K2 * D2 - H2 * I2;
              D2 = H2 * E2 - D2 * J2;
              E2 = I2 * J2 - K2 * E2;
            } else {
              c[M2 + (N2 * 152 | 0) + 64 >> 2] = 0;
              c[M2 + (N2 * 152 | 0) + 64 + 4 >> 2] = 0;
              c[M2 + (N2 * 152 | 0) + 64 + 8 >> 2] = 0;
              c[M2 + (N2 * 152 | 0) + 64 + 12 >> 2] = 0;
              c[M2 + (N2 * 152 | 0) >> 2] = 0;
              c[M2 + (N2 * 152 | 0) + 4 >> 2] = 0;
              c[M2 + (N2 * 152 | 0) + 8 >> 2] = 0;
              c[M2 + (N2 * 152 | 0) + 12 >> 2] = 0;
              c[M2 + (N2 * 152 | 0) + 16 >> 2] = 0;
              c[M2 + (N2 * 152 | 0) + 20 >> 2] = 0;
              c[M2 + (N2 * 152 | 0) + 24 >> 2] = 0;
              c[M2 + (N2 * 152 | 0) + 28 >> 2] = 0;
              s2 = 0;
              u2 = 0;
              v2 = 0;
              z2 = 0;
              A2 = 0;
              B2 = 0;
              C2 = 0;
              D2 = 0;
              E2 = 0;
            }
            if (t2 | 0) {
              K2 = -+g[d2 >> 2];
              P2 = -+g[d2 + 4 >> 2];
              J2 = -+g[d2 + 8 >> 2];
              g[M2 + (N2 * 152 | 0) + 48 >> 2] = K2;
              g[M2 + (N2 * 152 | 0) + 52 >> 2] = P2;
              g[M2 + (N2 * 152 | 0) + 56 >> 2] = J2;
              g[M2 + (N2 * 152 | 0) + 60 >> 2] = 0;
              O2 = +g[l2 + 4 >> 2];
              R2 = +g[l2 + 8 >> 2];
              Q2 = +g[l2 >> 2];
              g[M2 + (N2 * 152 | 0) + 32 >> 2] = O2 * J2 - R2 * P2;
              g[M2 + (N2 * 152 | 0) + 36 >> 2] = R2 * K2 - Q2 * J2;
              g[M2 + (N2 * 152 | 0) + 40 >> 2] = Q2 * P2 - O2 * K2;
              g[M2 + (N2 * 152 | 0) + 44 >> 2] = 0;
              w2 = ((O2 * J2 - R2 * P2) * +g[t2 + 288 >> 2] + (R2 * K2 - Q2 * J2) * +g[t2 + 292 >> 2] + (Q2 * P2 - O2 * K2) * +g[t2 + 296 >> 2]) * +g[t2 + 568 >> 2];
              x2 = ((O2 * J2 - R2 * P2) * +g[t2 + 304 >> 2] + (R2 * K2 - Q2 * J2) * +g[t2 + 308 >> 2] + (Q2 * P2 - O2 * K2) * +g[t2 + 312 >> 2]) * +g[t2 + 572 >> 2];
              y2 = ((O2 * J2 - R2 * P2) * +g[t2 + 320 >> 2] + (R2 * K2 - Q2 * J2) * +g[t2 + 324 >> 2] + (Q2 * P2 - O2 * K2) * +g[t2 + 328 >> 2]) * +g[t2 + 576 >> 2];
              g[M2 + (N2 * 152 | 0) + 80 >> 2] = w2;
              g[M2 + (N2 * 152 | 0) + 84 >> 2] = x2;
              g[M2 + (N2 * 152 | 0) + 88 >> 2] = y2;
              g[M2 + (N2 * 152 | 0) + 92 >> 2] = 0;
              F2 = K2;
              G2 = P2;
              H2 = J2;
              I2 = O2 * J2 - R2 * P2;
              J2 = R2 * K2 - Q2 * J2;
              K2 = Q2 * P2 - O2 * K2;
            } else {
              c[M2 + (N2 * 152 | 0) + 80 >> 2] = 0;
              c[M2 + (N2 * 152 | 0) + 80 + 4 >> 2] = 0;
              c[M2 + (N2 * 152 | 0) + 80 + 8 >> 2] = 0;
              c[M2 + (N2 * 152 | 0) + 80 + 12 >> 2] = 0;
              c[M2 + (N2 * 152 | 0) + 32 >> 2] = 0;
              c[M2 + (N2 * 152 | 0) + 32 + 4 >> 2] = 0;
              c[M2 + (N2 * 152 | 0) + 32 + 8 >> 2] = 0;
              c[M2 + (N2 * 152 | 0) + 32 + 12 >> 2] = 0;
              c[M2 + (N2 * 152 | 0) + 32 + 16 >> 2] = 0;
              c[M2 + (N2 * 152 | 0) + 32 + 20 >> 2] = 0;
              c[M2 + (N2 * 152 | 0) + 32 + 24 >> 2] = 0;
              c[M2 + (N2 * 152 | 0) + 32 + 28 >> 2] = 0;
              w2 = 0;
              x2 = 0;
              y2 = 0;
              F2 = 0;
              G2 = 0;
              H2 = 0;
              I2 = 0;
              J2 = 0;
              K2 = 0;
            }
            if (p2 | 0) {
              P2 = +g[j2 + 8 >> 2];
              Q2 = +g[j2 + 4 >> 2];
              R2 = +g[j2 >> 2];
              u2 = +g[p2 + 368 >> 2] + ((s2 * P2 - u2 * Q2) * +g[d2 >> 2] + (u2 * R2 - P2 * v2) * +g[d2 + 4 >> 2] + (Q2 * v2 - s2 * R2) * +g[d2 + 8 >> 2]);
            } else
              u2 = 0;
            if (t2 | 0) {
              Q2 = -w2;
              s2 = -x2;
              y2 = -y2;
              O2 = +g[l2 + 8 >> 2];
              P2 = +g[l2 + 4 >> 2];
              R2 = +g[l2 >> 2];
              s2 = +g[t2 + 368 >> 2] + ((O2 * s2 - P2 * y2) * +g[d2 >> 2] + (R2 * y2 - O2 * Q2) * +g[d2 + 4 >> 2] + (P2 * Q2 - R2 * s2) * +g[d2 + 8 >> 2]);
            } else
              s2 = 0;
            x2 = m2 / (u2 + s2);
            g[M2 + (N2 * 152 | 0) + 108 >> 2] = x2;
            if (p2 | 0) {
              u2 = +g[r2 + (e2 * 244 | 0) + 192 >> 2];
              v2 = +g[r2 + (e2 * 244 | 0) + 196 >> 2];
              w2 = +g[r2 + (e2 * 244 | 0) + 200 >> 2];
              s2 = (+g[r2 + (e2 * 244 | 0) + 176 >> 2] + +g[r2 + (e2 * 244 | 0) + 208 >> 2]) * z2 + (+g[r2 + (e2 * 244 | 0) + 180 >> 2] + +g[r2 + (e2 * 244 | 0) + 212 >> 2]) * A2 + (+g[r2 + (e2 * 244 | 0) + 184 >> 2] + +g[r2 + (e2 * 244 | 0) + 216 >> 2]) * B2;
            } else {
              u2 = 0;
              v2 = 0;
              w2 = 0;
              s2 = z2 * 0 + A2 * 0 + B2 * 0;
            }
            s2 = s2 + (u2 * C2 + v2 * D2 + w2 * E2);
            if (t2 | 0) {
              O2 = +g[r2 + (f2 * 244 | 0) + 192 >> 2];
              P2 = +g[r2 + (f2 * 244 | 0) + 196 >> 2];
              R2 = +g[r2 + (f2 * 244 | 0) + 200 >> 2];
              Q2 = (+g[r2 + (f2 * 244 | 0) + 176 >> 2] + +g[r2 + (f2 * 244 | 0) + 208 >> 2]) * F2 + (+g[r2 + (f2 * 244 | 0) + 180 >> 2] + +g[r2 + (f2 * 244 | 0) + 212 >> 2]) * G2 + (+g[r2 + (f2 * 244 | 0) + 184 >> 2] + +g[r2 + (f2 * 244 | 0) + 216 >> 2]) * H2;
              O2 = O2 * I2;
              P2 = P2 * J2;
              P2 = O2 + P2;
              R2 = R2 * K2;
              R2 = P2 + R2;
              R2 = Q2 + R2;
              R2 = s2 + R2;
              R2 = n2 - R2;
              R2 = x2 * R2;
              f2 = M2 + (N2 * 152 | 0) + 112 | 0;
              g[f2 >> 2] = R2;
              f2 = M2 + (N2 * 152 | 0) + 128 | 0;
              g[f2 >> 2] = 0;
              f2 = M2 + (N2 * 152 | 0) + 116 | 0;
              g[f2 >> 2] = o2;
              R2 = -L2;
              f2 = M2 + (N2 * 152 | 0) + 120 | 0;
              g[f2 >> 2] = R2;
              f2 = M2 + (N2 * 152 | 0) + 124 | 0;
              c[f2 >> 2] = q2;
              return;
            } else {
              O2 = 0;
              P2 = 0;
              R2 = 0;
              Q2 = F2 * 0 + G2 * 0 + H2 * 0;
              O2 = O2 * I2;
              P2 = P2 * J2;
              P2 = O2 + P2;
              R2 = R2 * K2;
              R2 = P2 + R2;
              R2 = Q2 + R2;
              R2 = s2 + R2;
              R2 = n2 - R2;
              R2 = x2 * R2;
              f2 = M2 + (N2 * 152 | 0) + 112 | 0;
              g[f2 >> 2] = R2;
              f2 = M2 + (N2 * 152 | 0) + 128 | 0;
              g[f2 >> 2] = 0;
              f2 = M2 + (N2 * 152 | 0) + 116 | 0;
              g[f2 >> 2] = o2;
              R2 = -L2;
              f2 = M2 + (N2 * 152 | 0) + 120 | 0;
              g[f2 >> 2] = R2;
              f2 = M2 + (N2 * 152 | 0) + 124 | 0;
              c[f2 >> 2] = q2;
              return;
            }
          }
          function hq(a2, b2, d2, e2, f2, g2, h2, i2, j2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            g2 = g2 | 0;
            h2 = h2 | 0;
            i2 = i2 | 0;
            j2 = j2 | 0;
            if (!(c[i2 + 44 >> 2] | 0))
              return;
            b2 = c[i2 + 20 >> 2] | 0;
            if (!(c[i2 + 64 >> 2] & 256)) {
              if ((b2 | 0) <= 0)
                return;
              j2 = 0;
              do {
                g2 = c[a2 + 28 >> 2] | 0;
                if ((g2 | 0) > 0) {
                  b2 = 0;
                  do {
                    f2 = c[(c[a2 + 116 >> 2] | 0) + (b2 << 2) >> 2] | 0;
                    h2 = c[a2 + 36 >> 2] | 0;
                    d2 = c[a2 + 16 >> 2] | 0;
                    iq(d2 + ((c[h2 + (f2 * 152 | 0) + 144 >> 2] | 0) * 244 | 0) | 0, d2 + ((c[h2 + (f2 * 152 | 0) + 148 >> 2] | 0) * 244 | 0) | 0, h2 + (f2 * 152 | 0) | 0);
                    b2 = b2 + 1 | 0;
                  } while ((b2 | 0) != (g2 | 0));
                  b2 = c[i2 + 20 >> 2] | 0;
                }
                j2 = j2 + 1 | 0;
              } while ((j2 | 0) < (b2 | 0));
              return;
            } else {
              if ((b2 | 0) <= 0)
                return;
              j2 = 0;
              do {
                g2 = c[a2 + 28 >> 2] | 0;
                if ((g2 | 0) > 0) {
                  b2 = 0;
                  do {
                    f2 = c[(c[a2 + 116 >> 2] | 0) + (b2 << 2) >> 2] | 0;
                    h2 = c[a2 + 36 >> 2] | 0;
                    d2 = c[a2 + 16 >> 2] | 0;
                    iq(d2 + ((c[h2 + (f2 * 152 | 0) + 144 >> 2] | 0) * 244 | 0) | 0, d2 + ((c[h2 + (f2 * 152 | 0) + 148 >> 2] | 0) * 244 | 0) | 0, h2 + (f2 * 152 | 0) | 0);
                    b2 = b2 + 1 | 0;
                  } while ((b2 | 0) != (g2 | 0));
                  b2 = c[i2 + 20 >> 2] | 0;
                }
                j2 = j2 + 1 | 0;
              } while ((j2 | 0) < (b2 | 0));
              return;
            }
          }
          function iq(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0;
            e2 = +g[d2 + 128 >> 2];
            if (!(e2 != 0))
              return;
            c[5314] = (c[5314] | 0) + 1;
            k2 = +g[d2 + 96 >> 2];
            f2 = +g[d2 + 16 >> 2];
            h2 = +g[d2 + 20 >> 2];
            i2 = +g[d2 + 24 >> 2];
            j2 = +g[d2 + 108 >> 2];
            j2 = e2 - k2 * +g[d2 + 116 >> 2] - (f2 * +g[a2 + 144 >> 2] + h2 * +g[a2 + 148 >> 2] + i2 * +g[a2 + 152 >> 2] + (+g[d2 >> 2] * +g[a2 + 160 >> 2] + +g[d2 + 4 >> 2] * +g[a2 + 164 >> 2] + +g[d2 + 8 >> 2] * +g[a2 + 168 >> 2])) * j2 - j2 * (+g[d2 + 48 >> 2] * +g[b2 + 144 >> 2] + +g[d2 + 52 >> 2] * +g[b2 + 148 >> 2] + +g[d2 + 56 >> 2] * +g[b2 + 152 >> 2] + (+g[d2 + 32 >> 2] * +g[b2 + 160 >> 2] + +g[d2 + 36 >> 2] * +g[b2 + 164 >> 2] + +g[d2 + 40 >> 2] * +g[b2 + 168 >> 2]));
            l2 = +g[d2 + 120 >> 2];
            e2 = k2 + j2 < l2 ? l2 - k2 : j2;
            g[d2 + 96 >> 2] = k2 + j2 < l2 ? l2 : k2 + j2;
            if (c[a2 + 240 >> 2] | 0) {
              l2 = e2 * (h2 * +g[a2 + 132 >> 2]) * +g[a2 + 116 >> 2];
              k2 = e2 * (i2 * +g[a2 + 136 >> 2]) * +g[a2 + 120 >> 2];
              g[a2 + 144 >> 2] = +g[a2 + 112 >> 2] * (e2 * (f2 * +g[a2 + 128 >> 2])) + +g[a2 + 144 >> 2];
              g[a2 + 148 >> 2] = l2 + +g[a2 + 148 >> 2];
              g[a2 + 152 >> 2] = k2 + +g[a2 + 152 >> 2];
              k2 = e2 * +g[a2 + 100 >> 2] * +g[d2 + 68 >> 2];
              l2 = e2 * +g[a2 + 104 >> 2] * +g[d2 + 72 >> 2];
              g[a2 + 160 >> 2] = e2 * +g[a2 + 96 >> 2] * +g[d2 + 64 >> 2] + +g[a2 + 160 >> 2];
              g[a2 + 164 >> 2] = k2 + +g[a2 + 164 >> 2];
              g[a2 + 168 >> 2] = l2 + +g[a2 + 168 >> 2];
            }
            if (!(c[b2 + 240 >> 2] | 0))
              return;
            l2 = e2 * (+g[d2 + 52 >> 2] * +g[b2 + 132 >> 2]) * +g[b2 + 116 >> 2];
            k2 = e2 * (+g[d2 + 56 >> 2] * +g[b2 + 136 >> 2]) * +g[b2 + 120 >> 2];
            g[b2 + 144 >> 2] = +g[b2 + 112 >> 2] * (e2 * (+g[d2 + 48 >> 2] * +g[b2 + 128 >> 2])) + +g[b2 + 144 >> 2];
            g[b2 + 148 >> 2] = l2 + +g[b2 + 148 >> 2];
            g[b2 + 152 >> 2] = k2 + +g[b2 + 152 >> 2];
            k2 = e2 * +g[b2 + 100 >> 2] * +g[d2 + 84 >> 2];
            l2 = e2 * +g[b2 + 104 >> 2] * +g[d2 + 88 >> 2];
            g[b2 + 160 >> 2] = e2 * +g[b2 + 96 >> 2] * +g[d2 + 80 >> 2] + +g[b2 + 160 >> 2];
            g[b2 + 164 >> 2] = k2 + +g[b2 + 164 >> 2];
            g[b2 + 168 >> 2] = l2 + +g[b2 + 168 >> 2];
            return;
          }
          function jq(b2, d2, e2, f2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            var h2 = 0, j2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0;
            r2 = i;
            i = i + 80 | 0;
            j2 = c[b2 + 28 >> 2] | 0;
            d2 = c[f2 + 64 >> 2] | 0;
            a:
              do
                if ((d2 & 4 | 0) != 0 & (j2 | 0) > 0) {
                  l2 = c[b2 + 36 >> 2] | 0;
                  h2 = c[b2 + 76 >> 2] | 0;
                  if (!(d2 & 16)) {
                    d2 = 0;
                    while (1) {
                      m2 = c[l2 + (d2 * 152 | 0) + 132 >> 2] | 0;
                      c[m2 + 120 >> 2] = c[l2 + (d2 * 152 | 0) + 100 >> 2];
                      c[m2 + 124 >> 2] = c[h2 + ((c[l2 + (d2 * 152 | 0) + 140 >> 2] | 0) * 152 | 0) + 100 >> 2];
                      d2 = d2 + 1 | 0;
                      if ((d2 | 0) == (j2 | 0))
                        break a;
                    }
                  } else {
                    e2 = h2;
                    d2 = 0;
                  }
                  while (1) {
                    m2 = c[l2 + (d2 * 152 | 0) + 132 >> 2] | 0;
                    c[m2 + 120 >> 2] = c[l2 + (d2 * 152 | 0) + 100 >> 2];
                    s2 = c[l2 + (d2 * 152 | 0) + 140 >> 2] | 0;
                    c[m2 + 124 >> 2] = c[h2 + (s2 * 152 | 0) + 100 >> 2];
                    c[m2 + 128 >> 2] = c[e2 + ((s2 + 1 | 0) * 152 | 0) + 100 >> 2];
                    d2 = d2 + 1 | 0;
                    if ((d2 | 0) == (j2 | 0))
                      break a;
                    e2 = c[b2 + 76 >> 2] | 0;
                  }
                }
              while (0);
            e2 = c[b2 + 48 >> 2] | 0;
            if ((e2 | 0) > 0) {
              m2 = 0;
              do {
                h2 = c[b2 + 56 >> 2] | 0;
                j2 = c[h2 + (m2 * 152 | 0) + 132 >> 2] | 0;
                l2 = c[j2 + 44 >> 2] | 0;
                d2 = h2 + (m2 * 152 | 0) + 100 | 0;
                if (l2 | 0) {
                  q2 = +g[d2 >> 2];
                  s2 = c[j2 + 28 >> 2] | 0;
                  p2 = 1 / +g[f2 + 12 >> 2];
                  o2 = q2 * +g[h2 + (m2 * 152 | 0) + 20 >> 2] * +g[s2 + 376 >> 2] * p2;
                  n2 = q2 * +g[h2 + (m2 * 152 | 0) + 24 >> 2] * +g[s2 + 380 >> 2] * p2;
                  g[l2 >> 2] = +g[l2 >> 2] + +g[h2 + (m2 * 152 | 0) + 16 >> 2] * q2 * +g[s2 + 372 >> 2] * p2;
                  g[l2 + 4 >> 2] = o2 + +g[l2 + 4 >> 2];
                  g[l2 + 8 >> 2] = n2 + +g[l2 + 8 >> 2];
                  n2 = +g[d2 >> 2];
                  s2 = c[j2 + 32 >> 2] | 0;
                  o2 = 1 / +g[f2 + 12 >> 2];
                  p2 = n2 * +g[h2 + (m2 * 152 | 0) + 52 >> 2] * +g[s2 + 376 >> 2] * o2;
                  q2 = n2 * +g[h2 + (m2 * 152 | 0) + 56 >> 2] * +g[s2 + 380 >> 2] * o2;
                  g[l2 + 32 >> 2] = +g[l2 + 32 >> 2] + +g[h2 + (m2 * 152 | 0) + 48 >> 2] * n2 * +g[s2 + 372 >> 2] * o2;
                  g[l2 + 36 >> 2] = p2 + +g[l2 + 36 >> 2];
                  g[l2 + 40 >> 2] = q2 + +g[l2 + 40 >> 2];
                  s2 = c[j2 + 28 >> 2] | 0;
                  q2 = +g[d2 >> 2];
                  p2 = 1 / +g[f2 + 12 >> 2];
                  o2 = +g[h2 + (m2 * 152 | 0) + 4 >> 2] * +g[s2 + 572 >> 2] * q2 * p2;
                  n2 = q2 * (+g[h2 + (m2 * 152 | 0) + 8 >> 2] * +g[s2 + 576 >> 2]) * p2;
                  g[l2 + 16 >> 2] = +g[l2 + 16 >> 2] + +g[h2 + (m2 * 152 | 0) >> 2] * +g[s2 + 568 >> 2] * q2 * p2;
                  g[l2 + 20 >> 2] = o2 + +g[l2 + 20 >> 2];
                  g[l2 + 24 >> 2] = n2 + +g[l2 + 24 >> 2];
                  s2 = c[j2 + 32 >> 2] | 0;
                  n2 = +g[d2 >> 2];
                  o2 = 1 / +g[f2 + 12 >> 2];
                  p2 = +g[h2 + (m2 * 152 | 0) + 36 >> 2] * +g[s2 + 572 >> 2] * n2 * o2;
                  q2 = n2 * (+g[h2 + (m2 * 152 | 0) + 40 >> 2] * +g[s2 + 576 >> 2]) * o2;
                  g[l2 + 48 >> 2] = +g[l2 + 48 >> 2] + +g[h2 + (m2 * 152 | 0) + 32 >> 2] * +g[s2 + 568 >> 2] * n2 * o2;
                  g[l2 + 52 >> 2] = p2 + +g[l2 + 52 >> 2];
                  g[l2 + 56 >> 2] = q2 + +g[l2 + 56 >> 2];
                }
                s2 = c[d2 >> 2] | 0;
                c[j2 + 36 >> 2] = s2;
                q2 = +N(+(c[k >> 2] = s2, +g[k >> 2]));
                if (q2 >= +g[j2 + 16 >> 2])
                  a[j2 + 20 >> 0] = 0;
                m2 = m2 + 1 | 0;
              } while ((m2 | 0) != (e2 | 0));
            }
            d2 = c[b2 + 8 >> 2] | 0;
            if ((d2 | 0) > 0) {
              l2 = 0;
              do {
                e2 = c[b2 + 16 >> 2] | 0;
                h2 = e2 + (l2 * 244 | 0) | 0;
                j2 = c[e2 + (l2 * 244 | 0) + 240 >> 2] | 0;
                if (j2) {
                  if (!(c[f2 + 44 >> 2] | 0)) {
                    h2 = e2 + (l2 * 244 | 0) + 176 | 0;
                    o2 = +g[e2 + (l2 * 244 | 0) + 64 >> 2] + +g[h2 >> 2];
                    g[h2 >> 2] = o2;
                    h2 = e2 + (l2 * 244 | 0) + 180 | 0;
                    p2 = +g[e2 + (l2 * 244 | 0) + 68 >> 2] + +g[h2 >> 2];
                    g[h2 >> 2] = p2;
                    h2 = e2 + (l2 * 244 | 0) + 184 | 0;
                    n2 = +g[e2 + (l2 * 244 | 0) + 72 >> 2] + +g[h2 >> 2];
                    g[h2 >> 2] = n2;
                    h2 = e2 + (l2 * 244 | 0) + 192 | 0;
                    g[h2 >> 2] = +g[e2 + (l2 * 244 | 0) + 80 >> 2] + +g[h2 >> 2];
                    h2 = e2 + (l2 * 244 | 0) + 196 | 0;
                    g[h2 >> 2] = +g[e2 + (l2 * 244 | 0) + 84 >> 2] + +g[h2 >> 2];
                    h2 = e2 + (l2 * 244 | 0) + 200 | 0;
                    g[h2 >> 2] = +g[e2 + (l2 * 244 | 0) + 88 >> 2] + +g[h2 >> 2];
                    h2 = e2;
                    d2 = j2;
                  } else {
                    o2 = +g[f2 + 12 >> 2];
                    p2 = +g[f2 + 52 >> 2];
                    s2 = e2 + (l2 * 244 | 0) + 176 | 0;
                    g[s2 >> 2] = +g[e2 + (l2 * 244 | 0) + 64 >> 2] + +g[s2 >> 2];
                    s2 = e2 + (l2 * 244 | 0) + 180 | 0;
                    g[s2 >> 2] = +g[e2 + (l2 * 244 | 0) + 68 >> 2] + +g[s2 >> 2];
                    s2 = e2 + (l2 * 244 | 0) + 184 | 0;
                    g[s2 >> 2] = +g[e2 + (l2 * 244 | 0) + 72 >> 2] + +g[s2 >> 2];
                    s2 = e2 + (l2 * 244 | 0) + 192 | 0;
                    g[s2 >> 2] = +g[e2 + (l2 * 244 | 0) + 80 >> 2] + +g[s2 >> 2];
                    s2 = e2 + (l2 * 244 | 0) + 196 | 0;
                    g[s2 >> 2] = +g[e2 + (l2 * 244 | 0) + 84 >> 2] + +g[s2 >> 2];
                    s2 = e2 + (l2 * 244 | 0) + 200 | 0;
                    g[s2 >> 2] = +g[e2 + (l2 * 244 | 0) + 88 >> 2] + +g[s2 >> 2];
                    q2 = +g[e2 + (l2 * 244 | 0) + 144 >> 2];
                    n2 = +g[e2 + (l2 * 244 | 0) + 148 >> 2];
                    if ((((!(q2 != 0 | n2 != 0) ? !(+g[e2 + (l2 * 244 | 0) + 152 >> 2] != 0) : 0) ? !(+g[e2 + (l2 * 244 | 0) + 160 >> 2] != 0) : 0) ? !(+g[e2 + (l2 * 244 | 0) + 164 >> 2] != 0) : 0) ? !(+g[e2 + (l2 * 244 | 0) + 168 >> 2] != 0) : 0)
                      d2 = j2;
                    else {
                      u2 = +g[e2 + (l2 * 244 | 0) + 164 >> 2] * p2;
                      t2 = +g[e2 + (l2 * 244 | 0) + 168 >> 2] * p2;
                      g[r2 >> 2] = +g[e2 + (l2 * 244 | 0) + 160 >> 2] * p2;
                      g[r2 + 4 >> 2] = u2;
                      g[r2 + 8 >> 2] = t2;
                      g[r2 + 12 >> 2] = 0;
                      xn(h2, q2, n2, +g[e2 + (l2 * 244 | 0) + 152 >> 2], r2, o2, r2 + 16 | 0);
                      c[h2 >> 2] = c[r2 + 16 >> 2];
                      c[h2 + 4 >> 2] = c[r2 + 16 + 4 >> 2];
                      c[h2 + 8 >> 2] = c[r2 + 16 + 8 >> 2];
                      c[h2 + 12 >> 2] = c[r2 + 16 + 12 >> 2];
                      d2 = e2 + (l2 * 244 | 0) + 16 | 0;
                      c[d2 >> 2] = c[r2 + 16 + 16 >> 2];
                      c[d2 + 4 >> 2] = c[r2 + 16 + 16 + 4 >> 2];
                      c[d2 + 8 >> 2] = c[r2 + 16 + 16 + 8 >> 2];
                      c[d2 + 12 >> 2] = c[r2 + 16 + 16 + 12 >> 2];
                      d2 = e2 + (l2 * 244 | 0) + 32 | 0;
                      c[d2 >> 2] = c[r2 + 16 + 32 >> 2];
                      c[d2 + 4 >> 2] = c[r2 + 16 + 32 + 4 >> 2];
                      c[d2 + 8 >> 2] = c[r2 + 16 + 32 + 8 >> 2];
                      c[d2 + 12 >> 2] = c[r2 + 16 + 32 + 12 >> 2];
                      d2 = e2 + (l2 * 244 | 0) + 48 | 0;
                      c[d2 >> 2] = c[r2 + 16 + 48 >> 2];
                      c[d2 + 4 >> 2] = c[r2 + 16 + 48 + 4 >> 2];
                      c[d2 + 8 >> 2] = c[r2 + 16 + 48 + 8 >> 2];
                      c[d2 + 12 >> 2] = c[r2 + 16 + 48 + 12 >> 2];
                      d2 = c[b2 + 16 >> 2] | 0;
                      e2 = d2;
                      d2 = c[d2 + (l2 * 244 | 0) + 240 >> 2] | 0;
                    }
                    h2 = e2;
                    o2 = +g[e2 + (l2 * 244 | 0) + 176 >> 2];
                    p2 = +g[e2 + (l2 * 244 | 0) + 180 >> 2];
                    n2 = +g[e2 + (l2 * 244 | 0) + 184 >> 2];
                  }
                  u2 = o2 + +g[h2 + (l2 * 244 | 0) + 208 >> 2];
                  t2 = p2 + +g[h2 + (l2 * 244 | 0) + 212 >> 2];
                  q2 = n2 + +g[h2 + (l2 * 244 | 0) + 216 >> 2];
                  m2 = d2 + 284 | 0;
                  c[m2 >> 2] = (c[m2 >> 2] | 0) + 1;
                  g[d2 + 336 >> 2] = u2;
                  g[d2 + 340 >> 2] = t2;
                  g[d2 + 344 >> 2] = q2;
                  g[d2 + 348 >> 2] = 0;
                  m2 = c[b2 + 16 >> 2] | 0;
                  s2 = c[m2 + (l2 * 244 | 0) + 240 >> 2] | 0;
                  q2 = +g[m2 + (l2 * 244 | 0) + 192 >> 2] + +g[m2 + (l2 * 244 | 0) + 224 >> 2];
                  t2 = +g[m2 + (l2 * 244 | 0) + 196 >> 2] + +g[m2 + (l2 * 244 | 0) + 228 >> 2];
                  u2 = +g[m2 + (l2 * 244 | 0) + 200 >> 2] + +g[m2 + (l2 * 244 | 0) + 232 >> 2];
                  c[s2 + 284 >> 2] = (c[s2 + 284 >> 2] | 0) + 1;
                  g[s2 + 352 >> 2] = q2;
                  g[s2 + 356 >> 2] = t2;
                  g[s2 + 360 >> 2] = u2;
                  g[s2 + 364 >> 2] = 0;
                  if (c[f2 + 44 >> 2] | 0) {
                    m2 = c[b2 + 16 >> 2] | 0;
                    s2 = c[m2 + (l2 * 244 | 0) + 240 >> 2] | 0;
                    j2 = m2 + (l2 * 244 | 0) | 0;
                    c[s2 + 284 >> 2] = (c[s2 + 284 >> 2] | 0) + 1;
                    c[s2 + 4 >> 2] = c[j2 >> 2];
                    c[s2 + 4 + 4 >> 2] = c[j2 + 4 >> 2];
                    c[s2 + 4 + 8 >> 2] = c[j2 + 8 >> 2];
                    c[s2 + 4 + 12 >> 2] = c[j2 + 12 >> 2];
                    j2 = m2 + (l2 * 244 | 0) + 16 | 0;
                    c[s2 + 20 >> 2] = c[j2 >> 2];
                    c[s2 + 20 + 4 >> 2] = c[j2 + 4 >> 2];
                    c[s2 + 20 + 8 >> 2] = c[j2 + 8 >> 2];
                    c[s2 + 20 + 12 >> 2] = c[j2 + 12 >> 2];
                    j2 = m2 + (l2 * 244 | 0) + 32 | 0;
                    c[s2 + 36 >> 2] = c[j2 >> 2];
                    c[s2 + 36 + 4 >> 2] = c[j2 + 4 >> 2];
                    c[s2 + 36 + 8 >> 2] = c[j2 + 8 >> 2];
                    c[s2 + 36 + 12 >> 2] = c[j2 + 12 >> 2];
                    m2 = m2 + (l2 * 244 | 0) + 48 | 0;
                    c[s2 + 52 >> 2] = c[m2 >> 2];
                    c[s2 + 52 + 4 >> 2] = c[m2 + 4 >> 2];
                    c[s2 + 52 + 8 >> 2] = c[m2 + 8 >> 2];
                    c[s2 + 52 + 12 >> 2] = c[m2 + 12 >> 2];
                  }
                  c[(c[(c[b2 + 16 >> 2] | 0) + (l2 * 244 | 0) + 240 >> 2] | 0) + 212 >> 2] = -1;
                  d2 = c[b2 + 8 >> 2] | 0;
                }
                l2 = l2 + 1 | 0;
              } while ((l2 | 0) < (d2 | 0));
            }
            if ((c[b2 + 28 >> 2] | 0) < 0 ? (c[b2 + 32 >> 2] | 0) < 0 : 0) {
              d2 = c[b2 + 36 >> 2] | 0;
              if (d2 | 0) {
                if (a[b2 + 40 >> 0] | 0) {
                  c[5638] = (c[5638] | 0) + 1;
                  rG(c[d2 + -4 >> 2] | 0);
                }
                c[b2 + 36 >> 2] = 0;
              }
              a[b2 + 40 >> 0] = 1;
              c[b2 + 36 >> 2] = 0;
              c[b2 + 32 >> 2] = 0;
            }
            c[b2 + 28 >> 2] = 0;
            if ((c[b2 + 48 >> 2] | 0) < 0 ? (c[b2 + 52 >> 2] | 0) < 0 : 0) {
              d2 = c[b2 + 56 >> 2] | 0;
              if (d2 | 0) {
                if (a[b2 + 60 >> 0] | 0) {
                  c[5638] = (c[5638] | 0) + 1;
                  rG(c[d2 + -4 >> 2] | 0);
                }
                c[b2 + 56 >> 2] = 0;
              }
              a[b2 + 60 >> 0] = 1;
              c[b2 + 56 >> 2] = 0;
              c[b2 + 52 >> 2] = 0;
            }
            c[b2 + 48 >> 2] = 0;
            if ((c[b2 + 68 >> 2] | 0) < 0 ? (c[b2 + 72 >> 2] | 0) < 0 : 0) {
              d2 = c[b2 + 76 >> 2] | 0;
              if (d2 | 0) {
                if (a[b2 + 80 >> 0] | 0) {
                  c[5638] = (c[5638] | 0) + 1;
                  rG(c[d2 + -4 >> 2] | 0);
                }
                c[b2 + 76 >> 2] = 0;
              }
              a[b2 + 80 >> 0] = 1;
              c[b2 + 76 >> 2] = 0;
              c[b2 + 72 >> 2] = 0;
            }
            c[b2 + 68 >> 2] = 0;
            if ((c[b2 + 88 >> 2] | 0) < 0 ? (c[b2 + 92 >> 2] | 0) < 0 : 0) {
              d2 = c[b2 + 96 >> 2] | 0;
              if (d2 | 0) {
                if (a[b2 + 100 >> 0] | 0) {
                  c[5638] = (c[5638] | 0) + 1;
                  rG(c[d2 + -4 >> 2] | 0);
                }
                c[b2 + 96 >> 2] = 0;
              }
              a[b2 + 100 >> 0] = 1;
              c[b2 + 96 >> 2] = 0;
              c[b2 + 92 >> 2] = 0;
            }
            c[b2 + 88 >> 2] = 0;
            if ((c[b2 + 8 >> 2] | 0) >= 0) {
              c[b2 + 8 >> 2] = 0;
              i = r2;
              return 0;
            }
            if ((c[b2 + 12 >> 2] | 0) >= 0) {
              c[b2 + 8 >> 2] = 0;
              i = r2;
              return 0;
            }
            d2 = c[b2 + 16 >> 2] | 0;
            if (d2 | 0) {
              if (a[b2 + 20 >> 0] | 0) {
                c[5638] = (c[5638] | 0) + 1;
                rG(c[d2 + -4 >> 2] | 0);
              }
              c[b2 + 16 >> 2] = 0;
            }
            a[b2 + 20 >> 0] = 1;
            c[b2 + 16 >> 2] = 0;
            c[b2 + 12 >> 2] = 0;
            c[b2 + 8 >> 2] = 0;
            i = r2;
            return 0;
          }
          function kq(b2, d2, e2, f2, h2, i2, j2, k2, l2, m2) {
            b2 = b2 | 0;
            d2 = d2 | 0;
            e2 = e2 | 0;
            f2 = f2 | 0;
            h2 = h2 | 0;
            i2 = i2 | 0;
            j2 = j2 | 0;
            k2 = k2 | 0;
            l2 = l2 | 0;
            m2 = m2 | 0;
            var n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0;
            o2 = c[b2 + 48 >> 2] | 0;
            q2 = c[b2 + 28 >> 2] | 0;
            r2 = c[b2 + 68 >> 2] | 0;
            if (c[l2 + 64 >> 2] & 1 | 0) {
              if ((o2 | 0) > 0) {
                f2 = c[b2 + 136 >> 2] | 0;
                m2 = c[b2 + 200 >> 2] | 0;
                p2 = 0;
                do {
                  h2 = f2 + (p2 << 2) | 0;
                  i2 = c[h2 >> 2] | 0;
                  p2 = p2 + 1 | 0;
                  m2 = (_(m2, 1664525) | 0) + 1013904223 | 0;
                  if (p2 >>> 0 < 65537) {
                    e2 = m2 >>> 16 ^ m2;
                    if (p2 >>> 0 < 257)
                      if (p2 >>> 0 < 17) {
                        e2 = (e2 >>> 8 ^ e2) >>> 4 ^ (e2 >>> 8 ^ e2);
                        if (p2 >>> 0 < 5)
                          if (p2 >>> 0 < 3)
                            e2 = (e2 >>> 2 ^ e2) >>> 1 ^ (e2 >>> 2 ^ e2);
                          else
                            e2 = e2 >>> 2 ^ e2;
                      } else
                        e2 = e2 >>> 8 ^ e2;
                  } else
                    e2 = m2;
                  e2 = f2 + (((e2 >>> 0) % (p2 >>> 0) | 0) << 2) | 0;
                  c[h2 >> 2] = c[e2 >> 2];
                  c[e2 >> 2] = i2;
                } while ((p2 | 0) != (o2 | 0));
                c[b2 + 200 >> 2] = m2;
              }
              if ((c[l2 + 20 >> 2] | 0) > (d2 | 0)) {
                if ((q2 | 0) > 0) {
                  f2 = c[b2 + 116 >> 2] | 0;
                  m2 = c[b2 + 200 >> 2] | 0;
                  o2 = 0;
                  do {
                    h2 = f2 + (o2 << 2) | 0;
                    i2 = c[h2 >> 2] | 0;
                    o2 = o2 + 1 | 0;
                    m2 = (_(m2, 1664525) | 0) + 1013904223 | 0;
                    if (o2 >>> 0 < 65537) {
                      e2 = m2 >>> 16 ^ m2;
                      if (o2 >>> 0 < 257)
                        if (o2 >>> 0 < 17) {
                          e2 = (e2 >>> 8 ^ e2) >>> 4 ^ (e2 >>> 8 ^ e2);
                          if (o2 >>> 0 < 5)
                            if (o2 >>> 0 < 3)
                              e2 = (e2 >>> 2 ^ e2) >>> 1 ^ (e2 >>> 2 ^ e2);
                            else
                              e2 = e2 >>> 2 ^ e2;
                        } else
                          e2 = e2 >>> 8 ^ e2;
                    } else
                      e2 = m2;
                    p2 = f2 + (((e2 >>> 0) % (o2 >>> 0) | 0) << 2) | 0;
                    c[h2 >> 2] = c[p2 >> 2];
                    c[p2 >> 2] = i2;
                  } while ((o2 | 0) != (q2 | 0));
                  c[b2 + 200 >> 2] = m2;
                }
                if ((r2 | 0) > 0) {
                  f2 = c[b2 + 156 >> 2] | 0;
                  m2 = c[b2 + 200 >> 2] | 0;
                  o2 = 0;
                  do {
                    h2 = f2 + (o2 << 2) | 0;
                    i2 = c[h2 >> 2] | 0;
                    o2 = o2 + 1 | 0;
                    m2 = (_(m2, 1664525) | 0) + 1013904223 | 0;
                    if (o2 >>> 0 < 65537) {
                      e2 = m2 >>> 16 ^ m2;
                      if (o2 >>> 0 < 257)
                        if (o2 >>> 0 < 17) {
                          e2 = (e2 >>> 8 ^ e2) >>> 4 ^ (e2 >>> 8 ^ e2);
                          if (o2 >>> 0 < 5)
                            if (o2 >>> 0 < 3)
                              e2 = (e2 >>> 2 ^ e2) >>> 1 ^ (e2 >>> 2 ^ e2);
                            else
                              e2 = e2 >>> 2 ^ e2;
                        } else
                          e2 = e2 >>> 8 ^ e2;
                    } else
                      e2 = m2;
                    q2 = f2 + (((e2 >>> 0) % (o2 >>> 0) | 0) << 2) | 0;
                    c[h2 >> 2] = c[q2 >> 2];
                    c[q2 >> 2] = i2;
                  } while ((o2 | 0) != (r2 | 0));
                  c[b2 + 200 >> 2] = m2;
                }
              }
            }
            e2 = c[b2 + 48 >> 2] | 0;
            if (!(c[l2 + 64 >> 2] & 256)) {
              if ((e2 | 0) > 0) {
                i2 = 0;
                do {
                  f2 = c[(c[b2 + 136 >> 2] | 0) + (i2 << 2) >> 2] | 0;
                  h2 = c[b2 + 56 >> 2] | 0;
                  if ((c[h2 + (f2 * 152 | 0) + 136 >> 2] | 0) > (d2 | 0)) {
                    e2 = c[b2 + 16 >> 2] | 0;
                    +lq(e2 + ((c[h2 + (f2 * 152 | 0) + 144 >> 2] | 0) * 244 | 0) | 0, e2 + ((c[h2 + (f2 * 152 | 0) + 148 >> 2] | 0) * 244 | 0) | 0, h2 + (f2 * 152 | 0) | 0);
                    e2 = c[b2 + 48 >> 2] | 0;
                  }
                  i2 = i2 + 1 | 0;
                } while ((i2 | 0) < (e2 | 0));
              }
              if ((c[l2 + 20 >> 2] | 0) <= (d2 | 0))
                return 0;
              if ((k2 | 0) > 0) {
                h2 = 0;
                do {
                  e2 = j2 + (h2 << 2) | 0;
                  f2 = c[e2 >> 2] | 0;
                  if (a[f2 + 20 >> 0] | 0) {
                    d2 = cq(b2, c[f2 + 28 >> 2] | 0, +g[l2 + 12 >> 2]) | 0;
                    t2 = cq(b2, c[(c[e2 >> 2] | 0) + 32 >> 2] | 0, +g[l2 + 12 >> 2]) | 0;
                    s2 = c[b2 + 16 >> 2] | 0;
                    r2 = c[e2 >> 2] | 0;
                    Yb[c[(c[r2 >> 2] | 0) + 24 >> 2] & 15](r2, s2 + (d2 * 244 | 0) | 0, s2 + (t2 * 244 | 0) | 0, +g[l2 + 12 >> 2]);
                  }
                  h2 = h2 + 1 | 0;
                } while ((h2 | 0) != (k2 | 0));
              }
              e2 = c[b2 + 28 >> 2] | 0;
              if ((e2 | 0) > 0) {
                f2 = 0;
                do {
                  l2 = c[(c[b2 + 116 >> 2] | 0) + (f2 << 2) >> 2] | 0;
                  k2 = c[b2 + 36 >> 2] | 0;
                  j2 = c[b2 + 16 >> 2] | 0;
                  +mq(j2 + ((c[k2 + (l2 * 152 | 0) + 144 >> 2] | 0) * 244 | 0) | 0, j2 + ((c[k2 + (l2 * 152 | 0) + 148 >> 2] | 0) * 244 | 0) | 0, k2 + (l2 * 152 | 0) | 0);
                  f2 = f2 + 1 | 0;
                } while ((f2 | 0) != (e2 | 0));
              }
              e2 = c[b2 + 68 >> 2] | 0;
              if ((e2 | 0) > 0) {
                i2 = 0;
                do {
                  f2 = c[(c[b2 + 156 >> 2] | 0) + (i2 << 2) >> 2] | 0;
                  h2 = c[b2 + 76 >> 2] | 0;
                  n2 = +g[(c[b2 + 36 >> 2] | 0) + ((c[h2 + (f2 * 152 | 0) + 140 >> 2] | 0) * 152 | 0) + 100 >> 2];
                  if (n2 > 0) {
                    n2 = n2 * +g[h2 + (f2 * 152 | 0) + 104 >> 2];
                    g[h2 + (f2 * 152 | 0) + 120 >> 2] = -n2;
                    g[h2 + (f2 * 152 | 0) + 124 >> 2] = n2;
                    l2 = c[b2 + 16 >> 2] | 0;
                    +lq(l2 + ((c[h2 + (f2 * 152 | 0) + 144 >> 2] | 0) * 244 | 0) | 0, l2 + ((c[h2 + (f2 * 152 | 0) + 148 >> 2] | 0) * 244 | 0) | 0, h2 + (f2 * 152 | 0) | 0);
                  }
                  i2 = i2 + 1 | 0;
                } while ((i2 | 0) != (e2 | 0));
              }
              e2 = c[b2 + 88 >> 2] | 0;
              if ((e2 | 0) <= 0)
                return 0;
              h2 = 0;
              do {
                f2 = c[b2 + 96 >> 2] | 0;
                n2 = +g[(c[b2 + 36 >> 2] | 0) + ((c[f2 + (h2 * 152 | 0) + 140 >> 2] | 0) * 152 | 0) + 100 >> 2];
                if (n2 > 0) {
                  u2 = +g[f2 + (h2 * 152 | 0) + 104 >> 2];
                  n2 = n2 * u2 > u2 ? u2 : n2 * u2;
                  g[f2 + (h2 * 152 | 0) + 120 >> 2] = -n2;
                  g[f2 + (h2 * 152 | 0) + 124 >> 2] = n2;
                  l2 = c[b2 + 16 >> 2] | 0;
                  +lq(l2 + ((c[f2 + (h2 * 152 | 0) + 144 >> 2] | 0) * 244 | 0) | 0, l2 + ((c[f2 + (h2 * 152 | 0) + 148 >> 2] | 0) * 244 | 0) | 0, f2 + (h2 * 152 | 0) | 0);
                }
                h2 = h2 + 1 | 0;
              } while ((h2 | 0) != (e2 | 0));
              return 0;
            }
            if ((e2 | 0) > 0) {
              i2 = 0;
              do {
                f2 = c[(c[b2 + 136 >> 2] | 0) + (i2 << 2) >> 2] | 0;
                h2 = c[b2 + 56 >> 2] | 0;
                if ((c[h2 + (f2 * 152 | 0) + 136 >> 2] | 0) > (d2 | 0)) {
                  e2 = c[b2 + 16 >> 2] | 0;
                  +lq(e2 + ((c[h2 + (f2 * 152 | 0) + 144 >> 2] | 0) * 244 | 0) | 0, e2 + ((c[h2 + (f2 * 152 | 0) + 148 >> 2] | 0) * 244 | 0) | 0, h2 + (f2 * 152 | 0) | 0);
                  e2 = c[b2 + 48 >> 2] | 0;
                }
                i2 = i2 + 1 | 0;
              } while ((i2 | 0) < (e2 | 0));
            }
            if ((c[l2 + 20 >> 2] | 0) <= (d2 | 0))
              return 0;
            if ((k2 | 0) > 0) {
              h2 = 0;
              do {
                e2 = j2 + (h2 << 2) | 0;
                f2 = c[e2 >> 2] | 0;
                if (a[f2 + 20 >> 0] | 0) {
                  q2 = cq(b2, c[f2 + 28 >> 2] | 0, +g[l2 + 12 >> 2]) | 0;
                  d2 = cq(b2, c[(c[e2 >> 2] | 0) + 32 >> 2] | 0, +g[l2 + 12 >> 2]) | 0;
                  r2 = c[b2 + 16 >> 2] | 0;
                  p2 = c[e2 >> 2] | 0;
                  Yb[c[(c[p2 >> 2] | 0) + 24 >> 2] & 15](p2, r2 + (q2 * 244 | 0) | 0, r2 + (d2 * 244 | 0) | 0, +g[l2 + 12 >> 2]);
                }
                h2 = h2 + 1 | 0;
              } while ((h2 | 0) != (k2 | 0));
            }
            e2 = c[l2 + 64 >> 2] | 0;
            o2 = c[b2 + 28 >> 2] | 0;
            if (e2 & 512 | 0) {
              if ((o2 | 0) <= 0)
                return 0;
              m2 = 0;
              do {
                f2 = c[(c[b2 + 116 >> 2] | 0) + (m2 << 2) >> 2] | 0;
                h2 = c[b2 + 36 >> 2] | 0;
                i2 = c[b2 + 16 >> 2] | 0;
                +mq(i2 + ((c[h2 + (f2 * 152 | 0) + 144 >> 2] | 0) * 244 | 0) | 0, i2 + ((c[h2 + (f2 * 152 | 0) + 148 >> 2] | 0) * 244 | 0) | 0, h2 + (f2 * 152 | 0) | 0);
                n2 = +g[h2 + (f2 * 152 | 0) + 100 >> 2];
                f2 = _(m2, (e2 >>> 4 & 1) + 1 | 0) | 0;
                h2 = c[(c[b2 + 156 >> 2] | 0) + (f2 << 2) >> 2] | 0;
                i2 = c[b2 + 76 >> 2] | 0;
                if (n2 > 0) {
                  u2 = n2 * +g[i2 + (h2 * 152 | 0) + 104 >> 2];
                  g[i2 + (h2 * 152 | 0) + 120 >> 2] = -u2;
                  g[i2 + (h2 * 152 | 0) + 124 >> 2] = u2;
                  k2 = c[b2 + 16 >> 2] | 0;
                  +lq(k2 + ((c[i2 + (h2 * 152 | 0) + 144 >> 2] | 0) * 244 | 0) | 0, k2 + ((c[i2 + (h2 * 152 | 0) + 148 >> 2] | 0) * 244 | 0) | 0, i2 + (h2 * 152 | 0) | 0);
                }
                if (c[l2 + 64 >> 2] & 16 | 0 ? (s2 = c[(c[b2 + 156 >> 2] | 0) + (f2 + 1 << 2) >> 2] | 0, t2 = c[b2 + 76 >> 2] | 0, n2 > 0) : 0) {
                  u2 = n2 * +g[t2 + (s2 * 152 | 0) + 104 >> 2];
                  g[t2 + (s2 * 152 | 0) + 120 >> 2] = -u2;
                  g[t2 + (s2 * 152 | 0) + 124 >> 2] = u2;
                  k2 = c[b2 + 16 >> 2] | 0;
                  +lq(k2 + ((c[t2 + (s2 * 152 | 0) + 144 >> 2] | 0) * 244 | 0) | 0, k2 + ((c[t2 + (s2 * 152 | 0) + 148 >> 2] | 0) * 244 | 0) | 0, t2 + (s2 * 152 | 0) | 0);
                }
                m2 = m2 + 1 | 0;
              } while ((m2 | 0) != (o2 | 0));
              return 0;
            }
            if ((o2 | 0) > 0) {
              e2 = 0;
              do {
                l2 = c[(c[b2 + 116 >> 2] | 0) + (e2 << 2) >> 2] | 0;
                k2 = c[b2 + 36 >> 2] | 0;
                j2 = c[b2 + 16 >> 2] | 0;
                +mq(j2 + ((c[k2 + (l2 * 152 | 0) + 144 >> 2] | 0) * 244 | 0) | 0, j2 + ((c[k2 + (l2 * 152 | 0) + 148 >> 2] | 0) * 244 | 0) | 0, k2 + (l2 * 152 | 0) | 0);
                e2 = e2 + 1 | 0;
              } while ((e2 | 0) != (o2 | 0));
            }
            e2 = c[b2 + 68 >> 2] | 0;
            if ((e2 | 0) > 0) {
              i2 = 0;
              do {
                f2 = c[(c[b2 + 156 >> 2] | 0) + (i2 << 2) >> 2] | 0;
                h2 = c[b2 + 76 >> 2] | 0;
                n2 = +g[(c[b2 + 36 >> 2] | 0) + ((c[h2 + (f2 * 152 | 0) + 140 >> 2] | 0) * 152 | 0) + 100 >> 2];
                if (n2 > 0) {
                  u2 = n2 * +g[h2 + (f2 * 152 | 0) + 104 >> 2];
                  g[h2 + (f2 * 152 | 0) + 120 >> 2] = -u2;
                  g[h2 + (f2 * 152 | 0) + 124 >> 2] = u2;
                  l2 = c[b2 + 16 >> 2] | 0;
                  +lq(l2 + ((c[h2 + (f2 * 152 | 0) + 144 >> 2] | 0) * 244 | 0) | 0, l2 + ((c[h2 + (f2 * 152 | 0) + 148 >> 2] | 0) * 244 | 0) | 0, h2 + (f2 * 152 | 0) | 0);
                }
                i2 = i2 + 1 | 0;
              } while ((i2 | 0) != (e2 | 0));
            }
            e2 = c[b2 + 88 >> 2] | 0;
            if ((e2 | 0) <= 0)
              return 0;
            h2 = 0;
            do {
              f2 = c[b2 + 96 >> 2] | 0;
              n2 = +g[(c[b2 + 36 >> 2] | 0) + ((c[f2 + (h2 * 152 | 0) + 140 >> 2] | 0) * 152 | 0) + 100 >> 2];
              if (n2 > 0) {
                u2 = +g[f2 + (h2 * 152 | 0) + 104 >> 2];
                u2 = n2 * u2 > u2 ? u2 : n2 * u2;
                g[f2 + (h2 * 152 | 0) + 120 >> 2] = -u2;
                g[f2 + (h2 * 152 | 0) + 124 >> 2] = u2;
                l2 = c[b2 + 16 >> 2] | 0;
                +lq(l2 + ((c[f2 + (h2 * 152 | 0) + 144 >> 2] | 0) * 244 | 0) | 0, l2 + ((c[f2 + (h2 * 152 | 0) + 148 >> 2] | 0) * 244 | 0) | 0, f2 + (h2 * 152 | 0) | 0);
              }
              h2 = h2 + 1 | 0;
            } while ((h2 | 0) != (e2 | 0));
            return 0;
          }
          function lq(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0;
            h2 = +g[d2 + 100 >> 2];
            k2 = +g[d2 + 16 >> 2];
            i2 = +g[d2 + 20 >> 2];
            j2 = +g[d2 + 24 >> 2];
            e2 = +g[d2 + 108 >> 2];
            e2 = +g[d2 + 112 >> 2] - h2 * +g[d2 + 116 >> 2] - (k2 * +g[a2 + 64 >> 2] + i2 * +g[a2 + 68 >> 2] + j2 * +g[a2 + 72 >> 2] + (+g[d2 >> 2] * +g[a2 + 80 >> 2] + +g[d2 + 4 >> 2] * +g[a2 + 84 >> 2] + +g[d2 + 8 >> 2] * +g[a2 + 88 >> 2])) * e2 - e2 * (+g[d2 + 48 >> 2] * +g[b2 + 64 >> 2] + +g[d2 + 52 >> 2] * +g[b2 + 68 >> 2] + +g[d2 + 56 >> 2] * +g[b2 + 72 >> 2] + (+g[d2 + 32 >> 2] * +g[b2 + 80 >> 2] + +g[d2 + 36 >> 2] * +g[b2 + 84 >> 2] + +g[d2 + 40 >> 2] * +g[b2 + 88 >> 2]));
            f2 = +g[d2 + 120 >> 2];
            do
              if (!(h2 + e2 < f2)) {
                f2 = +g[d2 + 124 >> 2];
                if (h2 + e2 > f2) {
                  g[d2 + 100 >> 2] = f2;
                  e2 = f2 - h2;
                  break;
                } else {
                  g[d2 + 100 >> 2] = h2 + e2;
                  break;
                }
              } else {
                g[d2 + 100 >> 2] = f2;
                e2 = f2 - h2;
              }
            while (0);
            if (c[a2 + 240 >> 2] | 0) {
              i2 = e2 * (i2 * +g[a2 + 132 >> 2]) * +g[a2 + 116 >> 2];
              j2 = e2 * (j2 * +g[a2 + 136 >> 2]) * +g[a2 + 120 >> 2];
              g[a2 + 64 >> 2] = +g[a2 + 112 >> 2] * (e2 * (k2 * +g[a2 + 128 >> 2])) + +g[a2 + 64 >> 2];
              g[a2 + 68 >> 2] = i2 + +g[a2 + 68 >> 2];
              g[a2 + 72 >> 2] = j2 + +g[a2 + 72 >> 2];
              j2 = e2 * +g[a2 + 100 >> 2] * +g[d2 + 68 >> 2];
              k2 = e2 * +g[a2 + 104 >> 2] * +g[d2 + 72 >> 2];
              g[a2 + 80 >> 2] = e2 * +g[a2 + 96 >> 2] * +g[d2 + 64 >> 2] + +g[a2 + 80 >> 2];
              g[a2 + 84 >> 2] = j2 + +g[a2 + 84 >> 2];
              g[a2 + 88 >> 2] = k2 + +g[a2 + 88 >> 2];
            }
            if (!(c[b2 + 240 >> 2] | 0))
              return +e2;
            k2 = e2 * (+g[d2 + 52 >> 2] * +g[b2 + 132 >> 2]) * +g[b2 + 116 >> 2];
            j2 = e2 * (+g[d2 + 56 >> 2] * +g[b2 + 136 >> 2]) * +g[b2 + 120 >> 2];
            g[b2 + 64 >> 2] = +g[b2 + 112 >> 2] * (e2 * (+g[d2 + 48 >> 2] * +g[b2 + 128 >> 2])) + +g[b2 + 64 >> 2];
            g[b2 + 68 >> 2] = k2 + +g[b2 + 68 >> 2];
            g[b2 + 72 >> 2] = j2 + +g[b2 + 72 >> 2];
            j2 = e2 * +g[b2 + 100 >> 2] * +g[d2 + 84 >> 2];
            k2 = e2 * +g[b2 + 104 >> 2] * +g[d2 + 88 >> 2];
            g[b2 + 80 >> 2] = e2 * +g[b2 + 96 >> 2] * +g[d2 + 80 >> 2] + +g[b2 + 80 >> 2];
            g[b2 + 84 >> 2] = j2 + +g[b2 + 84 >> 2];
            g[b2 + 88 >> 2] = k2 + +g[b2 + 88 >> 2];
            return +e2;
          }
          function mq(a2, b2, d2) {
            a2 = a2 | 0;
            b2 = b2 | 0;
            d2 = d2 | 0;
            var e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0;
            k2 = +g[d2 + 100 >> 2];
            h2 = +g[d2 + 16 >> 2];
            e2 = +g[d2 + 20 >> 2];
            f2 = +g[d2 + 24 >> 2];
            j2 = +g[d2 + 108 >> 2];
            j2 = +g[d2 + 112 >> 2] - k2 * +g[d2 + 116 >> 2] - (h2 * +g[a2 + 64 >> 2] + e2 * +g[a2 + 68 >> 2] + f2 * +g[a2 + 72 >> 2] + (+g[d2 >> 2] * +g[a2 + 80 >> 2] + +g[d2 + 4 >> 2] * +g[a2 + 84 >> 2] + +g[d2 + 8 >> 2] * +g[a2 + 88 >> 2])) * j2 - j2 * (+g[d2 + 48 >> 2] * +g[b2 + 64 >> 2] + +g[d2 + 52 >> 2] * +g[b2 + 68 >> 2] + +g[d2 + 56 >> 2] * +g[b2 + 72 >> 2] + (+g[d2 + 32 >> 2] * +g[b2 + 80 >> 2] + +g[d2 + 36 >> 2] * +g[b2 + 84 >> 2] + +g[d2 + 40 >> 2] * +g[b2 + 88 >> 2]));
            l2 = +g[d2 + 120 >> 2];
            i2 = k2 + j2 < l2 ? l2 - k2 : j2;
            g[d2 + 100 >> 2] = k2 + j2 < l2 ? l2 : k2 + j2;
            if (c[a2 + 240 >> 2] | 0) {
              l2 = i2 * (e2 * +g[a2 + 132 >> 2]) * +g[a2 + 116 >> 2];
              k2 = i2 * (f2 * +g[a2 + 136 >> 2]) * +g[a2 + 120 >> 2];
              g[a2 + 64 >> 2] = +g[a2 + 112 >> 2] * (i2 * (h2 * +g[a2 + 128 >> 2])) + +g[a2 + 64 >> 2];
              g[a2 + 68 >> 2] = l2 + +g[a2 + 68 >> 2];
              g[a2 + 72 >> 2] = k2 + +g[a2 + 72 >> 2];
              k2 = i2 * +g[a2 + 100 >> 2] * +g[d2 + 68 >> 2];
              l2 = i2 * +g[a2 + 104 >> 2] * +g[d2 + 72 >> 2];
              g[a2 + 80 >> 2] = i2 * +g[a2 + 96 >> 2] * +g[d2 + 64 >> 2] + +g[a2 + 80 >> 2];
              g[a2 + 84 >> 2] = k2 + +g[a2 + 84 >> 2];
              g[a2 + 88 >> 2] = l2 + +g[a2 + 88 >> 2];
            }
            if (!(c[b2 + 240 >> 2] | 0))
              return +i2;
            l2 = i2 * (+g[d2 + 52 >> 2] * +g[b2 + 132 >> 2]) * +g[b2 + 116 >> 2];
            k2 = i2 * (+g[d2 + 56 >> 2] * +g[b2 + 136 >> 2]) * +g[b2 + 120 >> 2];
            g[b2 + 64 >> 2] = +g[b2 + 112 >> 2] * (i2 * (+g[d2 + 48 >> 2] * +g[b2 + 128 >> 2])) + +g[b2 + 64 >> 2];
            g[b2 + 68 >> 2] = l2 + +g[b2 + 68 >> 2];
            g[b2 + 72 >> 2] = k2 + +g[b2 + 72 >> 2];
            k2 = i2 * +g[b2 + 100 >> 2] * +g[d2 + 84 >> 2];
            l2 = i2 * +g[b2 + 104 >> 2] * +g[d2 + 88 >> 2];
            g[b2 + 80 >> 2] = i2 * +g[b2 + 96 >> 2] * +g[d2 + 80 >> 2] + +g[b2 + 80 >> 2];
            g[b2 + 84 >> 2] = k2 + +g[b2 + 84 >> 2];
            g[b2 + 88 >> 2] = l2 + +g[b2 + 88 >> 2];
            return +i2;
          }
          var pb = [aI, qc, qd, se, xe, lg, vg, ah, kh, zh, di, Hi, Mi, Ri, On, IG, EG, QG, aI, aI, aI, aI, aI, aI, aI, aI, aI, aI, aI, aI, aI, aI];
          var qb = [bI, sf, Lg, Xi, oj, Jj, gk, El, rm, cr, dr, nr, or, pr, tr, Lr, Or, bI, bI, bI, bI, bI, bI, bI, bI, bI, bI, bI, bI, bI, bI, bI];
          var rb = [cI, mc, nc, zc, Bc, Cc, Dc, hd, id, Fd, kd, ld, ud, yd, Id, Jd, Od, Pd, Xd, ee, fe, qe, re, ve, we, ye, ze, He, Se, Te, Ze, _e, $e, af, df, Lf, ff, gf, kf, lf, of, pf, vf, wf, Jm, xf, zf, Bf, Ef, Ff, Qf, Sf, Uf, Vf, $f, bg, dg, eg, jg, kg, ng, tg, ug, wg, Bg, $g, Cg, Dg, cm, Fg, ch, fh, gh, ih, jh, lh, ph, th, xh, yh, Ch, Dh, Jh, Kh, Mh, Oh, Qh, Sh, Uh, Wh, Yh, _h, ai, Yc, ci, gi, hi, ki, li, qi, ri, xi, zi, Ai, Fi, Gi, Ki, Li, Qi, Si, kj, lj, Hd, tj, zj, Bj, dl, Dj, Qj, Sj, $j, ak, mk, ok, zk, Ck, Fk, Gk, $k, al, hl, Km, nl, yl, Ll, Ql, Wl, Xl, _l, am, dm, nm, wm, xm, Lm, Mm, Xm, Ym, cn, dn, ln, on, yn, qn, sn, zn, Kn, Ln, Nn, Pn, Sn, $n, bo, go, ho, wo, ro, zo, Fo, Go, Ao, Bo, Yo, Zo, jp, np, Vo, vp, Ap, Bp, Op, Pp, Xp, Yp, _p, pq, Bq, Cq, Dq, Pq, Zq, jr, rr, er, gr, ur, vr, zq, xr, Hr, Ir, Qr, Rr, Tr, Ps, Qs, dx, ex, Mz, Nz, wG, GG, yG, zG, xG, KG, LG, NG, dG, uG, cI, cI, cI, cI, cI, cI, cI, cI, cI, cI, cI, cI, cI, cI, cI, cI, cI, cI, cI, cI, cI, cI, cI, cI, cI, cI, cI, cI, cI, cI, cI, cI, cI, cI, cI, cI];
          var sb = [dI];
          var tb = [eI, uc, yc, Nc, Rc, Sc, Ad, Ed, nd, vd, zd, Zd, be, ce, je, ke, ue, Ce, De, Pe, Ue, Ye, bf, Kf, Mf, tf, Cf, rg, og, Ag, yg, eh, Yk, Kg, Zj, wh, Bh, fi, Ci, Ji, Oi, Ui, mj, wj, xj, Fj, Ij, ck, kk, qk, tk, Bk, Ek, Hk, il, Al, Dl, zm, Pm, Qm, Sm, Tm, Zm, _m, fn, jo, ko, mo, no, oo, yo, Jo, Ko, bp, cp, op, qp, wp, Dp, Ep, Qp, Rp, qq, sq, Fq, Gq, Kq, Lq, Mq, Nq, Oq, Qq, Sq, Tq, _q, $q, ar, br, kr, qr, sr, Ar, Kr, fx, gx, eI, eI, eI, eI, eI, eI, eI, eI, eI, eI, eI, eI, eI, eI, eI, eI, eI, eI, eI, eI, eI, eI, eI];
          var ub = [fI, Mn, Qn, fI];
          var vb = [gI, vc, wc, Hc, Ic, Jc, Lc, Qc, Bd, Cd, Rd, Sd, Td, Vd, ae, he, Je, Le, Me, Ne, We, cf, Hg, Jg, Ng, Rg, Tg, Ug, Xg, Eh, Fh, Hh, vi, Wi, $i, bj, cj, fj, gn, nj, qj, Hj, Kj, Oj, Rj, Tj, dk, fk, ik, sk, uk, Ak, Dk, Ik, Jk, Pk, Qk, Tk, jl, kl, ql, rl, ul, Cl, Fl, Ml, Rl, qm, Am, Cm, Dm, Rm, Um, Hm, jn, Xj, vo, xo, Oo, Eo, hp, kp, Wo, xp, Hp, Jp, Up, Wp, $p, vq, xq, Uq, Vq, Yq, yr, bG, MG, gI, gI, gI, gI, gI, gI, gI, gI, gI, gI, gI, gI, gI, gI, gI, gI, gI, gI, gI, gI, gI, gI, gI, gI, gI, gI, gI, gI, gI, gI, gI];
          var wb = [hI, Mo, fp, tp, Fp, Sp, tq, hI];
          var xb = [iI];
          var yb = [jI];
          var zb = [kI, Fc, Md, ge, Ae, hh, Lh, Nh, Ph, Rh, Th, Vh, Xh, Zh, $h, bi, Yl, Sr, Pz, kI, kI, kI, kI, kI, kI, kI, kI, kI, kI, kI, kI, kI];
          var Ab = [lI, Ig, Vi, hn, Gj, ek, rk, em, Bl, pm, Bm, lI, lI, lI, lI, lI];
          var Bb = [mI, Ss];
          var Cb = [nI];
          var Db = [oI, te, qg, zg, bh, vh, Ah, ei, Ii, Ni, oI, oI, oI, oI, oI, oI];
          var Eb = [pI, Ec, Pc, Kd, $d, ie, Be, Ee, Fe, Xe, Og, Gh, si, ti, rj, Lj, jk, vk, Kk, Gl, Em, Im, Yj, Po, Aq, ip, Xo, yp, Ip, Vp, wq, zr, Oz, cG, eG, AG, pI, pI, pI, pI, pI, pI, pI, pI, pI, pI, pI, pI, pI, pI, pI, pI, pI, pI, pI, pI, pI, pI, pI, pI, pI, pI, pI, pI];
          var Fb = [qI, sc, td, wr, HG, CG, OG, qI];
          var Gb = [rI, Zg, hj, Vk, wl, rI, rI, rI];
          var Hb = [sI, Vj, Mg, pj, hk, Kl, Pl, Ul, sm, sI, sI, sI, sI, sI, sI, sI];
          var Ib = [tI, rn, An, co];
          var Jb = [uI, Rf, Tf, uI];
          var Kb = [vI];
          var Lb = [wI, el, Nk, wI];
          var Mb = [xI, hq];
          var Nb = [yI, Nm, Om, yI];
          var Ob = [zI, fd, gd, Qd, Yd, Ke, Oe, Ie, Ve, qf, Gf, Wf, ag, cg, hm, so, Wq, Xq, hr, Ur, Rs, zI, zI, zI, zI, zI, zI, zI, zI, zI, zI, zI];
          var Pb = [AI, Hf, Xf, to, No, gp, up, Gp, Tp, uq, fr, ir, Vr, lq, mq, AI];
          var Qb = [BI, Zp, kq, BI];
          var Rb = [CI, Co];
          var Sb = [DI, nq, oq, DI];
          var Tb = [EI, Wj];
          var Ub = [FI];
          var Vb = [GI, yf, Af, GI];
          var Wb = [HI, jq];
          var Xb = [II, oc, jd, II];
          var Yb = [JI, hg, oh, sh, uh, yi, vn, Vn, Lo, Do, JI, JI, JI, JI, JI, JI];
          var Zb = [KI, pc, xc, Gc, Kc, Mc, Oc, pd, Dd, md, dd, Nd, Ud, Wd, _d, uf, fg, gg, xg, Uj, Zk, Pg, Sg, Wg, mh, nh, qh, rh, ii, mi, Bi, Yi, Zi, aj, ej, ij, nn, vj, uj, Aj, Cj, Mj, Pj, wk, xk, Lk, Mk, Sk, ll, ml, tl, Hl, Il, Nl, Sl, fm, tm, um, Vm, Wm, tn, un, Tn, Un, Qo, zp, Mp, Np, Jq, Qz, Re, fl, gl, KI, KI, KI, KI, KI, KI, KI, KI, KI, KI, KI, KI, KI, KI, KI, KI, KI, KI, KI, KI, KI, KI, KI, KI, KI, KI, KI, KI, KI, KI, KI, KI, KI, KI, KI, KI, KI, KI, KI, KI, KI, KI, KI, KI, KI, KI, KI, KI, KI, KI, KI, KI, KI, KI, KI];
          var _b = [LI, MI, sG, tG];
          var $b = [NI, ed, io, lo, qo, Jr, NI, NI];
          var ac = [OI, Iq];
          var bc = [PI, rc, tc, sd, xd, Ge, ef, nf, Jf, hf, jf, mf, _n, ao, Eg, Gg, Qg, _k, Vg, Yg, _g, dh, ji, ni, Ti, _i, dj, gj, en, sj, Ej, Nj, bk, pk, yk, lm, Ok, Rk, Uk, pl, sl, vl, ol, zl, Jl, Ol, Tl, $l, bm, gm, om, vm, ym, Fm, Gm, kn, mn, pn, aq, Eq, Rq, Pr, JG, FG, SG, PI, PI, PI, PI, PI, PI, PI, PI, PI, PI, PI, PI, PI, PI, PI, PI, PI, PI, PI, PI, PI, PI, PI, PI, PI, PI, PI, PI, PI, PI, PI, PI, PI, PI, PI, PI, PI, PI, PI, PI, PI, PI, PI, PI, PI, PI, PI, PI, PI, PI, PI, PI, PI, PI, PI, PI, PI, PI, PI, PI, PI, PI, PI];
          return { _emscripten_bind_btCylinderShape___destroy___0: Qw, _emscripten_bind_btGeneric6DofConstraint_enableFeedback_1: Gy, _emscripten_bind_btHingeConstraint_setBreakingImpulseThreshold_1: $z, _emscripten_bind_btDispatcherInfo_set_m_useContinuous_1: iy, _emscripten_bind_btCollisionObject_isActive_0: Ou, _emscripten_bind_btVehicleTuning_set_m_frictionSlip_1: mF, _emscripten_bind_btDiscreteDynamicsWorld_btDiscreteDynamicsWorld_4: yx, _emscripten_bind_btCapsuleShapeX_getMargin_0: nu, _emscripten_bind_btCompoundShape_getMargin_0: uv, _emscripten_bind_RaycastInfo_set_m_wheelDirectionWS_1: St, _emscripten_bind_btContactSolverInfo___destroy___0: jw, _emscripten_bind_ClosestRayResultCallback_get_m_hitPointWorld_0: Ds, _emscripten_bind_btPairCachingGhostObject_getCollisionFlags_0: _A, _emscripten_bind_btQuaternion_setX_1: WB, _emscripten_bind_btCylinderShapeZ_getMargin_0: Nw, _emscripten_bind_btDispatcherInfo_get_m_timeOfImpact_0: Xx, _emscripten_bind_btQuaternion_setZ_1: YB, _emscripten_bind_btCapsuleShapeZ_getMargin_0: tu, _emscripten_bind_btKinematicCharacterController_setMaxSlope_1: rA, _emscripten_bind_btQuadWord_z_0: QB, _emscripten_bind_btVehicleTuning_get_m_suspensionStiffness_0: lF, _emscripten_bind_btWheelInfo_get_m_suspensionRestLength1_0: CF, _emscripten_bind_btWheelInfo_get_m_suspensionStiffness_0: DF, _emscripten_bind_btGeneric6DofSpring2Constraint_getBreakingImpulseThreshold_0: Sy, _emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalAngularDampingThresholdSqr_1: DC, _emscripten_bind_RaycastInfo_get_m_wheelAxleWS_0: Jt, _emscripten_bind_btRigidBodyConstructionInfo_get_m_angularDamping_0: vC, _emscripten_bind_btCollisionDispatcher___destroy___0: Du, _emscripten_bind_btRigidBody_applyCentralImpulse_1: SC, _emscripten_bind_btConvexHullShape_getMargin_0: tw, _emscripten_bind_btDefaultMotionState_getWorldTransform_1: jx, _emscripten_bind_btDiscreteDynamicsWorld_stepSimulation_1: Nx, _emscripten_bind_btRaycastVehicle_getNumWheels_0: fC, _emscripten_bind_btDiscreteDynamicsWorld_stepSimulation_3: Px, _emscripten_bind_btDiscreteDynamicsWorld_stepSimulation_2: Ox, _emscripten_bind_btVector3_op_mul_1: GE, _emscripten_bind_btDynamicsWorld_rayTest_3: By, _emscripten_bind_btRaycastVehicle_updateWheelTransform_2: mC, _emscripten_bind_btQuadWord_x_0: OB, _emscripten_bind_btCollisionObject_isKinematicObject_0: Pu, _emscripten_bind_btWheelInfo_set_m_chassisConnectionPointCS_1: JF, _emscripten_bind_ConvexResultCallback___destroy___0: Xs, _emscripten_bind_btGeneric6DofSpringConstraint_setLinearUpperLimit_1: lz, _emscripten_bind_ClosestConvexResultCallback_set_m_hitNormalWorld_1: vs, _emscripten_bind_btWheelInfo_set_m_wheelsSuspensionForce_1: WF, _emscripten_bind_btRigidBody_getCenterOfMassTransform_0: _C, _emscripten_bind_btGhostObject_isKinematicObject_0: yz, _emscripten_bind_btGeneric6DofSpringConstraint_btGeneric6DofSpringConstraint_5: cz, _emscripten_bind_btCapsuleShape___destroy___0: wu, _emscripten_bind_btCollisionObject_activate_1: Ju, _emscripten_bind_btCollisionObject_activate_0: Iu, _emscripten_bind_btGeneric6DofSpring2Constraint_getRotationalLimitMotor_1: Ty, _emscripten_bind_btKinematicCharacterController_setUpAxis_1: sA, _emscripten_bind_btDispatcherInfo_set_m_timeOfImpact_1: gy, _emscripten_bind_btGeneric6DofSpring2Constraint_setAngularUpperLimit_1: Wy, _emscripten_bind_btTranslationalLimitMotor2___destroy___0: jE, _emscripten_bind_btCollisionDispatcher_btCollisionDispatcher_1: Eu, _emscripten_bind_btVector3_setX_1: JE, _emscripten_bind_btCollisionConfiguration___destroy___0: Cu, _emscripten_bind_btCapsuleShapeZ_setMargin_1: vu, _emscripten_bind_btHingeConstraint_enableFeedback_1: Zz, _emscripten_bind_btSphereShape___destroy___0: RD, _emscripten_bind_btGeneric6DofConstraint_setAngularLowerLimit_1: Iy, _emscripten_bind_btManifoldPoint_set_m_localPointB_1: HA, _emscripten_bind_btVector3_setZ_1: LE, _emscripten_bind_btKinematicCharacterController_setUseGhostSweepTest_1: tA, _emscripten_bind_btQuaternion_setValue_4: UB, _emscripten_bind_btDynamicsWorld_getBroadphase_0: wy, _emscripten_bind_LocalShapeInfo___destroy___0: pt, _emscripten_bind_btPoint2PointConstraint_get_m_setting_0: DB, _emscripten_bind_btQuadWord_setY_1: LB, _emscripten_bind_btRigidBodyConstructionInfo_set_m_restitution_1: MC, _emscripten_bind_btDefaultMotionState_get_m_graphicsWorldTrans_0: kx, _emscripten_bind_btSliderConstraint_btSliderConstraint_5: JD, _emscripten_bind_btDiscreteDynamicsWorld_addRigidBody_3: xx, _emscripten_bind_btPairCachingGhostObject_btPairCachingGhostObject_0: YA, _emscripten_bind_btDiscreteDynamicsWorld_getSolverInfo_0: Hx, _emscripten_bind_btCylinderShape_setMargin_1: Vw, _emscripten_bind_btCollisionWorld___destroy___0: cv, _emscripten_bind_LocalConvexResult_get_m_hitPointLocal_0: it, _emscripten_bind_btBoxShape_btBoxShape_1: $t, _emscripten_bind_btPersistentManifold_getBody1_0: tB, _emscripten_bind_ClosestRayResultCallback_set_m_collisionObject_1: Js, _emscripten_bind_RaycastInfo_set_m_isInContact_1: Pt, _emscripten_bind_btKinematicCharacterController_setGravity_1: oA, _emscripten_bind_btGeneric6DofConstraint_btGeneric6DofConstraint_5: Fy, _emscripten_bind_btGeneric6DofConstraint_btGeneric6DofConstraint_3: Ey, _emscripten_bind_btQuaternion_setY_1: XB, _emscripten_bind_btWheelInfo_get_m_rollInfluence_0: AF, _emscripten_bind_btTypedConstraint_setBreakingImpulseThreshold_1: yE, _emscripten_bind_btBvhTriangleMeshShape_setLocalScaling_1: ju, _emscripten_bind_btPoint2PointConstraint_setBreakingImpulseThreshold_1: EB, _emscripten_bind_btDynamicsWorld_getDispatchInfo_0: xy, _emscripten_bind_btCompoundShape_removeChildShapeByIndex_1: wv, _emscripten_bind_btGeneric6DofSpring2Constraint_enableSpring_2: Ry, _emscripten_bind_btVector3_length_0: DE, _emscripten_bind_btConvexTriangleMeshShape_btConvexTriangleMeshShape_2: Bw, _emscripten_bind_btConvexTriangleMeshShape_btConvexTriangleMeshShape_1: Aw, _emscripten_bind_ClosestConvexResultCallback_set_m_hitPointWorld_1: ws, _emscripten_bind_RayResultCallback_set_m_collisionFilterMask_1: At, _emscripten_bind_btBoxShape_getMargin_0: bu, _emscripten_bind_btPairCachingGhostObject___destroy___0: VA, _emscripten_bind_btPairCachingGhostObject_activate_0: WA, _emscripten_bind_btPairCachingGhostObject_activate_1: XA, _emscripten_bind_btContactSolverInfo_get_m_splitImpulsePenetrationThreshold_0: kw, _emscripten_bind_btPairCachingGhostObject_forceActivationState_1: ZA, _emscripten_bind_btDefaultMotionState___destroy___0: bx, _emscripten_bind_btDispatcherInfo_get_m_stepCount_0: Wx, _emscripten_bind_btRigidBodyConstructionInfo_set_m_angularDamping_1: HC, _emscripten_bind_btQuadWord_setW_1: JB, _emscripten_bind_btRigidBodyConstructionInfo_get_m_friction_0: xC, _emscripten_bind_btCapsuleShapeX_btCapsuleShapeX_2: lu, _emscripten_bind_LocalShapeInfo_set_m_shapePart_1: st, _emscripten_bind_btRigidBody_setLinearFactor_1: sD, _emscripten_bind_btDispatcherInfo_set_m_useConvexConservativeDistanceUtil_1: jy, _emscripten_bind_btWheelInfo_get_m_engineForce_0: vF, _emscripten_bind_btRaycastVehicle_setSteeringValue_2: lC, _emscripten_enum_RotateOrder_RO_YXZ: ZF, _emscripten_bind_btPoint2PointConstraint___destroy___0: wB, _emscripten_bind_btGeneric6DofConstraint_setAngularUpperLimit_1: Jy, _emscripten_bind_btDiscreteDynamicsWorld_addConstraint_2: vx, _emscripten_bind_btDiscreteDynamicsWorld_addConstraint_1: ux, _emscripten_bind_btRigidBodyConstructionInfo_set_m_angularSleepingThreshold_1: IC, _malloc: qG, _emscripten_bind_btDispatcherInfo_get_m_useEpa_0: $x, _memmove: cH, _emscripten_bind_btTransform_btTransform_2: cE, _emscripten_bind_btTransform_btTransform_0: bE, _emscripten_bind_btVector3_op_sub_1: HE, _emscripten_bind_btWheelInfo_set_m_wheelsRadius_1: VF, _emscripten_bind_btDispatcherInfo_set_m_enableSPU_1: dy, _emscripten_bind_btWheelInfo_set_m_wheelsDampingCompression_1: TF, _emscripten_bind_btCollisionObject_setActivationState_1: Qu, _emscripten_bind_btPersistentManifold___destroy___0: qB, _emscripten_bind_btConstraintSetting_get_m_impulseClamp_0: dw, _emscripten_bind_btCylinderShapeZ___destroy___0: Kw, _emscripten_bind_btMatrix3x3___destroy___0: LA, _emscripten_bind_ConvexResultCallback_hasHit_0: $s, _emscripten_bind_btCollisionShape_calculateLocalInertia_2: av, _emscripten_bind_btGeneric6DofSpringConstraint_setBreakingImpulseThreshold_1: iz, _emscripten_bind_btCollisionWorld_convexSweepTest_5: iv, _emscripten_bind_ClosestRayResultCallback_set_m_hitPointWorld_1: Ls, _emscripten_bind_btCapsuleShapeX_calculateLocalInertia_2: mu, _emscripten_bind_btConstraintSetting_set_m_damping_1: fw, _emscripten_bind_btVehicleRaycaster___destroy___0: eF, _emscripten_bind_btRigidBody_setCcdMotionThreshold_1: kD, _emscripten_bind_btConvexHullShape_setMargin_1: vw, _emscripten_bind_btRigidBody_applyForce_2: TC, _emscripten_bind_btConeShapeZ_calculateLocalInertia_2: Iv, _emscripten_bind_btConstraintSetting_set_m_tau_1: hw, _emscripten_bind_btConvexHullShape_calculateLocalInertia_2: sw, _emscripten_bind_RaycastInfo_get_m_contactPointWS_0: Et, _emscripten_bind_btSphereShape_calculateLocalInertia_2: TD, _emscripten_bind_btWheelInfo_get_m_chassisConnectionPointCS_0: uF, _emscripten_bind_btDynamicsWorld_contactTest_2: uy, _emscripten_bind_ClosestRayResultCallback_get_m_rayToWorld_0: Fs, _emscripten_bind_btGhostObject_setFriction_1: Gz, _emscripten_bind_btCollisionWorld_rayTest_3: nv, _emscripten_bind_btRigidBody_setCcdSweptSphereRadius_1: lD, _emscripten_bind_btCylinderShapeZ_setMargin_1: Pw, _emscripten_bind_btRigidBody_setFriction_1: rD, _emscripten_bind_LocalConvexResult_set_m_hitPointLocal_1: nt, _emscripten_bind_btGhostObject_setWorldTransform_1: Jz, _emscripten_bind_btDiscreteDynamicsWorld_removeRigidBody_1: Lx, _emscripten_bind_btTranslationalLimitMotor2_set_m_currentLinearDiff_1: lE, _emscripten_bind_btConvexHullShape___destroy___0: ow, _emscripten_bind_btDiscreteDynamicsWorld_getBroadphase_0: Cx, _emscripten_bind_btVector4_setX_1: ZE, _emscripten_bind_btKinematicCharacterController_jump_0: jA, _emscripten_bind_btWheelInfo_set_m_raycastInfo_1: OF, _emscripten_bind_btConeTwistConstraint_setMaxMotorImpulseNormalized_1: Yv, _emscripten_bind_btConvexTriangleMeshShape_setLocalScaling_1: Dw, _emscripten_bind_btRigidBody_upcast_1: AD, _emscripten_bind_btCollisionObject_getWorldTransform_0: Nu, _emscripten_bind_btVector4_setZ_1: $E, _emscripten_bind_btManifoldPoint_set_m_positionWorldOnB_1: KA, ___cxa_can_catch: UG, _emscripten_bind_btTransform_getBasis_0: dE, _emscripten_bind_btPairCachingGhostObject_setFriction_1: mB, _emscripten_bind_btManifoldPoint___destroy___0: xA, _emscripten_bind_btDispatcherInfo_set_m_useEpa_1: ky, _emscripten_bind_btCollisionDispatcher_getNumManifolds_0: Gu, _emscripten_bind_btWheelInfo_set_m_bIsFrontWheel_1: IF, _emscripten_bind_ClosestRayResultCallback___destroy___0: ys, _emscripten_bind_btGeneric6DofSpringConstraint_setStiffness_2: mz, _emscripten_bind_btCylinderShapeX_setMargin_1: Jw, _emscripten_bind_btQuadWord_w_0: NB, _emscripten_bind_btGhostObject_setCcdMotionThreshold_1: Bz, _emscripten_bind_btDiscreteDynamicsWorld_contactTest_2: Ax, _emscripten_bind_btGeneric6DofSpring2Constraint_btGeneric6DofSpring2Constraint_3: Oy, _emscripten_bind_btBvhTriangleMeshShape_calculateLocalInertia_2: iu, _emscripten_bind_btCompoundShape_getNumChildShapes_0: vv, _emscripten_bind_btGhostObject_btGhostObject_0: qz, _emscripten_bind_ClosestConvexResultCallback_ClosestConvexResultCallback_2: gs, _emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalAngularDampingFactor_1: CC, _emscripten_bind_btManifoldPoint_set_m_localPointA_1: GA, _emscripten_bind_LocalConvexResult___destroy___0: et, _emscripten_bind_btVector3_dot_1: CE, _emscripten_bind_btVector4_op_add_1: VE, _emscripten_bind_btWheelInfo___destroy___0: sF, _emscripten_bind_btTransform_setRotation_1: iE, _emscripten_bind_btPairCachingGhostObject_getNumOverlappingObjects_0: aB, _emscripten_bind_btPoint2PointConstraint_enableFeedback_1: zB, _emscripten_bind_ClosestRayResultCallback_set_m_collisionFilterGroup_1: Hs, _emscripten_bind_btAxisSweep3_btAxisSweep3_2: Wt, _emscripten_bind_btAxisSweep3_btAxisSweep3_3: Xt, _emscripten_bind_btDynamicsWorld___destroy___0: oy, _emscripten_bind_btVector3_setY_1: KE, _emscripten_bind_btAxisSweep3_btAxisSweep3_4: Yt, _emscripten_bind_btAxisSweep3_btAxisSweep3_5: Zt, _emscripten_bind_btQuadWord_setX_1: KB, _emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalLinearDampingThresholdSqr_0: uC, _emscripten_bind_btGhostObject_isActive_0: xz, _emscripten_bind_btOverlappingPairCache___destroy___0: SA, _emscripten_bind_btVector3_normalize_0: EE, _emscripten_bind_btConstraintSetting___destroy___0: aw, _emscripten_bind_RayResultCallback___destroy___0: ut, _emscripten_bind_RaycastInfo_get_m_contactNormalWS_0: Dt, _emscripten_bind_btTranslationalLimitMotor2_get_m_currentLinearDiff_0: kE, _emscripten_bind_btPersistentManifold_getBody0_0: sB, _emscripten_bind_btConeShapeX_btConeShapeX_2: Dv, _emscripten_bind_btQuaternion_z_0: aC, _emscripten_bind_btConeTwistConstraint_enableFeedback_1: Rv, _emscripten_bind_btStaticPlaneShape_calculateLocalInertia_2: ZD, _emscripten_bind_btCapsuleShapeZ_setLocalScaling_1: uu, _emscripten_bind_btRigidBody_applyTorque_1: WC, _emscripten_bind_btSliderConstraint_setUpperLinLimit_1: QD, _emscripten_bind_btConeTwistConstraint_btConeTwistConstraint_2: Pv, _emscripten_bind_btConcaveShape___destroy___0: zv, _emscripten_bind_btConeTwistConstraint_btConeTwistConstraint_4: Qv, _emscripten_bind_btQuaternion_x_0: _B, _emscripten_bind_LocalConvexResult_set_m_hitNormalLocal_1: mt, _emscripten_bind_btConcaveShape_setLocalScaling_1: Bv, _emscripten_bind_btDiscreteDynamicsWorld_getDispatchInfo_0: Dx, _emscripten_bind_btConeShapeX_setLocalScaling_1: Fv, _emscripten_bind_btCylinderShapeZ_setLocalScaling_1: Ow, _emscripten_bind_btConvexHullShape_btConvexHullShape_0: rw, _emscripten_bind_btWheelInfo_set_m_maxSuspensionForce_1: MF, _emscripten_bind_ClosestRayResultCallback_set_m_collisionFilterMask_1: Is, _emscripten_bind_btRotationalLimitMotor2___destroy___0: CD, _emscripten_bind_btGhostObject___destroy___0: nz, _emscripten_bind_btGhostObject_setContactProcessingThreshold_1: Fz, _emscripten_bind_btCollisionWorld_getBroadphase_0: jv, _emscripten_bind_btQuaternion___destroy___0: RB, _emscripten_bind_btCollisionDispatcher_getManifoldByIndexInternal_1: Fu, _emscripten_bind_btDefaultMotionState_btDefaultMotionState_2: ix, _emscripten_bind_btDefaultMotionState_btDefaultMotionState_0: cx, _emscripten_bind_btDefaultMotionState_btDefaultMotionState_1: hx, _pthread_self: eH, _emscripten_bind_btCompoundShape_getChildShape_1: tv, _emscripten_bind_btKinematicCharacterController_canJump_0: fA, _emscripten_bind_btVector4_length_0: TE, _emscripten_bind_btRigidBody_isActive_0: eD, _emscripten_bind_btRaycastVehicle_btRaycastVehicle_3: eC, _emscripten_bind_btMotionState_setWorldTransform_1: RA, _emscripten_bind_btCylinderShape_setLocalScaling_1: Uw, _emscripten_bind_btPairCachingGhostObject_getWorldTransform_0: cB, _emscripten_bind_btCompoundShape_calculateLocalInertia_2: sv, _emscripten_bind_btCollisionWorld_getDispatchInfo_0: kv, _emscripten_bind_btRigidBody_setCollisionShape_1: oD, _emscripten_bind_btConeShapeX___destroy___0: Cv, _emscripten_bind_btCollisionObject_getCollisionFlags_0: Lu, _emscripten_bind_btDispatcherInfo_set_m_enableSatConvex_1: ey, _emscripten_bind_btConeTwistConstraint_enableMotor_1: Sv, _emscripten_bind_btRaycastVehicle_setCoordinateSystem_3: kC, _emscripten_bind_btKinematicCharacterController_btKinematicCharacterController_4: eA, _emscripten_bind_btPairCachingGhostObject_setRestitution_1: nB, _emscripten_bind_btBroadphaseInterface___destroy___0: eu, _emscripten_bind_btSliderConstraint_getBreakingImpulseThreshold_0: LD, _emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalDampingFactor_1: EC, _emscripten_bind_btCollisionObject_setContactProcessingThreshold_1: Wu, _emscripten_bind_btCompoundShape___destroy___0: ov, _emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalAngularDampingFactor_0: qC, _emscripten_bind_btCapsuleShapeX_setMargin_1: pu, _emscripten_bind_btSequentialImpulseConstraintSolver___destroy___0: FD, _emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalLinearDampingThresholdSqr_1: GC, _emscripten_bind_btRigidBody_getCollisionFlags_0: $C, _emscripten_bind_btCollisionShape_setLocalScaling_1: bv, _emscripten_bind_ClosestConvexResultCallback_get_m_closestHitFraction_0: is, _emscripten_bind_LocalConvexResult_get_m_hitCollisionObject_0: ft, _emscripten_bind_btMatrix3x3_setEulerZYX_3: OA, _emscripten_bind_btRigidBody_setRollingFriction_1: xD, _emscripten_bind_btDispatcherInfo_get_m_convexConservativeDistanceThreshold_0: Sx, _emscripten_bind_ClosestRayResultCallback_get_m_hitNormalWorld_0: Cs, _emscripten_bind_btRigidBody_setMotionState_1: vD, _emscripten_bind_RayResultCallback_get_m_collisionFilterMask_0: wt, _emscripten_bind_btCollisionWorld_getDispatcher_0: lv, _emscripten_bind_btVector4_dot_1: SE, _emscripten_bind_btCollisionObject_setRollingFriction_1: Zu, _emscripten_bind_RayResultCallback_set_m_collisionFilterGroup_1: zt, _emscripten_bind_btTriangleMesh_btTriangleMesh_1: tE, _emscripten_bind_btRotationalLimitMotor2_get_m_currentPosition_0: DD, _i64Subtract: XG, _emscripten_bind_btCylinderShapeX_getMargin_0: Hw, _emscripten_bind_btRigidBody_setDamping_2: qD, _emscripten_bind_btDynamicsWorld_getDispatcher_0: yy, _emscripten_bind_btGhostObject_setCollisionFlags_1: Dz, _emscripten_bind_btMatrix3x3_getRotation_1: MA, _emscripten_bind_btWheelInfo_set_m_engineForce_1: KF, _emscripten_bind_btConeTwistConstraint_setMaxMotorImpulse_1: Zv, _emscripten_bind_btPersistentManifold_getNumContacts_0: vB, _emscripten_bind_btCylinderShapeX_setLocalScaling_1: Iw, _emscripten_bind_btDbvtBroadphase_btDbvtBroadphase_0: Xw, _emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalDamping_0: tC, _emscripten_bind_btCompoundShape_setLocalScaling_1: xv, _emscripten_bind_btOverlappingPairCallback___destroy___0: UA, _emscripten_bind_btDynamicsWorld_convexSweepTest_5: vy, _emscripten_bind_btCylinderShape_calculateLocalInertia_2: Sw, _emscripten_bind_btPairCachingGhostObject_setCcdSweptSphereRadius_1: iB, _emscripten_bind_btRigidBody_getCollisionShape_0: aD, _emscripten_bind_btRigidBody_setContactProcessingThreshold_1: pD, _emscripten_bind_btRigidBody_getLinearVelocity_0: bD, _emscripten_bind_btRigidBody_applyImpulse_2: UC, _emscripten_bind_btConcaveShape_calculateLocalInertia_2: Av, _emscripten_bind_RaycastInfo_get_m_groundObject_0: Ft, _emscripten_bind_btRigidBody_setWorldTransform_1: zD, _emscripten_bind_btRigidBody_setAngularVelocity_1: iD, _emscripten_bind_btGeneric6DofSpringConstraint_btGeneric6DofSpringConstraint_3: bz, _emscripten_bind_btConvexShape_setLocalScaling_1: yw, _emscripten_bind_btTriangleMeshShape_calculateLocalInertia_2: nE, _free: rG, _emscripten_bind_btPairCachingGhostObject_setContactProcessingThreshold_1: lB, _emscripten_bind_btGeneric6DofConstraint_setLinearUpperLimit_1: My, _emscripten_bind_ClosestRayResultCallback_get_m_collisionFilterMask_0: As, _emscripten_bind_RayResultCallback_hasHit_0: yt, _bitshift64Shl: _G, _emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalAngularDampingThresholdSqr_0: rC, _emscripten_bind_btVehicleTuning_get_m_suspensionDamping_0: kF, _emscripten_bind_btRaycastVehicle_getWheelTransformWS_1: iC, _emscripten_bind_btQuaternion_normalize_0: TB, _emscripten_bind_ClosestConvexResultCallback_get_m_convexToWorld_0: ms, _emscripten_bind_btQuadWord_setZ_1: MB, _emscripten_bind_btConeShapeZ_setLocalScaling_1: Jv, _emscripten_bind_btPairCachingGhostObject_setActivationState_1: fB, _emscripten_bind_btGeneric6DofSpringConstraint___destroy___0: az, _emscripten_bind_btConvexTriangleMeshShape___destroy___0: zw, _emscripten_bind_btVehicleTuning_set_m_maxSuspensionTravelCm_1: oF, _emscripten_bind_btGhostObject_setRollingFriction_1: Iz, _emscripten_bind_btCylinderShapeZ_btCylinderShapeZ_1: Lw, _emscripten_bind_btRigidBody_getAngularVelocity_0: ZC, _emscripten_bind_btCompoundShape_btCompoundShape_0: qv, _emscripten_bind_btCompoundShape_btCompoundShape_1: rv, _emscripten_bind_btOverlappingPairCache_setInternalGhostPairCallback_1: TA, _emscripten_bind_btStaticPlaneShape_btStaticPlaneShape_2: YD, _emscripten_bind_btSphereShape_getMargin_0: UD, _emscripten_bind_btDispatcherInfo_get_m_useContinuous_0: Zx, _emscripten_bind_btRigidBody_updateInertiaTensor_0: BD, _emscripten_bind_btPairCachingGhostObject_setAnisotropicFriction_2: gB, _emscripten_bind_btTransform_setOrigin_1: hE, _emscripten_bind_ClosestRayResultCallback_hasHit_0: Gs, _emscripten_bind_btCompoundShape_addChildShape_2: pv, _emscripten_bind_btDispatcher___destroy___0: ly, _emscripten_bind_btVehicleTuning_get_m_suspensionCompression_0: jF, _emscripten_bind_btDiscreteDynamicsWorld___destroy___0: px, _emscripten_bind_btConvexShape___destroy___0: ww, _emscripten_bind_btGeneric6DofSpring2Constraint_setLinearLowerLimit_1: Zy, _emscripten_bind_btCapsuleShapeX_setLocalScaling_1: ou, _emscripten_bind_btQuadWord_y_0: PB, _emscripten_bind_btCollisionObject_setRestitution_1: Yu, _emscripten_bind_btRigidBody_applyCentralForce_1: RC, _emscripten_bind_LocalConvexResult_get_m_hitFraction_0: gt, _emscripten_bind_btDispatcherInfo_get_m_enableSPU_0: Ux, _emscripten_bind_btQuaternion_w_0: ZB, _emscripten_bind_ConvexResultCallback_get_m_collisionFilterGroup_0: Zs, _emscripten_bind_btTransform_getRotation_0: fE, _emscripten_bind_btHingeConstraint_btHingeConstraint_6: Wz, _emscripten_bind_btHingeConstraint_btHingeConstraint_7: Xz, _emscripten_bind_LocalConvexResult_get_m_hitNormalLocal_0: ht, _emscripten_bind_btHingeConstraint_btHingeConstraint_5: Vz, _emscripten_bind_btHingeConstraint_btHingeConstraint_2: Sz, _emscripten_bind_btHingeConstraint_btHingeConstraint_3: Tz, _emscripten_bind_RaycastInfo___destroy___0: Ct, _emscripten_bind_btBoxShape_setMargin_1: du, _emscripten_bind_ClosestConvexResultCallback_get_m_hitNormalWorld_0: ns, _emscripten_bind_btMatrix3x3_getRow_1: NA, _emscripten_bind_btTypedConstraint___destroy___0: vE, _emscripten_bind_btCylinderShapeX_btCylinderShapeX_1: Fw, _emscripten_enum_RotateOrder_RO_XYZ: XF, _emscripten_bind_btGeneric6DofSpringConstraint_setAngularUpperLimit_1: hz, _emscripten_bind_btConeTwistConstraint_setDamping_1: Wv, _emscripten_bind_btDiscreteDynamicsWorld_addRigidBody_1: wx, _bitshift64Ashr: $G, _emscripten_bind_btQuaternion_btQuaternion_4: SB, _emscripten_bind_btSphereShape_btSphereShape_1: SD, _emscripten_bind_btWheelInfo_get_m_wheelsSuspensionForce_0: HF, _emscripten_bind_btQuaternion_y_0: $B, _emscripten_bind_btCollisionWorld_addCollisionObject_1: dv, _emscripten_bind_btCollisionWorld_addCollisionObject_2: ev, _emscripten_bind_btCollisionWorld_addCollisionObject_3: fv, _emscripten_bind_ClosestConvexResultCallback_set_m_collisionFilterGroup_1: rs, _emscripten_bind_btConeTwistConstraint_setBreakingImpulseThreshold_1: Vv, _emscripten_bind_RaycastInfo_get_m_isInContact_0: Ht, _emscripten_bind_btGeneric6DofSpring2Constraint_setLinearUpperLimit_1: _y, _emscripten_bind_ClosestConvexResultCallback_get_m_collisionFilterGroup_0: js, _emscripten_bind_btCapsuleShape_setMargin_1: Bu, _emscripten_bind_btDefaultVehicleRaycaster_btDefaultVehicleRaycaster_1: ox, _emscripten_bind_ConcreteContactResultCallback_addSingleResult_7: Us, _emscripten_bind_btManifoldPoint_get_m_positionWorldOnB_0: FA, _emscripten_bind_btSequentialImpulseConstraintSolver_btSequentialImpulseConstraintSolver_0: GD, _emscripten_bind_btActionInterface___destroy___0: Ut, _emscripten_bind_btDefaultMotionState_setWorldTransform_1: lx, _emscripten_bind_btCollisionWorld_contactTest_2: hv, _emscripten_bind_RayResultCallback_get_m_collisionObject_0: xt, _emscripten_bind_btPoint2PointConstraint_getPivotInA_0: BB, _emscripten_bind_ClosestConvexResultCallback_get_m_convexFromWorld_0: ls, _emscripten_bind_btVector4_setY_1: _E, _emscripten_bind_btCompoundShape_setMargin_1: yv, _emscripten_bind_btGhostObject_setRestitution_1: Hz, _emscripten_bind_btDynamicsWorld_addCollisionObject_1: qy, _emscripten_bind_ClosestConvexResultCallback_get_m_collisionFilterMask_0: ks, _emscripten_bind_btDynamicsWorld_addCollisionObject_3: sy, _emscripten_bind_btDynamicsWorld_addCollisionObject_2: ry, _emscripten_bind_btDiscreteDynamicsWorld_getDispatcher_0: Ex, _emscripten_bind_btWheelInfo_get_m_maxSuspensionTravelCm_0: yF, _emscripten_bind_btVector4_op_mul_1: WE, _emscripten_bind_btCylinderShape_btCylinderShape_1: Rw, _emscripten_bind_btRotationalLimitMotor2_set_m_currentPosition_1: ED, _emscripten_bind_btVector3___destroy___0: zE, _bitshift64Lshr: aH, _emscripten_bind_btRigidBody_setAngularFactor_1: hD, _emscripten_bind_btCylinderShapeZ_calculateLocalInertia_2: Mw, _emscripten_bind_btWheelInfo_set_m_steering_1: QF, _emscripten_bind_btMotionState_getWorldTransform_1: QA, _emscripten_bind_btDynamicsWorld_getSolverInfo_0: Ay, _emscripten_bind_btDispatcherInfo_set_m_dispatchFunc_1: cy, _emscripten_bind_btDispatcherInfo_set_m_convexConservativeDistanceThreshold_1: by, _emscripten_bind_btGeneric6DofSpring2Constraint_btGeneric6DofSpring2Constraint_5: Py, _emscripten_bind_btVector3_x_0: ME, ___cxa_is_pointer_type: VG, _emscripten_bind_btRigidBodyConstructionInfo_btRigidBodyConstructionInfo_3: oC, _emscripten_bind_btCollisionObject_getCollisionShape_0: Mu, _emscripten_bind_btRigidBodyConstructionInfo_btRigidBodyConstructionInfo_4: pC, _emscripten_bind_btBoxShape_calculateLocalInertia_2: au, _emscripten_bind_btRigidBodyConstructionInfo_set_m_rollingFriction_1: NC, _emscripten_bind_btVector3_z_0: OE, _emscripten_bind_btDefaultMotionState_set_m_graphicsWorldTrans_1: mx, _emscripten_bind_ClosestConvexResultCallback___destroy___0: hs, _emscripten_bind_btDefaultCollisionConstructionInfo___destroy___0: $w, _emscripten_bind_btCollisionObject_setFriction_1: Xu, _emscripten_bind_btDefaultCollisionConfiguration___destroy___0: Yw, _emscripten_bind_btRigidBody_setMassProps_2: uD, _emscripten_bind_btVector3_setValue_3: IE, _emscripten_bind_btPairCachingGhostObject_setCcdMotionThreshold_1: hB, _emscripten_bind_RaycastInfo_get_m_suspensionLength_0: It, _emscripten_bind_btGhostObject_getCollisionFlags_0: sz, _emscripten_bind_btCapsuleShapeX___destroy___0: ku, _emscripten_bind_btHingeConstraint_setLimit_4: aA, _emscripten_bind_btHingeConstraint_setLimit_5: bA, _emscripten_bind_btWheelInfo_get_m_wheelsDampingRelaxation_0: FF, _emscripten_bind_btWheelInfo_set_m_maxSuspensionTravelCm_1: NF, _emscripten_bind_btConeShape_setLocalScaling_1: Nv, _emscripten_bind_btKinematicCharacterController_setJumpSpeed_1: pA, _emscripten_bind_btTypedConstraint_getBreakingImpulseThreshold_0: xE, _emscripten_bind_btGhostObject_getCollisionShape_0: tz, _emscripten_bind_btCollisionObject_setAnisotropicFriction_2: Ru, _emscripten_bind_btBoxShape___destroy___0: _t, _emscripten_bind_btWheelInfo_get_m_bIsFrontWheel_0: tF, _emscripten_bind_btPersistentManifold_getContactPoint_1: uB, _emscripten_bind_btVector3_btVector3_0: AE, _emscripten_bind_btGeneric6DofSpringConstraint_getBreakingImpulseThreshold_0: fz, _emscripten_bind_btConeShapeX_calculateLocalInertia_2: Ev, _emscripten_bind_RaycastInfo_set_m_groundObject_1: Nt, _emscripten_bind_btGhostObject_activate_1: pz, _emscripten_bind_btGeneric6DofSpringConstraint_enableSpring_2: ez, _emscripten_bind_btManifoldPoint_getPositionWorldOnB_0: AA, _emscripten_bind_btManifoldPoint_get_m_positionWorldOnA_0: EA, _emscripten_bind_btGeneric6DofSpringConstraint_enableFeedback_1: dz, _emscripten_bind_btSphereShape_setMargin_1: WD, _emscripten_bind_btRigidBodyConstructionInfo___destroy___0: nC, _emscripten_bind_btConeShapeZ_btConeShapeZ_2: Hv, _emscripten_bind_btContactSolverInfo_set_m_splitImpulsePenetrationThreshold_1: mw, _emscripten_bind_btSliderConstraint_setUpperAngLimit_1: PD, _emscripten_bind_btDynamicsWorld_contactPairTest_3: ty, _emscripten_bind_btCollisionWorld_getPairCache_0: mv, _emscripten_bind_btConeTwistConstraint_setMotorTarget_1: $v, _emscripten_bind_ClosestConvexResultCallback_set_m_convexFromWorld_1: ts, _emscripten_bind_btWheelInfo_set_m_rollInfluence_1: PF, _emscripten_bind_btRigidBody_getWorldTransform_0: dD, _emscripten_bind_btDefaultCollisionConstructionInfo_btDefaultCollisionConstructionInfo_0: ax, _emscripten_bind_btGhostObject_forceActivationState_1: rz, _emscripten_bind_ConcreteContactResultCallback_ConcreteContactResultCallback_0: Os, _emscripten_bind_VoidPtr___destroy___0: Tt, _emscripten_bind_btSliderConstraint_setLowerAngLimit_1: ND, _emscripten_bind_btVector4_op_sub_1: XE, _emscripten_bind_RaycastInfo_set_m_contactPointWS_1: Mt, _emscripten_bind_btConeShape_btConeShape_2: Lv, _emscripten_bind_ClosestRayResultCallback_get_m_rayFromWorld_0: Es, _emscripten_bind_btRaycastVehicle_getRigidBody_0: gC, _emscripten_enum_RotateOrder_RO_YZX: _F, _emscripten_bind_RayResultCallback_get_m_collisionFilterGroup_0: vt, _emscripten_bind_btWheelInfo_get_m_steering_0: BF, _emscripten_bind_btConstraintSetting_get_m_tau_0: ew, _emscripten_bind_btSliderConstraint___destroy___0: HD, _emscripten_bind_btCollisionObject_setCollisionShape_1: Vu, _emscripten_bind_btCollisionShape___destroy___0: $u, _emscripten_bind_ConvexResultCallback_get_m_closestHitFraction_0: Ys, _emscripten_bind_btDispatcherInfo_get_m_dispatchFunc_0: Tx, _emscripten_bind_btRigidBodyConstructionInfo_get_m_rollingFriction_0: BC, _emscripten_bind_btPairCachingGhostObject_setCollisionShape_1: kB, _emscripten_bind_btKinematicCharacterController_warp_1: wA, _emscripten_bind_btAxisSweep3___destroy___0: Vt, _emscripten_bind_btTriangleMesh___destroy___0: pE, _emscripten_bind_btKinematicCharacterController_preStep_1: mA, _emscripten_bind_btRaycastVehicle_applyEngineForce_2: dC, _emscripten_bind_btRaycastVehicle_setBrake_2: jC, _emscripten_bind_ConcreteContactResultCallback___destroy___0: Ts, _emscripten_bind_RaycastInfo_set_m_wheelAxleWS_1: Rt, _emscripten_bind_btGeneric6DofSpring2Constraint_setAngularLowerLimit_1: Vy, _emscripten_bind_btCollisionObject___destroy___0: Hu, _emscripten_bind_btVehicleTuning_set_m_suspensionDamping_1: qF, _emscripten_bind_btRigidBodyConstructionInfo_set_m_linearSleepingThreshold_1: LC, _emscripten_bind_btConeTwistConstraint_setMotorTargetInConstraintSpace_1: _v, _emscripten_bind_btDispatcherInfo_set_m_timeStep_1: hy, _emscripten_bind_btVector3_btVector3_3: BE, _emscripten_bind_RaycastInfo_set_m_contactNormalWS_1: Lt, _emscripten_bind_btRigidBodyConstructionInfo_set_m_friction_1: JC, _emscripten_bind_btDiscreteDynamicsWorld_getGravity_0: Fx, _emscripten_bind_ClosestConvexResultCallback_get_m_hitPointWorld_0: os, _emscripten_bind_btRigidBody_isKinematicObject_0: fD, _emscripten_bind_btGeneric6DofSpring2Constraint_setStiffness_2: $y, _emscripten_bind_RaycastInfo_get_m_hardPointWS_0: Gt, _emscripten_bind_btConeTwistConstraint___destroy___0: Ov, _emscripten_bind_btQuadWord___destroy___0: IB, _emscripten_bind_ClosestRayResultCallback_set_m_rayFromWorld_1: Ms, _emscripten_bind_btGeneric6DofSpringConstraint_setDamping_2: jz, _emscripten_bind_RaycastInfo_get_m_wheelDirectionWS_0: Kt, _emscripten_bind_btSliderConstraint_setBreakingImpulseThreshold_1: MD, _emscripten_bind_btGhostObject_setAnisotropicFriction_2: Az, _emscripten_bind_btConstraintSolver___destroy___0: iw, _emscripten_bind_btDbvtBroadphase___destroy___0: Ww, _emscripten_bind_btCapsuleShape_btCapsuleShape_2: xu, _emscripten_bind_btTypedConstraint_enableFeedback_1: wE, _emscripten_bind_btGhostObject_activate_0: oz, _emscripten_bind_btCapsuleShape_setLocalScaling_1: Au, _emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalDampingFactor_0: sC, _emscripten_bind_btRigidBody_setAnisotropicFriction_2: jD, _emscripten_bind_btTriangleMeshShape_setLocalScaling_1: oE, _emscripten_bind_ConvexResultCallback_set_m_closestHitFraction_1: at, _emscripten_bind_btVector3_op_add_1: FE, _emscripten_bind_btPersistentManifold_btPersistentManifold_0: rB, _emscripten_bind_ConvexResultCallback_get_m_collisionFilterMask_0: _s, _emscripten_bind_ClosestRayResultCallback_ClosestRayResultCallback_2: xs, _emscripten_bind_btVector4___destroy___0: PE, _emscripten_bind_btPairCachingGhostObject_isKinematicObject_0: eB, _emscripten_bind_btConstraintSetting_get_m_damping_0: cw, _i64Add: YG, _emscripten_bind_btContactSolverInfo_set_m_splitImpulse_1: nw, _emscripten_bind_btVehicleTuning_set_m_maxSuspensionForce_1: nF, _emscripten_bind_btCollisionObject_setCcdMotionThreshold_1: Su, _emscripten_bind_btDefaultCollisionConfiguration_btDefaultCollisionConfiguration_0: Zw, _emscripten_bind_btDefaultCollisionConfiguration_btDefaultCollisionConfiguration_1: _w, _emscripten_bind_btKinematicCharacterController_btKinematicCharacterController_3: dA, _emscripten_bind_btRigidBodyConstructionInfo_get_m_angularSleepingThreshold_0: wC, _emscripten_bind_btPoint2PointConstraint_getPivotInB_0: CB, _emscripten_bind_btKinematicCharacterController_playerStep_2: lA, _emscripten_bind_btDispatcherInfo___destroy___0: Qx, _emscripten_bind_btCapsuleShape_getMargin_0: zu, _emscripten_bind_btCylinderShape_getMargin_0: Tw, _emscripten_bind_btStaticPlaneShape_setLocalScaling_1: _D, _emscripten_bind_btConvexTriangleMeshShape_calculateLocalInertia_2: Cw, _emscripten_bind_ContactResultCallback_addSingleResult_7: Ws, _emscripten_bind_btGhostObject_getWorldTransform_0: wz, _emscripten_bind_btDiscreteDynamicsWorld_getPairCache_0: Gx, _emscripten_bind_LocalConvexResult_set_m_hitFraction_1: lt, _emscripten_bind_btCapsuleShapeZ_calculateLocalInertia_2: su, _emscripten_bind_btDispatcherInfo_get_m_timeStep_0: Yx, _emscripten_bind_btWheelInfo_get_m_frictionSlip_0: wF, _emscripten_bind_btVehicleTuning_set_m_suspensionCompression_1: pF, _emscripten_bind_btConstraintSetting_set_m_impulseClamp_1: gw, _emscripten_bind_btMotionState___destroy___0: PA, _emscripten_bind_btVector4_z_0: dF, _emscripten_bind_btCollisionObject_setCollisionFlags_1: Uu, _emscripten_bind_btGeneric6DofSpring2Constraint_getTranslationalLimitMotor_0: Uy, _emscripten_bind_btDiscreteDynamicsWorld_addCollisionObject_1: rx, _emscripten_bind_btDiscreteDynamicsWorld_addCollisionObject_2: sx, _emscripten_bind_btDiscreteDynamicsWorld_addCollisionObject_3: tx, _emscripten_bind_btWheelInfo_set_m_suspensionStiffness_1: SF, _emscripten_bind_RaycastInfo_set_m_suspensionLength_1: Qt, _emscripten_bind_btDispatcher_getManifoldByIndexInternal_1: my, _emscripten_bind_btVector4_setValue_4: YE, _emscripten_bind_btVector4_normalize_0: UE, _emscripten_bind_LocalShapeInfo_set_m_triangleIndex_1: tt, _emscripten_bind_btPairCachingGhostObject_setWorldTransform_1: pB, _emscripten_bind_btHingeConstraint_getBreakingImpulseThreshold_0: _z, _emscripten_bind_btConeTwistConstraint_setAngularOnly_1: Uv, _emscripten_bind_btGhostObject_setCcdSweptSphereRadius_1: Cz, _emscripten_bind_btPoint2PointConstraint_btPoint2PointConstraint_4: yB, _emscripten_bind_btPoint2PointConstraint_btPoint2PointConstraint_2: xB, _emscripten_bind_btGhostObject_getNumOverlappingObjects_0: uz, _emscripten_bind_ConvexResultCallback_set_m_collisionFilterGroup_1: bt, _emscripten_bind_btPairCachingGhostObject_getOverlappingObject_1: bB, _emscripten_bind_btGeneric6DofSpring2Constraint_setDamping_2: Yy, _emscripten_bind_btGeneric6DofConstraint_setBreakingImpulseThreshold_1: Ky, _emscripten_bind_btPoint2PointConstraint_setPivotA_1: FB, _emscripten_bind_ClosestConvexResultCallback_set_m_convexToWorld_1: us, _memcpy: bH, _emscripten_bind_btCapsuleShape_calculateLocalInertia_2: yu, _emscripten_bind_btVector3_y_0: NE, _emscripten_bind_btVehicleTuning_get_m_maxSuspensionForce_0: hF, _emscripten_bind_btBvhTriangleMeshShape_btBvhTriangleMeshShape_2: gu, _emscripten_bind_btBvhTriangleMeshShape_btBvhTriangleMeshShape_3: hu, _emscripten_bind_LocalShapeInfo_get_m_triangleIndex_0: rt, _emscripten_bind_btGhostObject_setCollisionShape_1: Ez, _emscripten_bind_btDispatcherInfo_set_m_allowedCcdPenetration_1: ay, _emscripten_bind_btQuaternion_setW_1: VB, _emscripten_bind_btPairCachingGhostObject_setRollingFriction_1: oB, _emscripten_bind_btDiscreteDynamicsWorld_setGravity_1: Mx, _emscripten_bind_btVehicleTuning_set_m_suspensionStiffness_1: rF, _emscripten_bind_btGeneric6DofSpring2Constraint___destroy___0: Ny, _emscripten_bind_btCollisionObject_forceActivationState_1: Ku, _emscripten_bind_btKinematicCharacterController_onGround_0: kA, _emscripten_bind_btRaycastVehicle_getWheelInfo_1: hC, _emscripten_bind_btGeneric6DofConstraint_getBreakingImpulseThreshold_0: Hy, _emscripten_bind_btConeTwistConstraint_setLimit_2: Xv, _emscripten_bind_ClosestConvexResultCallback_set_m_collisionFilterMask_1: ss, _emscripten_bind_btRigidBody___destroy___0: OC, _emscripten_bind_btStridingMeshInterface___destroy___0: $D, _emscripten_bind_btRigidBody_setSleepingThresholds_2: yD, _emscripten_bind_btCollisionObject_setWorldTransform_1: _u, _emscripten_bind_LocalConvexResult_get_m_localShapeInfo_0: jt, _emscripten_bind_btManifoldPoint_get_m_localPointA_0: BA, _emscripten_bind_btRigidBodyConstructionInfo_get_m_linearDamping_0: yC, _emscripten_bind_btGeneric6DofSpring2Constraint_enableFeedback_1: Qy, _emscripten_bind_btDispatcher_getNumManifolds_0: ny, _emscripten_bind_btRigidBodyConstructionInfo_get_m_linearSleepingThreshold_0: zC, _emscripten_bind_btRigidBody_activate_1: QC, _emscripten_bind_btRigidBody_activate_0: PC, _emscripten_bind_btRaycastVehicle___destroy___0: bC, _emscripten_bind_btGhostObject_setActivationState_1: zz, _emscripten_bind_btCollisionWorld_contactPairTest_3: gv, _emscripten_bind_btCylinderShapeX___destroy___0: Ew, _emscripten_bind_btManifoldPoint_getPositionWorldOnA_0: zA, _emscripten_bind_ContactResultCallback___destroy___0: Vs, _emscripten_bind_btDispatcherInfo_set_m_stepCount_1: fy, _emscripten_bind_btVector4_x_0: bF, _emscripten_bind_btConstraintSetting_btConstraintSetting_0: bw, _emscripten_bind_btRigidBody_getMotionState_0: cD, _emscripten_bind_btKinematicCharacterController_getGhostObject_0: gA, _emscripten_bind_btRigidBody_btRigidBody_1: XC, _emscripten_bind_btTriangleMeshShape___destroy___0: mE, _emscripten_bind_btKinematicCharacterController_setWalkDirection_1: vA, _emscripten_bind_btDynamicsWorld_removeAction_1: Cy, _emscripten_bind_btRigidBodyConstructionInfo_get_m_restitution_0: AC, _emscripten_bind_btTransform_setIdentity_0: gE, _emscripten_bind_btManifoldPoint_set_m_normalWorldOnB_1: IA, _emscripten_bind_btKinematicCharacterController_getGravity_0: hA, _emscripten_bind_btConeTwistConstraint_getBreakingImpulseThreshold_0: Tv, _emscripten_bind_btDiscreteDynamicsWorld_addAction_1: qx, _emscripten_bind_btHingeConstraint_btHingeConstraint_4: Uz, _emscripten_bind_LocalShapeInfo_get_m_shapePart_0: qt, _emscripten_bind_btConeShape_calculateLocalInertia_2: Mv, _emscripten_bind_btCylinderShapeX_calculateLocalInertia_2: Gw, _emscripten_bind_ConvexResultCallback_set_m_collisionFilterMask_1: ct, _llvm_bswap_i32: dH, _emscripten_enum_RotateOrder_RO_XZY: YF, _emscripten_bind_btSphereShape_setLocalScaling_1: VD, _emscripten_bind_btVector4_w_0: aF, _emscripten_bind_btManifoldPoint_get_m_normalWorldOnB_0: DA, _emscripten_bind_btBvhTriangleMeshShape___destroy___0: fu, _emscripten_bind_LocalConvexResult_LocalConvexResult_5: dt, _emscripten_bind_ClosestConvexResultCallback_set_m_closestHitFraction_1: qs, _emscripten_bind_btDiscreteDynamicsWorld_removeConstraint_1: Kx, _emscripten_bind_btVector4_y_0: cF, _emscripten_bind_btGeneric6DofConstraint___destroy___0: Dy, _emscripten_bind_btVehicleTuning_get_m_maxSuspensionTravelCm_0: iF, _emscripten_bind_btConvexHullShape_addPoint_1: pw, _emscripten_bind_btConvexHullShape_addPoint_2: qw, _emscripten_bind_btPoint2PointConstraint_getBreakingImpulseThreshold_0: AB, _emscripten_bind_btTransform_getOrigin_0: eE, _emscripten_enum_RotateOrder_RO_ZYX: aG, _emscripten_bind_btHingeConstraint___destroy___0: Rz, _emscripten_bind_btConvexShape_calculateLocalInertia_2: xw, _memset: ZG, _emscripten_bind_btKinematicCharacterController___destroy___0: cA, _emscripten_bind_btConvexHullShape_setLocalScaling_1: uw, _emscripten_bind_btTriangleMesh_btTriangleMesh_0: sE, _emscripten_bind_btPairCachingGhostObject_getCollisionShape_0: $A, _emscripten_bind_btTriangleMesh_btTriangleMesh_2: uE, _emscripten_bind_btTransform___destroy___0: aE, _emscripten_bind_btWheelInfo_set_m_frictionSlip_1: LF, _emscripten_bind_btHingeConstraint_enableAngularMotor_3: Yz, _emscripten_bind_btManifoldPoint_set_m_positionWorldOnA_1: JA, _emscripten_bind_btRigidBody_setCenterOfMassTransform_1: mD, _emscripten_bind_btManifoldPoint_get_m_localPointB_0: CA, _emscripten_bind_btDiscreteDynamicsWorld_contactPairTest_3: zx, _emscripten_bind_btSliderConstraint_setLowerLinLimit_1: OD, _emscripten_bind_btPoint2PointConstraint_set_m_setting_1: HB, _emscripten_bind_btCollisionObject_setCcdSweptSphereRadius_1: Tu, _emscripten_bind_btWheelInfo_get_m_wheelsRadius_0: GF, _emscripten_bind_btRigidBody_setLinearVelocity_1: tD, _emscripten_bind_btVehicleTuning_btVehicleTuning_0: fF, _emscripten_bind_RayResultCallback_set_m_collisionObject_1: Bt, _emscripten_bind_ClosestRayResultCallback_set_m_rayToWorld_1: Ns, _emscripten_bind_ClosestRayResultCallback_get_m_collisionFilterGroup_0: zs, _emscripten_bind_btWheelInfo_set_m_wheelsDampingRelaxation_1: UF, _emscripten_bind_btDynamicsWorld_addAction_1: py, _emscripten_bind_btDiscreteDynamicsWorld_removeAction_1: Jx, _emscripten_bind_btDefaultVehicleRaycaster___destroy___0: nx, _emscripten_bind_btRigidBodyConstructionInfo_set_m_linearDamping_1: KC, _emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalDamping_1: FC, _emscripten_bind_btKinematicCharacterController_setFallSpeed_1: nA, _emscripten_bind_btRigidBody_setActivationState_1: gD, _emscripten_bind_btWheelInfo_get_m_wheelsDampingCompression_0: EF, _emscripten_bind_ClosestConvexResultCallback_hasHit_0: ps, _emscripten_bind_btCapsuleShapeZ___destroy___0: qu, _emscripten_bind_btWheelInfo_get_m_maxSuspensionForce_0: xF, _emscripten_bind_ClosestRayResultCallback_get_m_collisionObject_0: Bs, _emscripten_bind_btTriangleMesh_addTriangle_3: qE, _emscripten_bind_btGhostObject_getOverlappingObject_1: vz, _emscripten_bind_btTriangleMesh_addTriangle_4: rE, _emscripten_bind_btRigidBody_applyTorqueImpulse_1: VC, _emscripten_bind_btRigidBody_setCollisionFlags_1: nD, _emscripten_bind_btWheelInfo_set_m_suspensionRestLength1_1: RF, _emscripten_bind_btConeShape___destroy___0: Kv, _emscripten_bind_btCapsuleShapeZ_btCapsuleShapeZ_2: ru, _emscripten_bind_btGeneric6DofSpring2Constraint_setBreakingImpulseThreshold_1: Xy, _emscripten_bind_btSliderConstraint_btSliderConstraint_3: ID, _emscripten_bind_btDispatcherInfo_get_m_allowedCcdPenetration_0: Rx, _emscripten_bind_RaycastInfo_set_m_hardPointWS_1: Ot, _emscripten_bind_btRigidBody_forceActivationState_1: YC, _emscripten_bind_btPoint2PointConstraint_setPivotB_1: GB, _emscripten_bind_btManifoldPoint_getDistance_0: yA, _emscripten_bind_btGhostPairCallback___destroy___0: Kz, _emscripten_bind_btKinematicCharacterController_getMaxSlope_0: iA, _emscripten_bind_btSliderConstraint_enableFeedback_1: KD, _emscripten_bind_btRaycastVehicle_addWheel_7: cC, _emscripten_bind_btPairCachingGhostObject_isActive_0: dB, _emscripten_bind_LocalConvexResult_set_m_localShapeInfo_1: ot, _emscripten_bind_btStaticPlaneShape___destroy___0: XD, _emscripten_bind_btDispatcherInfo_get_m_useConvexConservativeDistanceUtil_0: _x, _emscripten_bind_btBoxShape_setLocalScaling_1: cu, _emscripten_bind_btConeShapeZ___destroy___0: Gv, _emscripten_bind_btDynamicsWorld_getPairCache_0: zy, _emscripten_bind_btDiscreteDynamicsWorld_convexSweepTest_5: Bx, _emscripten_bind_btKinematicCharacterController_setVelocityForTimeInterval_2: uA, _emscripten_bind_btRigidBody_setRestitution_1: wD, _emscripten_bind_btVector4_btVector4_0: QE, _emscripten_bind_btDispatcherInfo_get_m_enableSatConvex_0: Vx, _emscripten_bind_btVector4_btVector4_4: RE, _emscripten_bind_btGeneric6DofConstraint_setLinearLowerLimit_1: Ly, _emscripten_bind_btGeneric6DofSpringConstraint_setLinearLowerLimit_1: kz, _emscripten_enum_RotateOrder_RO_ZXY: $F, _emscripten_bind_LocalConvexResult_set_m_hitCollisionObject_1: kt, _emscripten_bind_btPairCachingGhostObject_setCollisionFlags_1: jB, _emscripten_bind_btGeneric6DofSpringConstraint_setAngularLowerLimit_1: gz, _emscripten_bind_btDiscreteDynamicsWorld_rayTest_3: Ix, _emscripten_bind_btWheelInfo_get_m_raycastInfo_0: zF, _emscripten_bind_btContactSolverInfo_get_m_splitImpulse_0: lw, _emscripten_bind_btGhostPairCallback_btGhostPairCallback_0: Lz, _emscripten_bind_btKinematicCharacterController_setMaxJumpHeight_1: qA, _emscripten_bind_ClosestRayResultCallback_set_m_hitNormalWorld_1: Ks, _emscripten_bind_btVehicleTuning_get_m_frictionSlip_0: gF, __GLOBAL__sub_I_btConeTwistConstraint_cpp: Ro, __GLOBAL__sub_I_btQuickprof_cpp: ds, runPostSets: WG, stackAlloc: cc, stackSave: dc, stackRestore: ec, establishStackSpace: fc, setThrew: gc, setTempRet0: jc, getTempRet0: kc, dynCall_viiiii: nH, dynCall_vid: oH, dynCall_vi: pH, dynCall_viiidii: qH, dynCall_vii: rH, dynCall_iiiiiiiiiii: sH, dynCall_ii: tH, dynCall_viidi: uH, dynCall_viddiii: vH, dynCall_vidii: wH, dynCall_iiiii: xH, dynCall_vidi: yH, dynCall_diiiiiiii: zH, dynCall_viiiiddddiid: AH, dynCall_diiiii: BH, dynCall_iiii: CH, dynCall_viiiiii: DH, dynCall_iiid: EH, dynCall_di: FH, dynCall_iiiiiii: GH, dynCall_diiidii: HH, dynCall_viidii: IH, dynCall_viiiiiii: JH, dynCall_viiiiiiiii: KH, dynCall_viiiiiiiiii: LH, dynCall_iii: MH, dynCall_diii: NH, dynCall_diiiiiiiiii: OH, dynCall_viiiid: PH, dynCall_diiiiiiiii: QH, dynCall_did: RH, dynCall_viiiidddddidi: SH, dynCall_diidii: TH, dynCall_diiii: UH, dynCall_iiiiiiiiii: VH, dynCall_viiid: WH, dynCall_viii: XH, dynCall_v: YH, dynCall_viid: ZH, dynCall_iidid: _H, dynCall_viiii: $H };
        }(Module.asmGlobalArg, Module.asmLibraryArg, buffer);
        var _emscripten_bind_btCylinderShape___destroy___0 = Module["_emscripten_bind_btCylinderShape___destroy___0"] = asm["_emscripten_bind_btCylinderShape___destroy___0"];
        var _emscripten_bind_btGeneric6DofConstraint_enableFeedback_1 = Module["_emscripten_bind_btGeneric6DofConstraint_enableFeedback_1"] = asm["_emscripten_bind_btGeneric6DofConstraint_enableFeedback_1"];
        var _emscripten_bind_btDispatcherInfo_get_m_enableSPU_0 = Module["_emscripten_bind_btDispatcherInfo_get_m_enableSPU_0"] = asm["_emscripten_bind_btDispatcherInfo_get_m_enableSPU_0"];
        var _emscripten_bind_btDispatcherInfo_set_m_useContinuous_1 = Module["_emscripten_bind_btDispatcherInfo_set_m_useContinuous_1"] = asm["_emscripten_bind_btDispatcherInfo_set_m_useContinuous_1"];
        var _emscripten_bind_btCollisionObject_isActive_0 = Module["_emscripten_bind_btCollisionObject_isActive_0"] = asm["_emscripten_bind_btCollisionObject_isActive_0"];
        var _emscripten_bind_btVehicleTuning_set_m_frictionSlip_1 = Module["_emscripten_bind_btVehicleTuning_set_m_frictionSlip_1"] = asm["_emscripten_bind_btVehicleTuning_set_m_frictionSlip_1"];
        var _emscripten_bind_btDiscreteDynamicsWorld_btDiscreteDynamicsWorld_4 = Module["_emscripten_bind_btDiscreteDynamicsWorld_btDiscreteDynamicsWorld_4"] = asm["_emscripten_bind_btDiscreteDynamicsWorld_btDiscreteDynamicsWorld_4"];
        var _emscripten_bind_btCapsuleShapeX_getMargin_0 = Module["_emscripten_bind_btCapsuleShapeX_getMargin_0"] = asm["_emscripten_bind_btCapsuleShapeX_getMargin_0"];
        var _emscripten_bind_btCompoundShape_getMargin_0 = Module["_emscripten_bind_btCompoundShape_getMargin_0"] = asm["_emscripten_bind_btCompoundShape_getMargin_0"];
        var _emscripten_bind_RaycastInfo_set_m_wheelDirectionWS_1 = Module["_emscripten_bind_RaycastInfo_set_m_wheelDirectionWS_1"] = asm["_emscripten_bind_RaycastInfo_set_m_wheelDirectionWS_1"];
        var _emscripten_bind_btAxisSweep3___destroy___0 = Module["_emscripten_bind_btAxisSweep3___destroy___0"] = asm["_emscripten_bind_btAxisSweep3___destroy___0"];
        var _emscripten_bind_ClosestRayResultCallback_get_m_hitPointWorld_0 = Module["_emscripten_bind_ClosestRayResultCallback_get_m_hitPointWorld_0"] = asm["_emscripten_bind_ClosestRayResultCallback_get_m_hitPointWorld_0"];
        var _emscripten_bind_btTypedConstraint_setBreakingImpulseThreshold_1 = Module["_emscripten_bind_btTypedConstraint_setBreakingImpulseThreshold_1"] = asm["_emscripten_bind_btTypedConstraint_setBreakingImpulseThreshold_1"];
        var _emscripten_bind_btQuaternion_setX_1 = Module["_emscripten_bind_btQuaternion_setX_1"] = asm["_emscripten_bind_btQuaternion_setX_1"];
        var _emscripten_bind_btCylinderShapeZ_getMargin_0 = Module["_emscripten_bind_btCylinderShapeZ_getMargin_0"] = asm["_emscripten_bind_btCylinderShapeZ_getMargin_0"];
        var _emscripten_bind_btDispatcherInfo_get_m_timeOfImpact_0 = Module["_emscripten_bind_btDispatcherInfo_get_m_timeOfImpact_0"] = asm["_emscripten_bind_btDispatcherInfo_get_m_timeOfImpact_0"];
        var _emscripten_bind_btQuaternion_setZ_1 = Module["_emscripten_bind_btQuaternion_setZ_1"] = asm["_emscripten_bind_btQuaternion_setZ_1"];
        var _emscripten_bind_LocalConvexResult_get_m_hitNormalLocal_0 = Module["_emscripten_bind_LocalConvexResult_get_m_hitNormalLocal_0"] = asm["_emscripten_bind_LocalConvexResult_get_m_hitNormalLocal_0"];
        var _emscripten_bind_btKinematicCharacterController_setMaxSlope_1 = Module["_emscripten_bind_btKinematicCharacterController_setMaxSlope_1"] = asm["_emscripten_bind_btKinematicCharacterController_setMaxSlope_1"];
        var _emscripten_bind_btQuadWord_z_0 = Module["_emscripten_bind_btQuadWord_z_0"] = asm["_emscripten_bind_btQuadWord_z_0"];
        var _emscripten_bind_btTransform_setIdentity_0 = Module["_emscripten_bind_btTransform_setIdentity_0"] = asm["_emscripten_bind_btTransform_setIdentity_0"];
        var _emscripten_bind_btWheelInfo_get_m_suspensionRestLength1_0 = Module["_emscripten_bind_btWheelInfo_get_m_suspensionRestLength1_0"] = asm["_emscripten_bind_btWheelInfo_get_m_suspensionRestLength1_0"];
        var _emscripten_bind_btWheelInfo_get_m_suspensionStiffness_0 = Module["_emscripten_bind_btWheelInfo_get_m_suspensionStiffness_0"] = asm["_emscripten_bind_btWheelInfo_get_m_suspensionStiffness_0"];
        var _emscripten_bind_btGeneric6DofSpring2Constraint_getBreakingImpulseThreshold_0 = Module["_emscripten_bind_btGeneric6DofSpring2Constraint_getBreakingImpulseThreshold_0"] = asm["_emscripten_bind_btGeneric6DofSpring2Constraint_getBreakingImpulseThreshold_0"];
        var _emscripten_bind_btQuaternion_setW_1 = Module["_emscripten_bind_btQuaternion_setW_1"] = asm["_emscripten_bind_btQuaternion_setW_1"];
        var _emscripten_bind_RaycastInfo_get_m_wheelAxleWS_0 = Module["_emscripten_bind_RaycastInfo_get_m_wheelAxleWS_0"] = asm["_emscripten_bind_RaycastInfo_get_m_wheelAxleWS_0"];
        var _emscripten_bind_btRigidBodyConstructionInfo_get_m_angularDamping_0 = Module["_emscripten_bind_btRigidBodyConstructionInfo_get_m_angularDamping_0"] = asm["_emscripten_bind_btRigidBodyConstructionInfo_get_m_angularDamping_0"];
        var _emscripten_bind_btCollisionDispatcher___destroy___0 = Module["_emscripten_bind_btCollisionDispatcher___destroy___0"] = asm["_emscripten_bind_btCollisionDispatcher___destroy___0"];
        var _emscripten_bind_btRigidBody_applyCentralImpulse_1 = Module["_emscripten_bind_btRigidBody_applyCentralImpulse_1"] = asm["_emscripten_bind_btRigidBody_applyCentralImpulse_1"];
        var _emscripten_bind_btConvexHullShape_getMargin_0 = Module["_emscripten_bind_btConvexHullShape_getMargin_0"] = asm["_emscripten_bind_btConvexHullShape_getMargin_0"];
        var _emscripten_bind_btDefaultMotionState_getWorldTransform_1 = Module["_emscripten_bind_btDefaultMotionState_getWorldTransform_1"] = asm["_emscripten_bind_btDefaultMotionState_getWorldTransform_1"];
        var _emscripten_bind_btDiscreteDynamicsWorld_stepSimulation_1 = Module["_emscripten_bind_btDiscreteDynamicsWorld_stepSimulation_1"] = asm["_emscripten_bind_btDiscreteDynamicsWorld_stepSimulation_1"];
        var _emscripten_bind_btDiscreteDynamicsWorld_stepSimulation_3 = Module["_emscripten_bind_btDiscreteDynamicsWorld_stepSimulation_3"] = asm["_emscripten_bind_btDiscreteDynamicsWorld_stepSimulation_3"];
        var _emscripten_bind_btDiscreteDynamicsWorld_stepSimulation_2 = Module["_emscripten_bind_btDiscreteDynamicsWorld_stepSimulation_2"] = asm["_emscripten_bind_btDiscreteDynamicsWorld_stepSimulation_2"];
        var _emscripten_bind_btVector3_op_mul_1 = Module["_emscripten_bind_btVector3_op_mul_1"] = asm["_emscripten_bind_btVector3_op_mul_1"];
        var _emscripten_bind_btDynamicsWorld_rayTest_3 = Module["_emscripten_bind_btDynamicsWorld_rayTest_3"] = asm["_emscripten_bind_btDynamicsWorld_rayTest_3"];
        var _emscripten_bind_btRaycastVehicle_updateWheelTransform_2 = Module["_emscripten_bind_btRaycastVehicle_updateWheelTransform_2"] = asm["_emscripten_bind_btRaycastVehicle_updateWheelTransform_2"];
        var _emscripten_bind_btQuadWord_x_0 = Module["_emscripten_bind_btQuadWord_x_0"] = asm["_emscripten_bind_btQuadWord_x_0"];
        var _emscripten_bind_btCollisionObject_isKinematicObject_0 = Module["_emscripten_bind_btCollisionObject_isKinematicObject_0"] = asm["_emscripten_bind_btCollisionObject_isKinematicObject_0"];
        var _emscripten_bind_btWheelInfo_set_m_chassisConnectionPointCS_1 = Module["_emscripten_bind_btWheelInfo_set_m_chassisConnectionPointCS_1"] = asm["_emscripten_bind_btWheelInfo_set_m_chassisConnectionPointCS_1"];
        var _emscripten_bind_btSphereShape___destroy___0 = Module["_emscripten_bind_btSphereShape___destroy___0"] = asm["_emscripten_bind_btSphereShape___destroy___0"];
        var _emscripten_bind_btGeneric6DofSpringConstraint_setLinearUpperLimit_1 = Module["_emscripten_bind_btGeneric6DofSpringConstraint_setLinearUpperLimit_1"] = asm["_emscripten_bind_btGeneric6DofSpringConstraint_setLinearUpperLimit_1"];
        var _emscripten_bind_ClosestConvexResultCallback_set_m_hitNormalWorld_1 = Module["_emscripten_bind_ClosestConvexResultCallback_set_m_hitNormalWorld_1"] = asm["_emscripten_bind_ClosestConvexResultCallback_set_m_hitNormalWorld_1"];
        var _emscripten_bind_btRigidBody_getCenterOfMassTransform_0 = Module["_emscripten_bind_btRigidBody_getCenterOfMassTransform_0"] = asm["_emscripten_bind_btRigidBody_getCenterOfMassTransform_0"];
        var _emscripten_bind_btGhostObject_isKinematicObject_0 = Module["_emscripten_bind_btGhostObject_isKinematicObject_0"] = asm["_emscripten_bind_btGhostObject_isKinematicObject_0"];
        var _emscripten_bind_btGeneric6DofSpringConstraint_btGeneric6DofSpringConstraint_5 = Module["_emscripten_bind_btGeneric6DofSpringConstraint_btGeneric6DofSpringConstraint_5"] = asm["_emscripten_bind_btGeneric6DofSpringConstraint_btGeneric6DofSpringConstraint_5"];
        var _emscripten_bind_btCapsuleShape___destroy___0 = Module["_emscripten_bind_btCapsuleShape___destroy___0"] = asm["_emscripten_bind_btCapsuleShape___destroy___0"];
        var _emscripten_bind_btCollisionObject_activate_1 = Module["_emscripten_bind_btCollisionObject_activate_1"] = asm["_emscripten_bind_btCollisionObject_activate_1"];
        var _emscripten_bind_btCollisionObject_activate_0 = Module["_emscripten_bind_btCollisionObject_activate_0"] = asm["_emscripten_bind_btCollisionObject_activate_0"];
        var _emscripten_bind_btGeneric6DofSpring2Constraint_getRotationalLimitMotor_1 = Module["_emscripten_bind_btGeneric6DofSpring2Constraint_getRotationalLimitMotor_1"] = asm["_emscripten_bind_btGeneric6DofSpring2Constraint_getRotationalLimitMotor_1"];
        var _emscripten_bind_btKinematicCharacterController_setUpAxis_1 = Module["_emscripten_bind_btKinematicCharacterController_setUpAxis_1"] = asm["_emscripten_bind_btKinematicCharacterController_setUpAxis_1"];
        var _emscripten_bind_btDispatcherInfo_set_m_timeOfImpact_1 = Module["_emscripten_bind_btDispatcherInfo_set_m_timeOfImpact_1"] = asm["_emscripten_bind_btDispatcherInfo_set_m_timeOfImpact_1"];
        var _emscripten_bind_btGeneric6DofSpring2Constraint_setAngularUpperLimit_1 = Module["_emscripten_bind_btGeneric6DofSpring2Constraint_setAngularUpperLimit_1"] = asm["_emscripten_bind_btGeneric6DofSpring2Constraint_setAngularUpperLimit_1"];
        var _emscripten_bind_btTranslationalLimitMotor2___destroy___0 = Module["_emscripten_bind_btTranslationalLimitMotor2___destroy___0"] = asm["_emscripten_bind_btTranslationalLimitMotor2___destroy___0"];
        var _emscripten_bind_btCollisionDispatcher_btCollisionDispatcher_1 = Module["_emscripten_bind_btCollisionDispatcher_btCollisionDispatcher_1"] = asm["_emscripten_bind_btCollisionDispatcher_btCollisionDispatcher_1"];
        var _emscripten_bind_btVector3_setX_1 = Module["_emscripten_bind_btVector3_setX_1"] = asm["_emscripten_bind_btVector3_setX_1"];
        var _emscripten_bind_btCollisionConfiguration___destroy___0 = Module["_emscripten_bind_btCollisionConfiguration___destroy___0"] = asm["_emscripten_bind_btCollisionConfiguration___destroy___0"];
        var _emscripten_bind_btCapsuleShapeZ_setMargin_1 = Module["_emscripten_bind_btCapsuleShapeZ_setMargin_1"] = asm["_emscripten_bind_btCapsuleShapeZ_setMargin_1"];
        var _emscripten_bind_btHingeConstraint_enableFeedback_1 = Module["_emscripten_bind_btHingeConstraint_enableFeedback_1"] = asm["_emscripten_bind_btHingeConstraint_enableFeedback_1"];
        var _emscripten_bind_btManifoldPoint_set_m_positionWorldOnB_1 = Module["_emscripten_bind_btManifoldPoint_set_m_positionWorldOnB_1"] = asm["_emscripten_bind_btManifoldPoint_set_m_positionWorldOnB_1"];
        var _emscripten_bind_btManifoldPoint_set_m_localPointB_1 = Module["_emscripten_bind_btManifoldPoint_set_m_localPointB_1"] = asm["_emscripten_bind_btManifoldPoint_set_m_localPointB_1"];
        var _emscripten_bind_btVector3_setZ_1 = Module["_emscripten_bind_btVector3_setZ_1"] = asm["_emscripten_bind_btVector3_setZ_1"];
        var _emscripten_bind_btKinematicCharacterController_setUseGhostSweepTest_1 = Module["_emscripten_bind_btKinematicCharacterController_setUseGhostSweepTest_1"] = asm["_emscripten_bind_btKinematicCharacterController_setUseGhostSweepTest_1"];
        var _emscripten_bind_btQuaternion_setValue_4 = Module["_emscripten_bind_btQuaternion_setValue_4"] = asm["_emscripten_bind_btQuaternion_setValue_4"];
        var _emscripten_bind_btDynamicsWorld_getBroadphase_0 = Module["_emscripten_bind_btDynamicsWorld_getBroadphase_0"] = asm["_emscripten_bind_btDynamicsWorld_getBroadphase_0"];
        var _emscripten_bind_LocalShapeInfo___destroy___0 = Module["_emscripten_bind_LocalShapeInfo___destroy___0"] = asm["_emscripten_bind_LocalShapeInfo___destroy___0"];
        var _emscripten_bind_btWheelInfo_get_m_bIsFrontWheel_0 = Module["_emscripten_bind_btWheelInfo_get_m_bIsFrontWheel_0"] = asm["_emscripten_bind_btWheelInfo_get_m_bIsFrontWheel_0"];
        var _emscripten_bind_btQuadWord_setY_1 = Module["_emscripten_bind_btQuadWord_setY_1"] = asm["_emscripten_bind_btQuadWord_setY_1"];
        var _emscripten_bind_btRigidBody_isKinematicObject_0 = Module["_emscripten_bind_btRigidBody_isKinematicObject_0"] = asm["_emscripten_bind_btRigidBody_isKinematicObject_0"];
        var _emscripten_bind_ContactResultCallback_addSingleResult_7 = Module["_emscripten_bind_ContactResultCallback_addSingleResult_7"] = asm["_emscripten_bind_ContactResultCallback_addSingleResult_7"];
        var _emscripten_bind_btRigidBodyConstructionInfo_set_m_restitution_1 = Module["_emscripten_bind_btRigidBodyConstructionInfo_set_m_restitution_1"] = asm["_emscripten_bind_btRigidBodyConstructionInfo_set_m_restitution_1"];
        var _emscripten_bind_btDefaultMotionState_get_m_graphicsWorldTrans_0 = Module["_emscripten_bind_btDefaultMotionState_get_m_graphicsWorldTrans_0"] = asm["_emscripten_bind_btDefaultMotionState_get_m_graphicsWorldTrans_0"];
        var _emscripten_bind_btConeTwistConstraint_setDamping_1 = Module["_emscripten_bind_btConeTwistConstraint_setDamping_1"] = asm["_emscripten_bind_btConeTwistConstraint_setDamping_1"];
        var _emscripten_bind_btPairCachingGhostObject_btPairCachingGhostObject_0 = Module["_emscripten_bind_btPairCachingGhostObject_btPairCachingGhostObject_0"] = asm["_emscripten_bind_btPairCachingGhostObject_btPairCachingGhostObject_0"];
        var _emscripten_bind_btDiscreteDynamicsWorld_getSolverInfo_0 = Module["_emscripten_bind_btDiscreteDynamicsWorld_getSolverInfo_0"] = asm["_emscripten_bind_btDiscreteDynamicsWorld_getSolverInfo_0"];
        var _emscripten_bind_btCylinderShape_setMargin_1 = Module["_emscripten_bind_btCylinderShape_setMargin_1"] = asm["_emscripten_bind_btCylinderShape_setMargin_1"];
        var _emscripten_bind_btCollisionWorld___destroy___0 = Module["_emscripten_bind_btCollisionWorld___destroy___0"] = asm["_emscripten_bind_btCollisionWorld___destroy___0"];
        var _emscripten_bind_LocalConvexResult_get_m_hitPointLocal_0 = Module["_emscripten_bind_LocalConvexResult_get_m_hitPointLocal_0"] = asm["_emscripten_bind_LocalConvexResult_get_m_hitPointLocal_0"];
        var _emscripten_bind_btBoxShape_btBoxShape_1 = Module["_emscripten_bind_btBoxShape_btBoxShape_1"] = asm["_emscripten_bind_btBoxShape_btBoxShape_1"];
        var _emscripten_bind_btPersistentManifold_getBody1_0 = Module["_emscripten_bind_btPersistentManifold_getBody1_0"] = asm["_emscripten_bind_btPersistentManifold_getBody1_0"];
        var _emscripten_bind_ClosestRayResultCallback_set_m_collisionObject_1 = Module["_emscripten_bind_ClosestRayResultCallback_set_m_collisionObject_1"] = asm["_emscripten_bind_ClosestRayResultCallback_set_m_collisionObject_1"];
        var _emscripten_bind_RaycastInfo_set_m_isInContact_1 = Module["_emscripten_bind_RaycastInfo_set_m_isInContact_1"] = asm["_emscripten_bind_RaycastInfo_set_m_isInContact_1"];
        var _emscripten_bind_btKinematicCharacterController_setGravity_1 = Module["_emscripten_bind_btKinematicCharacterController_setGravity_1"] = asm["_emscripten_bind_btKinematicCharacterController_setGravity_1"];
        var _emscripten_bind_btConstraintSetting_set_m_impulseClamp_1 = Module["_emscripten_bind_btConstraintSetting_set_m_impulseClamp_1"] = asm["_emscripten_bind_btConstraintSetting_set_m_impulseClamp_1"];
        var _emscripten_bind_btGeneric6DofConstraint_btGeneric6DofConstraint_5 = Module["_emscripten_bind_btGeneric6DofConstraint_btGeneric6DofConstraint_5"] = asm["_emscripten_bind_btGeneric6DofConstraint_btGeneric6DofConstraint_5"];
        var _emscripten_bind_btGeneric6DofConstraint_btGeneric6DofConstraint_3 = Module["_emscripten_bind_btGeneric6DofConstraint_btGeneric6DofConstraint_3"] = asm["_emscripten_bind_btGeneric6DofConstraint_btGeneric6DofConstraint_3"];
        var _emscripten_bind_LocalShapeInfo_get_m_shapePart_0 = Module["_emscripten_bind_LocalShapeInfo_get_m_shapePart_0"] = asm["_emscripten_bind_LocalShapeInfo_get_m_shapePart_0"];
        var __GLOBAL__sub_I_btConeTwistConstraint_cpp = Module["__GLOBAL__sub_I_btConeTwistConstraint_cpp"] = asm["__GLOBAL__sub_I_btConeTwistConstraint_cpp"];
        var _emscripten_bind_btWheelInfo_get_m_rollInfluence_0 = Module["_emscripten_bind_btWheelInfo_get_m_rollInfluence_0"] = asm["_emscripten_bind_btWheelInfo_get_m_rollInfluence_0"];
        var _emscripten_bind_btVector4_setValue_4 = Module["_emscripten_bind_btVector4_setValue_4"] = asm["_emscripten_bind_btVector4_setValue_4"];
        var _emscripten_bind_btBvhTriangleMeshShape_setLocalScaling_1 = Module["_emscripten_bind_btBvhTriangleMeshShape_setLocalScaling_1"] = asm["_emscripten_bind_btBvhTriangleMeshShape_setLocalScaling_1"];
        var _emscripten_bind_btPoint2PointConstraint_setBreakingImpulseThreshold_1 = Module["_emscripten_bind_btPoint2PointConstraint_setBreakingImpulseThreshold_1"] = asm["_emscripten_bind_btPoint2PointConstraint_setBreakingImpulseThreshold_1"];
        var _emscripten_bind_btDynamicsWorld_getDispatchInfo_0 = Module["_emscripten_bind_btDynamicsWorld_getDispatchInfo_0"] = asm["_emscripten_bind_btDynamicsWorld_getDispatchInfo_0"];
        var _emscripten_bind_btCompoundShape_removeChildShapeByIndex_1 = Module["_emscripten_bind_btCompoundShape_removeChildShapeByIndex_1"] = asm["_emscripten_bind_btCompoundShape_removeChildShapeByIndex_1"];
        var _emscripten_bind_btGeneric6DofSpring2Constraint_enableSpring_2 = Module["_emscripten_bind_btGeneric6DofSpring2Constraint_enableSpring_2"] = asm["_emscripten_bind_btGeneric6DofSpring2Constraint_enableSpring_2"];
        var _emscripten_bind_btVector3_length_0 = Module["_emscripten_bind_btVector3_length_0"] = asm["_emscripten_bind_btVector3_length_0"];
        var _emscripten_bind_btConvexTriangleMeshShape_btConvexTriangleMeshShape_2 = Module["_emscripten_bind_btConvexTriangleMeshShape_btConvexTriangleMeshShape_2"] = asm["_emscripten_bind_btConvexTriangleMeshShape_btConvexTriangleMeshShape_2"];
        var _emscripten_bind_btConvexTriangleMeshShape_btConvexTriangleMeshShape_1 = Module["_emscripten_bind_btConvexTriangleMeshShape_btConvexTriangleMeshShape_1"] = asm["_emscripten_bind_btConvexTriangleMeshShape_btConvexTriangleMeshShape_1"];
        var _emscripten_bind_ClosestConvexResultCallback_set_m_hitPointWorld_1 = Module["_emscripten_bind_ClosestConvexResultCallback_set_m_hitPointWorld_1"] = asm["_emscripten_bind_ClosestConvexResultCallback_set_m_hitPointWorld_1"];
        var _emscripten_bind_RayResultCallback_set_m_collisionFilterMask_1 = Module["_emscripten_bind_RayResultCallback_set_m_collisionFilterMask_1"] = asm["_emscripten_bind_RayResultCallback_set_m_collisionFilterMask_1"];
        var _emscripten_bind_btBoxShape_getMargin_0 = Module["_emscripten_bind_btBoxShape_getMargin_0"] = asm["_emscripten_bind_btBoxShape_getMargin_0"];
        var _emscripten_bind_btPairCachingGhostObject___destroy___0 = Module["_emscripten_bind_btPairCachingGhostObject___destroy___0"] = asm["_emscripten_bind_btPairCachingGhostObject___destroy___0"];
        var _emscripten_bind_btDynamicsWorld_addCollisionObject_3 = Module["_emscripten_bind_btDynamicsWorld_addCollisionObject_3"] = asm["_emscripten_bind_btDynamicsWorld_addCollisionObject_3"];
        var _emscripten_bind_btPairCachingGhostObject_activate_0 = Module["_emscripten_bind_btPairCachingGhostObject_activate_0"] = asm["_emscripten_bind_btPairCachingGhostObject_activate_0"];
        var _emscripten_bind_btPairCachingGhostObject_activate_1 = Module["_emscripten_bind_btPairCachingGhostObject_activate_1"] = asm["_emscripten_bind_btPairCachingGhostObject_activate_1"];
        var _emscripten_bind_btContactSolverInfo_get_m_splitImpulsePenetrationThreshold_0 = Module["_emscripten_bind_btContactSolverInfo_get_m_splitImpulsePenetrationThreshold_0"] = asm["_emscripten_bind_btContactSolverInfo_get_m_splitImpulsePenetrationThreshold_0"];
        var _emscripten_bind_btPairCachingGhostObject_forceActivationState_1 = Module["_emscripten_bind_btPairCachingGhostObject_forceActivationState_1"] = asm["_emscripten_bind_btPairCachingGhostObject_forceActivationState_1"];
        var _emscripten_bind_btDefaultMotionState___destroy___0 = Module["_emscripten_bind_btDefaultMotionState___destroy___0"] = asm["_emscripten_bind_btDefaultMotionState___destroy___0"];
        var _emscripten_bind_btDispatcherInfo_get_m_stepCount_0 = Module["_emscripten_bind_btDispatcherInfo_get_m_stepCount_0"] = asm["_emscripten_bind_btDispatcherInfo_get_m_stepCount_0"];
        var _emscripten_bind_btRigidBodyConstructionInfo_set_m_angularDamping_1 = Module["_emscripten_bind_btRigidBodyConstructionInfo_set_m_angularDamping_1"] = asm["_emscripten_bind_btRigidBodyConstructionInfo_set_m_angularDamping_1"];
        var _emscripten_bind_btQuadWord_setW_1 = Module["_emscripten_bind_btQuadWord_setW_1"] = asm["_emscripten_bind_btQuadWord_setW_1"];
        var _emscripten_bind_btRigidBodyConstructionInfo_get_m_friction_0 = Module["_emscripten_bind_btRigidBodyConstructionInfo_get_m_friction_0"] = asm["_emscripten_bind_btRigidBodyConstructionInfo_get_m_friction_0"];
        var _emscripten_bind_btCapsuleShapeX_btCapsuleShapeX_2 = Module["_emscripten_bind_btCapsuleShapeX_btCapsuleShapeX_2"] = asm["_emscripten_bind_btCapsuleShapeX_btCapsuleShapeX_2"];
        var _emscripten_bind_LocalShapeInfo_set_m_shapePart_1 = Module["_emscripten_bind_LocalShapeInfo_set_m_shapePart_1"] = asm["_emscripten_bind_LocalShapeInfo_set_m_shapePart_1"];
        var _emscripten_bind_btRigidBody_setLinearFactor_1 = Module["_emscripten_bind_btRigidBody_setLinearFactor_1"] = asm["_emscripten_bind_btRigidBody_setLinearFactor_1"];
        var _emscripten_bind_btDispatcherInfo_set_m_useConvexConservativeDistanceUtil_1 = Module["_emscripten_bind_btDispatcherInfo_set_m_useConvexConservativeDistanceUtil_1"] = asm["_emscripten_bind_btDispatcherInfo_set_m_useConvexConservativeDistanceUtil_1"];
        var _emscripten_bind_btWheelInfo_get_m_engineForce_0 = Module["_emscripten_bind_btWheelInfo_get_m_engineForce_0"] = asm["_emscripten_bind_btWheelInfo_get_m_engineForce_0"];
        var _emscripten_bind_btRaycastVehicle_setSteeringValue_2 = Module["_emscripten_bind_btRaycastVehicle_setSteeringValue_2"] = asm["_emscripten_bind_btRaycastVehicle_setSteeringValue_2"];
        var _emscripten_enum_RotateOrder_RO_YXZ = Module["_emscripten_enum_RotateOrder_RO_YXZ"] = asm["_emscripten_enum_RotateOrder_RO_YXZ"];
        var _emscripten_bind_btPoint2PointConstraint___destroy___0 = Module["_emscripten_bind_btPoint2PointConstraint___destroy___0"] = asm["_emscripten_bind_btPoint2PointConstraint___destroy___0"];
        var _emscripten_bind_btGeneric6DofConstraint_setAngularUpperLimit_1 = Module["_emscripten_bind_btGeneric6DofConstraint_setAngularUpperLimit_1"] = asm["_emscripten_bind_btGeneric6DofConstraint_setAngularUpperLimit_1"];
        var _emscripten_bind_btDiscreteDynamicsWorld_addConstraint_2 = Module["_emscripten_bind_btDiscreteDynamicsWorld_addConstraint_2"] = asm["_emscripten_bind_btDiscreteDynamicsWorld_addConstraint_2"];
        var _emscripten_bind_btDiscreteDynamicsWorld_addConstraint_1 = Module["_emscripten_bind_btDiscreteDynamicsWorld_addConstraint_1"] = asm["_emscripten_bind_btDiscreteDynamicsWorld_addConstraint_1"];
        var _emscripten_bind_btRigidBodyConstructionInfo_set_m_angularSleepingThreshold_1 = Module["_emscripten_bind_btRigidBodyConstructionInfo_set_m_angularSleepingThreshold_1"] = asm["_emscripten_bind_btRigidBodyConstructionInfo_set_m_angularSleepingThreshold_1"];
        var _malloc = Module["_malloc"] = asm["_malloc"];
        var _emscripten_bind_btDispatcherInfo_get_m_useEpa_0 = Module["_emscripten_bind_btDispatcherInfo_get_m_useEpa_0"] = asm["_emscripten_bind_btDispatcherInfo_get_m_useEpa_0"];
        var _emscripten_bind_btTransform_btTransform_2 = Module["_emscripten_bind_btTransform_btTransform_2"] = asm["_emscripten_bind_btTransform_btTransform_2"];
        var _emscripten_bind_btTransform_btTransform_0 = Module["_emscripten_bind_btTransform_btTransform_0"] = asm["_emscripten_bind_btTransform_btTransform_0"];
        var _emscripten_bind_btVector3_op_sub_1 = Module["_emscripten_bind_btVector3_op_sub_1"] = asm["_emscripten_bind_btVector3_op_sub_1"];
        var _emscripten_bind_btWheelInfo_set_m_wheelsRadius_1 = Module["_emscripten_bind_btWheelInfo_set_m_wheelsRadius_1"] = asm["_emscripten_bind_btWheelInfo_set_m_wheelsRadius_1"];
        var _emscripten_bind_btDispatcherInfo_set_m_enableSPU_1 = Module["_emscripten_bind_btDispatcherInfo_set_m_enableSPU_1"] = asm["_emscripten_bind_btDispatcherInfo_set_m_enableSPU_1"];
        var _emscripten_bind_btWheelInfo_set_m_wheelsDampingCompression_1 = Module["_emscripten_bind_btWheelInfo_set_m_wheelsDampingCompression_1"] = asm["_emscripten_bind_btWheelInfo_set_m_wheelsDampingCompression_1"];
        var _emscripten_bind_btCollisionObject_setActivationState_1 = Module["_emscripten_bind_btCollisionObject_setActivationState_1"] = asm["_emscripten_bind_btCollisionObject_setActivationState_1"];
        var _emscripten_bind_btPersistentManifold___destroy___0 = Module["_emscripten_bind_btPersistentManifold___destroy___0"] = asm["_emscripten_bind_btPersistentManifold___destroy___0"];
        var _emscripten_bind_btConstraintSetting_get_m_impulseClamp_0 = Module["_emscripten_bind_btConstraintSetting_get_m_impulseClamp_0"] = asm["_emscripten_bind_btConstraintSetting_get_m_impulseClamp_0"];
        var _emscripten_bind_btCylinderShapeZ___destroy___0 = Module["_emscripten_bind_btCylinderShapeZ___destroy___0"] = asm["_emscripten_bind_btCylinderShapeZ___destroy___0"];
        var _emscripten_bind_btMatrix3x3___destroy___0 = Module["_emscripten_bind_btMatrix3x3___destroy___0"] = asm["_emscripten_bind_btMatrix3x3___destroy___0"];
        var _emscripten_bind_ConvexResultCallback_hasHit_0 = Module["_emscripten_bind_ConvexResultCallback_hasHit_0"] = asm["_emscripten_bind_ConvexResultCallback_hasHit_0"];
        var _emscripten_bind_btCollisionShape_calculateLocalInertia_2 = Module["_emscripten_bind_btCollisionShape_calculateLocalInertia_2"] = asm["_emscripten_bind_btCollisionShape_calculateLocalInertia_2"];
        var _emscripten_bind_btGeneric6DofSpringConstraint_setBreakingImpulseThreshold_1 = Module["_emscripten_bind_btGeneric6DofSpringConstraint_setBreakingImpulseThreshold_1"] = asm["_emscripten_bind_btGeneric6DofSpringConstraint_setBreakingImpulseThreshold_1"];
        var _emscripten_bind_btCollisionWorld_convexSweepTest_5 = Module["_emscripten_bind_btCollisionWorld_convexSweepTest_5"] = asm["_emscripten_bind_btCollisionWorld_convexSweepTest_5"];
        var _emscripten_bind_ClosestRayResultCallback_set_m_hitPointWorld_1 = Module["_emscripten_bind_ClosestRayResultCallback_set_m_hitPointWorld_1"] = asm["_emscripten_bind_ClosestRayResultCallback_set_m_hitPointWorld_1"];
        var _emscripten_bind_btCapsuleShapeX_calculateLocalInertia_2 = Module["_emscripten_bind_btCapsuleShapeX_calculateLocalInertia_2"] = asm["_emscripten_bind_btCapsuleShapeX_calculateLocalInertia_2"];
        var _emscripten_bind_btConstraintSetting_set_m_damping_1 = Module["_emscripten_bind_btConstraintSetting_set_m_damping_1"] = asm["_emscripten_bind_btConstraintSetting_set_m_damping_1"];
        var _emscripten_bind_btWheelInfo_set_m_bIsFrontWheel_1 = Module["_emscripten_bind_btWheelInfo_set_m_bIsFrontWheel_1"] = asm["_emscripten_bind_btWheelInfo_set_m_bIsFrontWheel_1"];
        var _emscripten_bind_btRigidBody_setCcdMotionThreshold_1 = Module["_emscripten_bind_btRigidBody_setCcdMotionThreshold_1"] = asm["_emscripten_bind_btRigidBody_setCcdMotionThreshold_1"];
        var _emscripten_bind_btConvexHullShape_setMargin_1 = Module["_emscripten_bind_btConvexHullShape_setMargin_1"] = asm["_emscripten_bind_btConvexHullShape_setMargin_1"];
        var _emscripten_bind_btRigidBody_applyForce_2 = Module["_emscripten_bind_btRigidBody_applyForce_2"] = asm["_emscripten_bind_btRigidBody_applyForce_2"];
        var _emscripten_bind_btConeShapeZ_calculateLocalInertia_2 = Module["_emscripten_bind_btConeShapeZ_calculateLocalInertia_2"] = asm["_emscripten_bind_btConeShapeZ_calculateLocalInertia_2"];
        var _emscripten_bind_btConstraintSetting_set_m_tau_1 = Module["_emscripten_bind_btConstraintSetting_set_m_tau_1"] = asm["_emscripten_bind_btConstraintSetting_set_m_tau_1"];
        var _emscripten_bind_btConvexHullShape_calculateLocalInertia_2 = Module["_emscripten_bind_btConvexHullShape_calculateLocalInertia_2"] = asm["_emscripten_bind_btConvexHullShape_calculateLocalInertia_2"];
        var _emscripten_bind_RaycastInfo_get_m_contactPointWS_0 = Module["_emscripten_bind_RaycastInfo_get_m_contactPointWS_0"] = asm["_emscripten_bind_RaycastInfo_get_m_contactPointWS_0"];
        var _emscripten_bind_btSphereShape_calculateLocalInertia_2 = Module["_emscripten_bind_btSphereShape_calculateLocalInertia_2"] = asm["_emscripten_bind_btSphereShape_calculateLocalInertia_2"];
        var _emscripten_bind_btSliderConstraint_setBreakingImpulseThreshold_1 = Module["_emscripten_bind_btSliderConstraint_setBreakingImpulseThreshold_1"] = asm["_emscripten_bind_btSliderConstraint_setBreakingImpulseThreshold_1"];
        var _emscripten_bind_btCollisionDispatcher_getManifoldByIndexInternal_1 = Module["_emscripten_bind_btCollisionDispatcher_getManifoldByIndexInternal_1"] = asm["_emscripten_bind_btCollisionDispatcher_getManifoldByIndexInternal_1"];
        var _pthread_self = Module["_pthread_self"] = asm["_pthread_self"];
        var _emscripten_bind_btGhostObject_setFriction_1 = Module["_emscripten_bind_btGhostObject_setFriction_1"] = asm["_emscripten_bind_btGhostObject_setFriction_1"];
        var _emscripten_bind_btPairCachingGhostObject_getWorldTransform_0 = Module["_emscripten_bind_btPairCachingGhostObject_getWorldTransform_0"] = asm["_emscripten_bind_btPairCachingGhostObject_getWorldTransform_0"];
        var _emscripten_bind_btRigidBody_setCcdSweptSphereRadius_1 = Module["_emscripten_bind_btRigidBody_setCcdSweptSphereRadius_1"] = asm["_emscripten_bind_btRigidBody_setCcdSweptSphereRadius_1"];
        var _emscripten_bind_btCylinderShapeZ_setMargin_1 = Module["_emscripten_bind_btCylinderShapeZ_setMargin_1"] = asm["_emscripten_bind_btCylinderShapeZ_setMargin_1"];
        var _emscripten_bind_btRigidBody_setFriction_1 = Module["_emscripten_bind_btRigidBody_setFriction_1"] = asm["_emscripten_bind_btRigidBody_setFriction_1"];
        var _emscripten_bind_LocalConvexResult_set_m_hitPointLocal_1 = Module["_emscripten_bind_LocalConvexResult_set_m_hitPointLocal_1"] = asm["_emscripten_bind_LocalConvexResult_set_m_hitPointLocal_1"];
        var _emscripten_bind_btGhostObject_setWorldTransform_1 = Module["_emscripten_bind_btGhostObject_setWorldTransform_1"] = asm["_emscripten_bind_btGhostObject_setWorldTransform_1"];
        var _emscripten_bind_btDiscreteDynamicsWorld_removeRigidBody_1 = Module["_emscripten_bind_btDiscreteDynamicsWorld_removeRigidBody_1"] = asm["_emscripten_bind_btDiscreteDynamicsWorld_removeRigidBody_1"];
        var _emscripten_bind_btTranslationalLimitMotor2_set_m_currentLinearDiff_1 = Module["_emscripten_bind_btTranslationalLimitMotor2_set_m_currentLinearDiff_1"] = asm["_emscripten_bind_btTranslationalLimitMotor2_set_m_currentLinearDiff_1"];
        var _emscripten_bind_btConvexHullShape___destroy___0 = Module["_emscripten_bind_btConvexHullShape___destroy___0"] = asm["_emscripten_bind_btConvexHullShape___destroy___0"];
        var _emscripten_bind_RaycastInfo_set_m_suspensionLength_1 = Module["_emscripten_bind_RaycastInfo_set_m_suspensionLength_1"] = asm["_emscripten_bind_RaycastInfo_set_m_suspensionLength_1"];
        var _emscripten_bind_btDiscreteDynamicsWorld_getBroadphase_0 = Module["_emscripten_bind_btDiscreteDynamicsWorld_getBroadphase_0"] = asm["_emscripten_bind_btDiscreteDynamicsWorld_getBroadphase_0"];
        var _emscripten_bind_btDiscreteDynamicsWorld_addAction_1 = Module["_emscripten_bind_btDiscreteDynamicsWorld_addAction_1"] = asm["_emscripten_bind_btDiscreteDynamicsWorld_addAction_1"];
        var _emscripten_bind_btVector4_setX_1 = Module["_emscripten_bind_btVector4_setX_1"] = asm["_emscripten_bind_btVector4_setX_1"];
        var _emscripten_bind_btKinematicCharacterController_jump_0 = Module["_emscripten_bind_btKinematicCharacterController_jump_0"] = asm["_emscripten_bind_btKinematicCharacterController_jump_0"];
        var _emscripten_bind_btWheelInfo_set_m_raycastInfo_1 = Module["_emscripten_bind_btWheelInfo_set_m_raycastInfo_1"] = asm["_emscripten_bind_btWheelInfo_set_m_raycastInfo_1"];
        var _emscripten_bind_btConeTwistConstraint_setMaxMotorImpulseNormalized_1 = Module["_emscripten_bind_btConeTwistConstraint_setMaxMotorImpulseNormalized_1"] = asm["_emscripten_bind_btConeTwistConstraint_setMaxMotorImpulseNormalized_1"];
        var _emscripten_bind_btConvexTriangleMeshShape_setLocalScaling_1 = Module["_emscripten_bind_btConvexTriangleMeshShape_setLocalScaling_1"] = asm["_emscripten_bind_btConvexTriangleMeshShape_setLocalScaling_1"];
        var _emscripten_bind_btRigidBody_upcast_1 = Module["_emscripten_bind_btRigidBody_upcast_1"] = asm["_emscripten_bind_btRigidBody_upcast_1"];
        var _emscripten_bind_btCollisionObject_getWorldTransform_0 = Module["_emscripten_bind_btCollisionObject_getWorldTransform_0"] = asm["_emscripten_bind_btCollisionObject_getWorldTransform_0"];
        var _emscripten_bind_btVector4_setZ_1 = Module["_emscripten_bind_btVector4_setZ_1"] = asm["_emscripten_bind_btVector4_setZ_1"];
        var _emscripten_bind_btQuadWord_y_0 = Module["_emscripten_bind_btQuadWord_y_0"] = asm["_emscripten_bind_btQuadWord_y_0"];
        var _emscripten_bind_btTransform_getBasis_0 = Module["_emscripten_bind_btTransform_getBasis_0"] = asm["_emscripten_bind_btTransform_getBasis_0"];
        var _emscripten_bind_btPairCachingGhostObject_setFriction_1 = Module["_emscripten_bind_btPairCachingGhostObject_setFriction_1"] = asm["_emscripten_bind_btPairCachingGhostObject_setFriction_1"];
        var _emscripten_bind_btDispatcherInfo_set_m_useEpa_1 = Module["_emscripten_bind_btDispatcherInfo_set_m_useEpa_1"] = asm["_emscripten_bind_btDispatcherInfo_set_m_useEpa_1"];
        var _emscripten_bind_btCollisionDispatcher_getNumManifolds_0 = Module["_emscripten_bind_btCollisionDispatcher_getNumManifolds_0"] = asm["_emscripten_bind_btCollisionDispatcher_getNumManifolds_0"];
        var _emscripten_bind_btVehicleRaycaster___destroy___0 = Module["_emscripten_bind_btVehicleRaycaster___destroy___0"] = asm["_emscripten_bind_btVehicleRaycaster___destroy___0"];
        var _emscripten_bind_ClosestRayResultCallback___destroy___0 = Module["_emscripten_bind_ClosestRayResultCallback___destroy___0"] = asm["_emscripten_bind_ClosestRayResultCallback___destroy___0"];
        var _emscripten_bind_ClosestConvexResultCallback_get_m_convexFromWorld_0 = Module["_emscripten_bind_ClosestConvexResultCallback_get_m_convexFromWorld_0"] = asm["_emscripten_bind_ClosestConvexResultCallback_get_m_convexFromWorld_0"];
        var _emscripten_bind_btCylinderShapeX_setMargin_1 = Module["_emscripten_bind_btCylinderShapeX_setMargin_1"] = asm["_emscripten_bind_btCylinderShapeX_setMargin_1"];
        var _emscripten_bind_btQuadWord_w_0 = Module["_emscripten_bind_btQuadWord_w_0"] = asm["_emscripten_bind_btQuadWord_w_0"];
        var _emscripten_bind_btPersistentManifold_getNumContacts_0 = Module["_emscripten_bind_btPersistentManifold_getNumContacts_0"] = asm["_emscripten_bind_btPersistentManifold_getNumContacts_0"];
        var _emscripten_bind_btDynamicsWorld_contactTest_2 = Module["_emscripten_bind_btDynamicsWorld_contactTest_2"] = asm["_emscripten_bind_btDynamicsWorld_contactTest_2"];
        var _emscripten_bind_btDiscreteDynamicsWorld_contactTest_2 = Module["_emscripten_bind_btDiscreteDynamicsWorld_contactTest_2"] = asm["_emscripten_bind_btDiscreteDynamicsWorld_contactTest_2"];
        var _emscripten_bind_btGeneric6DofSpring2Constraint_btGeneric6DofSpring2Constraint_3 = Module["_emscripten_bind_btGeneric6DofSpring2Constraint_btGeneric6DofSpring2Constraint_3"] = asm["_emscripten_bind_btGeneric6DofSpring2Constraint_btGeneric6DofSpring2Constraint_3"];
        var _emscripten_bind_btBvhTriangleMeshShape_calculateLocalInertia_2 = Module["_emscripten_bind_btBvhTriangleMeshShape_calculateLocalInertia_2"] = asm["_emscripten_bind_btBvhTriangleMeshShape_calculateLocalInertia_2"];
        var _emscripten_bind_btCompoundShape_getNumChildShapes_0 = Module["_emscripten_bind_btCompoundShape_getNumChildShapes_0"] = asm["_emscripten_bind_btCompoundShape_getNumChildShapes_0"];
        var _emscripten_bind_btGhostObject_btGhostObject_0 = Module["_emscripten_bind_btGhostObject_btGhostObject_0"] = asm["_emscripten_bind_btGhostObject_btGhostObject_0"];
        var _emscripten_bind_ClosestConvexResultCallback_ClosestConvexResultCallback_2 = Module["_emscripten_bind_ClosestConvexResultCallback_ClosestConvexResultCallback_2"] = asm["_emscripten_bind_ClosestConvexResultCallback_ClosestConvexResultCallback_2"];
        var _emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalAngularDampingFactor_1 = Module["_emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalAngularDampingFactor_1"] = asm["_emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalAngularDampingFactor_1"];
        var _emscripten_bind_btManifoldPoint_set_m_localPointA_1 = Module["_emscripten_bind_btManifoldPoint_set_m_localPointA_1"] = asm["_emscripten_bind_btManifoldPoint_set_m_localPointA_1"];
        var _emscripten_bind_LocalConvexResult___destroy___0 = Module["_emscripten_bind_LocalConvexResult___destroy___0"] = asm["_emscripten_bind_LocalConvexResult___destroy___0"];
        var _emscripten_bind_btVector3_dot_1 = Module["_emscripten_bind_btVector3_dot_1"] = asm["_emscripten_bind_btVector3_dot_1"];
        var _emscripten_bind_btVector4_op_add_1 = Module["_emscripten_bind_btVector4_op_add_1"] = asm["_emscripten_bind_btVector4_op_add_1"];
        var _emscripten_bind_btWheelInfo___destroy___0 = Module["_emscripten_bind_btWheelInfo___destroy___0"] = asm["_emscripten_bind_btWheelInfo___destroy___0"];
        var _emscripten_bind_btHingeConstraint_btHingeConstraint_4 = Module["_emscripten_bind_btHingeConstraint_btHingeConstraint_4"] = asm["_emscripten_bind_btHingeConstraint_btHingeConstraint_4"];
        var _emscripten_bind_btTransform_setRotation_1 = Module["_emscripten_bind_btTransform_setRotation_1"] = asm["_emscripten_bind_btTransform_setRotation_1"];
        var _emscripten_bind_btPairCachingGhostObject_getNumOverlappingObjects_0 = Module["_emscripten_bind_btPairCachingGhostObject_getNumOverlappingObjects_0"] = asm["_emscripten_bind_btPairCachingGhostObject_getNumOverlappingObjects_0"];
        var _emscripten_bind_btPoint2PointConstraint_enableFeedback_1 = Module["_emscripten_bind_btPoint2PointConstraint_enableFeedback_1"] = asm["_emscripten_bind_btPoint2PointConstraint_enableFeedback_1"];
        var _emscripten_bind_ClosestRayResultCallback_set_m_collisionFilterGroup_1 = Module["_emscripten_bind_ClosestRayResultCallback_set_m_collisionFilterGroup_1"] = asm["_emscripten_bind_ClosestRayResultCallback_set_m_collisionFilterGroup_1"];
        var _emscripten_bind_btAxisSweep3_btAxisSweep3_2 = Module["_emscripten_bind_btAxisSweep3_btAxisSweep3_2"] = asm["_emscripten_bind_btAxisSweep3_btAxisSweep3_2"];
        var _emscripten_bind_btAxisSweep3_btAxisSweep3_3 = Module["_emscripten_bind_btAxisSweep3_btAxisSweep3_3"] = asm["_emscripten_bind_btAxisSweep3_btAxisSweep3_3"];
        var _emscripten_bind_btDynamicsWorld___destroy___0 = Module["_emscripten_bind_btDynamicsWorld___destroy___0"] = asm["_emscripten_bind_btDynamicsWorld___destroy___0"];
        var _emscripten_bind_btVector3_setY_1 = Module["_emscripten_bind_btVector3_setY_1"] = asm["_emscripten_bind_btVector3_setY_1"];
        var _emscripten_bind_btAxisSweep3_btAxisSweep3_4 = Module["_emscripten_bind_btAxisSweep3_btAxisSweep3_4"] = asm["_emscripten_bind_btAxisSweep3_btAxisSweep3_4"];
        var _emscripten_bind_btAxisSweep3_btAxisSweep3_5 = Module["_emscripten_bind_btAxisSweep3_btAxisSweep3_5"] = asm["_emscripten_bind_btAxisSweep3_btAxisSweep3_5"];
        var _emscripten_bind_btQuadWord_setX_1 = Module["_emscripten_bind_btQuadWord_setX_1"] = asm["_emscripten_bind_btQuadWord_setX_1"];
        var _emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalLinearDampingThresholdSqr_0 = Module["_emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalLinearDampingThresholdSqr_0"] = asm["_emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalLinearDampingThresholdSqr_0"];
        var _emscripten_bind_btGhostObject_isActive_0 = Module["_emscripten_bind_btGhostObject_isActive_0"] = asm["_emscripten_bind_btGhostObject_isActive_0"];
        var _emscripten_bind_btOverlappingPairCache___destroy___0 = Module["_emscripten_bind_btOverlappingPairCache___destroy___0"] = asm["_emscripten_bind_btOverlappingPairCache___destroy___0"];
        var _emscripten_bind_btVector3_normalize_0 = Module["_emscripten_bind_btVector3_normalize_0"] = asm["_emscripten_bind_btVector3_normalize_0"];
        var _emscripten_bind_btConstraintSetting___destroy___0 = Module["_emscripten_bind_btConstraintSetting___destroy___0"] = asm["_emscripten_bind_btConstraintSetting___destroy___0"];
        var _emscripten_bind_RayResultCallback___destroy___0 = Module["_emscripten_bind_RayResultCallback___destroy___0"] = asm["_emscripten_bind_RayResultCallback___destroy___0"];
        var _emscripten_bind_RaycastInfo_get_m_contactNormalWS_0 = Module["_emscripten_bind_RaycastInfo_get_m_contactNormalWS_0"] = asm["_emscripten_bind_RaycastInfo_get_m_contactNormalWS_0"];
        var _emscripten_bind_btTranslationalLimitMotor2_get_m_currentLinearDiff_0 = Module["_emscripten_bind_btTranslationalLimitMotor2_get_m_currentLinearDiff_0"] = asm["_emscripten_bind_btTranslationalLimitMotor2_get_m_currentLinearDiff_0"];
        var _emscripten_bind_btPersistentManifold_getBody0_0 = Module["_emscripten_bind_btPersistentManifold_getBody0_0"] = asm["_emscripten_bind_btPersistentManifold_getBody0_0"];
        var _emscripten_bind_btConeShapeX_btConeShapeX_2 = Module["_emscripten_bind_btConeShapeX_btConeShapeX_2"] = asm["_emscripten_bind_btConeShapeX_btConeShapeX_2"];
        var _emscripten_bind_btConeTwistConstraint_enableFeedback_1 = Module["_emscripten_bind_btConeTwistConstraint_enableFeedback_1"] = asm["_emscripten_bind_btConeTwistConstraint_enableFeedback_1"];
        var _emscripten_bind_btCapsuleShapeZ_setLocalScaling_1 = Module["_emscripten_bind_btCapsuleShapeZ_setLocalScaling_1"] = asm["_emscripten_bind_btCapsuleShapeZ_setLocalScaling_1"];
        var _emscripten_bind_ClosestConvexResultCallback_get_m_closestHitFraction_0 = Module["_emscripten_bind_ClosestConvexResultCallback_get_m_closestHitFraction_0"] = asm["_emscripten_bind_ClosestConvexResultCallback_get_m_closestHitFraction_0"];
        var _emscripten_bind_btSliderConstraint_setUpperLinLimit_1 = Module["_emscripten_bind_btSliderConstraint_setUpperLinLimit_1"] = asm["_emscripten_bind_btSliderConstraint_setUpperLinLimit_1"];
        var _emscripten_bind_btConeTwistConstraint_btConeTwistConstraint_2 = Module["_emscripten_bind_btConeTwistConstraint_btConeTwistConstraint_2"] = asm["_emscripten_bind_btConeTwistConstraint_btConeTwistConstraint_2"];
        var _emscripten_bind_btConcaveShape___destroy___0 = Module["_emscripten_bind_btConcaveShape___destroy___0"] = asm["_emscripten_bind_btConcaveShape___destroy___0"];
        var _emscripten_bind_btConeTwistConstraint_btConeTwistConstraint_4 = Module["_emscripten_bind_btConeTwistConstraint_btConeTwistConstraint_4"] = asm["_emscripten_bind_btConeTwistConstraint_btConeTwistConstraint_4"];
        var _emscripten_bind_btQuaternion_x_0 = Module["_emscripten_bind_btQuaternion_x_0"] = asm["_emscripten_bind_btQuaternion_x_0"];
        var _emscripten_bind_LocalConvexResult_set_m_hitNormalLocal_1 = Module["_emscripten_bind_LocalConvexResult_set_m_hitNormalLocal_1"] = asm["_emscripten_bind_LocalConvexResult_set_m_hitNormalLocal_1"];
        var _emscripten_bind_btConcaveShape_setLocalScaling_1 = Module["_emscripten_bind_btConcaveShape_setLocalScaling_1"] = asm["_emscripten_bind_btConcaveShape_setLocalScaling_1"];
        var _emscripten_bind_btDiscreteDynamicsWorld_getDispatchInfo_0 = Module["_emscripten_bind_btDiscreteDynamicsWorld_getDispatchInfo_0"] = asm["_emscripten_bind_btDiscreteDynamicsWorld_getDispatchInfo_0"];
        var _emscripten_bind_btConeShapeX_setLocalScaling_1 = Module["_emscripten_bind_btConeShapeX_setLocalScaling_1"] = asm["_emscripten_bind_btConeShapeX_setLocalScaling_1"];
        var _emscripten_bind_btGeneric6DofSpring2Constraint_setBreakingImpulseThreshold_1 = Module["_emscripten_bind_btGeneric6DofSpring2Constraint_setBreakingImpulseThreshold_1"] = asm["_emscripten_bind_btGeneric6DofSpring2Constraint_setBreakingImpulseThreshold_1"];
        var _emscripten_bind_btQuaternion_z_0 = Module["_emscripten_bind_btQuaternion_z_0"] = asm["_emscripten_bind_btQuaternion_z_0"];
        var _emscripten_bind_btConvexHullShape_btConvexHullShape_0 = Module["_emscripten_bind_btConvexHullShape_btConvexHullShape_0"] = asm["_emscripten_bind_btConvexHullShape_btConvexHullShape_0"];
        var _emscripten_bind_btWheelInfo_set_m_maxSuspensionForce_1 = Module["_emscripten_bind_btWheelInfo_set_m_maxSuspensionForce_1"] = asm["_emscripten_bind_btWheelInfo_set_m_maxSuspensionForce_1"];
        var _emscripten_bind_btConstraintSetting_get_m_damping_0 = Module["_emscripten_bind_btConstraintSetting_get_m_damping_0"] = asm["_emscripten_bind_btConstraintSetting_get_m_damping_0"];
        var _emscripten_bind_btRotationalLimitMotor2___destroy___0 = Module["_emscripten_bind_btRotationalLimitMotor2___destroy___0"] = asm["_emscripten_bind_btRotationalLimitMotor2___destroy___0"];
        var _emscripten_bind_btGhostObject___destroy___0 = Module["_emscripten_bind_btGhostObject___destroy___0"] = asm["_emscripten_bind_btGhostObject___destroy___0"];
        var _emscripten_bind_btGhostObject_setContactProcessingThreshold_1 = Module["_emscripten_bind_btGhostObject_setContactProcessingThreshold_1"] = asm["_emscripten_bind_btGhostObject_setContactProcessingThreshold_1"];
        var _emscripten_bind_btCollisionWorld_getBroadphase_0 = Module["_emscripten_bind_btCollisionWorld_getBroadphase_0"] = asm["_emscripten_bind_btCollisionWorld_getBroadphase_0"];
        var _emscripten_bind_btContactSolverInfo_set_m_splitImpulse_1 = Module["_emscripten_bind_btContactSolverInfo_set_m_splitImpulse_1"] = asm["_emscripten_bind_btContactSolverInfo_set_m_splitImpulse_1"];
        var _emscripten_bind_btDefaultMotionState_btDefaultMotionState_2 = Module["_emscripten_bind_btDefaultMotionState_btDefaultMotionState_2"] = asm["_emscripten_bind_btDefaultMotionState_btDefaultMotionState_2"];
        var _emscripten_bind_btDefaultMotionState_btDefaultMotionState_0 = Module["_emscripten_bind_btDefaultMotionState_btDefaultMotionState_0"] = asm["_emscripten_bind_btDefaultMotionState_btDefaultMotionState_0"];
        var _emscripten_bind_btDefaultMotionState_btDefaultMotionState_1 = Module["_emscripten_bind_btDefaultMotionState_btDefaultMotionState_1"] = asm["_emscripten_bind_btDefaultMotionState_btDefaultMotionState_1"];
        var _emscripten_bind_btCompoundShape_getChildShape_1 = Module["_emscripten_bind_btCompoundShape_getChildShape_1"] = asm["_emscripten_bind_btCompoundShape_getChildShape_1"];
        var _emscripten_bind_btKinematicCharacterController_canJump_0 = Module["_emscripten_bind_btKinematicCharacterController_canJump_0"] = asm["_emscripten_bind_btKinematicCharacterController_canJump_0"];
        var _emscripten_bind_btRigidBody_isActive_0 = Module["_emscripten_bind_btRigidBody_isActive_0"] = asm["_emscripten_bind_btRigidBody_isActive_0"];
        var _emscripten_bind_btRaycastVehicle_btRaycastVehicle_3 = Module["_emscripten_bind_btRaycastVehicle_btRaycastVehicle_3"] = asm["_emscripten_bind_btRaycastVehicle_btRaycastVehicle_3"];
        var _emscripten_bind_btMotionState_setWorldTransform_1 = Module["_emscripten_bind_btMotionState_setWorldTransform_1"] = asm["_emscripten_bind_btMotionState_setWorldTransform_1"];
        var _emscripten_bind_btCylinderShape_setLocalScaling_1 = Module["_emscripten_bind_btCylinderShape_setLocalScaling_1"] = asm["_emscripten_bind_btCylinderShape_setLocalScaling_1"];
        var _emscripten_bind_btCollisionWorld_rayTest_3 = Module["_emscripten_bind_btCollisionWorld_rayTest_3"] = asm["_emscripten_bind_btCollisionWorld_rayTest_3"];
        var _emscripten_bind_btCompoundShape_calculateLocalInertia_2 = Module["_emscripten_bind_btCompoundShape_calculateLocalInertia_2"] = asm["_emscripten_bind_btCompoundShape_calculateLocalInertia_2"];
        var _emscripten_bind_btCollisionWorld_getDispatchInfo_0 = Module["_emscripten_bind_btCollisionWorld_getDispatchInfo_0"] = asm["_emscripten_bind_btCollisionWorld_getDispatchInfo_0"];
        var _emscripten_bind_btRigidBody_setCollisionShape_1 = Module["_emscripten_bind_btRigidBody_setCollisionShape_1"] = asm["_emscripten_bind_btRigidBody_setCollisionShape_1"];
        var _emscripten_bind_btConeShapeX___destroy___0 = Module["_emscripten_bind_btConeShapeX___destroy___0"] = asm["_emscripten_bind_btConeShapeX___destroy___0"];
        var _emscripten_bind_btCollisionObject_getCollisionFlags_0 = Module["_emscripten_bind_btCollisionObject_getCollisionFlags_0"] = asm["_emscripten_bind_btCollisionObject_getCollisionFlags_0"];
        var _emscripten_bind_btDispatcherInfo_set_m_enableSatConvex_1 = Module["_emscripten_bind_btDispatcherInfo_set_m_enableSatConvex_1"] = asm["_emscripten_bind_btDispatcherInfo_set_m_enableSatConvex_1"];
        var _emscripten_bind_btConeTwistConstraint_enableMotor_1 = Module["_emscripten_bind_btConeTwistConstraint_enableMotor_1"] = asm["_emscripten_bind_btConeTwistConstraint_enableMotor_1"];
        var _emscripten_bind_btRaycastVehicle_setCoordinateSystem_3 = Module["_emscripten_bind_btRaycastVehicle_setCoordinateSystem_3"] = asm["_emscripten_bind_btRaycastVehicle_setCoordinateSystem_3"];
        var _emscripten_bind_btDefaultCollisionConfiguration_btDefaultCollisionConfiguration_0 = Module["_emscripten_bind_btDefaultCollisionConfiguration_btDefaultCollisionConfiguration_0"] = asm["_emscripten_bind_btDefaultCollisionConfiguration_btDefaultCollisionConfiguration_0"];
        var _emscripten_bind_btPairCachingGhostObject_setRestitution_1 = Module["_emscripten_bind_btPairCachingGhostObject_setRestitution_1"] = asm["_emscripten_bind_btPairCachingGhostObject_setRestitution_1"];
        var _emscripten_bind_ConvexResultCallback___destroy___0 = Module["_emscripten_bind_ConvexResultCallback___destroy___0"] = asm["_emscripten_bind_ConvexResultCallback___destroy___0"];
        var _emscripten_bind_btSliderConstraint_getBreakingImpulseThreshold_0 = Module["_emscripten_bind_btSliderConstraint_getBreakingImpulseThreshold_0"] = asm["_emscripten_bind_btSliderConstraint_getBreakingImpulseThreshold_0"];
        var _emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalDampingFactor_1 = Module["_emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalDampingFactor_1"] = asm["_emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalDampingFactor_1"];
        var _emscripten_bind_btKinematicCharacterController_btKinematicCharacterController_3 = Module["_emscripten_bind_btKinematicCharacterController_btKinematicCharacterController_3"] = asm["_emscripten_bind_btKinematicCharacterController_btKinematicCharacterController_3"];
        var _emscripten_bind_btCollisionObject_setContactProcessingThreshold_1 = Module["_emscripten_bind_btCollisionObject_setContactProcessingThreshold_1"] = asm["_emscripten_bind_btCollisionObject_setContactProcessingThreshold_1"];
        var _emscripten_bind_btGhostObject_setCcdMotionThreshold_1 = Module["_emscripten_bind_btGhostObject_setCcdMotionThreshold_1"] = asm["_emscripten_bind_btGhostObject_setCcdMotionThreshold_1"];
        var _emscripten_bind_btDispatcherInfo_get_m_allowedCcdPenetration_0 = Module["_emscripten_bind_btDispatcherInfo_get_m_allowedCcdPenetration_0"] = asm["_emscripten_bind_btDispatcherInfo_get_m_allowedCcdPenetration_0"];
        var _emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalAngularDampingFactor_0 = Module["_emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalAngularDampingFactor_0"] = asm["_emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalAngularDampingFactor_0"];
        var _emscripten_bind_btCapsuleShapeX_setMargin_1 = Module["_emscripten_bind_btCapsuleShapeX_setMargin_1"] = asm["_emscripten_bind_btCapsuleShapeX_setMargin_1"];
        var _emscripten_bind_btGeneric6DofSpring2Constraint_setStiffness_2 = Module["_emscripten_bind_btGeneric6DofSpring2Constraint_setStiffness_2"] = asm["_emscripten_bind_btGeneric6DofSpring2Constraint_setStiffness_2"];
        var _emscripten_bind_btSequentialImpulseConstraintSolver___destroy___0 = Module["_emscripten_bind_btSequentialImpulseConstraintSolver___destroy___0"] = asm["_emscripten_bind_btSequentialImpulseConstraintSolver___destroy___0"];
        var _emscripten_bind_LocalConvexResult_LocalConvexResult_5 = Module["_emscripten_bind_LocalConvexResult_LocalConvexResult_5"] = asm["_emscripten_bind_LocalConvexResult_LocalConvexResult_5"];
        var _emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalLinearDampingThresholdSqr_1 = Module["_emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalLinearDampingThresholdSqr_1"] = asm["_emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalLinearDampingThresholdSqr_1"];
        var _emscripten_bind_btRigidBody_getCollisionFlags_0 = Module["_emscripten_bind_btRigidBody_getCollisionFlags_0"] = asm["_emscripten_bind_btRigidBody_getCollisionFlags_0"];
        var _emscripten_bind_btCollisionShape_setLocalScaling_1 = Module["_emscripten_bind_btCollisionShape_setLocalScaling_1"] = asm["_emscripten_bind_btCollisionShape_setLocalScaling_1"];
        var _emscripten_bind_btRigidBody_applyTorque_1 = Module["_emscripten_bind_btRigidBody_applyTorque_1"] = asm["_emscripten_bind_btRigidBody_applyTorque_1"];
        var _emscripten_bind_LocalConvexResult_get_m_hitCollisionObject_0 = Module["_emscripten_bind_LocalConvexResult_get_m_hitCollisionObject_0"] = asm["_emscripten_bind_LocalConvexResult_get_m_hitCollisionObject_0"];
        var _emscripten_bind_btMatrix3x3_setEulerZYX_3 = Module["_emscripten_bind_btMatrix3x3_setEulerZYX_3"] = asm["_emscripten_bind_btMatrix3x3_setEulerZYX_3"];
        var _emscripten_bind_btDispatcherInfo_get_m_convexConservativeDistanceThreshold_0 = Module["_emscripten_bind_btDispatcherInfo_get_m_convexConservativeDistanceThreshold_0"] = asm["_emscripten_bind_btDispatcherInfo_get_m_convexConservativeDistanceThreshold_0"];
        var _emscripten_bind_btConvexHullShape_setLocalScaling_1 = Module["_emscripten_bind_btConvexHullShape_setLocalScaling_1"] = asm["_emscripten_bind_btConvexHullShape_setLocalScaling_1"];
        var _emscripten_bind_btRigidBody_setMotionState_1 = Module["_emscripten_bind_btRigidBody_setMotionState_1"] = asm["_emscripten_bind_btRigidBody_setMotionState_1"];
        var _emscripten_bind_RayResultCallback_get_m_collisionFilterMask_0 = Module["_emscripten_bind_RayResultCallback_get_m_collisionFilterMask_0"] = asm["_emscripten_bind_RayResultCallback_get_m_collisionFilterMask_0"];
        var _emscripten_bind_btCollisionWorld_getDispatcher_0 = Module["_emscripten_bind_btCollisionWorld_getDispatcher_0"] = asm["_emscripten_bind_btCollisionWorld_getDispatcher_0"];
        var _emscripten_bind_btVector4_dot_1 = Module["_emscripten_bind_btVector4_dot_1"] = asm["_emscripten_bind_btVector4_dot_1"];
        var _emscripten_bind_btCollisionObject_setRollingFriction_1 = Module["_emscripten_bind_btCollisionObject_setRollingFriction_1"] = asm["_emscripten_bind_btCollisionObject_setRollingFriction_1"];
        var _emscripten_bind_RayResultCallback_set_m_collisionFilterGroup_1 = Module["_emscripten_bind_RayResultCallback_set_m_collisionFilterGroup_1"] = asm["_emscripten_bind_RayResultCallback_set_m_collisionFilterGroup_1"];
        var _emscripten_bind_btPairCachingGhostObject_getCollisionShape_0 = Module["_emscripten_bind_btPairCachingGhostObject_getCollisionShape_0"] = asm["_emscripten_bind_btPairCachingGhostObject_getCollisionShape_0"];
        var _emscripten_bind_btRotationalLimitMotor2_get_m_currentPosition_0 = Module["_emscripten_bind_btRotationalLimitMotor2_get_m_currentPosition_0"] = asm["_emscripten_bind_btRotationalLimitMotor2_get_m_currentPosition_0"];
        var _i64Subtract = Module["_i64Subtract"] = asm["_i64Subtract"];
        var _emscripten_bind_btRaycastVehicle_getWheelTransformWS_1 = Module["_emscripten_bind_btRaycastVehicle_getWheelTransformWS_1"] = asm["_emscripten_bind_btRaycastVehicle_getWheelTransformWS_1"];
        var _emscripten_bind_btRigidBody_setDamping_2 = Module["_emscripten_bind_btRigidBody_setDamping_2"] = asm["_emscripten_bind_btRigidBody_setDamping_2"];
        var _emscripten_bind_btDynamicsWorld_getDispatcher_0 = Module["_emscripten_bind_btDynamicsWorld_getDispatcher_0"] = asm["_emscripten_bind_btDynamicsWorld_getDispatcher_0"];
        var _emscripten_bind_btGhostObject_setCollisionFlags_1 = Module["_emscripten_bind_btGhostObject_setCollisionFlags_1"] = asm["_emscripten_bind_btGhostObject_setCollisionFlags_1"];
        var _emscripten_bind_btMatrix3x3_getRotation_1 = Module["_emscripten_bind_btMatrix3x3_getRotation_1"] = asm["_emscripten_bind_btMatrix3x3_getRotation_1"];
        var _emscripten_bind_btWheelInfo_set_m_engineForce_1 = Module["_emscripten_bind_btWheelInfo_set_m_engineForce_1"] = asm["_emscripten_bind_btWheelInfo_set_m_engineForce_1"];
        var _emscripten_bind_btConeTwistConstraint_setMaxMotorImpulse_1 = Module["_emscripten_bind_btConeTwistConstraint_setMaxMotorImpulse_1"] = asm["_emscripten_bind_btConeTwistConstraint_setMaxMotorImpulse_1"];
        var _emscripten_bind_btCylinderShapeX_setLocalScaling_1 = Module["_emscripten_bind_btCylinderShapeX_setLocalScaling_1"] = asm["_emscripten_bind_btCylinderShapeX_setLocalScaling_1"];
        var _emscripten_bind_btDbvtBroadphase_btDbvtBroadphase_0 = Module["_emscripten_bind_btDbvtBroadphase_btDbvtBroadphase_0"] = asm["_emscripten_bind_btDbvtBroadphase_btDbvtBroadphase_0"];
        var _emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalDamping_0 = Module["_emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalDamping_0"] = asm["_emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalDamping_0"];
        var _emscripten_bind_btCompoundShape_setLocalScaling_1 = Module["_emscripten_bind_btCompoundShape_setLocalScaling_1"] = asm["_emscripten_bind_btCompoundShape_setLocalScaling_1"];
        var _emscripten_bind_btOverlappingPairCallback___destroy___0 = Module["_emscripten_bind_btOverlappingPairCallback___destroy___0"] = asm["_emscripten_bind_btOverlappingPairCallback___destroy___0"];
        var _emscripten_bind_btManifoldPoint_get_m_positionWorldOnB_0 = Module["_emscripten_bind_btManifoldPoint_get_m_positionWorldOnB_0"] = asm["_emscripten_bind_btManifoldPoint_get_m_positionWorldOnB_0"];
        var _emscripten_bind_btCylinderShape_calculateLocalInertia_2 = Module["_emscripten_bind_btCylinderShape_calculateLocalInertia_2"] = asm["_emscripten_bind_btCylinderShape_calculateLocalInertia_2"];
        var _emscripten_bind_btPairCachingGhostObject_setCcdSweptSphereRadius_1 = Module["_emscripten_bind_btPairCachingGhostObject_setCcdSweptSphereRadius_1"] = asm["_emscripten_bind_btPairCachingGhostObject_setCcdSweptSphereRadius_1"];
        var _emscripten_bind_btHingeConstraint_enableAngularMotor_3 = Module["_emscripten_bind_btHingeConstraint_enableAngularMotor_3"] = asm["_emscripten_bind_btHingeConstraint_enableAngularMotor_3"];
        var _emscripten_bind_btRigidBody_setContactProcessingThreshold_1 = Module["_emscripten_bind_btRigidBody_setContactProcessingThreshold_1"] = asm["_emscripten_bind_btRigidBody_setContactProcessingThreshold_1"];
        var _emscripten_bind_btRigidBody_getLinearVelocity_0 = Module["_emscripten_bind_btRigidBody_getLinearVelocity_0"] = asm["_emscripten_bind_btRigidBody_getLinearVelocity_0"];
        var _emscripten_bind_btRigidBody_applyImpulse_2 = Module["_emscripten_bind_btRigidBody_applyImpulse_2"] = asm["_emscripten_bind_btRigidBody_applyImpulse_2"];
        var _emscripten_bind_btConcaveShape_calculateLocalInertia_2 = Module["_emscripten_bind_btConcaveShape_calculateLocalInertia_2"] = asm["_emscripten_bind_btConcaveShape_calculateLocalInertia_2"];
        var _emscripten_bind_RaycastInfo_get_m_groundObject_0 = Module["_emscripten_bind_RaycastInfo_get_m_groundObject_0"] = asm["_emscripten_bind_RaycastInfo_get_m_groundObject_0"];
        var _emscripten_bind_btRigidBody_setWorldTransform_1 = Module["_emscripten_bind_btRigidBody_setWorldTransform_1"] = asm["_emscripten_bind_btRigidBody_setWorldTransform_1"];
        var _emscripten_bind_btRigidBody_setAngularVelocity_1 = Module["_emscripten_bind_btRigidBody_setAngularVelocity_1"] = asm["_emscripten_bind_btRigidBody_setAngularVelocity_1"];
        var _emscripten_bind_btGeneric6DofSpringConstraint_btGeneric6DofSpringConstraint_3 = Module["_emscripten_bind_btGeneric6DofSpringConstraint_btGeneric6DofSpringConstraint_3"] = asm["_emscripten_bind_btGeneric6DofSpringConstraint_btGeneric6DofSpringConstraint_3"];
        var _emscripten_bind_btConvexShape_setLocalScaling_1 = Module["_emscripten_bind_btConvexShape_setLocalScaling_1"] = asm["_emscripten_bind_btConvexShape_setLocalScaling_1"];
        var _emscripten_bind_btTriangleMeshShape_calculateLocalInertia_2 = Module["_emscripten_bind_btTriangleMeshShape_calculateLocalInertia_2"] = asm["_emscripten_bind_btTriangleMeshShape_calculateLocalInertia_2"];
        var _emscripten_bind_btPairCachingGhostObject_setContactProcessingThreshold_1 = Module["_emscripten_bind_btPairCachingGhostObject_setContactProcessingThreshold_1"] = asm["_emscripten_bind_btPairCachingGhostObject_setContactProcessingThreshold_1"];
        var _emscripten_bind_btCompoundShape___destroy___0 = Module["_emscripten_bind_btCompoundShape___destroy___0"] = asm["_emscripten_bind_btCompoundShape___destroy___0"];
        var _emscripten_bind_btGeneric6DofConstraint_setLinearUpperLimit_1 = Module["_emscripten_bind_btGeneric6DofConstraint_setLinearUpperLimit_1"] = asm["_emscripten_bind_btGeneric6DofConstraint_setLinearUpperLimit_1"];
        var _emscripten_bind_ClosestRayResultCallback_get_m_collisionFilterMask_0 = Module["_emscripten_bind_ClosestRayResultCallback_get_m_collisionFilterMask_0"] = asm["_emscripten_bind_ClosestRayResultCallback_get_m_collisionFilterMask_0"];
        var _emscripten_bind_RayResultCallback_hasHit_0 = Module["_emscripten_bind_RayResultCallback_hasHit_0"] = asm["_emscripten_bind_RayResultCallback_hasHit_0"];
        var _bitshift64Shl = Module["_bitshift64Shl"] = asm["_bitshift64Shl"];
        var _emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalAngularDampingThresholdSqr_0 = Module["_emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalAngularDampingThresholdSqr_0"] = asm["_emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalAngularDampingThresholdSqr_0"];
        var _emscripten_bind_btCylinderShapeX_getMargin_0 = Module["_emscripten_bind_btCylinderShapeX_getMargin_0"] = asm["_emscripten_bind_btCylinderShapeX_getMargin_0"];
        var _emscripten_bind_btQuaternion_normalize_0 = Module["_emscripten_bind_btQuaternion_normalize_0"] = asm["_emscripten_bind_btQuaternion_normalize_0"];
        var _emscripten_bind_ClosestConvexResultCallback_get_m_convexToWorld_0 = Module["_emscripten_bind_ClosestConvexResultCallback_get_m_convexToWorld_0"] = asm["_emscripten_bind_ClosestConvexResultCallback_get_m_convexToWorld_0"];
        var _emscripten_bind_btWheelInfo_get_m_frictionSlip_0 = Module["_emscripten_bind_btWheelInfo_get_m_frictionSlip_0"] = asm["_emscripten_bind_btWheelInfo_get_m_frictionSlip_0"];
        var _emscripten_bind_btConeShapeZ_setLocalScaling_1 = Module["_emscripten_bind_btConeShapeZ_setLocalScaling_1"] = asm["_emscripten_bind_btConeShapeZ_setLocalScaling_1"];
        var _emscripten_bind_btPairCachingGhostObject_setActivationState_1 = Module["_emscripten_bind_btPairCachingGhostObject_setActivationState_1"] = asm["_emscripten_bind_btPairCachingGhostObject_setActivationState_1"];
        var _emscripten_bind_btGeneric6DofSpringConstraint___destroy___0 = Module["_emscripten_bind_btGeneric6DofSpringConstraint___destroy___0"] = asm["_emscripten_bind_btGeneric6DofSpringConstraint___destroy___0"];
        var _emscripten_bind_btRaycastVehicle_getNumWheels_0 = Module["_emscripten_bind_btRaycastVehicle_getNumWheels_0"] = asm["_emscripten_bind_btRaycastVehicle_getNumWheels_0"];
        var _emscripten_bind_btVehicleTuning_set_m_maxSuspensionTravelCm_1 = Module["_emscripten_bind_btVehicleTuning_set_m_maxSuspensionTravelCm_1"] = asm["_emscripten_bind_btVehicleTuning_set_m_maxSuspensionTravelCm_1"];
        var _emscripten_bind_btGhostObject_setRollingFriction_1 = Module["_emscripten_bind_btGhostObject_setRollingFriction_1"] = asm["_emscripten_bind_btGhostObject_setRollingFriction_1"];
        var _emscripten_bind_btCylinderShapeZ_btCylinderShapeZ_1 = Module["_emscripten_bind_btCylinderShapeZ_btCylinderShapeZ_1"] = asm["_emscripten_bind_btCylinderShapeZ_btCylinderShapeZ_1"];
        var _emscripten_bind_btPoint2PointConstraint_set_m_setting_1 = Module["_emscripten_bind_btPoint2PointConstraint_set_m_setting_1"] = asm["_emscripten_bind_btPoint2PointConstraint_set_m_setting_1"];
        var _emscripten_bind_btCompoundShape_btCompoundShape_0 = Module["_emscripten_bind_btCompoundShape_btCompoundShape_0"] = asm["_emscripten_bind_btCompoundShape_btCompoundShape_0"];
        var _emscripten_bind_btCompoundShape_btCompoundShape_1 = Module["_emscripten_bind_btCompoundShape_btCompoundShape_1"] = asm["_emscripten_bind_btCompoundShape_btCompoundShape_1"];
        var _emscripten_bind_btOverlappingPairCache_setInternalGhostPairCallback_1 = Module["_emscripten_bind_btOverlappingPairCache_setInternalGhostPairCallback_1"] = asm["_emscripten_bind_btOverlappingPairCache_setInternalGhostPairCallback_1"];
        var _emscripten_bind_btStaticPlaneShape_btStaticPlaneShape_2 = Module["_emscripten_bind_btStaticPlaneShape_btStaticPlaneShape_2"] = asm["_emscripten_bind_btStaticPlaneShape_btStaticPlaneShape_2"];
        var __GLOBAL__sub_I_btQuickprof_cpp = Module["__GLOBAL__sub_I_btQuickprof_cpp"] = asm["__GLOBAL__sub_I_btQuickprof_cpp"];
        var _emscripten_bind_btDispatcherInfo_set_m_convexConservativeDistanceThreshold_1 = Module["_emscripten_bind_btDispatcherInfo_set_m_convexConservativeDistanceThreshold_1"] = asm["_emscripten_bind_btDispatcherInfo_set_m_convexConservativeDistanceThreshold_1"];
        var _emscripten_bind_btDispatcherInfo_get_m_useContinuous_0 = Module["_emscripten_bind_btDispatcherInfo_get_m_useContinuous_0"] = asm["_emscripten_bind_btDispatcherInfo_get_m_useContinuous_0"];
        var _emscripten_bind_btRigidBody_updateInertiaTensor_0 = Module["_emscripten_bind_btRigidBody_updateInertiaTensor_0"] = asm["_emscripten_bind_btRigidBody_updateInertiaTensor_0"];
        var _emscripten_bind_btPairCachingGhostObject_setAnisotropicFriction_2 = Module["_emscripten_bind_btPairCachingGhostObject_setAnisotropicFriction_2"] = asm["_emscripten_bind_btPairCachingGhostObject_setAnisotropicFriction_2"];
        var _emscripten_bind_btTransform_setOrigin_1 = Module["_emscripten_bind_btTransform_setOrigin_1"] = asm["_emscripten_bind_btTransform_setOrigin_1"];
        var _emscripten_bind_ClosestRayResultCallback_hasHit_0 = Module["_emscripten_bind_ClosestRayResultCallback_hasHit_0"] = asm["_emscripten_bind_ClosestRayResultCallback_hasHit_0"];
        var _emscripten_bind_btDispatcherInfo_get_m_useConvexConservativeDistanceUtil_0 = Module["_emscripten_bind_btDispatcherInfo_get_m_useConvexConservativeDistanceUtil_0"] = asm["_emscripten_bind_btDispatcherInfo_get_m_useConvexConservativeDistanceUtil_0"];
        var _emscripten_bind_btCompoundShape_addChildShape_2 = Module["_emscripten_bind_btCompoundShape_addChildShape_2"] = asm["_emscripten_bind_btCompoundShape_addChildShape_2"];
        var _emscripten_bind_btDispatcher___destroy___0 = Module["_emscripten_bind_btDispatcher___destroy___0"] = asm["_emscripten_bind_btDispatcher___destroy___0"];
        var _emscripten_bind_btVehicleTuning_get_m_suspensionCompression_0 = Module["_emscripten_bind_btVehicleTuning_get_m_suspensionCompression_0"] = asm["_emscripten_bind_btVehicleTuning_get_m_suspensionCompression_0"];
        var _emscripten_bind_btDiscreteDynamicsWorld___destroy___0 = Module["_emscripten_bind_btDiscreteDynamicsWorld___destroy___0"] = asm["_emscripten_bind_btDiscreteDynamicsWorld___destroy___0"];
        var _emscripten_bind_btConvexShape___destroy___0 = Module["_emscripten_bind_btConvexShape___destroy___0"] = asm["_emscripten_bind_btConvexShape___destroy___0"];
        var _memmove = Module["_memmove"] = asm["_memmove"];
        var _emscripten_bind_btCapsuleShapeX_setLocalScaling_1 = Module["_emscripten_bind_btCapsuleShapeX_setLocalScaling_1"] = asm["_emscripten_bind_btCapsuleShapeX_setLocalScaling_1"];
        var _emscripten_bind_btPairCachingGhostObject_setCollisionFlags_1 = Module["_emscripten_bind_btPairCachingGhostObject_setCollisionFlags_1"] = asm["_emscripten_bind_btPairCachingGhostObject_setCollisionFlags_1"];
        var _emscripten_bind_btCollisionObject_setRestitution_1 = Module["_emscripten_bind_btCollisionObject_setRestitution_1"] = asm["_emscripten_bind_btCollisionObject_setRestitution_1"];
        var _emscripten_bind_btRigidBody_applyCentralForce_1 = Module["_emscripten_bind_btRigidBody_applyCentralForce_1"] = asm["_emscripten_bind_btRigidBody_applyCentralForce_1"];
        var _emscripten_bind_LocalConvexResult_get_m_hitFraction_0 = Module["_emscripten_bind_LocalConvexResult_get_m_hitFraction_0"] = asm["_emscripten_bind_LocalConvexResult_get_m_hitFraction_0"];
        var _emscripten_bind_btHingeConstraint_setBreakingImpulseThreshold_1 = Module["_emscripten_bind_btHingeConstraint_setBreakingImpulseThreshold_1"] = asm["_emscripten_bind_btHingeConstraint_setBreakingImpulseThreshold_1"];
        var _emscripten_bind_btQuaternion_w_0 = Module["_emscripten_bind_btQuaternion_w_0"] = asm["_emscripten_bind_btQuaternion_w_0"];
        var _emscripten_bind_ConvexResultCallback_get_m_collisionFilterGroup_0 = Module["_emscripten_bind_ConvexResultCallback_get_m_collisionFilterGroup_0"] = asm["_emscripten_bind_ConvexResultCallback_get_m_collisionFilterGroup_0"];
        var _emscripten_bind_btTransform_getRotation_0 = Module["_emscripten_bind_btTransform_getRotation_0"] = asm["_emscripten_bind_btTransform_getRotation_0"];
        var _emscripten_bind_btHingeConstraint_btHingeConstraint_6 = Module["_emscripten_bind_btHingeConstraint_btHingeConstraint_6"] = asm["_emscripten_bind_btHingeConstraint_btHingeConstraint_6"];
        var _emscripten_bind_btHingeConstraint_btHingeConstraint_7 = Module["_emscripten_bind_btHingeConstraint_btHingeConstraint_7"] = asm["_emscripten_bind_btHingeConstraint_btHingeConstraint_7"];
        var _emscripten_bind_btCapsuleShapeZ_getMargin_0 = Module["_emscripten_bind_btCapsuleShapeZ_getMargin_0"] = asm["_emscripten_bind_btCapsuleShapeZ_getMargin_0"];
        var _emscripten_bind_btHingeConstraint_btHingeConstraint_5 = Module["_emscripten_bind_btHingeConstraint_btHingeConstraint_5"] = asm["_emscripten_bind_btHingeConstraint_btHingeConstraint_5"];
        var _emscripten_bind_btHingeConstraint_btHingeConstraint_2 = Module["_emscripten_bind_btHingeConstraint_btHingeConstraint_2"] = asm["_emscripten_bind_btHingeConstraint_btHingeConstraint_2"];
        var _emscripten_bind_btHingeConstraint_btHingeConstraint_3 = Module["_emscripten_bind_btHingeConstraint_btHingeConstraint_3"] = asm["_emscripten_bind_btHingeConstraint_btHingeConstraint_3"];
        var _emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalAngularDampingThresholdSqr_1 = Module["_emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalAngularDampingThresholdSqr_1"] = asm["_emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalAngularDampingThresholdSqr_1"];
        var _emscripten_bind_btBoxShape_setMargin_1 = Module["_emscripten_bind_btBoxShape_setMargin_1"] = asm["_emscripten_bind_btBoxShape_setMargin_1"];
        var _emscripten_bind_ClosestConvexResultCallback_get_m_hitNormalWorld_0 = Module["_emscripten_bind_ClosestConvexResultCallback_get_m_hitNormalWorld_0"] = asm["_emscripten_bind_ClosestConvexResultCallback_get_m_hitNormalWorld_0"];
        var _emscripten_bind_btMatrix3x3_getRow_1 = Module["_emscripten_bind_btMatrix3x3_getRow_1"] = asm["_emscripten_bind_btMatrix3x3_getRow_1"];
        var _emscripten_bind_btTypedConstraint___destroy___0 = Module["_emscripten_bind_btTypedConstraint___destroy___0"] = asm["_emscripten_bind_btTypedConstraint___destroy___0"];
        var _emscripten_bind_btCylinderShapeX_btCylinderShapeX_1 = Module["_emscripten_bind_btCylinderShapeX_btCylinderShapeX_1"] = asm["_emscripten_bind_btCylinderShapeX_btCylinderShapeX_1"];
        var _emscripten_enum_RotateOrder_RO_XYZ = Module["_emscripten_enum_RotateOrder_RO_XYZ"] = asm["_emscripten_enum_RotateOrder_RO_XYZ"];
        var _emscripten_bind_btGeneric6DofSpringConstraint_setAngularUpperLimit_1 = Module["_emscripten_bind_btGeneric6DofSpringConstraint_setAngularUpperLimit_1"] = asm["_emscripten_bind_btGeneric6DofSpringConstraint_setAngularUpperLimit_1"];
        var _emscripten_bind_btDiscreteDynamicsWorld_addRigidBody_3 = Module["_emscripten_bind_btDiscreteDynamicsWorld_addRigidBody_3"] = asm["_emscripten_bind_btDiscreteDynamicsWorld_addRigidBody_3"];
        var _emscripten_bind_btDiscreteDynamicsWorld_addRigidBody_1 = Module["_emscripten_bind_btDiscreteDynamicsWorld_addRigidBody_1"] = asm["_emscripten_bind_btDiscreteDynamicsWorld_addRigidBody_1"];
        var _bitshift64Ashr = Module["_bitshift64Ashr"] = asm["_bitshift64Ashr"];
        var _emscripten_bind_btQuaternion_btQuaternion_4 = Module["_emscripten_bind_btQuaternion_btQuaternion_4"] = asm["_emscripten_bind_btQuaternion_btQuaternion_4"];
        var _emscripten_bind_btDiscreteDynamicsWorld_removeAction_1 = Module["_emscripten_bind_btDiscreteDynamicsWorld_removeAction_1"] = asm["_emscripten_bind_btDiscreteDynamicsWorld_removeAction_1"];
        var _emscripten_bind_btSphereShape_btSphereShape_1 = Module["_emscripten_bind_btSphereShape_btSphereShape_1"] = asm["_emscripten_bind_btSphereShape_btSphereShape_1"];
        var _emscripten_bind_btWheelInfo_get_m_wheelsSuspensionForce_0 = Module["_emscripten_bind_btWheelInfo_get_m_wheelsSuspensionForce_0"] = asm["_emscripten_bind_btWheelInfo_get_m_wheelsSuspensionForce_0"];
        var _emscripten_bind_btQuaternion_y_0 = Module["_emscripten_bind_btQuaternion_y_0"] = asm["_emscripten_bind_btQuaternion_y_0"];
        var _emscripten_bind_btCollisionWorld_addCollisionObject_1 = Module["_emscripten_bind_btCollisionWorld_addCollisionObject_1"] = asm["_emscripten_bind_btCollisionWorld_addCollisionObject_1"];
        var _emscripten_bind_btCollisionWorld_addCollisionObject_2 = Module["_emscripten_bind_btCollisionWorld_addCollisionObject_2"] = asm["_emscripten_bind_btCollisionWorld_addCollisionObject_2"];
        var _emscripten_bind_btCollisionWorld_addCollisionObject_3 = Module["_emscripten_bind_btCollisionWorld_addCollisionObject_3"] = asm["_emscripten_bind_btCollisionWorld_addCollisionObject_3"];
        var _emscripten_bind_ClosestConvexResultCallback_set_m_collisionFilterGroup_1 = Module["_emscripten_bind_ClosestConvexResultCallback_set_m_collisionFilterGroup_1"] = asm["_emscripten_bind_ClosestConvexResultCallback_set_m_collisionFilterGroup_1"];
        var _emscripten_bind_btConeTwistConstraint_setBreakingImpulseThreshold_1 = Module["_emscripten_bind_btConeTwistConstraint_setBreakingImpulseThreshold_1"] = asm["_emscripten_bind_btConeTwistConstraint_setBreakingImpulseThreshold_1"];
        var _emscripten_bind_RaycastInfo_get_m_isInContact_0 = Module["_emscripten_bind_RaycastInfo_get_m_isInContact_0"] = asm["_emscripten_bind_RaycastInfo_get_m_isInContact_0"];
        var _emscripten_bind_btGeneric6DofSpring2Constraint_setLinearUpperLimit_1 = Module["_emscripten_bind_btGeneric6DofSpring2Constraint_setLinearUpperLimit_1"] = asm["_emscripten_bind_btGeneric6DofSpring2Constraint_setLinearUpperLimit_1"];
        var _emscripten_bind_ClosestConvexResultCallback_get_m_collisionFilterGroup_0 = Module["_emscripten_bind_ClosestConvexResultCallback_get_m_collisionFilterGroup_0"] = asm["_emscripten_bind_ClosestConvexResultCallback_get_m_collisionFilterGroup_0"];
        var _emscripten_bind_btCapsuleShape_setMargin_1 = Module["_emscripten_bind_btCapsuleShape_setMargin_1"] = asm["_emscripten_bind_btCapsuleShape_setMargin_1"];
        var _emscripten_bind_btDefaultVehicleRaycaster_btDefaultVehicleRaycaster_1 = Module["_emscripten_bind_btDefaultVehicleRaycaster_btDefaultVehicleRaycaster_1"] = asm["_emscripten_bind_btDefaultVehicleRaycaster_btDefaultVehicleRaycaster_1"];
        var _emscripten_bind_btPoint2PointConstraint_get_m_setting_0 = Module["_emscripten_bind_btPoint2PointConstraint_get_m_setting_0"] = asm["_emscripten_bind_btPoint2PointConstraint_get_m_setting_0"];
        var _emscripten_bind_btSequentialImpulseConstraintSolver_btSequentialImpulseConstraintSolver_0 = Module["_emscripten_bind_btSequentialImpulseConstraintSolver_btSequentialImpulseConstraintSolver_0"] = asm["_emscripten_bind_btSequentialImpulseConstraintSolver_btSequentialImpulseConstraintSolver_0"];
        var _emscripten_bind_btActionInterface___destroy___0 = Module["_emscripten_bind_btActionInterface___destroy___0"] = asm["_emscripten_bind_btActionInterface___destroy___0"];
        var _emscripten_bind_btDefaultMotionState_setWorldTransform_1 = Module["_emscripten_bind_btDefaultMotionState_setWorldTransform_1"] = asm["_emscripten_bind_btDefaultMotionState_setWorldTransform_1"];
        var _emscripten_bind_btCollisionWorld_contactTest_2 = Module["_emscripten_bind_btCollisionWorld_contactTest_2"] = asm["_emscripten_bind_btCollisionWorld_contactTest_2"];
        var _emscripten_bind_RayResultCallback_get_m_collisionObject_0 = Module["_emscripten_bind_RayResultCallback_get_m_collisionObject_0"] = asm["_emscripten_bind_RayResultCallback_get_m_collisionObject_0"];
        var _emscripten_bind_btPoint2PointConstraint_getPivotInA_0 = Module["_emscripten_bind_btPoint2PointConstraint_getPivotInA_0"] = asm["_emscripten_bind_btPoint2PointConstraint_getPivotInA_0"];
        var _emscripten_bind_btGeneric6DofSpringConstraint_setStiffness_2 = Module["_emscripten_bind_btGeneric6DofSpringConstraint_setStiffness_2"] = asm["_emscripten_bind_btGeneric6DofSpringConstraint_setStiffness_2"];
        var _emscripten_bind_btVector4_setY_1 = Module["_emscripten_bind_btVector4_setY_1"] = asm["_emscripten_bind_btVector4_setY_1"];
        var _emscripten_bind_btCompoundShape_setMargin_1 = Module["_emscripten_bind_btCompoundShape_setMargin_1"] = asm["_emscripten_bind_btCompoundShape_setMargin_1"];
        var _emscripten_bind_ClosestConvexResultCallback___destroy___0 = Module["_emscripten_bind_ClosestConvexResultCallback___destroy___0"] = asm["_emscripten_bind_ClosestConvexResultCallback___destroy___0"];
        var _emscripten_bind_btDynamicsWorld_addCollisionObject_1 = Module["_emscripten_bind_btDynamicsWorld_addCollisionObject_1"] = asm["_emscripten_bind_btDynamicsWorld_addCollisionObject_1"];
        var _emscripten_bind_ClosestConvexResultCallback_get_m_collisionFilterMask_0 = Module["_emscripten_bind_ClosestConvexResultCallback_get_m_collisionFilterMask_0"] = asm["_emscripten_bind_ClosestConvexResultCallback_get_m_collisionFilterMask_0"];
        var ___cxa_can_catch = Module["___cxa_can_catch"] = asm["___cxa_can_catch"];
        var _emscripten_bind_btDynamicsWorld_addCollisionObject_2 = Module["_emscripten_bind_btDynamicsWorld_addCollisionObject_2"] = asm["_emscripten_bind_btDynamicsWorld_addCollisionObject_2"];
        var _emscripten_bind_btDiscreteDynamicsWorld_getDispatcher_0 = Module["_emscripten_bind_btDiscreteDynamicsWorld_getDispatcher_0"] = asm["_emscripten_bind_btDiscreteDynamicsWorld_getDispatcher_0"];
        var _emscripten_bind_btWheelInfo_get_m_maxSuspensionTravelCm_0 = Module["_emscripten_bind_btWheelInfo_get_m_maxSuspensionTravelCm_0"] = asm["_emscripten_bind_btWheelInfo_get_m_maxSuspensionTravelCm_0"];
        var _emscripten_bind_btVector4_op_mul_1 = Module["_emscripten_bind_btVector4_op_mul_1"] = asm["_emscripten_bind_btVector4_op_mul_1"];
        var _emscripten_bind_btCylinderShape_btCylinderShape_1 = Module["_emscripten_bind_btCylinderShape_btCylinderShape_1"] = asm["_emscripten_bind_btCylinderShape_btCylinderShape_1"];
        var _emscripten_bind_btVector3___destroy___0 = Module["_emscripten_bind_btVector3___destroy___0"] = asm["_emscripten_bind_btVector3___destroy___0"];
        var _emscripten_bind_RaycastInfo___destroy___0 = Module["_emscripten_bind_RaycastInfo___destroy___0"] = asm["_emscripten_bind_RaycastInfo___destroy___0"];
        var _emscripten_bind_btRigidBody_setAngularFactor_1 = Module["_emscripten_bind_btRigidBody_setAngularFactor_1"] = asm["_emscripten_bind_btRigidBody_setAngularFactor_1"];
        var _emscripten_bind_btCylinderShapeZ_calculateLocalInertia_2 = Module["_emscripten_bind_btCylinderShapeZ_calculateLocalInertia_2"] = asm["_emscripten_bind_btCylinderShapeZ_calculateLocalInertia_2"];
        var _emscripten_bind_LocalShapeInfo_set_m_triangleIndex_1 = Module["_emscripten_bind_LocalShapeInfo_set_m_triangleIndex_1"] = asm["_emscripten_bind_LocalShapeInfo_set_m_triangleIndex_1"];
        var _emscripten_bind_btMotionState_getWorldTransform_1 = Module["_emscripten_bind_btMotionState_getWorldTransform_1"] = asm["_emscripten_bind_btMotionState_getWorldTransform_1"];
        var _emscripten_bind_btDynamicsWorld_getSolverInfo_0 = Module["_emscripten_bind_btDynamicsWorld_getSolverInfo_0"] = asm["_emscripten_bind_btDynamicsWorld_getSolverInfo_0"];
        var _emscripten_bind_btDispatcherInfo_set_m_dispatchFunc_1 = Module["_emscripten_bind_btDispatcherInfo_set_m_dispatchFunc_1"] = asm["_emscripten_bind_btDispatcherInfo_set_m_dispatchFunc_1"];
        var _emscripten_bind_btSphereShape_getMargin_0 = Module["_emscripten_bind_btSphereShape_getMargin_0"] = asm["_emscripten_bind_btSphereShape_getMargin_0"];
        var _emscripten_bind_btGeneric6DofSpring2Constraint_btGeneric6DofSpring2Constraint_5 = Module["_emscripten_bind_btGeneric6DofSpring2Constraint_btGeneric6DofSpring2Constraint_5"] = asm["_emscripten_bind_btGeneric6DofSpring2Constraint_btGeneric6DofSpring2Constraint_5"];
        var _emscripten_bind_btVector3_x_0 = Module["_emscripten_bind_btVector3_x_0"] = asm["_emscripten_bind_btVector3_x_0"];
        var ___cxa_is_pointer_type = Module["___cxa_is_pointer_type"] = asm["___cxa_is_pointer_type"];
        var _emscripten_bind_btRigidBodyConstructionInfo_btRigidBodyConstructionInfo_3 = Module["_emscripten_bind_btRigidBodyConstructionInfo_btRigidBodyConstructionInfo_3"] = asm["_emscripten_bind_btRigidBodyConstructionInfo_btRigidBodyConstructionInfo_3"];
        var _emscripten_bind_btCollisionObject_getCollisionShape_0 = Module["_emscripten_bind_btCollisionObject_getCollisionShape_0"] = asm["_emscripten_bind_btCollisionObject_getCollisionShape_0"];
        var _emscripten_bind_btRigidBodyConstructionInfo_btRigidBodyConstructionInfo_4 = Module["_emscripten_bind_btRigidBodyConstructionInfo_btRigidBodyConstructionInfo_4"] = asm["_emscripten_bind_btRigidBodyConstructionInfo_btRigidBodyConstructionInfo_4"];
        var _emscripten_bind_btManifoldPoint___destroy___0 = Module["_emscripten_bind_btManifoldPoint___destroy___0"] = asm["_emscripten_bind_btManifoldPoint___destroy___0"];
        var _emscripten_bind_btRigidBodyConstructionInfo_set_m_rollingFriction_1 = Module["_emscripten_bind_btRigidBodyConstructionInfo_set_m_rollingFriction_1"] = asm["_emscripten_bind_btRigidBodyConstructionInfo_set_m_rollingFriction_1"];
        var _emscripten_bind_btVector4_length_0 = Module["_emscripten_bind_btVector4_length_0"] = asm["_emscripten_bind_btVector4_length_0"];
        var _emscripten_bind_btDefaultMotionState_set_m_graphicsWorldTrans_1 = Module["_emscripten_bind_btDefaultMotionState_set_m_graphicsWorldTrans_1"] = asm["_emscripten_bind_btDefaultMotionState_set_m_graphicsWorldTrans_1"];
        var _emscripten_bind_btGhostObject_setRestitution_1 = Module["_emscripten_bind_btGhostObject_setRestitution_1"] = asm["_emscripten_bind_btGhostObject_setRestitution_1"];
        var _emscripten_bind_btConeTwistConstraint_setAngularOnly_1 = Module["_emscripten_bind_btConeTwistConstraint_setAngularOnly_1"] = asm["_emscripten_bind_btConeTwistConstraint_setAngularOnly_1"];
        var _emscripten_bind_btCollisionObject_setFriction_1 = Module["_emscripten_bind_btCollisionObject_setFriction_1"] = asm["_emscripten_bind_btCollisionObject_setFriction_1"];
        var _emscripten_bind_btDefaultCollisionConfiguration___destroy___0 = Module["_emscripten_bind_btDefaultCollisionConfiguration___destroy___0"] = asm["_emscripten_bind_btDefaultCollisionConfiguration___destroy___0"];
        var _emscripten_bind_btRigidBody_setMassProps_2 = Module["_emscripten_bind_btRigidBody_setMassProps_2"] = asm["_emscripten_bind_btRigidBody_setMassProps_2"];
        var _emscripten_bind_btVector3_setValue_3 = Module["_emscripten_bind_btVector3_setValue_3"] = asm["_emscripten_bind_btVector3_setValue_3"];
        var _emscripten_bind_btPairCachingGhostObject_setCcdMotionThreshold_1 = Module["_emscripten_bind_btPairCachingGhostObject_setCcdMotionThreshold_1"] = asm["_emscripten_bind_btPairCachingGhostObject_setCcdMotionThreshold_1"];
        var _emscripten_bind_RaycastInfo_get_m_suspensionLength_0 = Module["_emscripten_bind_RaycastInfo_get_m_suspensionLength_0"] = asm["_emscripten_bind_RaycastInfo_get_m_suspensionLength_0"];
        var _emscripten_bind_btGhostObject_getCollisionFlags_0 = Module["_emscripten_bind_btGhostObject_getCollisionFlags_0"] = asm["_emscripten_bind_btGhostObject_getCollisionFlags_0"];
        var _emscripten_bind_btCapsuleShapeX___destroy___0 = Module["_emscripten_bind_btCapsuleShapeX___destroy___0"] = asm["_emscripten_bind_btCapsuleShapeX___destroy___0"];
        var _emscripten_bind_btKinematicCharacterController_setFallSpeed_1 = Module["_emscripten_bind_btKinematicCharacterController_setFallSpeed_1"] = asm["_emscripten_bind_btKinematicCharacterController_setFallSpeed_1"];
        var _emscripten_bind_btHingeConstraint_setLimit_4 = Module["_emscripten_bind_btHingeConstraint_setLimit_4"] = asm["_emscripten_bind_btHingeConstraint_setLimit_4"];
        var _emscripten_bind_btHingeConstraint_setLimit_5 = Module["_emscripten_bind_btHingeConstraint_setLimit_5"] = asm["_emscripten_bind_btHingeConstraint_setLimit_5"];
        var _emscripten_bind_btDefaultVehicleRaycaster___destroy___0 = Module["_emscripten_bind_btDefaultVehicleRaycaster___destroy___0"] = asm["_emscripten_bind_btDefaultVehicleRaycaster___destroy___0"];
        var _emscripten_bind_btWheelInfo_set_m_maxSuspensionTravelCm_1 = Module["_emscripten_bind_btWheelInfo_set_m_maxSuspensionTravelCm_1"] = asm["_emscripten_bind_btWheelInfo_set_m_maxSuspensionTravelCm_1"];
        var _emscripten_bind_btWheelInfo_set_m_wheelsSuspensionForce_1 = Module["_emscripten_bind_btWheelInfo_set_m_wheelsSuspensionForce_1"] = asm["_emscripten_bind_btWheelInfo_set_m_wheelsSuspensionForce_1"];
        var _emscripten_bind_btGhostObject_getNumOverlappingObjects_0 = Module["_emscripten_bind_btGhostObject_getNumOverlappingObjects_0"] = asm["_emscripten_bind_btGhostObject_getNumOverlappingObjects_0"];
        var _emscripten_bind_btTypedConstraint_getBreakingImpulseThreshold_0 = Module["_emscripten_bind_btTypedConstraint_getBreakingImpulseThreshold_0"] = asm["_emscripten_bind_btTypedConstraint_getBreakingImpulseThreshold_0"];
        var _emscripten_bind_btGhostObject_getCollisionShape_0 = Module["_emscripten_bind_btGhostObject_getCollisionShape_0"] = asm["_emscripten_bind_btGhostObject_getCollisionShape_0"];
        var _emscripten_bind_btCollisionObject_setAnisotropicFriction_2 = Module["_emscripten_bind_btCollisionObject_setAnisotropicFriction_2"] = asm["_emscripten_bind_btCollisionObject_setAnisotropicFriction_2"];
        var _emscripten_bind_btBoxShape___destroy___0 = Module["_emscripten_bind_btBoxShape___destroy___0"] = asm["_emscripten_bind_btBoxShape___destroy___0"];
        var _emscripten_bind_btPersistentManifold_getContactPoint_1 = Module["_emscripten_bind_btPersistentManifold_getContactPoint_1"] = asm["_emscripten_bind_btPersistentManifold_getContactPoint_1"];
        var _emscripten_bind_btGeneric6DofSpringConstraint_getBreakingImpulseThreshold_0 = Module["_emscripten_bind_btGeneric6DofSpringConstraint_getBreakingImpulseThreshold_0"] = asm["_emscripten_bind_btGeneric6DofSpringConstraint_getBreakingImpulseThreshold_0"];
        var _emscripten_bind_ConvexResultCallback_set_m_collisionFilterGroup_1 = Module["_emscripten_bind_ConvexResultCallback_set_m_collisionFilterGroup_1"] = asm["_emscripten_bind_ConvexResultCallback_set_m_collisionFilterGroup_1"];
        var _emscripten_bind_RaycastInfo_set_m_groundObject_1 = Module["_emscripten_bind_RaycastInfo_set_m_groundObject_1"] = asm["_emscripten_bind_RaycastInfo_set_m_groundObject_1"];
        var _emscripten_bind_btGhostObject_activate_1 = Module["_emscripten_bind_btGhostObject_activate_1"] = asm["_emscripten_bind_btGhostObject_activate_1"];
        var _emscripten_bind_btGeneric6DofSpringConstraint_enableSpring_2 = Module["_emscripten_bind_btGeneric6DofSpringConstraint_enableSpring_2"] = asm["_emscripten_bind_btGeneric6DofSpringConstraint_enableSpring_2"];
        var _emscripten_bind_btManifoldPoint_getPositionWorldOnB_0 = Module["_emscripten_bind_btManifoldPoint_getPositionWorldOnB_0"] = asm["_emscripten_bind_btManifoldPoint_getPositionWorldOnB_0"];
        var _emscripten_bind_btManifoldPoint_get_m_positionWorldOnA_0 = Module["_emscripten_bind_btManifoldPoint_get_m_positionWorldOnA_0"] = asm["_emscripten_bind_btManifoldPoint_get_m_positionWorldOnA_0"];
        var _emscripten_bind_btGeneric6DofSpringConstraint_enableFeedback_1 = Module["_emscripten_bind_btGeneric6DofSpringConstraint_enableFeedback_1"] = asm["_emscripten_bind_btGeneric6DofSpringConstraint_enableFeedback_1"];
        var _emscripten_bind_btSphereShape_setMargin_1 = Module["_emscripten_bind_btSphereShape_setMargin_1"] = asm["_emscripten_bind_btSphereShape_setMargin_1"];
        var _emscripten_bind_btGeneric6DofSpring2Constraint_setDamping_2 = Module["_emscripten_bind_btGeneric6DofSpring2Constraint_setDamping_2"] = asm["_emscripten_bind_btGeneric6DofSpring2Constraint_setDamping_2"];
        var _emscripten_bind_btConeShapeZ_btConeShapeZ_2 = Module["_emscripten_bind_btConeShapeZ_btConeShapeZ_2"] = asm["_emscripten_bind_btConeShapeZ_btConeShapeZ_2"];
        var _emscripten_bind_btContactSolverInfo_set_m_splitImpulsePenetrationThreshold_1 = Module["_emscripten_bind_btContactSolverInfo_set_m_splitImpulsePenetrationThreshold_1"] = asm["_emscripten_bind_btContactSolverInfo_set_m_splitImpulsePenetrationThreshold_1"];
        var _emscripten_bind_btSliderConstraint_setUpperAngLimit_1 = Module["_emscripten_bind_btSliderConstraint_setUpperAngLimit_1"] = asm["_emscripten_bind_btSliderConstraint_setUpperAngLimit_1"];
        var _emscripten_bind_btDynamicsWorld_contactPairTest_3 = Module["_emscripten_bind_btDynamicsWorld_contactPairTest_3"] = asm["_emscripten_bind_btDynamicsWorld_contactPairTest_3"];
        var _emscripten_bind_btCollisionWorld_getPairCache_0 = Module["_emscripten_bind_btCollisionWorld_getPairCache_0"] = asm["_emscripten_bind_btCollisionWorld_getPairCache_0"];
        var _emscripten_bind_btConeTwistConstraint_setMotorTarget_1 = Module["_emscripten_bind_btConeTwistConstraint_setMotorTarget_1"] = asm["_emscripten_bind_btConeTwistConstraint_setMotorTarget_1"];
        var _emscripten_bind_ClosestConvexResultCallback_set_m_convexFromWorld_1 = Module["_emscripten_bind_ClosestConvexResultCallback_set_m_convexFromWorld_1"] = asm["_emscripten_bind_ClosestConvexResultCallback_set_m_convexFromWorld_1"];
        var _emscripten_bind_btWheelInfo_set_m_rollInfluence_1 = Module["_emscripten_bind_btWheelInfo_set_m_rollInfluence_1"] = asm["_emscripten_bind_btWheelInfo_set_m_rollInfluence_1"];
        var _emscripten_bind_btGeneric6DofConstraint_setBreakingImpulseThreshold_1 = Module["_emscripten_bind_btGeneric6DofConstraint_setBreakingImpulseThreshold_1"] = asm["_emscripten_bind_btGeneric6DofConstraint_setBreakingImpulseThreshold_1"];
        var _emscripten_bind_btDefaultCollisionConstructionInfo_btDefaultCollisionConstructionInfo_0 = Module["_emscripten_bind_btDefaultCollisionConstructionInfo_btDefaultCollisionConstructionInfo_0"] = asm["_emscripten_bind_btDefaultCollisionConstructionInfo_btDefaultCollisionConstructionInfo_0"];
        var _emscripten_bind_btGhostObject_forceActivationState_1 = Module["_emscripten_bind_btGhostObject_forceActivationState_1"] = asm["_emscripten_bind_btGhostObject_forceActivationState_1"];
        var _emscripten_bind_ConcreteContactResultCallback_ConcreteContactResultCallback_0 = Module["_emscripten_bind_ConcreteContactResultCallback_ConcreteContactResultCallback_0"] = asm["_emscripten_bind_ConcreteContactResultCallback_ConcreteContactResultCallback_0"];
        var _emscripten_bind_VoidPtr___destroy___0 = Module["_emscripten_bind_VoidPtr___destroy___0"] = asm["_emscripten_bind_VoidPtr___destroy___0"];
        var _emscripten_bind_RaycastInfo_set_m_contactNormalWS_1 = Module["_emscripten_bind_RaycastInfo_set_m_contactNormalWS_1"] = asm["_emscripten_bind_RaycastInfo_set_m_contactNormalWS_1"];
        var _emscripten_bind_btSliderConstraint_setLowerAngLimit_1 = Module["_emscripten_bind_btSliderConstraint_setLowerAngLimit_1"] = asm["_emscripten_bind_btSliderConstraint_setLowerAngLimit_1"];
        var _emscripten_bind_RaycastInfo_set_m_contactPointWS_1 = Module["_emscripten_bind_RaycastInfo_set_m_contactPointWS_1"] = asm["_emscripten_bind_RaycastInfo_set_m_contactPointWS_1"];
        var _emscripten_bind_btConeShape_btConeShape_2 = Module["_emscripten_bind_btConeShape_btConeShape_2"] = asm["_emscripten_bind_btConeShape_btConeShape_2"];
        var _emscripten_bind_ClosestRayResultCallback_get_m_rayFromWorld_0 = Module["_emscripten_bind_ClosestRayResultCallback_get_m_rayFromWorld_0"] = asm["_emscripten_bind_ClosestRayResultCallback_get_m_rayFromWorld_0"];
        var _emscripten_bind_btRaycastVehicle_getRigidBody_0 = Module["_emscripten_bind_btRaycastVehicle_getRigidBody_0"] = asm["_emscripten_bind_btRaycastVehicle_getRigidBody_0"];
        var _emscripten_enum_RotateOrder_RO_YZX = Module["_emscripten_enum_RotateOrder_RO_YZX"] = asm["_emscripten_enum_RotateOrder_RO_YZX"];
        var _emscripten_bind_RayResultCallback_get_m_collisionFilterGroup_0 = Module["_emscripten_bind_RayResultCallback_get_m_collisionFilterGroup_0"] = asm["_emscripten_bind_RayResultCallback_get_m_collisionFilterGroup_0"];
        var _emscripten_bind_btWheelInfo_get_m_steering_0 = Module["_emscripten_bind_btWheelInfo_get_m_steering_0"] = asm["_emscripten_bind_btWheelInfo_get_m_steering_0"];
        var _emscripten_bind_btConstraintSetting_get_m_tau_0 = Module["_emscripten_bind_btConstraintSetting_get_m_tau_0"] = asm["_emscripten_bind_btConstraintSetting_get_m_tau_0"];
        var _emscripten_bind_btConeShape_setLocalScaling_1 = Module["_emscripten_bind_btConeShape_setLocalScaling_1"] = asm["_emscripten_bind_btConeShape_setLocalScaling_1"];
        var _emscripten_bind_btCollisionObject_setCollisionShape_1 = Module["_emscripten_bind_btCollisionObject_setCollisionShape_1"] = asm["_emscripten_bind_btCollisionObject_setCollisionShape_1"];
        var _emscripten_bind_btCollisionShape___destroy___0 = Module["_emscripten_bind_btCollisionShape___destroy___0"] = asm["_emscripten_bind_btCollisionShape___destroy___0"];
        var _emscripten_bind_ConvexResultCallback_get_m_closestHitFraction_0 = Module["_emscripten_bind_ConvexResultCallback_get_m_closestHitFraction_0"] = asm["_emscripten_bind_ConvexResultCallback_get_m_closestHitFraction_0"];
        var _emscripten_bind_btDispatcherInfo_get_m_dispatchFunc_0 = Module["_emscripten_bind_btDispatcherInfo_get_m_dispatchFunc_0"] = asm["_emscripten_bind_btDispatcherInfo_get_m_dispatchFunc_0"];
        var _emscripten_bind_btRigidBodyConstructionInfo_get_m_rollingFriction_0 = Module["_emscripten_bind_btRigidBodyConstructionInfo_get_m_rollingFriction_0"] = asm["_emscripten_bind_btRigidBodyConstructionInfo_get_m_rollingFriction_0"];
        var _emscripten_bind_btPairCachingGhostObject_setCollisionShape_1 = Module["_emscripten_bind_btPairCachingGhostObject_setCollisionShape_1"] = asm["_emscripten_bind_btPairCachingGhostObject_setCollisionShape_1"];
        var _emscripten_bind_btKinematicCharacterController_warp_1 = Module["_emscripten_bind_btKinematicCharacterController_warp_1"] = asm["_emscripten_bind_btKinematicCharacterController_warp_1"];
        var _emscripten_bind_btContactSolverInfo___destroy___0 = Module["_emscripten_bind_btContactSolverInfo___destroy___0"] = asm["_emscripten_bind_btContactSolverInfo___destroy___0"];
        var _emscripten_bind_btTriangleMesh___destroy___0 = Module["_emscripten_bind_btTriangleMesh___destroy___0"] = asm["_emscripten_bind_btTriangleMesh___destroy___0"];
        var _emscripten_bind_btKinematicCharacterController_preStep_1 = Module["_emscripten_bind_btKinematicCharacterController_preStep_1"] = asm["_emscripten_bind_btKinematicCharacterController_preStep_1"];
        var _emscripten_bind_btRaycastVehicle_applyEngineForce_2 = Module["_emscripten_bind_btRaycastVehicle_applyEngineForce_2"] = asm["_emscripten_bind_btRaycastVehicle_applyEngineForce_2"];
        var _emscripten_bind_btRaycastVehicle_setBrake_2 = Module["_emscripten_bind_btRaycastVehicle_setBrake_2"] = asm["_emscripten_bind_btRaycastVehicle_setBrake_2"];
        var _emscripten_bind_ConcreteContactResultCallback___destroy___0 = Module["_emscripten_bind_ConcreteContactResultCallback___destroy___0"] = asm["_emscripten_bind_ConcreteContactResultCallback___destroy___0"];
        var _emscripten_bind_RaycastInfo_set_m_wheelAxleWS_1 = Module["_emscripten_bind_RaycastInfo_set_m_wheelAxleWS_1"] = asm["_emscripten_bind_RaycastInfo_set_m_wheelAxleWS_1"];
        var _emscripten_bind_btGeneric6DofSpring2Constraint_setAngularLowerLimit_1 = Module["_emscripten_bind_btGeneric6DofSpring2Constraint_setAngularLowerLimit_1"] = asm["_emscripten_bind_btGeneric6DofSpring2Constraint_setAngularLowerLimit_1"];
        var _emscripten_bind_btCollisionObject___destroy___0 = Module["_emscripten_bind_btCollisionObject___destroy___0"] = asm["_emscripten_bind_btCollisionObject___destroy___0"];
        var _emscripten_bind_btVehicleTuning_set_m_suspensionDamping_1 = Module["_emscripten_bind_btVehicleTuning_set_m_suspensionDamping_1"] = asm["_emscripten_bind_btVehicleTuning_set_m_suspensionDamping_1"];
        var _emscripten_bind_btRigidBodyConstructionInfo_set_m_linearSleepingThreshold_1 = Module["_emscripten_bind_btRigidBodyConstructionInfo_set_m_linearSleepingThreshold_1"] = asm["_emscripten_bind_btRigidBodyConstructionInfo_set_m_linearSleepingThreshold_1"];
        var _emscripten_bind_btConeTwistConstraint_setMotorTargetInConstraintSpace_1 = Module["_emscripten_bind_btConeTwistConstraint_setMotorTargetInConstraintSpace_1"] = asm["_emscripten_bind_btConeTwistConstraint_setMotorTargetInConstraintSpace_1"];
        var _emscripten_bind_btDispatcherInfo_set_m_timeStep_1 = Module["_emscripten_bind_btDispatcherInfo_set_m_timeStep_1"] = asm["_emscripten_bind_btDispatcherInfo_set_m_timeStep_1"];
        var _emscripten_bind_btVector3_btVector3_3 = Module["_emscripten_bind_btVector3_btVector3_3"] = asm["_emscripten_bind_btVector3_btVector3_3"];
        var _emscripten_bind_btVector3_btVector3_0 = Module["_emscripten_bind_btVector3_btVector3_0"] = asm["_emscripten_bind_btVector3_btVector3_0"];
        var _emscripten_bind_btRigidBodyConstructionInfo_set_m_friction_1 = Module["_emscripten_bind_btRigidBodyConstructionInfo_set_m_friction_1"] = asm["_emscripten_bind_btRigidBodyConstructionInfo_set_m_friction_1"];
        var _emscripten_bind_btDiscreteDynamicsWorld_getGravity_0 = Module["_emscripten_bind_btDiscreteDynamicsWorld_getGravity_0"] = asm["_emscripten_bind_btDiscreteDynamicsWorld_getGravity_0"];
        var _emscripten_bind_btVector3_z_0 = Module["_emscripten_bind_btVector3_z_0"] = asm["_emscripten_bind_btVector3_z_0"];
        var _emscripten_bind_ClosestConvexResultCallback_get_m_hitPointWorld_0 = Module["_emscripten_bind_ClosestConvexResultCallback_get_m_hitPointWorld_0"] = asm["_emscripten_bind_ClosestConvexResultCallback_get_m_hitPointWorld_0"];
        var _emscripten_bind_btBroadphaseInterface___destroy___0 = Module["_emscripten_bind_btBroadphaseInterface___destroy___0"] = asm["_emscripten_bind_btBroadphaseInterface___destroy___0"];
        var _emscripten_bind_btVehicleTuning_get_m_suspensionDamping_0 = Module["_emscripten_bind_btVehicleTuning_get_m_suspensionDamping_0"] = asm["_emscripten_bind_btVehicleTuning_get_m_suspensionDamping_0"];
        var _emscripten_bind_ConcreteContactResultCallback_addSingleResult_7 = Module["_emscripten_bind_ConcreteContactResultCallback_addSingleResult_7"] = asm["_emscripten_bind_ConcreteContactResultCallback_addSingleResult_7"];
        var _emscripten_bind_RaycastInfo_get_m_hardPointWS_0 = Module["_emscripten_bind_RaycastInfo_get_m_hardPointWS_0"] = asm["_emscripten_bind_RaycastInfo_get_m_hardPointWS_0"];
        var _emscripten_bind_btConeTwistConstraint___destroy___0 = Module["_emscripten_bind_btConeTwistConstraint___destroy___0"] = asm["_emscripten_bind_btConeTwistConstraint___destroy___0"];
        var _emscripten_bind_btQuadWord___destroy___0 = Module["_emscripten_bind_btQuadWord___destroy___0"] = asm["_emscripten_bind_btQuadWord___destroy___0"];
        var _emscripten_bind_ClosestRayResultCallback_set_m_rayFromWorld_1 = Module["_emscripten_bind_ClosestRayResultCallback_set_m_rayFromWorld_1"] = asm["_emscripten_bind_ClosestRayResultCallback_set_m_rayFromWorld_1"];
        var _emscripten_bind_btGeneric6DofSpringConstraint_setDamping_2 = Module["_emscripten_bind_btGeneric6DofSpringConstraint_setDamping_2"] = asm["_emscripten_bind_btGeneric6DofSpringConstraint_setDamping_2"];
        var _emscripten_bind_RaycastInfo_get_m_wheelDirectionWS_0 = Module["_emscripten_bind_RaycastInfo_get_m_wheelDirectionWS_0"] = asm["_emscripten_bind_RaycastInfo_get_m_wheelDirectionWS_0"];
        var _emscripten_bind_btRigidBody_setCenterOfMassTransform_1 = Module["_emscripten_bind_btRigidBody_setCenterOfMassTransform_1"] = asm["_emscripten_bind_btRigidBody_setCenterOfMassTransform_1"];
        var _emscripten_bind_btWheelInfo_get_m_chassisConnectionPointCS_0 = Module["_emscripten_bind_btWheelInfo_get_m_chassisConnectionPointCS_0"] = asm["_emscripten_bind_btWheelInfo_get_m_chassisConnectionPointCS_0"];
        var _emscripten_bind_btGhostObject_setAnisotropicFriction_2 = Module["_emscripten_bind_btGhostObject_setAnisotropicFriction_2"] = asm["_emscripten_bind_btGhostObject_setAnisotropicFriction_2"];
        var _emscripten_bind_btConstraintSolver___destroy___0 = Module["_emscripten_bind_btConstraintSolver___destroy___0"] = asm["_emscripten_bind_btConstraintSolver___destroy___0"];
        var _emscripten_bind_btDbvtBroadphase___destroy___0 = Module["_emscripten_bind_btDbvtBroadphase___destroy___0"] = asm["_emscripten_bind_btDbvtBroadphase___destroy___0"];
        var _emscripten_bind_btCapsuleShape_btCapsuleShape_2 = Module["_emscripten_bind_btCapsuleShape_btCapsuleShape_2"] = asm["_emscripten_bind_btCapsuleShape_btCapsuleShape_2"];
        var _emscripten_bind_btTypedConstraint_enableFeedback_1 = Module["_emscripten_bind_btTypedConstraint_enableFeedback_1"] = asm["_emscripten_bind_btTypedConstraint_enableFeedback_1"];
        var _emscripten_bind_btGhostObject_activate_0 = Module["_emscripten_bind_btGhostObject_activate_0"] = asm["_emscripten_bind_btGhostObject_activate_0"];
        var _emscripten_bind_btCapsuleShape_setLocalScaling_1 = Module["_emscripten_bind_btCapsuleShape_setLocalScaling_1"] = asm["_emscripten_bind_btCapsuleShape_setLocalScaling_1"];
        var _emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalDampingFactor_0 = Module["_emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalDampingFactor_0"] = asm["_emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalDampingFactor_0"];
        var _emscripten_bind_btRigidBody_setAnisotropicFriction_2 = Module["_emscripten_bind_btRigidBody_setAnisotropicFriction_2"] = asm["_emscripten_bind_btRigidBody_setAnisotropicFriction_2"];
        var _emscripten_bind_btTriangleMeshShape_setLocalScaling_1 = Module["_emscripten_bind_btTriangleMeshShape_setLocalScaling_1"] = asm["_emscripten_bind_btTriangleMeshShape_setLocalScaling_1"];
        var _emscripten_bind_ConvexResultCallback_set_m_closestHitFraction_1 = Module["_emscripten_bind_ConvexResultCallback_set_m_closestHitFraction_1"] = asm["_emscripten_bind_ConvexResultCallback_set_m_closestHitFraction_1"];
        var _emscripten_bind_btVector3_op_add_1 = Module["_emscripten_bind_btVector3_op_add_1"] = asm["_emscripten_bind_btVector3_op_add_1"];
        var _emscripten_bind_btPersistentManifold_btPersistentManifold_0 = Module["_emscripten_bind_btPersistentManifold_btPersistentManifold_0"] = asm["_emscripten_bind_btPersistentManifold_btPersistentManifold_0"];
        var _emscripten_bind_ConvexResultCallback_get_m_collisionFilterMask_0 = Module["_emscripten_bind_ConvexResultCallback_get_m_collisionFilterMask_0"] = asm["_emscripten_bind_ConvexResultCallback_get_m_collisionFilterMask_0"];
        var _emscripten_bind_ClosestRayResultCallback_ClosestRayResultCallback_2 = Module["_emscripten_bind_ClosestRayResultCallback_ClosestRayResultCallback_2"] = asm["_emscripten_bind_ClosestRayResultCallback_ClosestRayResultCallback_2"];
        var _emscripten_bind_btVector4___destroy___0 = Module["_emscripten_bind_btVector4___destroy___0"] = asm["_emscripten_bind_btVector4___destroy___0"];
        var _emscripten_bind_btPairCachingGhostObject_isKinematicObject_0 = Module["_emscripten_bind_btPairCachingGhostObject_isKinematicObject_0"] = asm["_emscripten_bind_btPairCachingGhostObject_isKinematicObject_0"];
        var _emscripten_bind_ClosestRayResultCallback_set_m_collisionFilterMask_1 = Module["_emscripten_bind_ClosestRayResultCallback_set_m_collisionFilterMask_1"] = asm["_emscripten_bind_ClosestRayResultCallback_set_m_collisionFilterMask_1"];
        var _i64Add = Module["_i64Add"] = asm["_i64Add"];
        var _emscripten_bind_btStaticPlaneShape_calculateLocalInertia_2 = Module["_emscripten_bind_btStaticPlaneShape_calculateLocalInertia_2"] = asm["_emscripten_bind_btStaticPlaneShape_calculateLocalInertia_2"];
        var _emscripten_bind_btVehicleTuning_set_m_maxSuspensionForce_1 = Module["_emscripten_bind_btVehicleTuning_set_m_maxSuspensionForce_1"] = asm["_emscripten_bind_btVehicleTuning_set_m_maxSuspensionForce_1"];
        var _emscripten_bind_btCollisionObject_setCcdMotionThreshold_1 = Module["_emscripten_bind_btCollisionObject_setCcdMotionThreshold_1"] = asm["_emscripten_bind_btCollisionObject_setCcdMotionThreshold_1"];
        var _emscripten_bind_btKinematicCharacterController_btKinematicCharacterController_4 = Module["_emscripten_bind_btKinematicCharacterController_btKinematicCharacterController_4"] = asm["_emscripten_bind_btKinematicCharacterController_btKinematicCharacterController_4"];
        var _emscripten_bind_btDefaultCollisionConfiguration_btDefaultCollisionConfiguration_1 = Module["_emscripten_bind_btDefaultCollisionConfiguration_btDefaultCollisionConfiguration_1"] = asm["_emscripten_bind_btDefaultCollisionConfiguration_btDefaultCollisionConfiguration_1"];
        var _emscripten_bind_btQuadWord_setZ_1 = Module["_emscripten_bind_btQuadWord_setZ_1"] = asm["_emscripten_bind_btQuadWord_setZ_1"];
        var _emscripten_bind_btRigidBodyConstructionInfo_get_m_angularSleepingThreshold_0 = Module["_emscripten_bind_btRigidBodyConstructionInfo_get_m_angularSleepingThreshold_0"] = asm["_emscripten_bind_btRigidBodyConstructionInfo_get_m_angularSleepingThreshold_0"];
        var _emscripten_bind_btPoint2PointConstraint_getPivotInB_0 = Module["_emscripten_bind_btPoint2PointConstraint_getPivotInB_0"] = asm["_emscripten_bind_btPoint2PointConstraint_getPivotInB_0"];
        var _emscripten_bind_btKinematicCharacterController_playerStep_2 = Module["_emscripten_bind_btKinematicCharacterController_playerStep_2"] = asm["_emscripten_bind_btKinematicCharacterController_playerStep_2"];
        var _emscripten_bind_btDispatcherInfo___destroy___0 = Module["_emscripten_bind_btDispatcherInfo___destroy___0"] = asm["_emscripten_bind_btDispatcherInfo___destroy___0"];
        var _emscripten_bind_btCapsuleShape_getMargin_0 = Module["_emscripten_bind_btCapsuleShape_getMargin_0"] = asm["_emscripten_bind_btCapsuleShape_getMargin_0"];
        var _emscripten_bind_btCylinderShape_getMargin_0 = Module["_emscripten_bind_btCylinderShape_getMargin_0"] = asm["_emscripten_bind_btCylinderShape_getMargin_0"];
        var _emscripten_bind_btStaticPlaneShape_setLocalScaling_1 = Module["_emscripten_bind_btStaticPlaneShape_setLocalScaling_1"] = asm["_emscripten_bind_btStaticPlaneShape_setLocalScaling_1"];
        var _emscripten_bind_btConvexTriangleMeshShape_calculateLocalInertia_2 = Module["_emscripten_bind_btConvexTriangleMeshShape_calculateLocalInertia_2"] = asm["_emscripten_bind_btConvexTriangleMeshShape_calculateLocalInertia_2"];
        var _emscripten_bind_btQuaternion___destroy___0 = Module["_emscripten_bind_btQuaternion___destroy___0"] = asm["_emscripten_bind_btQuaternion___destroy___0"];
        var _emscripten_bind_btGhostObject_getWorldTransform_0 = Module["_emscripten_bind_btGhostObject_getWorldTransform_0"] = asm["_emscripten_bind_btGhostObject_getWorldTransform_0"];
        var _emscripten_bind_btDiscreteDynamicsWorld_getPairCache_0 = Module["_emscripten_bind_btDiscreteDynamicsWorld_getPairCache_0"] = asm["_emscripten_bind_btDiscreteDynamicsWorld_getPairCache_0"];
        var _emscripten_bind_LocalConvexResult_set_m_hitFraction_1 = Module["_emscripten_bind_LocalConvexResult_set_m_hitFraction_1"] = asm["_emscripten_bind_LocalConvexResult_set_m_hitFraction_1"];
        var _emscripten_bind_btCapsuleShapeZ_calculateLocalInertia_2 = Module["_emscripten_bind_btCapsuleShapeZ_calculateLocalInertia_2"] = asm["_emscripten_bind_btCapsuleShapeZ_calculateLocalInertia_2"];
        var _emscripten_bind_btDispatcherInfo_get_m_timeStep_0 = Module["_emscripten_bind_btDispatcherInfo_get_m_timeStep_0"] = asm["_emscripten_bind_btDispatcherInfo_get_m_timeStep_0"];
        var _emscripten_bind_btVehicleTuning_set_m_suspensionCompression_1 = Module["_emscripten_bind_btVehicleTuning_set_m_suspensionCompression_1"] = asm["_emscripten_bind_btVehicleTuning_set_m_suspensionCompression_1"];
        var _emscripten_bind_btBoxShape_calculateLocalInertia_2 = Module["_emscripten_bind_btBoxShape_calculateLocalInertia_2"] = asm["_emscripten_bind_btBoxShape_calculateLocalInertia_2"];
        var _emscripten_bind_btMotionState___destroy___0 = Module["_emscripten_bind_btMotionState___destroy___0"] = asm["_emscripten_bind_btMotionState___destroy___0"];
        var _emscripten_bind_btGeneric6DofSpring2Constraint___destroy___0 = Module["_emscripten_bind_btGeneric6DofSpring2Constraint___destroy___0"] = asm["_emscripten_bind_btGeneric6DofSpring2Constraint___destroy___0"];
        var _emscripten_bind_btCollisionObject_setCollisionFlags_1 = Module["_emscripten_bind_btCollisionObject_setCollisionFlags_1"] = asm["_emscripten_bind_btCollisionObject_setCollisionFlags_1"];
        var _emscripten_bind_btGeneric6DofSpring2Constraint_getTranslationalLimitMotor_0 = Module["_emscripten_bind_btGeneric6DofSpring2Constraint_getTranslationalLimitMotor_0"] = asm["_emscripten_bind_btGeneric6DofSpring2Constraint_getTranslationalLimitMotor_0"];
        var _emscripten_bind_btDiscreteDynamicsWorld_addCollisionObject_1 = Module["_emscripten_bind_btDiscreteDynamicsWorld_addCollisionObject_1"] = asm["_emscripten_bind_btDiscreteDynamicsWorld_addCollisionObject_1"];
        var _emscripten_bind_btDiscreteDynamicsWorld_addCollisionObject_2 = Module["_emscripten_bind_btDiscreteDynamicsWorld_addCollisionObject_2"] = asm["_emscripten_bind_btDiscreteDynamicsWorld_addCollisionObject_2"];
        var _emscripten_bind_btDiscreteDynamicsWorld_addCollisionObject_3 = Module["_emscripten_bind_btDiscreteDynamicsWorld_addCollisionObject_3"] = asm["_emscripten_bind_btDiscreteDynamicsWorld_addCollisionObject_3"];
        var _emscripten_bind_btWheelInfo_set_m_suspensionStiffness_1 = Module["_emscripten_bind_btWheelInfo_set_m_suspensionStiffness_1"] = asm["_emscripten_bind_btWheelInfo_set_m_suspensionStiffness_1"];
        var _emscripten_bind_btConvexTriangleMeshShape___destroy___0 = Module["_emscripten_bind_btConvexTriangleMeshShape___destroy___0"] = asm["_emscripten_bind_btConvexTriangleMeshShape___destroy___0"];
        var _emscripten_bind_btDispatcher_getManifoldByIndexInternal_1 = Module["_emscripten_bind_btDispatcher_getManifoldByIndexInternal_1"] = asm["_emscripten_bind_btDispatcher_getManifoldByIndexInternal_1"];
        var _emscripten_bind_btRaycastVehicle_getWheelInfo_1 = Module["_emscripten_bind_btRaycastVehicle_getWheelInfo_1"] = asm["_emscripten_bind_btRaycastVehicle_getWheelInfo_1"];
        var _bitshift64Lshr = Module["_bitshift64Lshr"] = asm["_bitshift64Lshr"];
        var _emscripten_bind_btWheelInfo_set_m_steering_1 = Module["_emscripten_bind_btWheelInfo_set_m_steering_1"] = asm["_emscripten_bind_btWheelInfo_set_m_steering_1"];
        var _emscripten_bind_btPairCachingGhostObject_setWorldTransform_1 = Module["_emscripten_bind_btPairCachingGhostObject_setWorldTransform_1"] = asm["_emscripten_bind_btPairCachingGhostObject_setWorldTransform_1"];
        var _emscripten_bind_btHingeConstraint_getBreakingImpulseThreshold_0 = Module["_emscripten_bind_btHingeConstraint_getBreakingImpulseThreshold_0"] = asm["_emscripten_bind_btHingeConstraint_getBreakingImpulseThreshold_0"];
        var _emscripten_bind_btDefaultCollisionConstructionInfo___destroy___0 = Module["_emscripten_bind_btDefaultCollisionConstructionInfo___destroy___0"] = asm["_emscripten_bind_btDefaultCollisionConstructionInfo___destroy___0"];
        var _emscripten_bind_btGhostObject_setCcdSweptSphereRadius_1 = Module["_emscripten_bind_btGhostObject_setCcdSweptSphereRadius_1"] = asm["_emscripten_bind_btGhostObject_setCcdSweptSphereRadius_1"];
        var _emscripten_bind_btPoint2PointConstraint_btPoint2PointConstraint_4 = Module["_emscripten_bind_btPoint2PointConstraint_btPoint2PointConstraint_4"] = asm["_emscripten_bind_btPoint2PointConstraint_btPoint2PointConstraint_4"];
        var _emscripten_bind_btPoint2PointConstraint_btPoint2PointConstraint_2 = Module["_emscripten_bind_btPoint2PointConstraint_btPoint2PointConstraint_2"] = asm["_emscripten_bind_btPoint2PointConstraint_btPoint2PointConstraint_2"];
        var _emscripten_bind_btKinematicCharacterController_setJumpSpeed_1 = Module["_emscripten_bind_btKinematicCharacterController_setJumpSpeed_1"] = asm["_emscripten_bind_btKinematicCharacterController_setJumpSpeed_1"];
        var _emscripten_bind_btConeShapeX_calculateLocalInertia_2 = Module["_emscripten_bind_btConeShapeX_calculateLocalInertia_2"] = asm["_emscripten_bind_btConeShapeX_calculateLocalInertia_2"];
        var _emscripten_bind_btPairCachingGhostObject_getOverlappingObject_1 = Module["_emscripten_bind_btPairCachingGhostObject_getOverlappingObject_1"] = asm["_emscripten_bind_btPairCachingGhostObject_getOverlappingObject_1"];
        var _emscripten_bind_btRigidBodyConstructionInfo___destroy___0 = Module["_emscripten_bind_btRigidBodyConstructionInfo___destroy___0"] = asm["_emscripten_bind_btRigidBodyConstructionInfo___destroy___0"];
        var _emscripten_bind_btRigidBody_getWorldTransform_0 = Module["_emscripten_bind_btRigidBody_getWorldTransform_0"] = asm["_emscripten_bind_btRigidBody_getWorldTransform_0"];
        var _emscripten_bind_btPoint2PointConstraint_setPivotA_1 = Module["_emscripten_bind_btPoint2PointConstraint_setPivotA_1"] = asm["_emscripten_bind_btPoint2PointConstraint_setPivotA_1"];
        var _emscripten_bind_ClosestConvexResultCallback_set_m_convexToWorld_1 = Module["_emscripten_bind_ClosestConvexResultCallback_set_m_convexToWorld_1"] = asm["_emscripten_bind_ClosestConvexResultCallback_set_m_convexToWorld_1"];
        var _memcpy = Module["_memcpy"] = asm["_memcpy"];
        var _emscripten_bind_btCapsuleShape_calculateLocalInertia_2 = Module["_emscripten_bind_btCapsuleShape_calculateLocalInertia_2"] = asm["_emscripten_bind_btCapsuleShape_calculateLocalInertia_2"];
        var _emscripten_bind_btVector3_y_0 = Module["_emscripten_bind_btVector3_y_0"] = asm["_emscripten_bind_btVector3_y_0"];
        var _emscripten_bind_btVehicleTuning_get_m_maxSuspensionForce_0 = Module["_emscripten_bind_btVehicleTuning_get_m_maxSuspensionForce_0"] = asm["_emscripten_bind_btVehicleTuning_get_m_maxSuspensionForce_0"];
        var _emscripten_bind_btBvhTriangleMeshShape_btBvhTriangleMeshShape_2 = Module["_emscripten_bind_btBvhTriangleMeshShape_btBvhTriangleMeshShape_2"] = asm["_emscripten_bind_btBvhTriangleMeshShape_btBvhTriangleMeshShape_2"];
        var _emscripten_bind_btBvhTriangleMeshShape_btBvhTriangleMeshShape_3 = Module["_emscripten_bind_btBvhTriangleMeshShape_btBvhTriangleMeshShape_3"] = asm["_emscripten_bind_btBvhTriangleMeshShape_btBvhTriangleMeshShape_3"];
        var _emscripten_bind_LocalShapeInfo_get_m_triangleIndex_0 = Module["_emscripten_bind_LocalShapeInfo_get_m_triangleIndex_0"] = asm["_emscripten_bind_LocalShapeInfo_get_m_triangleIndex_0"];
        var _emscripten_bind_btGhostObject_setCollisionShape_1 = Module["_emscripten_bind_btGhostObject_setCollisionShape_1"] = asm["_emscripten_bind_btGhostObject_setCollisionShape_1"];
        var _emscripten_bind_btDispatcherInfo_set_m_allowedCcdPenetration_1 = Module["_emscripten_bind_btDispatcherInfo_set_m_allowedCcdPenetration_1"] = asm["_emscripten_bind_btDispatcherInfo_set_m_allowedCcdPenetration_1"];
        var _emscripten_bind_btRigidBody_setRollingFriction_1 = Module["_emscripten_bind_btRigidBody_setRollingFriction_1"] = asm["_emscripten_bind_btRigidBody_setRollingFriction_1"];
        var _emscripten_bind_btPairCachingGhostObject_setRollingFriction_1 = Module["_emscripten_bind_btPairCachingGhostObject_setRollingFriction_1"] = asm["_emscripten_bind_btPairCachingGhostObject_setRollingFriction_1"];
        var _emscripten_bind_btDiscreteDynamicsWorld_setGravity_1 = Module["_emscripten_bind_btDiscreteDynamicsWorld_setGravity_1"] = asm["_emscripten_bind_btDiscreteDynamicsWorld_setGravity_1"];
        var _emscripten_bind_btVehicleTuning_set_m_suspensionStiffness_1 = Module["_emscripten_bind_btVehicleTuning_set_m_suspensionStiffness_1"] = asm["_emscripten_bind_btVehicleTuning_set_m_suspensionStiffness_1"];
        var _emscripten_bind_btVector4_z_0 = Module["_emscripten_bind_btVector4_z_0"] = asm["_emscripten_bind_btVector4_z_0"];
        var _emscripten_bind_btCollisionObject_forceActivationState_1 = Module["_emscripten_bind_btCollisionObject_forceActivationState_1"] = asm["_emscripten_bind_btCollisionObject_forceActivationState_1"];
        var _emscripten_bind_btKinematicCharacterController_onGround_0 = Module["_emscripten_bind_btKinematicCharacterController_onGround_0"] = asm["_emscripten_bind_btKinematicCharacterController_onGround_0"];
        var _free = Module["_free"] = asm["_free"];
        var _emscripten_bind_btGeneric6DofConstraint_getBreakingImpulseThreshold_0 = Module["_emscripten_bind_btGeneric6DofConstraint_getBreakingImpulseThreshold_0"] = asm["_emscripten_bind_btGeneric6DofConstraint_getBreakingImpulseThreshold_0"];
        var _emscripten_bind_btConeTwistConstraint_setLimit_2 = Module["_emscripten_bind_btConeTwistConstraint_setLimit_2"] = asm["_emscripten_bind_btConeTwistConstraint_setLimit_2"];
        var _emscripten_bind_ClosestConvexResultCallback_set_m_collisionFilterMask_1 = Module["_emscripten_bind_ClosestConvexResultCallback_set_m_collisionFilterMask_1"] = asm["_emscripten_bind_ClosestConvexResultCallback_set_m_collisionFilterMask_1"];
        var _emscripten_bind_btRigidBody___destroy___0 = Module["_emscripten_bind_btRigidBody___destroy___0"] = asm["_emscripten_bind_btRigidBody___destroy___0"];
        var _emscripten_bind_btStridingMeshInterface___destroy___0 = Module["_emscripten_bind_btStridingMeshInterface___destroy___0"] = asm["_emscripten_bind_btStridingMeshInterface___destroy___0"];
        var runPostSets = Module["runPostSets"] = asm["runPostSets"];
        var _emscripten_bind_btRigidBody_setSleepingThresholds_2 = Module["_emscripten_bind_btRigidBody_setSleepingThresholds_2"] = asm["_emscripten_bind_btRigidBody_setSleepingThresholds_2"];
        var _emscripten_bind_btCollisionObject_setWorldTransform_1 = Module["_emscripten_bind_btCollisionObject_setWorldTransform_1"] = asm["_emscripten_bind_btCollisionObject_setWorldTransform_1"];
        var _emscripten_bind_LocalConvexResult_get_m_localShapeInfo_0 = Module["_emscripten_bind_LocalConvexResult_get_m_localShapeInfo_0"] = asm["_emscripten_bind_LocalConvexResult_get_m_localShapeInfo_0"];
        var _emscripten_bind_btManifoldPoint_get_m_localPointA_0 = Module["_emscripten_bind_btManifoldPoint_get_m_localPointA_0"] = asm["_emscripten_bind_btManifoldPoint_get_m_localPointA_0"];
        var _emscripten_bind_btRigidBodyConstructionInfo_get_m_linearDamping_0 = Module["_emscripten_bind_btRigidBodyConstructionInfo_get_m_linearDamping_0"] = asm["_emscripten_bind_btRigidBodyConstructionInfo_get_m_linearDamping_0"];
        var _emscripten_bind_btGeneric6DofSpring2Constraint_enableFeedback_1 = Module["_emscripten_bind_btGeneric6DofSpring2Constraint_enableFeedback_1"] = asm["_emscripten_bind_btGeneric6DofSpring2Constraint_enableFeedback_1"];
        var _emscripten_bind_btDispatcher_getNumManifolds_0 = Module["_emscripten_bind_btDispatcher_getNumManifolds_0"] = asm["_emscripten_bind_btDispatcher_getNumManifolds_0"];
        var _emscripten_bind_btRigidBodyConstructionInfo_get_m_linearSleepingThreshold_0 = Module["_emscripten_bind_btRigidBodyConstructionInfo_get_m_linearSleepingThreshold_0"] = asm["_emscripten_bind_btRigidBodyConstructionInfo_get_m_linearSleepingThreshold_0"];
        var _emscripten_bind_btRigidBody_activate_1 = Module["_emscripten_bind_btRigidBody_activate_1"] = asm["_emscripten_bind_btRigidBody_activate_1"];
        var _emscripten_bind_btRigidBody_activate_0 = Module["_emscripten_bind_btRigidBody_activate_0"] = asm["_emscripten_bind_btRigidBody_activate_0"];
        var _emscripten_bind_btRaycastVehicle___destroy___0 = Module["_emscripten_bind_btRaycastVehicle___destroy___0"] = asm["_emscripten_bind_btRaycastVehicle___destroy___0"];
        var _emscripten_bind_btGhostObject_setActivationState_1 = Module["_emscripten_bind_btGhostObject_setActivationState_1"] = asm["_emscripten_bind_btGhostObject_setActivationState_1"];
        var _emscripten_bind_btCollisionWorld_contactPairTest_3 = Module["_emscripten_bind_btCollisionWorld_contactPairTest_3"] = asm["_emscripten_bind_btCollisionWorld_contactPairTest_3"];
        var _emscripten_bind_btCylinderShapeX___destroy___0 = Module["_emscripten_bind_btCylinderShapeX___destroy___0"] = asm["_emscripten_bind_btCylinderShapeX___destroy___0"];
        var _emscripten_bind_btManifoldPoint_getPositionWorldOnA_0 = Module["_emscripten_bind_btManifoldPoint_getPositionWorldOnA_0"] = asm["_emscripten_bind_btManifoldPoint_getPositionWorldOnA_0"];
        var _emscripten_bind_ContactResultCallback___destroy___0 = Module["_emscripten_bind_ContactResultCallback___destroy___0"] = asm["_emscripten_bind_ContactResultCallback___destroy___0"];
        var _emscripten_bind_btDispatcherInfo_set_m_stepCount_1 = Module["_emscripten_bind_btDispatcherInfo_set_m_stepCount_1"] = asm["_emscripten_bind_btDispatcherInfo_set_m_stepCount_1"];
        var _emscripten_bind_btVector4_x_0 = Module["_emscripten_bind_btVector4_x_0"] = asm["_emscripten_bind_btVector4_x_0"];
        var _emscripten_bind_btConstraintSetting_btConstraintSetting_0 = Module["_emscripten_bind_btConstraintSetting_btConstraintSetting_0"] = asm["_emscripten_bind_btConstraintSetting_btConstraintSetting_0"];
        var _emscripten_bind_btRigidBody_getMotionState_0 = Module["_emscripten_bind_btRigidBody_getMotionState_0"] = asm["_emscripten_bind_btRigidBody_getMotionState_0"];
        var _emscripten_bind_btKinematicCharacterController_getGhostObject_0 = Module["_emscripten_bind_btKinematicCharacterController_getGhostObject_0"] = asm["_emscripten_bind_btKinematicCharacterController_getGhostObject_0"];
        var _emscripten_bind_btRigidBody_btRigidBody_1 = Module["_emscripten_bind_btRigidBody_btRigidBody_1"] = asm["_emscripten_bind_btRigidBody_btRigidBody_1"];
        var _emscripten_bind_btTriangleMeshShape___destroy___0 = Module["_emscripten_bind_btTriangleMeshShape___destroy___0"] = asm["_emscripten_bind_btTriangleMeshShape___destroy___0"];
        var _emscripten_bind_btKinematicCharacterController_setWalkDirection_1 = Module["_emscripten_bind_btKinematicCharacterController_setWalkDirection_1"] = asm["_emscripten_bind_btKinematicCharacterController_setWalkDirection_1"];
        var _emscripten_bind_btDynamicsWorld_removeAction_1 = Module["_emscripten_bind_btDynamicsWorld_removeAction_1"] = asm["_emscripten_bind_btDynamicsWorld_removeAction_1"];
        var _emscripten_bind_btRigidBodyConstructionInfo_get_m_restitution_0 = Module["_emscripten_bind_btRigidBodyConstructionInfo_get_m_restitution_0"] = asm["_emscripten_bind_btRigidBodyConstructionInfo_get_m_restitution_0"];
        var _emscripten_bind_btVehicleTuning_get_m_suspensionStiffness_0 = Module["_emscripten_bind_btVehicleTuning_get_m_suspensionStiffness_0"] = asm["_emscripten_bind_btVehicleTuning_get_m_suspensionStiffness_0"];
        var _emscripten_bind_btManifoldPoint_set_m_normalWorldOnB_1 = Module["_emscripten_bind_btManifoldPoint_set_m_normalWorldOnB_1"] = asm["_emscripten_bind_btManifoldPoint_set_m_normalWorldOnB_1"];
        var _emscripten_bind_btKinematicCharacterController_getGravity_0 = Module["_emscripten_bind_btKinematicCharacterController_getGravity_0"] = asm["_emscripten_bind_btKinematicCharacterController_getGravity_0"];
        var _emscripten_bind_btConeTwistConstraint_getBreakingImpulseThreshold_0 = Module["_emscripten_bind_btConeTwistConstraint_getBreakingImpulseThreshold_0"] = asm["_emscripten_bind_btConeTwistConstraint_getBreakingImpulseThreshold_0"];
        var _emscripten_bind_btGeneric6DofConstraint_setAngularLowerLimit_1 = Module["_emscripten_bind_btGeneric6DofConstraint_setAngularLowerLimit_1"] = asm["_emscripten_bind_btGeneric6DofConstraint_setAngularLowerLimit_1"];
        var _emscripten_bind_btVector4_normalize_0 = Module["_emscripten_bind_btVector4_normalize_0"] = asm["_emscripten_bind_btVector4_normalize_0"];
        var _emscripten_bind_btQuaternion_setY_1 = Module["_emscripten_bind_btQuaternion_setY_1"] = asm["_emscripten_bind_btQuaternion_setY_1"];
        var _emscripten_bind_btConeShape_calculateLocalInertia_2 = Module["_emscripten_bind_btConeShape_calculateLocalInertia_2"] = asm["_emscripten_bind_btConeShape_calculateLocalInertia_2"];
        var _emscripten_bind_btCylinderShapeX_calculateLocalInertia_2 = Module["_emscripten_bind_btCylinderShapeX_calculateLocalInertia_2"] = asm["_emscripten_bind_btCylinderShapeX_calculateLocalInertia_2"];
        var _emscripten_bind_ConvexResultCallback_set_m_collisionFilterMask_1 = Module["_emscripten_bind_ConvexResultCallback_set_m_collisionFilterMask_1"] = asm["_emscripten_bind_ConvexResultCallback_set_m_collisionFilterMask_1"];
        var _llvm_bswap_i32 = Module["_llvm_bswap_i32"] = asm["_llvm_bswap_i32"];
        var _emscripten_enum_RotateOrder_RO_XZY = Module["_emscripten_enum_RotateOrder_RO_XZY"] = asm["_emscripten_enum_RotateOrder_RO_XZY"];
        var _emscripten_bind_btSphereShape_setLocalScaling_1 = Module["_emscripten_bind_btSphereShape_setLocalScaling_1"] = asm["_emscripten_bind_btSphereShape_setLocalScaling_1"];
        var _emscripten_bind_btVector4_w_0 = Module["_emscripten_bind_btVector4_w_0"] = asm["_emscripten_bind_btVector4_w_0"];
        var _emscripten_bind_btManifoldPoint_get_m_normalWorldOnB_0 = Module["_emscripten_bind_btManifoldPoint_get_m_normalWorldOnB_0"] = asm["_emscripten_bind_btManifoldPoint_get_m_normalWorldOnB_0"];
        var _emscripten_bind_btBvhTriangleMeshShape___destroy___0 = Module["_emscripten_bind_btBvhTriangleMeshShape___destroy___0"] = asm["_emscripten_bind_btBvhTriangleMeshShape___destroy___0"];
        var _emscripten_bind_ClosestRayResultCallback_get_m_rayToWorld_0 = Module["_emscripten_bind_ClosestRayResultCallback_get_m_rayToWorld_0"] = asm["_emscripten_bind_ClosestRayResultCallback_get_m_rayToWorld_0"];
        var _emscripten_bind_ClosestConvexResultCallback_set_m_closestHitFraction_1 = Module["_emscripten_bind_ClosestConvexResultCallback_set_m_closestHitFraction_1"] = asm["_emscripten_bind_ClosestConvexResultCallback_set_m_closestHitFraction_1"];
        var _emscripten_bind_btDiscreteDynamicsWorld_removeConstraint_1 = Module["_emscripten_bind_btDiscreteDynamicsWorld_removeConstraint_1"] = asm["_emscripten_bind_btDiscreteDynamicsWorld_removeConstraint_1"];
        var _emscripten_bind_btVector4_y_0 = Module["_emscripten_bind_btVector4_y_0"] = asm["_emscripten_bind_btVector4_y_0"];
        var _emscripten_bind_btGeneric6DofConstraint___destroy___0 = Module["_emscripten_bind_btGeneric6DofConstraint___destroy___0"] = asm["_emscripten_bind_btGeneric6DofConstraint___destroy___0"];
        var _emscripten_bind_btVehicleTuning_get_m_maxSuspensionTravelCm_0 = Module["_emscripten_bind_btVehicleTuning_get_m_maxSuspensionTravelCm_0"] = asm["_emscripten_bind_btVehicleTuning_get_m_maxSuspensionTravelCm_0"];
        var _emscripten_bind_btConvexHullShape_addPoint_1 = Module["_emscripten_bind_btConvexHullShape_addPoint_1"] = asm["_emscripten_bind_btConvexHullShape_addPoint_1"];
        var _emscripten_bind_btConvexHullShape_addPoint_2 = Module["_emscripten_bind_btConvexHullShape_addPoint_2"] = asm["_emscripten_bind_btConvexHullShape_addPoint_2"];
        var _emscripten_bind_btPoint2PointConstraint_getBreakingImpulseThreshold_0 = Module["_emscripten_bind_btPoint2PointConstraint_getBreakingImpulseThreshold_0"] = asm["_emscripten_bind_btPoint2PointConstraint_getBreakingImpulseThreshold_0"];
        var _emscripten_bind_btTransform_getOrigin_0 = Module["_emscripten_bind_btTransform_getOrigin_0"] = asm["_emscripten_bind_btTransform_getOrigin_0"];
        var _emscripten_enum_RotateOrder_RO_ZYX = Module["_emscripten_enum_RotateOrder_RO_ZYX"] = asm["_emscripten_enum_RotateOrder_RO_ZYX"];
        var _emscripten_bind_btHingeConstraint___destroy___0 = Module["_emscripten_bind_btHingeConstraint___destroy___0"] = asm["_emscripten_bind_btHingeConstraint___destroy___0"];
        var _emscripten_bind_btConvexShape_calculateLocalInertia_2 = Module["_emscripten_bind_btConvexShape_calculateLocalInertia_2"] = asm["_emscripten_bind_btConvexShape_calculateLocalInertia_2"];
        var _memset = Module["_memset"] = asm["_memset"];
        var _emscripten_bind_btGeneric6DofConstraint_setLinearLowerLimit_1 = Module["_emscripten_bind_btGeneric6DofConstraint_setLinearLowerLimit_1"] = asm["_emscripten_bind_btGeneric6DofConstraint_setLinearLowerLimit_1"];
        var _emscripten_bind_ClosestRayResultCallback_get_m_hitNormalWorld_0 = Module["_emscripten_bind_ClosestRayResultCallback_get_m_hitNormalWorld_0"] = asm["_emscripten_bind_ClosestRayResultCallback_get_m_hitNormalWorld_0"];
        var _emscripten_bind_btTriangleMesh_btTriangleMesh_0 = Module["_emscripten_bind_btTriangleMesh_btTriangleMesh_0"] = asm["_emscripten_bind_btTriangleMesh_btTriangleMesh_0"];
        var _emscripten_bind_btTriangleMesh_btTriangleMesh_1 = Module["_emscripten_bind_btTriangleMesh_btTriangleMesh_1"] = asm["_emscripten_bind_btTriangleMesh_btTriangleMesh_1"];
        var _emscripten_bind_btTriangleMesh_btTriangleMesh_2 = Module["_emscripten_bind_btTriangleMesh_btTriangleMesh_2"] = asm["_emscripten_bind_btTriangleMesh_btTriangleMesh_2"];
        var _emscripten_bind_btWheelInfo_set_m_frictionSlip_1 = Module["_emscripten_bind_btWheelInfo_set_m_frictionSlip_1"] = asm["_emscripten_bind_btWheelInfo_set_m_frictionSlip_1"];
        var _emscripten_bind_btRigidBody_getCollisionShape_0 = Module["_emscripten_bind_btRigidBody_getCollisionShape_0"] = asm["_emscripten_bind_btRigidBody_getCollisionShape_0"];
        var _emscripten_bind_btManifoldPoint_set_m_positionWorldOnA_1 = Module["_emscripten_bind_btManifoldPoint_set_m_positionWorldOnA_1"] = asm["_emscripten_bind_btManifoldPoint_set_m_positionWorldOnA_1"];
        var _emscripten_bind_btWheelInfo_get_m_wheelsDampingRelaxation_0 = Module["_emscripten_bind_btWheelInfo_get_m_wheelsDampingRelaxation_0"] = asm["_emscripten_bind_btWheelInfo_get_m_wheelsDampingRelaxation_0"];
        var _emscripten_bind_btManifoldPoint_get_m_localPointB_0 = Module["_emscripten_bind_btManifoldPoint_get_m_localPointB_0"] = asm["_emscripten_bind_btManifoldPoint_get_m_localPointB_0"];
        var _emscripten_bind_btDiscreteDynamicsWorld_contactPairTest_3 = Module["_emscripten_bind_btDiscreteDynamicsWorld_contactPairTest_3"] = asm["_emscripten_bind_btDiscreteDynamicsWorld_contactPairTest_3"];
        var _emscripten_bind_btSliderConstraint_setLowerLinLimit_1 = Module["_emscripten_bind_btSliderConstraint_setLowerLinLimit_1"] = asm["_emscripten_bind_btSliderConstraint_setLowerLinLimit_1"];
        var _emscripten_bind_btRigidBody_getAngularVelocity_0 = Module["_emscripten_bind_btRigidBody_getAngularVelocity_0"] = asm["_emscripten_bind_btRigidBody_getAngularVelocity_0"];
        var _emscripten_bind_btCollisionObject_setCcdSweptSphereRadius_1 = Module["_emscripten_bind_btCollisionObject_setCcdSweptSphereRadius_1"] = asm["_emscripten_bind_btCollisionObject_setCcdSweptSphereRadius_1"];
        var _emscripten_bind_btWheelInfo_get_m_wheelsRadius_0 = Module["_emscripten_bind_btWheelInfo_get_m_wheelsRadius_0"] = asm["_emscripten_bind_btWheelInfo_get_m_wheelsRadius_0"];
        var _emscripten_bind_btRigidBody_setLinearVelocity_1 = Module["_emscripten_bind_btRigidBody_setLinearVelocity_1"] = asm["_emscripten_bind_btRigidBody_setLinearVelocity_1"];
        var _emscripten_bind_btVehicleTuning_btVehicleTuning_0 = Module["_emscripten_bind_btVehicleTuning_btVehicleTuning_0"] = asm["_emscripten_bind_btVehicleTuning_btVehicleTuning_0"];
        var _emscripten_bind_RayResultCallback_set_m_collisionObject_1 = Module["_emscripten_bind_RayResultCallback_set_m_collisionObject_1"] = asm["_emscripten_bind_RayResultCallback_set_m_collisionObject_1"];
        var _emscripten_bind_ClosestRayResultCallback_set_m_rayToWorld_1 = Module["_emscripten_bind_ClosestRayResultCallback_set_m_rayToWorld_1"] = asm["_emscripten_bind_ClosestRayResultCallback_set_m_rayToWorld_1"];
        var _emscripten_bind_ClosestRayResultCallback_get_m_collisionFilterGroup_0 = Module["_emscripten_bind_ClosestRayResultCallback_get_m_collisionFilterGroup_0"] = asm["_emscripten_bind_ClosestRayResultCallback_get_m_collisionFilterGroup_0"];
        var _emscripten_bind_btWheelInfo_set_m_wheelsDampingRelaxation_1 = Module["_emscripten_bind_btWheelInfo_set_m_wheelsDampingRelaxation_1"] = asm["_emscripten_bind_btWheelInfo_set_m_wheelsDampingRelaxation_1"];
        var _emscripten_bind_btDynamicsWorld_addAction_1 = Module["_emscripten_bind_btDynamicsWorld_addAction_1"] = asm["_emscripten_bind_btDynamicsWorld_addAction_1"];
        var _emscripten_bind_btVector4_op_sub_1 = Module["_emscripten_bind_btVector4_op_sub_1"] = asm["_emscripten_bind_btVector4_op_sub_1"];
        var _emscripten_bind_RaycastInfo_set_m_hardPointWS_1 = Module["_emscripten_bind_RaycastInfo_set_m_hardPointWS_1"] = asm["_emscripten_bind_RaycastInfo_set_m_hardPointWS_1"];
        var _emscripten_bind_btPairCachingGhostObject_getCollisionFlags_0 = Module["_emscripten_bind_btPairCachingGhostObject_getCollisionFlags_0"] = asm["_emscripten_bind_btPairCachingGhostObject_getCollisionFlags_0"];
        var _emscripten_bind_btRigidBodyConstructionInfo_set_m_linearDamping_1 = Module["_emscripten_bind_btRigidBodyConstructionInfo_set_m_linearDamping_1"] = asm["_emscripten_bind_btRigidBodyConstructionInfo_set_m_linearDamping_1"];
        var _emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalDamping_1 = Module["_emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalDamping_1"] = asm["_emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalDamping_1"];
        var _emscripten_bind_btGeneric6DofSpring2Constraint_setLinearLowerLimit_1 = Module["_emscripten_bind_btGeneric6DofSpring2Constraint_setLinearLowerLimit_1"] = asm["_emscripten_bind_btGeneric6DofSpring2Constraint_setLinearLowerLimit_1"];
        var _emscripten_bind_btRigidBody_setActivationState_1 = Module["_emscripten_bind_btRigidBody_setActivationState_1"] = asm["_emscripten_bind_btRigidBody_setActivationState_1"];
        var _emscripten_bind_btWheelInfo_get_m_wheelsDampingCompression_0 = Module["_emscripten_bind_btWheelInfo_get_m_wheelsDampingCompression_0"] = asm["_emscripten_bind_btWheelInfo_get_m_wheelsDampingCompression_0"];
        var _emscripten_bind_ClosestConvexResultCallback_hasHit_0 = Module["_emscripten_bind_ClosestConvexResultCallback_hasHit_0"] = asm["_emscripten_bind_ClosestConvexResultCallback_hasHit_0"];
        var _emscripten_bind_btCapsuleShapeZ___destroy___0 = Module["_emscripten_bind_btCapsuleShapeZ___destroy___0"] = asm["_emscripten_bind_btCapsuleShapeZ___destroy___0"];
        var _emscripten_bind_btWheelInfo_get_m_maxSuspensionForce_0 = Module["_emscripten_bind_btWheelInfo_get_m_maxSuspensionForce_0"] = asm["_emscripten_bind_btWheelInfo_get_m_maxSuspensionForce_0"];
        var _emscripten_bind_ClosestRayResultCallback_get_m_collisionObject_0 = Module["_emscripten_bind_ClosestRayResultCallback_get_m_collisionObject_0"] = asm["_emscripten_bind_ClosestRayResultCallback_get_m_collisionObject_0"];
        var _emscripten_bind_btTriangleMesh_addTriangle_3 = Module["_emscripten_bind_btTriangleMesh_addTriangle_3"] = asm["_emscripten_bind_btTriangleMesh_addTriangle_3"];
        var _emscripten_bind_btGhostObject_getOverlappingObject_1 = Module["_emscripten_bind_btGhostObject_getOverlappingObject_1"] = asm["_emscripten_bind_btGhostObject_getOverlappingObject_1"];
        var _emscripten_bind_btTriangleMesh_addTriangle_4 = Module["_emscripten_bind_btTriangleMesh_addTriangle_4"] = asm["_emscripten_bind_btTriangleMesh_addTriangle_4"];
        var _emscripten_bind_btRigidBody_applyTorqueImpulse_1 = Module["_emscripten_bind_btRigidBody_applyTorqueImpulse_1"] = asm["_emscripten_bind_btRigidBody_applyTorqueImpulse_1"];
        var _emscripten_bind_btRigidBody_setCollisionFlags_1 = Module["_emscripten_bind_btRigidBody_setCollisionFlags_1"] = asm["_emscripten_bind_btRigidBody_setCollisionFlags_1"];
        var _emscripten_bind_btWheelInfo_set_m_suspensionRestLength1_1 = Module["_emscripten_bind_btWheelInfo_set_m_suspensionRestLength1_1"] = asm["_emscripten_bind_btWheelInfo_set_m_suspensionRestLength1_1"];
        var _emscripten_bind_btConeShape___destroy___0 = Module["_emscripten_bind_btConeShape___destroy___0"] = asm["_emscripten_bind_btConeShape___destroy___0"];
        var _emscripten_bind_btCapsuleShapeZ_btCapsuleShapeZ_2 = Module["_emscripten_bind_btCapsuleShapeZ_btCapsuleShapeZ_2"] = asm["_emscripten_bind_btCapsuleShapeZ_btCapsuleShapeZ_2"];
        var _emscripten_bind_btSliderConstraint_btSliderConstraint_5 = Module["_emscripten_bind_btSliderConstraint_btSliderConstraint_5"] = asm["_emscripten_bind_btSliderConstraint_btSliderConstraint_5"];
        var _emscripten_bind_btSliderConstraint_btSliderConstraint_3 = Module["_emscripten_bind_btSliderConstraint_btSliderConstraint_3"] = asm["_emscripten_bind_btSliderConstraint_btSliderConstraint_3"];
        var _emscripten_bind_btTransform___destroy___0 = Module["_emscripten_bind_btTransform___destroy___0"] = asm["_emscripten_bind_btTransform___destroy___0"];
        var _emscripten_bind_btDynamicsWorld_convexSweepTest_5 = Module["_emscripten_bind_btDynamicsWorld_convexSweepTest_5"] = asm["_emscripten_bind_btDynamicsWorld_convexSweepTest_5"];
        var _emscripten_bind_btSliderConstraint___destroy___0 = Module["_emscripten_bind_btSliderConstraint___destroy___0"] = asm["_emscripten_bind_btSliderConstraint___destroy___0"];
        var _emscripten_bind_btRigidBody_forceActivationState_1 = Module["_emscripten_bind_btRigidBody_forceActivationState_1"] = asm["_emscripten_bind_btRigidBody_forceActivationState_1"];
        var _emscripten_bind_btPoint2PointConstraint_setPivotB_1 = Module["_emscripten_bind_btPoint2PointConstraint_setPivotB_1"] = asm["_emscripten_bind_btPoint2PointConstraint_setPivotB_1"];
        var _emscripten_bind_btManifoldPoint_getDistance_0 = Module["_emscripten_bind_btManifoldPoint_getDistance_0"] = asm["_emscripten_bind_btManifoldPoint_getDistance_0"];
        var _emscripten_bind_btGhostPairCallback___destroy___0 = Module["_emscripten_bind_btGhostPairCallback___destroy___0"] = asm["_emscripten_bind_btGhostPairCallback___destroy___0"];
        var _emscripten_bind_btKinematicCharacterController_getMaxSlope_0 = Module["_emscripten_bind_btKinematicCharacterController_getMaxSlope_0"] = asm["_emscripten_bind_btKinematicCharacterController_getMaxSlope_0"];
        var _emscripten_bind_btSliderConstraint_enableFeedback_1 = Module["_emscripten_bind_btSliderConstraint_enableFeedback_1"] = asm["_emscripten_bind_btSliderConstraint_enableFeedback_1"];
        var _emscripten_bind_btRaycastVehicle_addWheel_7 = Module["_emscripten_bind_btRaycastVehicle_addWheel_7"] = asm["_emscripten_bind_btRaycastVehicle_addWheel_7"];
        var _emscripten_bind_ClosestRayResultCallback_set_m_hitNormalWorld_1 = Module["_emscripten_bind_ClosestRayResultCallback_set_m_hitNormalWorld_1"] = asm["_emscripten_bind_ClosestRayResultCallback_set_m_hitNormalWorld_1"];
        var _emscripten_bind_LocalConvexResult_set_m_localShapeInfo_1 = Module["_emscripten_bind_LocalConvexResult_set_m_localShapeInfo_1"] = asm["_emscripten_bind_LocalConvexResult_set_m_localShapeInfo_1"];
        var _emscripten_bind_btStaticPlaneShape___destroy___0 = Module["_emscripten_bind_btStaticPlaneShape___destroy___0"] = asm["_emscripten_bind_btStaticPlaneShape___destroy___0"];
        var _emscripten_bind_btCylinderShapeZ_setLocalScaling_1 = Module["_emscripten_bind_btCylinderShapeZ_setLocalScaling_1"] = asm["_emscripten_bind_btCylinderShapeZ_setLocalScaling_1"];
        var _emscripten_bind_btBoxShape_setLocalScaling_1 = Module["_emscripten_bind_btBoxShape_setLocalScaling_1"] = asm["_emscripten_bind_btBoxShape_setLocalScaling_1"];
        var _emscripten_bind_btConeShapeZ___destroy___0 = Module["_emscripten_bind_btConeShapeZ___destroy___0"] = asm["_emscripten_bind_btConeShapeZ___destroy___0"];
        var _emscripten_bind_btDynamicsWorld_getPairCache_0 = Module["_emscripten_bind_btDynamicsWorld_getPairCache_0"] = asm["_emscripten_bind_btDynamicsWorld_getPairCache_0"];
        var _emscripten_bind_btDiscreteDynamicsWorld_convexSweepTest_5 = Module["_emscripten_bind_btDiscreteDynamicsWorld_convexSweepTest_5"] = asm["_emscripten_bind_btDiscreteDynamicsWorld_convexSweepTest_5"];
        var _emscripten_bind_btKinematicCharacterController_setVelocityForTimeInterval_2 = Module["_emscripten_bind_btKinematicCharacterController_setVelocityForTimeInterval_2"] = asm["_emscripten_bind_btKinematicCharacterController_setVelocityForTimeInterval_2"];
        var _emscripten_bind_btRigidBody_setRestitution_1 = Module["_emscripten_bind_btRigidBody_setRestitution_1"] = asm["_emscripten_bind_btRigidBody_setRestitution_1"];
        var _emscripten_bind_btVector4_btVector4_0 = Module["_emscripten_bind_btVector4_btVector4_0"] = asm["_emscripten_bind_btVector4_btVector4_0"];
        var _emscripten_bind_btDispatcherInfo_get_m_enableSatConvex_0 = Module["_emscripten_bind_btDispatcherInfo_get_m_enableSatConvex_0"] = asm["_emscripten_bind_btDispatcherInfo_get_m_enableSatConvex_0"];
        var _emscripten_bind_btVector4_btVector4_4 = Module["_emscripten_bind_btVector4_btVector4_4"] = asm["_emscripten_bind_btVector4_btVector4_4"];
        var _emscripten_bind_btKinematicCharacterController___destroy___0 = Module["_emscripten_bind_btKinematicCharacterController___destroy___0"] = asm["_emscripten_bind_btKinematicCharacterController___destroy___0"];
        var _emscripten_bind_btGeneric6DofSpringConstraint_setLinearLowerLimit_1 = Module["_emscripten_bind_btGeneric6DofSpringConstraint_setLinearLowerLimit_1"] = asm["_emscripten_bind_btGeneric6DofSpringConstraint_setLinearLowerLimit_1"];
        var _emscripten_enum_RotateOrder_RO_ZXY = Module["_emscripten_enum_RotateOrder_RO_ZXY"] = asm["_emscripten_enum_RotateOrder_RO_ZXY"];
        var _emscripten_bind_LocalConvexResult_set_m_hitCollisionObject_1 = Module["_emscripten_bind_LocalConvexResult_set_m_hitCollisionObject_1"] = asm["_emscripten_bind_LocalConvexResult_set_m_hitCollisionObject_1"];
        var _emscripten_bind_btRotationalLimitMotor2_set_m_currentPosition_1 = Module["_emscripten_bind_btRotationalLimitMotor2_set_m_currentPosition_1"] = asm["_emscripten_bind_btRotationalLimitMotor2_set_m_currentPosition_1"];
        var _emscripten_bind_btGeneric6DofSpringConstraint_setAngularLowerLimit_1 = Module["_emscripten_bind_btGeneric6DofSpringConstraint_setAngularLowerLimit_1"] = asm["_emscripten_bind_btGeneric6DofSpringConstraint_setAngularLowerLimit_1"];
        var _emscripten_bind_btDiscreteDynamicsWorld_rayTest_3 = Module["_emscripten_bind_btDiscreteDynamicsWorld_rayTest_3"] = asm["_emscripten_bind_btDiscreteDynamicsWorld_rayTest_3"];
        var _emscripten_bind_btWheelInfo_get_m_raycastInfo_0 = Module["_emscripten_bind_btWheelInfo_get_m_raycastInfo_0"] = asm["_emscripten_bind_btWheelInfo_get_m_raycastInfo_0"];
        var _emscripten_bind_btContactSolverInfo_get_m_splitImpulse_0 = Module["_emscripten_bind_btContactSolverInfo_get_m_splitImpulse_0"] = asm["_emscripten_bind_btContactSolverInfo_get_m_splitImpulse_0"];
        var _emscripten_bind_btGhostPairCallback_btGhostPairCallback_0 = Module["_emscripten_bind_btGhostPairCallback_btGhostPairCallback_0"] = asm["_emscripten_bind_btGhostPairCallback_btGhostPairCallback_0"];
        var _emscripten_bind_btKinematicCharacterController_setMaxJumpHeight_1 = Module["_emscripten_bind_btKinematicCharacterController_setMaxJumpHeight_1"] = asm["_emscripten_bind_btKinematicCharacterController_setMaxJumpHeight_1"];
        var _emscripten_bind_btPairCachingGhostObject_isActive_0 = Module["_emscripten_bind_btPairCachingGhostObject_isActive_0"] = asm["_emscripten_bind_btPairCachingGhostObject_isActive_0"];
        var _emscripten_bind_btVehicleTuning_get_m_frictionSlip_0 = Module["_emscripten_bind_btVehicleTuning_get_m_frictionSlip_0"] = asm["_emscripten_bind_btVehicleTuning_get_m_frictionSlip_0"];
        var dynCall_viiiii = Module["dynCall_viiiii"] = asm["dynCall_viiiii"];
        var dynCall_vid = Module["dynCall_vid"] = asm["dynCall_vid"];
        var dynCall_vi = Module["dynCall_vi"] = asm["dynCall_vi"];
        var dynCall_viiidii = Module["dynCall_viiidii"] = asm["dynCall_viiidii"];
        var dynCall_vii = Module["dynCall_vii"] = asm["dynCall_vii"];
        var dynCall_iiiiiiiiiii = Module["dynCall_iiiiiiiiiii"] = asm["dynCall_iiiiiiiiiii"];
        var dynCall_ii = Module["dynCall_ii"] = asm["dynCall_ii"];
        var dynCall_viidi = Module["dynCall_viidi"] = asm["dynCall_viidi"];
        var dynCall_viddiii = Module["dynCall_viddiii"] = asm["dynCall_viddiii"];
        var dynCall_vidii = Module["dynCall_vidii"] = asm["dynCall_vidii"];
        var dynCall_iiiii = Module["dynCall_iiiii"] = asm["dynCall_iiiii"];
        var dynCall_vidi = Module["dynCall_vidi"] = asm["dynCall_vidi"];
        var dynCall_diiiiiiii = Module["dynCall_diiiiiiii"] = asm["dynCall_diiiiiiii"];
        var dynCall_viiiiddddiid = Module["dynCall_viiiiddddiid"] = asm["dynCall_viiiiddddiid"];
        var dynCall_diiiii = Module["dynCall_diiiii"] = asm["dynCall_diiiii"];
        var dynCall_iiii = Module["dynCall_iiii"] = asm["dynCall_iiii"];
        var dynCall_viiiiii = Module["dynCall_viiiiii"] = asm["dynCall_viiiiii"];
        var dynCall_iiid = Module["dynCall_iiid"] = asm["dynCall_iiid"];
        var dynCall_di = Module["dynCall_di"] = asm["dynCall_di"];
        var dynCall_iiiiiii = Module["dynCall_iiiiiii"] = asm["dynCall_iiiiiii"];
        var dynCall_diiidii = Module["dynCall_diiidii"] = asm["dynCall_diiidii"];
        var dynCall_viidii = Module["dynCall_viidii"] = asm["dynCall_viidii"];
        var dynCall_viiiiiii = Module["dynCall_viiiiiii"] = asm["dynCall_viiiiiii"];
        var dynCall_viiiiiiiii = Module["dynCall_viiiiiiiii"] = asm["dynCall_viiiiiiiii"];
        var dynCall_viiiiiiiiii = Module["dynCall_viiiiiiiiii"] = asm["dynCall_viiiiiiiiii"];
        var dynCall_iii = Module["dynCall_iii"] = asm["dynCall_iii"];
        var dynCall_diii = Module["dynCall_diii"] = asm["dynCall_diii"];
        var dynCall_diiiiiiiiii = Module["dynCall_diiiiiiiiii"] = asm["dynCall_diiiiiiiiii"];
        var dynCall_viiiid = Module["dynCall_viiiid"] = asm["dynCall_viiiid"];
        var dynCall_diiiiiiiii = Module["dynCall_diiiiiiiii"] = asm["dynCall_diiiiiiiii"];
        var dynCall_did = Module["dynCall_did"] = asm["dynCall_did"];
        var dynCall_viiiidddddidi = Module["dynCall_viiiidddddidi"] = asm["dynCall_viiiidddddidi"];
        var dynCall_diidii = Module["dynCall_diidii"] = asm["dynCall_diidii"];
        var dynCall_diiii = Module["dynCall_diiii"] = asm["dynCall_diiii"];
        var dynCall_iiiiiiiiii = Module["dynCall_iiiiiiiiii"] = asm["dynCall_iiiiiiiiii"];
        var dynCall_viiid = Module["dynCall_viiid"] = asm["dynCall_viiid"];
        var dynCall_viii = Module["dynCall_viii"] = asm["dynCall_viii"];
        var dynCall_v = Module["dynCall_v"] = asm["dynCall_v"];
        var dynCall_viid = Module["dynCall_viid"] = asm["dynCall_viid"];
        var dynCall_iidid = Module["dynCall_iidid"] = asm["dynCall_iidid"];
        var dynCall_viiii = Module["dynCall_viiii"] = asm["dynCall_viiii"];
        Runtime.stackAlloc = asm["stackAlloc"];
        Runtime.stackSave = asm["stackSave"];
        Runtime.stackRestore = asm["stackRestore"];
        Runtime.establishStackSpace = asm["establishStackSpace"];
        Runtime.setTempRet0 = asm["setTempRet0"];
        Runtime.getTempRet0 = asm["getTempRet0"];
        function ExitStatus(status) {
          this.name = "ExitStatus";
          this.message = "Program terminated with exit(" + status + ")";
          this.status = status;
        }
        ExitStatus.prototype = new Error();
        ExitStatus.prototype.constructor = ExitStatus;
        var initialStackTop;
        var preloadStartTime = null;
        var calledMain = false;
        dependenciesFulfilled = function runCaller() {
          if (!Module["calledRun"])
            run();
          if (!Module["calledRun"])
            dependenciesFulfilled = runCaller;
        };
        Module["callMain"] = Module.callMain = function callMain(args) {
          args = args || [];
          ensureInitRuntime();
          var argc = args.length + 1;
          function pad() {
            for (var i2 = 0; i2 < 4 - 1; i2++) {
              argv.push(0);
            }
          }
          var argv = [allocate(intArrayFromString(Module["thisProgram"]), "i8", ALLOC_NORMAL)];
          pad();
          for (var i = 0; i < argc - 1; i = i + 1) {
            argv.push(allocate(intArrayFromString(args[i]), "i8", ALLOC_NORMAL));
            pad();
          }
          argv.push(0);
          argv = allocate(argv, "i32", ALLOC_NORMAL);
          try {
            var ret = Module["_main"](argc, argv, 0);
            exit(ret, true);
          } catch (e) {
            if (e instanceof ExitStatus) {
              return;
            } else if (e == "SimulateInfiniteLoop") {
              Module["noExitRuntime"] = true;
              return;
            } else {
              if (e && typeof e === "object" && e.stack)
                Module.printErr("exception thrown: " + [e, e.stack]);
              throw e;
            }
          } finally {
            calledMain = true;
          }
        };
        function run(args) {
          args = args || Module["arguments"];
          if (preloadStartTime === null)
            preloadStartTime = Date.now();
          if (runDependencies > 0) {
            return;
          }
          preRun();
          if (runDependencies > 0)
            return;
          if (Module["calledRun"])
            return;
          function doRun() {
            if (Module["calledRun"])
              return;
            Module["calledRun"] = true;
            if (ABORT)
              return;
            ensureInitRuntime();
            preMain();
            if (Module["onRuntimeInitialized"])
              Module["onRuntimeInitialized"]();
            if (Module["_main"] && shouldRunNow)
              Module["callMain"](args);
            postRun();
          }
          if (Module["setStatus"]) {
            Module["setStatus"]("Running...");
            setTimeout(function() {
              setTimeout(function() {
                Module["setStatus"]("");
              }, 1);
              doRun();
            }, 1);
          } else {
            doRun();
          }
        }
        Module["run"] = Module.run = run;
        function exit(status, implicit) {
          if (implicit && Module["noExitRuntime"]) {
            return;
          }
          if (Module["noExitRuntime"]) {
          } else {
            ABORT = true;
            EXITSTATUS = status;
            STACKTOP = initialStackTop;
            exitRuntime();
            if (Module["onExit"])
              Module["onExit"](status);
          }
          if (ENVIRONMENT_IS_NODE) {
            process["exit"](status);
          } else if (ENVIRONMENT_IS_SHELL && typeof quit === "function") {
            quit(status);
          }
          throw new ExitStatus(status);
        }
        Module["exit"] = Module.exit = exit;
        var abortDecorators = [];
        function abort(what) {
          if (what !== void 0) {
            Module.print(what);
            Module.printErr(what);
            what = JSON.stringify(what);
          } else {
            what = "";
          }
          ABORT = true;
          EXITSTATUS = 1;
          var extra = "\nIf this abort() is unexpected, build with -s ASSERTIONS=1 which can give more information.";
          var output = "abort(" + what + ") at " + stackTrace() + extra;
          if (abortDecorators) {
            abortDecorators.forEach(function(decorator) {
              output = decorator(output, what);
            });
          }
          throw output;
        }
        Module["abort"] = Module.abort = abort;
        if (Module["preInit"]) {
          if (typeof Module["preInit"] == "function")
            Module["preInit"] = [Module["preInit"]];
          while (Module["preInit"].length > 0) {
            Module["preInit"].pop()();
          }
        }
        var shouldRunNow = true;
        if (Module["noInitialRun"]) {
          shouldRunNow = false;
        }
        Module["noExitRuntime"] = true;
        run();
        function WrapperObject() {
        }
        WrapperObject.prototype = Object.create(WrapperObject.prototype);
        WrapperObject.prototype.constructor = WrapperObject;
        WrapperObject.prototype.__class__ = WrapperObject;
        WrapperObject.__cache__ = {};
        Module["WrapperObject"] = WrapperObject;
        function getCache(__class__) {
          return (__class__ || WrapperObject).__cache__;
        }
        Module["getCache"] = getCache;
        function wrapPointer(ptr, __class__) {
          var cache = getCache(__class__);
          var ret = cache[ptr];
          if (ret)
            return ret;
          ret = Object.create((__class__ || WrapperObject).prototype);
          ret.ptr = ptr;
          return cache[ptr] = ret;
        }
        Module["wrapPointer"] = wrapPointer;
        function castObject(obj, __class__) {
          return wrapPointer(obj.ptr, __class__);
        }
        Module["castObject"] = castObject;
        Module["NULL"] = wrapPointer(0);
        function destroy(obj) {
          if (!obj["__destroy__"])
            throw "Error: Cannot destroy object. (Did you create it yourself?)";
          obj["__destroy__"]();
          delete getCache(obj.__class__)[obj.ptr];
        }
        Module["destroy"] = destroy;
        function compare(obj1, obj2) {
          return obj1.ptr === obj2.ptr;
        }
        Module["compare"] = compare;
        function getPointer(obj) {
          return obj.ptr;
        }
        Module["getPointer"] = getPointer;
        function getClass(obj) {
          return obj.__class__;
        }
        Module["getClass"] = getClass;
        var ensureCache = { buffer: 0, size: 0, pos: 0, temps: [], needed: 0, prepare: function() {
          if (this.needed) {
            for (var i = 0; i < this.temps.length; i++) {
              Module["_free"](this.temps[i]);
            }
            this.temps.length = 0;
            Module["_free"](this.buffer);
            this.buffer = 0;
            this.size += this.needed;
            this.needed = 0;
          }
          if (!this.buffer) {
            this.size += 128;
            this.buffer = Module["_malloc"](this.size);
            assert(this.buffer);
          }
          this.pos = 0;
        }, alloc: function(array, view) {
          assert(this.buffer);
          var bytes = view.BYTES_PER_ELEMENT;
          var len = array.length * bytes;
          len = len + 7 & -8;
          var ret;
          if (this.pos + len >= this.size) {
            assert(len > 0);
            this.needed += len;
            ret = Module["_malloc"](len);
            this.temps.push(ret);
          } else {
            ret = this.buffer + this.pos;
            this.pos += len;
          }
          var retShifted = ret;
          switch (bytes) {
            case 2:
              retShifted >>= 1;
              break;
            case 4:
              retShifted >>= 2;
              break;
            case 8:
              retShifted >>= 3;
              break;
          }
          for (var i = 0; i < array.length; i++) {
            view[retShifted + i] = array[i];
          }
          return ret;
        } };
        function btCollisionShape() {
          throw "cannot construct a btCollisionShape, no constructor in IDL";
        }
        btCollisionShape.prototype = Object.create(WrapperObject.prototype);
        btCollisionShape.prototype.constructor = btCollisionShape;
        btCollisionShape.prototype.__class__ = btCollisionShape;
        btCollisionShape.__cache__ = {};
        Module["btCollisionShape"] = btCollisionShape;
        btCollisionShape.prototype["setLocalScaling"] = btCollisionShape.prototype.setLocalScaling = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btCollisionShape_setLocalScaling_1(self, arg0);
        };
        btCollisionShape.prototype["calculateLocalInertia"] = btCollisionShape.prototype.calculateLocalInertia = function(arg0, arg1) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          if (arg1 && typeof arg1 === "object")
            arg1 = arg1.ptr;
          _emscripten_bind_btCollisionShape_calculateLocalInertia_2(self, arg0, arg1);
        };
        btCollisionShape.prototype["__destroy__"] = btCollisionShape.prototype.__destroy__ = function() {
          var self = this.ptr;
          _emscripten_bind_btCollisionShape___destroy___0(self);
        };
        function btCollisionObject() {
          throw "cannot construct a btCollisionObject, no constructor in IDL";
        }
        btCollisionObject.prototype = Object.create(WrapperObject.prototype);
        btCollisionObject.prototype.constructor = btCollisionObject;
        btCollisionObject.prototype.__class__ = btCollisionObject;
        btCollisionObject.__cache__ = {};
        Module["btCollisionObject"] = btCollisionObject;
        btCollisionObject.prototype["setAnisotropicFriction"] = btCollisionObject.prototype.setAnisotropicFriction = function(arg0, arg1) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          if (arg1 && typeof arg1 === "object")
            arg1 = arg1.ptr;
          _emscripten_bind_btCollisionObject_setAnisotropicFriction_2(self, arg0, arg1);
        };
        btCollisionObject.prototype["getCollisionShape"] = btCollisionObject.prototype.getCollisionShape = function() {
          var self = this.ptr;
          return wrapPointer(_emscripten_bind_btCollisionObject_getCollisionShape_0(self), btCollisionShape);
        };
        btCollisionObject.prototype["setContactProcessingThreshold"] = btCollisionObject.prototype.setContactProcessingThreshold = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btCollisionObject_setContactProcessingThreshold_1(self, arg0);
        };
        btCollisionObject.prototype["setActivationState"] = btCollisionObject.prototype.setActivationState = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btCollisionObject_setActivationState_1(self, arg0);
        };
        btCollisionObject.prototype["forceActivationState"] = btCollisionObject.prototype.forceActivationState = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btCollisionObject_forceActivationState_1(self, arg0);
        };
        btCollisionObject.prototype["activate"] = btCollisionObject.prototype.activate = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          if (arg0 === void 0) {
            _emscripten_bind_btCollisionObject_activate_0(self);
            return;
          }
          _emscripten_bind_btCollisionObject_activate_1(self, arg0);
        };
        btCollisionObject.prototype["isActive"] = btCollisionObject.prototype.isActive = function() {
          var self = this.ptr;
          return !!_emscripten_bind_btCollisionObject_isActive_0(self);
        };
        btCollisionObject.prototype["isKinematicObject"] = btCollisionObject.prototype.isKinematicObject = function() {
          var self = this.ptr;
          return !!_emscripten_bind_btCollisionObject_isKinematicObject_0(self);
        };
        btCollisionObject.prototype["setRestitution"] = btCollisionObject.prototype.setRestitution = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btCollisionObject_setRestitution_1(self, arg0);
        };
        btCollisionObject.prototype["setFriction"] = btCollisionObject.prototype.setFriction = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btCollisionObject_setFriction_1(self, arg0);
        };
        btCollisionObject.prototype["setRollingFriction"] = btCollisionObject.prototype.setRollingFriction = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btCollisionObject_setRollingFriction_1(self, arg0);
        };
        btCollisionObject.prototype["getWorldTransform"] = btCollisionObject.prototype.getWorldTransform = function() {
          var self = this.ptr;
          return wrapPointer(_emscripten_bind_btCollisionObject_getWorldTransform_0(self), btTransform);
        };
        btCollisionObject.prototype["getCollisionFlags"] = btCollisionObject.prototype.getCollisionFlags = function() {
          var self = this.ptr;
          return _emscripten_bind_btCollisionObject_getCollisionFlags_0(self);
        };
        btCollisionObject.prototype["setCollisionFlags"] = btCollisionObject.prototype.setCollisionFlags = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btCollisionObject_setCollisionFlags_1(self, arg0);
        };
        btCollisionObject.prototype["setWorldTransform"] = btCollisionObject.prototype.setWorldTransform = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btCollisionObject_setWorldTransform_1(self, arg0);
        };
        btCollisionObject.prototype["setCollisionShape"] = btCollisionObject.prototype.setCollisionShape = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btCollisionObject_setCollisionShape_1(self, arg0);
        };
        btCollisionObject.prototype["setCcdMotionThreshold"] = btCollisionObject.prototype.setCcdMotionThreshold = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btCollisionObject_setCcdMotionThreshold_1(self, arg0);
        };
        btCollisionObject.prototype["setCcdSweptSphereRadius"] = btCollisionObject.prototype.setCcdSweptSphereRadius = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btCollisionObject_setCcdSweptSphereRadius_1(self, arg0);
        };
        btCollisionObject.prototype["__destroy__"] = btCollisionObject.prototype.__destroy__ = function() {
          var self = this.ptr;
          _emscripten_bind_btCollisionObject___destroy___0(self);
        };
        function btConcaveShape() {
          throw "cannot construct a btConcaveShape, no constructor in IDL";
        }
        btConcaveShape.prototype = Object.create(btCollisionShape.prototype);
        btConcaveShape.prototype.constructor = btConcaveShape;
        btConcaveShape.prototype.__class__ = btConcaveShape;
        btConcaveShape.__cache__ = {};
        Module["btConcaveShape"] = btConcaveShape;
        btConcaveShape.prototype["setLocalScaling"] = btConcaveShape.prototype.setLocalScaling = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btConcaveShape_setLocalScaling_1(self, arg0);
        };
        btConcaveShape.prototype["calculateLocalInertia"] = btConcaveShape.prototype.calculateLocalInertia = function(arg0, arg1) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          if (arg1 && typeof arg1 === "object")
            arg1 = arg1.ptr;
          _emscripten_bind_btConcaveShape_calculateLocalInertia_2(self, arg0, arg1);
        };
        btConcaveShape.prototype["__destroy__"] = btConcaveShape.prototype.__destroy__ = function() {
          var self = this.ptr;
          _emscripten_bind_btConcaveShape___destroy___0(self);
        };
        function btCollisionWorld() {
          throw "cannot construct a btCollisionWorld, no constructor in IDL";
        }
        btCollisionWorld.prototype = Object.create(WrapperObject.prototype);
        btCollisionWorld.prototype.constructor = btCollisionWorld;
        btCollisionWorld.prototype.__class__ = btCollisionWorld;
        btCollisionWorld.__cache__ = {};
        Module["btCollisionWorld"] = btCollisionWorld;
        btCollisionWorld.prototype["getDispatcher"] = btCollisionWorld.prototype.getDispatcher = function() {
          var self = this.ptr;
          return wrapPointer(_emscripten_bind_btCollisionWorld_getDispatcher_0(self), btDispatcher);
        };
        btCollisionWorld.prototype["rayTest"] = btCollisionWorld.prototype.rayTest = function(arg0, arg1, arg2) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          if (arg1 && typeof arg1 === "object")
            arg1 = arg1.ptr;
          if (arg2 && typeof arg2 === "object")
            arg2 = arg2.ptr;
          _emscripten_bind_btCollisionWorld_rayTest_3(self, arg0, arg1, arg2);
        };
        btCollisionWorld.prototype["getPairCache"] = btCollisionWorld.prototype.getPairCache = function() {
          var self = this.ptr;
          return wrapPointer(_emscripten_bind_btCollisionWorld_getPairCache_0(self), btOverlappingPairCache);
        };
        btCollisionWorld.prototype["getDispatchInfo"] = btCollisionWorld.prototype.getDispatchInfo = function() {
          var self = this.ptr;
          return wrapPointer(_emscripten_bind_btCollisionWorld_getDispatchInfo_0(self), btDispatcherInfo);
        };
        btCollisionWorld.prototype["addCollisionObject"] = btCollisionWorld.prototype.addCollisionObject = function(arg0, arg1, arg2) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          if (arg1 && typeof arg1 === "object")
            arg1 = arg1.ptr;
          if (arg2 && typeof arg2 === "object")
            arg2 = arg2.ptr;
          if (arg1 === void 0) {
            _emscripten_bind_btCollisionWorld_addCollisionObject_1(self, arg0);
            return;
          }
          if (arg2 === void 0) {
            _emscripten_bind_btCollisionWorld_addCollisionObject_2(self, arg0, arg1);
            return;
          }
          _emscripten_bind_btCollisionWorld_addCollisionObject_3(self, arg0, arg1, arg2);
        };
        btCollisionWorld.prototype["getBroadphase"] = btCollisionWorld.prototype.getBroadphase = function() {
          var self = this.ptr;
          return wrapPointer(_emscripten_bind_btCollisionWorld_getBroadphase_0(self), btBroadphaseInterface);
        };
        btCollisionWorld.prototype["convexSweepTest"] = btCollisionWorld.prototype.convexSweepTest = function(arg0, arg1, arg2, arg3, arg4) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          if (arg1 && typeof arg1 === "object")
            arg1 = arg1.ptr;
          if (arg2 && typeof arg2 === "object")
            arg2 = arg2.ptr;
          if (arg3 && typeof arg3 === "object")
            arg3 = arg3.ptr;
          if (arg4 && typeof arg4 === "object")
            arg4 = arg4.ptr;
          _emscripten_bind_btCollisionWorld_convexSweepTest_5(self, arg0, arg1, arg2, arg3, arg4);
        };
        btCollisionWorld.prototype["contactPairTest"] = btCollisionWorld.prototype.contactPairTest = function(arg0, arg1, arg2) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          if (arg1 && typeof arg1 === "object")
            arg1 = arg1.ptr;
          if (arg2 && typeof arg2 === "object")
            arg2 = arg2.ptr;
          _emscripten_bind_btCollisionWorld_contactPairTest_3(self, arg0, arg1, arg2);
        };
        btCollisionWorld.prototype["contactTest"] = btCollisionWorld.prototype.contactTest = function(arg0, arg1) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          if (arg1 && typeof arg1 === "object")
            arg1 = arg1.ptr;
          _emscripten_bind_btCollisionWorld_contactTest_2(self, arg0, arg1);
        };
        btCollisionWorld.prototype["__destroy__"] = btCollisionWorld.prototype.__destroy__ = function() {
          var self = this.ptr;
          _emscripten_bind_btCollisionWorld___destroy___0(self);
        };
        function btTypedConstraint() {
          throw "cannot construct a btTypedConstraint, no constructor in IDL";
        }
        btTypedConstraint.prototype = Object.create(WrapperObject.prototype);
        btTypedConstraint.prototype.constructor = btTypedConstraint;
        btTypedConstraint.prototype.__class__ = btTypedConstraint;
        btTypedConstraint.__cache__ = {};
        Module["btTypedConstraint"] = btTypedConstraint;
        btTypedConstraint.prototype["enableFeedback"] = btTypedConstraint.prototype.enableFeedback = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btTypedConstraint_enableFeedback_1(self, arg0);
        };
        btTypedConstraint.prototype["getBreakingImpulseThreshold"] = btTypedConstraint.prototype.getBreakingImpulseThreshold = function() {
          var self = this.ptr;
          return _emscripten_bind_btTypedConstraint_getBreakingImpulseThreshold_0(self);
        };
        btTypedConstraint.prototype["setBreakingImpulseThreshold"] = btTypedConstraint.prototype.setBreakingImpulseThreshold = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btTypedConstraint_setBreakingImpulseThreshold_1(self, arg0);
        };
        btTypedConstraint.prototype["__destroy__"] = btTypedConstraint.prototype.__destroy__ = function() {
          var self = this.ptr;
          _emscripten_bind_btTypedConstraint___destroy___0(self);
        };
        function btCapsuleShape(arg0, arg1) {
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          if (arg1 && typeof arg1 === "object")
            arg1 = arg1.ptr;
          this.ptr = _emscripten_bind_btCapsuleShape_btCapsuleShape_2(arg0, arg1);
          getCache(btCapsuleShape)[this.ptr] = this;
        }
        btCapsuleShape.prototype = Object.create(btCollisionShape.prototype);
        btCapsuleShape.prototype.constructor = btCapsuleShape;
        btCapsuleShape.prototype.__class__ = btCapsuleShape;
        btCapsuleShape.__cache__ = {};
        Module["btCapsuleShape"] = btCapsuleShape;
        btCapsuleShape.prototype["setMargin"] = btCapsuleShape.prototype.setMargin = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btCapsuleShape_setMargin_1(self, arg0);
        };
        btCapsuleShape.prototype["getMargin"] = btCapsuleShape.prototype.getMargin = function() {
          var self = this.ptr;
          return _emscripten_bind_btCapsuleShape_getMargin_0(self);
        };
        btCapsuleShape.prototype["setLocalScaling"] = btCapsuleShape.prototype.setLocalScaling = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btCapsuleShape_setLocalScaling_1(self, arg0);
        };
        btCapsuleShape.prototype["calculateLocalInertia"] = btCapsuleShape.prototype.calculateLocalInertia = function(arg0, arg1) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          if (arg1 && typeof arg1 === "object")
            arg1 = arg1.ptr;
          _emscripten_bind_btCapsuleShape_calculateLocalInertia_2(self, arg0, arg1);
        };
        btCapsuleShape.prototype["__destroy__"] = btCapsuleShape.prototype.__destroy__ = function() {
          var self = this.ptr;
          _emscripten_bind_btCapsuleShape___destroy___0(self);
        };
        function btGeneric6DofConstraint(arg0, arg1, arg2, arg3, arg4) {
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          if (arg1 && typeof arg1 === "object")
            arg1 = arg1.ptr;
          if (arg2 && typeof arg2 === "object")
            arg2 = arg2.ptr;
          if (arg3 && typeof arg3 === "object")
            arg3 = arg3.ptr;
          if (arg4 && typeof arg4 === "object")
            arg4 = arg4.ptr;
          if (arg3 === void 0) {
            this.ptr = _emscripten_bind_btGeneric6DofConstraint_btGeneric6DofConstraint_3(arg0, arg1, arg2);
            getCache(btGeneric6DofConstraint)[this.ptr] = this;
            return;
          }
          if (arg4 === void 0) {
            this.ptr = _emscripten_bind_btGeneric6DofConstraint_btGeneric6DofConstraint_4(arg0, arg1, arg2, arg3);
            getCache(btGeneric6DofConstraint)[this.ptr] = this;
            return;
          }
          this.ptr = _emscripten_bind_btGeneric6DofConstraint_btGeneric6DofConstraint_5(arg0, arg1, arg2, arg3, arg4);
          getCache(btGeneric6DofConstraint)[this.ptr] = this;
        }
        btGeneric6DofConstraint.prototype = Object.create(btTypedConstraint.prototype);
        btGeneric6DofConstraint.prototype.constructor = btGeneric6DofConstraint;
        btGeneric6DofConstraint.prototype.__class__ = btGeneric6DofConstraint;
        btGeneric6DofConstraint.__cache__ = {};
        Module["btGeneric6DofConstraint"] = btGeneric6DofConstraint;
        btGeneric6DofConstraint.prototype["setLinearLowerLimit"] = btGeneric6DofConstraint.prototype.setLinearLowerLimit = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btGeneric6DofConstraint_setLinearLowerLimit_1(self, arg0);
        };
        btGeneric6DofConstraint.prototype["setLinearUpperLimit"] = btGeneric6DofConstraint.prototype.setLinearUpperLimit = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btGeneric6DofConstraint_setLinearUpperLimit_1(self, arg0);
        };
        btGeneric6DofConstraint.prototype["setAngularLowerLimit"] = btGeneric6DofConstraint.prototype.setAngularLowerLimit = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btGeneric6DofConstraint_setAngularLowerLimit_1(self, arg0);
        };
        btGeneric6DofConstraint.prototype["setAngularUpperLimit"] = btGeneric6DofConstraint.prototype.setAngularUpperLimit = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btGeneric6DofConstraint_setAngularUpperLimit_1(self, arg0);
        };
        btGeneric6DofConstraint.prototype["enableFeedback"] = btGeneric6DofConstraint.prototype.enableFeedback = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btGeneric6DofConstraint_enableFeedback_1(self, arg0);
        };
        btGeneric6DofConstraint.prototype["getBreakingImpulseThreshold"] = btGeneric6DofConstraint.prototype.getBreakingImpulseThreshold = function() {
          var self = this.ptr;
          return _emscripten_bind_btGeneric6DofConstraint_getBreakingImpulseThreshold_0(self);
        };
        btGeneric6DofConstraint.prototype["setBreakingImpulseThreshold"] = btGeneric6DofConstraint.prototype.setBreakingImpulseThreshold = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btGeneric6DofConstraint_setBreakingImpulseThreshold_1(self, arg0);
        };
        btGeneric6DofConstraint.prototype["__destroy__"] = btGeneric6DofConstraint.prototype.__destroy__ = function() {
          var self = this.ptr;
          _emscripten_bind_btGeneric6DofConstraint___destroy___0(self);
        };
        function btStridingMeshInterface() {
          throw "cannot construct a btStridingMeshInterface, no constructor in IDL";
        }
        btStridingMeshInterface.prototype = Object.create(WrapperObject.prototype);
        btStridingMeshInterface.prototype.constructor = btStridingMeshInterface;
        btStridingMeshInterface.prototype.__class__ = btStridingMeshInterface;
        btStridingMeshInterface.__cache__ = {};
        Module["btStridingMeshInterface"] = btStridingMeshInterface;
        btStridingMeshInterface.prototype["__destroy__"] = btStridingMeshInterface.prototype.__destroy__ = function() {
          var self = this.ptr;
          _emscripten_bind_btStridingMeshInterface___destroy___0(self);
        };
        function ConvexResultCallback() {
          throw "cannot construct a ConvexResultCallback, no constructor in IDL";
        }
        ConvexResultCallback.prototype = Object.create(WrapperObject.prototype);
        ConvexResultCallback.prototype.constructor = ConvexResultCallback;
        ConvexResultCallback.prototype.__class__ = ConvexResultCallback;
        ConvexResultCallback.__cache__ = {};
        Module["ConvexResultCallback"] = ConvexResultCallback;
        ConvexResultCallback.prototype["hasHit"] = ConvexResultCallback.prototype.hasHit = function() {
          var self = this.ptr;
          return !!_emscripten_bind_ConvexResultCallback_hasHit_0(self);
        };
        ConvexResultCallback.prototype["get_m_collisionFilterGroup"] = ConvexResultCallback.prototype.get_m_collisionFilterGroup = function() {
          var self = this.ptr;
          return _emscripten_bind_ConvexResultCallback_get_m_collisionFilterGroup_0(self);
        };
        ConvexResultCallback.prototype["set_m_collisionFilterGroup"] = ConvexResultCallback.prototype.set_m_collisionFilterGroup = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_ConvexResultCallback_set_m_collisionFilterGroup_1(self, arg0);
        };
        ConvexResultCallback.prototype["get_m_collisionFilterMask"] = ConvexResultCallback.prototype.get_m_collisionFilterMask = function() {
          var self = this.ptr;
          return _emscripten_bind_ConvexResultCallback_get_m_collisionFilterMask_0(self);
        };
        ConvexResultCallback.prototype["set_m_collisionFilterMask"] = ConvexResultCallback.prototype.set_m_collisionFilterMask = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_ConvexResultCallback_set_m_collisionFilterMask_1(self, arg0);
        };
        ConvexResultCallback.prototype["get_m_closestHitFraction"] = ConvexResultCallback.prototype.get_m_closestHitFraction = function() {
          var self = this.ptr;
          return _emscripten_bind_ConvexResultCallback_get_m_closestHitFraction_0(self);
        };
        ConvexResultCallback.prototype["set_m_closestHitFraction"] = ConvexResultCallback.prototype.set_m_closestHitFraction = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_ConvexResultCallback_set_m_closestHitFraction_1(self, arg0);
        };
        ConvexResultCallback.prototype["__destroy__"] = ConvexResultCallback.prototype.__destroy__ = function() {
          var self = this.ptr;
          _emscripten_bind_ConvexResultCallback___destroy___0(self);
        };
        function btMotionState() {
          throw "cannot construct a btMotionState, no constructor in IDL";
        }
        btMotionState.prototype = Object.create(WrapperObject.prototype);
        btMotionState.prototype.constructor = btMotionState;
        btMotionState.prototype.__class__ = btMotionState;
        btMotionState.__cache__ = {};
        Module["btMotionState"] = btMotionState;
        btMotionState.prototype["getWorldTransform"] = btMotionState.prototype.getWorldTransform = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btMotionState_getWorldTransform_1(self, arg0);
        };
        btMotionState.prototype["setWorldTransform"] = btMotionState.prototype.setWorldTransform = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btMotionState_setWorldTransform_1(self, arg0);
        };
        btMotionState.prototype["__destroy__"] = btMotionState.prototype.__destroy__ = function() {
          var self = this.ptr;
          _emscripten_bind_btMotionState___destroy___0(self);
        };
        function btConeShape(arg0, arg1) {
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          if (arg1 && typeof arg1 === "object")
            arg1 = arg1.ptr;
          this.ptr = _emscripten_bind_btConeShape_btConeShape_2(arg0, arg1);
          getCache(btConeShape)[this.ptr] = this;
        }
        btConeShape.prototype = Object.create(btCollisionShape.prototype);
        btConeShape.prototype.constructor = btConeShape;
        btConeShape.prototype.__class__ = btConeShape;
        btConeShape.__cache__ = {};
        Module["btConeShape"] = btConeShape;
        btConeShape.prototype["setLocalScaling"] = btConeShape.prototype.setLocalScaling = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btConeShape_setLocalScaling_1(self, arg0);
        };
        btConeShape.prototype["calculateLocalInertia"] = btConeShape.prototype.calculateLocalInertia = function(arg0, arg1) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          if (arg1 && typeof arg1 === "object")
            arg1 = arg1.ptr;
          _emscripten_bind_btConeShape_calculateLocalInertia_2(self, arg0, arg1);
        };
        btConeShape.prototype["__destroy__"] = btConeShape.prototype.__destroy__ = function() {
          var self = this.ptr;
          _emscripten_bind_btConeShape___destroy___0(self);
        };
        function btConvexShape() {
          throw "cannot construct a btConvexShape, no constructor in IDL";
        }
        btConvexShape.prototype = Object.create(btCollisionShape.prototype);
        btConvexShape.prototype.constructor = btConvexShape;
        btConvexShape.prototype.__class__ = btConvexShape;
        btConvexShape.__cache__ = {};
        Module["btConvexShape"] = btConvexShape;
        btConvexShape.prototype["setLocalScaling"] = btConvexShape.prototype.setLocalScaling = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btConvexShape_setLocalScaling_1(self, arg0);
        };
        btConvexShape.prototype["calculateLocalInertia"] = btConvexShape.prototype.calculateLocalInertia = function(arg0, arg1) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          if (arg1 && typeof arg1 === "object")
            arg1 = arg1.ptr;
          _emscripten_bind_btConvexShape_calculateLocalInertia_2(self, arg0, arg1);
        };
        btConvexShape.prototype["__destroy__"] = btConvexShape.prototype.__destroy__ = function() {
          var self = this.ptr;
          _emscripten_bind_btConvexShape___destroy___0(self);
        };
        function ContactResultCallback() {
          throw "cannot construct a ContactResultCallback, no constructor in IDL";
        }
        ContactResultCallback.prototype = Object.create(WrapperObject.prototype);
        ContactResultCallback.prototype.constructor = ContactResultCallback;
        ContactResultCallback.prototype.__class__ = ContactResultCallback;
        ContactResultCallback.__cache__ = {};
        Module["ContactResultCallback"] = ContactResultCallback;
        ContactResultCallback.prototype["addSingleResult"] = ContactResultCallback.prototype.addSingleResult = function(arg0, arg1, arg2, arg3, arg4, arg5, arg6) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          if (arg1 && typeof arg1 === "object")
            arg1 = arg1.ptr;
          if (arg2 && typeof arg2 === "object")
            arg2 = arg2.ptr;
          if (arg3 && typeof arg3 === "object")
            arg3 = arg3.ptr;
          if (arg4 && typeof arg4 === "object")
            arg4 = arg4.ptr;
          if (arg5 && typeof arg5 === "object")
            arg5 = arg5.ptr;
          if (arg6 && typeof arg6 === "object")
            arg6 = arg6.ptr;
          return _emscripten_bind_ContactResultCallback_addSingleResult_7(self, arg0, arg1, arg2, arg3, arg4, arg5, arg6);
        };
        ContactResultCallback.prototype["__destroy__"] = ContactResultCallback.prototype.__destroy__ = function() {
          var self = this.ptr;
          _emscripten_bind_ContactResultCallback___destroy___0(self);
        };
        function btTriangleMeshShape() {
          throw "cannot construct a btTriangleMeshShape, no constructor in IDL";
        }
        btTriangleMeshShape.prototype = Object.create(btConcaveShape.prototype);
        btTriangleMeshShape.prototype.constructor = btTriangleMeshShape;
        btTriangleMeshShape.prototype.__class__ = btTriangleMeshShape;
        btTriangleMeshShape.__cache__ = {};
        Module["btTriangleMeshShape"] = btTriangleMeshShape;
        btTriangleMeshShape.prototype["setLocalScaling"] = btTriangleMeshShape.prototype.setLocalScaling = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btTriangleMeshShape_setLocalScaling_1(self, arg0);
        };
        btTriangleMeshShape.prototype["calculateLocalInertia"] = btTriangleMeshShape.prototype.calculateLocalInertia = function(arg0, arg1) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          if (arg1 && typeof arg1 === "object")
            arg1 = arg1.ptr;
          _emscripten_bind_btTriangleMeshShape_calculateLocalInertia_2(self, arg0, arg1);
        };
        btTriangleMeshShape.prototype["__destroy__"] = btTriangleMeshShape.prototype.__destroy__ = function() {
          var self = this.ptr;
          _emscripten_bind_btTriangleMeshShape___destroy___0(self);
        };
        function btDispatcher() {
          throw "cannot construct a btDispatcher, no constructor in IDL";
        }
        btDispatcher.prototype = Object.create(WrapperObject.prototype);
        btDispatcher.prototype.constructor = btDispatcher;
        btDispatcher.prototype.__class__ = btDispatcher;
        btDispatcher.__cache__ = {};
        Module["btDispatcher"] = btDispatcher;
        btDispatcher.prototype["getNumManifolds"] = btDispatcher.prototype.getNumManifolds = function() {
          var self = this.ptr;
          return _emscripten_bind_btDispatcher_getNumManifolds_0(self);
        };
        btDispatcher.prototype["getManifoldByIndexInternal"] = btDispatcher.prototype.getManifoldByIndexInternal = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          return wrapPointer(_emscripten_bind_btDispatcher_getManifoldByIndexInternal_1(self, arg0), btPersistentManifold);
        };
        btDispatcher.prototype["__destroy__"] = btDispatcher.prototype.__destroy__ = function() {
          var self = this.ptr;
          _emscripten_bind_btDispatcher___destroy___0(self);
        };
        function btDynamicsWorld() {
          throw "cannot construct a btDynamicsWorld, no constructor in IDL";
        }
        btDynamicsWorld.prototype = Object.create(btCollisionWorld.prototype);
        btDynamicsWorld.prototype.constructor = btDynamicsWorld;
        btDynamicsWorld.prototype.__class__ = btDynamicsWorld;
        btDynamicsWorld.__cache__ = {};
        Module["btDynamicsWorld"] = btDynamicsWorld;
        btDynamicsWorld.prototype["addAction"] = btDynamicsWorld.prototype.addAction = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btDynamicsWorld_addAction_1(self, arg0);
        };
        btDynamicsWorld.prototype["removeAction"] = btDynamicsWorld.prototype.removeAction = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btDynamicsWorld_removeAction_1(self, arg0);
        };
        btDynamicsWorld.prototype["getSolverInfo"] = btDynamicsWorld.prototype.getSolverInfo = function() {
          var self = this.ptr;
          return wrapPointer(_emscripten_bind_btDynamicsWorld_getSolverInfo_0(self), btContactSolverInfo);
        };
        btDynamicsWorld.prototype["getDispatcher"] = btDynamicsWorld.prototype.getDispatcher = function() {
          var self = this.ptr;
          return wrapPointer(_emscripten_bind_btDynamicsWorld_getDispatcher_0(self), btDispatcher);
        };
        btDynamicsWorld.prototype["rayTest"] = btDynamicsWorld.prototype.rayTest = function(arg0, arg1, arg2) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          if (arg1 && typeof arg1 === "object")
            arg1 = arg1.ptr;
          if (arg2 && typeof arg2 === "object")
            arg2 = arg2.ptr;
          _emscripten_bind_btDynamicsWorld_rayTest_3(self, arg0, arg1, arg2);
        };
        btDynamicsWorld.prototype["getPairCache"] = btDynamicsWorld.prototype.getPairCache = function() {
          var self = this.ptr;
          return wrapPointer(_emscripten_bind_btDynamicsWorld_getPairCache_0(self), btOverlappingPairCache);
        };
        btDynamicsWorld.prototype["getDispatchInfo"] = btDynamicsWorld.prototype.getDispatchInfo = function() {
          var self = this.ptr;
          return wrapPointer(_emscripten_bind_btDynamicsWorld_getDispatchInfo_0(self), btDispatcherInfo);
        };
        btDynamicsWorld.prototype["addCollisionObject"] = btDynamicsWorld.prototype.addCollisionObject = function(arg0, arg1, arg2) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          if (arg1 && typeof arg1 === "object")
            arg1 = arg1.ptr;
          if (arg2 && typeof arg2 === "object")
            arg2 = arg2.ptr;
          if (arg1 === void 0) {
            _emscripten_bind_btDynamicsWorld_addCollisionObject_1(self, arg0);
            return;
          }
          if (arg2 === void 0) {
            _emscripten_bind_btDynamicsWorld_addCollisionObject_2(self, arg0, arg1);
            return;
          }
          _emscripten_bind_btDynamicsWorld_addCollisionObject_3(self, arg0, arg1, arg2);
        };
        btDynamicsWorld.prototype["getBroadphase"] = btDynamicsWorld.prototype.getBroadphase = function() {
          var self = this.ptr;
          return wrapPointer(_emscripten_bind_btDynamicsWorld_getBroadphase_0(self), btBroadphaseInterface);
        };
        btDynamicsWorld.prototype["convexSweepTest"] = btDynamicsWorld.prototype.convexSweepTest = function(arg0, arg1, arg2, arg3, arg4) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          if (arg1 && typeof arg1 === "object")
            arg1 = arg1.ptr;
          if (arg2 && typeof arg2 === "object")
            arg2 = arg2.ptr;
          if (arg3 && typeof arg3 === "object")
            arg3 = arg3.ptr;
          if (arg4 && typeof arg4 === "object")
            arg4 = arg4.ptr;
          _emscripten_bind_btDynamicsWorld_convexSweepTest_5(self, arg0, arg1, arg2, arg3, arg4);
        };
        btDynamicsWorld.prototype["contactPairTest"] = btDynamicsWorld.prototype.contactPairTest = function(arg0, arg1, arg2) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          if (arg1 && typeof arg1 === "object")
            arg1 = arg1.ptr;
          if (arg2 && typeof arg2 === "object")
            arg2 = arg2.ptr;
          _emscripten_bind_btDynamicsWorld_contactPairTest_3(self, arg0, arg1, arg2);
        };
        btDynamicsWorld.prototype["contactTest"] = btDynamicsWorld.prototype.contactTest = function(arg0, arg1) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          if (arg1 && typeof arg1 === "object")
            arg1 = arg1.ptr;
          _emscripten_bind_btDynamicsWorld_contactTest_2(self, arg0, arg1);
        };
        btDynamicsWorld.prototype["__destroy__"] = btDynamicsWorld.prototype.__destroy__ = function() {
          var self = this.ptr;
          _emscripten_bind_btDynamicsWorld___destroy___0(self);
        };
        function RayResultCallback() {
          throw "cannot construct a RayResultCallback, no constructor in IDL";
        }
        RayResultCallback.prototype = Object.create(WrapperObject.prototype);
        RayResultCallback.prototype.constructor = RayResultCallback;
        RayResultCallback.prototype.__class__ = RayResultCallback;
        RayResultCallback.__cache__ = {};
        Module["RayResultCallback"] = RayResultCallback;
        RayResultCallback.prototype["hasHit"] = RayResultCallback.prototype.hasHit = function() {
          var self = this.ptr;
          return !!_emscripten_bind_RayResultCallback_hasHit_0(self);
        };
        RayResultCallback.prototype["get_m_collisionFilterGroup"] = RayResultCallback.prototype.get_m_collisionFilterGroup = function() {
          var self = this.ptr;
          return _emscripten_bind_RayResultCallback_get_m_collisionFilterGroup_0(self);
        };
        RayResultCallback.prototype["set_m_collisionFilterGroup"] = RayResultCallback.prototype.set_m_collisionFilterGroup = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_RayResultCallback_set_m_collisionFilterGroup_1(self, arg0);
        };
        RayResultCallback.prototype["get_m_collisionFilterMask"] = RayResultCallback.prototype.get_m_collisionFilterMask = function() {
          var self = this.ptr;
          return _emscripten_bind_RayResultCallback_get_m_collisionFilterMask_0(self);
        };
        RayResultCallback.prototype["set_m_collisionFilterMask"] = RayResultCallback.prototype.set_m_collisionFilterMask = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_RayResultCallback_set_m_collisionFilterMask_1(self, arg0);
        };
        RayResultCallback.prototype["get_m_collisionObject"] = RayResultCallback.prototype.get_m_collisionObject = function() {
          var self = this.ptr;
          return wrapPointer(_emscripten_bind_RayResultCallback_get_m_collisionObject_0(self), btCollisionObject);
        };
        RayResultCallback.prototype["set_m_collisionObject"] = RayResultCallback.prototype.set_m_collisionObject = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_RayResultCallback_set_m_collisionObject_1(self, arg0);
        };
        RayResultCallback.prototype["__destroy__"] = RayResultCallback.prototype.__destroy__ = function() {
          var self = this.ptr;
          _emscripten_bind_RayResultCallback___destroy___0(self);
        };
        function btVector3(arg0, arg1, arg2) {
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          if (arg1 && typeof arg1 === "object")
            arg1 = arg1.ptr;
          if (arg2 && typeof arg2 === "object")
            arg2 = arg2.ptr;
          if (arg0 === void 0) {
            this.ptr = _emscripten_bind_btVector3_btVector3_0();
            getCache(btVector3)[this.ptr] = this;
            return;
          }
          if (arg1 === void 0) {
            this.ptr = _emscripten_bind_btVector3_btVector3_1(arg0);
            getCache(btVector3)[this.ptr] = this;
            return;
          }
          if (arg2 === void 0) {
            this.ptr = _emscripten_bind_btVector3_btVector3_2(arg0, arg1);
            getCache(btVector3)[this.ptr] = this;
            return;
          }
          this.ptr = _emscripten_bind_btVector3_btVector3_3(arg0, arg1, arg2);
          getCache(btVector3)[this.ptr] = this;
        }
        btVector3.prototype = Object.create(WrapperObject.prototype);
        btVector3.prototype.constructor = btVector3;
        btVector3.prototype.__class__ = btVector3;
        btVector3.__cache__ = {};
        Module["btVector3"] = btVector3;
        btVector3.prototype["length"] = btVector3.prototype.length = function() {
          var self = this.ptr;
          return _emscripten_bind_btVector3_length_0(self);
        };
        btVector3.prototype["x"] = btVector3.prototype.x = function() {
          var self = this.ptr;
          return _emscripten_bind_btVector3_x_0(self);
        };
        btVector3.prototype["y"] = btVector3.prototype.y = function() {
          var self = this.ptr;
          return _emscripten_bind_btVector3_y_0(self);
        };
        btVector3.prototype["z"] = btVector3.prototype.z = function() {
          var self = this.ptr;
          return _emscripten_bind_btVector3_z_0(self);
        };
        btVector3.prototype["setX"] = btVector3.prototype.setX = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btVector3_setX_1(self, arg0);
        };
        btVector3.prototype["setY"] = btVector3.prototype.setY = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btVector3_setY_1(self, arg0);
        };
        btVector3.prototype["setZ"] = btVector3.prototype.setZ = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btVector3_setZ_1(self, arg0);
        };
        btVector3.prototype["setValue"] = btVector3.prototype.setValue = function(arg0, arg1, arg2) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          if (arg1 && typeof arg1 === "object")
            arg1 = arg1.ptr;
          if (arg2 && typeof arg2 === "object")
            arg2 = arg2.ptr;
          _emscripten_bind_btVector3_setValue_3(self, arg0, arg1, arg2);
        };
        btVector3.prototype["normalize"] = btVector3.prototype.normalize = function() {
          var self = this.ptr;
          _emscripten_bind_btVector3_normalize_0(self);
        };
        btVector3.prototype["dot"] = btVector3.prototype.dot = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          return _emscripten_bind_btVector3_dot_1(self, arg0);
        };
        btVector3.prototype["op_mul"] = btVector3.prototype.op_mul = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          return wrapPointer(_emscripten_bind_btVector3_op_mul_1(self, arg0), btVector3);
        };
        btVector3.prototype["op_add"] = btVector3.prototype.op_add = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          return wrapPointer(_emscripten_bind_btVector3_op_add_1(self, arg0), btVector3);
        };
        btVector3.prototype["op_sub"] = btVector3.prototype.op_sub = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          return wrapPointer(_emscripten_bind_btVector3_op_sub_1(self, arg0), btVector3);
        };
        btVector3.prototype["__destroy__"] = btVector3.prototype.__destroy__ = function() {
          var self = this.ptr;
          _emscripten_bind_btVector3___destroy___0(self);
        };
        function btVehicleRaycaster() {
          throw "cannot construct a btVehicleRaycaster, no constructor in IDL";
        }
        btVehicleRaycaster.prototype = Object.create(WrapperObject.prototype);
        btVehicleRaycaster.prototype.constructor = btVehicleRaycaster;
        btVehicleRaycaster.prototype.__class__ = btVehicleRaycaster;
        btVehicleRaycaster.__cache__ = {};
        Module["btVehicleRaycaster"] = btVehicleRaycaster;
        btVehicleRaycaster.prototype["__destroy__"] = btVehicleRaycaster.prototype.__destroy__ = function() {
          var self = this.ptr;
          _emscripten_bind_btVehicleRaycaster___destroy___0(self);
        };
        function btGhostObject() {
          this.ptr = _emscripten_bind_btGhostObject_btGhostObject_0();
          getCache(btGhostObject)[this.ptr] = this;
        }
        btGhostObject.prototype = Object.create(btCollisionObject.prototype);
        btGhostObject.prototype.constructor = btGhostObject;
        btGhostObject.prototype.__class__ = btGhostObject;
        btGhostObject.__cache__ = {};
        Module["btGhostObject"] = btGhostObject;
        btGhostObject.prototype["getNumOverlappingObjects"] = btGhostObject.prototype.getNumOverlappingObjects = function() {
          var self = this.ptr;
          return _emscripten_bind_btGhostObject_getNumOverlappingObjects_0(self);
        };
        btGhostObject.prototype["getOverlappingObject"] = btGhostObject.prototype.getOverlappingObject = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          return wrapPointer(_emscripten_bind_btGhostObject_getOverlappingObject_1(self, arg0), btCollisionObject);
        };
        btGhostObject.prototype["setAnisotropicFriction"] = btGhostObject.prototype.setAnisotropicFriction = function(arg0, arg1) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          if (arg1 && typeof arg1 === "object")
            arg1 = arg1.ptr;
          _emscripten_bind_btGhostObject_setAnisotropicFriction_2(self, arg0, arg1);
        };
        btGhostObject.prototype["getCollisionShape"] = btGhostObject.prototype.getCollisionShape = function() {
          var self = this.ptr;
          return wrapPointer(_emscripten_bind_btGhostObject_getCollisionShape_0(self), btCollisionShape);
        };
        btGhostObject.prototype["setContactProcessingThreshold"] = btGhostObject.prototype.setContactProcessingThreshold = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btGhostObject_setContactProcessingThreshold_1(self, arg0);
        };
        btGhostObject.prototype["setActivationState"] = btGhostObject.prototype.setActivationState = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btGhostObject_setActivationState_1(self, arg0);
        };
        btGhostObject.prototype["forceActivationState"] = btGhostObject.prototype.forceActivationState = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btGhostObject_forceActivationState_1(self, arg0);
        };
        btGhostObject.prototype["activate"] = btGhostObject.prototype.activate = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          if (arg0 === void 0) {
            _emscripten_bind_btGhostObject_activate_0(self);
            return;
          }
          _emscripten_bind_btGhostObject_activate_1(self, arg0);
        };
        btGhostObject.prototype["isActive"] = btGhostObject.prototype.isActive = function() {
          var self = this.ptr;
          return !!_emscripten_bind_btGhostObject_isActive_0(self);
        };
        btGhostObject.prototype["isKinematicObject"] = btGhostObject.prototype.isKinematicObject = function() {
          var self = this.ptr;
          return !!_emscripten_bind_btGhostObject_isKinematicObject_0(self);
        };
        btGhostObject.prototype["setRestitution"] = btGhostObject.prototype.setRestitution = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btGhostObject_setRestitution_1(self, arg0);
        };
        btGhostObject.prototype["setFriction"] = btGhostObject.prototype.setFriction = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btGhostObject_setFriction_1(self, arg0);
        };
        btGhostObject.prototype["setRollingFriction"] = btGhostObject.prototype.setRollingFriction = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btGhostObject_setRollingFriction_1(self, arg0);
        };
        btGhostObject.prototype["getWorldTransform"] = btGhostObject.prototype.getWorldTransform = function() {
          var self = this.ptr;
          return wrapPointer(_emscripten_bind_btGhostObject_getWorldTransform_0(self), btTransform);
        };
        btGhostObject.prototype["getCollisionFlags"] = btGhostObject.prototype.getCollisionFlags = function() {
          var self = this.ptr;
          return _emscripten_bind_btGhostObject_getCollisionFlags_0(self);
        };
        btGhostObject.prototype["setCollisionFlags"] = btGhostObject.prototype.setCollisionFlags = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btGhostObject_setCollisionFlags_1(self, arg0);
        };
        btGhostObject.prototype["setWorldTransform"] = btGhostObject.prototype.setWorldTransform = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btGhostObject_setWorldTransform_1(self, arg0);
        };
        btGhostObject.prototype["setCollisionShape"] = btGhostObject.prototype.setCollisionShape = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btGhostObject_setCollisionShape_1(self, arg0);
        };
        btGhostObject.prototype["setCcdMotionThreshold"] = btGhostObject.prototype.setCcdMotionThreshold = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btGhostObject_setCcdMotionThreshold_1(self, arg0);
        };
        btGhostObject.prototype["setCcdSweptSphereRadius"] = btGhostObject.prototype.setCcdSweptSphereRadius = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btGhostObject_setCcdSweptSphereRadius_1(self, arg0);
        };
        btGhostObject.prototype["__destroy__"] = btGhostObject.prototype.__destroy__ = function() {
          var self = this.ptr;
          _emscripten_bind_btGhostObject___destroy___0(self);
        };
        function btQuadWord() {
          throw "cannot construct a btQuadWord, no constructor in IDL";
        }
        btQuadWord.prototype = Object.create(WrapperObject.prototype);
        btQuadWord.prototype.constructor = btQuadWord;
        btQuadWord.prototype.__class__ = btQuadWord;
        btQuadWord.__cache__ = {};
        Module["btQuadWord"] = btQuadWord;
        btQuadWord.prototype["x"] = btQuadWord.prototype.x = function() {
          var self = this.ptr;
          return _emscripten_bind_btQuadWord_x_0(self);
        };
        btQuadWord.prototype["y"] = btQuadWord.prototype.y = function() {
          var self = this.ptr;
          return _emscripten_bind_btQuadWord_y_0(self);
        };
        btQuadWord.prototype["z"] = btQuadWord.prototype.z = function() {
          var self = this.ptr;
          return _emscripten_bind_btQuadWord_z_0(self);
        };
        btQuadWord.prototype["w"] = btQuadWord.prototype.w = function() {
          var self = this.ptr;
          return _emscripten_bind_btQuadWord_w_0(self);
        };
        btQuadWord.prototype["setX"] = btQuadWord.prototype.setX = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btQuadWord_setX_1(self, arg0);
        };
        btQuadWord.prototype["setY"] = btQuadWord.prototype.setY = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btQuadWord_setY_1(self, arg0);
        };
        btQuadWord.prototype["setZ"] = btQuadWord.prototype.setZ = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btQuadWord_setZ_1(self, arg0);
        };
        btQuadWord.prototype["setW"] = btQuadWord.prototype.setW = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btQuadWord_setW_1(self, arg0);
        };
        btQuadWord.prototype["__destroy__"] = btQuadWord.prototype.__destroy__ = function() {
          var self = this.ptr;
          _emscripten_bind_btQuadWord___destroy___0(self);
        };
        function btCylinderShape(arg0) {
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          this.ptr = _emscripten_bind_btCylinderShape_btCylinderShape_1(arg0);
          getCache(btCylinderShape)[this.ptr] = this;
        }
        btCylinderShape.prototype = Object.create(btCollisionShape.prototype);
        btCylinderShape.prototype.constructor = btCylinderShape;
        btCylinderShape.prototype.__class__ = btCylinderShape;
        btCylinderShape.__cache__ = {};
        Module["btCylinderShape"] = btCylinderShape;
        btCylinderShape.prototype["setMargin"] = btCylinderShape.prototype.setMargin = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btCylinderShape_setMargin_1(self, arg0);
        };
        btCylinderShape.prototype["getMargin"] = btCylinderShape.prototype.getMargin = function() {
          var self = this.ptr;
          return _emscripten_bind_btCylinderShape_getMargin_0(self);
        };
        btCylinderShape.prototype["setLocalScaling"] = btCylinderShape.prototype.setLocalScaling = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btCylinderShape_setLocalScaling_1(self, arg0);
        };
        btCylinderShape.prototype["calculateLocalInertia"] = btCylinderShape.prototype.calculateLocalInertia = function(arg0, arg1) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          if (arg1 && typeof arg1 === "object")
            arg1 = arg1.ptr;
          _emscripten_bind_btCylinderShape_calculateLocalInertia_2(self, arg0, arg1);
        };
        btCylinderShape.prototype["__destroy__"] = btCylinderShape.prototype.__destroy__ = function() {
          var self = this.ptr;
          _emscripten_bind_btCylinderShape___destroy___0(self);
        };
        function btActionInterface() {
          throw "cannot construct a btActionInterface, no constructor in IDL";
        }
        btActionInterface.prototype = Object.create(WrapperObject.prototype);
        btActionInterface.prototype.constructor = btActionInterface;
        btActionInterface.prototype.__class__ = btActionInterface;
        btActionInterface.__cache__ = {};
        Module["btActionInterface"] = btActionInterface;
        btActionInterface.prototype["__destroy__"] = btActionInterface.prototype.__destroy__ = function() {
          var self = this.ptr;
          _emscripten_bind_btActionInterface___destroy___0(self);
        };
        function btMatrix3x3() {
          throw "cannot construct a btMatrix3x3, no constructor in IDL";
        }
        btMatrix3x3.prototype = Object.create(WrapperObject.prototype);
        btMatrix3x3.prototype.constructor = btMatrix3x3;
        btMatrix3x3.prototype.__class__ = btMatrix3x3;
        btMatrix3x3.__cache__ = {};
        Module["btMatrix3x3"] = btMatrix3x3;
        btMatrix3x3.prototype["setEulerZYX"] = btMatrix3x3.prototype.setEulerZYX = function(arg0, arg1, arg2) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          if (arg1 && typeof arg1 === "object")
            arg1 = arg1.ptr;
          if (arg2 && typeof arg2 === "object")
            arg2 = arg2.ptr;
          _emscripten_bind_btMatrix3x3_setEulerZYX_3(self, arg0, arg1, arg2);
        };
        btMatrix3x3.prototype["getRotation"] = btMatrix3x3.prototype.getRotation = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btMatrix3x3_getRotation_1(self, arg0);
        };
        btMatrix3x3.prototype["getRow"] = btMatrix3x3.prototype.getRow = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          return wrapPointer(_emscripten_bind_btMatrix3x3_getRow_1(self, arg0), btVector3);
        };
        btMatrix3x3.prototype["__destroy__"] = btMatrix3x3.prototype.__destroy__ = function() {
          var self = this.ptr;
          _emscripten_bind_btMatrix3x3___destroy___0(self);
        };
        function ConcreteContactResultCallback() {
          this.ptr = _emscripten_bind_ConcreteContactResultCallback_ConcreteContactResultCallback_0();
          getCache(ConcreteContactResultCallback)[this.ptr] = this;
        }
        ConcreteContactResultCallback.prototype = Object.create(ContactResultCallback.prototype);
        ConcreteContactResultCallback.prototype.constructor = ConcreteContactResultCallback;
        ConcreteContactResultCallback.prototype.__class__ = ConcreteContactResultCallback;
        ConcreteContactResultCallback.__cache__ = {};
        Module["ConcreteContactResultCallback"] = ConcreteContactResultCallback;
        ConcreteContactResultCallback.prototype["addSingleResult"] = ConcreteContactResultCallback.prototype.addSingleResult = function(arg0, arg1, arg2, arg3, arg4, arg5, arg6) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          if (arg1 && typeof arg1 === "object")
            arg1 = arg1.ptr;
          if (arg2 && typeof arg2 === "object")
            arg2 = arg2.ptr;
          if (arg3 && typeof arg3 === "object")
            arg3 = arg3.ptr;
          if (arg4 && typeof arg4 === "object")
            arg4 = arg4.ptr;
          if (arg5 && typeof arg5 === "object")
            arg5 = arg5.ptr;
          if (arg6 && typeof arg6 === "object")
            arg6 = arg6.ptr;
          return _emscripten_bind_ConcreteContactResultCallback_addSingleResult_7(self, arg0, arg1, arg2, arg3, arg4, arg5, arg6);
        };
        ConcreteContactResultCallback.prototype["__destroy__"] = ConcreteContactResultCallback.prototype.__destroy__ = function() {
          var self = this.ptr;
          _emscripten_bind_ConcreteContactResultCallback___destroy___0(self);
        };
        function btBvhTriangleMeshShape(arg0, arg1, arg2) {
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          if (arg1 && typeof arg1 === "object")
            arg1 = arg1.ptr;
          if (arg2 && typeof arg2 === "object")
            arg2 = arg2.ptr;
          if (arg2 === void 0) {
            this.ptr = _emscripten_bind_btBvhTriangleMeshShape_btBvhTriangleMeshShape_2(arg0, arg1);
            getCache(btBvhTriangleMeshShape)[this.ptr] = this;
            return;
          }
          this.ptr = _emscripten_bind_btBvhTriangleMeshShape_btBvhTriangleMeshShape_3(arg0, arg1, arg2);
          getCache(btBvhTriangleMeshShape)[this.ptr] = this;
        }
        btBvhTriangleMeshShape.prototype = Object.create(btTriangleMeshShape.prototype);
        btBvhTriangleMeshShape.prototype.constructor = btBvhTriangleMeshShape;
        btBvhTriangleMeshShape.prototype.__class__ = btBvhTriangleMeshShape;
        btBvhTriangleMeshShape.__cache__ = {};
        Module["btBvhTriangleMeshShape"] = btBvhTriangleMeshShape;
        btBvhTriangleMeshShape.prototype["setLocalScaling"] = btBvhTriangleMeshShape.prototype.setLocalScaling = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btBvhTriangleMeshShape_setLocalScaling_1(self, arg0);
        };
        btBvhTriangleMeshShape.prototype["calculateLocalInertia"] = btBvhTriangleMeshShape.prototype.calculateLocalInertia = function(arg0, arg1) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          if (arg1 && typeof arg1 === "object")
            arg1 = arg1.ptr;
          _emscripten_bind_btBvhTriangleMeshShape_calculateLocalInertia_2(self, arg0, arg1);
        };
        btBvhTriangleMeshShape.prototype["__destroy__"] = btBvhTriangleMeshShape.prototype.__destroy__ = function() {
          var self = this.ptr;
          _emscripten_bind_btBvhTriangleMeshShape___destroy___0(self);
        };
        function btDbvtBroadphase() {
          this.ptr = _emscripten_bind_btDbvtBroadphase_btDbvtBroadphase_0();
          getCache(btDbvtBroadphase)[this.ptr] = this;
        }
        btDbvtBroadphase.prototype = Object.create(WrapperObject.prototype);
        btDbvtBroadphase.prototype.constructor = btDbvtBroadphase;
        btDbvtBroadphase.prototype.__class__ = btDbvtBroadphase;
        btDbvtBroadphase.__cache__ = {};
        Module["btDbvtBroadphase"] = btDbvtBroadphase;
        btDbvtBroadphase.prototype["__destroy__"] = btDbvtBroadphase.prototype.__destroy__ = function() {
          var self = this.ptr;
          _emscripten_bind_btDbvtBroadphase___destroy___0(self);
        };
        function VoidPtr() {
          throw "cannot construct a VoidPtr, no constructor in IDL";
        }
        VoidPtr.prototype = Object.create(WrapperObject.prototype);
        VoidPtr.prototype.constructor = VoidPtr;
        VoidPtr.prototype.__class__ = VoidPtr;
        VoidPtr.__cache__ = {};
        Module["VoidPtr"] = VoidPtr;
        VoidPtr.prototype["__destroy__"] = VoidPtr.prototype.__destroy__ = function() {
          var self = this.ptr;
          _emscripten_bind_VoidPtr___destroy___0(self);
        };
        function btSequentialImpulseConstraintSolver() {
          this.ptr = _emscripten_bind_btSequentialImpulseConstraintSolver_btSequentialImpulseConstraintSolver_0();
          getCache(btSequentialImpulseConstraintSolver)[this.ptr] = this;
        }
        btSequentialImpulseConstraintSolver.prototype = Object.create(WrapperObject.prototype);
        btSequentialImpulseConstraintSolver.prototype.constructor = btSequentialImpulseConstraintSolver;
        btSequentialImpulseConstraintSolver.prototype.__class__ = btSequentialImpulseConstraintSolver;
        btSequentialImpulseConstraintSolver.__cache__ = {};
        Module["btSequentialImpulseConstraintSolver"] = btSequentialImpulseConstraintSolver;
        btSequentialImpulseConstraintSolver.prototype["__destroy__"] = btSequentialImpulseConstraintSolver.prototype.__destroy__ = function() {
          var self = this.ptr;
          _emscripten_bind_btSequentialImpulseConstraintSolver___destroy___0(self);
        };
        function btDispatcherInfo() {
          throw "cannot construct a btDispatcherInfo, no constructor in IDL";
        }
        btDispatcherInfo.prototype = Object.create(WrapperObject.prototype);
        btDispatcherInfo.prototype.constructor = btDispatcherInfo;
        btDispatcherInfo.prototype.__class__ = btDispatcherInfo;
        btDispatcherInfo.__cache__ = {};
        Module["btDispatcherInfo"] = btDispatcherInfo;
        btDispatcherInfo.prototype["get_m_timeStep"] = btDispatcherInfo.prototype.get_m_timeStep = function() {
          var self = this.ptr;
          return _emscripten_bind_btDispatcherInfo_get_m_timeStep_0(self);
        };
        btDispatcherInfo.prototype["set_m_timeStep"] = btDispatcherInfo.prototype.set_m_timeStep = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btDispatcherInfo_set_m_timeStep_1(self, arg0);
        };
        btDispatcherInfo.prototype["get_m_stepCount"] = btDispatcherInfo.prototype.get_m_stepCount = function() {
          var self = this.ptr;
          return _emscripten_bind_btDispatcherInfo_get_m_stepCount_0(self);
        };
        btDispatcherInfo.prototype["set_m_stepCount"] = btDispatcherInfo.prototype.set_m_stepCount = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btDispatcherInfo_set_m_stepCount_1(self, arg0);
        };
        btDispatcherInfo.prototype["get_m_dispatchFunc"] = btDispatcherInfo.prototype.get_m_dispatchFunc = function() {
          var self = this.ptr;
          return _emscripten_bind_btDispatcherInfo_get_m_dispatchFunc_0(self);
        };
        btDispatcherInfo.prototype["set_m_dispatchFunc"] = btDispatcherInfo.prototype.set_m_dispatchFunc = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btDispatcherInfo_set_m_dispatchFunc_1(self, arg0);
        };
        btDispatcherInfo.prototype["get_m_timeOfImpact"] = btDispatcherInfo.prototype.get_m_timeOfImpact = function() {
          var self = this.ptr;
          return _emscripten_bind_btDispatcherInfo_get_m_timeOfImpact_0(self);
        };
        btDispatcherInfo.prototype["set_m_timeOfImpact"] = btDispatcherInfo.prototype.set_m_timeOfImpact = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btDispatcherInfo_set_m_timeOfImpact_1(self, arg0);
        };
        btDispatcherInfo.prototype["get_m_useContinuous"] = btDispatcherInfo.prototype.get_m_useContinuous = function() {
          var self = this.ptr;
          return !!_emscripten_bind_btDispatcherInfo_get_m_useContinuous_0(self);
        };
        btDispatcherInfo.prototype["set_m_useContinuous"] = btDispatcherInfo.prototype.set_m_useContinuous = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btDispatcherInfo_set_m_useContinuous_1(self, arg0);
        };
        btDispatcherInfo.prototype["get_m_enableSatConvex"] = btDispatcherInfo.prototype.get_m_enableSatConvex = function() {
          var self = this.ptr;
          return !!_emscripten_bind_btDispatcherInfo_get_m_enableSatConvex_0(self);
        };
        btDispatcherInfo.prototype["set_m_enableSatConvex"] = btDispatcherInfo.prototype.set_m_enableSatConvex = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btDispatcherInfo_set_m_enableSatConvex_1(self, arg0);
        };
        btDispatcherInfo.prototype["get_m_enableSPU"] = btDispatcherInfo.prototype.get_m_enableSPU = function() {
          var self = this.ptr;
          return !!_emscripten_bind_btDispatcherInfo_get_m_enableSPU_0(self);
        };
        btDispatcherInfo.prototype["set_m_enableSPU"] = btDispatcherInfo.prototype.set_m_enableSPU = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btDispatcherInfo_set_m_enableSPU_1(self, arg0);
        };
        btDispatcherInfo.prototype["get_m_useEpa"] = btDispatcherInfo.prototype.get_m_useEpa = function() {
          var self = this.ptr;
          return !!_emscripten_bind_btDispatcherInfo_get_m_useEpa_0(self);
        };
        btDispatcherInfo.prototype["set_m_useEpa"] = btDispatcherInfo.prototype.set_m_useEpa = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btDispatcherInfo_set_m_useEpa_1(self, arg0);
        };
        btDispatcherInfo.prototype["get_m_allowedCcdPenetration"] = btDispatcherInfo.prototype.get_m_allowedCcdPenetration = function() {
          var self = this.ptr;
          return _emscripten_bind_btDispatcherInfo_get_m_allowedCcdPenetration_0(self);
        };
        btDispatcherInfo.prototype["set_m_allowedCcdPenetration"] = btDispatcherInfo.prototype.set_m_allowedCcdPenetration = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btDispatcherInfo_set_m_allowedCcdPenetration_1(self, arg0);
        };
        btDispatcherInfo.prototype["get_m_useConvexConservativeDistanceUtil"] = btDispatcherInfo.prototype.get_m_useConvexConservativeDistanceUtil = function() {
          var self = this.ptr;
          return !!_emscripten_bind_btDispatcherInfo_get_m_useConvexConservativeDistanceUtil_0(self);
        };
        btDispatcherInfo.prototype["set_m_useConvexConservativeDistanceUtil"] = btDispatcherInfo.prototype.set_m_useConvexConservativeDistanceUtil = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btDispatcherInfo_set_m_useConvexConservativeDistanceUtil_1(self, arg0);
        };
        btDispatcherInfo.prototype["get_m_convexConservativeDistanceThreshold"] = btDispatcherInfo.prototype.get_m_convexConservativeDistanceThreshold = function() {
          var self = this.ptr;
          return _emscripten_bind_btDispatcherInfo_get_m_convexConservativeDistanceThreshold_0(self);
        };
        btDispatcherInfo.prototype["set_m_convexConservativeDistanceThreshold"] = btDispatcherInfo.prototype.set_m_convexConservativeDistanceThreshold = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btDispatcherInfo_set_m_convexConservativeDistanceThreshold_1(self, arg0);
        };
        btDispatcherInfo.prototype["__destroy__"] = btDispatcherInfo.prototype.__destroy__ = function() {
          var self = this.ptr;
          _emscripten_bind_btDispatcherInfo___destroy___0(self);
        };
        function btCollisionConfiguration() {
          throw "cannot construct a btCollisionConfiguration, no constructor in IDL";
        }
        btCollisionConfiguration.prototype = Object.create(WrapperObject.prototype);
        btCollisionConfiguration.prototype.constructor = btCollisionConfiguration;
        btCollisionConfiguration.prototype.__class__ = btCollisionConfiguration;
        btCollisionConfiguration.__cache__ = {};
        Module["btCollisionConfiguration"] = btCollisionConfiguration;
        btCollisionConfiguration.prototype["__destroy__"] = btCollisionConfiguration.prototype.__destroy__ = function() {
          var self = this.ptr;
          _emscripten_bind_btCollisionConfiguration___destroy___0(self);
        };
        function btAxisSweep3(arg0, arg1, arg2, arg3, arg4) {
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          if (arg1 && typeof arg1 === "object")
            arg1 = arg1.ptr;
          if (arg2 && typeof arg2 === "object")
            arg2 = arg2.ptr;
          if (arg3 && typeof arg3 === "object")
            arg3 = arg3.ptr;
          if (arg4 && typeof arg4 === "object")
            arg4 = arg4.ptr;
          if (arg2 === void 0) {
            this.ptr = _emscripten_bind_btAxisSweep3_btAxisSweep3_2(arg0, arg1);
            getCache(btAxisSweep3)[this.ptr] = this;
            return;
          }
          if (arg3 === void 0) {
            this.ptr = _emscripten_bind_btAxisSweep3_btAxisSweep3_3(arg0, arg1, arg2);
            getCache(btAxisSweep3)[this.ptr] = this;
            return;
          }
          if (arg4 === void 0) {
            this.ptr = _emscripten_bind_btAxisSweep3_btAxisSweep3_4(arg0, arg1, arg2, arg3);
            getCache(btAxisSweep3)[this.ptr] = this;
            return;
          }
          this.ptr = _emscripten_bind_btAxisSweep3_btAxisSweep3_5(arg0, arg1, arg2, arg3, arg4);
          getCache(btAxisSweep3)[this.ptr] = this;
        }
        btAxisSweep3.prototype = Object.create(WrapperObject.prototype);
        btAxisSweep3.prototype.constructor = btAxisSweep3;
        btAxisSweep3.prototype.__class__ = btAxisSweep3;
        btAxisSweep3.__cache__ = {};
        Module["btAxisSweep3"] = btAxisSweep3;
        btAxisSweep3.prototype["__destroy__"] = btAxisSweep3.prototype.__destroy__ = function() {
          var self = this.ptr;
          _emscripten_bind_btAxisSweep3___destroy___0(self);
        };
        function btPairCachingGhostObject() {
          this.ptr = _emscripten_bind_btPairCachingGhostObject_btPairCachingGhostObject_0();
          getCache(btPairCachingGhostObject)[this.ptr] = this;
        }
        btPairCachingGhostObject.prototype = Object.create(btGhostObject.prototype);
        btPairCachingGhostObject.prototype.constructor = btPairCachingGhostObject;
        btPairCachingGhostObject.prototype.__class__ = btPairCachingGhostObject;
        btPairCachingGhostObject.__cache__ = {};
        Module["btPairCachingGhostObject"] = btPairCachingGhostObject;
        btPairCachingGhostObject.prototype["setAnisotropicFriction"] = btPairCachingGhostObject.prototype.setAnisotropicFriction = function(arg0, arg1) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          if (arg1 && typeof arg1 === "object")
            arg1 = arg1.ptr;
          _emscripten_bind_btPairCachingGhostObject_setAnisotropicFriction_2(self, arg0, arg1);
        };
        btPairCachingGhostObject.prototype["getCollisionShape"] = btPairCachingGhostObject.prototype.getCollisionShape = function() {
          var self = this.ptr;
          return wrapPointer(_emscripten_bind_btPairCachingGhostObject_getCollisionShape_0(self), btCollisionShape);
        };
        btPairCachingGhostObject.prototype["setContactProcessingThreshold"] = btPairCachingGhostObject.prototype.setContactProcessingThreshold = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btPairCachingGhostObject_setContactProcessingThreshold_1(self, arg0);
        };
        btPairCachingGhostObject.prototype["setActivationState"] = btPairCachingGhostObject.prototype.setActivationState = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btPairCachingGhostObject_setActivationState_1(self, arg0);
        };
        btPairCachingGhostObject.prototype["forceActivationState"] = btPairCachingGhostObject.prototype.forceActivationState = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btPairCachingGhostObject_forceActivationState_1(self, arg0);
        };
        btPairCachingGhostObject.prototype["activate"] = btPairCachingGhostObject.prototype.activate = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          if (arg0 === void 0) {
            _emscripten_bind_btPairCachingGhostObject_activate_0(self);
            return;
          }
          _emscripten_bind_btPairCachingGhostObject_activate_1(self, arg0);
        };
        btPairCachingGhostObject.prototype["isActive"] = btPairCachingGhostObject.prototype.isActive = function() {
          var self = this.ptr;
          return !!_emscripten_bind_btPairCachingGhostObject_isActive_0(self);
        };
        btPairCachingGhostObject.prototype["isKinematicObject"] = btPairCachingGhostObject.prototype.isKinematicObject = function() {
          var self = this.ptr;
          return !!_emscripten_bind_btPairCachingGhostObject_isKinematicObject_0(self);
        };
        btPairCachingGhostObject.prototype["setRestitution"] = btPairCachingGhostObject.prototype.setRestitution = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btPairCachingGhostObject_setRestitution_1(self, arg0);
        };
        btPairCachingGhostObject.prototype["setFriction"] = btPairCachingGhostObject.prototype.setFriction = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btPairCachingGhostObject_setFriction_1(self, arg0);
        };
        btPairCachingGhostObject.prototype["setRollingFriction"] = btPairCachingGhostObject.prototype.setRollingFriction = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btPairCachingGhostObject_setRollingFriction_1(self, arg0);
        };
        btPairCachingGhostObject.prototype["getWorldTransform"] = btPairCachingGhostObject.prototype.getWorldTransform = function() {
          var self = this.ptr;
          return wrapPointer(_emscripten_bind_btPairCachingGhostObject_getWorldTransform_0(self), btTransform);
        };
        btPairCachingGhostObject.prototype["getCollisionFlags"] = btPairCachingGhostObject.prototype.getCollisionFlags = function() {
          var self = this.ptr;
          return _emscripten_bind_btPairCachingGhostObject_getCollisionFlags_0(self);
        };
        btPairCachingGhostObject.prototype["setCollisionFlags"] = btPairCachingGhostObject.prototype.setCollisionFlags = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btPairCachingGhostObject_setCollisionFlags_1(self, arg0);
        };
        btPairCachingGhostObject.prototype["setWorldTransform"] = btPairCachingGhostObject.prototype.setWorldTransform = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btPairCachingGhostObject_setWorldTransform_1(self, arg0);
        };
        btPairCachingGhostObject.prototype["setCollisionShape"] = btPairCachingGhostObject.prototype.setCollisionShape = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btPairCachingGhostObject_setCollisionShape_1(self, arg0);
        };
        btPairCachingGhostObject.prototype["setCcdMotionThreshold"] = btPairCachingGhostObject.prototype.setCcdMotionThreshold = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btPairCachingGhostObject_setCcdMotionThreshold_1(self, arg0);
        };
        btPairCachingGhostObject.prototype["setCcdSweptSphereRadius"] = btPairCachingGhostObject.prototype.setCcdSweptSphereRadius = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btPairCachingGhostObject_setCcdSweptSphereRadius_1(self, arg0);
        };
        btPairCachingGhostObject.prototype["getNumOverlappingObjects"] = btPairCachingGhostObject.prototype.getNumOverlappingObjects = function() {
          var self = this.ptr;
          return _emscripten_bind_btPairCachingGhostObject_getNumOverlappingObjects_0(self);
        };
        btPairCachingGhostObject.prototype["getOverlappingObject"] = btPairCachingGhostObject.prototype.getOverlappingObject = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          return wrapPointer(_emscripten_bind_btPairCachingGhostObject_getOverlappingObject_1(self, arg0), btCollisionObject);
        };
        btPairCachingGhostObject.prototype["__destroy__"] = btPairCachingGhostObject.prototype.__destroy__ = function() {
          var self = this.ptr;
          _emscripten_bind_btPairCachingGhostObject___destroy___0(self);
        };
        function btRigidBodyConstructionInfo(arg0, arg1, arg2, arg3) {
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          if (arg1 && typeof arg1 === "object")
            arg1 = arg1.ptr;
          if (arg2 && typeof arg2 === "object")
            arg2 = arg2.ptr;
          if (arg3 && typeof arg3 === "object")
            arg3 = arg3.ptr;
          if (arg3 === void 0) {
            this.ptr = _emscripten_bind_btRigidBodyConstructionInfo_btRigidBodyConstructionInfo_3(arg0, arg1, arg2);
            getCache(btRigidBodyConstructionInfo)[this.ptr] = this;
            return;
          }
          this.ptr = _emscripten_bind_btRigidBodyConstructionInfo_btRigidBodyConstructionInfo_4(arg0, arg1, arg2, arg3);
          getCache(btRigidBodyConstructionInfo)[this.ptr] = this;
        }
        btRigidBodyConstructionInfo.prototype = Object.create(WrapperObject.prototype);
        btRigidBodyConstructionInfo.prototype.constructor = btRigidBodyConstructionInfo;
        btRigidBodyConstructionInfo.prototype.__class__ = btRigidBodyConstructionInfo;
        btRigidBodyConstructionInfo.__cache__ = {};
        Module["btRigidBodyConstructionInfo"] = btRigidBodyConstructionInfo;
        btRigidBodyConstructionInfo.prototype["get_m_linearDamping"] = btRigidBodyConstructionInfo.prototype.get_m_linearDamping = function() {
          var self = this.ptr;
          return _emscripten_bind_btRigidBodyConstructionInfo_get_m_linearDamping_0(self);
        };
        btRigidBodyConstructionInfo.prototype["set_m_linearDamping"] = btRigidBodyConstructionInfo.prototype.set_m_linearDamping = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btRigidBodyConstructionInfo_set_m_linearDamping_1(self, arg0);
        };
        btRigidBodyConstructionInfo.prototype["get_m_angularDamping"] = btRigidBodyConstructionInfo.prototype.get_m_angularDamping = function() {
          var self = this.ptr;
          return _emscripten_bind_btRigidBodyConstructionInfo_get_m_angularDamping_0(self);
        };
        btRigidBodyConstructionInfo.prototype["set_m_angularDamping"] = btRigidBodyConstructionInfo.prototype.set_m_angularDamping = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btRigidBodyConstructionInfo_set_m_angularDamping_1(self, arg0);
        };
        btRigidBodyConstructionInfo.prototype["get_m_friction"] = btRigidBodyConstructionInfo.prototype.get_m_friction = function() {
          var self = this.ptr;
          return _emscripten_bind_btRigidBodyConstructionInfo_get_m_friction_0(self);
        };
        btRigidBodyConstructionInfo.prototype["set_m_friction"] = btRigidBodyConstructionInfo.prototype.set_m_friction = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btRigidBodyConstructionInfo_set_m_friction_1(self, arg0);
        };
        btRigidBodyConstructionInfo.prototype["get_m_rollingFriction"] = btRigidBodyConstructionInfo.prototype.get_m_rollingFriction = function() {
          var self = this.ptr;
          return _emscripten_bind_btRigidBodyConstructionInfo_get_m_rollingFriction_0(self);
        };
        btRigidBodyConstructionInfo.prototype["set_m_rollingFriction"] = btRigidBodyConstructionInfo.prototype.set_m_rollingFriction = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btRigidBodyConstructionInfo_set_m_rollingFriction_1(self, arg0);
        };
        btRigidBodyConstructionInfo.prototype["get_m_restitution"] = btRigidBodyConstructionInfo.prototype.get_m_restitution = function() {
          var self = this.ptr;
          return _emscripten_bind_btRigidBodyConstructionInfo_get_m_restitution_0(self);
        };
        btRigidBodyConstructionInfo.prototype["set_m_restitution"] = btRigidBodyConstructionInfo.prototype.set_m_restitution = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btRigidBodyConstructionInfo_set_m_restitution_1(self, arg0);
        };
        btRigidBodyConstructionInfo.prototype["get_m_linearSleepingThreshold"] = btRigidBodyConstructionInfo.prototype.get_m_linearSleepingThreshold = function() {
          var self = this.ptr;
          return _emscripten_bind_btRigidBodyConstructionInfo_get_m_linearSleepingThreshold_0(self);
        };
        btRigidBodyConstructionInfo.prototype["set_m_linearSleepingThreshold"] = btRigidBodyConstructionInfo.prototype.set_m_linearSleepingThreshold = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btRigidBodyConstructionInfo_set_m_linearSleepingThreshold_1(self, arg0);
        };
        btRigidBodyConstructionInfo.prototype["get_m_angularSleepingThreshold"] = btRigidBodyConstructionInfo.prototype.get_m_angularSleepingThreshold = function() {
          var self = this.ptr;
          return _emscripten_bind_btRigidBodyConstructionInfo_get_m_angularSleepingThreshold_0(self);
        };
        btRigidBodyConstructionInfo.prototype["set_m_angularSleepingThreshold"] = btRigidBodyConstructionInfo.prototype.set_m_angularSleepingThreshold = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btRigidBodyConstructionInfo_set_m_angularSleepingThreshold_1(self, arg0);
        };
        btRigidBodyConstructionInfo.prototype["get_m_additionalDamping"] = btRigidBodyConstructionInfo.prototype.get_m_additionalDamping = function() {
          var self = this.ptr;
          return !!_emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalDamping_0(self);
        };
        btRigidBodyConstructionInfo.prototype["set_m_additionalDamping"] = btRigidBodyConstructionInfo.prototype.set_m_additionalDamping = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalDamping_1(self, arg0);
        };
        btRigidBodyConstructionInfo.prototype["get_m_additionalDampingFactor"] = btRigidBodyConstructionInfo.prototype.get_m_additionalDampingFactor = function() {
          var self = this.ptr;
          return _emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalDampingFactor_0(self);
        };
        btRigidBodyConstructionInfo.prototype["set_m_additionalDampingFactor"] = btRigidBodyConstructionInfo.prototype.set_m_additionalDampingFactor = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalDampingFactor_1(self, arg0);
        };
        btRigidBodyConstructionInfo.prototype["get_m_additionalLinearDampingThresholdSqr"] = btRigidBodyConstructionInfo.prototype.get_m_additionalLinearDampingThresholdSqr = function() {
          var self = this.ptr;
          return _emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalLinearDampingThresholdSqr_0(self);
        };
        btRigidBodyConstructionInfo.prototype["set_m_additionalLinearDampingThresholdSqr"] = btRigidBodyConstructionInfo.prototype.set_m_additionalLinearDampingThresholdSqr = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalLinearDampingThresholdSqr_1(self, arg0);
        };
        btRigidBodyConstructionInfo.prototype["get_m_additionalAngularDampingThresholdSqr"] = btRigidBodyConstructionInfo.prototype.get_m_additionalAngularDampingThresholdSqr = function() {
          var self = this.ptr;
          return _emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalAngularDampingThresholdSqr_0(self);
        };
        btRigidBodyConstructionInfo.prototype["set_m_additionalAngularDampingThresholdSqr"] = btRigidBodyConstructionInfo.prototype.set_m_additionalAngularDampingThresholdSqr = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalAngularDampingThresholdSqr_1(self, arg0);
        };
        btRigidBodyConstructionInfo.prototype["get_m_additionalAngularDampingFactor"] = btRigidBodyConstructionInfo.prototype.get_m_additionalAngularDampingFactor = function() {
          var self = this.ptr;
          return _emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalAngularDampingFactor_0(self);
        };
        btRigidBodyConstructionInfo.prototype["set_m_additionalAngularDampingFactor"] = btRigidBodyConstructionInfo.prototype.set_m_additionalAngularDampingFactor = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalAngularDampingFactor_1(self, arg0);
        };
        btRigidBodyConstructionInfo.prototype["__destroy__"] = btRigidBodyConstructionInfo.prototype.__destroy__ = function() {
          var self = this.ptr;
          _emscripten_bind_btRigidBodyConstructionInfo___destroy___0(self);
        };
        function RaycastInfo() {
          throw "cannot construct a RaycastInfo, no constructor in IDL";
        }
        RaycastInfo.prototype = Object.create(WrapperObject.prototype);
        RaycastInfo.prototype.constructor = RaycastInfo;
        RaycastInfo.prototype.__class__ = RaycastInfo;
        RaycastInfo.__cache__ = {};
        Module["RaycastInfo"] = RaycastInfo;
        RaycastInfo.prototype["get_m_contactNormalWS"] = RaycastInfo.prototype.get_m_contactNormalWS = function() {
          var self = this.ptr;
          return wrapPointer(_emscripten_bind_RaycastInfo_get_m_contactNormalWS_0(self), btVector3);
        };
        RaycastInfo.prototype["set_m_contactNormalWS"] = RaycastInfo.prototype.set_m_contactNormalWS = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_RaycastInfo_set_m_contactNormalWS_1(self, arg0);
        };
        RaycastInfo.prototype["get_m_contactPointWS"] = RaycastInfo.prototype.get_m_contactPointWS = function() {
          var self = this.ptr;
          return wrapPointer(_emscripten_bind_RaycastInfo_get_m_contactPointWS_0(self), btVector3);
        };
        RaycastInfo.prototype["set_m_contactPointWS"] = RaycastInfo.prototype.set_m_contactPointWS = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_RaycastInfo_set_m_contactPointWS_1(self, arg0);
        };
        RaycastInfo.prototype["get_m_suspensionLength"] = RaycastInfo.prototype.get_m_suspensionLength = function() {
          var self = this.ptr;
          return _emscripten_bind_RaycastInfo_get_m_suspensionLength_0(self);
        };
        RaycastInfo.prototype["set_m_suspensionLength"] = RaycastInfo.prototype.set_m_suspensionLength = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_RaycastInfo_set_m_suspensionLength_1(self, arg0);
        };
        RaycastInfo.prototype["get_m_hardPointWS"] = RaycastInfo.prototype.get_m_hardPointWS = function() {
          var self = this.ptr;
          return wrapPointer(_emscripten_bind_RaycastInfo_get_m_hardPointWS_0(self), btVector3);
        };
        RaycastInfo.prototype["set_m_hardPointWS"] = RaycastInfo.prototype.set_m_hardPointWS = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_RaycastInfo_set_m_hardPointWS_1(self, arg0);
        };
        RaycastInfo.prototype["get_m_wheelDirectionWS"] = RaycastInfo.prototype.get_m_wheelDirectionWS = function() {
          var self = this.ptr;
          return wrapPointer(_emscripten_bind_RaycastInfo_get_m_wheelDirectionWS_0(self), btVector3);
        };
        RaycastInfo.prototype["set_m_wheelDirectionWS"] = RaycastInfo.prototype.set_m_wheelDirectionWS = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_RaycastInfo_set_m_wheelDirectionWS_1(self, arg0);
        };
        RaycastInfo.prototype["get_m_wheelAxleWS"] = RaycastInfo.prototype.get_m_wheelAxleWS = function() {
          var self = this.ptr;
          return wrapPointer(_emscripten_bind_RaycastInfo_get_m_wheelAxleWS_0(self), btVector3);
        };
        RaycastInfo.prototype["set_m_wheelAxleWS"] = RaycastInfo.prototype.set_m_wheelAxleWS = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_RaycastInfo_set_m_wheelAxleWS_1(self, arg0);
        };
        RaycastInfo.prototype["get_m_isInContact"] = RaycastInfo.prototype.get_m_isInContact = function() {
          var self = this.ptr;
          return !!_emscripten_bind_RaycastInfo_get_m_isInContact_0(self);
        };
        RaycastInfo.prototype["set_m_isInContact"] = RaycastInfo.prototype.set_m_isInContact = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_RaycastInfo_set_m_isInContact_1(self, arg0);
        };
        RaycastInfo.prototype["get_m_groundObject"] = RaycastInfo.prototype.get_m_groundObject = function() {
          var self = this.ptr;
          return _emscripten_bind_RaycastInfo_get_m_groundObject_0(self);
        };
        RaycastInfo.prototype["set_m_groundObject"] = RaycastInfo.prototype.set_m_groundObject = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_RaycastInfo_set_m_groundObject_1(self, arg0);
        };
        RaycastInfo.prototype["__destroy__"] = RaycastInfo.prototype.__destroy__ = function() {
          var self = this.ptr;
          _emscripten_bind_RaycastInfo___destroy___0(self);
        };
        function btManifoldPoint() {
          throw "cannot construct a btManifoldPoint, no constructor in IDL";
        }
        btManifoldPoint.prototype = Object.create(WrapperObject.prototype);
        btManifoldPoint.prototype.constructor = btManifoldPoint;
        btManifoldPoint.prototype.__class__ = btManifoldPoint;
        btManifoldPoint.__cache__ = {};
        Module["btManifoldPoint"] = btManifoldPoint;
        btManifoldPoint.prototype["getPositionWorldOnA"] = btManifoldPoint.prototype.getPositionWorldOnA = function() {
          var self = this.ptr;
          return wrapPointer(_emscripten_bind_btManifoldPoint_getPositionWorldOnA_0(self), btVector3);
        };
        btManifoldPoint.prototype["getPositionWorldOnB"] = btManifoldPoint.prototype.getPositionWorldOnB = function() {
          var self = this.ptr;
          return wrapPointer(_emscripten_bind_btManifoldPoint_getPositionWorldOnB_0(self), btVector3);
        };
        btManifoldPoint.prototype["getDistance"] = btManifoldPoint.prototype.getDistance = function() {
          var self = this.ptr;
          return _emscripten_bind_btManifoldPoint_getDistance_0(self);
        };
        btManifoldPoint.prototype["get_m_localPointA"] = btManifoldPoint.prototype.get_m_localPointA = function() {
          var self = this.ptr;
          return wrapPointer(_emscripten_bind_btManifoldPoint_get_m_localPointA_0(self), btVector3);
        };
        btManifoldPoint.prototype["set_m_localPointA"] = btManifoldPoint.prototype.set_m_localPointA = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btManifoldPoint_set_m_localPointA_1(self, arg0);
        };
        btManifoldPoint.prototype["get_m_localPointB"] = btManifoldPoint.prototype.get_m_localPointB = function() {
          var self = this.ptr;
          return wrapPointer(_emscripten_bind_btManifoldPoint_get_m_localPointB_0(self), btVector3);
        };
        btManifoldPoint.prototype["set_m_localPointB"] = btManifoldPoint.prototype.set_m_localPointB = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btManifoldPoint_set_m_localPointB_1(self, arg0);
        };
        btManifoldPoint.prototype["get_m_positionWorldOnB"] = btManifoldPoint.prototype.get_m_positionWorldOnB = function() {
          var self = this.ptr;
          return wrapPointer(_emscripten_bind_btManifoldPoint_get_m_positionWorldOnB_0(self), btVector3);
        };
        btManifoldPoint.prototype["set_m_positionWorldOnB"] = btManifoldPoint.prototype.set_m_positionWorldOnB = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btManifoldPoint_set_m_positionWorldOnB_1(self, arg0);
        };
        btManifoldPoint.prototype["get_m_positionWorldOnA"] = btManifoldPoint.prototype.get_m_positionWorldOnA = function() {
          var self = this.ptr;
          return wrapPointer(_emscripten_bind_btManifoldPoint_get_m_positionWorldOnA_0(self), btVector3);
        };
        btManifoldPoint.prototype["set_m_positionWorldOnA"] = btManifoldPoint.prototype.set_m_positionWorldOnA = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btManifoldPoint_set_m_positionWorldOnA_1(self, arg0);
        };
        btManifoldPoint.prototype["get_m_normalWorldOnB"] = btManifoldPoint.prototype.get_m_normalWorldOnB = function() {
          var self = this.ptr;
          return wrapPointer(_emscripten_bind_btManifoldPoint_get_m_normalWorldOnB_0(self), btVector3);
        };
        btManifoldPoint.prototype["set_m_normalWorldOnB"] = btManifoldPoint.prototype.set_m_normalWorldOnB = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btManifoldPoint_set_m_normalWorldOnB_1(self, arg0);
        };
        btManifoldPoint.prototype["__destroy__"] = btManifoldPoint.prototype.__destroy__ = function() {
          var self = this.ptr;
          _emscripten_bind_btManifoldPoint___destroy___0(self);
        };
        function btBroadphaseInterface() {
          throw "cannot construct a btBroadphaseInterface, no constructor in IDL";
        }
        btBroadphaseInterface.prototype = Object.create(WrapperObject.prototype);
        btBroadphaseInterface.prototype.constructor = btBroadphaseInterface;
        btBroadphaseInterface.prototype.__class__ = btBroadphaseInterface;
        btBroadphaseInterface.__cache__ = {};
        Module["btBroadphaseInterface"] = btBroadphaseInterface;
        btBroadphaseInterface.prototype["__destroy__"] = btBroadphaseInterface.prototype.__destroy__ = function() {
          var self = this.ptr;
          _emscripten_bind_btBroadphaseInterface___destroy___0(self);
        };
        function btDiscreteDynamicsWorld(arg0, arg1, arg2, arg3) {
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          if (arg1 && typeof arg1 === "object")
            arg1 = arg1.ptr;
          if (arg2 && typeof arg2 === "object")
            arg2 = arg2.ptr;
          if (arg3 && typeof arg3 === "object")
            arg3 = arg3.ptr;
          this.ptr = _emscripten_bind_btDiscreteDynamicsWorld_btDiscreteDynamicsWorld_4(arg0, arg1, arg2, arg3);
          getCache(btDiscreteDynamicsWorld)[this.ptr] = this;
        }
        btDiscreteDynamicsWorld.prototype = Object.create(btDynamicsWorld.prototype);
        btDiscreteDynamicsWorld.prototype.constructor = btDiscreteDynamicsWorld;
        btDiscreteDynamicsWorld.prototype.__class__ = btDiscreteDynamicsWorld;
        btDiscreteDynamicsWorld.__cache__ = {};
        Module["btDiscreteDynamicsWorld"] = btDiscreteDynamicsWorld;
        btDiscreteDynamicsWorld.prototype["setGravity"] = btDiscreteDynamicsWorld.prototype.setGravity = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btDiscreteDynamicsWorld_setGravity_1(self, arg0);
        };
        btDiscreteDynamicsWorld.prototype["getGravity"] = btDiscreteDynamicsWorld.prototype.getGravity = function() {
          var self = this.ptr;
          return wrapPointer(_emscripten_bind_btDiscreteDynamicsWorld_getGravity_0(self), btVector3);
        };
        btDiscreteDynamicsWorld.prototype["addRigidBody"] = btDiscreteDynamicsWorld.prototype.addRigidBody = function(arg0, arg1, arg2) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          if (arg1 && typeof arg1 === "object")
            arg1 = arg1.ptr;
          if (arg2 && typeof arg2 === "object")
            arg2 = arg2.ptr;
          if (arg1 === void 0) {
            _emscripten_bind_btDiscreteDynamicsWorld_addRigidBody_1(self, arg0);
            return;
          }
          if (arg2 === void 0) {
            _emscripten_bind_btDiscreteDynamicsWorld_addRigidBody_2(self, arg0, arg1);
            return;
          }
          _emscripten_bind_btDiscreteDynamicsWorld_addRigidBody_3(self, arg0, arg1, arg2);
        };
        btDiscreteDynamicsWorld.prototype["removeRigidBody"] = btDiscreteDynamicsWorld.prototype.removeRigidBody = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btDiscreteDynamicsWorld_removeRigidBody_1(self, arg0);
        };
        btDiscreteDynamicsWorld.prototype["addConstraint"] = btDiscreteDynamicsWorld.prototype.addConstraint = function(arg0, arg1) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          if (arg1 && typeof arg1 === "object")
            arg1 = arg1.ptr;
          if (arg1 === void 0) {
            _emscripten_bind_btDiscreteDynamicsWorld_addConstraint_1(self, arg0);
            return;
          }
          _emscripten_bind_btDiscreteDynamicsWorld_addConstraint_2(self, arg0, arg1);
        };
        btDiscreteDynamicsWorld.prototype["removeConstraint"] = btDiscreteDynamicsWorld.prototype.removeConstraint = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btDiscreteDynamicsWorld_removeConstraint_1(self, arg0);
        };
        btDiscreteDynamicsWorld.prototype["stepSimulation"] = btDiscreteDynamicsWorld.prototype.stepSimulation = function(arg0, arg1, arg2) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          if (arg1 && typeof arg1 === "object")
            arg1 = arg1.ptr;
          if (arg2 && typeof arg2 === "object")
            arg2 = arg2.ptr;
          if (arg1 === void 0) {
            return _emscripten_bind_btDiscreteDynamicsWorld_stepSimulation_1(self, arg0);
          }
          if (arg2 === void 0) {
            return _emscripten_bind_btDiscreteDynamicsWorld_stepSimulation_2(self, arg0, arg1);
          }
          return _emscripten_bind_btDiscreteDynamicsWorld_stepSimulation_3(self, arg0, arg1, arg2);
        };
        btDiscreteDynamicsWorld.prototype["getDispatcher"] = btDiscreteDynamicsWorld.prototype.getDispatcher = function() {
          var self = this.ptr;
          return wrapPointer(_emscripten_bind_btDiscreteDynamicsWorld_getDispatcher_0(self), btDispatcher);
        };
        btDiscreteDynamicsWorld.prototype["rayTest"] = btDiscreteDynamicsWorld.prototype.rayTest = function(arg0, arg1, arg2) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          if (arg1 && typeof arg1 === "object")
            arg1 = arg1.ptr;
          if (arg2 && typeof arg2 === "object")
            arg2 = arg2.ptr;
          _emscripten_bind_btDiscreteDynamicsWorld_rayTest_3(self, arg0, arg1, arg2);
        };
        btDiscreteDynamicsWorld.prototype["getPairCache"] = btDiscreteDynamicsWorld.prototype.getPairCache = function() {
          var self = this.ptr;
          return wrapPointer(_emscripten_bind_btDiscreteDynamicsWorld_getPairCache_0(self), btOverlappingPairCache);
        };
        btDiscreteDynamicsWorld.prototype["getDispatchInfo"] = btDiscreteDynamicsWorld.prototype.getDispatchInfo = function() {
          var self = this.ptr;
          return wrapPointer(_emscripten_bind_btDiscreteDynamicsWorld_getDispatchInfo_0(self), btDispatcherInfo);
        };
        btDiscreteDynamicsWorld.prototype["addCollisionObject"] = btDiscreteDynamicsWorld.prototype.addCollisionObject = function(arg0, arg1, arg2) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          if (arg1 && typeof arg1 === "object")
            arg1 = arg1.ptr;
          if (arg2 && typeof arg2 === "object")
            arg2 = arg2.ptr;
          if (arg1 === void 0) {
            _emscripten_bind_btDiscreteDynamicsWorld_addCollisionObject_1(self, arg0);
            return;
          }
          if (arg2 === void 0) {
            _emscripten_bind_btDiscreteDynamicsWorld_addCollisionObject_2(self, arg0, arg1);
            return;
          }
          _emscripten_bind_btDiscreteDynamicsWorld_addCollisionObject_3(self, arg0, arg1, arg2);
        };
        btDiscreteDynamicsWorld.prototype["getBroadphase"] = btDiscreteDynamicsWorld.prototype.getBroadphase = function() {
          var self = this.ptr;
          return wrapPointer(_emscripten_bind_btDiscreteDynamicsWorld_getBroadphase_0(self), btBroadphaseInterface);
        };
        btDiscreteDynamicsWorld.prototype["convexSweepTest"] = btDiscreteDynamicsWorld.prototype.convexSweepTest = function(arg0, arg1, arg2, arg3, arg4) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          if (arg1 && typeof arg1 === "object")
            arg1 = arg1.ptr;
          if (arg2 && typeof arg2 === "object")
            arg2 = arg2.ptr;
          if (arg3 && typeof arg3 === "object")
            arg3 = arg3.ptr;
          if (arg4 && typeof arg4 === "object")
            arg4 = arg4.ptr;
          _emscripten_bind_btDiscreteDynamicsWorld_convexSweepTest_5(self, arg0, arg1, arg2, arg3, arg4);
        };
        btDiscreteDynamicsWorld.prototype["contactPairTest"] = btDiscreteDynamicsWorld.prototype.contactPairTest = function(arg0, arg1, arg2) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          if (arg1 && typeof arg1 === "object")
            arg1 = arg1.ptr;
          if (arg2 && typeof arg2 === "object")
            arg2 = arg2.ptr;
          _emscripten_bind_btDiscreteDynamicsWorld_contactPairTest_3(self, arg0, arg1, arg2);
        };
        btDiscreteDynamicsWorld.prototype["contactTest"] = btDiscreteDynamicsWorld.prototype.contactTest = function(arg0, arg1) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          if (arg1 && typeof arg1 === "object")
            arg1 = arg1.ptr;
          _emscripten_bind_btDiscreteDynamicsWorld_contactTest_2(self, arg0, arg1);
        };
        btDiscreteDynamicsWorld.prototype["addAction"] = btDiscreteDynamicsWorld.prototype.addAction = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btDiscreteDynamicsWorld_addAction_1(self, arg0);
        };
        btDiscreteDynamicsWorld.prototype["removeAction"] = btDiscreteDynamicsWorld.prototype.removeAction = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btDiscreteDynamicsWorld_removeAction_1(self, arg0);
        };
        btDiscreteDynamicsWorld.prototype["getSolverInfo"] = btDiscreteDynamicsWorld.prototype.getSolverInfo = function() {
          var self = this.ptr;
          return wrapPointer(_emscripten_bind_btDiscreteDynamicsWorld_getSolverInfo_0(self), btContactSolverInfo);
        };
        btDiscreteDynamicsWorld.prototype["__destroy__"] = btDiscreteDynamicsWorld.prototype.__destroy__ = function() {
          var self = this.ptr;
          _emscripten_bind_btDiscreteDynamicsWorld___destroy___0(self);
        };
        function btConvexTriangleMeshShape(arg0, arg1) {
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          if (arg1 && typeof arg1 === "object")
            arg1 = arg1.ptr;
          if (arg1 === void 0) {
            this.ptr = _emscripten_bind_btConvexTriangleMeshShape_btConvexTriangleMeshShape_1(arg0);
            getCache(btConvexTriangleMeshShape)[this.ptr] = this;
            return;
          }
          this.ptr = _emscripten_bind_btConvexTriangleMeshShape_btConvexTriangleMeshShape_2(arg0, arg1);
          getCache(btConvexTriangleMeshShape)[this.ptr] = this;
        }
        btConvexTriangleMeshShape.prototype = Object.create(btConvexShape.prototype);
        btConvexTriangleMeshShape.prototype.constructor = btConvexTriangleMeshShape;
        btConvexTriangleMeshShape.prototype.__class__ = btConvexTriangleMeshShape;
        btConvexTriangleMeshShape.__cache__ = {};
        Module["btConvexTriangleMeshShape"] = btConvexTriangleMeshShape;
        btConvexTriangleMeshShape.prototype["setLocalScaling"] = btConvexTriangleMeshShape.prototype.setLocalScaling = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btConvexTriangleMeshShape_setLocalScaling_1(self, arg0);
        };
        btConvexTriangleMeshShape.prototype["calculateLocalInertia"] = btConvexTriangleMeshShape.prototype.calculateLocalInertia = function(arg0, arg1) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          if (arg1 && typeof arg1 === "object")
            arg1 = arg1.ptr;
          _emscripten_bind_btConvexTriangleMeshShape_calculateLocalInertia_2(self, arg0, arg1);
        };
        btConvexTriangleMeshShape.prototype["__destroy__"] = btConvexTriangleMeshShape.prototype.__destroy__ = function() {
          var self = this.ptr;
          _emscripten_bind_btConvexTriangleMeshShape___destroy___0(self);
        };
        function btPoint2PointConstraint(arg0, arg1, arg2, arg3) {
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          if (arg1 && typeof arg1 === "object")
            arg1 = arg1.ptr;
          if (arg2 && typeof arg2 === "object")
            arg2 = arg2.ptr;
          if (arg3 && typeof arg3 === "object")
            arg3 = arg3.ptr;
          if (arg2 === void 0) {
            this.ptr = _emscripten_bind_btPoint2PointConstraint_btPoint2PointConstraint_2(arg0, arg1);
            getCache(btPoint2PointConstraint)[this.ptr] = this;
            return;
          }
          if (arg3 === void 0) {
            this.ptr = _emscripten_bind_btPoint2PointConstraint_btPoint2PointConstraint_3(arg0, arg1, arg2);
            getCache(btPoint2PointConstraint)[this.ptr] = this;
            return;
          }
          this.ptr = _emscripten_bind_btPoint2PointConstraint_btPoint2PointConstraint_4(arg0, arg1, arg2, arg3);
          getCache(btPoint2PointConstraint)[this.ptr] = this;
        }
        btPoint2PointConstraint.prototype = Object.create(btTypedConstraint.prototype);
        btPoint2PointConstraint.prototype.constructor = btPoint2PointConstraint;
        btPoint2PointConstraint.prototype.__class__ = btPoint2PointConstraint;
        btPoint2PointConstraint.__cache__ = {};
        Module["btPoint2PointConstraint"] = btPoint2PointConstraint;
        btPoint2PointConstraint.prototype["setPivotA"] = btPoint2PointConstraint.prototype.setPivotA = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btPoint2PointConstraint_setPivotA_1(self, arg0);
        };
        btPoint2PointConstraint.prototype["setPivotB"] = btPoint2PointConstraint.prototype.setPivotB = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btPoint2PointConstraint_setPivotB_1(self, arg0);
        };
        btPoint2PointConstraint.prototype["getPivotInA"] = btPoint2PointConstraint.prototype.getPivotInA = function() {
          var self = this.ptr;
          return wrapPointer(_emscripten_bind_btPoint2PointConstraint_getPivotInA_0(self), btVector3);
        };
        btPoint2PointConstraint.prototype["getPivotInB"] = btPoint2PointConstraint.prototype.getPivotInB = function() {
          var self = this.ptr;
          return wrapPointer(_emscripten_bind_btPoint2PointConstraint_getPivotInB_0(self), btVector3);
        };
        btPoint2PointConstraint.prototype["enableFeedback"] = btPoint2PointConstraint.prototype.enableFeedback = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btPoint2PointConstraint_enableFeedback_1(self, arg0);
        };
        btPoint2PointConstraint.prototype["getBreakingImpulseThreshold"] = btPoint2PointConstraint.prototype.getBreakingImpulseThreshold = function() {
          var self = this.ptr;
          return _emscripten_bind_btPoint2PointConstraint_getBreakingImpulseThreshold_0(self);
        };
        btPoint2PointConstraint.prototype["setBreakingImpulseThreshold"] = btPoint2PointConstraint.prototype.setBreakingImpulseThreshold = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btPoint2PointConstraint_setBreakingImpulseThreshold_1(self, arg0);
        };
        btPoint2PointConstraint.prototype["get_m_setting"] = btPoint2PointConstraint.prototype.get_m_setting = function() {
          var self = this.ptr;
          return wrapPointer(_emscripten_bind_btPoint2PointConstraint_get_m_setting_0(self), btConstraintSetting);
        };
        btPoint2PointConstraint.prototype["set_m_setting"] = btPoint2PointConstraint.prototype.set_m_setting = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btPoint2PointConstraint_set_m_setting_1(self, arg0);
        };
        btPoint2PointConstraint.prototype["__destroy__"] = btPoint2PointConstraint.prototype.__destroy__ = function() {
          var self = this.ptr;
          _emscripten_bind_btPoint2PointConstraint___destroy___0(self);
        };
        function btSliderConstraint(arg0, arg1, arg2, arg3, arg4) {
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          if (arg1 && typeof arg1 === "object")
            arg1 = arg1.ptr;
          if (arg2 && typeof arg2 === "object")
            arg2 = arg2.ptr;
          if (arg3 && typeof arg3 === "object")
            arg3 = arg3.ptr;
          if (arg4 && typeof arg4 === "object")
            arg4 = arg4.ptr;
          if (arg3 === void 0) {
            this.ptr = _emscripten_bind_btSliderConstraint_btSliderConstraint_3(arg0, arg1, arg2);
            getCache(btSliderConstraint)[this.ptr] = this;
            return;
          }
          if (arg4 === void 0) {
            this.ptr = _emscripten_bind_btSliderConstraint_btSliderConstraint_4(arg0, arg1, arg2, arg3);
            getCache(btSliderConstraint)[this.ptr] = this;
            return;
          }
          this.ptr = _emscripten_bind_btSliderConstraint_btSliderConstraint_5(arg0, arg1, arg2, arg3, arg4);
          getCache(btSliderConstraint)[this.ptr] = this;
        }
        btSliderConstraint.prototype = Object.create(btTypedConstraint.prototype);
        btSliderConstraint.prototype.constructor = btSliderConstraint;
        btSliderConstraint.prototype.__class__ = btSliderConstraint;
        btSliderConstraint.__cache__ = {};
        Module["btSliderConstraint"] = btSliderConstraint;
        btSliderConstraint.prototype["setLowerLinLimit"] = btSliderConstraint.prototype.setLowerLinLimit = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btSliderConstraint_setLowerLinLimit_1(self, arg0);
        };
        btSliderConstraint.prototype["setUpperLinLimit"] = btSliderConstraint.prototype.setUpperLinLimit = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btSliderConstraint_setUpperLinLimit_1(self, arg0);
        };
        btSliderConstraint.prototype["setLowerAngLimit"] = btSliderConstraint.prototype.setLowerAngLimit = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btSliderConstraint_setLowerAngLimit_1(self, arg0);
        };
        btSliderConstraint.prototype["setUpperAngLimit"] = btSliderConstraint.prototype.setUpperAngLimit = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btSliderConstraint_setUpperAngLimit_1(self, arg0);
        };
        btSliderConstraint.prototype["enableFeedback"] = btSliderConstraint.prototype.enableFeedback = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btSliderConstraint_enableFeedback_1(self, arg0);
        };
        btSliderConstraint.prototype["getBreakingImpulseThreshold"] = btSliderConstraint.prototype.getBreakingImpulseThreshold = function() {
          var self = this.ptr;
          return _emscripten_bind_btSliderConstraint_getBreakingImpulseThreshold_0(self);
        };
        btSliderConstraint.prototype["setBreakingImpulseThreshold"] = btSliderConstraint.prototype.setBreakingImpulseThreshold = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btSliderConstraint_setBreakingImpulseThreshold_1(self, arg0);
        };
        btSliderConstraint.prototype["__destroy__"] = btSliderConstraint.prototype.__destroy__ = function() {
          var self = this.ptr;
          _emscripten_bind_btSliderConstraint___destroy___0(self);
        };
        function btConeTwistConstraint(arg0, arg1, arg2, arg3) {
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          if (arg1 && typeof arg1 === "object")
            arg1 = arg1.ptr;
          if (arg2 && typeof arg2 === "object")
            arg2 = arg2.ptr;
          if (arg3 && typeof arg3 === "object")
            arg3 = arg3.ptr;
          if (arg2 === void 0) {
            this.ptr = _emscripten_bind_btConeTwistConstraint_btConeTwistConstraint_2(arg0, arg1);
            getCache(btConeTwistConstraint)[this.ptr] = this;
            return;
          }
          if (arg3 === void 0) {
            this.ptr = _emscripten_bind_btConeTwistConstraint_btConeTwistConstraint_3(arg0, arg1, arg2);
            getCache(btConeTwistConstraint)[this.ptr] = this;
            return;
          }
          this.ptr = _emscripten_bind_btConeTwistConstraint_btConeTwistConstraint_4(arg0, arg1, arg2, arg3);
          getCache(btConeTwistConstraint)[this.ptr] = this;
        }
        btConeTwistConstraint.prototype = Object.create(btTypedConstraint.prototype);
        btConeTwistConstraint.prototype.constructor = btConeTwistConstraint;
        btConeTwistConstraint.prototype.__class__ = btConeTwistConstraint;
        btConeTwistConstraint.__cache__ = {};
        Module["btConeTwistConstraint"] = btConeTwistConstraint;
        btConeTwistConstraint.prototype["setLimit"] = btConeTwistConstraint.prototype.setLimit = function(arg0, arg1) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          if (arg1 && typeof arg1 === "object")
            arg1 = arg1.ptr;
          _emscripten_bind_btConeTwistConstraint_setLimit_2(self, arg0, arg1);
        };
        btConeTwistConstraint.prototype["setAngularOnly"] = btConeTwistConstraint.prototype.setAngularOnly = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btConeTwistConstraint_setAngularOnly_1(self, arg0);
        };
        btConeTwistConstraint.prototype["setDamping"] = btConeTwistConstraint.prototype.setDamping = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btConeTwistConstraint_setDamping_1(self, arg0);
        };
        btConeTwistConstraint.prototype["enableMotor"] = btConeTwistConstraint.prototype.enableMotor = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btConeTwistConstraint_enableMotor_1(self, arg0);
        };
        btConeTwistConstraint.prototype["setMaxMotorImpulse"] = btConeTwistConstraint.prototype.setMaxMotorImpulse = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btConeTwistConstraint_setMaxMotorImpulse_1(self, arg0);
        };
        btConeTwistConstraint.prototype["setMaxMotorImpulseNormalized"] = btConeTwistConstraint.prototype.setMaxMotorImpulseNormalized = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btConeTwistConstraint_setMaxMotorImpulseNormalized_1(self, arg0);
        };
        btConeTwistConstraint.prototype["setMotorTarget"] = btConeTwistConstraint.prototype.setMotorTarget = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btConeTwistConstraint_setMotorTarget_1(self, arg0);
        };
        btConeTwistConstraint.prototype["setMotorTargetInConstraintSpace"] = btConeTwistConstraint.prototype.setMotorTargetInConstraintSpace = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btConeTwistConstraint_setMotorTargetInConstraintSpace_1(self, arg0);
        };
        btConeTwistConstraint.prototype["enableFeedback"] = btConeTwistConstraint.prototype.enableFeedback = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btConeTwistConstraint_enableFeedback_1(self, arg0);
        };
        btConeTwistConstraint.prototype["getBreakingImpulseThreshold"] = btConeTwistConstraint.prototype.getBreakingImpulseThreshold = function() {
          var self = this.ptr;
          return _emscripten_bind_btConeTwistConstraint_getBreakingImpulseThreshold_0(self);
        };
        btConeTwistConstraint.prototype["setBreakingImpulseThreshold"] = btConeTwistConstraint.prototype.setBreakingImpulseThreshold = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btConeTwistConstraint_setBreakingImpulseThreshold_1(self, arg0);
        };
        btConeTwistConstraint.prototype["__destroy__"] = btConeTwistConstraint.prototype.__destroy__ = function() {
          var self = this.ptr;
          _emscripten_bind_btConeTwistConstraint___destroy___0(self);
        };
        function btDefaultCollisionConfiguration(arg0) {
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          if (arg0 === void 0) {
            this.ptr = _emscripten_bind_btDefaultCollisionConfiguration_btDefaultCollisionConfiguration_0();
            getCache(btDefaultCollisionConfiguration)[this.ptr] = this;
            return;
          }
          this.ptr = _emscripten_bind_btDefaultCollisionConfiguration_btDefaultCollisionConfiguration_1(arg0);
          getCache(btDefaultCollisionConfiguration)[this.ptr] = this;
        }
        btDefaultCollisionConfiguration.prototype = Object.create(WrapperObject.prototype);
        btDefaultCollisionConfiguration.prototype.constructor = btDefaultCollisionConfiguration;
        btDefaultCollisionConfiguration.prototype.__class__ = btDefaultCollisionConfiguration;
        btDefaultCollisionConfiguration.__cache__ = {};
        Module["btDefaultCollisionConfiguration"] = btDefaultCollisionConfiguration;
        btDefaultCollisionConfiguration.prototype["__destroy__"] = btDefaultCollisionConfiguration.prototype.__destroy__ = function() {
          var self = this.ptr;
          _emscripten_bind_btDefaultCollisionConfiguration___destroy___0(self);
        };
        function btConeShapeZ(arg0, arg1) {
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          if (arg1 && typeof arg1 === "object")
            arg1 = arg1.ptr;
          this.ptr = _emscripten_bind_btConeShapeZ_btConeShapeZ_2(arg0, arg1);
          getCache(btConeShapeZ)[this.ptr] = this;
        }
        btConeShapeZ.prototype = Object.create(btConeShape.prototype);
        btConeShapeZ.prototype.constructor = btConeShapeZ;
        btConeShapeZ.prototype.__class__ = btConeShapeZ;
        btConeShapeZ.__cache__ = {};
        Module["btConeShapeZ"] = btConeShapeZ;
        btConeShapeZ.prototype["setLocalScaling"] = btConeShapeZ.prototype.setLocalScaling = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btConeShapeZ_setLocalScaling_1(self, arg0);
        };
        btConeShapeZ.prototype["calculateLocalInertia"] = btConeShapeZ.prototype.calculateLocalInertia = function(arg0, arg1) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          if (arg1 && typeof arg1 === "object")
            arg1 = arg1.ptr;
          _emscripten_bind_btConeShapeZ_calculateLocalInertia_2(self, arg0, arg1);
        };
        btConeShapeZ.prototype["__destroy__"] = btConeShapeZ.prototype.__destroy__ = function() {
          var self = this.ptr;
          _emscripten_bind_btConeShapeZ___destroy___0(self);
        };
        function btConeShapeX(arg0, arg1) {
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          if (arg1 && typeof arg1 === "object")
            arg1 = arg1.ptr;
          this.ptr = _emscripten_bind_btConeShapeX_btConeShapeX_2(arg0, arg1);
          getCache(btConeShapeX)[this.ptr] = this;
        }
        btConeShapeX.prototype = Object.create(btConeShape.prototype);
        btConeShapeX.prototype.constructor = btConeShapeX;
        btConeShapeX.prototype.__class__ = btConeShapeX;
        btConeShapeX.__cache__ = {};
        Module["btConeShapeX"] = btConeShapeX;
        btConeShapeX.prototype["setLocalScaling"] = btConeShapeX.prototype.setLocalScaling = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btConeShapeX_setLocalScaling_1(self, arg0);
        };
        btConeShapeX.prototype["calculateLocalInertia"] = btConeShapeX.prototype.calculateLocalInertia = function(arg0, arg1) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          if (arg1 && typeof arg1 === "object")
            arg1 = arg1.ptr;
          _emscripten_bind_btConeShapeX_calculateLocalInertia_2(self, arg0, arg1);
        };
        btConeShapeX.prototype["__destroy__"] = btConeShapeX.prototype.__destroy__ = function() {
          var self = this.ptr;
          _emscripten_bind_btConeShapeX___destroy___0(self);
        };
        function btTriangleMesh(arg0, arg1) {
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          if (arg1 && typeof arg1 === "object")
            arg1 = arg1.ptr;
          if (arg0 === void 0) {
            this.ptr = _emscripten_bind_btTriangleMesh_btTriangleMesh_0();
            getCache(btTriangleMesh)[this.ptr] = this;
            return;
          }
          if (arg1 === void 0) {
            this.ptr = _emscripten_bind_btTriangleMesh_btTriangleMesh_1(arg0);
            getCache(btTriangleMesh)[this.ptr] = this;
            return;
          }
          this.ptr = _emscripten_bind_btTriangleMesh_btTriangleMesh_2(arg0, arg1);
          getCache(btTriangleMesh)[this.ptr] = this;
        }
        btTriangleMesh.prototype = Object.create(btStridingMeshInterface.prototype);
        btTriangleMesh.prototype.constructor = btTriangleMesh;
        btTriangleMesh.prototype.__class__ = btTriangleMesh;
        btTriangleMesh.__cache__ = {};
        Module["btTriangleMesh"] = btTriangleMesh;
        btTriangleMesh.prototype["addTriangle"] = btTriangleMesh.prototype.addTriangle = function(arg0, arg1, arg2, arg3) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          if (arg1 && typeof arg1 === "object")
            arg1 = arg1.ptr;
          if (arg2 && typeof arg2 === "object")
            arg2 = arg2.ptr;
          if (arg3 && typeof arg3 === "object")
            arg3 = arg3.ptr;
          if (arg3 === void 0) {
            _emscripten_bind_btTriangleMesh_addTriangle_3(self, arg0, arg1, arg2);
            return;
          }
          _emscripten_bind_btTriangleMesh_addTriangle_4(self, arg0, arg1, arg2, arg3);
        };
        btTriangleMesh.prototype["__destroy__"] = btTriangleMesh.prototype.__destroy__ = function() {
          var self = this.ptr;
          _emscripten_bind_btTriangleMesh___destroy___0(self);
        };
        function btConvexHullShape() {
          this.ptr = _emscripten_bind_btConvexHullShape_btConvexHullShape_0();
          getCache(btConvexHullShape)[this.ptr] = this;
        }
        btConvexHullShape.prototype = Object.create(btCollisionShape.prototype);
        btConvexHullShape.prototype.constructor = btConvexHullShape;
        btConvexHullShape.prototype.__class__ = btConvexHullShape;
        btConvexHullShape.__cache__ = {};
        Module["btConvexHullShape"] = btConvexHullShape;
        btConvexHullShape.prototype["addPoint"] = btConvexHullShape.prototype.addPoint = function(arg0, arg1) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          if (arg1 && typeof arg1 === "object")
            arg1 = arg1.ptr;
          if (arg1 === void 0) {
            _emscripten_bind_btConvexHullShape_addPoint_1(self, arg0);
            return;
          }
          _emscripten_bind_btConvexHullShape_addPoint_2(self, arg0, arg1);
        };
        btConvexHullShape.prototype["setMargin"] = btConvexHullShape.prototype.setMargin = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btConvexHullShape_setMargin_1(self, arg0);
        };
        btConvexHullShape.prototype["getMargin"] = btConvexHullShape.prototype.getMargin = function() {
          var self = this.ptr;
          return _emscripten_bind_btConvexHullShape_getMargin_0(self);
        };
        btConvexHullShape.prototype["setLocalScaling"] = btConvexHullShape.prototype.setLocalScaling = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btConvexHullShape_setLocalScaling_1(self, arg0);
        };
        btConvexHullShape.prototype["calculateLocalInertia"] = btConvexHullShape.prototype.calculateLocalInertia = function(arg0, arg1) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          if (arg1 && typeof arg1 === "object")
            arg1 = arg1.ptr;
          _emscripten_bind_btConvexHullShape_calculateLocalInertia_2(self, arg0, arg1);
        };
        btConvexHullShape.prototype["__destroy__"] = btConvexHullShape.prototype.__destroy__ = function() {
          var self = this.ptr;
          _emscripten_bind_btConvexHullShape___destroy___0(self);
        };
        function btPersistentManifold() {
          this.ptr = _emscripten_bind_btPersistentManifold_btPersistentManifold_0();
          getCache(btPersistentManifold)[this.ptr] = this;
        }
        btPersistentManifold.prototype = Object.create(WrapperObject.prototype);
        btPersistentManifold.prototype.constructor = btPersistentManifold;
        btPersistentManifold.prototype.__class__ = btPersistentManifold;
        btPersistentManifold.__cache__ = {};
        Module["btPersistentManifold"] = btPersistentManifold;
        btPersistentManifold.prototype["getBody0"] = btPersistentManifold.prototype.getBody0 = function() {
          var self = this.ptr;
          return wrapPointer(_emscripten_bind_btPersistentManifold_getBody0_0(self), btCollisionObject);
        };
        btPersistentManifold.prototype["getBody1"] = btPersistentManifold.prototype.getBody1 = function() {
          var self = this.ptr;
          return wrapPointer(_emscripten_bind_btPersistentManifold_getBody1_0(self), btCollisionObject);
        };
        btPersistentManifold.prototype["getNumContacts"] = btPersistentManifold.prototype.getNumContacts = function() {
          var self = this.ptr;
          return _emscripten_bind_btPersistentManifold_getNumContacts_0(self);
        };
        btPersistentManifold.prototype["getContactPoint"] = btPersistentManifold.prototype.getContactPoint = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          return wrapPointer(_emscripten_bind_btPersistentManifold_getContactPoint_1(self, arg0), btManifoldPoint);
        };
        btPersistentManifold.prototype["__destroy__"] = btPersistentManifold.prototype.__destroy__ = function() {
          var self = this.ptr;
          _emscripten_bind_btPersistentManifold___destroy___0(self);
        };
        function btBoxShape(arg0) {
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          this.ptr = _emscripten_bind_btBoxShape_btBoxShape_1(arg0);
          getCache(btBoxShape)[this.ptr] = this;
        }
        btBoxShape.prototype = Object.create(btCollisionShape.prototype);
        btBoxShape.prototype.constructor = btBoxShape;
        btBoxShape.prototype.__class__ = btBoxShape;
        btBoxShape.__cache__ = {};
        Module["btBoxShape"] = btBoxShape;
        btBoxShape.prototype["setMargin"] = btBoxShape.prototype.setMargin = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btBoxShape_setMargin_1(self, arg0);
        };
        btBoxShape.prototype["getMargin"] = btBoxShape.prototype.getMargin = function() {
          var self = this.ptr;
          return _emscripten_bind_btBoxShape_getMargin_0(self);
        };
        btBoxShape.prototype["setLocalScaling"] = btBoxShape.prototype.setLocalScaling = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btBoxShape_setLocalScaling_1(self, arg0);
        };
        btBoxShape.prototype["calculateLocalInertia"] = btBoxShape.prototype.calculateLocalInertia = function(arg0, arg1) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          if (arg1 && typeof arg1 === "object")
            arg1 = arg1.ptr;
          _emscripten_bind_btBoxShape_calculateLocalInertia_2(self, arg0, arg1);
        };
        btBoxShape.prototype["__destroy__"] = btBoxShape.prototype.__destroy__ = function() {
          var self = this.ptr;
          _emscripten_bind_btBoxShape___destroy___0(self);
        };
        function btCollisionDispatcher(arg0) {
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          this.ptr = _emscripten_bind_btCollisionDispatcher_btCollisionDispatcher_1(arg0);
          getCache(btCollisionDispatcher)[this.ptr] = this;
        }
        btCollisionDispatcher.prototype = Object.create(btDispatcher.prototype);
        btCollisionDispatcher.prototype.constructor = btCollisionDispatcher;
        btCollisionDispatcher.prototype.__class__ = btCollisionDispatcher;
        btCollisionDispatcher.__cache__ = {};
        Module["btCollisionDispatcher"] = btCollisionDispatcher;
        btCollisionDispatcher.prototype["getNumManifolds"] = btCollisionDispatcher.prototype.getNumManifolds = function() {
          var self = this.ptr;
          return _emscripten_bind_btCollisionDispatcher_getNumManifolds_0(self);
        };
        btCollisionDispatcher.prototype["getManifoldByIndexInternal"] = btCollisionDispatcher.prototype.getManifoldByIndexInternal = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          return wrapPointer(_emscripten_bind_btCollisionDispatcher_getManifoldByIndexInternal_1(self, arg0), btPersistentManifold);
        };
        btCollisionDispatcher.prototype["__destroy__"] = btCollisionDispatcher.prototype.__destroy__ = function() {
          var self = this.ptr;
          _emscripten_bind_btCollisionDispatcher___destroy___0(self);
        };
        function btVehicleTuning() {
          this.ptr = _emscripten_bind_btVehicleTuning_btVehicleTuning_0();
          getCache(btVehicleTuning)[this.ptr] = this;
        }
        btVehicleTuning.prototype = Object.create(WrapperObject.prototype);
        btVehicleTuning.prototype.constructor = btVehicleTuning;
        btVehicleTuning.prototype.__class__ = btVehicleTuning;
        btVehicleTuning.__cache__ = {};
        Module["btVehicleTuning"] = btVehicleTuning;
        btVehicleTuning.prototype["get_m_suspensionStiffness"] = btVehicleTuning.prototype.get_m_suspensionStiffness = function() {
          var self = this.ptr;
          return _emscripten_bind_btVehicleTuning_get_m_suspensionStiffness_0(self);
        };
        btVehicleTuning.prototype["set_m_suspensionStiffness"] = btVehicleTuning.prototype.set_m_suspensionStiffness = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btVehicleTuning_set_m_suspensionStiffness_1(self, arg0);
        };
        btVehicleTuning.prototype["get_m_suspensionCompression"] = btVehicleTuning.prototype.get_m_suspensionCompression = function() {
          var self = this.ptr;
          return _emscripten_bind_btVehicleTuning_get_m_suspensionCompression_0(self);
        };
        btVehicleTuning.prototype["set_m_suspensionCompression"] = btVehicleTuning.prototype.set_m_suspensionCompression = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btVehicleTuning_set_m_suspensionCompression_1(self, arg0);
        };
        btVehicleTuning.prototype["get_m_suspensionDamping"] = btVehicleTuning.prototype.get_m_suspensionDamping = function() {
          var self = this.ptr;
          return _emscripten_bind_btVehicleTuning_get_m_suspensionDamping_0(self);
        };
        btVehicleTuning.prototype["set_m_suspensionDamping"] = btVehicleTuning.prototype.set_m_suspensionDamping = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btVehicleTuning_set_m_suspensionDamping_1(self, arg0);
        };
        btVehicleTuning.prototype["get_m_maxSuspensionTravelCm"] = btVehicleTuning.prototype.get_m_maxSuspensionTravelCm = function() {
          var self = this.ptr;
          return _emscripten_bind_btVehicleTuning_get_m_maxSuspensionTravelCm_0(self);
        };
        btVehicleTuning.prototype["set_m_maxSuspensionTravelCm"] = btVehicleTuning.prototype.set_m_maxSuspensionTravelCm = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btVehicleTuning_set_m_maxSuspensionTravelCm_1(self, arg0);
        };
        btVehicleTuning.prototype["get_m_frictionSlip"] = btVehicleTuning.prototype.get_m_frictionSlip = function() {
          var self = this.ptr;
          return _emscripten_bind_btVehicleTuning_get_m_frictionSlip_0(self);
        };
        btVehicleTuning.prototype["set_m_frictionSlip"] = btVehicleTuning.prototype.set_m_frictionSlip = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btVehicleTuning_set_m_frictionSlip_1(self, arg0);
        };
        btVehicleTuning.prototype["get_m_maxSuspensionForce"] = btVehicleTuning.prototype.get_m_maxSuspensionForce = function() {
          var self = this.ptr;
          return _emscripten_bind_btVehicleTuning_get_m_maxSuspensionForce_0(self);
        };
        btVehicleTuning.prototype["set_m_maxSuspensionForce"] = btVehicleTuning.prototype.set_m_maxSuspensionForce = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btVehicleTuning_set_m_maxSuspensionForce_1(self, arg0);
        };
        function btCompoundShape(arg0) {
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          if (arg0 === void 0) {
            this.ptr = _emscripten_bind_btCompoundShape_btCompoundShape_0();
            getCache(btCompoundShape)[this.ptr] = this;
            return;
          }
          this.ptr = _emscripten_bind_btCompoundShape_btCompoundShape_1(arg0);
          getCache(btCompoundShape)[this.ptr] = this;
        }
        btCompoundShape.prototype = Object.create(btCollisionShape.prototype);
        btCompoundShape.prototype.constructor = btCompoundShape;
        btCompoundShape.prototype.__class__ = btCompoundShape;
        btCompoundShape.__cache__ = {};
        Module["btCompoundShape"] = btCompoundShape;
        btCompoundShape.prototype["addChildShape"] = btCompoundShape.prototype.addChildShape = function(arg0, arg1) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          if (arg1 && typeof arg1 === "object")
            arg1 = arg1.ptr;
          _emscripten_bind_btCompoundShape_addChildShape_2(self, arg0, arg1);
        };
        btCompoundShape.prototype["removeChildShapeByIndex"] = btCompoundShape.prototype.removeChildShapeByIndex = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btCompoundShape_removeChildShapeByIndex_1(self, arg0);
        };
        btCompoundShape.prototype["getNumChildShapes"] = btCompoundShape.prototype.getNumChildShapes = function() {
          var self = this.ptr;
          return _emscripten_bind_btCompoundShape_getNumChildShapes_0(self);
        };
        btCompoundShape.prototype["getChildShape"] = btCompoundShape.prototype.getChildShape = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          return wrapPointer(_emscripten_bind_btCompoundShape_getChildShape_1(self, arg0), btCollisionShape);
        };
        btCompoundShape.prototype["setMargin"] = btCompoundShape.prototype.setMargin = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btCompoundShape_setMargin_1(self, arg0);
        };
        btCompoundShape.prototype["getMargin"] = btCompoundShape.prototype.getMargin = function() {
          var self = this.ptr;
          return _emscripten_bind_btCompoundShape_getMargin_0(self);
        };
        btCompoundShape.prototype["setLocalScaling"] = btCompoundShape.prototype.setLocalScaling = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btCompoundShape_setLocalScaling_1(self, arg0);
        };
        btCompoundShape.prototype["calculateLocalInertia"] = btCompoundShape.prototype.calculateLocalInertia = function(arg0, arg1) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          if (arg1 && typeof arg1 === "object")
            arg1 = arg1.ptr;
          _emscripten_bind_btCompoundShape_calculateLocalInertia_2(self, arg0, arg1);
        };
        btCompoundShape.prototype["__destroy__"] = btCompoundShape.prototype.__destroy__ = function() {
          var self = this.ptr;
          _emscripten_bind_btCompoundShape___destroy___0(self);
        };
        function btCollisionObjectWrapper() {
          throw "cannot construct a btCollisionObjectWrapper, no constructor in IDL";
        }
        btCollisionObjectWrapper.prototype = Object.create(WrapperObject.prototype);
        btCollisionObjectWrapper.prototype.constructor = btCollisionObjectWrapper;
        btCollisionObjectWrapper.prototype.__class__ = btCollisionObjectWrapper;
        btCollisionObjectWrapper.__cache__ = {};
        Module["btCollisionObjectWrapper"] = btCollisionObjectWrapper;
        function ClosestConvexResultCallback(arg0, arg1) {
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          if (arg1 && typeof arg1 === "object")
            arg1 = arg1.ptr;
          this.ptr = _emscripten_bind_ClosestConvexResultCallback_ClosestConvexResultCallback_2(arg0, arg1);
          getCache(ClosestConvexResultCallback)[this.ptr] = this;
        }
        ClosestConvexResultCallback.prototype = Object.create(ConvexResultCallback.prototype);
        ClosestConvexResultCallback.prototype.constructor = ClosestConvexResultCallback;
        ClosestConvexResultCallback.prototype.__class__ = ClosestConvexResultCallback;
        ClosestConvexResultCallback.__cache__ = {};
        Module["ClosestConvexResultCallback"] = ClosestConvexResultCallback;
        ClosestConvexResultCallback.prototype["hasHit"] = ClosestConvexResultCallback.prototype.hasHit = function() {
          var self = this.ptr;
          return !!_emscripten_bind_ClosestConvexResultCallback_hasHit_0(self);
        };
        ClosestConvexResultCallback.prototype["get_m_convexFromWorld"] = ClosestConvexResultCallback.prototype.get_m_convexFromWorld = function() {
          var self = this.ptr;
          return wrapPointer(_emscripten_bind_ClosestConvexResultCallback_get_m_convexFromWorld_0(self), btVector3);
        };
        ClosestConvexResultCallback.prototype["set_m_convexFromWorld"] = ClosestConvexResultCallback.prototype.set_m_convexFromWorld = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_ClosestConvexResultCallback_set_m_convexFromWorld_1(self, arg0);
        };
        ClosestConvexResultCallback.prototype["get_m_convexToWorld"] = ClosestConvexResultCallback.prototype.get_m_convexToWorld = function() {
          var self = this.ptr;
          return wrapPointer(_emscripten_bind_ClosestConvexResultCallback_get_m_convexToWorld_0(self), btVector3);
        };
        ClosestConvexResultCallback.prototype["set_m_convexToWorld"] = ClosestConvexResultCallback.prototype.set_m_convexToWorld = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_ClosestConvexResultCallback_set_m_convexToWorld_1(self, arg0);
        };
        ClosestConvexResultCallback.prototype["get_m_hitNormalWorld"] = ClosestConvexResultCallback.prototype.get_m_hitNormalWorld = function() {
          var self = this.ptr;
          return wrapPointer(_emscripten_bind_ClosestConvexResultCallback_get_m_hitNormalWorld_0(self), btVector3);
        };
        ClosestConvexResultCallback.prototype["set_m_hitNormalWorld"] = ClosestConvexResultCallback.prototype.set_m_hitNormalWorld = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_ClosestConvexResultCallback_set_m_hitNormalWorld_1(self, arg0);
        };
        ClosestConvexResultCallback.prototype["get_m_hitPointWorld"] = ClosestConvexResultCallback.prototype.get_m_hitPointWorld = function() {
          var self = this.ptr;
          return wrapPointer(_emscripten_bind_ClosestConvexResultCallback_get_m_hitPointWorld_0(self), btVector3);
        };
        ClosestConvexResultCallback.prototype["set_m_hitPointWorld"] = ClosestConvexResultCallback.prototype.set_m_hitPointWorld = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_ClosestConvexResultCallback_set_m_hitPointWorld_1(self, arg0);
        };
        ClosestConvexResultCallback.prototype["get_m_collisionFilterGroup"] = ClosestConvexResultCallback.prototype.get_m_collisionFilterGroup = function() {
          var self = this.ptr;
          return _emscripten_bind_ClosestConvexResultCallback_get_m_collisionFilterGroup_0(self);
        };
        ClosestConvexResultCallback.prototype["set_m_collisionFilterGroup"] = ClosestConvexResultCallback.prototype.set_m_collisionFilterGroup = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_ClosestConvexResultCallback_set_m_collisionFilterGroup_1(self, arg0);
        };
        ClosestConvexResultCallback.prototype["get_m_collisionFilterMask"] = ClosestConvexResultCallback.prototype.get_m_collisionFilterMask = function() {
          var self = this.ptr;
          return _emscripten_bind_ClosestConvexResultCallback_get_m_collisionFilterMask_0(self);
        };
        ClosestConvexResultCallback.prototype["set_m_collisionFilterMask"] = ClosestConvexResultCallback.prototype.set_m_collisionFilterMask = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_ClosestConvexResultCallback_set_m_collisionFilterMask_1(self, arg0);
        };
        ClosestConvexResultCallback.prototype["get_m_closestHitFraction"] = ClosestConvexResultCallback.prototype.get_m_closestHitFraction = function() {
          var self = this.ptr;
          return _emscripten_bind_ClosestConvexResultCallback_get_m_closestHitFraction_0(self);
        };
        ClosestConvexResultCallback.prototype["set_m_closestHitFraction"] = ClosestConvexResultCallback.prototype.set_m_closestHitFraction = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_ClosestConvexResultCallback_set_m_closestHitFraction_1(self, arg0);
        };
        ClosestConvexResultCallback.prototype["__destroy__"] = ClosestConvexResultCallback.prototype.__destroy__ = function() {
          var self = this.ptr;
          _emscripten_bind_ClosestConvexResultCallback___destroy___0(self);
        };
        function btDefaultMotionState(arg0, arg1) {
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          if (arg1 && typeof arg1 === "object")
            arg1 = arg1.ptr;
          if (arg0 === void 0) {
            this.ptr = _emscripten_bind_btDefaultMotionState_btDefaultMotionState_0();
            getCache(btDefaultMotionState)[this.ptr] = this;
            return;
          }
          if (arg1 === void 0) {
            this.ptr = _emscripten_bind_btDefaultMotionState_btDefaultMotionState_1(arg0);
            getCache(btDefaultMotionState)[this.ptr] = this;
            return;
          }
          this.ptr = _emscripten_bind_btDefaultMotionState_btDefaultMotionState_2(arg0, arg1);
          getCache(btDefaultMotionState)[this.ptr] = this;
        }
        btDefaultMotionState.prototype = Object.create(btMotionState.prototype);
        btDefaultMotionState.prototype.constructor = btDefaultMotionState;
        btDefaultMotionState.prototype.__class__ = btDefaultMotionState;
        btDefaultMotionState.__cache__ = {};
        Module["btDefaultMotionState"] = btDefaultMotionState;
        btDefaultMotionState.prototype["getWorldTransform"] = btDefaultMotionState.prototype.getWorldTransform = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btDefaultMotionState_getWorldTransform_1(self, arg0);
        };
        btDefaultMotionState.prototype["setWorldTransform"] = btDefaultMotionState.prototype.setWorldTransform = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btDefaultMotionState_setWorldTransform_1(self, arg0);
        };
        btDefaultMotionState.prototype["get_m_graphicsWorldTrans"] = btDefaultMotionState.prototype.get_m_graphicsWorldTrans = function() {
          var self = this.ptr;
          return wrapPointer(_emscripten_bind_btDefaultMotionState_get_m_graphicsWorldTrans_0(self), btTransform);
        };
        btDefaultMotionState.prototype["set_m_graphicsWorldTrans"] = btDefaultMotionState.prototype.set_m_graphicsWorldTrans = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btDefaultMotionState_set_m_graphicsWorldTrans_1(self, arg0);
        };
        btDefaultMotionState.prototype["__destroy__"] = btDefaultMotionState.prototype.__destroy__ = function() {
          var self = this.ptr;
          _emscripten_bind_btDefaultMotionState___destroy___0(self);
        };
        function ClosestRayResultCallback(arg0, arg1) {
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          if (arg1 && typeof arg1 === "object")
            arg1 = arg1.ptr;
          this.ptr = _emscripten_bind_ClosestRayResultCallback_ClosestRayResultCallback_2(arg0, arg1);
          getCache(ClosestRayResultCallback)[this.ptr] = this;
        }
        ClosestRayResultCallback.prototype = Object.create(RayResultCallback.prototype);
        ClosestRayResultCallback.prototype.constructor = ClosestRayResultCallback;
        ClosestRayResultCallback.prototype.__class__ = ClosestRayResultCallback;
        ClosestRayResultCallback.__cache__ = {};
        Module["ClosestRayResultCallback"] = ClosestRayResultCallback;
        ClosestRayResultCallback.prototype["hasHit"] = ClosestRayResultCallback.prototype.hasHit = function() {
          var self = this.ptr;
          return !!_emscripten_bind_ClosestRayResultCallback_hasHit_0(self);
        };
        ClosestRayResultCallback.prototype["get_m_rayFromWorld"] = ClosestRayResultCallback.prototype.get_m_rayFromWorld = function() {
          var self = this.ptr;
          return wrapPointer(_emscripten_bind_ClosestRayResultCallback_get_m_rayFromWorld_0(self), btVector3);
        };
        ClosestRayResultCallback.prototype["set_m_rayFromWorld"] = ClosestRayResultCallback.prototype.set_m_rayFromWorld = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_ClosestRayResultCallback_set_m_rayFromWorld_1(self, arg0);
        };
        ClosestRayResultCallback.prototype["get_m_rayToWorld"] = ClosestRayResultCallback.prototype.get_m_rayToWorld = function() {
          var self = this.ptr;
          return wrapPointer(_emscripten_bind_ClosestRayResultCallback_get_m_rayToWorld_0(self), btVector3);
        };
        ClosestRayResultCallback.prototype["set_m_rayToWorld"] = ClosestRayResultCallback.prototype.set_m_rayToWorld = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_ClosestRayResultCallback_set_m_rayToWorld_1(self, arg0);
        };
        ClosestRayResultCallback.prototype["get_m_hitNormalWorld"] = ClosestRayResultCallback.prototype.get_m_hitNormalWorld = function() {
          var self = this.ptr;
          return wrapPointer(_emscripten_bind_ClosestRayResultCallback_get_m_hitNormalWorld_0(self), btVector3);
        };
        ClosestRayResultCallback.prototype["set_m_hitNormalWorld"] = ClosestRayResultCallback.prototype.set_m_hitNormalWorld = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_ClosestRayResultCallback_set_m_hitNormalWorld_1(self, arg0);
        };
        ClosestRayResultCallback.prototype["get_m_hitPointWorld"] = ClosestRayResultCallback.prototype.get_m_hitPointWorld = function() {
          var self = this.ptr;
          return wrapPointer(_emscripten_bind_ClosestRayResultCallback_get_m_hitPointWorld_0(self), btVector3);
        };
        ClosestRayResultCallback.prototype["set_m_hitPointWorld"] = ClosestRayResultCallback.prototype.set_m_hitPointWorld = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_ClosestRayResultCallback_set_m_hitPointWorld_1(self, arg0);
        };
        ClosestRayResultCallback.prototype["get_m_collisionFilterGroup"] = ClosestRayResultCallback.prototype.get_m_collisionFilterGroup = function() {
          var self = this.ptr;
          return _emscripten_bind_ClosestRayResultCallback_get_m_collisionFilterGroup_0(self);
        };
        ClosestRayResultCallback.prototype["set_m_collisionFilterGroup"] = ClosestRayResultCallback.prototype.set_m_collisionFilterGroup = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_ClosestRayResultCallback_set_m_collisionFilterGroup_1(self, arg0);
        };
        ClosestRayResultCallback.prototype["get_m_collisionFilterMask"] = ClosestRayResultCallback.prototype.get_m_collisionFilterMask = function() {
          var self = this.ptr;
          return _emscripten_bind_ClosestRayResultCallback_get_m_collisionFilterMask_0(self);
        };
        ClosestRayResultCallback.prototype["set_m_collisionFilterMask"] = ClosestRayResultCallback.prototype.set_m_collisionFilterMask = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_ClosestRayResultCallback_set_m_collisionFilterMask_1(self, arg0);
        };
        ClosestRayResultCallback.prototype["get_m_collisionObject"] = ClosestRayResultCallback.prototype.get_m_collisionObject = function() {
          var self = this.ptr;
          return wrapPointer(_emscripten_bind_ClosestRayResultCallback_get_m_collisionObject_0(self), btCollisionObject);
        };
        ClosestRayResultCallback.prototype["set_m_collisionObject"] = ClosestRayResultCallback.prototype.set_m_collisionObject = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_ClosestRayResultCallback_set_m_collisionObject_1(self, arg0);
        };
        ClosestRayResultCallback.prototype["__destroy__"] = ClosestRayResultCallback.prototype.__destroy__ = function() {
          var self = this.ptr;
          _emscripten_bind_ClosestRayResultCallback___destroy___0(self);
        };
        function btGeneric6DofSpring2Constraint(arg0, arg1, arg2, arg3, arg4) {
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          if (arg1 && typeof arg1 === "object")
            arg1 = arg1.ptr;
          if (arg2 && typeof arg2 === "object")
            arg2 = arg2.ptr;
          if (arg3 && typeof arg3 === "object")
            arg3 = arg3.ptr;
          if (arg4 && typeof arg4 === "object")
            arg4 = arg4.ptr;
          if (arg3 === void 0) {
            this.ptr = _emscripten_bind_btGeneric6DofSpring2Constraint_btGeneric6DofSpring2Constraint_3(arg0, arg1, arg2);
            getCache(btGeneric6DofSpring2Constraint)[this.ptr] = this;
            return;
          }
          if (arg4 === void 0) {
            this.ptr = _emscripten_bind_btGeneric6DofSpring2Constraint_btGeneric6DofSpring2Constraint_4(arg0, arg1, arg2, arg3);
            getCache(btGeneric6DofSpring2Constraint)[this.ptr] = this;
            return;
          }
          this.ptr = _emscripten_bind_btGeneric6DofSpring2Constraint_btGeneric6DofSpring2Constraint_5(arg0, arg1, arg2, arg3, arg4);
          getCache(btGeneric6DofSpring2Constraint)[this.ptr] = this;
        }
        btGeneric6DofSpring2Constraint.prototype = Object.create(btTypedConstraint.prototype);
        btGeneric6DofSpring2Constraint.prototype.constructor = btGeneric6DofSpring2Constraint;
        btGeneric6DofSpring2Constraint.prototype.__class__ = btGeneric6DofSpring2Constraint;
        btGeneric6DofSpring2Constraint.__cache__ = {};
        Module["btGeneric6DofSpring2Constraint"] = btGeneric6DofSpring2Constraint;
        btGeneric6DofSpring2Constraint.prototype["setLinearLowerLimit"] = btGeneric6DofSpring2Constraint.prototype.setLinearLowerLimit = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btGeneric6DofSpring2Constraint_setLinearLowerLimit_1(self, arg0);
        };
        btGeneric6DofSpring2Constraint.prototype["setLinearUpperLimit"] = btGeneric6DofSpring2Constraint.prototype.setLinearUpperLimit = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btGeneric6DofSpring2Constraint_setLinearUpperLimit_1(self, arg0);
        };
        btGeneric6DofSpring2Constraint.prototype["setAngularLowerLimit"] = btGeneric6DofSpring2Constraint.prototype.setAngularLowerLimit = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btGeneric6DofSpring2Constraint_setAngularLowerLimit_1(self, arg0);
        };
        btGeneric6DofSpring2Constraint.prototype["setAngularUpperLimit"] = btGeneric6DofSpring2Constraint.prototype.setAngularUpperLimit = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btGeneric6DofSpring2Constraint_setAngularUpperLimit_1(self, arg0);
        };
        btGeneric6DofSpring2Constraint.prototype["enableSpring"] = btGeneric6DofSpring2Constraint.prototype.enableSpring = function(arg0, arg1) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          if (arg1 && typeof arg1 === "object")
            arg1 = arg1.ptr;
          _emscripten_bind_btGeneric6DofSpring2Constraint_enableSpring_2(self, arg0, arg1);
        };
        btGeneric6DofSpring2Constraint.prototype["setStiffness"] = btGeneric6DofSpring2Constraint.prototype.setStiffness = function(arg0, arg1) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          if (arg1 && typeof arg1 === "object")
            arg1 = arg1.ptr;
          _emscripten_bind_btGeneric6DofSpring2Constraint_setStiffness_2(self, arg0, arg1);
        };
        btGeneric6DofSpring2Constraint.prototype["setDamping"] = btGeneric6DofSpring2Constraint.prototype.setDamping = function(arg0, arg1) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          if (arg1 && typeof arg1 === "object")
            arg1 = arg1.ptr;
          _emscripten_bind_btGeneric6DofSpring2Constraint_setDamping_2(self, arg0, arg1);
        };
        btGeneric6DofSpring2Constraint.prototype["getTranslationalLimitMotor"] = btGeneric6DofSpring2Constraint.prototype.getTranslationalLimitMotor = function() {
          var self = this.ptr;
          return wrapPointer(_emscripten_bind_btGeneric6DofSpring2Constraint_getTranslationalLimitMotor_0(self), btTranslationalLimitMotor2);
        };
        btGeneric6DofSpring2Constraint.prototype["getRotationalLimitMotor"] = btGeneric6DofSpring2Constraint.prototype.getRotationalLimitMotor = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          return wrapPointer(_emscripten_bind_btGeneric6DofSpring2Constraint_getRotationalLimitMotor_1(self, arg0), btRotationalLimitMotor2);
        };
        btGeneric6DofSpring2Constraint.prototype["enableFeedback"] = btGeneric6DofSpring2Constraint.prototype.enableFeedback = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btGeneric6DofSpring2Constraint_enableFeedback_1(self, arg0);
        };
        btGeneric6DofSpring2Constraint.prototype["getBreakingImpulseThreshold"] = btGeneric6DofSpring2Constraint.prototype.getBreakingImpulseThreshold = function() {
          var self = this.ptr;
          return _emscripten_bind_btGeneric6DofSpring2Constraint_getBreakingImpulseThreshold_0(self);
        };
        btGeneric6DofSpring2Constraint.prototype["setBreakingImpulseThreshold"] = btGeneric6DofSpring2Constraint.prototype.setBreakingImpulseThreshold = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btGeneric6DofSpring2Constraint_setBreakingImpulseThreshold_1(self, arg0);
        };
        btGeneric6DofSpring2Constraint.prototype["__destroy__"] = btGeneric6DofSpring2Constraint.prototype.__destroy__ = function() {
          var self = this.ptr;
          _emscripten_bind_btGeneric6DofSpring2Constraint___destroy___0(self);
        };
        function btCapsuleShapeX(arg0, arg1) {
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          if (arg1 && typeof arg1 === "object")
            arg1 = arg1.ptr;
          this.ptr = _emscripten_bind_btCapsuleShapeX_btCapsuleShapeX_2(arg0, arg1);
          getCache(btCapsuleShapeX)[this.ptr] = this;
        }
        btCapsuleShapeX.prototype = Object.create(btCapsuleShape.prototype);
        btCapsuleShapeX.prototype.constructor = btCapsuleShapeX;
        btCapsuleShapeX.prototype.__class__ = btCapsuleShapeX;
        btCapsuleShapeX.__cache__ = {};
        Module["btCapsuleShapeX"] = btCapsuleShapeX;
        btCapsuleShapeX.prototype["setMargin"] = btCapsuleShapeX.prototype.setMargin = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btCapsuleShapeX_setMargin_1(self, arg0);
        };
        btCapsuleShapeX.prototype["getMargin"] = btCapsuleShapeX.prototype.getMargin = function() {
          var self = this.ptr;
          return _emscripten_bind_btCapsuleShapeX_getMargin_0(self);
        };
        btCapsuleShapeX.prototype["setLocalScaling"] = btCapsuleShapeX.prototype.setLocalScaling = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btCapsuleShapeX_setLocalScaling_1(self, arg0);
        };
        btCapsuleShapeX.prototype["calculateLocalInertia"] = btCapsuleShapeX.prototype.calculateLocalInertia = function(arg0, arg1) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          if (arg1 && typeof arg1 === "object")
            arg1 = arg1.ptr;
          _emscripten_bind_btCapsuleShapeX_calculateLocalInertia_2(self, arg0, arg1);
        };
        btCapsuleShapeX.prototype["__destroy__"] = btCapsuleShapeX.prototype.__destroy__ = function() {
          var self = this.ptr;
          _emscripten_bind_btCapsuleShapeX___destroy___0(self);
        };
        function btQuaternion(arg0, arg1, arg2, arg3) {
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          if (arg1 && typeof arg1 === "object")
            arg1 = arg1.ptr;
          if (arg2 && typeof arg2 === "object")
            arg2 = arg2.ptr;
          if (arg3 && typeof arg3 === "object")
            arg3 = arg3.ptr;
          this.ptr = _emscripten_bind_btQuaternion_btQuaternion_4(arg0, arg1, arg2, arg3);
          getCache(btQuaternion)[this.ptr] = this;
        }
        btQuaternion.prototype = Object.create(btQuadWord.prototype);
        btQuaternion.prototype.constructor = btQuaternion;
        btQuaternion.prototype.__class__ = btQuaternion;
        btQuaternion.__cache__ = {};
        Module["btQuaternion"] = btQuaternion;
        btQuaternion.prototype["setValue"] = btQuaternion.prototype.setValue = function(arg0, arg1, arg2, arg3) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          if (arg1 && typeof arg1 === "object")
            arg1 = arg1.ptr;
          if (arg2 && typeof arg2 === "object")
            arg2 = arg2.ptr;
          if (arg3 && typeof arg3 === "object")
            arg3 = arg3.ptr;
          _emscripten_bind_btQuaternion_setValue_4(self, arg0, arg1, arg2, arg3);
        };
        btQuaternion.prototype["normalize"] = btQuaternion.prototype.normalize = function() {
          var self = this.ptr;
          _emscripten_bind_btQuaternion_normalize_0(self);
        };
        btQuaternion.prototype["x"] = btQuaternion.prototype.x = function() {
          var self = this.ptr;
          return _emscripten_bind_btQuaternion_x_0(self);
        };
        btQuaternion.prototype["y"] = btQuaternion.prototype.y = function() {
          var self = this.ptr;
          return _emscripten_bind_btQuaternion_y_0(self);
        };
        btQuaternion.prototype["z"] = btQuaternion.prototype.z = function() {
          var self = this.ptr;
          return _emscripten_bind_btQuaternion_z_0(self);
        };
        btQuaternion.prototype["w"] = btQuaternion.prototype.w = function() {
          var self = this.ptr;
          return _emscripten_bind_btQuaternion_w_0(self);
        };
        btQuaternion.prototype["setX"] = btQuaternion.prototype.setX = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btQuaternion_setX_1(self, arg0);
        };
        btQuaternion.prototype["setY"] = btQuaternion.prototype.setY = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btQuaternion_setY_1(self, arg0);
        };
        btQuaternion.prototype["setZ"] = btQuaternion.prototype.setZ = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btQuaternion_setZ_1(self, arg0);
        };
        btQuaternion.prototype["setW"] = btQuaternion.prototype.setW = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btQuaternion_setW_1(self, arg0);
        };
        btQuaternion.prototype["__destroy__"] = btQuaternion.prototype.__destroy__ = function() {
          var self = this.ptr;
          _emscripten_bind_btQuaternion___destroy___0(self);
        };
        function btCapsuleShapeZ(arg0, arg1) {
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          if (arg1 && typeof arg1 === "object")
            arg1 = arg1.ptr;
          this.ptr = _emscripten_bind_btCapsuleShapeZ_btCapsuleShapeZ_2(arg0, arg1);
          getCache(btCapsuleShapeZ)[this.ptr] = this;
        }
        btCapsuleShapeZ.prototype = Object.create(btCapsuleShape.prototype);
        btCapsuleShapeZ.prototype.constructor = btCapsuleShapeZ;
        btCapsuleShapeZ.prototype.__class__ = btCapsuleShapeZ;
        btCapsuleShapeZ.__cache__ = {};
        Module["btCapsuleShapeZ"] = btCapsuleShapeZ;
        btCapsuleShapeZ.prototype["setMargin"] = btCapsuleShapeZ.prototype.setMargin = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btCapsuleShapeZ_setMargin_1(self, arg0);
        };
        btCapsuleShapeZ.prototype["getMargin"] = btCapsuleShapeZ.prototype.getMargin = function() {
          var self = this.ptr;
          return _emscripten_bind_btCapsuleShapeZ_getMargin_0(self);
        };
        btCapsuleShapeZ.prototype["setLocalScaling"] = btCapsuleShapeZ.prototype.setLocalScaling = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btCapsuleShapeZ_setLocalScaling_1(self, arg0);
        };
        btCapsuleShapeZ.prototype["calculateLocalInertia"] = btCapsuleShapeZ.prototype.calculateLocalInertia = function(arg0, arg1) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          if (arg1 && typeof arg1 === "object")
            arg1 = arg1.ptr;
          _emscripten_bind_btCapsuleShapeZ_calculateLocalInertia_2(self, arg0, arg1);
        };
        btCapsuleShapeZ.prototype["__destroy__"] = btCapsuleShapeZ.prototype.__destroy__ = function() {
          var self = this.ptr;
          _emscripten_bind_btCapsuleShapeZ___destroy___0(self);
        };
        function btDefaultVehicleRaycaster(arg0) {
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          this.ptr = _emscripten_bind_btDefaultVehicleRaycaster_btDefaultVehicleRaycaster_1(arg0);
          getCache(btDefaultVehicleRaycaster)[this.ptr] = this;
        }
        btDefaultVehicleRaycaster.prototype = Object.create(btVehicleRaycaster.prototype);
        btDefaultVehicleRaycaster.prototype.constructor = btDefaultVehicleRaycaster;
        btDefaultVehicleRaycaster.prototype.__class__ = btDefaultVehicleRaycaster;
        btDefaultVehicleRaycaster.__cache__ = {};
        Module["btDefaultVehicleRaycaster"] = btDefaultVehicleRaycaster;
        btDefaultVehicleRaycaster.prototype["__destroy__"] = btDefaultVehicleRaycaster.prototype.__destroy__ = function() {
          var self = this.ptr;
          _emscripten_bind_btDefaultVehicleRaycaster___destroy___0(self);
        };
        function btWheelInfo() {
          throw "cannot construct a btWheelInfo, no constructor in IDL";
        }
        btWheelInfo.prototype = Object.create(WrapperObject.prototype);
        btWheelInfo.prototype.constructor = btWheelInfo;
        btWheelInfo.prototype.__class__ = btWheelInfo;
        btWheelInfo.__cache__ = {};
        Module["btWheelInfo"] = btWheelInfo;
        btWheelInfo.prototype["get_m_suspensionStiffness"] = btWheelInfo.prototype.get_m_suspensionStiffness = function() {
          var self = this.ptr;
          return _emscripten_bind_btWheelInfo_get_m_suspensionStiffness_0(self);
        };
        btWheelInfo.prototype["set_m_suspensionStiffness"] = btWheelInfo.prototype.set_m_suspensionStiffness = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btWheelInfo_set_m_suspensionStiffness_1(self, arg0);
        };
        btWheelInfo.prototype["get_m_frictionSlip"] = btWheelInfo.prototype.get_m_frictionSlip = function() {
          var self = this.ptr;
          return _emscripten_bind_btWheelInfo_get_m_frictionSlip_0(self);
        };
        btWheelInfo.prototype["set_m_frictionSlip"] = btWheelInfo.prototype.set_m_frictionSlip = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btWheelInfo_set_m_frictionSlip_1(self, arg0);
        };
        btWheelInfo.prototype["get_m_engineForce"] = btWheelInfo.prototype.get_m_engineForce = function() {
          var self = this.ptr;
          return _emscripten_bind_btWheelInfo_get_m_engineForce_0(self);
        };
        btWheelInfo.prototype["set_m_engineForce"] = btWheelInfo.prototype.set_m_engineForce = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btWheelInfo_set_m_engineForce_1(self, arg0);
        };
        btWheelInfo.prototype["get_m_rollInfluence"] = btWheelInfo.prototype.get_m_rollInfluence = function() {
          var self = this.ptr;
          return _emscripten_bind_btWheelInfo_get_m_rollInfluence_0(self);
        };
        btWheelInfo.prototype["set_m_rollInfluence"] = btWheelInfo.prototype.set_m_rollInfluence = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btWheelInfo_set_m_rollInfluence_1(self, arg0);
        };
        btWheelInfo.prototype["get_m_suspensionRestLength1"] = btWheelInfo.prototype.get_m_suspensionRestLength1 = function() {
          var self = this.ptr;
          return _emscripten_bind_btWheelInfo_get_m_suspensionRestLength1_0(self);
        };
        btWheelInfo.prototype["set_m_suspensionRestLength1"] = btWheelInfo.prototype.set_m_suspensionRestLength1 = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btWheelInfo_set_m_suspensionRestLength1_1(self, arg0);
        };
        btWheelInfo.prototype["get_m_wheelsRadius"] = btWheelInfo.prototype.get_m_wheelsRadius = function() {
          var self = this.ptr;
          return _emscripten_bind_btWheelInfo_get_m_wheelsRadius_0(self);
        };
        btWheelInfo.prototype["set_m_wheelsRadius"] = btWheelInfo.prototype.set_m_wheelsRadius = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btWheelInfo_set_m_wheelsRadius_1(self, arg0);
        };
        btWheelInfo.prototype["get_m_wheelsDampingCompression"] = btWheelInfo.prototype.get_m_wheelsDampingCompression = function() {
          var self = this.ptr;
          return _emscripten_bind_btWheelInfo_get_m_wheelsDampingCompression_0(self);
        };
        btWheelInfo.prototype["set_m_wheelsDampingCompression"] = btWheelInfo.prototype.set_m_wheelsDampingCompression = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btWheelInfo_set_m_wheelsDampingCompression_1(self, arg0);
        };
        btWheelInfo.prototype["get_m_wheelsDampingRelaxation"] = btWheelInfo.prototype.get_m_wheelsDampingRelaxation = function() {
          var self = this.ptr;
          return _emscripten_bind_btWheelInfo_get_m_wheelsDampingRelaxation_0(self);
        };
        btWheelInfo.prototype["set_m_wheelsDampingRelaxation"] = btWheelInfo.prototype.set_m_wheelsDampingRelaxation = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btWheelInfo_set_m_wheelsDampingRelaxation_1(self, arg0);
        };
        btWheelInfo.prototype["get_m_steering"] = btWheelInfo.prototype.get_m_steering = function() {
          var self = this.ptr;
          return _emscripten_bind_btWheelInfo_get_m_steering_0(self);
        };
        btWheelInfo.prototype["set_m_steering"] = btWheelInfo.prototype.set_m_steering = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btWheelInfo_set_m_steering_1(self, arg0);
        };
        btWheelInfo.prototype["get_m_maxSuspensionForce"] = btWheelInfo.prototype.get_m_maxSuspensionForce = function() {
          var self = this.ptr;
          return _emscripten_bind_btWheelInfo_get_m_maxSuspensionForce_0(self);
        };
        btWheelInfo.prototype["set_m_maxSuspensionForce"] = btWheelInfo.prototype.set_m_maxSuspensionForce = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btWheelInfo_set_m_maxSuspensionForce_1(self, arg0);
        };
        btWheelInfo.prototype["get_m_maxSuspensionTravelCm"] = btWheelInfo.prototype.get_m_maxSuspensionTravelCm = function() {
          var self = this.ptr;
          return _emscripten_bind_btWheelInfo_get_m_maxSuspensionTravelCm_0(self);
        };
        btWheelInfo.prototype["set_m_maxSuspensionTravelCm"] = btWheelInfo.prototype.set_m_maxSuspensionTravelCm = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btWheelInfo_set_m_maxSuspensionTravelCm_1(self, arg0);
        };
        btWheelInfo.prototype["get_m_wheelsSuspensionForce"] = btWheelInfo.prototype.get_m_wheelsSuspensionForce = function() {
          var self = this.ptr;
          return _emscripten_bind_btWheelInfo_get_m_wheelsSuspensionForce_0(self);
        };
        btWheelInfo.prototype["set_m_wheelsSuspensionForce"] = btWheelInfo.prototype.set_m_wheelsSuspensionForce = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btWheelInfo_set_m_wheelsSuspensionForce_1(self, arg0);
        };
        btWheelInfo.prototype["get_m_bIsFrontWheel"] = btWheelInfo.prototype.get_m_bIsFrontWheel = function() {
          var self = this.ptr;
          return !!_emscripten_bind_btWheelInfo_get_m_bIsFrontWheel_0(self);
        };
        btWheelInfo.prototype["set_m_bIsFrontWheel"] = btWheelInfo.prototype.set_m_bIsFrontWheel = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btWheelInfo_set_m_bIsFrontWheel_1(self, arg0);
        };
        btWheelInfo.prototype["get_m_raycastInfo"] = btWheelInfo.prototype.get_m_raycastInfo = function() {
          var self = this.ptr;
          return wrapPointer(_emscripten_bind_btWheelInfo_get_m_raycastInfo_0(self), RaycastInfo);
        };
        btWheelInfo.prototype["set_m_raycastInfo"] = btWheelInfo.prototype.set_m_raycastInfo = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btWheelInfo_set_m_raycastInfo_1(self, arg0);
        };
        btWheelInfo.prototype["get_m_chassisConnectionPointCS"] = btWheelInfo.prototype.get_m_chassisConnectionPointCS = function() {
          var self = this.ptr;
          return wrapPointer(_emscripten_bind_btWheelInfo_get_m_chassisConnectionPointCS_0(self), btVector3);
        };
        btWheelInfo.prototype["set_m_chassisConnectionPointCS"] = btWheelInfo.prototype.set_m_chassisConnectionPointCS = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btWheelInfo_set_m_chassisConnectionPointCS_1(self, arg0);
        };
        btWheelInfo.prototype["__destroy__"] = btWheelInfo.prototype.__destroy__ = function() {
          var self = this.ptr;
          _emscripten_bind_btWheelInfo___destroy___0(self);
        };
        function btVector4(arg0, arg1, arg2, arg3) {
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          if (arg1 && typeof arg1 === "object")
            arg1 = arg1.ptr;
          if (arg2 && typeof arg2 === "object")
            arg2 = arg2.ptr;
          if (arg3 && typeof arg3 === "object")
            arg3 = arg3.ptr;
          if (arg0 === void 0) {
            this.ptr = _emscripten_bind_btVector4_btVector4_0();
            getCache(btVector4)[this.ptr] = this;
            return;
          }
          if (arg1 === void 0) {
            this.ptr = _emscripten_bind_btVector4_btVector4_1(arg0);
            getCache(btVector4)[this.ptr] = this;
            return;
          }
          if (arg2 === void 0) {
            this.ptr = _emscripten_bind_btVector4_btVector4_2(arg0, arg1);
            getCache(btVector4)[this.ptr] = this;
            return;
          }
          if (arg3 === void 0) {
            this.ptr = _emscripten_bind_btVector4_btVector4_3(arg0, arg1, arg2);
            getCache(btVector4)[this.ptr] = this;
            return;
          }
          this.ptr = _emscripten_bind_btVector4_btVector4_4(arg0, arg1, arg2, arg3);
          getCache(btVector4)[this.ptr] = this;
        }
        btVector4.prototype = Object.create(btVector3.prototype);
        btVector4.prototype.constructor = btVector4;
        btVector4.prototype.__class__ = btVector4;
        btVector4.__cache__ = {};
        Module["btVector4"] = btVector4;
        btVector4.prototype["w"] = btVector4.prototype.w = function() {
          var self = this.ptr;
          return _emscripten_bind_btVector4_w_0(self);
        };
        btVector4.prototype["setValue"] = btVector4.prototype.setValue = function(arg0, arg1, arg2, arg3) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          if (arg1 && typeof arg1 === "object")
            arg1 = arg1.ptr;
          if (arg2 && typeof arg2 === "object")
            arg2 = arg2.ptr;
          if (arg3 && typeof arg3 === "object")
            arg3 = arg3.ptr;
          _emscripten_bind_btVector4_setValue_4(self, arg0, arg1, arg2, arg3);
        };
        btVector4.prototype["length"] = btVector4.prototype.length = function() {
          var self = this.ptr;
          return _emscripten_bind_btVector4_length_0(self);
        };
        btVector4.prototype["x"] = btVector4.prototype.x = function() {
          var self = this.ptr;
          return _emscripten_bind_btVector4_x_0(self);
        };
        btVector4.prototype["y"] = btVector4.prototype.y = function() {
          var self = this.ptr;
          return _emscripten_bind_btVector4_y_0(self);
        };
        btVector4.prototype["z"] = btVector4.prototype.z = function() {
          var self = this.ptr;
          return _emscripten_bind_btVector4_z_0(self);
        };
        btVector4.prototype["setX"] = btVector4.prototype.setX = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btVector4_setX_1(self, arg0);
        };
        btVector4.prototype["setY"] = btVector4.prototype.setY = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btVector4_setY_1(self, arg0);
        };
        btVector4.prototype["setZ"] = btVector4.prototype.setZ = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btVector4_setZ_1(self, arg0);
        };
        btVector4.prototype["normalize"] = btVector4.prototype.normalize = function() {
          var self = this.ptr;
          _emscripten_bind_btVector4_normalize_0(self);
        };
        btVector4.prototype["dot"] = btVector4.prototype.dot = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          return _emscripten_bind_btVector4_dot_1(self, arg0);
        };
        btVector4.prototype["op_mul"] = btVector4.prototype.op_mul = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          return wrapPointer(_emscripten_bind_btVector4_op_mul_1(self, arg0), btVector3);
        };
        btVector4.prototype["op_add"] = btVector4.prototype.op_add = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          return wrapPointer(_emscripten_bind_btVector4_op_add_1(self, arg0), btVector3);
        };
        btVector4.prototype["op_sub"] = btVector4.prototype.op_sub = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          return wrapPointer(_emscripten_bind_btVector4_op_sub_1(self, arg0), btVector3);
        };
        btVector4.prototype["__destroy__"] = btVector4.prototype.__destroy__ = function() {
          var self = this.ptr;
          _emscripten_bind_btVector4___destroy___0(self);
        };
        function btKinematicCharacterController(arg0, arg1, arg2, arg3) {
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          if (arg1 && typeof arg1 === "object")
            arg1 = arg1.ptr;
          if (arg2 && typeof arg2 === "object")
            arg2 = arg2.ptr;
          if (arg3 && typeof arg3 === "object")
            arg3 = arg3.ptr;
          if (arg3 === void 0) {
            this.ptr = _emscripten_bind_btKinematicCharacterController_btKinematicCharacterController_3(arg0, arg1, arg2);
            getCache(btKinematicCharacterController)[this.ptr] = this;
            return;
          }
          this.ptr = _emscripten_bind_btKinematicCharacterController_btKinematicCharacterController_4(arg0, arg1, arg2, arg3);
          getCache(btKinematicCharacterController)[this.ptr] = this;
        }
        btKinematicCharacterController.prototype = Object.create(btActionInterface.prototype);
        btKinematicCharacterController.prototype.constructor = btKinematicCharacterController;
        btKinematicCharacterController.prototype.__class__ = btKinematicCharacterController;
        btKinematicCharacterController.__cache__ = {};
        Module["btKinematicCharacterController"] = btKinematicCharacterController;
        btKinematicCharacterController.prototype["setUpAxis"] = btKinematicCharacterController.prototype.setUpAxis = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btKinematicCharacterController_setUpAxis_1(self, arg0);
        };
        btKinematicCharacterController.prototype["setWalkDirection"] = btKinematicCharacterController.prototype.setWalkDirection = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btKinematicCharacterController_setWalkDirection_1(self, arg0);
        };
        btKinematicCharacterController.prototype["setVelocityForTimeInterval"] = btKinematicCharacterController.prototype.setVelocityForTimeInterval = function(arg0, arg1) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          if (arg1 && typeof arg1 === "object")
            arg1 = arg1.ptr;
          _emscripten_bind_btKinematicCharacterController_setVelocityForTimeInterval_2(self, arg0, arg1);
        };
        btKinematicCharacterController.prototype["warp"] = btKinematicCharacterController.prototype.warp = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btKinematicCharacterController_warp_1(self, arg0);
        };
        btKinematicCharacterController.prototype["preStep"] = btKinematicCharacterController.prototype.preStep = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btKinematicCharacterController_preStep_1(self, arg0);
        };
        btKinematicCharacterController.prototype["playerStep"] = btKinematicCharacterController.prototype.playerStep = function(arg0, arg1) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          if (arg1 && typeof arg1 === "object")
            arg1 = arg1.ptr;
          _emscripten_bind_btKinematicCharacterController_playerStep_2(self, arg0, arg1);
        };
        btKinematicCharacterController.prototype["setFallSpeed"] = btKinematicCharacterController.prototype.setFallSpeed = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btKinematicCharacterController_setFallSpeed_1(self, arg0);
        };
        btKinematicCharacterController.prototype["setJumpSpeed"] = btKinematicCharacterController.prototype.setJumpSpeed = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btKinematicCharacterController_setJumpSpeed_1(self, arg0);
        };
        btKinematicCharacterController.prototype["setMaxJumpHeight"] = btKinematicCharacterController.prototype.setMaxJumpHeight = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btKinematicCharacterController_setMaxJumpHeight_1(self, arg0);
        };
        btKinematicCharacterController.prototype["canJump"] = btKinematicCharacterController.prototype.canJump = function() {
          var self = this.ptr;
          return !!_emscripten_bind_btKinematicCharacterController_canJump_0(self);
        };
        btKinematicCharacterController.prototype["jump"] = btKinematicCharacterController.prototype.jump = function() {
          var self = this.ptr;
          _emscripten_bind_btKinematicCharacterController_jump_0(self);
        };
        btKinematicCharacterController.prototype["setGravity"] = btKinematicCharacterController.prototype.setGravity = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btKinematicCharacterController_setGravity_1(self, arg0);
        };
        btKinematicCharacterController.prototype["getGravity"] = btKinematicCharacterController.prototype.getGravity = function() {
          var self = this.ptr;
          return _emscripten_bind_btKinematicCharacterController_getGravity_0(self);
        };
        btKinematicCharacterController.prototype["setMaxSlope"] = btKinematicCharacterController.prototype.setMaxSlope = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btKinematicCharacterController_setMaxSlope_1(self, arg0);
        };
        btKinematicCharacterController.prototype["getMaxSlope"] = btKinematicCharacterController.prototype.getMaxSlope = function() {
          var self = this.ptr;
          return _emscripten_bind_btKinematicCharacterController_getMaxSlope_0(self);
        };
        btKinematicCharacterController.prototype["getGhostObject"] = btKinematicCharacterController.prototype.getGhostObject = function() {
          var self = this.ptr;
          return wrapPointer(_emscripten_bind_btKinematicCharacterController_getGhostObject_0(self), btPairCachingGhostObject);
        };
        btKinematicCharacterController.prototype["setUseGhostSweepTest"] = btKinematicCharacterController.prototype.setUseGhostSweepTest = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btKinematicCharacterController_setUseGhostSweepTest_1(self, arg0);
        };
        btKinematicCharacterController.prototype["onGround"] = btKinematicCharacterController.prototype.onGround = function() {
          var self = this.ptr;
          return !!_emscripten_bind_btKinematicCharacterController_onGround_0(self);
        };
        btKinematicCharacterController.prototype["__destroy__"] = btKinematicCharacterController.prototype.__destroy__ = function() {
          var self = this.ptr;
          _emscripten_bind_btKinematicCharacterController___destroy___0(self);
        };
        function btStaticPlaneShape(arg0, arg1) {
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          if (arg1 && typeof arg1 === "object")
            arg1 = arg1.ptr;
          this.ptr = _emscripten_bind_btStaticPlaneShape_btStaticPlaneShape_2(arg0, arg1);
          getCache(btStaticPlaneShape)[this.ptr] = this;
        }
        btStaticPlaneShape.prototype = Object.create(btConcaveShape.prototype);
        btStaticPlaneShape.prototype.constructor = btStaticPlaneShape;
        btStaticPlaneShape.prototype.__class__ = btStaticPlaneShape;
        btStaticPlaneShape.__cache__ = {};
        Module["btStaticPlaneShape"] = btStaticPlaneShape;
        btStaticPlaneShape.prototype["setLocalScaling"] = btStaticPlaneShape.prototype.setLocalScaling = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btStaticPlaneShape_setLocalScaling_1(self, arg0);
        };
        btStaticPlaneShape.prototype["calculateLocalInertia"] = btStaticPlaneShape.prototype.calculateLocalInertia = function(arg0, arg1) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          if (arg1 && typeof arg1 === "object")
            arg1 = arg1.ptr;
          _emscripten_bind_btStaticPlaneShape_calculateLocalInertia_2(self, arg0, arg1);
        };
        btStaticPlaneShape.prototype["__destroy__"] = btStaticPlaneShape.prototype.__destroy__ = function() {
          var self = this.ptr;
          _emscripten_bind_btStaticPlaneShape___destroy___0(self);
        };
        function btContactSolverInfo() {
          throw "cannot construct a btContactSolverInfo, no constructor in IDL";
        }
        btContactSolverInfo.prototype = Object.create(WrapperObject.prototype);
        btContactSolverInfo.prototype.constructor = btContactSolverInfo;
        btContactSolverInfo.prototype.__class__ = btContactSolverInfo;
        btContactSolverInfo.__cache__ = {};
        Module["btContactSolverInfo"] = btContactSolverInfo;
        btContactSolverInfo.prototype["get_m_splitImpulse"] = btContactSolverInfo.prototype.get_m_splitImpulse = function() {
          var self = this.ptr;
          return !!_emscripten_bind_btContactSolverInfo_get_m_splitImpulse_0(self);
        };
        btContactSolverInfo.prototype["set_m_splitImpulse"] = btContactSolverInfo.prototype.set_m_splitImpulse = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btContactSolverInfo_set_m_splitImpulse_1(self, arg0);
        };
        btContactSolverInfo.prototype["get_m_splitImpulsePenetrationThreshold"] = btContactSolverInfo.prototype.get_m_splitImpulsePenetrationThreshold = function() {
          var self = this.ptr;
          return _emscripten_bind_btContactSolverInfo_get_m_splitImpulsePenetrationThreshold_0(self);
        };
        btContactSolverInfo.prototype["set_m_splitImpulsePenetrationThreshold"] = btContactSolverInfo.prototype.set_m_splitImpulsePenetrationThreshold = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btContactSolverInfo_set_m_splitImpulsePenetrationThreshold_1(self, arg0);
        };
        btContactSolverInfo.prototype["__destroy__"] = btContactSolverInfo.prototype.__destroy__ = function() {
          var self = this.ptr;
          _emscripten_bind_btContactSolverInfo___destroy___0(self);
        };
        function btOverlappingPairCache() {
          throw "cannot construct a btOverlappingPairCache, no constructor in IDL";
        }
        btOverlappingPairCache.prototype = Object.create(WrapperObject.prototype);
        btOverlappingPairCache.prototype.constructor = btOverlappingPairCache;
        btOverlappingPairCache.prototype.__class__ = btOverlappingPairCache;
        btOverlappingPairCache.__cache__ = {};
        Module["btOverlappingPairCache"] = btOverlappingPairCache;
        btOverlappingPairCache.prototype["setInternalGhostPairCallback"] = btOverlappingPairCache.prototype.setInternalGhostPairCallback = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btOverlappingPairCache_setInternalGhostPairCallback_1(self, arg0);
        };
        btOverlappingPairCache.prototype["__destroy__"] = btOverlappingPairCache.prototype.__destroy__ = function() {
          var self = this.ptr;
          _emscripten_bind_btOverlappingPairCache___destroy___0(self);
        };
        function btSphereShape(arg0) {
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          this.ptr = _emscripten_bind_btSphereShape_btSphereShape_1(arg0);
          getCache(btSphereShape)[this.ptr] = this;
        }
        btSphereShape.prototype = Object.create(btCollisionShape.prototype);
        btSphereShape.prototype.constructor = btSphereShape;
        btSphereShape.prototype.__class__ = btSphereShape;
        btSphereShape.__cache__ = {};
        Module["btSphereShape"] = btSphereShape;
        btSphereShape.prototype["setMargin"] = btSphereShape.prototype.setMargin = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btSphereShape_setMargin_1(self, arg0);
        };
        btSphereShape.prototype["getMargin"] = btSphereShape.prototype.getMargin = function() {
          var self = this.ptr;
          return _emscripten_bind_btSphereShape_getMargin_0(self);
        };
        btSphereShape.prototype["setLocalScaling"] = btSphereShape.prototype.setLocalScaling = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btSphereShape_setLocalScaling_1(self, arg0);
        };
        btSphereShape.prototype["calculateLocalInertia"] = btSphereShape.prototype.calculateLocalInertia = function(arg0, arg1) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          if (arg1 && typeof arg1 === "object")
            arg1 = arg1.ptr;
          _emscripten_bind_btSphereShape_calculateLocalInertia_2(self, arg0, arg1);
        };
        btSphereShape.prototype["__destroy__"] = btSphereShape.prototype.__destroy__ = function() {
          var self = this.ptr;
          _emscripten_bind_btSphereShape___destroy___0(self);
        };
        function btDefaultCollisionConstructionInfo() {
          this.ptr = _emscripten_bind_btDefaultCollisionConstructionInfo_btDefaultCollisionConstructionInfo_0();
          getCache(btDefaultCollisionConstructionInfo)[this.ptr] = this;
        }
        btDefaultCollisionConstructionInfo.prototype = Object.create(WrapperObject.prototype);
        btDefaultCollisionConstructionInfo.prototype.constructor = btDefaultCollisionConstructionInfo;
        btDefaultCollisionConstructionInfo.prototype.__class__ = btDefaultCollisionConstructionInfo;
        btDefaultCollisionConstructionInfo.__cache__ = {};
        Module["btDefaultCollisionConstructionInfo"] = btDefaultCollisionConstructionInfo;
        btDefaultCollisionConstructionInfo.prototype["__destroy__"] = btDefaultCollisionConstructionInfo.prototype.__destroy__ = function() {
          var self = this.ptr;
          _emscripten_bind_btDefaultCollisionConstructionInfo___destroy___0(self);
        };
        function btHingeConstraint(arg0, arg1, arg2, arg3, arg4, arg5, arg6) {
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          if (arg1 && typeof arg1 === "object")
            arg1 = arg1.ptr;
          if (arg2 && typeof arg2 === "object")
            arg2 = arg2.ptr;
          if (arg3 && typeof arg3 === "object")
            arg3 = arg3.ptr;
          if (arg4 && typeof arg4 === "object")
            arg4 = arg4.ptr;
          if (arg5 && typeof arg5 === "object")
            arg5 = arg5.ptr;
          if (arg6 && typeof arg6 === "object")
            arg6 = arg6.ptr;
          if (arg2 === void 0) {
            this.ptr = _emscripten_bind_btHingeConstraint_btHingeConstraint_2(arg0, arg1);
            getCache(btHingeConstraint)[this.ptr] = this;
            return;
          }
          if (arg3 === void 0) {
            this.ptr = _emscripten_bind_btHingeConstraint_btHingeConstraint_3(arg0, arg1, arg2);
            getCache(btHingeConstraint)[this.ptr] = this;
            return;
          }
          if (arg4 === void 0) {
            this.ptr = _emscripten_bind_btHingeConstraint_btHingeConstraint_4(arg0, arg1, arg2, arg3);
            getCache(btHingeConstraint)[this.ptr] = this;
            return;
          }
          if (arg5 === void 0) {
            this.ptr = _emscripten_bind_btHingeConstraint_btHingeConstraint_5(arg0, arg1, arg2, arg3, arg4);
            getCache(btHingeConstraint)[this.ptr] = this;
            return;
          }
          if (arg6 === void 0) {
            this.ptr = _emscripten_bind_btHingeConstraint_btHingeConstraint_6(arg0, arg1, arg2, arg3, arg4, arg5);
            getCache(btHingeConstraint)[this.ptr] = this;
            return;
          }
          this.ptr = _emscripten_bind_btHingeConstraint_btHingeConstraint_7(arg0, arg1, arg2, arg3, arg4, arg5, arg6);
          getCache(btHingeConstraint)[this.ptr] = this;
        }
        btHingeConstraint.prototype = Object.create(btTypedConstraint.prototype);
        btHingeConstraint.prototype.constructor = btHingeConstraint;
        btHingeConstraint.prototype.__class__ = btHingeConstraint;
        btHingeConstraint.__cache__ = {};
        Module["btHingeConstraint"] = btHingeConstraint;
        btHingeConstraint.prototype["setLimit"] = btHingeConstraint.prototype.setLimit = function(arg0, arg1, arg2, arg3, arg4) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          if (arg1 && typeof arg1 === "object")
            arg1 = arg1.ptr;
          if (arg2 && typeof arg2 === "object")
            arg2 = arg2.ptr;
          if (arg3 && typeof arg3 === "object")
            arg3 = arg3.ptr;
          if (arg4 && typeof arg4 === "object")
            arg4 = arg4.ptr;
          if (arg4 === void 0) {
            _emscripten_bind_btHingeConstraint_setLimit_4(self, arg0, arg1, arg2, arg3);
            return;
          }
          _emscripten_bind_btHingeConstraint_setLimit_5(self, arg0, arg1, arg2, arg3, arg4);
        };
        btHingeConstraint.prototype["enableAngularMotor"] = btHingeConstraint.prototype.enableAngularMotor = function(arg0, arg1, arg2) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          if (arg1 && typeof arg1 === "object")
            arg1 = arg1.ptr;
          if (arg2 && typeof arg2 === "object")
            arg2 = arg2.ptr;
          _emscripten_bind_btHingeConstraint_enableAngularMotor_3(self, arg0, arg1, arg2);
        };
        btHingeConstraint.prototype["enableFeedback"] = btHingeConstraint.prototype.enableFeedback = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btHingeConstraint_enableFeedback_1(self, arg0);
        };
        btHingeConstraint.prototype["getBreakingImpulseThreshold"] = btHingeConstraint.prototype.getBreakingImpulseThreshold = function() {
          var self = this.ptr;
          return _emscripten_bind_btHingeConstraint_getBreakingImpulseThreshold_0(self);
        };
        btHingeConstraint.prototype["setBreakingImpulseThreshold"] = btHingeConstraint.prototype.setBreakingImpulseThreshold = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btHingeConstraint_setBreakingImpulseThreshold_1(self, arg0);
        };
        btHingeConstraint.prototype["__destroy__"] = btHingeConstraint.prototype.__destroy__ = function() {
          var self = this.ptr;
          _emscripten_bind_btHingeConstraint___destroy___0(self);
        };
        function btConstraintSetting() {
          this.ptr = _emscripten_bind_btConstraintSetting_btConstraintSetting_0();
          getCache(btConstraintSetting)[this.ptr] = this;
        }
        btConstraintSetting.prototype = Object.create(WrapperObject.prototype);
        btConstraintSetting.prototype.constructor = btConstraintSetting;
        btConstraintSetting.prototype.__class__ = btConstraintSetting;
        btConstraintSetting.__cache__ = {};
        Module["btConstraintSetting"] = btConstraintSetting;
        btConstraintSetting.prototype["get_m_tau"] = btConstraintSetting.prototype.get_m_tau = function() {
          var self = this.ptr;
          return _emscripten_bind_btConstraintSetting_get_m_tau_0(self);
        };
        btConstraintSetting.prototype["set_m_tau"] = btConstraintSetting.prototype.set_m_tau = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btConstraintSetting_set_m_tau_1(self, arg0);
        };
        btConstraintSetting.prototype["get_m_damping"] = btConstraintSetting.prototype.get_m_damping = function() {
          var self = this.ptr;
          return _emscripten_bind_btConstraintSetting_get_m_damping_0(self);
        };
        btConstraintSetting.prototype["set_m_damping"] = btConstraintSetting.prototype.set_m_damping = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btConstraintSetting_set_m_damping_1(self, arg0);
        };
        btConstraintSetting.prototype["get_m_impulseClamp"] = btConstraintSetting.prototype.get_m_impulseClamp = function() {
          var self = this.ptr;
          return _emscripten_bind_btConstraintSetting_get_m_impulseClamp_0(self);
        };
        btConstraintSetting.prototype["set_m_impulseClamp"] = btConstraintSetting.prototype.set_m_impulseClamp = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btConstraintSetting_set_m_impulseClamp_1(self, arg0);
        };
        btConstraintSetting.prototype["__destroy__"] = btConstraintSetting.prototype.__destroy__ = function() {
          var self = this.ptr;
          _emscripten_bind_btConstraintSetting___destroy___0(self);
        };
        function btTranslationalLimitMotor2() {
          throw "cannot construct a btTranslationalLimitMotor2, no constructor in IDL";
        }
        btTranslationalLimitMotor2.prototype = Object.create(WrapperObject.prototype);
        btTranslationalLimitMotor2.prototype.constructor = btTranslationalLimitMotor2;
        btTranslationalLimitMotor2.prototype.__class__ = btTranslationalLimitMotor2;
        btTranslationalLimitMotor2.__cache__ = {};
        Module["btTranslationalLimitMotor2"] = btTranslationalLimitMotor2;
        btTranslationalLimitMotor2.prototype["get_m_currentLinearDiff"] = btTranslationalLimitMotor2.prototype.get_m_currentLinearDiff = function() {
          var self = this.ptr;
          return wrapPointer(_emscripten_bind_btTranslationalLimitMotor2_get_m_currentLinearDiff_0(self), btVector3);
        };
        btTranslationalLimitMotor2.prototype["set_m_currentLinearDiff"] = btTranslationalLimitMotor2.prototype.set_m_currentLinearDiff = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btTranslationalLimitMotor2_set_m_currentLinearDiff_1(self, arg0);
        };
        btTranslationalLimitMotor2.prototype["__destroy__"] = btTranslationalLimitMotor2.prototype.__destroy__ = function() {
          var self = this.ptr;
          _emscripten_bind_btTranslationalLimitMotor2___destroy___0(self);
        };
        function LocalShapeInfo() {
          throw "cannot construct a LocalShapeInfo, no constructor in IDL";
        }
        LocalShapeInfo.prototype = Object.create(WrapperObject.prototype);
        LocalShapeInfo.prototype.constructor = LocalShapeInfo;
        LocalShapeInfo.prototype.__class__ = LocalShapeInfo;
        LocalShapeInfo.__cache__ = {};
        Module["LocalShapeInfo"] = LocalShapeInfo;
        LocalShapeInfo.prototype["get_m_shapePart"] = LocalShapeInfo.prototype.get_m_shapePart = function() {
          var self = this.ptr;
          return _emscripten_bind_LocalShapeInfo_get_m_shapePart_0(self);
        };
        LocalShapeInfo.prototype["set_m_shapePart"] = LocalShapeInfo.prototype.set_m_shapePart = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_LocalShapeInfo_set_m_shapePart_1(self, arg0);
        };
        LocalShapeInfo.prototype["get_m_triangleIndex"] = LocalShapeInfo.prototype.get_m_triangleIndex = function() {
          var self = this.ptr;
          return _emscripten_bind_LocalShapeInfo_get_m_triangleIndex_0(self);
        };
        LocalShapeInfo.prototype["set_m_triangleIndex"] = LocalShapeInfo.prototype.set_m_triangleIndex = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_LocalShapeInfo_set_m_triangleIndex_1(self, arg0);
        };
        LocalShapeInfo.prototype["__destroy__"] = LocalShapeInfo.prototype.__destroy__ = function() {
          var self = this.ptr;
          _emscripten_bind_LocalShapeInfo___destroy___0(self);
        };
        function btConstraintSolver() {
          throw "cannot construct a btConstraintSolver, no constructor in IDL";
        }
        btConstraintSolver.prototype = Object.create(WrapperObject.prototype);
        btConstraintSolver.prototype.constructor = btConstraintSolver;
        btConstraintSolver.prototype.__class__ = btConstraintSolver;
        btConstraintSolver.__cache__ = {};
        Module["btConstraintSolver"] = btConstraintSolver;
        btConstraintSolver.prototype["__destroy__"] = btConstraintSolver.prototype.__destroy__ = function() {
          var self = this.ptr;
          _emscripten_bind_btConstraintSolver___destroy___0(self);
        };
        function btGeneric6DofSpringConstraint(arg0, arg1, arg2, arg3, arg4) {
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          if (arg1 && typeof arg1 === "object")
            arg1 = arg1.ptr;
          if (arg2 && typeof arg2 === "object")
            arg2 = arg2.ptr;
          if (arg3 && typeof arg3 === "object")
            arg3 = arg3.ptr;
          if (arg4 && typeof arg4 === "object")
            arg4 = arg4.ptr;
          if (arg3 === void 0) {
            this.ptr = _emscripten_bind_btGeneric6DofSpringConstraint_btGeneric6DofSpringConstraint_3(arg0, arg1, arg2);
            getCache(btGeneric6DofSpringConstraint)[this.ptr] = this;
            return;
          }
          if (arg4 === void 0) {
            this.ptr = _emscripten_bind_btGeneric6DofSpringConstraint_btGeneric6DofSpringConstraint_4(arg0, arg1, arg2, arg3);
            getCache(btGeneric6DofSpringConstraint)[this.ptr] = this;
            return;
          }
          this.ptr = _emscripten_bind_btGeneric6DofSpringConstraint_btGeneric6DofSpringConstraint_5(arg0, arg1, arg2, arg3, arg4);
          getCache(btGeneric6DofSpringConstraint)[this.ptr] = this;
        }
        btGeneric6DofSpringConstraint.prototype = Object.create(btGeneric6DofConstraint.prototype);
        btGeneric6DofSpringConstraint.prototype.constructor = btGeneric6DofSpringConstraint;
        btGeneric6DofSpringConstraint.prototype.__class__ = btGeneric6DofSpringConstraint;
        btGeneric6DofSpringConstraint.__cache__ = {};
        Module["btGeneric6DofSpringConstraint"] = btGeneric6DofSpringConstraint;
        btGeneric6DofSpringConstraint.prototype["enableSpring"] = btGeneric6DofSpringConstraint.prototype.enableSpring = function(arg0, arg1) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          if (arg1 && typeof arg1 === "object")
            arg1 = arg1.ptr;
          _emscripten_bind_btGeneric6DofSpringConstraint_enableSpring_2(self, arg0, arg1);
        };
        btGeneric6DofSpringConstraint.prototype["setStiffness"] = btGeneric6DofSpringConstraint.prototype.setStiffness = function(arg0, arg1) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          if (arg1 && typeof arg1 === "object")
            arg1 = arg1.ptr;
          _emscripten_bind_btGeneric6DofSpringConstraint_setStiffness_2(self, arg0, arg1);
        };
        btGeneric6DofSpringConstraint.prototype["setDamping"] = btGeneric6DofSpringConstraint.prototype.setDamping = function(arg0, arg1) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          if (arg1 && typeof arg1 === "object")
            arg1 = arg1.ptr;
          _emscripten_bind_btGeneric6DofSpringConstraint_setDamping_2(self, arg0, arg1);
        };
        btGeneric6DofSpringConstraint.prototype["setLinearLowerLimit"] = btGeneric6DofSpringConstraint.prototype.setLinearLowerLimit = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btGeneric6DofSpringConstraint_setLinearLowerLimit_1(self, arg0);
        };
        btGeneric6DofSpringConstraint.prototype["setLinearUpperLimit"] = btGeneric6DofSpringConstraint.prototype.setLinearUpperLimit = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btGeneric6DofSpringConstraint_setLinearUpperLimit_1(self, arg0);
        };
        btGeneric6DofSpringConstraint.prototype["setAngularLowerLimit"] = btGeneric6DofSpringConstraint.prototype.setAngularLowerLimit = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btGeneric6DofSpringConstraint_setAngularLowerLimit_1(self, arg0);
        };
        btGeneric6DofSpringConstraint.prototype["setAngularUpperLimit"] = btGeneric6DofSpringConstraint.prototype.setAngularUpperLimit = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btGeneric6DofSpringConstraint_setAngularUpperLimit_1(self, arg0);
        };
        btGeneric6DofSpringConstraint.prototype["enableFeedback"] = btGeneric6DofSpringConstraint.prototype.enableFeedback = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btGeneric6DofSpringConstraint_enableFeedback_1(self, arg0);
        };
        btGeneric6DofSpringConstraint.prototype["getBreakingImpulseThreshold"] = btGeneric6DofSpringConstraint.prototype.getBreakingImpulseThreshold = function() {
          var self = this.ptr;
          return _emscripten_bind_btGeneric6DofSpringConstraint_getBreakingImpulseThreshold_0(self);
        };
        btGeneric6DofSpringConstraint.prototype["setBreakingImpulseThreshold"] = btGeneric6DofSpringConstraint.prototype.setBreakingImpulseThreshold = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btGeneric6DofSpringConstraint_setBreakingImpulseThreshold_1(self, arg0);
        };
        btGeneric6DofSpringConstraint.prototype["__destroy__"] = btGeneric6DofSpringConstraint.prototype.__destroy__ = function() {
          var self = this.ptr;
          _emscripten_bind_btGeneric6DofSpringConstraint___destroy___0(self);
        };
        function LocalConvexResult(arg0, arg1, arg2, arg3, arg4) {
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          if (arg1 && typeof arg1 === "object")
            arg1 = arg1.ptr;
          if (arg2 && typeof arg2 === "object")
            arg2 = arg2.ptr;
          if (arg3 && typeof arg3 === "object")
            arg3 = arg3.ptr;
          if (arg4 && typeof arg4 === "object")
            arg4 = arg4.ptr;
          this.ptr = _emscripten_bind_LocalConvexResult_LocalConvexResult_5(arg0, arg1, arg2, arg3, arg4);
          getCache(LocalConvexResult)[this.ptr] = this;
        }
        LocalConvexResult.prototype = Object.create(WrapperObject.prototype);
        LocalConvexResult.prototype.constructor = LocalConvexResult;
        LocalConvexResult.prototype.__class__ = LocalConvexResult;
        LocalConvexResult.__cache__ = {};
        Module["LocalConvexResult"] = LocalConvexResult;
        LocalConvexResult.prototype["get_m_hitCollisionObject"] = LocalConvexResult.prototype.get_m_hitCollisionObject = function() {
          var self = this.ptr;
          return wrapPointer(_emscripten_bind_LocalConvexResult_get_m_hitCollisionObject_0(self), btCollisionObject);
        };
        LocalConvexResult.prototype["set_m_hitCollisionObject"] = LocalConvexResult.prototype.set_m_hitCollisionObject = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_LocalConvexResult_set_m_hitCollisionObject_1(self, arg0);
        };
        LocalConvexResult.prototype["get_m_localShapeInfo"] = LocalConvexResult.prototype.get_m_localShapeInfo = function() {
          var self = this.ptr;
          return wrapPointer(_emscripten_bind_LocalConvexResult_get_m_localShapeInfo_0(self), LocalShapeInfo);
        };
        LocalConvexResult.prototype["set_m_localShapeInfo"] = LocalConvexResult.prototype.set_m_localShapeInfo = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_LocalConvexResult_set_m_localShapeInfo_1(self, arg0);
        };
        LocalConvexResult.prototype["get_m_hitNormalLocal"] = LocalConvexResult.prototype.get_m_hitNormalLocal = function() {
          var self = this.ptr;
          return wrapPointer(_emscripten_bind_LocalConvexResult_get_m_hitNormalLocal_0(self), btVector3);
        };
        LocalConvexResult.prototype["set_m_hitNormalLocal"] = LocalConvexResult.prototype.set_m_hitNormalLocal = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_LocalConvexResult_set_m_hitNormalLocal_1(self, arg0);
        };
        LocalConvexResult.prototype["get_m_hitPointLocal"] = LocalConvexResult.prototype.get_m_hitPointLocal = function() {
          var self = this.ptr;
          return wrapPointer(_emscripten_bind_LocalConvexResult_get_m_hitPointLocal_0(self), btVector3);
        };
        LocalConvexResult.prototype["set_m_hitPointLocal"] = LocalConvexResult.prototype.set_m_hitPointLocal = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_LocalConvexResult_set_m_hitPointLocal_1(self, arg0);
        };
        LocalConvexResult.prototype["get_m_hitFraction"] = LocalConvexResult.prototype.get_m_hitFraction = function() {
          var self = this.ptr;
          return _emscripten_bind_LocalConvexResult_get_m_hitFraction_0(self);
        };
        LocalConvexResult.prototype["set_m_hitFraction"] = LocalConvexResult.prototype.set_m_hitFraction = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_LocalConvexResult_set_m_hitFraction_1(self, arg0);
        };
        LocalConvexResult.prototype["__destroy__"] = LocalConvexResult.prototype.__destroy__ = function() {
          var self = this.ptr;
          _emscripten_bind_LocalConvexResult___destroy___0(self);
        };
        function btOverlappingPairCallback() {
          throw "cannot construct a btOverlappingPairCallback, no constructor in IDL";
        }
        btOverlappingPairCallback.prototype = Object.create(WrapperObject.prototype);
        btOverlappingPairCallback.prototype.constructor = btOverlappingPairCallback;
        btOverlappingPairCallback.prototype.__class__ = btOverlappingPairCallback;
        btOverlappingPairCallback.__cache__ = {};
        Module["btOverlappingPairCallback"] = btOverlappingPairCallback;
        btOverlappingPairCallback.prototype["__destroy__"] = btOverlappingPairCallback.prototype.__destroy__ = function() {
          var self = this.ptr;
          _emscripten_bind_btOverlappingPairCallback___destroy___0(self);
        };
        function btRigidBody(arg0) {
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          this.ptr = _emscripten_bind_btRigidBody_btRigidBody_1(arg0);
          getCache(btRigidBody)[this.ptr] = this;
        }
        btRigidBody.prototype = Object.create(btCollisionObject.prototype);
        btRigidBody.prototype.constructor = btRigidBody;
        btRigidBody.prototype.__class__ = btRigidBody;
        btRigidBody.__cache__ = {};
        Module["btRigidBody"] = btRigidBody;
        btRigidBody.prototype["getCenterOfMassTransform"] = btRigidBody.prototype.getCenterOfMassTransform = function() {
          var self = this.ptr;
          return wrapPointer(_emscripten_bind_btRigidBody_getCenterOfMassTransform_0(self), btTransform);
        };
        btRigidBody.prototype["setCenterOfMassTransform"] = btRigidBody.prototype.setCenterOfMassTransform = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btRigidBody_setCenterOfMassTransform_1(self, arg0);
        };
        btRigidBody.prototype["setSleepingThresholds"] = btRigidBody.prototype.setSleepingThresholds = function(arg0, arg1) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          if (arg1 && typeof arg1 === "object")
            arg1 = arg1.ptr;
          _emscripten_bind_btRigidBody_setSleepingThresholds_2(self, arg0, arg1);
        };
        btRigidBody.prototype["setDamping"] = btRigidBody.prototype.setDamping = function(arg0, arg1) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          if (arg1 && typeof arg1 === "object")
            arg1 = arg1.ptr;
          _emscripten_bind_btRigidBody_setDamping_2(self, arg0, arg1);
        };
        btRigidBody.prototype["setMassProps"] = btRigidBody.prototype.setMassProps = function(arg0, arg1) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          if (arg1 && typeof arg1 === "object")
            arg1 = arg1.ptr;
          _emscripten_bind_btRigidBody_setMassProps_2(self, arg0, arg1);
        };
        btRigidBody.prototype["setLinearFactor"] = btRigidBody.prototype.setLinearFactor = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btRigidBody_setLinearFactor_1(self, arg0);
        };
        btRigidBody.prototype["applyTorque"] = btRigidBody.prototype.applyTorque = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btRigidBody_applyTorque_1(self, arg0);
        };
        btRigidBody.prototype["applyForce"] = btRigidBody.prototype.applyForce = function(arg0, arg1) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          if (arg1 && typeof arg1 === "object")
            arg1 = arg1.ptr;
          _emscripten_bind_btRigidBody_applyForce_2(self, arg0, arg1);
        };
        btRigidBody.prototype["applyCentralForce"] = btRigidBody.prototype.applyCentralForce = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btRigidBody_applyCentralForce_1(self, arg0);
        };
        btRigidBody.prototype["applyTorqueImpulse"] = btRigidBody.prototype.applyTorqueImpulse = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btRigidBody_applyTorqueImpulse_1(self, arg0);
        };
        btRigidBody.prototype["applyImpulse"] = btRigidBody.prototype.applyImpulse = function(arg0, arg1) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          if (arg1 && typeof arg1 === "object")
            arg1 = arg1.ptr;
          _emscripten_bind_btRigidBody_applyImpulse_2(self, arg0, arg1);
        };
        btRigidBody.prototype["applyCentralImpulse"] = btRigidBody.prototype.applyCentralImpulse = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btRigidBody_applyCentralImpulse_1(self, arg0);
        };
        btRigidBody.prototype["updateInertiaTensor"] = btRigidBody.prototype.updateInertiaTensor = function() {
          var self = this.ptr;
          _emscripten_bind_btRigidBody_updateInertiaTensor_0(self);
        };
        btRigidBody.prototype["getLinearVelocity"] = btRigidBody.prototype.getLinearVelocity = function() {
          var self = this.ptr;
          return wrapPointer(_emscripten_bind_btRigidBody_getLinearVelocity_0(self), btVector3);
        };
        btRigidBody.prototype["getAngularVelocity"] = btRigidBody.prototype.getAngularVelocity = function() {
          var self = this.ptr;
          return wrapPointer(_emscripten_bind_btRigidBody_getAngularVelocity_0(self), btVector3);
        };
        btRigidBody.prototype["setLinearVelocity"] = btRigidBody.prototype.setLinearVelocity = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btRigidBody_setLinearVelocity_1(self, arg0);
        };
        btRigidBody.prototype["setAngularVelocity"] = btRigidBody.prototype.setAngularVelocity = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btRigidBody_setAngularVelocity_1(self, arg0);
        };
        btRigidBody.prototype["getMotionState"] = btRigidBody.prototype.getMotionState = function() {
          var self = this.ptr;
          return wrapPointer(_emscripten_bind_btRigidBody_getMotionState_0(self), btMotionState);
        };
        btRigidBody.prototype["setMotionState"] = btRigidBody.prototype.setMotionState = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btRigidBody_setMotionState_1(self, arg0);
        };
        btRigidBody.prototype["setAngularFactor"] = btRigidBody.prototype.setAngularFactor = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btRigidBody_setAngularFactor_1(self, arg0);
        };
        btRigidBody.prototype["upcast"] = btRigidBody.prototype.upcast = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          return wrapPointer(_emscripten_bind_btRigidBody_upcast_1(self, arg0), btRigidBody);
        };
        btRigidBody.prototype["setAnisotropicFriction"] = btRigidBody.prototype.setAnisotropicFriction = function(arg0, arg1) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          if (arg1 && typeof arg1 === "object")
            arg1 = arg1.ptr;
          _emscripten_bind_btRigidBody_setAnisotropicFriction_2(self, arg0, arg1);
        };
        btRigidBody.prototype["getCollisionShape"] = btRigidBody.prototype.getCollisionShape = function() {
          var self = this.ptr;
          return wrapPointer(_emscripten_bind_btRigidBody_getCollisionShape_0(self), btCollisionShape);
        };
        btRigidBody.prototype["setContactProcessingThreshold"] = btRigidBody.prototype.setContactProcessingThreshold = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btRigidBody_setContactProcessingThreshold_1(self, arg0);
        };
        btRigidBody.prototype["setActivationState"] = btRigidBody.prototype.setActivationState = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btRigidBody_setActivationState_1(self, arg0);
        };
        btRigidBody.prototype["forceActivationState"] = btRigidBody.prototype.forceActivationState = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btRigidBody_forceActivationState_1(self, arg0);
        };
        btRigidBody.prototype["activate"] = btRigidBody.prototype.activate = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          if (arg0 === void 0) {
            _emscripten_bind_btRigidBody_activate_0(self);
            return;
          }
          _emscripten_bind_btRigidBody_activate_1(self, arg0);
        };
        btRigidBody.prototype["isActive"] = btRigidBody.prototype.isActive = function() {
          var self = this.ptr;
          return !!_emscripten_bind_btRigidBody_isActive_0(self);
        };
        btRigidBody.prototype["isKinematicObject"] = btRigidBody.prototype.isKinematicObject = function() {
          var self = this.ptr;
          return !!_emscripten_bind_btRigidBody_isKinematicObject_0(self);
        };
        btRigidBody.prototype["setRestitution"] = btRigidBody.prototype.setRestitution = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btRigidBody_setRestitution_1(self, arg0);
        };
        btRigidBody.prototype["setFriction"] = btRigidBody.prototype.setFriction = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btRigidBody_setFriction_1(self, arg0);
        };
        btRigidBody.prototype["setRollingFriction"] = btRigidBody.prototype.setRollingFriction = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btRigidBody_setRollingFriction_1(self, arg0);
        };
        btRigidBody.prototype["getWorldTransform"] = btRigidBody.prototype.getWorldTransform = function() {
          var self = this.ptr;
          return wrapPointer(_emscripten_bind_btRigidBody_getWorldTransform_0(self), btTransform);
        };
        btRigidBody.prototype["getCollisionFlags"] = btRigidBody.prototype.getCollisionFlags = function() {
          var self = this.ptr;
          return _emscripten_bind_btRigidBody_getCollisionFlags_0(self);
        };
        btRigidBody.prototype["setCollisionFlags"] = btRigidBody.prototype.setCollisionFlags = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btRigidBody_setCollisionFlags_1(self, arg0);
        };
        btRigidBody.prototype["setWorldTransform"] = btRigidBody.prototype.setWorldTransform = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btRigidBody_setWorldTransform_1(self, arg0);
        };
        btRigidBody.prototype["setCollisionShape"] = btRigidBody.prototype.setCollisionShape = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btRigidBody_setCollisionShape_1(self, arg0);
        };
        btRigidBody.prototype["setCcdMotionThreshold"] = btRigidBody.prototype.setCcdMotionThreshold = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btRigidBody_setCcdMotionThreshold_1(self, arg0);
        };
        btRigidBody.prototype["setCcdSweptSphereRadius"] = btRigidBody.prototype.setCcdSweptSphereRadius = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btRigidBody_setCcdSweptSphereRadius_1(self, arg0);
        };
        btRigidBody.prototype["__destroy__"] = btRigidBody.prototype.__destroy__ = function() {
          var self = this.ptr;
          _emscripten_bind_btRigidBody___destroy___0(self);
        };
        function btCylinderShapeX(arg0) {
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          this.ptr = _emscripten_bind_btCylinderShapeX_btCylinderShapeX_1(arg0);
          getCache(btCylinderShapeX)[this.ptr] = this;
        }
        btCylinderShapeX.prototype = Object.create(btCylinderShape.prototype);
        btCylinderShapeX.prototype.constructor = btCylinderShapeX;
        btCylinderShapeX.prototype.__class__ = btCylinderShapeX;
        btCylinderShapeX.__cache__ = {};
        Module["btCylinderShapeX"] = btCylinderShapeX;
        btCylinderShapeX.prototype["setMargin"] = btCylinderShapeX.prototype.setMargin = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btCylinderShapeX_setMargin_1(self, arg0);
        };
        btCylinderShapeX.prototype["getMargin"] = btCylinderShapeX.prototype.getMargin = function() {
          var self = this.ptr;
          return _emscripten_bind_btCylinderShapeX_getMargin_0(self);
        };
        btCylinderShapeX.prototype["setLocalScaling"] = btCylinderShapeX.prototype.setLocalScaling = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btCylinderShapeX_setLocalScaling_1(self, arg0);
        };
        btCylinderShapeX.prototype["calculateLocalInertia"] = btCylinderShapeX.prototype.calculateLocalInertia = function(arg0, arg1) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          if (arg1 && typeof arg1 === "object")
            arg1 = arg1.ptr;
          _emscripten_bind_btCylinderShapeX_calculateLocalInertia_2(self, arg0, arg1);
        };
        btCylinderShapeX.prototype["__destroy__"] = btCylinderShapeX.prototype.__destroy__ = function() {
          var self = this.ptr;
          _emscripten_bind_btCylinderShapeX___destroy___0(self);
        };
        function btCylinderShapeZ(arg0) {
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          this.ptr = _emscripten_bind_btCylinderShapeZ_btCylinderShapeZ_1(arg0);
          getCache(btCylinderShapeZ)[this.ptr] = this;
        }
        btCylinderShapeZ.prototype = Object.create(btCylinderShape.prototype);
        btCylinderShapeZ.prototype.constructor = btCylinderShapeZ;
        btCylinderShapeZ.prototype.__class__ = btCylinderShapeZ;
        btCylinderShapeZ.__cache__ = {};
        Module["btCylinderShapeZ"] = btCylinderShapeZ;
        btCylinderShapeZ.prototype["setMargin"] = btCylinderShapeZ.prototype.setMargin = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btCylinderShapeZ_setMargin_1(self, arg0);
        };
        btCylinderShapeZ.prototype["getMargin"] = btCylinderShapeZ.prototype.getMargin = function() {
          var self = this.ptr;
          return _emscripten_bind_btCylinderShapeZ_getMargin_0(self);
        };
        btCylinderShapeZ.prototype["setLocalScaling"] = btCylinderShapeZ.prototype.setLocalScaling = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btCylinderShapeZ_setLocalScaling_1(self, arg0);
        };
        btCylinderShapeZ.prototype["calculateLocalInertia"] = btCylinderShapeZ.prototype.calculateLocalInertia = function(arg0, arg1) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          if (arg1 && typeof arg1 === "object")
            arg1 = arg1.ptr;
          _emscripten_bind_btCylinderShapeZ_calculateLocalInertia_2(self, arg0, arg1);
        };
        btCylinderShapeZ.prototype["__destroy__"] = btCylinderShapeZ.prototype.__destroy__ = function() {
          var self = this.ptr;
          _emscripten_bind_btCylinderShapeZ___destroy___0(self);
        };
        function btTransform(arg0, arg1) {
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          if (arg1 && typeof arg1 === "object")
            arg1 = arg1.ptr;
          if (arg0 === void 0) {
            this.ptr = _emscripten_bind_btTransform_btTransform_0();
            getCache(btTransform)[this.ptr] = this;
            return;
          }
          if (arg1 === void 0) {
            this.ptr = _emscripten_bind_btTransform_btTransform_1(arg0);
            getCache(btTransform)[this.ptr] = this;
            return;
          }
          this.ptr = _emscripten_bind_btTransform_btTransform_2(arg0, arg1);
          getCache(btTransform)[this.ptr] = this;
        }
        btTransform.prototype = Object.create(WrapperObject.prototype);
        btTransform.prototype.constructor = btTransform;
        btTransform.prototype.__class__ = btTransform;
        btTransform.__cache__ = {};
        Module["btTransform"] = btTransform;
        btTransform.prototype["setIdentity"] = btTransform.prototype.setIdentity = function() {
          var self = this.ptr;
          _emscripten_bind_btTransform_setIdentity_0(self);
        };
        btTransform.prototype["setOrigin"] = btTransform.prototype.setOrigin = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btTransform_setOrigin_1(self, arg0);
        };
        btTransform.prototype["setRotation"] = btTransform.prototype.setRotation = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btTransform_setRotation_1(self, arg0);
        };
        btTransform.prototype["getOrigin"] = btTransform.prototype.getOrigin = function() {
          var self = this.ptr;
          return wrapPointer(_emscripten_bind_btTransform_getOrigin_0(self), btVector3);
        };
        btTransform.prototype["getRotation"] = btTransform.prototype.getRotation = function() {
          var self = this.ptr;
          return wrapPointer(_emscripten_bind_btTransform_getRotation_0(self), btQuaternion);
        };
        btTransform.prototype["getBasis"] = btTransform.prototype.getBasis = function() {
          var self = this.ptr;
          return wrapPointer(_emscripten_bind_btTransform_getBasis_0(self), btMatrix3x3);
        };
        btTransform.prototype["__destroy__"] = btTransform.prototype.__destroy__ = function() {
          var self = this.ptr;
          _emscripten_bind_btTransform___destroy___0(self);
        };
        function btRaycastVehicle(arg0, arg1, arg2) {
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          if (arg1 && typeof arg1 === "object")
            arg1 = arg1.ptr;
          if (arg2 && typeof arg2 === "object")
            arg2 = arg2.ptr;
          this.ptr = _emscripten_bind_btRaycastVehicle_btRaycastVehicle_3(arg0, arg1, arg2);
          getCache(btRaycastVehicle)[this.ptr] = this;
        }
        btRaycastVehicle.prototype = Object.create(btActionInterface.prototype);
        btRaycastVehicle.prototype.constructor = btRaycastVehicle;
        btRaycastVehicle.prototype.__class__ = btRaycastVehicle;
        btRaycastVehicle.__cache__ = {};
        Module["btRaycastVehicle"] = btRaycastVehicle;
        btRaycastVehicle.prototype["applyEngineForce"] = btRaycastVehicle.prototype.applyEngineForce = function(arg0, arg1) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          if (arg1 && typeof arg1 === "object")
            arg1 = arg1.ptr;
          _emscripten_bind_btRaycastVehicle_applyEngineForce_2(self, arg0, arg1);
        };
        btRaycastVehicle.prototype["setSteeringValue"] = btRaycastVehicle.prototype.setSteeringValue = function(arg0, arg1) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          if (arg1 && typeof arg1 === "object")
            arg1 = arg1.ptr;
          _emscripten_bind_btRaycastVehicle_setSteeringValue_2(self, arg0, arg1);
        };
        btRaycastVehicle.prototype["getWheelTransformWS"] = btRaycastVehicle.prototype.getWheelTransformWS = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          return wrapPointer(_emscripten_bind_btRaycastVehicle_getWheelTransformWS_1(self, arg0), btTransform);
        };
        btRaycastVehicle.prototype["updateWheelTransform"] = btRaycastVehicle.prototype.updateWheelTransform = function(arg0, arg1) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          if (arg1 && typeof arg1 === "object")
            arg1 = arg1.ptr;
          _emscripten_bind_btRaycastVehicle_updateWheelTransform_2(self, arg0, arg1);
        };
        btRaycastVehicle.prototype["addWheel"] = btRaycastVehicle.prototype.addWheel = function(arg0, arg1, arg2, arg3, arg4, arg5, arg6) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          if (arg1 && typeof arg1 === "object")
            arg1 = arg1.ptr;
          if (arg2 && typeof arg2 === "object")
            arg2 = arg2.ptr;
          if (arg3 && typeof arg3 === "object")
            arg3 = arg3.ptr;
          if (arg4 && typeof arg4 === "object")
            arg4 = arg4.ptr;
          if (arg5 && typeof arg5 === "object")
            arg5 = arg5.ptr;
          if (arg6 && typeof arg6 === "object")
            arg6 = arg6.ptr;
          return wrapPointer(_emscripten_bind_btRaycastVehicle_addWheel_7(self, arg0, arg1, arg2, arg3, arg4, arg5, arg6), btWheelInfo);
        };
        btRaycastVehicle.prototype["getNumWheels"] = btRaycastVehicle.prototype.getNumWheels = function() {
          var self = this.ptr;
          return _emscripten_bind_btRaycastVehicle_getNumWheels_0(self);
        };
        btRaycastVehicle.prototype["getRigidBody"] = btRaycastVehicle.prototype.getRigidBody = function() {
          var self = this.ptr;
          return wrapPointer(_emscripten_bind_btRaycastVehicle_getRigidBody_0(self), btRigidBody);
        };
        btRaycastVehicle.prototype["getWheelInfo"] = btRaycastVehicle.prototype.getWheelInfo = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          return wrapPointer(_emscripten_bind_btRaycastVehicle_getWheelInfo_1(self, arg0), btWheelInfo);
        };
        btRaycastVehicle.prototype["setBrake"] = btRaycastVehicle.prototype.setBrake = function(arg0, arg1) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          if (arg1 && typeof arg1 === "object")
            arg1 = arg1.ptr;
          _emscripten_bind_btRaycastVehicle_setBrake_2(self, arg0, arg1);
        };
        btRaycastVehicle.prototype["setCoordinateSystem"] = btRaycastVehicle.prototype.setCoordinateSystem = function(arg0, arg1, arg2) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          if (arg1 && typeof arg1 === "object")
            arg1 = arg1.ptr;
          if (arg2 && typeof arg2 === "object")
            arg2 = arg2.ptr;
          _emscripten_bind_btRaycastVehicle_setCoordinateSystem_3(self, arg0, arg1, arg2);
        };
        btRaycastVehicle.prototype["__destroy__"] = btRaycastVehicle.prototype.__destroy__ = function() {
          var self = this.ptr;
          _emscripten_bind_btRaycastVehicle___destroy___0(self);
        };
        function btGhostPairCallback() {
          this.ptr = _emscripten_bind_btGhostPairCallback_btGhostPairCallback_0();
          getCache(btGhostPairCallback)[this.ptr] = this;
        }
        btGhostPairCallback.prototype = Object.create(WrapperObject.prototype);
        btGhostPairCallback.prototype.constructor = btGhostPairCallback;
        btGhostPairCallback.prototype.__class__ = btGhostPairCallback;
        btGhostPairCallback.__cache__ = {};
        Module["btGhostPairCallback"] = btGhostPairCallback;
        btGhostPairCallback.prototype["__destroy__"] = btGhostPairCallback.prototype.__destroy__ = function() {
          var self = this.ptr;
          _emscripten_bind_btGhostPairCallback___destroy___0(self);
        };
        function btRotationalLimitMotor2() {
          throw "cannot construct a btRotationalLimitMotor2, no constructor in IDL";
        }
        btRotationalLimitMotor2.prototype = Object.create(WrapperObject.prototype);
        btRotationalLimitMotor2.prototype.constructor = btRotationalLimitMotor2;
        btRotationalLimitMotor2.prototype.__class__ = btRotationalLimitMotor2;
        btRotationalLimitMotor2.__cache__ = {};
        Module["btRotationalLimitMotor2"] = btRotationalLimitMotor2;
        btRotationalLimitMotor2.prototype["get_m_currentPosition"] = btRotationalLimitMotor2.prototype.get_m_currentPosition = function() {
          var self = this.ptr;
          return _emscripten_bind_btRotationalLimitMotor2_get_m_currentPosition_0(self);
        };
        btRotationalLimitMotor2.prototype["set_m_currentPosition"] = btRotationalLimitMotor2.prototype.set_m_currentPosition = function(arg0) {
          var self = this.ptr;
          if (arg0 && typeof arg0 === "object")
            arg0 = arg0.ptr;
          _emscripten_bind_btRotationalLimitMotor2_set_m_currentPosition_1(self, arg0);
        };
        btRotationalLimitMotor2.prototype["__destroy__"] = btRotationalLimitMotor2.prototype.__destroy__ = function() {
          var self = this.ptr;
          _emscripten_bind_btRotationalLimitMotor2___destroy___0(self);
        };
        (function() {
          function setupEnums() {
            Module["RO_XYZ"] = _emscripten_enum_RotateOrder_RO_XYZ();
            Module["RO_XZY"] = _emscripten_enum_RotateOrder_RO_XZY();
            Module["RO_YXZ"] = _emscripten_enum_RotateOrder_RO_YXZ();
            Module["RO_YZX"] = _emscripten_enum_RotateOrder_RO_YZX();
            Module["RO_ZXY"] = _emscripten_enum_RotateOrder_RO_ZXY();
            Module["RO_ZYX"] = _emscripten_enum_RotateOrder_RO_ZYX();
          }
          if (Module["calledRun"])
            setupEnums();
          else
            addOnPreMain(setupEnums);
        })();
        return Module;
      };
      return Ammo();
    });
  }
});
export default require_ammo();
//# sourceMappingURL=ammo__js.js.map
